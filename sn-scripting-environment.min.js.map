{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_scripting_environment/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$devsnc_library_form_19_1_0\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__lodash_4_17_15\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/constants/ScriptingActions.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/utils.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$servicenow_now_record_common\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/resources/CatalogEnvironmentQuery.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/gFormActions.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/data/glideFormDataParser.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/resources/EnvironmentQuery.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/utils/seismic.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/formDataProvider.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__sn_uxpage_presource_18_0_5\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/sessionMessage/notificationProcessor.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/http/http.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/sessionMessage/notificationActions.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/GlideFormSectionManager.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/utils/uxf.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$devsnc_sn_scripted_modal\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/domain/domainProviderFactory.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/workspaceSimpleFormFactory.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/index.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/constants/CatalogConstants.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/clientScriptEnvironmentDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/data/uiPolicyParser.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/attachmentAclDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/declarativeFieldActionDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/formLayoutDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$devsnc_sn_catalog_form\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/dataLookupDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/currentUserDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/fieldValidatorDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/uiScriptDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/registeredModalDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/activityStreamDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$servicenow_now_activity_stream\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/ribbonDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/specialHandlingNoteDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/sessionMessageDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/dataSources/simpleFormLayoutDataSource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$devsnc_sn_declarative_actions\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/behaviors/clientScriptBehavior.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$servicenow_ui_metrics\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__sn_http_request_0_4_0\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/sessionMessage/SessionMessageRESTHandler.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/GlideFormEnvironment.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/DataLookup.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/GlideFormEnvironmentScope.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/environment/GlideClientScriptFactory.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/environment/GlideScopedScript.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/environment/GlideVariableScope.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/GlideUIActions.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/GlideUIAction.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/MessageLocalizer.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/extensionPoints/glideServiceCatalog.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/extensionPoints/alertIntelligence.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/extensionPoints/agentWorkspace.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/platformResources.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/glideRequest.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/GlideRecord.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/form/GlideFormBehaviorEventHandlerFactory.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/liveUpdate/liveUpdateActions.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/external \"__TECTONIC__$servicenow_ui_effect_amb\"","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/liveUpdate/datasources/UsersResource.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/liveUpdate/datasources/usersQuery.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/recordPageFetchHandlers.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/behaviors/simpleFormClientScriptBehavior.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/dataProviders/workspaceSimpleFormDataProvider.js","webpack://__TECTONIC__$devsnc_sn_scripting_environment/./src/main/sn/clientScript/effects/createValidateFormEffect.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$devsnc_library_form_19_1_0","__TECTONIC__lodash_4_17_15","WORKSPACE_FORM_ACTION","RECORD_NOTIFICATIONS_CHANGED","ADD_NOTIFICATIONS","CLEAR_NOTIFICATIONS","REMOVE_NOTIFICATION","REMOVE_NOTIFICATIONS","FORM_UPDATE_HEADER","SET_FIELDS_VALUE","EXECUTE_UI_ACTION","REFERENCE_INFO_CLICK","PHONE_ADDON_ACTION_CLICK","OPEN_PHONE","ITEM_SELECTED","WRAPPED_ACTION","TOGGLE_DOMAIN_SCOPE","RECORD_STATUS_CHANGED","RECORD_STATUS_UPDATED","RECORD_STATUS_INSERTED","RECORD_STATUS_DELETED","RECORD_STATUS_LIVEUPDATED","RECORD_STATUS_UNMODIFIED","RECORD_STATUS_MODIFIED","RECORD_STATUS_CLOSED","SCREEN_STATUS_CHANGED","EXTERNAL_ACTIONS","SEND_FORM_NOTIFICATION","CONTENT_ITEMS_SELECTED","QUERY_CHANGED","FORM_DATA_CONNECTED_ADD_NOTIFICATIONS","FORM_DATA_CONNECTED_REMOVE_NOTIFICATIONS","FORM_DATA_CONNECTED_CLEAR_NOTIFICATIONS","FORM_DATA_CONNECTED_SET_LOADING_STATE","FORM_DATA_CONNECTED_EXECUTE_UI_ACTION","FORM_DATA_CONNECTED_ITEM_SELECTED","FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED","FORM_DATA_CONNECTED_PREVIEW_RECORD","FORM_DATA_CONNECTED_WRAPPED_ACTION","FORM_DATA_CONNECTED_OPEN_PHONE","FORM_DATA_CONNECTED_DOMAIN_UPDATED","RIBBON_OPEN_PHONE","RIBBON_PREVIEW_RECORD","RIBBON_ADD_NOTIFICATIONS","RIBBON_REMOVE_NOTIFICATIONS","RIBBON_CLEAR_NOTIFICATIONS","RIBBON_ITEM_SELECTED","RIBBON_EXECUTED_UI_ACTION","RIBBON_WRAPPED_ACTION","createNestedQueryDataSource","dataSource","query","replace","variables","_","omit","props","hasViewVariable","indexOf","createFormDataSource","includeViewResolver","DATASOURCE_NAMES","header","tag","formDA","fieldDA","attachmentACL","uiAction","uxAction","clientScriptEnv","formLayout","dataLookup","currentUser","fieldValidator","uiScript","registeredModal","activityStream","ribbon","shn","sessionMessage","simpleFormLayout","DATASOURCE_FACOTORY_METHODS","createHeaderDataSource","createViewableRecordTagDataSource","createDeclarativeFormActionDataSource","createDeclarativeFieldActionDataSource","createAttachmentAclDataSource","createUIActionDataSource","createUxActionDataSource","createClientScriptEnvironmentDataSource","createFormLayoutDataSource","createDataLookupDataSource","createCurrentUserDataSource","createFieldValidatorDataSource","createUIScriptDataSource","createRegisteredModalDataSource","createActivityStreamDataSource","createRibbonDataSource","createSpecialHandlingNoteDataSource","createSessionMessageDataSource","createSimpleFormLayoutDataSource","DATASOURCE_KEYS","componentDataSources","DATASOURCE_TRANSFORM_ORDER","classicForm","createDataSourceFromName","queryPrefix","apply","isAvailable","ds","isNil","getProperty","READ_ONLY_FORM_VIEW","getDataSourcesForComponents","components","componentsDataSourcesMap","allDataSources","reduce","all","component","dataSourceNames","Array","from","Set","dataSources","isMissingWorkspaceView","view","isReadonly","state","isWhitelistedForEdit","readOnlyForm","properties","getConfig","formData","showActivityStreamInDetails","layout","isFormReadonly","isReadOnly","activityStreamVisible","visible","showActivityStream","showActivityStreamPane","isSectionMenuHidden","formSettings","disableCollapse","isSectionCollapseDisabled","showVariableEditor","readonly","canReadRecord","isValidRecord","isNewRecord","baseTable","isScriptableTable","lastErrorMessage","getFormModel","formModal","gForm","record","isAttachmentUploadDisabled","serializedChanges","JSON","stringify","serialize","encodedRecord","table","sysId","fields","formFieldValues","createTabRoutes","relatedLists","relatedItems","formModel","loadComponent","transformedRelatedItems","transformer","loadActionComponents","route","details","label","map","item","actionComponent","actionAttributes","filter","relatedList","listTitle","displayName","parentTable","parentRecordSysId","relatedListName","actionConfigId","refreshRequested","count","__TECTONIC__$servicenow_now_record_common","SC_SCRIPTS_QUERY_KEY","SC_POLICIES_QUERY_KEY","CATALOG_DATALOOKUP_FIELDS_KEY","VARIABLE_LAYOUT_QUERY_FRAGMENT","CATALOG_SCRIPTS_FRAGMENT","CATALOG_POLICIES_FRAGMENT","GlideElementVariables_ELEMENTS_QUERY_FRAGMENT","CATALOG_DATA_LOOKUP_QUERY_FRAGMENT","__TECTONIC__sn_translate","GFORM_ACTIONS","GFORM_SET_VALUE","GFORM_ADD_INFO_MESSAGE","GFORM_ADD_WARNING_MESSAGE","GFORM_ADD_ERROR_MESSAGE","GFORM_CLEAR_MESSAGE","GFORM_SHOW_FIELD_MESSAGE","GFORM_HIDE_FIELD_MESSAGE","GFORM_SHOW_RELATED_LISTS","GFORM_HIDE_RELATED_LISTS","GFORM_SHOW_RELATED_LIST","GFORM_HIDE_RELATED_LIST","GFORM_SET_VISIBLE","GFORM_SET_READ_ONLY","GFORM_SET_MANDATORY","GFORM_RELOAD","GFORM_SAVE","GFORM_SUBMIT","GFORM_CLEAR_OPTIONS","GFORM_ADD_OPTION","GFORM_REMOVE_OPTION","GFORM_ENABLE_ATTACHMENTS","GFORM_DISABLE_ATTACHMENTS","GFORM_INTERNAL_CLEAR_OPTION_STACK","GFORM_INTERNAL_SET_FIELD_INVALID","GFORM_INTERNAL_APPLY_TEMPLATE_VALUE","GFORM_INTERNAL_BATCH_ACTIONS","GFORM_SECTION_EXPANDED_STATE_CHANGED","GFORM_INTERNAL_SET_ADDITIONAL_FIELD_STATE","GFORM_VALIDATE","getGForm","glideEnvironment","prop","getProps","primitiveActionHandlers","getGFormAttributes","action","stopPropagation","payload","sectionName","expanded","GlideFormSectionManager","setSectionExpanded","host","setValue","validateSourceCSDB","fieldName","displayValue","addInfoMessage","message","addWarningMessage","addErrorMessage","clearMessages","reload","save","callback","meta","result","submit","submitActionName","showFieldMsg","type","hideFieldMsg","clearAll","showRelatedList","listTableName","hideRelatedList","showRelatedLists","hideRelatedLists","setVisible","isVisible","setReadOnly","setMandatory","mandatory","clearOptions","addOption","choiceValue","choiceLabel","choiceIndex","removeOption","enableAttachments","disableAttachments","$private","clearOptionStack","setFieldInvalid","isInvalid","fieldState","applyTemplateValue","propName","setAdditionalFieldState","dispatch","successActionName","errorActionName","validateFormAsync","then","catch","gFormActionHandlers","actionHandlers","actions","isArray","forEach","handler","parseCatalogFields","parseFieldGraphQLResponse","fieldValues","catalogFields","fieldStates","fieldElement","console","warn","attributes","split","acc","attr","log","parts","length","camelCase","canWrite","canRead","hidden","field","assign","sys_readonly","variable_name","variableName","_cat_variable","is_variable","maxLength","maxUnit","confirmationValue","_cascade_hidden","exception","tableName","fieldElements","annotations","values","fieldValue","valuesList","display_value_list","push","dictionary","internalType","dependentField","dependentTable","isMandatory","referringTable","referringRecordId","code","defaultCurrency","currencyCodes","country","countryCodes","contentType","dependentFieldLabel","dependentValue","displayValueWithPath","isReferenceScriptableTable","referenceError","messages","documentLabel","undefined","e","FIELD_VARIABLES_KEY","LAYOUT_QUERY_KEY","FORM_LAYOUT_QUERY_KEY","RECORD_VALUES_KEY","FIELD_ELEMENTS_KEY","FORMATTER_QUERY_KEY","ANNOTATIONS_QUERY_KEY","RELATED_LISTS_QUERY_KEY","GLOBALS_QUERY_KEY","LayoutQueryFragment","SCRIPTING_QUERY_KEY","UI_POLICIES_QUERY_KEY","CLIENT_SCRIPTS_QUERY_KEY","UI_ACTION_QUERY_KEY","GlideClientScriptingEnvironmentQueryFragment","UI_ACTIONS_KEY","UI_ACTION_FORM_ACTIONS","ACTION_NODES","DATALOOKUP_QUERY_KEY","UIActionQueryFragment","USER_QUERY_KEY","USER_QUERY_USER_KEY","DATALOOKUP_CONFIG_KEY","SESSION_MESSAGE_QUERY_KEY","DATALOOKUP_FIELDS_KEY","DataLookupFragment","SESSION_MESSAGE_CONFIG_KEY","ATTACHMENT_ACL_QUERY_KEY","SESSION_MESSAGE_NOTIFICATIONS_KEY","SessionMessageFragment","ATTACHMENT_ACL_ATTACHMENTS_KEY","AttachmentAclQueryFragment","QUERY_PREFIX","__TECTONIC__$servicenow_ui_core","isHostAction","id","nowId","componentId","getComponentId","nowIdAttr","getAttribute","componentIdAttr","fetchFormDataActions","getFetchActions","createUpdatingProperties","data","views","forcedViewName","workspaceConfigId","active","defaultTab","hideDetails","computedView","transformView","uiDomain","tableDisplayValue","domainElementData","recordValues","isEmpty","elm","dictionaryData","index","reference","recordValue","find","getRecordValueProps","getUiDomain","trueTable","newState","configurationItems","update","keys","sort","first","second","updatedData","transform","declarativeFieldActions","configurationItem","orderBy","sys_id","createGraphQLHandlers","updatingProperties","startedHandler","effect","succeededHandler","updateProperties","failedHandle","loading","error","defaultSelectableProps","selectable","getComponentsForForm","formComponents","without","getDataSourcesForForm","getQueryTemplate","createUpdateDataHelper","isClassicForm","createFormDataProvider","fetchingHandlers","selectableProps","fetchActionNames","createDataProvider","queryTemplate","variableParams","headerConfigId","ribbonConfigId","highlightedValueConfigId","viewRuleConfigId","additionProps","default","getParams","allViews","fetchQuery","domainQuerySet","domainQuery","moreParams","wsConfigSysId","join","graphqlHandlers","getRuntimeGraphQLArguments","__TECTONIC__sn_uxpage_presource_18_0_5","notificationProcessor","notifications","extras","text","sendRequestFactory","handleSessionMessages","atfHelper","ATFHelper","window","url","method","options","isInATFContext","params","getTransactionIds","headers","body","broadcastResourcesChanged","moreOptions","Promise","resolve","reject","http","request","response","httpResponse","encodeURIParameters","obj","a","k","encodeURIComponent","snHttpFactory","xsrfToken","g_ck","batching","updateNotificationsState","newNotifications","updateState","path","operation","findIndex","getType","dispatchNotificationsChanged","addNotificationsEffect","items","__sourceAction","clearNotificationsEffect","notificationAction","removeNotificationsEffect","updateNotifications","slice","g_Form","getSections","getSection","sections","section","caption","targetSection","events","propertyChange","UXF_CSDB_ID","for","__TECTONIC__$devsnc_sn_scripted_modal","DomainProviderFactory","currentDomainScope","domainDeterminationFieldName","domainScope","DOMAIN_SCOPES","RECORD","api","isDomainEnabledRecord","getDomainScope","toggleDomainScope","hasDomainChanged","provider","getApi","formFields","domainSeparation","domain","canExpandScope","SESSION","determiningFieldName","domainField","x","domainCheckResolve","domainCheckReject","domainCheckPromise","domainFieldIsReference","originalValue","getValue","getReference","gr","domainId","EVENT_CHANGE","EVENT_PROPERTY_CHANGE","PROPERTY_CHANGE_FIELD","PROPERTY_CHANGE_SECTION","unregisterHandler","handlers","fn","remove","_onChangeHandlers","_onPropertyChangeHandlers","_dirtyFields","_options","_firePropChange","prevValue","this","_fireValueChange","f","getDependentFields","depField","onlyDirtyFields","fromFields","shift","on","eventName","unregisterChangeHandler","unregisterPropChangeHandler","off","cleanUp","propertyName","propertyValue","noop","isInitialized","optionName","getFormModal","createClientScriptBehavior","createSimpleFormClientScriptBehavior","ATTRIBUTES_SEPARATOR","YES_NO","TEXTAREA","RADIO_CHOICES","LIKERT_SCALE","CHOICE_LIST","TEXTFIELD","CHECKBOX","REFERENCE","DATE","DATE_TIME","LABEL","BREAK","RENDER_MACRO","RENDER_UI_PAGE","WIDE_TEXTFIELD","RENDER_MACRO_WITH_LABEL","LOOKUP_SELECT_BOX","CONTAINER_START","CONTAINER_END","LIST_COLLECTOR","LOOKUP_RADIO_CHOICES","HTML","CONTAINER_SPLIT","MASKED","EMAIL","URL","IP_ADDRESS","DURATION","QUERY_FRAGMENT","createTransform","getValueOrDefault","globals","uiPolicies","uiPolicyParser","parseGraphQLResponse","clientScriptMessages","clientScripts","catalogClientScriptMessages","catalogClientScripts","catalogUiPolicies","loadedMessages","transformMessages","finalClientScripts","mergeWith","objValue","srcValue","concat","baseKey","createDataProviderDataSource","results","policy","parseGraphQLPolicy","convertFields","parseGraphQLPolicyActions","list_actions","parseGraphQLPolicyListActions","conditions","parseGraphQLPolicyConditions","onload","on_load","script_true","scriptTrue","script_false","scriptFalse","pre_evaluated","val","snakeCase","typename","condition","pre_evaluated_term","String","pre_evaluated_term_result","term","canCreate","DECLARATIVE_ACTIONS_QUERY_KEY","DECLARATIVE_ACTIONS_FIELD_QUERY_KEY","FIELD_DECLARATIVE_ACTIONS_KEY","FIELD_ACTIONS_KEY","mapper","glideFormDataParser","isValidFormatter","formatters","formatterName","isObject","transformFormatter","formattersByName","formatter","transformRelatedLists","displayLabel","targetTable","sourceTable","relatedField","related_field","timestamp","Date","now","transformFormFieldValues","declarativeUIActions","variablesLayout","declarativeUiActions","catalogVariablesList","massageVariableFields","transformFormFields","transformGlideVars","elements","glidevarSection","elementsData","element","captionDisplay","modelTable","glidevars","variable","transformSections","defaultSection","NaN","allSections","rows","newRows","accuRows","cols","newCols","accCols","col","newFields","accFields","toLowerCase","trasnformAnnotation","annotationsById","annotation","orgSysId","isTemplateComponentEnabled","newSysId","formTabs","orgFieldElements","el","glidevarElements","sectionSysId","order","CONTEXTUAL_LINK_NAMES","__TECTONIC__$devsnc_sn_catalog_form","LAYOUT_CONFIG_KEY","layoutConfigName","DEFAULT_FORM_LAYOUT_RATIOS","getDefaultFormLayoutType","getFormLayoutType","preference","parseInt","user","formLayoutConfig","preferences","layoutConfig","formLayoutType","formSizeRatio","sideBarSizeRatio","getFormLayoutConfig","templateVariables","FIELD_VALIDATOR_QUERY_KEY","FIELD_VALIDATOR_KEY","VALIDATION_SCRIPTS_KEY","fieldValidators","UI_SCRIPT_QUERY_KEY","UI_SCRIPT_KEY","SCRIPTS_KEY","scripts","REGISTERED_MODAL_QUERY_KEY","REGISTERED_MODAL_KEY","MODALS_KEY","modals","ENTRIES_KEY","ENTRIES_FIELD","FIELDS_KEY","FIELDS_FIELD","GET_STREAM","QUERY_METHOD","getQuery","getQueryFragments","stream","isNull","filterOptions","supplemental","ambChannels","userReferences","__TECTONIC__$servicenow_now_activity_stream","RIBBON_QUERY_KEY","RIBBON_CONFIG_KEY","ribbonWidgets","hasRibbonWidgets","encodedQuery","widgets","SHN_QUERY_KEY","SHN_ENABLE_KEY","SHN_TOTAL_MSGS_KEY","shnEnabled","totalMsg","enabled","process","__TECTONIC__$devsnc_sn_declarative_actions","COMPONENT_DOM_READY","actionTypes","COMPONENT_ERROR_THROWN","COMPONENT_TREE_RENDERED","COMPONENT_PROPERTY_CHANGED","getChildActivities","detailsContext","updatedChildTabs","detail","op","Map","activityLog","activities","activityMap","dispatchSetLoadingState","previewRecordInterceptors","before","context","coeffects","canExpandDomainScope","tabSelectedEffect","selectedTabName","nowRecordFormBlob","executeUiActionEffect","gUIActions","actionSysId","click","openPhoneEffect","phoneNumber","recordTable","recordSysId","recordDisplayValue","listDataFetchEffect","updatedRelatedListName","updatedRelatedListCount","relatedRelatedList","updatedRelatedList","eventHandler","onRelatedListChange","setFormValue","saveForm","saveAction","getActionByName","getSaveActionName","SnAppModal","registerModal","FieldSetWrapperModal","open","createFormModal","oldFormModal","SnFormModal","clone","loadModals","registeredModals","snFormModal","modal","registerGlideModal","namespace","initialize","postConfigurations","postScreenStatusChangedForHeaderInfo","primaryValue","primaryItem","secondaryItems","title","tooltipPreview","primaryTitle","secondaryContent","postFormUpdateHeader","getDomainProperties","nowDsDomainId","nowDsRecordId","nowDsRecordTable","nowDsDomainScope","createBlockInnerFormActionInterceptor","additionalEffects","executeEffectIfTrueEffect","shouldExecute","screenStatusChangeEffect","createReDispatchActionHandler","WeakMap","publicActions","selectableResult","getPropsTransformation","fetchDataActions","setupEventHandler","liveUpdate","onStateChange","onFormSubmit","submitResult","destroy","onChange","onPropChange","onLiveUpdated","setupGlideFormEnvironment","sendRequest","transformState","configureWithOptions","reloadForm","START","status","isDirty","setDataLoadSessionId","createGlideFormBehaviorEventHandler","createFetchingHandlers","glideEnvPromise","gEnv","initialState","isReloading","interactive","selectablePropsTransformer","setUpdateState","nowRecordCommonUiactionbar","nowRecordFormSectionColumnLayout","setUpdateProps","tabRoutes","detailsProps","shouldUpdate","daModel","FETCH_STATUS_UPDATED","time","domainProps","schema","combinedProps","formDataProvider","notificationActions","usersDataFetchActions","liveUpdateActions","previousValue","some","detailContext","shouldRefresh","glideEnvPromiseResolve","glideEnvPromiseReject","loadPlatformResources","resources","GlideFormEnvironment","UI_ACTION_BAR_ACTIONS","ACTION_CLICK","referenceInfoClick","refTable","referencetable","refSysId","dispatchPreviewRecord","shouldRender","propWorkspaceConfigId","PREVIEW_RECORD","transformPreviewRecordPayload","interceptors","partial","mark","getInteractionId","metrics","HERO_INTERACTIVE","__TECTONIC__$servicenow_ui_metrics","__TECTONIC__sn_http_request_0_4_0","NOTIFICATIONS_REST_PATH","dispatchNotifications","glideFormEnvironmentFactory","glideFormFactory","glideAjax","glideRecord","glideModalFactory","glideUser","uiScriptFactory","_scope","GlideFormEnvironmentScope","_env","_changeSubscriber","_propChangeSubscriber","_stateSubscriber","_submitSubscriber","_liveUpdatedSubscriber","_gForm","subscriber","set","environment","setScratchpad","G_SCRATCHPAD","setServiceCatalogAPI","setAlertIntelligenceAPI","setLocalizationMethods","uiActions","setGlideAPIs","setModal","setUser","setITSMWorkbench","setUIScripts","uiScripts","setNamespaces","setUIActions","formActions","redirect","setForm","changedFields","oldState","liveUpdatedFields","attachments","viewName","uniqueValue","_dataLookup","createDataLookup","G_FORM","setAgentWorkspaceAPI","customizer","createWithConfiguration","G_USER","G_MODAL","validationScripts","G_UI_SCRIPTS","g_env","getVariables","registerExtensionPoint","g_form","facade","setUserValue","G_UI_ACTIONS","G_AW","closeRecord","getTableName","dataLookupInProgress","lastSerializedForm","dataLookupFields","_process","oldValue","newValue","isLoading","serializedForm","definitions","sysparm_table","sysparm_sys_id","getSysId","encoded_record","_sendRequest","G_ITSM_WORKBENCH","G_SERVICE_CATALOG","GLIDE_AJAX","GLIDE_RECORD","GET_MESSAGE","GET_MESSAGES","FORMAT","NS_NOW","document","$","jQuery","$$","$j","angular","snmCabrillo","cabrillo","serviceCatalog","alertIntelligence","awApi","scratchPad","parsed","parse","preloadedMessages","messageLocalizer","MessageLocalizerFactory","localizedMessages","getMessage","getMessages","interpolate","alert","createAtfModalPromiseInterceptor","info","confirm","confirmDestroy","showFields","showFrame","size","height","autoCloseOn","ModalSize","MD","LG","XL","FW","includes","IFrameAutoCloseOn","EMPTY_BODY","customModals","OK","Cancel","userData","userId","g_user","changeSubscriber","propChangeSubscriber","stateSubscriber","liveUpdatedSubscriber","config","generateErrorMessages","uiMessageHandler","messageType","messageStr","submitPromises","useCatalogVariableFieldHandler","serializedExclusionList","MANDATORY_MESSAGE","FIELD_ERROR_MESSAGE","submitSubscriber","onClickFactory","GlideClientScriptFactory","scope","g_ui_actions","GlideUIActions","runOn","getEncodedRecord","userState","setRunningAction","script","clientScript","promise","invoke","finally","resetRunningAction","validateForm","g_itsm_workbench","version","GlideVariableScope","functionName","_name","functionParameters","_parameters","_scripts","GlideScopedScript","_id","_function","_script","_scopedFunction","locals","isLocalsArray","scopeVariables","args","scopedFunction","getArguments","scopeVariableNames","scopeArguments","getVariableNames","scopingFunction","Function","_variables","_variableNames","actionExecutor","formSubmitValidator","formSubmitExecutor","gFormAccessor","_currentAction","_inProgress","_uiActionsById","_uiActions","createUIAction","uxActionType","getActions","getAction","skipValidation","glideAction","UX_ACTION_TYPES","UI_ACTION","hasClientScript","getActiveActionName","_url","str","param","b","interpolationParam","translatedKey","onKeyFound","msgs","_resolve","missingKeys","msg","fetchKeys","fetchedMessages","loadMessages","allRequestedMessages","localizedValue","parentSysId","openCatalogItem","parent_table","parent_sys_id","openInsight","currentTable","currentSysId","domainProvider","sectionManager","openRecord","domainScopeProvider","assignPlatformResources","glideRecordFactory","glideRequest","glideRequestFactory","createElement","src","onerror","getElementsByTagName","appendChild","getAngularURL","parameters","fetchOptions","_applyOptions","post","dataType","responseText","responseXML","put","patch","Accept","orderByFields","orderByDescFields","limit","_callback","currentRow","recordSet","initialized","entries","xname","ignoreNames","sysparm_display_value","sysparm_query","getEncodedQuery","sysparm_limit","getLimit","_queryResponse","_queryErrorResponse","_logWarn","arguments","addQuery","_getResponse","next","change","changeValues","_logError","operator","oper","_next","hasNext","loadRow","getCurrentRow","each","records","queryString","qc","ec","q","addOrderBy","maxRows","current","display_value","operationToStatus","updateItems","changedFieldNames","changed","rest","newConfig","_setState","_prevRecordStatus","_updateState","_updateProps","_updatingState","stateName","matchCallBack","updatedItem","array","cloneDeep","copyObjectAtIndex","_handleRecordStatusChanged","screenStatusPayload","screenParams","hasUpdate","transformStatusChanged","_updateFormHeader","fieldNames","operationTransformer","type_metadata","RELOAD","gFormFields","updatedFields","listName","list","updatedRelatedLists","COMPONENT_CONNECTED","COMPONENT_DISCONNECTED","RECORD_WATCH_ACTIONS","LIVEUPDATE_KEY","RECORD_WATCHER_SUBSCRIPTION_CHANGED","RECORD_WATCHER_SUBSCRIBE_STARTED","RECORD_WATCHER_SUBSCRIBED","RECORD_WATCHER_SUBSCRIBE_FAILED","RECORD_WATCHER_UNSUBSCRIBED","RECORD_WATCHER_ITEM_CHANGED","recordWatcherHandler","createAmbSubscriptionEffect","subscribeStartedActionType","subscribeSucceededActionType","subscribeFailedActionType","unsubscribeSucceededActionType","messageReceivedActionType","getSubscriptionArgs","btoa","subscribe","isEqual","after","containerId","subscriptionId","effects","actionType","changes","changedTable","table_name","changedSysId","username","updatedRecord","applyLiveUpdate","__TECTONIC__$servicenow_ui_effect_amb","USER_FETCH_ACTIONS","STARTED","SUCCEEDED","FAILED","USER_DATA_KEY","createGraphQLActionHandlers","UsersQuery","USERS_QUERY_KEY","componentAdditionProps","componentPropsTransformer","__clientScriptApi","defaultTabOverride","hideDetailsOverride","hasErrorMessage","defaultDisplayedPane","defaultDividerPosition","additionState","model","attachment","sidebarActions","tagKey","newProps","tagTransformer","oldTagProps","tagProps","onDataLoaded","simpleFormFactory","onDataChanged","setTimeout","propValue","createForm","loaded","createSimpleFormDataProvider","sysIds","validateFormEffect"],"mappings":"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","file":"sn-scripting-environment.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = __TECTONIC__$devsnc_library_form_19_1_0;","module.exports = __TECTONIC__lodash_4_17_15;","export const WORKSPACE_FORM_ACTION = 'WORKSPACE_FORM_ACTION';\n\n// Notifications component actions\nexport const RECORD_NOTIFICATIONS_CHANGED = 'RECORD_NOTIFICATIONS_CHANGED';\nexport const ADD_NOTIFICATIONS = 'ADD_NOTIFICATIONS';\nexport const CLEAR_NOTIFICATIONS = 'CLEAR_NOTIFICATIONS';\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'; // only available in agent workspace\nexport const REMOVE_NOTIFICATIONS = 'REMOVE_NOTIFICATIONS';\n\n// Form Data action\nexport const FORM_UPDATE_HEADER = 'FORM_UPDATE_HEADER';\n\n// Agent Assist actions\nexport const SET_FIELDS_VALUE = 'SET_FIELDS_VALUE';\nexport const EXECUTE_UI_ACTION = 'EXECUTE_UI_ACTION';\n\n// Reference field action\nexport const REFERENCE_INFO_CLICK = 'REFERENCE_INFO_CLICK';\n\n// Phone field action\nexport const PHONE_ADDON_ACTION_CLICK = 'PHONE_ADDON_ACTION_CLICK';\n\n// CTI action\nexport const OPEN_PHONE = 'OPEN_PHONE';\n\n// CSM action\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const WRAPPED_ACTION = 'WRAPPED_ACTION';\n\n// Toggle domain scope\nexport const TOGGLE_DOMAIN_SCOPE = 'TOGGLE_DOMAIN_SCOPE';\n\n// Form actions\nexport const RECORD_STATUS_CHANGED = 'RECORD_STATUS_CHANGED';\nexport const RECORD_STATUS_UPDATED = 'updated';\nexport const RECORD_STATUS_INSERTED = 'inserted';\nexport const RECORD_STATUS_DELETED = 'deleted';\nexport const RECORD_STATUS_LIVEUPDATED = 'liveUpdated';\nexport const RECORD_STATUS_UNMODIFIED = 'unmodified';\nexport const RECORD_STATUS_MODIFIED = 'modified';\nexport const RECORD_STATUS_CLOSED = 'closed';\n\nexport const SCREEN_STATUS_CHANGED = 'SCREEN_STATUS_CHANGED';\n\nexport const EXTERNAL_ACTIONS = {\n\tSEND_FORM_NOTIFICATION: 'SEND_FORM_NOTIFICATION'\n};\n\nexport const CONTENT_ITEMS_SELECTED = 'CONTENT_ITEMS_SELECTED';\n\nexport const QUERY_CHANGED = 'QUERY_CHANGED';\n\n// FORM DATA CONNECTED \nexport const FORM_DATA_CONNECTED_ADD_NOTIFICATIONS = 'SN_FORM_DATA_CONNECTED#ADD_NOTIFICATIONS';\nexport const FORM_DATA_CONNECTED_REMOVE_NOTIFICATIONS = 'SN_FORM_DATA_CONNECTED#REMOVE_NOTIFICATIONS';\nexport const FORM_DATA_CONNECTED_CLEAR_NOTIFICATIONS = 'SN_FORM_DATA_CONNECTED#CLEAR_NOTIFICATIONS';\nexport const FORM_DATA_CONNECTED_SET_LOADING_STATE = 'SN_FORM_DATA_CONNECTED#SET_LOADING_STATE';\nexport const FORM_DATA_CONNECTED_EXECUTE_UI_ACTION = 'SN_FORM_DATA_CONNECTED#EXECUTE_UI_ACTION';\nexport const FORM_DATA_CONNECTED_ITEM_SELECTED = 'SN_FORM_DATA_CONNECTED#ITEM_SELECTED';\nexport const FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED = 'SN_FORM_DATA_CONNECTED#SCREEN_STATUS_CHANGED';\nexport const FORM_DATA_CONNECTED_PREVIEW_RECORD = 'SN_FORM_DATA_CONNECTED#PREVIEW_RECORD';\nexport const FORM_DATA_CONNECTED_WRAPPED_ACTION = 'SN_FORM_DATA_CONNECTED#WRAPPED_ACTION';\nexport const FORM_DATA_CONNECTED_OPEN_PHONE = 'SN_FORM_DATA_CONNECTED#OPEN_PHONE';\nexport const FORM_DATA_CONNECTED_DOMAIN_UPDATED = 'SN_FORM_DATA_CONNECTED#DOMAIN_UPDATED';\n\nexport const RIBBON_OPEN_PHONE =\n\t\"SN_RECORD_RIBBON#OPEN_PHONE\";\nexport const RIBBON_PREVIEW_RECORD =\n\t\"SN_RECORD_RIBBON#PREVIEW_RECORD\";\nexport const RIBBON_ADD_NOTIFICATIONS =\n\t\"SN_RECORD_RIBBON#ADD_NOTIFICATIONS\";\nexport const RIBBON_REMOVE_NOTIFICATIONS =\n\t\"SN_RECORD_RIBBON#REMOVE_NOTIFICATIONS\";\nexport const RIBBON_CLEAR_NOTIFICATIONS =\n\t\"SN_RECORD_RIBBON#CLEAR_NOTIFICATIONS\";\nexport const RIBBON_ITEM_SELECTED =\n\t\"SN_RECORD_RIBBON#ITEM_SELECTED\";\nexport const RIBBON_EXECUTED_UI_ACTION =\n\t\"SN_RECORD_RIBBON#EXECUTED_UI_ACTION\";\nexport const RIBBON_WRAPPED_ACTION =\n\t\"SN_RECORD_RIBBON#WRAPPED_ACTION\";","import { createClientScriptEnvironmentDataSource } from './dataSources/clientScriptEnvironmentDataSource';\nimport { createAttachmentAclDataSource } from './dataSources/attachmentAclDataSource';\nimport { createDeclarativeFieldActionDataSource } from './dataSources/declarativeFieldActionDataSource';\nimport { createFormLayoutDataSource } from './dataSources/formLayoutDataSource';\nimport { createDataLookupDataSource } from './dataSources/dataLookupDataSource';\nimport { createCurrentUserDataSource } from './dataSources/currentUserDataSource';\nimport { createFieldValidatorDataSource } from './dataSources/fieldValidatorDataSource';\nimport {\n\tcreateUIActionDataSource,\n\tcreateUxActionDataSource,\n\tcreateDeclarativeFormActionDataSource,\n\tcreateHeaderDataSource,\n\tcreateViewableRecordTagDataSource\n} from '@servicenow/now-record-common';\nimport { createUIScriptDataSource } from './dataSources/uiScriptDataSource';\nimport { createRegisteredModalDataSource } from './dataSources/registeredModalDataSource';\nimport { createActivityStreamDataSource } from './dataSources/activityStreamDataSource';\nimport { createRibbonDataSource } from './dataSources/ribbonDataSource';\nimport { createSpecialHandlingNoteDataSource } from './dataSources/specialHandlingNoteDataSource';\nimport { createSessionMessageDataSource } from './dataSources/sessionMessageDataSource';\nimport { createSimpleFormLayoutDataSource } from './dataSources/simpleFormLayoutDataSource';\nimport { getProperty } from 'sn-uxpage-presource';\nimport _ from 'lodash';\nimport { t } from 'sn-translate';\nimport { transformer } from '@devsnc/sn-declarative-actions';\nimport { loadActionComponents } from '@devsnc/library-form';\n\nconst createNestedQueryDataSource = dataSource => ({\n\t...dataSource,\n\tquery: dataSource.query.replace(\n\t\t/\\$view/g,\n\t\t'\"$$$$$$$$parent.viewName$$$$$$$$\"'\n\t),\n\tvariables: _.omit(dataSource.variables, 'view'),\n\tprops: _.omit(dataSource.props, 'view')\n});\n\nconst hasViewVariable = dataSource =>\n\tdataSource.query && dataSource.query.indexOf('$view') >= 0;\n\nexport const createFormDataSource = (dataSource, includeViewResolver = false) =>\n\tincludeViewResolver && hasViewVariable(dataSource)\n\t\t? createNestedQueryDataSource(dataSource)\n\t\t: dataSource;\n\nexport const DATASOURCE_NAMES = {\n\theader: 'formHeader',\n\ttag: 'recordTags',\n\tformDA: 'formActions',\n\tfieldDA: 'declarativeUIActions',\n\tattachmentACL: 'attachments',\n\tuiAction: 'uiActions',\n\tuxAction: 'uxActions',\n\tclientScriptEnv: 'environment',\n\tformLayout: 'layout',\n\tdataLookup: 'dataLookup',\n\tcurrentUser: 'currentUser',\n\tfieldValidator: 'validationScripts',\n\tuiScript: 'uiScripts',\n\tregisteredModal: 'registeredModals',\n\tactivityStream: 'activityStream',\n\tribbon: 'ribbon',\n\tshn: 'specialHandlingNote',\n\tsessionMessage: 'session',\n\tsimpleFormLayout: 'simpleFormLayout'\n};\n\nconst {\n\theader,\n\ttag,\n\tformDA,\n\tfieldDA,\n\tattachmentACL,\n\tuiAction,\n\tuxAction,\n\tclientScriptEnv,\n\tformLayout,\n\tdataLookup,\n\tcurrentUser,\n\tfieldValidator,\n\tuiScript,\n\tregisteredModal,\n\tactivityStream,\n\tribbon,\n\tshn,\n\tsessionMessage,\n\tsimpleFormLayout\n} = DATASOURCE_NAMES;\n\nconst DATASOURCE_FACOTORY_METHODS = {\n\t[header]: createHeaderDataSource,\n\t[tag]: createViewableRecordTagDataSource,\n\t[formDA]: createDeclarativeFormActionDataSource,\n\t[fieldDA]: createDeclarativeFieldActionDataSource,\n\t[attachmentACL]: createAttachmentAclDataSource,\n\t[uiAction]: createUIActionDataSource,\n\t[uxAction]: createUxActionDataSource,\n\t[clientScriptEnv]: createClientScriptEnvironmentDataSource,\n\t[formLayout]: createFormLayoutDataSource,\n\t[dataLookup]: createDataLookupDataSource,\n\t[currentUser]: createCurrentUserDataSource,\n\t[fieldValidator]: createFieldValidatorDataSource,\n\t[uiScript]: createUIScriptDataSource,\n\t[registeredModal]: createRegisteredModalDataSource,\n\t[activityStream]: createActivityStreamDataSource,\n\t[ribbon]: createRibbonDataSource,\n\t[shn]: createSpecialHandlingNoteDataSource,\n\t[sessionMessage]: createSessionMessageDataSource,\n\t[simpleFormLayout]: createSimpleFormLayoutDataSource\n};\n\nexport const DATASOURCE_KEYS = {\n\t[header]: header,\n\t[tag]: tag,\n\t[formDA]: formDA,\n\t[fieldDA]: fieldDA,\n\t[attachmentACL]: attachmentACL,\n\t[uiAction]: uiAction,\n\t[uxAction]: uiAction, // uxAction will map to uiAction for public key\n\t[clientScriptEnv]: clientScriptEnv,\n\t[formLayout]: formLayout,\n\t[dataLookup]: dataLookup,\n\t[currentUser]: currentUser,\n\t[fieldValidator]: fieldValidator,\n\t[uiScript]: uiScript,\n\t[registeredModal]: registeredModal,\n\t[activityStream]: activityStream,\n\t[ribbon]: ribbon,\n\t[shn]: shn,\n\t[sessionMessage]: sessionMessage,\n\t[simpleFormLayout]: simpleFormLayout\n};\n\n// when transforming data sources, some ds depends on the other. This order is used to help identify the order ds should be transformed\nexport const DATASOURCE_TRANSFORM_ORDER = {\n\t[header]: 3,\n\t[tag]: 3,\n\t[formDA]: 1,\n\t[fieldDA]: 1,\n\t[attachmentACL]: 2,\n\t[uiAction]: 3,\n\t[uxAction]: 3, // uxAction needs to be transformed after form layout\n\t[clientScriptEnv]: 2,\n\t[formLayout]: 2,\n\t[dataLookup]: 2,\n\t[currentUser]: 2,\n\t[fieldValidator]: 2,\n\t[uiScript]: 2,\n\t[registeredModal]: 2,\n\t[activityStream]: 3,\n\t[ribbon]: 4,\n\t[shn]: 4,\n\t[sessionMessage]: 5,\n\t[simpleFormLayout]: 2\n};\n\nexport const componentDataSources = (classicForm = false) => ({\n\t'now-record-common-header': [header, tag],\n\t'now-record-common-sidebar': [formDA, attachmentACL],\n\t'now-record-common-uiactionbar': classicForm ? [uiAction] : [uxAction],\n\t'now-record-form-blob': [\n\t\tclientScriptEnv,\n\t\tattachmentACL,\n\t\tfieldDA,\n\t\tformDA,\n\t\tformLayout,\n\t\tdataLookup,\n\t\tcurrentUser,\n\t\tfieldValidator,\n\t\tuiScript,\n\t\tregisteredModal,\n\t\t...(classicForm ? [uiAction] : [uxAction]),\n\t\tsessionMessage\n\t],\n\t'now-activity-combo': [activityStream],\n\t'now-activity-stream-connected': [activityStream],\n\t'now-activity-stream-compose-connected': [],\n\t'sn-record-ribbon': [ribbon],\n\t'sn-component-shn-modal': [shn],\n\t'sn-form-internal-simple-form': [fieldDA, simpleFormLayout],\n\t'now-record-common-attachments-connected': [],\n\t'now-record-form-section-column-layout': [\n\t\tclientScriptEnv,\n\t\tattachmentACL,\n\t\tfieldDA,\n\t\tformDA,\n\t\tformLayout,\n\t\tdataLookup,\n\t\tcurrentUser,\n\t\tfieldValidator,\n\t\tuiScript,\n\t\tregisteredModal,\n\t\t...(classicForm ? [uiAction] : [uxAction]),\n\t\tsessionMessage\n\t]\n});\n\nconst createDataSourceFromName = (queryPrefix, name) => {\n\tconst includeViewResolver =\n\t\tqueryPrefix.indexOf('GlideViewQuery_Query.uiView') >= 0;\n\tconst dataSource = DATASOURCE_FACOTORY_METHODS[name].apply(null, [\n\t\tqueryPrefix\n\t]);\n\treturn createFormDataSource(dataSource, includeViewResolver);\n};\n\nconst isAvailable = ds => {\n\tif (ds === shn) return !_.isNil(getProperty('sn_shn.note_preferences'));\n\treturn true;\n};\n\nexport const getDataSourcesForComponents = (\n\tqueryPrefix,\n\tcomponents,\n\tclassicForm = false\n) => {\n\tconst componentsDataSourcesMap = componentDataSources(classicForm);\n\tconst allDataSources = [\n\t\t...components.reduce(\n\t\t\t(all, component) => [\n\t\t\t\t...all,\n\t\t\t\t...componentsDataSourcesMap[component]\n\t\t\t],\n\t\t\t[]\n\t\t),\n\t\tsessionMessage\n\t];\n\tconst dataSourceNames = Array.from(new Set(allDataSources));\n\treturn dataSourceNames.reduce(\n\t\t(dataSources, ds) =>\n\t\t\t!isAvailable(ds)\n\t\t\t\t? dataSources\n\t\t\t\t: {\n\t\t\t\t\t\t...dataSources,\n\t\t\t\t\t\t[ds]: createDataSourceFromName(queryPrefix, ds)\n\t\t\t\t  },\n\t\t{}\n\t);\n};\n\nexport const READ_ONLY_FORM_VIEW = 'Default view';\nexport const isMissingWorkspaceView = view => view === READ_ONLY_FORM_VIEW;\nexport const isReadonly = (state, view, isWhitelistedForEdit = false) => {\n\tconst {\n\t\tproperties: { readOnlyForm }\n\t} = state;\n\treturn (\n\t\t(isMissingWorkspaceView(view) && !isWhitelistedForEdit) ||\n\t\treadOnlyForm ||\n\t\tfalse\n\t);\n};\n\nexport const getConfig = (\n\tformData,\n\tclassicForm,\n\tshowActivityStreamInDetails\n) => {\n\tconst layout = formData[DATASOURCE_KEYS[DATASOURCE_NAMES.formLayout]];\n\tconst activityStream =\n\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.activityStream]];\n\tconst isFormReadonly = formData.isReadOnly;\n\tconst isMissingWorkspaceView = formData.isMissingWorkspaceView;\n\tconst activityStreamVisible = !isFormReadonly && activityStream && activityStream.visible;\n\tconst showActivityStream = classicForm ? activityStreamVisible : false; // need to set this to false for uib bcoz we will expose activity stream via resizable-pane instead , but by rendering directly in column layout\n\tconst showActivityStreamPane =\n\t\tactivityStreamVisible && showActivityStreamInDetails; // this use in record page tab\n\tconst isSectionMenuHidden = classicForm\n\t\t? layout.formSettings && layout.formSettings.isSectionMenuHidden\n\t\t: true;\n\tconst disableCollapse = classicForm\n\t\t? layout.formSettings && layout.formSettings.isSectionCollapseDisabled\n\t\t: true;\n\n\treturn {\n\t\tshowVariableEditor: layout.showVariableEditor,\n\t\tshowActivityStream,\n\t\treadonly: isFormReadonly,\n\t\tisMissingWorkspaceView,\n\t\tisSectionMenuHidden,\n\t\tcanReadRecord: layout.canReadRecord,\n\t\tisValidRecord: layout.isValidRecord,\n\t\tisNewRecord: layout.isNewRecord,\n\t\tbaseTable: layout.baseTable,\n\t\tisScriptableTable: layout.isScriptableTable,\n\t\tlastErrorMessage: layout.lastErrorMessage,\n\t\tdisableCollapse,\n\t\tshowActivityStreamPane\n\t};\n};\n\nexport const getFormModel = (formData, formModal, gForm) => {\n\tconst record = formData.record;\n\tconst layout = formData[DATASOURCE_KEYS[DATASOURCE_NAMES.formLayout]];\n\tconst isFormReadonly = formData.isReadOnly;\n\tconst currentUser = formData[DATASOURCE_KEYS[DATASOURCE_NAMES.currentUser]];\n\tconst isAttachmentUploadDisabled = gForm\n\t\t? gForm.isAttachmentUploadDisabled()\n\t\t: false;\n\tconst serializedChanges = gForm\n\t\t? JSON.stringify(gForm.serialize(true))\n\t\t: '[]';\n\tconst encodedRecord = layout ? layout.encodedRecord : '';\n\n\treturn {\n\t\tview: record.view,\n\t\ttable: record.table,\n\t\tsysId: layout.sysId,\n\t\tquery: record.query,\n\t\tisNewRecord: layout.isNewRecord,\n\t\tcanReadRecord: layout.canReadRecord,\n\t\tformModal,\n\t\tgForm, // TODO: remove this\n\t\tisReadOnly: isFormReadonly,\n\t\tcurrentUser,\n\t\tfields: layout.formFieldValues,\n\t\tisAttachmentUploadDisabled,\n\t\tserializedChanges,\n\t\tencodedRecord\n\t};\n};\n\nexport const createTabRoutes = ({\n\trelatedLists = [],\n\trelatedItems = [],\n\tformModel,\n\tloadComponent = false\n}) => {\n\tconst { sysId } = formModel;\n\tconst transformedRelatedItems = transformer(relatedItems, formModel) || [];\n\tif (loadComponent) loadActionComponents(transformedRelatedItems);\n\n\tconst createRelatedItemsRoute = item => ({\n\t\troute: 'related_items',\n\t\tfields: {\n\t\t\tactionComponent: item.actionComponent,\n\t\t\tactionAttributes: item.actionAttributes,\n\t\t\tformModel: formModel\n\t\t},\n\t\tlabel: item.label\n\t});\n\n\tconst createRelatedListRoute = item => ({\n\t\troute: 'related_list',\n\t\tfields: {\n\t\t\ttable: item.table,\n\t\t\tlistTitle: item.displayName,\n\t\t\tparentTable: item.parentTable,\n\t\t\tparentRecordSysId: sysId,\n\t\t\trelatedListName: item.value,\n\t\t\tquery: item.filter,\n\t\t\tview: item.view,\n\t\t\tactionConfigId: item.actionConfigId,\n\t\t\trefreshRequested: item.refreshRequested\n\t\t},\n\t\tcount: item.count,\n\t\tlabel: item.displayName\n\t});\n\n\tconst createDetailRoute = () => ({\n\t\troute: 'details',\n\t\tfields: {\n\t\t\tdetails: true\n\t\t},\n\t\tlabel: t('Details')\n\t});\n\tconst detailTab = createDetailRoute();\n\treturn [\n\t\tdetailTab,\n\t\t...transformedRelatedItems.map(createRelatedItemsRoute),\n\t\t...relatedLists.filter(relatedList => relatedList.visible).map(createRelatedListRoute)\n\t];\n};\n","module.exports = __TECTONIC__$servicenow_now_record_common;","export const SC_SCRIPTS_QUERY_KEY = 'CatalogClientScriptingEnvironment_Scripts';\nexport const SC_POLICIES_QUERY_KEY =\n\t'CatalogClientScriptingEnvironment_Policies';\nexport const VARIABLE_LAYOUT_QUERY_FRAGMENT = `\nvariablesLayout {\n\tname\n\ttype\n\tparent\n \t... on GlideLayout_ContainerVariableFieldLayoutType {\n\t\tcaption\n\t\tcaptionDisplay\n\t\tlayout\n\t\tcolumns {\n\t\t\tfields {\n\t\t\t\tname\n\t\t\t\ttype\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const CATALOG_SCRIPTS_FRAGMENT = `\n${SC_SCRIPTS_QUERY_KEY} (table: $table, sysId: $sysId, query: $query){\n\t\tonLoad {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tonChange {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tonSubmit {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tmessages {\n\t\t\tname\n\t\t\tvalue\n\t\t}\n\t}\n\n`;\n\nexport const CATALOG_POLICIES_FRAGMENT = `\n${SC_POLICIES_QUERY_KEY} (table: $table, sysId: $sysId, query: $query){\n\t\tshortDescription\n\t\tsysId\n\t\tscriptTrue {\n\t\t\tname\n\t\t\tscript\n\t\t}\n\t\tscriptFalse {\n\t\t\tname\n\t\t\tscript\n\t\t}\n\t\treverse\n\t\tonLoad\n\t\tisRunScripts\n\t\tpreEvaluated\n\t\tpreEvaluatedResult\n\t\tactions {\n\t\t\tvisible\n\t\t\tname\n\t\t\tdisabled\n\t\t\tmandatory\n\t\t\tcleared: clearValue\n\t\t\trelatedList\n\t\t}\n\t\tconditions {\n\t\t\tterm\n\t\t\tfield: fieldName\n\t\t\tfieldLabel\n\t\t\ttype\n\t\t\tcolumnType\n\t\t\tvalue\n\t\t\toper: operator\n\t\t\toperatorLabel\n\t\t\tcatalogVariable\n\t\t\tcatalogOperator\n\t\t\tcatalogVariableType\n\t\t\tcatalogVariableTable\n\t\t\tor: isOrQuery\n\t\t\tnewquery: isNewQuery\n\t\t\tpreEvaluatedTerm\n\t\t\tpreEvaluatedTermResult\n\t\t\treferenceFields {\n\t\t\t\ttable\n\t\t\t\tfieldName\n\t\t\t\tfieldLabel\n\t\t\t\tinternalType\n\t\t\t\treferenceTable\n\t\t\t}\n\t\t}\n\n\t}\n`;\nconst macroVariableQuery = `    ... on GlideLayout_MacroQuestionElementType {\n    type\n    id\n    name\n    variableName\n    label\n    order\n    catalogItem\n    variableSet\n    mandatory\n    canRead\n    canWrite\n    canCreate\n    variableAttributes\n    defaultValue\n    macroponentId\n  }\n  `;\n\nconst scVariableReadonlyState = `readOnly`;\nconst scVariableVisibleState = `visible`;\n\nexport const GlideElementVariables_ELEMENTS_QUERY_FRAGMENT = `\n_elements {\n    ... on GlideLayout_MultiRowVariableSetType {\n      type\n      name\n      variableName\n      label\n      containerType\n      canRead\n      canWrite\n      canCreate\n      id\n      maxRows\n      fields {\n        name\n        id\n        label\n        type\n        unique\n      }\n      rowData {\n        row {\n          id\n          name\n          value\n          displayValue\n        }\n      }\n    }\n    ... on GlideLayout_SingleRowVariableSetType {\n      type\n      id\n      name\n      label\n      containerType\n      ${scVariableVisibleState}\n      canRead\n      canWrite\n      canCreate\n      variableName\n    }\n    ... on GlideLayout_ChoiceQuestionElementType {\n      type\n      id\n      name\n      variableName\n      label\n      order\n      catalogItem\n      variableSet\n      mandatory\n      ${scVariableReadonlyState}\n      ${scVariableVisibleState}\n      canRead\n      canWrite\n      canCreate\n      variableAttributes\n      defaultValue\n      lookupTable\n      lookupValue\n      lookupLabel\n      includeNone\n      lookupUnique\n      choiceTable\n      choiceField\n      choiceDirection\n      choices {\n        displayValue: label\n        value\n      }\n      dependentField\n      referringTable\n      referringRecordId\n    }\n    ... on GlideLayout_ReferenceQuestionElementType {\n      type\n      id\n      name\n      variableName\n      label\n      order\n      catalogItem\n      variableSet\n      mandatory\n      ${scVariableReadonlyState}\n      ${scVariableVisibleState}\n      canRead\n      canWrite\n      canCreate\n      reference\n      referenceQual\n      listTable\n      useReferenceQualifier\n      variableAttributes\n      defaultValue\n      referringTable\n      referringRecordId\n    }\n    ... on GlideLayout_ContainerQuestionElementType {\n      type\n      id\n      name\n      variableName\n      label\n      order\n      catalogItem\n      variableSet\n      displayTitle\n      layout\n      containerType\n      ${scVariableVisibleState}\n      canRead\n      canWrite\n      canCreate\n      mandatory\n    }\n    ${macroVariableQuery}\n    ... on GlideLayout_StandardQuestionElementType {\n      type\n      id\n      name\n      variableName\n      label\n      order\n      catalogItem\n      variableSet\n      mandatory\n      ${scVariableReadonlyState}\n      ${scVariableVisibleState}\n      canRead\n      canWrite\n      canCreate\n      variableAttributes\n      defaultValue\n      exampleText\n      useConfirmation\n      regExp\n      canDecrypt\n    }\n    ... on GlideLayout_AttachmentQuestionElementType {\n      type\n      id\n      name\n      variableName\n      label\n      order\n      catalogItem\n      variableSet\n      mandatory\n      ${scVariableReadonlyState}\n      ${scVariableVisibleState}\n      canRead\n      canWrite\n      canCreate\n      variableAttributes\n      defaultValue\n      contentType\n    }\n  }\n`;\nexport const CATALOG_DATALOOKUP_FIELDS_KEY = 'catalogDataLookup';\nexport const CATALOG_DATA_LOOKUP_QUERY_FRAGMENT = `\n${CATALOG_DATALOOKUP_FIELDS_KEY}(targetTable: $table, targetId: $sysId) {\n  fields {\n    field\n        definitions {\n            name\n            sysId\n        }\n  }\n}\n`;\n","module.exports = __TECTONIC__sn_translate;","import _ from 'lodash';\nimport { GlideFormSectionManager } from './GlideFormSectionManager';\nimport { validateSourceCSDB } from '../../../utils/uxf';\n\nconst GFORM_SET_VALUE = 'GFORM#SET_VALUE';\n\nconst GFORM_ADD_INFO_MESSAGE = 'GFORM#ADD_INFO_MESSAGE';\nconst GFORM_ADD_WARNING_MESSAGE = 'GFORM#ADD_WARNING_MESSAGE';\nconst GFORM_ADD_ERROR_MESSAGE = 'GFORM#ADD_ERROR_MESSAGE';\nconst GFORM_CLEAR_MESSAGE = 'GFORM#CLEAR_MESSAGE';\n\nconst GFORM_SHOW_FIELD_MESSAGE = 'GFORM#SHOW_FIELD_MESSAGE';\nconst GFORM_HIDE_FIELD_MESSAGE = 'GFORM#HIDE_FIELD_MESSAGE';\n\nconst GFORM_SHOW_RELATED_LISTS = 'GFORM#SHOW_RELATED_LISTS';\nconst GFORM_HIDE_RELATED_LISTS = 'GFORM#HIDE_RELATED_LISTS';\nconst GFORM_SHOW_RELATED_LIST = 'GFORM#SHOW_RELATED_LIST';\nconst GFORM_HIDE_RELATED_LIST = 'GFORM#HIDE_RELATED_LIST';\nconst GFORM_SET_VISIBLE = 'GFORM#SET_VISIBLE';\nconst GFORM_SET_READ_ONLY = 'GFORM#SET_READ_ONLY';\nconst GFORM_SET_MANDATORY = 'GFORM#SET_MANDATORY';\n\nconst GFORM_RELOAD = 'GFORM#RELOAD';\nconst GFORM_SAVE = 'GFORM#SAVE';\nconst GFORM_SUBMIT = 'GFORM#SUBMIT';\n\nconst GFORM_CLEAR_OPTIONS = 'GFORM#CLEAR_OPTIONS';\nconst GFORM_ADD_OPTION = 'GFORM#ADD_OPTION';\nconst GFORM_REMOVE_OPTION = 'GFORM#REMOVE_OPTION';\n\nconst GFORM_ENABLE_ATTACHMENTS = 'GFORM#ENABLE_ATTACHMENTS';\nconst GFORM_DISABLE_ATTACHMENTS = 'GFORM#DISABLE_ATTACHMENTS';\n\nconst GFORM_INTERNAL_CLEAR_OPTION_STACK = 'GFORM_INTERNAL#CLEAR_OPTION_STACK';\nconst GFORM_INTERNAL_SET_FIELD_INVALID = 'GFORM_INTERNAL#SET_FIELD_INVALID';\nconst GFORM_INTERNAL_APPLY_TEMPLATE_VALUE =\n\t'GFORM_INTERNAL#APPLY_TEMPLATE_VALUE';\nconst GFORM_INTERNAL_BATCH_ACTIONS = 'GFORM_INTERNAL#BATCH_ACTIONS';\nconst GFORM_SECTION_EXPANDED_STATE_CHANGED =\n\t'GFORM_EXTEND#SECTION_EXPANDED_STATE_CHANGED';\nconst GFORM_INTERNAL_SET_ADDITIONAL_FIELD_STATE =\n\t'GFORM#SET_ADDITIONAL_FIELD_STATE';\nconst GFORM_VALIDATE = 'GFORM#VALIDATE';\n\nexport const GFORM_ACTIONS = {\n\tGFORM_SET_VALUE,\n\tGFORM_ADD_INFO_MESSAGE,\n\tGFORM_ADD_WARNING_MESSAGE,\n\tGFORM_ADD_ERROR_MESSAGE,\n\tGFORM_CLEAR_MESSAGE,\n\tGFORM_SHOW_FIELD_MESSAGE,\n\tGFORM_HIDE_FIELD_MESSAGE,\n\tGFORM_SHOW_RELATED_LISTS,\n\tGFORM_HIDE_RELATED_LISTS,\n\tGFORM_SHOW_RELATED_LIST,\n\tGFORM_HIDE_RELATED_LIST,\n\tGFORM_SET_VISIBLE,\n\tGFORM_SET_READ_ONLY,\n\tGFORM_SET_MANDATORY,\n\tGFORM_RELOAD,\n\tGFORM_SAVE,\n\tGFORM_SUBMIT,\n\tGFORM_CLEAR_OPTIONS,\n\tGFORM_ADD_OPTION,\n\tGFORM_REMOVE_OPTION,\n\tGFORM_ENABLE_ATTACHMENTS,\n\tGFORM_DISABLE_ATTACHMENTS,\n\tGFORM_INTERNAL_CLEAR_OPTION_STACK,\n\tGFORM_INTERNAL_SET_FIELD_INVALID,\n\tGFORM_INTERNAL_APPLY_TEMPLATE_VALUE,\n\tGFORM_INTERNAL_BATCH_ACTIONS,\n\tGFORM_SECTION_EXPANDED_STATE_CHANGED,\n\tGFORM_INTERNAL_SET_ADDITIONAL_FIELD_STATE,\n\tGFORM_VALIDATE\n};\n\nconst getProps = (state, properties, prop) => {\n\treturn state[prop] || properties[prop];\n};\n\nconst getGForm = (state, properties) =>\n\t(state.glideEnvironment && state.glideEnvironment.gForm) ||\n\tgetProps(state, properties, 'gForm');\n\nexport const getGFormAttributes = (state, properties) => {\n\tconst gForm = getGForm(state, properties);\n\tif (!gForm) return {};\n\n\tconst isAttachmentUploadDisabled = gForm.isAttachmentUploadDisabled();\n\tconst serializedChanges = JSON.stringify(gForm.serialize(true));\n\tconst { formData } = state;\n\tconst encodedRecord = formData.layout.encodedRecord;\n\treturn {\n\t\tisAttachmentUploadDisabled,\n\t\tserializedChanges,\n\t\tencodedRecord\n\t};\n};\n\nconst primitiveActionHandlers = {\n\t/**\n\t * Update a glide form section\n\t * @type {string} sectionName - name of the section being toggled\n\t * @type {string} expanded - flag that indicates whether a section is expanded\n\t */\n\t[GFORM_SECTION_EXPANDED_STATE_CHANGED]: ({ state, properties, action }) => {\n\t\taction.stopPropagation();\n\t\tconst {\n\t\t\tpayload: { sectionName, expanded }\n\t\t} = action;\n\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm) return;\n\n\t\tconst sectionManager = new GlideFormSectionManager(gForm);\n\t\tsectionManager.setSectionExpanded(sectionName, expanded);\n\t},\n\t/**\n\t * Update a glide form field value\n\t * @type {string} fieldName - name of the field to set value\n\t * @type {string} value - value to set\n\t * @type {string} [displayValue] - display value to set\n\t */\n\t[GFORM_SET_VALUE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.setValue) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, value, displayValue }\n\t\t} = action;\n\t\tgForm.setValue(fieldName, value, displayValue);\n\t},\n\t/**\n\t * Displays an informational message at the top of the form\n\t * @type {string} message - info message to display\n\t */\n\t[GFORM_ADD_INFO_MESSAGE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.addInfoMessage) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { message }\n\t\t} = action;\n\t\tgForm.addInfoMessage(message);\n\t},\n\t/**\n\t * Displays an warning message at the top of the form\n\t * @type {string} message - a warning message to be displayed\n\t */\n\t[GFORM_ADD_WARNING_MESSAGE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.addWarningMessage) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { message }\n\t\t} = action;\n\t\tgForm.addWarningMessage(message);\n\t},\n\t/**\n\t * Displays an error message at the top of the form\n\t * @type {string} message - error message\n\t */\n\t[GFORM_ADD_ERROR_MESSAGE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.addErrorMessage) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { message }\n\t\t} = action;\n\t\tgForm.addErrorMessage(message);\n\t},\n\t/**\n\t * Removes all information and error messages at the top of the form\n\t */\n\t[GFORM_CLEAR_MESSAGE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.clearMessages) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tgForm.clearMessages();\n\t},\n\t/**\n\t * Reload the form with the same table and sysId\n\t */\n\t[GFORM_RELOAD]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.reload) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tgForm.reload();\n\t},\n\t/**\n\t * Trigger form submission using 'save' ui action\n\t * @type {callback}\n\t */\n\t[GFORM_SAVE]: ({ state, properties, action, host}) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.save) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tmeta: { callback }\n\t\t} = action;\n\t\tconst result = gForm.save();\n\t\tif (callback) callback(result);\n\t},\n\t/**\n\t * Trigger form submission using the given ui-action name\n\t * @type {string} submitActionName - name of action to execute\n\t * @type {callback}\n\t */\n\t[GFORM_SUBMIT]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.submit) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { submitActionName },\n\t\t\tmeta: { callback }\n\t\t} = action;\n\t\tconst result = gForm.submit(submitActionName);\n\t\tif (callback) callback(result);\n\t},\n\t/**\n\t * Shows a message next to the field\n\t * @type {string} fieldName - name of the field to show text message\n\t * @type {string} message - text message\n\t * @type {('info'|'warning'|'error')} [type='info'] - type of message\n\t */\n\t[GFORM_SHOW_FIELD_MESSAGE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.showFieldMsg) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, message, type }\n\t\t} = action;\n\t\tgForm.showFieldMsg(fieldName, message, type);\n\t},\n\t/**\n\t * Hides the first (oldest) message by a field\n\t * @type {string} fieldName - name of the field\n\t * @type {boolean} [clearAll] - clear all the messages if true\n\t */\n\t[GFORM_HIDE_FIELD_MESSAGE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.hideFieldMsg) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, clearAll }\n\t\t} = action;\n\t\tgForm.hideFieldMsg(fieldName, clearAll);\n\t},\n\t/**\n\t * Shows the specified related list on the form\n\t * @type {string} listTableName - specifies the name of the related list. Use the list sys_id to hide a list through a relationship.\n\t */\n\t[GFORM_SHOW_RELATED_LIST]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.showRelatedList) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { listTableName }\n\t\t} = action;\n\t\tgForm.showRelatedList(listTableName);\n\t},\n\t/**\n\t * Hides the specified related list on the form\n\t * @type {string} listTableName - specifies the name of the related list. Use the list sys_id to hide a list through a relationship.\n\t */\n\t[GFORM_HIDE_RELATED_LIST]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.hideRelatedList) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { listTableName }\n\t\t} = action;\n\t\tgForm.hideRelatedList(listTableName);\n\t},\n\t/**\n\t * Shows all related lists\n\t */\n\t[GFORM_SHOW_RELATED_LISTS]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.showRelatedLists) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tgForm.showRelatedLists();\n\t},\n\t/**\n\t * Hides all related lists\n\t */\n\t[GFORM_HIDE_RELATED_LISTS]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.hideRelatedLists) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tgForm.hideRelatedLists();\n\t},\n\t/**\n\t * Sets the field visible if true. Makes the field hidden if false.\n\t * @type fieldName - name of the field to set visible\n\t * @type visibility - if true, set the given field visible\n\t */\n\t[GFORM_SET_VISIBLE]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.setVisible) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, isVisible }\n\t\t} = action;\n\t\tgForm.setVisible(fieldName, isVisible);\n\t},\n\t/**\n\t * Makes the field read-only if true. Makes the field editable if false.\n\t * @note: Best Practice: Use UI Policy rather than this method whenever possible.\n\t * @type {string} fieldName - name of the field to set readonly\n\t * @type {boolean} readonly - if true, set the given field read only\n\t */\n\t[GFORM_SET_READ_ONLY]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.setReadOnly) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, readonly }\n\t\t} = action;\n\t\tgForm.setReadOnly(fieldName, readonly);\n\t},\n\t/**\n\t * Makes the field required if true. Makes the field optional if false.\n\t * @note Best Practice: Use UI Policy rather than this method whenever possible.\n\t * @type {string} fieldName - name of the field\n\t * @type {boolean} mandatory - if true set the given field madatory\n\t */\n\t[GFORM_SET_MANDATORY]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.setMandatory) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, mandatory }\n\t\t} = action;\n\t\tgForm.setMandatory(fieldName, mandatory);\n\t},\n\t/**\n\t * Clears all options for a choice list\n\t * @type {string} fieldName - the field name to add the option to\n\t */\n\t[GFORM_CLEAR_OPTIONS]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.clearOptions) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName }\n\t\t} = action;\n\t\tgForm.clearOptions(fieldName);\n\t},\n\t/**\n\t * Adds an option to a choice type\n\t * @type {string} fieldName - field name to add the option to\n\t * @type {string} choiceValue - value of the option\n\t * @type {string} choiceLabel - label of the option\n\t * @type {number} [choiceIndex] - index to insert the option at\n\t */\n\t[GFORM_ADD_OPTION]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.addOption) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, choiceValue, choiceLabel, choiceIndex }\n\t\t} = action;\n\t\tgForm.addOption(fieldName, choiceValue, choiceLabel, choiceIndex);\n\t},\n\t/**\n\t * Removes an option from a choice list\n\t * @type {string} fieldName - the field name to add the option to\n\t * @type {string} choiceValue - the value of the option\n\t */\n\t[GFORM_REMOVE_OPTION]: ({ state, properties, action, host }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.removeOption) return;\n\t\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, choiceValue }\n\t\t} = action;\n\t\tgForm.removeOption(fieldName, choiceValue);\n\t},\n\t/**\n\t * enable upload attachments\n\t */\n\t[GFORM_ENABLE_ATTACHMENTS]: ({ state, properties, action }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.enableAttachments) return;\n\n\t\tgForm.enableAttachments();\n\t},\n\t/**\n\t * disable upload attachments\n\t */\n\t[GFORM_DISABLE_ATTACHMENTS]: ({ state, properties, action }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.disableAttachments) return;\n\n\t\tgForm.disableAttachments();\n\t},\n\t/**\n\t * Resets the optionStack of the field to empty stack\n\t * @type {string} fieldName - the field name to clear optionStack\n\t */\n\t[GFORM_INTERNAL_CLEAR_OPTION_STACK]: ({ state, properties, action }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.$private || !gForm.$private.clearOptionStack)\n\t\t\treturn;\n\n\t\tconst {\n\t\t\tpayload: { fieldName }\n\t\t} = action;\n\t\tgForm.$private.clearOptionStack(fieldName);\n\t},\n\t/**\n\t * Sets the field invalid if true.\n\t * @type {string} fieldName - name of the filed to set invalid\n\t * @type {boolean} isInvalid - if true set field invalid\n\t */\n\t[GFORM_INTERNAL_SET_FIELD_INVALID]: ({ state, properties, action }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.$private || !gForm.$private.setFieldInvalid)\n\t\t\treturn;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, isInvalid }\n\t\t} = action;\n\t\tgForm.$private.setFieldInvalid(fieldName, isInvalid);\n\t},\n\t/**\n\t *\n\t */\n\t[GFORM_INTERNAL_APPLY_TEMPLATE_VALUE]: ({ state, properties, action }) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (\n\t\t\t!gForm ||\n\t\t\t!gForm.$private ||\n\t\t\t!gForm.$private.fieldState ||\n\t\t\t!gForm.$private.fieldState.applyTemplateValue\n\t\t)\n\t\t\treturn;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, value, displayValue }\n\t\t} = action;\n\t\tgForm.$private.fieldState.applyTemplateValue(\n\t\t\tfieldName,\n\t\t\tvalue,\n\t\t\tdisplayValue\n\t\t);\n\t},\n\t/**\n\t *\n\t */\n\t[GFORM_INTERNAL_SET_ADDITIONAL_FIELD_STATE]: ({\n\t\tstate,\n\t\tproperties,\n\t\taction\n\t}) => {\n\t\taction.stopPropagation();\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (\n\t\t\t!gForm ||\n\t\t\t!gForm.$private ||\n\t\t\t!gForm.$private.fieldState ||\n\t\t\t!gForm.$private.fieldState.applyTemplateValue\n\t\t)\n\t\t\treturn;\n\n\t\tconst {\n\t\t\tpayload: { fieldName, value, propName }\n\t\t} = action;\n\t\tgForm.$private.setAdditionalFieldState(fieldName, propName, value);\n\t},\n\n\t/**\n\t * Trigger form validation\n\t */\n\t[GFORM_VALIDATE]: ({ state, properties, action, dispatch }) => {\n\t\taction.stopPropagation();\n\t\tconst {\n\t\t\tpayload: { successActionName, errorActionName }\n\t\t} = action;\n\t\tconst gForm = getGForm(state, properties);\n\t\tif (!gForm || !gForm.validateFormAsync)\n\t\t\treturn;\n\n\t\tgForm.validateFormAsync()\n\t\t\t.then(function() {\n\t\t\t\tif (successActionName) dispatch(successActionName);\n\t\t\t})\n\t\t\t.catch(function() {\n\t\t\t\tif (errorActionName) dispatch(errorActionName);\n\t\t\t});\n\t}\n};\n\nexport const gFormActionHandlers = {\n\tactionHandlers: {\n\t\t...primitiveActionHandlers,\n\t\t/**\n\t\t * @typedef Action\n\t\t * @type {object}\n\t\t * @property {string} name - Action name\n\t\t * @property {object} payload - action payload\n\t\t */\n\t\t/**\n\t\t * Execute all actions passed in payload in Order\n\t\t * @type {Actions[]} actions - array of actions\n\t\t */\n\t\t[GFORM_INTERNAL_BATCH_ACTIONS]: ({ state, properties, action }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { actions }\n\t\t\t} = action;\n\t\t\taction.stopPropagation();\n\t\t\tif (!_.isArray(actions)) return;\n\t\t\tactions.forEach(({ name, payload }) => {\n\t\t\t\tconst handler = primitiveActionHandlers[name];\n\t\t\t\tif (!handler) return;\n\t\t\t\thandler({\n\t\t\t\t\tstate,\n\t\t\t\t\tproperties,\n\t\t\t\t\taction: {\n\t\t\t\t\t\t...action,\n\t\t\t\t\t\ttype: name,\n\t\t\t\t\t\tpayload\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n};\n","import _ from 'lodash';\nimport * as catalogConstants from '../../../constants/CatalogConstants';\n/**\n * Create some data structures for fields and stuff\n * @param {Array} fieldValues\n * @param {Array} fieldElements\n * @param {Array} fieldStates\n */\nexport function parseCatalogFields(\n\tfields,\n\tfieldValues,\n\tcatalogFields,\n\tfieldStates\n) {\n\ttry {\n\t\t_.forEach(catalogFields, fieldElement => {\n\t\t\tconst { name } = fieldElement;\n\t\t\tif (fields[name]) {\n\t\t\t\tconsole.warn('Already defined field ! ');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// variables attributes are key value pairs separated by comma. ex: max_length=5,max_units=hours\n\t\t\tconst attributes = _.get(fieldElement, 'variableAttributes', '')\n\t\t\t\t.split(',')\n\t\t\t\t.reduce((acc, attr) => {\n\t\t\t\t\tconsole.log(attr);\n\t\t\t\t\tconst parts = attr.split('=', 2);\n\t\t\t\t\tif (parts.length > 0) {\n\t\t\t\t\t\tconst value = parts.length === 2 ? parts[1] : '';\n\t\t\t\t\t\tacc[_.camelCase(parts[0])] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {});\n\n\t\t\tconst canWrite = _.get(fieldElement, 'canWrite', true);\n\t\t\tconst canCreate = _.get(fieldElement, 'canCreate', true);\n\t\t\tconst canRead = _.get(fieldElement, 'canRead', true);\n\t\t\tconst readonly = \n\t\t\t\t_.get(fieldStates, [name, 'readonly'], false) ||\n\t\t\t\t_.get(fieldElement, 'readOnly', false);\n\t\t\tconst hidden = \n\t\t\t\t_.get(fieldStates, [name, 'hidden'], false) ||\n\t\t\t\t!_.get(fieldElement, 'visible', true);\n\t\t\tconst mandatory =\n\t\t\t\t_.get(fieldStates, [name, 'mandatory'], false) ||\n\t\t\t\t_.get(fieldElement, 'mandatory', false);\n\t\t\tconst field = _.assign(\n\t\t\t\t{},\n\t\t\t\tfieldElement,\n\t\t\t\t{\n\t\t\t\t\tcanWrite: canWrite,\n\t\t\t\t\tsys_readonly: !canWrite,\n\t\t\t\t\treadonly: readonly || !canWrite,\n\t\t\t\t\tvisible: !hidden && canRead,\n\t\t\t\t\tmandatory: mandatory,\n\t\t\t\t\tvariable_name: fieldElement.variableName,\n\t\t\t\t\t_cat_variable: true /* Need this for gForm Operation */,\n\t\t\t\t\tis_variable: true /* Need this for Save Operation */,\n\t\t\t\t\tmaxLength: attributes.maxLength,\n\t\t\t\t\tmaxUnit: attributes.maxUnit\n\t\t\t\t},\n\t\t\t\tfieldValues[name]\n\t\t\t);\n\t\t\tif (field.type === 'masked') {\n\t\t\t\tfield.confirmationValue = field.value;\n\t\t\t}\n\t\t\tif (field.type === 'container' && hidden) {\n\t\t\t\tfield._cascade_hidden = true;\n\t\t\t}\n\t\t\tfields[name] = field;\n\t\t});\n\t} catch (exception) {\n\t\tconsole.log('Error while processing catalog elements', exception);\n\t}\n}\n\nexport function parseFieldGraphQLResponse(\n\ttableName,\n\tsysId,\n\tfieldValues,\n\tfieldElements = [],\n\tfieldStates = [],\n\tannotations = []\n) {\n\tconst fields = {};\n\n\tif (!fieldValues) {\n\t\t// record not found or ACL says no sesame\n\t\treturn fields;\n\t}\n\n\tfieldValues = fieldValues.reduce((values, fieldValue) => {\n\t\tconst o = {\n\t\t\tvalue: fieldValue.value,\n\t\t\tdisplayValue: fieldValue.displayValue\n\t\t};\n\n\t\t// For multi value fields like glide_list\n\t\tif (fieldValue.valuesList.length) {\n\t\t\to.display_value_list = [];\n\t\t\tfieldValue.valuesList.forEach(item => {\n\t\t\t\to.display_value_list.push(item.displayValue);\n\t\t\t});\n\t\t} else {\n\t\t\to.valuesList = [];\n\t\t\to.display_value_list = [];\n\t\t}\n\t\tvalues[fieldValue.name] = o;\n\t\treturn values;\n\t}, {});\n\n\ttry {\n\t\t// aggregate into fields object\n\t\t_.forEach(fieldElements, fieldElement => {\n\t\t\tconst { name, dictionary } = fieldElement;\n\t\t\tconst fieldState = fieldStates[name] || {};\n\t\t\tconst visible = fieldState.hidden !== true;\n\n\t\t\t// move values from dictionary to field\n\t\t\tconst {\n\t\t\t\tlabel,\n\t\t\t\ttype,\n\t\t\t\tinternalType,\n\t\t\t\tdependentField,\n\t\t\t\tdependentTable,\n\t\t\t\tcanWrite,\n\t\t\t\tisMandatory,\n\t\t\t\tisReadonly,\n\t\t\t\tsys_readonly\n\t\t\t} = dictionary;\n\n\t\t\tif (type === 'glide_var') return;\n\n\t\t\tlet field = _.assign(\n\t\t\t\t{},\n\t\t\t\tfieldElement,\n\t\t\t\t{\n\t\t\t\t\ttype,\n\t\t\t\t\tdictionary,\n\t\t\t\t\tname,\n\t\t\t\t\tlabel,\n\t\t\t\t\tvisible,\n\t\t\t\t\treadonly: fieldState.readonly || false,\n\t\t\t\t\tmandatory: fieldState.mandatory || false,\n\t\t\t\t\tdependentField,\n\t\t\t\t\tdependentTable,\n\t\t\t\t\treferringTable: tableName,\n\t\t\t\t\treferringRecordId: sysId,\n\t\t\t\t\tinternalType\n\t\t\t\t},\n\t\t\t\tfieldValues[name]\n\t\t\t);\n\n\t\t\tswitch (field.type) {\n\t\t\t\tcase 'journal_input':\n\t\t\t\t\t// @note: clearing the display value since the display value is the journal history\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tdisplayValue: ''\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'currency':\n\t\t\t\tcase 'currency2':\n\t\t\t\tcase 'price': {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tdefaultCurrency,\n\t\t\t\t\t\tcurrencyCodes\n\t\t\t\t\t} = fieldElement;\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tcode: code,\n\t\t\t\t\t\tdefaultCurrency: defaultCurrency,\n\t\t\t\t\t\tcurrencyCodes: currencyCodes\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'phone_number_e164': {\n\t\t\t\t\tconst { value, country, countryCodes } = fieldElement;\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tcountry,\n\t\t\t\t\t\tcountryCodes\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'file_attachment': {\n\t\t\t\t\tconst { state, contentType } = fieldElement;\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tcontentType\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'table_name': {\n\t\t\t\t\tconst { displayValue } = fieldElement;\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'field_name': {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdisplayValue,\n\t\t\t\t\t\tdependentFieldLabel,\n\t\t\t\t\t\tdependentValue,\n\t\t\t\t\t\tdisplayValueWithPath\n\t\t\t\t\t} = fieldElement;\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tdisplayValue,\n\t\t\t\t\t\tdependentFieldLabel,\n\t\t\t\t\t\tdependentValue,\n\t\t\t\t\t\tdisplayValueWithPath\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'glide_list':\n\t\t\t\tcase 'reference': {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tisReferenceScriptableTable,\n\t\t\t\t\t\treferenceError\n\t\t\t\t\t} = fieldElement;\n\t\t\t\t\tconst messages = isReferenceScriptableTable && referenceError\n\t\t\t\t\t\t? [{ type: 'error', message: referenceError }]\n\t\t\t\t\t\t: [];\n\n\t\t\t\t\tfield = {\n\t\t\t\t\t\t...field,\n\t\t\t\t\t\tmessages: [...(field.messages || []), ...messages]\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'document_id': {\n\t\t\t\t\tconst { documentLabel, dependentValue } = fieldElement;\n\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\tdocumentLabel,\n\t\t\t\t\t\tdependentValue\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'variables':\n\t\t\t\t\tparseCatalogFields(\n\t\t\t\t\t\tfields,\n\t\t\t\t\t\tfieldValues,\n\t\t\t\t\t\tfieldElement.variables,\n\t\t\t\t\t\tfieldStates\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'choice':\n\t\t\t\t\tif (field.displayValue === null || field.displayValue === undefined)\n\t\t\t\t\t\tfield = Object.assign(field, {\n\t\t\t\t\t\t\tdisplayValue: ''\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// ACLs and dictionary attributes have final say in field props\n\t\t\tfield.sys_readonly = sys_readonly;\n\t\t\tif (!canWrite) field.readonly = true;\n\n\t\t\tif (isReadonly) field.readonly = true;\n\n\t\t\tif (isMandatory) field.mandatory = true;\n\n\t\t\tfields[name] = field;\n\t\t});\n\t} catch (e) {\n\t\tconsole.log('Error while processing fields', e);\n\t}\n\t// annotation is not a GlideElement type and\n\t// does not have all the dictionary values other types have\n\tObject.assign(fields, annotations);\n\n\treturn fields;\n}\n\nexport default {\n\tparseFieldGraphQLResponse\n};\n","import {\n\tVARIABLE_LAYOUT_QUERY_FRAGMENT,\n\tGlideElementVariables_ELEMENTS_QUERY_FRAGMENT,\n\tCATALOG_SCRIPTS_FRAGMENT,\n\tCATALOG_POLICIES_FRAGMENT,\n\tCATALOG_DATA_LOOKUP_QUERY_FRAGMENT\n} from './CatalogEnvironmentQuery';\n\nexport const LAYOUT_QUERY_KEY = 'GlideLayout_Query';\nexport const FORM_LAYOUT_QUERY_KEY = 'formLayout';\nexport const RECORD_VALUES_KEY = 'recordValues';\nexport const FIELD_ELEMENTS_KEY = 'elementsData';\nexport const FORMATTER_QUERY_KEY = 'formatters';\nexport const ANNOTATIONS_QUERY_KEY = 'annotations';\nexport const RELATED_LISTS_QUERY_KEY = 'relatedLists';\nexport const FIELD_VARIABLES_KEY = 'variables';\n\nexport const LayoutQueryFragment = `\nGlideLayout_Query {\n\tformLayout(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query) {\n\t\tbaseTable\n\t\ttable\n\t\tisValidRecord\n\t\tcanReadRecord\n\t\tisScriptableTable\n\t\tlastErrorMessage\n\t\tdomainSeparation {\n\t\t\tcanExpandScope\n\t\t\tdeterminingFieldName\n\t\t\tdomainId\n\t\t}\n\t\tsectionLayout {\n\t\t\tsysId\n\t\t\tcaption\n\t\t\tcaptionDisplay\n\t\t\trows {\n\t\t\t\tfields\n\t\t\t}\n\t\t}\n\t\tformSettings {\n\t\t\tisDetailsHidden\n\t\t\tisSectionMenuHidden\n\t\t\tisSectionCollapseDisabled\n\t\t\tdefaultSection {\n\t\t\t\tsysId\n\t\t\t}\n\t\t}\n\t\tformTabs {\n\t\t\tisDefaultTabOrder\n\t\t\tdefaultTabFocus\n\t\t\ttabsOrder {\n\t\t\t  label\n\t\t\t  value\n\t\t\t}\n\t\t}\n\t\tencodedRecord\n\t\tsysId\n\t\trecordValues {\n\t\t\tname\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t\tvaluesList {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t}\n\t\t}\n\t\tfieldStates {\n\t\t\tname\n\t\t\thidden\n\t\t\tmandatory\n\t\t\treadonly\n\t\t},\n\t\trelatedLists {\n\t\t\tsourceTable\n\t\t\ttargetTable\n\t\t\tcount\n\t\t\tfilter\n\t\t\tdisplayLabel\n\t\t\tlabel\n\t\t\tvalue\n\t\t\trelatedField\n\t\t}\n\t\tformatters {\n\t\t\tname\n\t\t\tsys_id\n\t\t}\n\t\tannotations {\n\t\t\tsysId\n\t\t\ttext\n\t\t\tannotationType\n\t\t\ttypeDisplayValue\n\t\t\tisPlainText\n\t\t}\n\t\t${VARIABLE_LAYOUT_QUERY_FRAGMENT}\n\t\telementsData {\n\t\t\tname:elementName\n\t\t\tdictionary:dictionaryData {\n\t\t\t\ttype:dictionaryType\n\t\t\t\tdependentField\n\t\t\t\tdependentFieldLabel\n\t\t\t\tdependentTable\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tcanWrite\n\t\t\t\tcanRead\n\t\t\t\tcanCreate\n\t\t\t\tinternalType\n\t\t\t\tisMandatory\n\t\t\t\tsys_readonly: sysReadonly\n\t\t\t\tattributes {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t\t...on GlideLayout_TemplateElementType {\n\t\t\t\tdependentField\n\t\t\t\tdependentValue\n\t\t\t}\n\t\t\t... on GlideLayout_TableNameElementType {\n\t\t\t\tdisplayValue\n\t\t\t}\n\n\t\t\t... on GlideLayout_FieldNameElementType {\n\t\t\t\tdisplayValue\n\t\t\t\tdependentFieldLabel\n\t\t\t\tdependentValue\n\t\t\t\tdisplayValueWithPath\n\t\t\t}\n\n\t\t\t... on GlideLayout_FileAttachmentElementType {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t\tstate\n\t\t\t\tcontentType\n\t\t\t}\n\n\t\t\t... on GlideLayout_ChoiceElementType {\n\t\t\t\tchoices {\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t... on GlideLayout_CurrencyElementType {\n\t\t\t\tvalue\n\t\t\t\tcode\n\t\t\t\tdefaultCurrency\n\t\t\t\tcurrencyCodes {\n\t\t\t\t\tcode\n\t\t\t\t\tsymbol\n\t\t\t\t}\n\t\t\t}\n\t\t\t... on GlideLayout_PhoneNumberElementType {\n\t\t\t\tvalue\n\t\t\t\tcountry\n\t\t\t\tcountryCodes {\n\t\t\t\t  code\n\t\t\t\t  name\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t... on GlideLayout_GlideListElementType {\n\t\t\t\treference\n\t\t\t}\n\n\t\t\t... on GlideLayout_DocumentIdElementType {\n\t\t\t\tdocumentLabel\n\t\t\t\tdependentValue\n\t\t\t}\n\n\t\t\t... on GlideLayout_ReferenceElementType {\n\t\t\t\treference\n\t\t\t\treferenceQualifier\n\t\t\t\treferenceKey\n\t\t\t\tuseReferenceQualifier\n\t\t\t\tdependent\n\t\t\t\tdependentOnField\n\t\t\t\trefAutoCompleter\n\t\t\t\trefAcOrderBy\n\t\t\t\trefAcColumns\n\t\t\t\trefAcColumnsSearch\n\t\t\t\trefAcDisplayValue\n\t\t\t\trefQualElements\n\t\t\t\trefContributions\n\t\t\t\tisDynamicCreate\n\t\t\t\tisReferenceScriptableTable\n\t\t\t\treferenceError\n\t\t\t}\n\n\t\t\t... on GlideLayout_VariablesElementType {\n\t\t\t    ${FIELD_VARIABLES_KEY} : ${GlideElementVariables_ELEMENTS_QUERY_FRAGMENT}\n\t\t\t}\n\n\t\t\t... on GlideLayout_ValueElementType {\n\t\t\t\tmaxLength\n\t\t\t\tdefaultRows\n\t\t\t}\n\n\t\t\t... on GlideLayout_GlideVarElementType {\n\t\t\t\tmodelTable\n\t\t\t\tglidevars: _elements {\n\t\t\t\t\tname: elementName\n\t\t\t\t\tdictionary: dictionaryData {\n\t\t\t\t\t\ttype: dictionaryType\n\t\t\t\t\t\tdependentFieldLabel\n\t\t\t\t\t\tdependentField\n\t\t\t\t\t\tdependentTable\n\t\t\t\t\t\tname\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tcanWrite\n\t\t\t\t\t\tcanRead\n\t\t\t\t\t\tcanCreate\n\t\t\t\t\t\tinternalType\n\t\t\t\t\t\tisMandatory\n\t\t\t\t\t\tsys_readonly: sysReadonly\n\t\t\t\t\t\tattributes {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_ChoiceElementType {\n\t\t\t\t\t\tchoices {\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_CurrencyElementType {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tdefaultCurrency\n\t\t\t\t\t\tcurrencyCodes {\n\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\tsymbol\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_PhoneNumberElementType {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tcountry\n\t\t\t\t\t\tcountryCodes {\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_GlideListElementType {\n\t\t\t\t\t\treference\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_ReferenceElementType {\n\t\t\t\t\t\treference\n\t\t\t\t\t\treferenceQualifier\n\t\t\t\t\t\treferenceKey\n\t\t\t\t\t\tuseReferenceQualifier\n\t\t\t\t\t\tdependent\n\t\t\t\t\t\tdependentOnField\n\t\t\t\t\t\trefAutoCompleter\n\t\t\t\t\t\trefAcOrderBy\n\t\t\t\t\t\trefAcColumns\n\t\t\t\t\t\trefAcColumnsSearch\n\t\t\t\t\t\trefAcDisplayValue\n\t\t\t\t\t\trefQualElements\n\t\t\t\t\t\trefContributions\n\t\t\t\t\t\tisDynamicCreate\n\t\t\t\t\t\tisReferenceScriptableTable\n\t\t\t\t\t\treferenceError\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_ValueElementType {\n\t\t\t\t\t\tmaxLength\n\t\t\t\t\t\tdefaultRows\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const SCRIPTING_QUERY_KEY = 'GlideClientScriptingEnvironment_Query';\nexport const GLOBALS_QUERY_KEY = 'ClientScriptingEnvironment_Globals';\nexport const UI_POLICIES_QUERY_KEY = 'ClientScriptingEnvironment_Policies';\nexport const CLIENT_SCRIPTS_QUERY_KEY = 'ClientScriptingEnvironment_Scripts';\nexport const GlideClientScriptingEnvironmentQueryFragment = `\nGlideClientScriptingEnvironment_Query {\n\t${GLOBALS_QUERY_KEY}(table: $table, sysId: $sysId, query: $query) {\n\t\tg_scratchpad\n\t\tg_language\n\t\tg_date_time_format\n\t\tg_decimal_separator\n\t\tg_user_grouping\n\t\tg_text_direction\n\t\tg_is_accessible\n\t}\n\t${CLIENT_SCRIPTS_QUERY_KEY}(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query) {\n\t\tonLoad {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tonChange {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tonSubmit {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tmessages {\n\t\t\tname\n\t\t\tvalue\n\t\t}\n\t}\n\t${UI_POLICIES_QUERY_KEY}(table: $table, view: \"$$parent.viewName$$\", sysId: $sysId, query: $query) {\n\t\tshortDescription\n\t\tsysId\n\t\treverse\n\t\tonLoad\n\t\tisRunScripts\n\t\tpreEvaluated\n\t\tpreEvaluatedResult\n\t\tscriptTrue {\n\t\t\tname\n\t\t\tscript\n\t\t}\n\t\tscriptFalse {\n\t\t\tname\n\t\t\tscript\n\t\t}\n\t\tactions {\n\t\t\tvisible\n\t\t\tname\n\t\t\tdisabled\n\t\t\tmandatory\n\t\t\tcleared: clearValue\n\t\t\trelatedList\n\t\t}\n\t\tconditions {\n\t\t\ttype\n\t\t\tterm\n\t\t\tfield: fieldName\n\t\t\tfieldLabel\n\t\t\tcolumnType\n\t\t\tvalue\n\t\t\toper: operator\n\t\t\toperatorLabel\n\t\t\tor: isOrQuery\n\t\t\tnewquery: isNewQuery\n\t\t\tpreEvaluatedTerm\n\t\t\tpreEvaluatedTermResult\n\t\t\treferenceFields {\n\t\t\t\ttable\n\t\t\t\tfieldName\n\t\t\t\tfieldLabel\n\t\t\t\tinternalType\n\t\t\t\treferenceTable\n\t\t\t}\n\t\t}\n\t}\n\t${CATALOG_SCRIPTS_FRAGMENT}\n\t${CATALOG_POLICIES_FRAGMENT}\n\n}\n`;\n\nexport const UI_ACTION_QUERY_KEY = 'GlideUIAction_Query';\nexport const UI_ACTIONS_KEY = 'uiActions';\nexport const UI_ACTION_FORM_ACTIONS = 'formActions';\nexport const ACTION_NODES = 'actionNodes';\nexport const UIActionQueryFragment = `\n${UI_ACTION_QUERY_KEY} {\n    ${UI_ACTIONS_KEY}(table:$table, sysId:$sysId, query: $query, view:\"$$parent.viewName$$\") {\n    \t${UI_ACTION_FORM_ACTIONS} {\n        \tlabel\n        \tname\n        \tsysId\n        \torder\n\t\t\tstyle\n\t\t\ttype\n\t\t\tclientScript\n\t\t\thasClientScript\n\t\t\thint\n\t\t\t}\n\t\t\tmessages {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t}\n\t\t\t${ACTION_NODES} {\n\t\t\t\t... on GlideUIAction_UIAction {\n\t\t\t\t\torder\n\t\t\t\t\tlabel\n\t\t\t\t\tname\n\t\t\t\t\tclientScript\n\t\t\t\t\ttype\n\t\t\t\t\tstyle\n\t\t\t\t\thint\n\t\t\t\t}\n\t\t\t\t... on GlideUIAction_UIActionGroupLayout {\n\t\t\t\t\torder\n\t\t\t\t\tlabel\n\t\t\t\t\toverflow\n\t\t\t\t\ttype\n\t\t\t\t\tstyle\n\t\t\t\t\tgroupActions {\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tname\n\t\t\t\t\t\tsysId\n\t\t\t\t\t\torder\n\t\t\t\t\t\thasClientScript\n\t\t\t\t\t\tclientScript\n\t\t\t\t\t\ttype\n\t\t\t\t\t\tstyle\n\t\t\t\t\t\thint\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n`;\n\nexport const USER_QUERY_KEY = 'GlideDomain_Query';\nexport const USER_QUERY_USER_KEY = 'user';\n\nexport const DATALOOKUP_QUERY_KEY = 'GlideDataLookupQuery_Query';\nexport const DATALOOKUP_CONFIG_KEY = 'dataLookup';\nexport const DATALOOKUP_FIELDS_KEY = 'fields';\nexport const DataLookupFragment = `\n${DATALOOKUP_QUERY_KEY} {\n\t${DATALOOKUP_CONFIG_KEY}(table: $table) {\n\t\tfields {\n\t\t\tfield\n        \tdefinitions {\n          \t\tname\n          \t\tsysId\n        \t}\n\t\t}\n\t}\n\t${CATALOG_DATA_LOOKUP_QUERY_FRAGMENT}\n}\n`;\n\nexport const SESSION_MESSAGE_QUERY_KEY = 'GlideDomain_Query';\nexport const SESSION_MESSAGE_CONFIG_KEY = 'session';\nexport const SESSION_MESSAGE_NOTIFICATIONS_KEY = 'notifications';\nexport const SessionMessageFragment = `\n${SESSION_MESSAGE_QUERY_KEY} {\n\t${SESSION_MESSAGE_CONFIG_KEY} {\n\t\tnotifications{\n\t\t\ttype\n\t\t\ttext\n\t\t\tnotificationType\n\t\t\tnotificationAttributes {\n\t\t\t\tattributeName\n\t\t\t\tattributeValue\n\t\t\t}\n\t\t\tchildNotifications {\n\t\t\t\ttype\n\t\t\t\ttext\n\t\t\t\tnotificationType\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const ATTACHMENT_ACL_QUERY_KEY = 'GlideAttachmentQuery_Query';\nexport const ATTACHMENT_ACL_ATTACHMENTS_KEY = 'attachments';\nexport const AttachmentAclQueryFragment = `\n\t${ATTACHMENT_ACL_QUERY_KEY} {\n\t\t${ATTACHMENT_ACL_ATTACHMENTS_KEY} (table: $table, sysId: $sysId) {\n\t\t\tcanCreate\n\t\t}\n\t}\n`;\n\nexport const QUERY_PREFIX =\n\t'GlideViewQuery_Query.uiView.glideLayoutItem._query.';\n","module.exports = __TECTONIC__$servicenow_ui_core;","export const isHostAction = (host, properties, id) => {\n\tif (id === properties.nowId) return true;\n\n\tif (!host) return false;\n\n\t//use host.nowId instead of properties.nowId to workaround timing issue in seismic\n\tif (id === host.nowId) return true;\n\n\tconst componentId = host.getComponentId();\n\tif (componentId && id === componentId) return true;\n\n\tconst nowIdAttr = host.getAttribute('now-id');\n\tif (nowIdAttr && id === nowIdAttr) return true;\n\n\tconst componentIdAttr = host.getAttribute('component-id');\n\tif (componentIdAttr && id === componentIdAttr) return true;\n\n\treturn false;\n};\n","import _ from 'lodash';\n\nimport {\n\tcreateDataProvider,\n\tgetFetchActions\n} from '@devsnc/library-form';\nimport {\n\tDATASOURCE_NAMES,\n\tisReadonly,\n\tgetDataSourcesForComponents,\n\tgetFormModel,\n\tDATASOURCE_KEYS,\n\tDATASOURCE_TRANSFORM_ORDER\n} from './utils';\nimport { QUERY_PREFIX } from '../../../resources/EnvironmentQuery';\n\nconst DATA_PROVIDER = 'SN-FORM-DATA-CONNECTED';\n\nexport const fetchFormDataActions = getFetchActions(DATA_PROVIDER);\n\nconst getRecordValueProps = (recordValues, fieldName) => {\n\tconst recordValue = recordValues.find(record => record.name === fieldName);\n\treturn {\n\t\tvalue: recordValue ? recordValue.value : '',\n\t\tdisplayValue: recordValue ? recordValue.displayValue : '',\n\t\tvaluesList:\n\t\t\trecordValue && recordValue.valuesList ? recordValue.valuesList : [],\n\t\tdisplay_value_list:\n\t\t\trecordValue && recordValue.valuesList\n\t\t\t\t? recordValue.valuesList.map(value => value.displayValue)\n\t\t\t\t: []\n\t};\n};\n\nconst getUiDomain = (data, referringTable, referringRecordId) => {\n\tconst uiDomain = _.get(data, 'GlideRecordDomainQuery_Query.uiDomain') || {};\n\tconst { tableDisplayValue, domainElementData, recordValues } = uiDomain;\n\tif (_.isEmpty(domainElementData)) return null;\n\tconst fields = domainElementData\n\t\t.filter(elm => elm && elm.dictionaryData)\n\t\t.map((elm, index) => {\n\t\t\tconst {\n\t\t\t\tdictionaryData: { label, name, internalType },\n\t\t\t\treference\n\t\t\t} = elm;\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tlabel,\n\t\t\t\t...getRecordValueProps(recordValues, name),\n\t\t\t\treference,\n\t\t\t\treferringTable,\n\t\t\t\treferringRecordId,\n\t\t\t\ttype: internalType === 'domain_id' ? 'reference' : internalType,\n\t\t\t\tmandatory: index == 0\n\t\t\t};\n\t\t});\n\treturn {\n\t\ttableDisplayValue,\n\t\tfields\n\t};\n};\n\nconst transformView = (data, classicForm) => {\n\tif (!classicForm)\n\t\treturn {\n\t\t\tcomputedView: _.get(data, 'GlideViewQuery_Query.uiView.view'),\n\t\t\tisWhitelistedForEdit: true // uib page should always allow default view\n\t\t};\n\n\treturn {\n\t\tcomputedView: _.get(data, 'GlideViewQuery_Query.uiView.view'),\n\t\tisWhitelistedForEdit: _.get(\n\t\t\tdata,\n\t\t\t'GlideViewQuery_Query.uiView.isWhitelistedForEdit'\n\t\t)\n\t};\n};\n\nexport const createUpdatingProperties = dataSources => (\n\tdata,\n\tstate,\n\tproperties\n) => {\n\tconst {\n\t\ttable,\n\t\tsysId,\n\t\tviews,\n\t\tview,\n\t\tforcedViewName,\n\t\tquery,\n\t\treadOnlyForm,\n\t\tactive,\n\t\tdefaultTab,\n\t\thideDetails,\n\t\tworkspaceConfigId\n\t} = properties;\n\tconst { classicForm } = state;\n\tconst { computedView, isWhitelistedForEdit } = transformView(\n\t\tdata,\n\t\tclassicForm\n\t);\n\tconst uiDomain = getUiDomain(data, table, sysId);\n\tconst trueTable = _.get(data, 'GlideViewQuery_Query.uiView.glideLayoutItem._query.GlideLayout_Query.formLayout.table');\n\tconst record = {\n\t\ttable,\n\t\tsysId,\n\t\tviews,\n\t\tquery,\n\t\tview: computedView,\n\t\ttrueTable,\n\t\tisWhitelistedForEdit\n\t};\n\tconst isFormReadonly = isReadonly(\n\t\tstate,\n\t\tcomputedView,\n\t\tisWhitelistedForEdit\n\t);\n\tconst isMissingWorkspaceView =\n\t\tisFormReadonly && !readOnlyForm && !isWhitelistedForEdit && classicForm;\n\n\t// clear the data fetchers\n\tconst newState = {\n\t\t...state,\n\t\trecord,\n\t\tisFormReadonly,\n\t\tisReadOnly: isFormReadonly,\n\t\tisMissingWorkspaceView\n\t};\n\n\tlet configurationItems = [];\n\n\tconst update = Object.keys(dataSources)\n\t\t.sort(\n\t\t\t(first, second) =>\n\t\t\t\tDATASOURCE_TRANSFORM_ORDER[first] -\n\t\t\t\tDATASOURCE_TRANSFORM_ORDER[second]\n\t\t)\n\t\t.reduce((update, name) => {\n\t\t\tlet updatedData = {};\n\t\t\tconst key = DATASOURCE_KEYS[name];\n\t\t\tswitch (name) {\n\t\t\t\tcase DATASOURCE_NAMES.formLayout:\n\t\t\t\t\tupdatedData = dataSources[name].transform(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tnewState,\n\t\t\t\t\t\tproperties,\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tupdate[DATASOURCE_KEYS[DATASOURCE_NAMES.fieldDA]] ||\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t).declarativeFieldActions\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase DATASOURCE_NAMES.uxAction:\n\t\t\t\t\tconst formModel = getFormModel({ ...newState, ...update });\n\t\t\t\t\tupdatedData = dataSources[name].transform(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tnewState,\n\t\t\t\t\t\tproperties,\n\t\t\t\t\t\tformModel\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tupdatedData = dataSources[name].transform(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tnewState,\n\t\t\t\t\t\tproperties\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tupdatedData &&\n\t\t\t\t(updatedData.configurationItems ||\n\t\t\t\t\tupdatedData.configurationItem)\n\t\t\t)\n\t\t\t\tconfigurationItems = [\n\t\t\t\t\t...configurationItems,\n\t\t\t\t\t...(updatedData.configurationItems || [\n\t\t\t\t\t\tupdatedData.configurationItem\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\treturn {\n\t\t\t\t...update,\n\t\t\t\t[key]: updatedData\n\t\t\t};\n\t\t}, {});\n\tconfigurationItems = _.orderBy(configurationItems, ['order']);\n\n\treturn {\n\t\tformData: {\n\t\t\tisReadOnly: isFormReadonly,\n\t\t\tisMissingWorkspaceView,\n\t\t\tuiDomain,\n\t\t\trecord: {\n\t\t\t\t...record,\n\t\t\t\tsys_id: update[DATASOURCE_NAMES.formLayout].sysId\n\t\t\t},\n\t\t\tworkspaceConfigId:\n\t\t\t\tworkspaceConfigId ||\n\t\t\t\t_.get(state, 'behaviors.wsConfigSysId', ''),\n\t\t\t...update\n\t\t},\n\t\tconfigurationItems\n\t};\n};\n\n// default graphql handlers if fetchingHandlers doesn't pass in as a parameters\nconst createGraphQLHandlers = dataSources => {\n\tconst updatingProperties = createUpdatingProperties(dataSources);\n\treturn {\n\t\tstartedHandler: {\n\t\t\teffect: () => {},\n\t\t\tstopPropagation: true\n\t\t},\n\t\tsucceededHandler: {\n\t\t\teffect: ({\n\t\t\t\tstate,\n\t\t\t\taction: {\n\t\t\t\t\tpayload: { data = {} }\n\t\t\t\t},\n\t\t\t\tupdateProperties,\n\t\t\t\tproperties\n\t\t\t}) => {\n\t\t\t\tconst { formData } = updatingProperties(\n\t\t\t\t\tdata,\n\t\t\t\t\tstate,\n\t\t\t\t\tproperties\n\t\t\t\t);\n\t\t\t\tupdateProperties({\n\t\t\t\t\tformData\n\t\t\t\t});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\tfailedHandle: {\n\t\t\teffect: ({ updateProperties, action }) => {\n\t\t\t\tupdateProperties({ loading: false, error: action.payload });\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t}\n\t};\n};\n\nconst defaultSelectableProps = { formData: { selectable: true } };\n\nconst getComponentsForForm = (classicForm = false, properties = { showActivityStreamInDetails: true }) => {\n\tconst formComponents = [\n\t\t'now-record-common-header',\n\t\t'now-record-common-sidebar',\n\t\t'now-record-common-uiactionbar',\n\t\t'now-record-form-blob',\n\t\t'now-activity-combo',\n\t\t'sn-record-ribbon',\n\t\t'sn-component-shn-modal'\n\t];\n\tif (classicForm)\n\t\treturn formComponents;\n\t\n\tconst { showActivityStreamInDetails } = properties;\n\treturn showActivityStreamInDetails ? formComponents : _.without(formComponents, 'now-activity-combo');\n};\n\nexport const getDataSourcesForForm = (classicForm = false, properties) => {\n\tconst queryPrefix = QUERY_PREFIX;\n\tconst components = getComponentsForForm(classicForm, properties);\n\tconst dataSources = getDataSourcesForComponents(\n\t\tqueryPrefix,\n\t\tcomponents,\n\t\tclassicForm\n\t);\n\n\treturn dataSources;\n};\n\nexport const createUpdateDataHelper = (classicForm, properties) => {\n\tconst dataSources = getDataSourcesForForm(classicForm, properties);\n\tconst updatingProperties = createUpdatingProperties(dataSources);\n\n\treturn updatingProperties;\n};\n\nconst getQueryTemplate = isClassicForm => {\n\treturn isClassicForm\n\t\t? `query($table: String!, $sysId: String!, $views: String!, $query: String!, $workspaceConfigId: String, $actionConfigId: String, $ribbonConfigId:String, $headerConfigId:String, $highlightedValueConfigId:String, $forcedViewName:String) {\n\t\tGlideRecordDomainQuery_Query {\n\t\t\tuiDomain(table: $table, sysId: $sysId, query: $query) {\n\t\t\t\ttableDisplayValue\n\t\t\t\trecordValues {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvaluesList {\n\t\t\t\t\t  value\n\t\t\t\t\t  displayValue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdomainElementData {\n\t\t\t\t\tdictionaryData {\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tname\n\t\t\t\t\t\tinternalType\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideRecordDomainQuery_ReferenceElementType {\n\t\t\t\t\t\treference\n\t\t\t\t\t\tuseReferenceQualifier\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tGlideViewQuery_Query {\n\t\t\tuiView(table: $table, views: $views, sysId: $sysId, workspaceConfigId: $workspaceConfigId, query: $query, forcedViewName: $forcedViewName) {\n\t\t\t\tisWhitelistedForEdit\n\t\t\t\tview\n\t\t\t\tglideLayoutItem(table: $table, sysId: $sysId, query: $query) {\n\t\t\t\t\t_query {\n\t\t\t\t\t\t<<queries>>\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`\n\t\t: `query($table: String!, $sysId: String!, $views: String!, $query: String!, $workspaceConfigId: String, $actionConfigId: String, $ribbonConfigId:String, $headerConfigId:String, $highlightedValueConfigId:String, $viewRuleConfigId:String, $forcedViewName:String) {\n\t\tGlideRecordDomainQuery_Query {\n\t\t\tuiDomain(table: $table, sysId: $sysId, query: $query) {\n\t\t\t\ttableDisplayValue\n\t\t\t\trecordValues {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvaluesList {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdomainElementData {\n\t\t\t\t\tdictionaryData {\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tname\n\t\t\t\t\t\tinternalType\n\t\t\t\t\t}\n\t\t\t\t\t...on GlideRecordDomainQuery_ReferenceElementType {\n\t\t\t\t\t\treference\n\t\t\t\t\t\tuseReferenceQualifier\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tGlideViewQuery_Query {\n\t\t\tuiView(table: $table, views: $views, sysId: $sysId, workspaceConfigId: $workspaceConfigId, query: $query, viewRuleConfigId: $viewRuleConfigId, forcedViewName: $forcedViewName) {\n\t\t\t\tview\n\t\t\t\tglideLayoutItem(table: $table, sysId: $sysId, query: $query) {\n\t\t\t\t\t_query {\n\t\t\t\t\t\t<<queries>>\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`;\n};\n\nexport const createFormDataProvider = (\n\tfetchingHandlers,\n\tselectableProps,\n\tfetchActionNames,\n\tclassicForm = false\n) => {\n\tconst dataSources = getDataSourcesForForm(classicForm);\n\n\treturn createDataProvider({\n\t\tname: DATA_PROVIDER,\n\t\tdataSources: Object.values(dataSources),\n\t\tqueryTemplate: getQueryTemplate(classicForm),\n\t\tvariableParams: {\n\t\t\ttable: { mandatory: true },\n\t\t\tviews: { mandatory: false },\n\t\t\tsysId: { mandatory: true },\n\t\t\tquery: { mandatory: false },\n\t\t\tworkspaceConfigId: { mandatory: false },\n\t\t\tactionConfigId: { mandatory: false },\n\t\t\theaderConfigId: { mandatory: false },\n\t\t\tribbonConfigId: { mandatory: false },\n\t\t\thighlightedValueConfigId: { mandatory: false },\n\t\t\tviewRuleConfigId: { mandatory: false },\n\t\t\tforcedViewName: {mandatory: false}\n\t\t},\n\t\tadditionProps: {\n\t\t\treadOnlyForm: { default: false },\n\t\t\tview: { default: '' },\n\t\t\tactive: {}\n\t\t},\n\t\tselectableProps: selectableProps || defaultSelectableProps,\n\t\tgetParams(properties, state) {\n\t\t\tconst {\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tviews = '',\n\t\t\t\tview = '',\n\t\t\t\tquery = '',\n\t\t\t\tworkspaceConfigId = '',\n\t\t\t\tactionConfigId = '',\n\t\t\t\theaderConfigId = '',\n\t\t\t\tribbonConfigId = '',\n\t\t\t\thighlightedValueConfigId = '',\n\t\t\t\tviewRuleConfigId = '',\n\t\t\t\tforcedViewName = ''\n\t\t\t} = properties;\n\t\t\tconst allViews = views || view;\n\t\t\tconst fetchQuery = state.domainQuerySet ? state.domainQuery : query;\n\t\t\tlet moreParams = {};\n\t\t\tif (classicForm) {\n\t\t\t\tconst wsConfigSysId = _.get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'behaviors.wsConfigSysId',\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t\tmoreParams = {\n\t\t\t\t\tworkspaceConfigId: workspaceConfigId || wsConfigSysId\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmoreParams = {\n\t\t\t\t\tactionConfigId,\n\t\t\t\t\theaderConfigId,\n\t\t\t\t\tribbonConfigId,\n\t\t\t\t\thighlightedValueConfigId,\n\t\t\t\t\tviewRuleConfigId\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tquery: fetchQuery,\n\t\t\t\tviews: _.isArray(allViews) ? allViews.join(',') : allViews,\n\t\t\t\tforcedViewName: forcedViewName,\n\t\t\t\t...moreParams\n\t\t\t};\n\t\t},\n\t\tgraphqlHandlers: fetchingHandlers || createGraphQLHandlers(dataSources),\n\t\tfetchActionNames,\n\t\tgetRuntimeGraphQLArguments: ({\n\t\t\tproperties\n\t\t}) => {\n\t\t\tif (classicForm) return {}; // no changes in classicForm\n\n\t\t\tconst {\n\t\t\t\tshowActivityStreamInDetails\n\t\t\t} = properties;\n\t\t\tif (showActivityStreamInDetails)\n\t\t\t\treturn {};\n\n\t\t\tconst dataSources = getDataSourcesForForm(classicForm, properties);\n\n\t\t\treturn {\n\t\t\t\tdataSources: Object.values(dataSources)\n\t\t\t};\n\t\t}\n\t});\n};\n","module.exports = __TECTONIC__sn_uxpage_presource_18_0_5;","export const notificationProcessor = (table, sysId) => notifications => {\n\tconst extras = {\n\t\t...(table ? { table } : {}),\n\t\t...(sysId ? { sysId } : {})\n\t};\n\n\tif (!notifications) return [];\n\n\treturn notifications.reduce((messages, n) => {\n\t\tif (n.text) {\n\t\t\tmessages.push({\n\t\t\t\ttype: n.type || 'info',\n\t\t\t\tmessage: n.text,\n\t\t\t\t...extras\n\t\t\t});\n\t\t}\n\t\treturn messages;\n\t}, []);\n};\n","import { snHttpFactory } from 'sn-http-request';\nimport { ATFHelper } from '@devsnc/library-form';\n\nexport const http = snHttpFactory({\n\txsrfToken: window.g_ck,\n\tbatching: false\n});\n\nexport function sendRequestFactory(handleSessionMessages) {\n\tconst atfHelper = ATFHelper(window);\n\treturn function sendRequest(url, method, options) {\n\t\tif (atfHelper.isInATFContext())\n\t\t\toptions.params = {\n\t\t\t\t...options.params,\n\t\t\t\t...atfHelper.getTransactionIds()\n\t\t\t};\n\t\tconst {\n\t\t\theaders = {\n\t\t\t\t'X-WantSessionNotificationMessages': true\n\t\t\t},\n\t\t\tparams = {},\n\t\t\tbody = {},\n\t\t\tbroadcastResourcesChanged = () => {},\n\t\t\t...moreOptions\n\t\t} = options;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\thttp.request(url, method, {\n\t\t\t\theaders,\n\t\t\t\tparams,\n\t\t\t\t...moreOptions,\n\t\t\t\tdata: body\n\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tPromise.resolve(resolve(response)).then(\n\t\t\t\t\t\tbroadcastResourcesChanged(response)\n\t\t\t\t\t);\n\t\t\t\t\tif (handleSessionMessages) {\n\t\t\t\t\t\thandleSessionMessages(response);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(httpResponse => {\n\t\t\t\t\tconst response = httpResponse.response;\n\t\t\t\t\tPromise.resolve(reject(response)).then(\n\t\t\t\t\t\tbroadcastResourcesChanged(response)\n\t\t\t\t\t);\n\t\t\t\t\tif (handleSessionMessages) {\n\t\t\t\t\t\thandleSessionMessages(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\t};\n}\n\n/**\n * Encodes the provided parameter object key/values\n * @param {Object} parameters\n * @returns {String} param=value&param2=value2...\n */\nexport function encodeURIParameters(obj) {\n\tlet parts = Object.keys(obj).reduce(function(a, k) {\n\t\ta.push(k + '=' + encodeURIComponent(obj[k]));\n\t\treturn a;\n\t}, []);\n\treturn parts.join('&');\n}\n","import {\n\tRECORD_NOTIFICATIONS_CHANGED,\n\tADD_NOTIFICATIONS,\n\tCLEAR_NOTIFICATIONS,\n\tREMOVE_NOTIFICATION,\n\tFORM_DATA_CONNECTED_ADD_NOTIFICATIONS,\n\tFORM_DATA_CONNECTED_REMOVE_NOTIFICATIONS,\n\tFORM_DATA_CONNECTED_CLEAR_NOTIFICATIONS,\n\tRIBBON_ADD_NOTIFICATIONS,\n\tRIBBON_REMOVE_NOTIFICATIONS,\n\tRIBBON_CLEAR_NOTIFICATIONS,\n} from '../../constants/ScriptingActions';\nimport { isHostAction } from '../../utils/seismic';\nimport _ from 'lodash';\n\nconst getType = notifications => {\n\tif (notifications.length == 0) {\n\t\treturn 'clear';\n\t} else {\n\t\tif (notifications.findIndex(n => n.type === 'error') > -1) {\n\t\t\treturn 'error';\n\t\t} else if (notifications.findIndex(n => n.type === 'warning') > -1) {\n\t\t\treturn 'warning';\n\t\t} else if (notifications.findIndex(n => n.type === 'info') > -1) {\n\t\t\treturn 'info';\n\t\t} else if (notifications.findIndex(n => n.type === 'success') > -1) {\n\t\t\treturn 'success';\n\t\t}\n\t}\n};\n\nconst dispatchNotificationsChanged = (notifications, state, dispatch) => {\n\tconst {\n\t\tproperties: { table, sysId }\n\t} = state;\n\tconst type = getType(notifications);\n\tdispatch(RECORD_NOTIFICATIONS_CHANGED, {\n\t\ttype,\n\t\tsysId,\n\t\ttable\n\t});\n};\n\nconst updateNotificationsState = (\n\ttype,\n\tnewNotifications,\n\tstate,\n\tdispatch,\n\tupdateState\n) => {\n\tif (type === 'add') {\n\t\tupdateState({\n\t\t\tpath: 'notifications',\n\t\t\tvalue: newNotifications,\n\t\t\toperation: 'concat'\n\t\t});\n\t} else {\n\t\tupdateState({\n\t\t\tnotifications: newNotifications\n\t\t});\n\t}\n\n\tdispatchNotificationsChanged(newNotifications, state, dispatch);\n};\n\nconst addNotificationsEffect = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState,\n\tproperties,\n\thost\n}) => {\n\tconst {\n\t\tpayload: { notifications, items }\n\t} = action;\n\tconst { classicForm } = state;\n\n\tif (classicForm) {\n\t\tupdateNotificationsState(\n\t\t\t'add',\n\t\t\tnotifications,\n\t\t\tstate,\n\t\t\tdispatch,\n\t\t\tupdateState\n\t\t);\n\t} else {\n\t\tdispatch(FORM_DATA_CONNECTED_ADD_NOTIFICATIONS, {\n\t\t\titems: notifications || items,\n\t\t\t__sourceAction: {\n\t\t\t\tid: _.get(action, 'meta.id'),\n\t\t\t\ttype: action.type\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst clearNotificationsEffect = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState,\n\thost,\n\tproperties\n}) => {\n\tconst {\n\t\tpayload,\n\t\tmeta: { id }\n\t} = action;\n\tconst { classicForm } = state;\n\n\tif (classicForm) {\n\t\tconst {\n\t\t\tnotificationAction: {\n\t\t\t\ttype\n\t\t\t}\n\t\t} = payload;\n\t\tif (type !== 'clear') return;\n\t\tupdateNotificationsState(\n\t\t\ttype,\n\t\t\t[],\n\t\t\tstate,\n\t\t\tdispatch,\n\t\t\tupdateState\n\t\t);\n\t} else {\n\t\tdispatch(FORM_DATA_CONNECTED_CLEAR_NOTIFICATIONS, {\n\t\t\t__sourceAction: {\n\t\t\t\tid,\n\t\t\t\ttype: action.type\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst removeNotificationsEffect = ({\n\t\tstate,\n\t\taction,\n\t\tdispatch,\n\t\tproperties,\n\t\thost\n\t}) => {\n\tconst {\n\t\tpayload: { notifications, items }\n\t} = action;\n\tconst { classicForm } = state;\n\n\tif (classicForm) return;\n\n\tdispatch(FORM_DATA_CONNECTED_REMOVE_NOTIFICATIONS, {\n\t\titems: notifications || items,\n\t\t__sourceAction: {\n\t\t\tid: _.get(action, 'meta.id'),\n\t\t\ttype: action.type\n\t\t}\n\t});\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[ADD_NOTIFICATIONS]: {\n\t\t\teffect: addNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[RIBBON_ADD_NOTIFICATIONS]: {\n\t\t\teffect: addNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t'RECORD_PAGE_TABS#ADD_NOTIFICATIONS': {\n\t\t\teffect: addNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#ADD_NOTIFICATIONS': {\n\t\t\teffect: addNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[CLEAR_NOTIFICATIONS]: {\n\t\t\teffect: clearNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[RIBBON_CLEAR_NOTIFICATIONS]: {\n\t\t\teffect: clearNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t'RECORD_PAGE_TABS#CLEAR_NOTIFICATIONS': {\n\t\t\teffect: clearNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#CLEAR_NOTIFICATIONS': {\n\t\t\teffect: clearNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[REMOVE_NOTIFICATION]: {\n\t\t\teffect: ({\n\t\t\t\tstate,\n\t\t\t\taction,\n\t\t\t\tdispatch,\n\t\t\t\tupdateState\n\t\t\t}) => {\n\t\t\t\tconst {\n\t\t\t\t\tnotifications\n\t\t\t\t} = state;\n\t\t\t\tconst {\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tindex\n\t\t\t\t\t}\n\t\t\t\t} = action;\n\t\t\t\tconst {\n\t\t\t\t\tclassicForm\n\t\t\t\t} = state;\n\n\t\t\t\tif (!classicForm) return;\n\n\t\t\t\tconst updateNotifications = [\n\t\t\t\t\t...notifications.slice(0, index),\n\t\t\t\t\t...notifications.slice(index + 1)\n\t\t\t\t];\n\t\t\t\tupdateNotificationsState(\n\t\t\t\t\t'remove',\n\t\t\t\t\tupdateNotifications,\n\t\t\t\t\tstate,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tupdateState\n\t\t\t\t);\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[RIBBON_REMOVE_NOTIFICATIONS]: {\n\t\t\teffect: removeNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t'RECORD_PAGE_TABS#REMOVE_NOTIFICATIONS': {\n\t\t\teffect: removeNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t},\n\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#REMOVE_NOTIFICATIONS': {\n\t\t\teffect: removeNotificationsEffect,\n\t\t\tstopPropagation: true\n\t\t}\n\t}\n};\n","export function GlideFormSectionManager(g_Form) {\n\tconst gForm = g_Form;\n\tconst getSections = () => {\n\t\tif (!gForm || !gForm.$private || !gForm.$private.options) return [];\n\t\treturn gForm.$private.options('sections');\n\t};\n\tconst getSection = sectionName => {\n\t\tconst sections = getSections();\n\t\tif (!sections || !sections.length) return null;\n\t\treturn sections.find(section => section.caption === sectionName);\n\t};\n\tconst setSectionExpanded = (sectionName, expanded) => {\n\t\tconst targetSection = getSection(sectionName);\n\t\tif (!targetSection || targetSection.expanded === expanded) return;\n\t\ttargetSection.expanded = expanded;\n\t\tgForm.$private.events.propertyChange(\n\t\t\t'SECTION',\n\t\t\ttargetSection.caption,\n\t\t\t'expanded',\n\t\t\texpanded\n\t\t);\n\t};\n\treturn {\n\t\tgetSections,\n\t\tgetSection,\n\t\tsetSectionExpanded\n\t};\n}\n","import { isHostAction } from './seismic';\nexport const UXF_CSDB_ID = Symbol.for('__DO_NOT_USE_THS_IS_NOT_A_PUBLIC_API__uxfCsdbId');\n\nexport const validateSourceCSDB = (host, properties, action) => {\n\tif (action.meta && action.meta[UXF_CSDB_ID])\n\t\treturn isHostAction(host, properties, action.meta[UXF_CSDB_ID]);\n\treturn true;\n}\n","module.exports = __TECTONIC__$devsnc_sn_scripted_modal;","export const DOMAIN_SCOPES = {\n\tRECORD: 'RECORD',\n\tSESSION: 'SESSION'\n};\nimport { TOGGLE_DOMAIN_SCOPE } from '../../../constants/ScriptingActions';\n\nexport function DomainProviderFactory(\n\tdata,\n\tgForm,\n\tdispatch,\n\tcurrentDomainScope\n) {\n\tlet domainDeterminationFieldName = null;\n\n\tlet domainScope = currentDomainScope || DOMAIN_SCOPES.RECORD;\n\tconst baseSysDomainFieldName = 'sys_domain';\n\tconst referenceType = 'reference';\n\n\tlet api = {\n\t\tisDomainEnabledRecord: () => false,\n\t\tgetDomainScope: () => domainScope,\n\t\ttoggleDomainScope: () => {},\n\t\thasDomainChanged: () => false\n\t};\n\n\tconst provider = {\n\t\tgetApi: () => api\n\t};\n\n\t// if the data needed to provide domain functionality has not been provided, return\n\tconst isDataInvalid =\n\t\t!data ||\n\t\t!data.layout ||\n\t\t!data.layout.formFields ||\n\t\t!data.layout.domainSeparation ||\n\t\t!gForm;\n\n\tif (isDataInvalid) return provider;\n\n\t// construct provider\n\tconst {\n\t\tlayout: { domainSeparation: domain, formFields }\n\t} = data;\n\n\t// if domain separation is not enabled return\n\tif (!domain.canExpandScope) return provider;\n\n\tapi = {\n\t\t...api,\n\t\tisDomainEnabledRecord: () => true,\n\t\ttoggleDomainScope: () => {\n\t\t\tdomainScope =\n\t\t\t\tdomainScope === DOMAIN_SCOPES.RECORD\n\t\t\t\t\t? DOMAIN_SCOPES.SESSION\n\t\t\t\t\t: DOMAIN_SCOPES.RECORD;\n\t\t\tdispatch(TOGGLE_DOMAIN_SCOPE, { domainScope: domainScope });\n\t\t}\n\t};\n\n\tdomainDeterminationFieldName = domain.determiningFieldName;\n\n\t// if the user has not configured a domain determining field, then we wont really be able to check if domain has changed\n\t// reliable, because business rules will override potential changes on sys_domain field\n\t// or if new record, we won't pop domainHasChanged warning cuz there is no data to lose\n\tif (\n\t\tdomainDeterminationFieldName === baseSysDomainFieldName ||\n\t\tgForm.isNewRecord()\n\t)\n\t\treturn provider;\n\n\t// get domain field if on form\n\tconst domainField = formFields.find(\n\t\tx =>\n\t\t\tx.name === domainDeterminationFieldName ||\n\t\t\tx.reference === domainDeterminationFieldName\n\t);\n\n\t// if domain field is not on form, we will return\n\tif (!domainField) return provider;\n\n\tdomainDeterminationFieldName = domainField.name;\n\n\tlet domainCheckResolve = null;\n\tlet domainCheckReject = null;\n\tconst domainCheckPromise = new Promise((resolve, reject) => {\n\t\tdomainCheckResolve = resolve;\n\t\tdomainCheckReject = reject;\n\t});\n\n\tconst domainFieldIsReference =\n\t\tdomainField.dictionary && domainField.dictionary.type === referenceType;\n\n\tapi = {\n\t\t...api,\n\t\thasDomainChanged: () => {\n\t\t\ttry {\n\t\t\t\t// FIRST compare domain determing values (eg. company - initial (CompanyA) vs current (CompanyB))\n\t\t\t\tif (\n\t\t\t\t\tdomainField.originalValue ===\n\t\t\t\t\t\tgForm.getValue(domainDeterminationFieldName) ||\n\t\t\t\t\t!domainFieldIsReference\n\t\t\t\t)\n\t\t\t\t\treturn false;\n\n\t\t\t\tgForm.getReference(domainDeterminationFieldName, function(gr) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// SECOND - if (eg. company value was changed) - compare the domains of the companies\n\t\t\t\t\t\tif (gr && baseSysDomainFieldName in gr)\n\t\t\t\t\t\t\tdomainCheckResolve(\n\t\t\t\t\t\t\t\tdomain.domainId !== gr[baseSysDomainFieldName]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\telse domainCheckResolve(false);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn Promise.reject(domainCheckReject(e));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn domainCheckPromise;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn provider;\n}\n","import _ from 'lodash';\n\nexport const EVENT_CHANGE = 'change';\nexport const EVENT_PROPERTY_CHANGE = 'propertyChange';\nexport const PROPERTY_CHANGE_FIELD = 'FIELD';\nexport const PROPERTY_CHANGE_SECTION = 'SECTION';\n\nconst unregisterHandler = (handlers, fn) => {\n\treturn _.remove(handlers, handler => handler === fn);\n};\n\nconst getDependentFields = (fields, fieldName) =>\n\tObject.keys(fields)\n\t\t.filter(f => fields[f].dependentField === fieldName)\n\t\t.map(f => fields[f]);\n\nconst createForm = (fields, sections) => {\n\tlet _onChangeHandlers = [];\n\tlet _onPropertyChangeHandlers = [];\n\tlet _dirtyFields = {};\n\tconst _options = {\n\t\tsections\n\t};\n\n\tObject.keys(fields).forEach(fieldName => {\n\t\tfields[fieldName].originalValue = fields[fieldName].value;\n\t});\n\n\tconst _getField = name => fields[name];\n\tconst _fireValueChange = (field, value) => {\n\t\tif (_onChangeHandlers.length > 0) {\n\t\t\t_onChangeHandlers.forEach(function(fn) {\n\t\t\t\tfn.call(\n\t\t\t\t\tfn,\n\t\t\t\t\tfield.name,\n\t\t\t\t\tfield.originalValue,\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.displayValue\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst _firePropChange = (field, type, propName) => {\n\t\tif (_onPropertyChangeHandlers.length > 0) {\n\t\t\t_onPropertyChangeHandlers.forEach(function(fn) {\n\t\t\t\tfn.call(fn, type, field.name, propName, field[propName]);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst unregisterPropChangeHandler = fn => {\n\t\t_onPropertyChangeHandlers = unregisterHandler(\n\t\t\t_onPropertyChangeHandlers,\n\t\t\tfn\n\t\t);\n\t};\n\n\tconst unregisterChangeHandler = fn => {\n\t\t_onChangeHandlers = unregisterHandler(_onChangeHandlers, fn);\n\t};\n\n\treturn {\n\t\tisNewRecord: false,\n\t\tsetValue: function(fieldName, value, displayValue) {\n\t\t\tconst field = _getField(fieldName);\n\t\t\tconst prevValue = field.value;\n\t\t\tfield.value = value;\n\n\t\t\tif (field.type === 'glide_list' && _.isArray(displayValue)) {\n\t\t\t\tfield.display_value_list = displayValue;\n\t\t\t\tfield.displayValue = displayValue.join(', ');\n\t\t\t} else {\n\t\t\t\tfield.displayValue = displayValue || value;\n\t\t\t}\n\n\t\t\tthis.hideFieldMsg(field.name, true);\n\t\t\tif (value !== prevValue) {\n\t\t\t\t_dirtyFields[field.name] = true;\n\t\t\t\t_fireValueChange(field, value);\n\n\t\t\t\tgetDependentFields(fields, fieldName).forEach(depField => {\n\t\t\t\t\tif (depField.dependentValue !== value) {\n\t\t\t\t\t\tdepField.dependentValue = value;\n\t\t\t\t\t\t_firePropChange(\n\t\t\t\t\t\t\tdepField,\n\t\t\t\t\t\t\tPROPERTY_CHANGE_FIELD,\n\t\t\t\t\t\t\t'dependentValue'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tserialize: onlyDirtyFields => {\n\t\t\tconst serializeField = (result, fieldName) => {\n\t\t\t\tconst field = fields[fieldName];\n\t\t\t\tif (!field.value) return result;\n\t\t\t\tresult.push({ ...field });\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\tconst fromFields = onlyDirtyFields ? _dirtyFields : fields;\n\t\t\treturn Object.keys(fromFields).reduce(serializeField, []);\n\t\t},\n\t\tshowFieldMsg: (fieldName, message, type) => {\n\t\t\tconst field = fields[fieldName];\n\t\t\tif (!field) return;\n\n\t\t\tif (!field.messages) field.messages = [];\n\n\t\t\tswitch (type) {\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t\tcase 'info':\n\t\t\t\tcase 'error':\n\t\t\t\tcase 'warning':\n\t\t\t\tcase 'success':\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfield.messages.push({\n\t\t\t\tmessage: message,\n\t\t\t\ttype: type\n\t\t\t});\n\t\t\t_firePropChange(field, PROPERTY_CHANGE_FIELD, 'messages');\n\t\t},\n\t\thideFieldMsg: (fieldName, clearAll) => {\n\t\t\tconst field = fields[fieldName];\n\t\t\tif (!field) return;\n\n\t\t\tif (!field.messages || !_.isArray(field.messages)) return;\n\n\t\t\tif (clearAll) {\n\t\t\t\tfield.messages = [];\n\t\t\t} else {\n\t\t\t\tfield.messages.shift();\n\t\t\t}\n\t\t\t_firePropChange(field, PROPERTY_CHANGE_FIELD, 'messages');\n\t\t},\n\t\t$private: {\n\t\t\tevents: {\n\t\t\t\ton: (eventName, fn) => {\n\t\t\t\t\tswitch (eventName) {\n\t\t\t\t\t\tcase EVENT_CHANGE:\n\t\t\t\t\t\t\t_onChangeHandlers.push(fn);\n\t\t\t\t\t\t\treturn unregisterChangeHandler(fn);\n\n\t\t\t\t\t\tcase EVENT_PROPERTY_CHANGE:\n\t\t\t\t\t\t\t_onPropertyChangeHandlers.push(fn);\n\t\t\t\t\t\t\treturn unregisterPropChangeHandler(fn);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow 'Unsupported GlideForm event: ' + eventName;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toff: eventName => {\n\t\t\t\t\tswitch (eventName) {\n\t\t\t\t\t\tcase EVENT_CHANGE:\n\t\t\t\t\t\t\t_onChangeHandlers = [];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase EVENT_PROPERTY_CHANGE:\n\t\t\t\t\t\t\t_onPropertyChangeHandlers = [];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcleanUp: () => {\n\t\t\t\t\t_onChangeHandlers = [];\n\t\t\t\t\t_onPropertyChangeHandlers = [];\n\t\t\t\t},\n\t\t\t\tpropertyChange: function(\n\t\t\t\t\ttype,\n\t\t\t\t\tname,\n\t\t\t\t\tpropertyName,\n\t\t\t\t\tpropertyValue\n\t\t\t\t) {\n\t\t\t\t\tif (_onPropertyChangeHandlers.length == 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttype = PROPERTY_CHANGE_FIELD;\n\t\t\t\t\t\tcase PROPERTY_CHANGE_FIELD:\n\t\t\t\t\t\tcase PROPERTY_CHANGE_SECTION:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t_onPropertyChangeHandlers.forEach(function(fn) {\n\t\t\t\t\t\tfn.call(fn, type, name, propertyName, propertyValue);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetFieldInvalid: _.noop,\n\t\t\toptions: options => {\n\t\t\t\tif (!options) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// getter\n\t\t\t\tif (typeof options === 'string') {\n\t\t\t\t\treturn _options[options];\n\t\t\t\t}\n\n\t\t\t\tif (_options.isInitialized) {\n\t\t\t\t\tthrow 'Cannot override options';\n\t\t\t\t}\n\n\t\t\t\t// setter\n\t\t\t\tObject.keys(options).forEach(function(optionName) {\n\t\t\t\t\t_options[optionName] = options[optionName];\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default {\n\tcreate: createForm\n};\n","export {\n\tdefault as glideFormDataParser\n} from './main/sn/clientScript/data/glideFormDataParser';\nexport * from './main/constants/ScriptingActions';\nexport {\n\tcreateFormDataProvider,\n\tfetchFormDataActions\n} from './main/sn/clientScript/dataProviders/formDataProvider';\nexport {\n\tgetFormModal,\n\tgetConfig\n} from './main/sn/clientScript/dataProviders/utils';\nexport {\n\tcreateClientScriptBehavior\n} from './main/behaviors/clientScriptBehavior';\nexport {\n\tdefault as notificationActions\n} from './main/sn/sessionMessage/notificationActions.js';\nexport {\n\tdefault as simpleFormFactory,\n\tEVENT_CHANGE,\n\tEVENT_PROPERTY_CHANGE,\n\tPROPERTY_CHANGE_FIELD\n} from './main/sn/clientScript/form/workspaceSimpleFormFactory';\nexport {\n\tcreateSimpleFormClientScriptBehavior\n} from './main/behaviors/simpleFormClientScriptBehavior';\nexport {\n\tGFORM_ACTIONS,\n\tgetGFormAttributes\n} from './main/sn/clientScript/form/gFormActions';\nexport {\n\tdefault as createValidateFormEffect\n} from './main/sn/clientScript/effects/createValidateFormEffect';\n","export const ATTRIBUTES_SEPARATOR = ',';\n\nexport const YES_NO = 1;\nexport const TEXTAREA = 2;\nexport const RADIO_CHOICES = 3;\nexport const LIKERT_SCALE = 4;\nexport const CHOICE_LIST = 5;\nexport const TEXTFIELD = 6;\nexport const CHECKBOX = 7;\nexport const REFERENCE = 8;\nexport const DATE = 9;\nexport const DATE_TIME = 10;\nexport const LABEL = 11;\nexport const BREAK = 12;\nexport const RENDER_MACRO = 14;\nexport const RENDER_UI_PAGE = 15;\nexport const WIDE_TEXTFIELD = 16;\nexport const RENDER_MACRO_WITH_LABEL = 17;\nexport const LOOKUP_SELECT_BOX = 18;\nexport const CONTAINER_START = 19;\nexport const CONTAINER_END = 20;\nexport const LIST_COLLECTOR = 21;\nexport const LOOKUP_RADIO_CHOICES = 22;\nexport const HTML = 23;\nexport const CONTAINER_SPLIT = 24;\nexport const MASKED = 25;\nexport const EMAIL = 26;\nexport const URL = 27;\nexport const IP_ADDRESS = 28;\nexport const DURATION = 29;\n","import _ from 'lodash';\nimport { getValue, createDataProviderDataSource } from '@devsnc/library-form';\nimport uiPolicyParser from '../../data/uiPolicyParser';\nimport {\n\tCATALOG_SCRIPTS_FRAGMENT,\n\tCATALOG_POLICIES_FRAGMENT,\n\tSC_SCRIPTS_QUERY_KEY,\n\tSC_POLICIES_QUERY_KEY\n} from '../../../../resources/CatalogEnvironmentQuery';\nexport const SCRIPTING_QUERY_KEY = 'GlideClientScriptingEnvironment_Query';\nexport const GLOBALS_QUERY_KEY = 'ClientScriptingEnvironment_Globals';\nexport const UI_POLICIES_QUERY_KEY = 'ClientScriptingEnvironment_Policies';\nexport const CLIENT_SCRIPTS_QUERY_KEY = 'ClientScriptingEnvironment_Scripts';\n\nexport const QUERY_FRAGMENT = `\nGlideClientScriptingEnvironment_Query {\n\tClientScriptingEnvironment_Globals(table: $table, sysId: $sysId, query: $query) {\n\t\tg_scratchpad\n\t\tg_language\n\t\tg_date_time_format\n\t\tg_decimal_separator\n\t\tg_user_grouping\n\t\tg_text_direction\n\t\tg_is_accessible\n\t}\n\tClientScriptingEnvironment_Scripts(table: $table, view: $view, sysId: $sysId, query: $query) {\n\t\tonLoad {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tonChange {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tonSubmit {\n\t\t\tname\n\t\t\tsysId\n\t\t\tscript\n\t\t\ttype\n\t\t\tfieldName\n\t\t\ttableName\n\t\t}\n\t\tmessages {\n\t\t\tname\n\t\t\tvalue\n\t\t}\n\t}\n\tClientScriptingEnvironment_Policies(table: $table, view: $view, sysId: $sysId, query: $query) {\n\t\tshortDescription\n\t\tsysId\n\t\treverse\n\t\tonLoad\n\t\tisRunScripts\n\t\tpreEvaluated\n\t\tpreEvaluatedResult\n\t\tscriptTrue {\n\t\t\tname\n\t\t\tscript\n\t\t}\n\t\tscriptFalse {\n\t\t\tname\n\t\t\tscript\n\t\t}\n\t\tactions {\n\t\t\tvisible\n\t\t\tname\n\t\t\tdisabled\n\t\t\tmandatory\n\t\t\tcleared: clearValue\n\t\t\trelatedList\n\t\t}\n\t\tconditions {\n\t\t\ttype\n\t\t\tterm\n\t\t\tfield: fieldName\n\t\t\tfieldLabel\n\t\t\tcolumnType\n\t\t\tvalue\n\t\t\toper: operator\n\t\t\toperatorLabel\n\t\t\tor: isOrQuery\n\t\t\tnewquery: isNewQuery\n\t\t\tpreEvaluatedTerm\n\t\t\tpreEvaluatedTermResult\n\t\t\treferenceFields {\n\t\t\t\ttable\n\t\t\t\tfieldName\n\t\t\t\tfieldLabel\n\t\t\t\tinternalType\n\t\t\t\treferenceTable\n\t\t\t}\n\t\t}\n\t},\n\t${CATALOG_SCRIPTS_FRAGMENT},\n\t${CATALOG_POLICIES_FRAGMENT}\n}\n`;\n\nconst transformMessages = (messages = []) =>\n\tmessages.reduce(\n\t\t(loadedMessages, message) =>\n\t\t\tmessage.name\n\t\t\t\t? {\n\t\t\t\t\t\t...loadedMessages,\n\t\t\t\t\t\t[message.name]: message.value\n\t\t\t\t  }\n\t\t\t\t: loadedMessages,\n\t\t{}\n\t);\n\nconst createTransform = getValueOrDefault => data => {\n\tconst globals = getValueOrDefault(GLOBALS_QUERY_KEY, {})(data);\n\tconst uiPolicies = uiPolicyParser.parseGraphQLResponse(\n\t\tgetValueOrDefault(UI_POLICIES_QUERY_KEY, [])(data)\n\t);\n\tconst { messages: clientScriptMessages, ...clientScripts } =\n\t\tgetValueOrDefault(CLIENT_SCRIPTS_QUERY_KEY, {})(data) || {};\n\tconst { messages: catalogClientScriptMessages, ...catalogClientScripts } =\n\t\tgetValueOrDefault(SC_SCRIPTS_QUERY_KEY, {})(data) || {};\n\tconst catalogUiPolicies = uiPolicyParser.parseGraphQLResponse(\n\t\tgetValueOrDefault(SC_POLICIES_QUERY_KEY, {})(data)\n\t);\n\tconst messages = transformMessages([\n\t\t...(clientScriptMessages || []),\n\t\t...(catalogClientScriptMessages || [])\n\t]);\n\tconst finalClientScripts = _.mergeWith(\n\t\tclientScripts,\n\t\tcatalogClientScripts,\n\t\t(objValue, srcValue) => {\n\t\t\tif (_.isArray(objValue)) return objValue.concat(srcValue);\n\t\t}\n\t);\n\tconst finalUiPolicies = uiPolicies.concat(catalogUiPolicies || []);\n\n\treturn {\n\t\tglobals,\n\t\tuiPolicies: finalUiPolicies,\n\t\tclientScripts: finalClientScripts,\n\t\tmessages\n\t};\n};\n\nexport const createClientScriptEnvironmentDataSource = (\n\tqueryPrefix = '',\n\tclassicForm = false\n) => {\n\tconst baseKey = `${queryPrefix}${SCRIPTING_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId', 'query'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' },\n\t\t\tquery: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tglobals: {\n\t\t\t\tdefault: {}\n\t\t\t},\n\t\t\tuiPolicies: {\n\t\t\t\tdefault: {}\n\t\t\t},\n\t\t\tclientScripts: {\n\t\t\t\tdefault: {}\n\t\t\t},\n\t\t\tmessages: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import _ from 'lodash';\n\nconst uiPolicyParser = {\n\tparseGraphQLResponse,\n\tparseGraphQLPolicy,\n\tparseGraphQLPolicyActions,\n\tparseGraphQLPolicyListActions,\n\tparseGraphQLPolicyConditions\n};\n\nfunction convertFields(o) {\n\tlet result = {};\n\t_.forEach(o, (val, key) => {\n\t\tresult[_.snakeCase(key)] = val;\n\t});\n\tdelete result.typename;\n\treturn result;\n}\n\nfunction parseGraphQLPolicyActions(actions) {\n\tlet results = [];\n\t_.forEach(actions, action => {\n\t\tif (action.name !== null) {\n\t\t\tlet result = convertFields(action);\n\t\t\tresults.push(result);\n\t\t}\n\t});\n\treturn results;\n}\n\nfunction parseGraphQLPolicyListActions(actions) {\n\tlet results = [];\n\t_.forEach(actions, action => {\n\t\tif (action.relatedList !== null) {\n\t\t\tresults.push({\n\t\t\t\tname: action.relatedList,\n\t\t\t\tvisible: action.visible\n\t\t\t});\n\t\t}\n\t});\n\treturn results;\n}\n\nfunction parseGraphQLPolicyConditions(conditions) {\n\tlet results = [];\n\t_.forEach(conditions, condition => {\n\t\tlet result = convertFields(condition);\n\t\t// Remap some field values\n\t\tresult.pre_evaluated_term =\n\t\t\tString(result.pre_evaluated_term) === 'true';\n\t\tresult.pre_evaluated_term_result =\n\t\t\tString(result.pre_evaluated_term_result) === 'true';\n\n\t\t// ignore endquery for now\n\t\tif (result.term !== 'EQ') {\n\t\t\tresults.push(result);\n\t\t}\n\t});\n\treturn results;\n}\n\nfunction parseGraphQLPolicy(policy) {\n\tlet result = convertFields(policy);\n\tresult.actions = parseGraphQLPolicyActions(policy.actions);\n\tresult.list_actions = parseGraphQLPolicyListActions(policy.actions);\n\tresult.conditions = parseGraphQLPolicyConditions(policy.conditions);\n\tresult.onload = result.on_load;\n\tresult.script_true = policy.scriptTrue;\n\tresult.script_false = policy.scriptFalse;\n\tresult.pre_evaluated = false;\n\treturn result;\n}\n\nfunction parseGraphQLResponse(uiPolicies) {\n\tlet results = [];\n\t_.forEach(uiPolicies, policy => {\n\t\tresults.push(uiPolicyParser.parseGraphQLPolicy(policy));\n\t});\n\treturn results;\n}\n\nexport default uiPolicyParser;\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\n\nconst ATTACHMENT_ACL_QUERY_KEY = 'GlideAttachmentQuery_Query';\nconst ATTACHMENT_ACL_ATTACHMENTS_KEY = 'attachments';\nconst QUERY_FRAGMENT = `\n\t${ATTACHMENT_ACL_QUERY_KEY} {\n\t\t${ATTACHMENT_ACL_ATTACHMENTS_KEY} (table: $table, sysId: $sysId) {\n\t\t\tcanCreate\n\t\t}\n\t}\n`;\n\nconst createTransform = getValueOrDefault => data => {\n\tconst canCreate = getValueOrDefault('canCreate', false)(data);\n\treturn {\n\t\tcanCreate\n\t};\n};\n\nexport const createAttachmentAclDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${ATTACHMENT_ACL_QUERY_KEY}.${ATTACHMENT_ACL_ATTACHMENTS_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tcanCreate: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\n\nexport const DECLARATIVE_ACTIONS_QUERY_KEY = 'GlideDeclarativeActions_Query';\nexport const DECLARATIVE_ACTIONS_FIELD_QUERY_KEY =\n\t'GlideDeclarativeActions_fieldQuery';\nexport const FIELD_DECLARATIVE_ACTIONS_KEY = 'fieldDeclarativeActions';\nexport const FIELD_ACTIONS_KEY = 'fieldActions';\nexport const QUERY_FRAGMENT = `\n${DECLARATIVE_ACTIONS_QUERY_KEY} {\n\t${DECLARATIVE_ACTIONS_FIELD_QUERY_KEY} {\n\t\t${FIELD_DECLARATIVE_ACTIONS_KEY} (table: $table, view: $view, sysId: $sysId, query: $query, source: \"field\", workspaceConfigId: $workspaceConfigId, actionConfigId: $actionConfigId) {\n\t\t\t${FIELD_ACTIONS_KEY} {\n\t\t\t\tfield\n\t\t\t\tactions  {\n\t\t\t\t\tname\n\t\t\t\t\ticon\n\t\t\t\t\tlabel\n\t\t\t\t\tdependency\n\t\t\t\t\trequiresValue\n\t\t\t\t\torder\n\t\t\t\t\tconditions\n\t\t\t\t\tactionType\n            \t\tactionComponent\n            \t\tactionDispatch\n            \t\tactionPayload\n\t\t\t\t\tactionAttributes\n\t\t\t\t\tgroupBy\n\t\t\t\t\tgroup\n\t\t\t\t\tassignmentId\n\t\t\t\t\tconfirmationRequired\n\t\t\t\t\tconfirmationMessage\n\t\t\t\t\ttooltip\n\t\t\t\t\tmodelConditions {\n\t\t\t\t\t\tfield\n\t\t\t\t\t\toperator\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tnewQuery\n\t\t\t\t\t\tor\n\t\t\t\t\t}\n\t\t\t\t\tpayloadMap {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst createTransform = getValueOrDefault => data => {\n\tconst items = getValueOrDefault(FIELD_ACTIONS_KEY, [])(data);\n\tconst declarativeFieldActions = items\n\t\t? items.reduce(\n\t\t\t\t(mapper, { field, actions }) => ({\n\t\t\t\t\t...mapper,\n\t\t\t\t\t[field]: actions\n\t\t\t\t}),\n\t\t\t\t{}\n\t\t  )\n\t\t: [];\n\treturn {\n\t\tdeclarativeFieldActions\n\t};\n};\n\nexport const createDeclarativeFieldActionDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${DECLARATIVE_ACTIONS_QUERY_KEY}.${DECLARATIVE_ACTIONS_FIELD_QUERY_KEY}.${FIELD_DECLARATIVE_ACTIONS_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: [\n\t\t\t'table',\n\t\t\t'view',\n\t\t\t'sysId',\n\t\t\t'query',\n\t\t\t'workspaceConfigId',\n\t\t\t'actinConfigId'\n\t\t],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' },\n\t\t\tview: { default: '' },\n\t\t\tquery: { default: '' },\n\t\t\tworkspaceConfigId: { default: '' },\n\t\t\tactionConfigId: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tdeclarativeFieldActions: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\nimport * as glideFormDataParser from '../../data/glideFormDataParser';\nimport _ from 'lodash';\nimport {\n\tVARIABLE_LAYOUT_QUERY_FRAGMENT,\n\tGlideElementVariables_ELEMENTS_QUERY_FRAGMENT\n} from '../../../../resources/CatalogEnvironmentQuery';\nimport { CONTEXTUAL_LINK_NAMES } from '@servicenow/now-record-common';\nimport { massageVariableFields } from '@devsnc/sn-catalog-form';\nimport { t } from \"sn-translate\";\n\nconst LAYOUT_QUERY_KEY = 'GlideLayout_Query';\nconst FORM_LAYOUT_QUERY_KEY = 'formLayout';\nconst RECORD_VALUES_KEY = 'recordValues';\nconst FIELD_ELEMENTS_KEY = 'elementsData';\nconst FORMATTER_QUERY_KEY = 'formatters';\nconst RELATED_LISTS_QUERY_KEY = 'relatedLists';\nconst SECTION_LAYOUT = 'sectionLayout';\nconst FIELD_STATES_QUERY_KEY = 'fieldStates';\nconst ENCODED_RECORD_KEY = 'encodedRecord';\nconst IS_VALID_RECORD = 'isValidRecord';\nconst CAN_READ_RECORD = 'canReadRecord';\nconst SYS_ID_KEY = 'sysId';\nconst BASE_TABLE = 'baseTable';\nconst TABLE = 'table';\nconst IS_SCRIPTABLE_TABLE = 'isScriptableTable';\nconst LAST_ERROR_MESSAGE = 'lastErrorMessage';\nconst FIELD_VARIABLES_KEY = 'variables';\nconst VARIABLES_LAYOUT = 'variablesLayout';\nconst FORM_SETTINGS_KEY = 'formSettings';\nconst FORM_TABS_KEY = 'formTabs';\nconst ANNOTATIONS_QUERY_KEY = 'annotations';\nconst DOMAIN_SEPARATION = 'domainSeparation';\n\nconst FIELD_NAME_FIELDS = `\ndependentFieldLabel\ndependentValue\ndisplayValueWithPath\n`;\nconst DICTIONARY_DEPENDENT_FIELD_LABEL = `dependentFieldLabel`;\nconst DOCUMENT_ID_ELEMENT_TYPE = `... on GlideLayout_DocumentIdElementType {\n\t\t\t\tdocumentLabel\n\t\t\t\tdependentValue\n\t\t\t}`;\nconst TEMPLATE_ELEMENT_TYPE = `...on GlideLayout_TemplateElementType {\ndependentField\ndependentValue\n}\n`;\n\nconst QUERY_FRAGMENT = `\nGlideLayout_Query {\n\tformLayout(table: $table, view: $view, sysId: $sysId, query: $query) {\n\t\tbaseTable\n\t\ttable\n\t\tisValidRecord\n\t\tcanReadRecord\n\t\tisScriptableTable\n\t\tlastErrorMessage\n\t\tdomainSeparation {\n\t\t\tcanExpandScope\n\t\t\tdeterminingFieldName\n\t\t\tdomainId\n\t\t}\n\t\tsectionLayout {\n\t\t\tsysId\n\t\t\tcaption\n\t\t\tcaptionDisplay\n\t\t\trows {\n\t\t\t\tfields\n\t\t\t}\n\t\t}\n\t\tformSettings {\n\t\t\tisDetailsHidden\n\t\t\tisSectionMenuHidden\n\t\t\tisSectionCollapseDisabled\n\t\t\tdefaultSection {\n\t\t\t\tsysId\n\t\t\t\tcaption\n\t\t\t\tcaptionDisplay\n\t\t\t}\n\t\t}\n\t\tformTabs {\n\t\t\tisDefaultTabOrder\n\t\t\tdefaultTabFocus\n\t\t\ttabsOrder {\n\t\t\t  label\n\t\t\t  value\n\t\t\t}\n\t\t}\n\t\tencodedRecord\n\t\tsysId\n\t\trecordValues {\n\t\t\tname\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t\tvaluesList {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t}\n\t\t}\n\t\tfieldStates {\n\t\t\tname\n\t\t\thidden\n\t\t\tmandatory\n\t\t\treadonly\n\t\t},\n\t\trelatedLists {\n\t\t\tsourceTable\n\t\t\ttargetTable\n\t\t\tcount\n\t\t\tfilter\n\t\t\tdisplayLabel\n\t\t\tlabel\n\t\t\tvalue\n\t\t\trelatedField\n\t\t}\n\t\tformatters {\n\t\t\tname\n\t\t\tsys_id\n\t\t}\n\t\tannotations {\n\t\t\tsysId\n\t\t\ttext\n\t\t\tannotationType\n\t\t\ttypeDisplayValue\n\t\t\tisPlainText\n\t\t}\n\t\t${VARIABLE_LAYOUT_QUERY_FRAGMENT}\n\t\telementsData {\n\t\t\tname:elementName\n\t\t\tdictionary:dictionaryData {\n\t\t\t\ttype:dictionaryType\n\t\t\t\t${DICTIONARY_DEPENDENT_FIELD_LABEL}\n\t\t\t\tdependentField\n\t\t\t\tdependentTable\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tcanWrite\n\t\t\t\tcanRead\n\t\t\t\tcanCreate\n\t\t\t\tinternalType\n\t\t\t\tisMandatory\n\t\t\t\tsys_readonly: sysReadonly\n\t\t\t\tattributes {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t${TEMPLATE_ELEMENT_TYPE}\n\n\t\t\t... on GlideLayout_ChoiceElementType {\n\t\t\t\tchoices {\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t... on GlideLayout_FileAttachmentElementType {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t\tstate\n\t\t\t\tcontentType\n\t\t\t}\n\n\t\t\t... on GlideLayout_TableNameElementType {\n\t\t\t\tdisplayValue\n\t\t\t}\n\n\t\t\t... on GlideLayout_FieldNameElementType {\n\t\t\t\tdisplayValue\n\t\t\t\t${FIELD_NAME_FIELDS}\n\t\t\t}\n\n\t\t\t... on GlideLayout_CurrencyElementType {\n\t\t\t\tvalue\n\t\t\t\tcode\n\t\t\t\tdefaultCurrency\n\t\t\t\tcurrencyCodes {\n\t\t\t\t\tcode\n\t\t\t\t\tsymbol\n\t\t\t\t}\n\t\t\t}\n\t\t\t... on GlideLayout_PhoneNumberElementType {\n\t\t\t\tvalue\n\t\t\t\tcountry\n\t\t\t\tcountryCodes {\n\t\t\t\t  code\n\t\t\t\t  name\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t... on GlideLayout_GlideListElementType {\n\t\t\t\treference\n\t\t\t}\n\n\t\t\t${DOCUMENT_ID_ELEMENT_TYPE}\n\n\t\t\t... on GlideLayout_ReferenceElementType {\n\t\t\t\treference\n\t\t\t\treferenceQualifier\n\t\t\t\treferenceKey\n\t\t\t\tuseReferenceQualifier\n\t\t\t\tdependent\n\t\t\t\tdependentOnField\n\t\t\t\trefAutoCompleter\n\t\t\t\trefAcOrderBy\n\t\t\t\trefAcColumns\n\t\t\t\trefAcColumnsSearch\n\t\t\t\trefAcDisplayValue\n\t\t\t\trefQualElements\n\t\t\t\trefContributions\n\t\t\t\tisDynamicCreate\n\t\t\t\tisReferenceScriptableTable\n\t\t\t\treferenceError\n\t\t\t}\n\n\t\t\t... on GlideLayout_VariablesElementType {\n\t\t\t    ${FIELD_VARIABLES_KEY} : ${GlideElementVariables_ELEMENTS_QUERY_FRAGMENT}\n\t\t\t}\n\n\t\t\t... on GlideLayout_ValueElementType {\n\t\t\t\tmaxLength\n\t\t\t\tdefaultRows\n\t\t\t}\n\n\t\t\t... on GlideLayout_GlideVarElementType {\n\t\t\t\tmodelTable\n\t\t\t\tglidevars: _elements {\n\t\t\t\t\tname: elementName\n\t\t\t\t\tdictionary: dictionaryData {\n\t\t\t\t\t\ttype: dictionaryType\n\t\t\t\t\t\tdependentField\n\t\t\t\t\t\tdependentTable\n\t\t\t\t\t\tname\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tcanWrite\n\t\t\t\t\t\tcanRead\n\t\t\t\t\t\tcanCreate\n\t\t\t\t\t\tinternalType\n\t\t\t\t\t\tisMandatory\n\t\t\t\t\t\tsys_readonly: sysReadonly\n\t\t\t\t\t\tattributes {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_ChoiceElementType {\n\t\t\t\t\t\tchoices {\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t... on GlideLayout_CurrencyElementType {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tdefaultCurrency\n\t\t\t\t\t\tcurrencyCodes {\n\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\tsymbol\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_PhoneNumberElementType {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tcountry\n\t\t\t\t\t\tcountryCodes {\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_GlideListElementType {\n\t\t\t\t\t\treference\n\t\t\t\t\t}\n\n\t\t\t\t\t... on GlideLayout_ReferenceElementType {\n\t\t\t\t\t\treference\n\t\t\t\t\t\treferenceQualifier\n\t\t\t\t\t\treferenceKey\n\t\t\t\t\t\tuseReferenceQualifier\n\t\t\t\t\t\tdependent\n\t\t\t\t\t\tdependentOnField\n\t\t\t\t\t\trefAutoCompleter\n\t\t\t\t\t\trefAcOrderBy\n\t\t\t\t\t\trefAcColumns\n\t\t\t\t\t\trefAcColumnsSearch\n\t\t\t\t\t\trefAcDisplayValue\n\t\t\t\t\t\trefQualElements\n\t\t\t\t\t\trefContributions\n\t\t\t\t\t\tisDynamicCreate\n\t\t\t\t\t\tisReferenceScriptableTable\n\t\t\t\t\t\treferenceError\n\t\t\t\t\t}\n\t\t\t\t\t... on GlideLayout_ValueElementType {\n\t\t\t\t\t\tmaxLength\n\t\t\t\t\t\tdefaultRows\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\n// workspace enabled variable editors\nconst SERVICE_CATALOG_VEDITOR = 'com_glideapp_servicecatalog_veditor';\nconst SERVICE_CATALOG_QUESTION_EDITOR =\n\t'com_glideapp_questionset_default_question_editor';\nconst FORMATTER_SUFFIX = '.xml';\nconst isValidFormatter = (formatters = {}, formatterName) =>\n\t_.isObject(formatters[formatterName]) ||\n\t_.isObject(formatters[formatterName + FORMATTER_SUFFIX]);\nconst transformFormatter = formatters =>\n\tformatters.reduce(\n\t\t(formattersByName, formatter) => ({\n\t\t\t...formattersByName,\n\t\t\t[formatter.name]: formatter\n\t\t}),\n\t\t{}\n\t);\nconst transformRelatedLists = (relatedLists = [], actionConfigId, view) =>\n\trelatedLists\n\t\t.filter(relatedList => relatedList.displayLabel !== '')\n\t\t.map(relatedList => ({\n\t\t\ttable: relatedList.targetTable,\n\t\t\tparentTable: relatedList.sourceTable,\n\t\t\tdisplayName: relatedList.displayLabel || relatedList.label,\n\t\t\tlabel: relatedList.label,\n\t\t\tvalue: relatedList.value,\n\t\t\tcount: relatedList.count,\n\t\t\tfilter: relatedList.filter,\n\t\t\tview,\n\t\t\tfield: relatedList.relatedField,\n\t\t\trelated_field: relatedList.relatedField,\n\t\t\tvisible: true,\n\t\t\trefreshRequested: { timestamp: Date.now()},\n\t\t\t...(actionConfigId ? {actionConfigId} : {})\n\t\t}));\n\nconst transformFormFieldValues = (\n\ttable,\n\tsysId,\n\trecordValues,\n\tfieldElements,\n\tfieldStates,\n\tisFormReadonly,\n\tdeclarativeUIActions,\n\tvariablesLayout,\n\tannotations\n) => {\n\tconst formFieldValues = _.reduce(\n\t\tglideFormDataParser.parseFieldGraphQLResponse(\n\t\t\ttable,\n\t\t\tsysId,\n\t\t\trecordValues,\n\t\t\tfieldElements,\n\t\t\tfieldStates,\n\t\t\tannotations\n\t\t),\n\t\t(fields, field, key) => ({\n\t\t\t...fields,\n\t\t\t[key]: {\n\t\t\t\t...field,\n\t\t\t\tdeclarativeUiActions: declarativeUIActions[key]\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n\tif (formFieldValues.variables) {\n\t\tformFieldValues.variables.variablesLayout = variablesLayout;\n\t\tconst catalogVariablesList = _.filter(\n\t\t\tformFieldValues,\n\t\t\tfield => !!field._cat_variable\n\t\t);\n\t\tmassageVariableFields(catalogVariablesList, variablesLayout);\n\t}\n\tif (!isFormReadonly) return formFieldValues;\n\treturn _.reduce(\n\t\tformFieldValues,\n\t\t(fields, field, key) => ({\n\t\t\t...fields,\n\t\t\t[key]: {\n\t\t\t\t...field,\n\t\t\t\tsys_readonly: true,\n\t\t\t\treadonly: true\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n};\n\nconst transformFormFields = formFieldValues =>\n\t_.map(formFieldValues, value => value);\n\nconst transformGlideVars = (elements, recordValues) => {\n\tconst glidevarSection = {};\n\tconst elementsData = [];\n\telements\n\t\t.filter(element => element.dictionary.type === 'glide_var')\n\t\t.forEach(element => {\n\t\t\tconst {\n\t\t\t\tname,\n\t\t\t\tdictionary: { name: caption, label: captionDisplay },\n\t\t\t\tmodelTable,\n\t\t\t\tglidevars\n\t\t\t} = element;\n\t\t\tif (!glidevars) return;\n\n\t\t\tconst fields = [];\n\t\t\tglidevars.forEach(variable => {\n\t\t\t\tconst fieldName = `${name}.${modelTable}.${variable.name}`;\n\t\t\t\telementsData.push({\n\t\t\t\t\t...variable,\n\t\t\t\t\tname: fieldName\n\t\t\t\t});\n\t\t\t\tfields.push(fieldName);\n\t\t\t});\n\n\t\t\tconst section = { caption, captionDisplay, fields };\n\t\t\tglidevarSection[caption] = section;\n\t\t});\n\treturn { glidevarSection, elementsData };\n};\n\nconst transformSections = (\n\tsections,\n\tformSettings,\n\tshowVariableEditor,\n\tglidevarSection\n) => {\n\tconst defaultSection = _.get(formSettings, 'defaultSection.sysId', NaN);\n\n\tconst allSections = sections.reduce((acc, section) => {\n\t\tif (!section.rows || !section.rows.length) return acc;\n\t\tconst newRows = section.rows.reduce((accuRows, cols) => {\n\t\t\tconst newCols = cols.reduce((accCols, col) => {\n\t\t\t\tconst newFields = col.fields.reduce((accFields, field) => {\n\t\t\t\t\tif (!glidevarSection[field]) return [...accFields, field];\n\n\t\t\t\t\treturn [...accFields, ...glidevarSection[field].fields];\n\t\t\t\t}, []);\n\t\t\t\treturn !newFields.length\n\t\t\t\t\t? accCols\n\t\t\t\t\t: [...accCols, { fields: newFields }];\n\t\t\t}, []);\n\t\t\treturn !newCols.length ? accuRows : [...accuRows, newCols];\n\t\t}, []);\n\n\t\treturn [...acc, { ...section, rows: newRows }];\n\t}, []);\n\n\tconst sectionsWithVariableEditor = showVariableEditor\n\t\t? _.concat(allSections, { captionDisplay: t('Variables') })\n\t\t: allSections;\n\n\treturn sectionsWithVariableEditor.map((section, index) => ({\n\t\t...section,\n\t\tid: index,\n\t\t// this is to align with glideFormFaction\n\t\tcaption: (section.caption || section.captionDisplay || '')\n\t\t\t.toLowerCase()\n\t\t\t.replace(' ', '_')\n\t\t\t.replace(/[^0-9a-z_]/gi, ''),\n\t\tlabel: section.captionDisplay,\n\t\tdefaultSection: defaultSection === section.sysId,\n\t\texpanded: true\n\t}));\n};\n\nconst trasnformAnnotation = annotations =>\n\t_.reduce(\n\t\tannotations,\n\t\t(annotationsById, annotation) => ({\n\t\t\t...annotationsById,\n\t\t\t[annotation.sysId]: {\n\t\t\t\t...annotation,\n\t\t\t\ttype: 'annotation',\n\t\t\t\tname: 'annotation.' + annotation.sysId\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n\nconst createTransform = getValueOrDefault => (\n\tdata,\n\tstate,\n\tproperties,\n\tdeclarativeUIActions = {}\n) => {\n\tconst {\n\t\tisFormReadonly,\n\t\trecord: { view }\n\t} = state;\n\tconst {\n\t\ttable,\n\t\tsysId: orgSysId,\n\t\tactionConfigId\n\t} = properties;\n\tconst isValidRecord = getValueOrDefault(IS_VALID_RECORD, false)(data);\n\tconst isNewRecord = orgSysId == '-1';\n\tconst canReadRecord = getValueOrDefault(CAN_READ_RECORD, false)(data);\n\tconst isTemplateComponentEnabled = getValueOrDefault(ENCODED_RECORD_KEY)(\n\t\tdata\n\t);\n\tconst newSysId = getValueOrDefault(SYS_ID_KEY)(data);\n\tconst encodedRecord = getValueOrDefault(ENCODED_RECORD_KEY)(data);\n\tconst recordValues = getValueOrDefault(RECORD_VALUES_KEY, false)(data);\n\tconst formTabs = getValueOrDefault(FORM_TABS_KEY)(data);\n\tconst formSettings = getValueOrDefault(FORM_SETTINGS_KEY)(data);\n\tconst orgFieldElements = getValueOrDefault(FIELD_ELEMENTS_KEY, [])(\n\t\tdata\n\t).filter(el => _.get(el, 'dictionary.canRead') !== false);\n\tconst baseTable = getValueOrDefault(BASE_TABLE)(data);\n\tconst isScriptableTable = getValueOrDefault(IS_SCRIPTABLE_TABLE, false)(\n\t\tdata\n\t);\n\tconst lastErrorMessage = getValueOrDefault(LAST_ERROR_MESSAGE)(data);\n\tconst domainSeparation = getValueOrDefault(DOMAIN_SEPARATION)(data);\n\tconst formatters = transformFormatter(\n\t\tgetValueOrDefault(FORMATTER_QUERY_KEY, [])(data)\n\t);\n\tconst showVariableEditor =\n\t\tisValidFormatter(formatters, SERVICE_CATALOG_VEDITOR) ||\n\t\tisValidFormatter(formatters, SERVICE_CATALOG_QUESTION_EDITOR);\n\n\tconst {\n\t\tglidevarSection,\n\t\telementsData: glidevarElements\n\t} = transformGlideVars(orgFieldElements, recordValues);\n\tconst fieldElements = [...orgFieldElements, ...glidevarElements];\n\tconst sections = transformSections(\n\t\tgetValueOrDefault(SECTION_LAYOUT, [])(data),\n\t\tformSettings,\n\t\tshowVariableEditor,\n\t\tglidevarSection\n\t);\n\tconst relatedLists = isNewRecord\n\t\t? []\n\t\t: transformRelatedLists(\n\t\t\t\tgetValueOrDefault(RELATED_LISTS_QUERY_KEY, [])(data),\n\t\t\t\tactionConfigId,\n\t\t\t\tview\n\t\t  );\n\n\tconst fieldStates = getValueOrDefault(FIELD_STATES_QUERY_KEY, [])(\n\t\tdata\n\t).reduce(\n\t\t(fieldStates, state) => ({ ...fieldStates, [state.name]: state }),\n\t\t{}\n\t);\n\n\tconst sectionSysId = _.get(sections, '[0].sysId') || '';\n\tconst configurationItems = [\n\t\t{\n\t\t\torder: CONTEXTUAL_LINK_NAMES.relatedLists.order,\n\t\t\tlabel: CONTEXTUAL_LINK_NAMES.relatedLists.name,\n\t\t\turl: encodeURIComponent(\n\t\t\t\t`slushbucket.do?sysparm_referring_url=${table}.do&sysparm_view=${view}&sysparm_list=${table}&sysparm_form=related_list`\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\torder: CONTEXTUAL_LINK_NAMES.formLayout.order,\n\t\t\tlabel: CONTEXTUAL_LINK_NAMES.formLayout.name,\n\t\t\turl: encodeURIComponent(\n\t\t\t\t`slushbucket.do?sysparm_referring_url=${table}.do&sysparm_view=${view}&sysparm_list=${sectionSysId}&sysparm_form=section`\n\t\t\t)\n\t\t}\n\t];\n\n\tconst variablesLayout = getValueOrDefault(VARIABLES_LAYOUT)(data);\n\tconst annotations = trasnformAnnotation(\n\t\tgetValueOrDefault(ANNOTATIONS_QUERY_KEY, [])(data)\n\t);\n\n\tconst formFieldValues = transformFormFieldValues(\n\t\ttable,\n\t\tnewSysId,\n\t\trecordValues,\n\t\tfieldElements,\n\t\tfieldStates,\n\t\tisFormReadonly,\n\t\tdeclarativeUIActions,\n\t\tvariablesLayout,\n\t\tannotations\n\t);\n\tconst formFields = transformFormFields(formFieldValues);\n\n\treturn {\n\t\tisValidRecord,\n\t\tisNewRecord,\n\t\tcanReadRecord,\n\t\tisTemplateComponentEnabled,\n\t\tsysId: newSysId,\n\t\tencodedRecord,\n\t\trecordValues,\n\t\tfieldElements,\n\t\tbaseTable,\n\t\ttable,\n\t\tisScriptableTable,\n\t\tlastErrorMessage,\n\t\tdomainSeparation,\n\t\tformatters,\n\t\tshowVariableEditor,\n\t\tsections,\n\t\trelatedLists,\n\t\tfieldStates,\n\t\tformFieldValues,\n\t\tformFields,\n\t\tformTabs,\n\t\tformSettings,\n\t\tconfigurationItems\n\t};\n};\n\nexport const createFormLayoutDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${LAYOUT_QUERY_KEY}.${FORM_LAYOUT_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId', 'query', 'view'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' },\n\t\t\tquery: { default: '' },\n\t\t\tview: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tisValidRecord: {},\n\t\t\tisNewRecord: {},\n\t\t\tcanReadRecord: {},\n\t\t\tisTemplateComponentEnabled: {},\n\t\t\tsysId: {},\n\t\t\trecordValues: {},\n\t\t\tfieldElements: {},\n\t\t\tbaseTable: {},\n\t\t\ttable: {},\n\t\t\tisScriptableTable: {},\n\t\t\tlastErrorMessage: {},\n\t\t\tdomainSeparation: {},\n\t\t\tformatters: {},\n\t\t\tshowVariableEditor: {},\n\t\t\tsections: {},\n\t\t\trelatedLists: {},\n\t\t\tfieldStates: {},\n\t\t\tformFieldValues: {},\n\t\t\tformFields: {},\n\t\t\tformSettings: {},\n\t\t\tformTabs: {},\n\t\t\tconfigurationItems: {}\n\t\t}\n\t});\n};\n","module.exports = __TECTONIC__$devsnc_sn_catalog_form;","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\nimport {\n\tCATALOG_DATA_LOOKUP_QUERY_FRAGMENT,\n\tCATALOG_DATALOOKUP_FIELDS_KEY\n} from '../../../../resources/CatalogEnvironmentQuery';\n\nconst DATALOOKUP_QUERY_KEY = 'GlideDataLookupQuery_Query';\nconst DATALOOKUP_CONFIG_KEY = 'dataLookup';\nconst DATALOOKUP_FIELDS_KEY = 'fields';\nconst QUERY_FRAGMENT = `\n${DATALOOKUP_QUERY_KEY} {\n\t${DATALOOKUP_CONFIG_KEY}(table: $table) {\n\t\tfields {\n\t\t\tfield\n        \tdefinitions {\n          \t\tname\n          \t\tsysId\n        \t}\n\t\t}\n\t}\n\t${CATALOG_DATA_LOOKUP_QUERY_FRAGMENT}\n}\n`;\n\nconst createTransform = getValueOrDefault => data => {\n\tconst formFields = getValueOrDefault(\n\t\t`${DATALOOKUP_CONFIG_KEY}.${DATALOOKUP_FIELDS_KEY}`,\n\t\t[]\n\t)(data);\n\tconst catalogFields = getValueOrDefault(\n\t\t`${CATALOG_DATALOOKUP_FIELDS_KEY}.${DATALOOKUP_FIELDS_KEY}`,\n\t\t[]\n\t)(data);\n\tconst fields = [...(formFields || []), ...(catalogFields || [])];\n\n\treturn {\n\t\tfields\n\t};\n};\n\nexport const createDataLookupDataSource = (\n\tqueryPrefix = '',\n\tclassicForm = false\n) => {\n\tconst baseKey = `${queryPrefix}${DATALOOKUP_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tfields: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import { createDataProviderDataSource, getValue } from '@devsnc/library-form';\nimport { getProperty } from 'sn-uxpage-presource';\n\nexport const USER_QUERY_KEY = 'GlideDomain_Query';\nexport const USER_QUERY_USER_KEY = 'user';\nexport const QUERY_FRAGMENT = `\n${USER_QUERY_KEY} {\n\tuser {\n\t\tpreferences(name: [\"workspace.layout.type.{{table}}\", \"workspace.layout.form_ratio.{{table}}\", \"workspace.layout.sidebar_ratio.{{table}}\"]) {\n\t\t\tname\n\t\t\tvalue\n\t\t}\n\t\troles\n\t\tallRoles\n\t\tsys_id\n\t\tuserName\n\t\tfirstName\n\t\tlastName\n\t\ttitle\n\t\tavatar\n\t\tdepartmentId\n\t\temail\n\t}\n}\n`;\n\nconst LAYOUT_CONFIG_KEY = {\n\ttype: 'type',\n\tformRatio: 'form_ratio',\n\tsidebarRatio: 'sidebar_ratio'\n};\n\nconst FORM_LAYOUT_SYS_PROP = 'sn_workspace_form.default_form_layout';\n\nconst layoutConfigName = (key, table) => `workspace.layout.${key}.${table}`;\n\nconst DEFAULT_FORM_LAYOUT_RATIOS = {\n\tSIDEBAR_RATIO: 27,\n\tFORM_RATIO: 63\n};\n\nconst DEFAULT_FORM_LAYOUT_TYPE = 1;\n\nconst getDefaultFormLayoutType = () => {\n\treturn getProperty(FORM_LAYOUT_SYS_PROP, DEFAULT_FORM_LAYOUT_TYPE);\n};\n\nconst getFormLayoutType = preference => {\n\tif (\n\t\t!preference ||\n\t\tpreference.value === undefined ||\n\t\tpreference.value === null ||\n\t\tpreference.value === ''\n\t)\n\t\treturn getDefaultFormLayoutType();\n\treturn parseInt(preference.value);\n};\n\nconst getFormLayoutConfig = (preferences = [], properties) => {\n\tconst { table } = properties;\n\treturn preferences.reduce(\n\t\t(layoutConfig, preference) => {\n\t\t\tswitch (preference.name) {\n\t\t\t\tcase layoutConfigName(LAYOUT_CONFIG_KEY.type, table):\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...layoutConfig,\n\t\t\t\t\t\tformLayoutType: getFormLayoutType(preference)\n\t\t\t\t\t};\n\t\t\t\tcase layoutConfigName(LAYOUT_CONFIG_KEY.formRatio, table):\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...layoutConfig,\n\t\t\t\t\t\tformSizeRatio:\n\t\t\t\t\t\t\tpreference.value ||\n\t\t\t\t\t\t\tDEFAULT_FORM_LAYOUT_RATIOS.FORM_RATIO\n\t\t\t\t\t};\n\t\t\t\tcase layoutConfigName(LAYOUT_CONFIG_KEY.sidebarRatio, table):\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...layoutConfig,\n\t\t\t\t\t\tsideBarSizeRatio:\n\t\t\t\t\t\t\tpreference.value ||\n\t\t\t\t\t\t\tDEFAULT_FORM_LAYOUT_RATIOS.SIDEBAR_RATIO\n\t\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tformLayoutType: getDefaultFormLayoutType(),\n\t\t\tformSizeRatio: DEFAULT_FORM_LAYOUT_RATIOS.FORM_RATIO,\n\t\t\tsideBarSizeRatio: DEFAULT_FORM_LAYOUT_RATIOS.SIDEBAR_RATIO\n\t\t}\n\t);\n};\n\nconst createTransform = getValueOrDefault => (data, state, properties) => {\n\tconst user = getValueOrDefault(USER_QUERY_USER_KEY, [])(data);\n\tconst formLayoutConfig = getFormLayoutConfig(user.preferences, properties);\n\treturn {\n\t\tuser,\n\t\tformLayoutConfig\n\t};\n};\n\nexport const createCurrentUserDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${USER_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: [],\n\t\ttemplateVariables: ['table'],\n\t\ttransform,\n\t\tselectableProps: {\n\t\t\tuser: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\n\nexport const FIELD_VALIDATOR_QUERY_KEY = 'GlideFieldValidator_Query';\nexport const FIELD_VALIDATOR_KEY = 'validators';\nexport const VALIDATION_SCRIPTS_KEY = 'validationScripts';\nexport const QUERY_FRAGMENT = `\n${FIELD_VALIDATOR_QUERY_KEY} {\n\t${FIELD_VALIDATOR_KEY}(table: $table, sysId: $sysId, view: $view) {\n\t\tvalidationScripts {\n\t\t\tinternalType\n\t\t\tscript:validator\n\t\t\tdescription\n\t\t\tfields\n\t\t}\n\t}\n}`;\n\nconst createTransform = getValueOrDefault => data => {\n\tconst scripts = getValueOrDefault(VALIDATION_SCRIPTS_KEY, [])(data);\n\treturn {\n\t\tfieldValidators: scripts\n\t};\n};\n\nexport const createFieldValidatorDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${FIELD_VALIDATOR_QUERY_KEY}.${FIELD_VALIDATOR_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId', 'view'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' },\n\t\t\tview: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tfieldValidators: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import { createDataProviderDataSource, getValue } from '@devsnc/library-form';\n\nexport const UI_SCRIPT_QUERY_KEY = 'GlideUIScript_Query';\nexport const UI_SCRIPT_KEY = 'uiScripts';\nexport const SCRIPTS_KEY = 'scripts';\nexport const QUERY_FRAGMENT = `\n${UI_SCRIPT_QUERY_KEY} {\n\t${UI_SCRIPT_KEY} {\n\t\tscripts {\n\t\t\tname\n\t\t\tdescription\n\t\t\tscript\n\t\t\tsysId\n\t\t}\n\t}\n}\n`;\n\nconst createTransform = getValueOrDefault => data => {\n\tconst scripts = getValueOrDefault(SCRIPTS_KEY, [])(data);\n\treturn {\n\t\tscripts\n\t};\n};\n\nexport const createUIScriptDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${UI_SCRIPT_QUERY_KEY}.${UI_SCRIPT_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: [],\n\t\ttransform,\n\t\tselectableProps: {\n\t\t\t[UI_SCRIPT_KEY]: {\n\t\t\t\tdefault: {}\n\t\t\t}\n\t\t}\n\t});\n};\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\n\nexport const REGISTERED_MODAL_QUERY_KEY = 'GlideRegisteredModalQuery_Query';\nexport const REGISTERED_MODAL_KEY = 'registeredModals';\nexport const MODALS_KEY = 'modals';\nexport const QUERY_FRAGMENT = `\n${REGISTERED_MODAL_QUERY_KEY} {\n\t${REGISTERED_MODAL_KEY} {\n\t\t${MODALS_KEY} {\n\t\t\tcomponent\n\t\t\tnamespace\n\t\t\tapi\n\t\t}\n\t}\n}\n`;\n\nconst registerGlideModal = (modals = [], snFormModal) => {\n\t_.forEach(modals, modal => {\n\t\tsnFormModal.registerGlideModal(\n\t\t\tmodal.component,\n\t\t\tmodal.namespace,\n\t\t\tmodal.api\n\t\t);\n\t});\n};\n\nconst createTransform = getValueOrDefault => data => {\n\tconst modals = getValueOrDefault(MODALS_KEY, [])(data);\n\n\treturn {\n\t\tmodals\n\t};\n};\n\nexport const createRegisteredModalDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${REGISTERED_MODAL_QUERY_KEY}.${REGISTERED_MODAL_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: [],\n\t\ttransform,\n\t\tselectableProps: {\n\t\t\tmodals: {\n\t\t\t\tdefault: []\n\t\t\t}\n\t\t}\n\t});\n};\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\nimport {\n\tQUERY_METHOD,\n\tENTRIES_FIELD,\n\tFIELDS_FIELD,\n\tgetQuery,\n\tgetQueryFragments\n} from '@servicenow/now-activity-stream';\nimport _ from 'lodash';\n\nconst ACTIVITY_QUERY_KEY = 'GlideActivity_Query';\nconst ENTRIES_KEY = ENTRIES_FIELD || 'entries';\nconst FIELDS_KEY = FIELDS_FIELD || 'fields';\nconst TIMESTAMP_KEY = 'sysTimestamp';\nconst GET_STREAM = QUERY_METHOD || 'getStream';\nconst QUERY_FRAGMENT = getQuery\n\t? `\n\t${ACTIVITY_QUERY_KEY} {\n\t\t${getQuery()}\n\t}\n`\n\t: `\n\t${ACTIVITY_QUERY_KEY} {\n\t\t${GET_STREAM}(table: $table, sysId: $sysId, view: $view) {\n\t\t\t${getQueryFragments()}\n\t\t}\n\t}\n`;\nconst SUPPLEMENTAL_KEY = 'supplemental';\nconst AMB_CHANNELS_KEY = 'ambChannels';\nconst USER_REFERENCES_KEY = 'userReferences';\n\nconst createTransform = getValueOrDefault => data => {\n\tconst stream = getValueOrDefault(GET_STREAM, null)(data);\n\tconst events = getValueOrDefault(`${GET_STREAM}.${ENTRIES_KEY}`, [])(data);\n\tconst visible = !_.isNull(stream) && events.length !== 0;\n\tconst filterOptions = getValueOrDefault(`${GET_STREAM}.${FIELDS_KEY}`, [])(\n\t\tdata\n\t);\n\tconst timestamp = getValueOrDefault(`${GET_STREAM}.${TIMESTAMP_KEY}`, '')(\n\t\tdata\n\t);\n\tconst supplemental = getValueOrDefault(\n\t\t`${GET_STREAM}.${SUPPLEMENTAL_KEY}`,\n\t\t[]\n\t)(data);\n\tconst ambChannels = getValueOrDefault(\n\t\t`${GET_STREAM}.${AMB_CHANNELS_KEY}`,\n\t\t[]\n\t)(data);\n\tconst userReferences = getValueOrDefault(\n\t\t`${GET_STREAM}.${USER_REFERENCES_KEY}`,\n\t\t[]\n\t)(data);\n\n\treturn {\n\t\tevents,\n\t\tvisible,\n\t\tfilterOptions,\n\t\ttimestamp,\n\t\tsupplemental,\n\t\tambChannels,\n\t\tuserReferences\n\t};\n};\n\nexport const createActivityStreamDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${ACTIVITY_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId', 'view'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' },\n\t\t\tview: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tevents: {\n\t\t\t\tdefault: []\n\t\t\t},\n\t\t\tfilterOptions: {\n\t\t\t\tdefault: []\n\t\t\t},\n\t\t\tvisible: {\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tsupplemental: {\n\t\t\t\tdefault: []\n\t\t\t},\n\t\t\tambChannels: {\n\t\t\t\tdefault: []\n\t\t\t},\n\t\t\tuserReferences: {\n\t\t\t\tdefault: []\n\t\t\t},\n\t\t\ttimestamp: {}\n\t\t}\n\t});\n};\n","module.exports = __TECTONIC__$servicenow_now_activity_stream;","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\nimport { CONTEXTUAL_LINK_NAMES } from '@servicenow/now-record-common';\n\nexport const RIBBON_QUERY_KEY = 'AppRibbonConfig_Query';\nexport const RIBBON_CONFIG_KEY = 'ribbonConfig';\nexport const QUERY_FRAGMENT = `\n${RIBBON_QUERY_KEY} {\n\t${RIBBON_CONFIG_KEY}:getRibbonConfig(sourceTable: $table, sysId: $sysId, workspaceConfigId: $workspaceConfigId, ribbonConfigId: $ribbonConfigId) {\n      _results {\n          table {\n            value\n            displayValue\n          }\n          name {\n            value\n            displayValue\n          }\n          attrs {\n            variables {\n              variableName\n              variableValue\n            }\n          }\n          component {\n            value\n            displayValue\n          }\n          tag {\n            value\n            displayValue\n          }\n          width {\n            value\n            displayValue\n          }\n          order {\n            value\n            displayValue\n          }\n        }\n\t}\n}\n`;\n\nconst createTransform = getValueOrDefault => (data, state, properties) => {\n\tconst { sysId: orgSysId } = properties;\n\tconst { trueTable } = state.record;\n\tconst ribbonWidgets = getValueOrDefault('_results', [])(data);\n\tconst hasRibbonWidgets = orgSysId !== '-1' && ribbonWidgets.length > 0;\n\tconst encodedQuery = encodeURIComponent(`table=${trueTable}^ORDERBYorder`);\n\tconst configurationItem = {\n\t\torder: CONTEXTUAL_LINK_NAMES.ribbon.order,\n\t\tlabel: CONTEXTUAL_LINK_NAMES.ribbon.name,\n\t\turl: encodeURIComponent(\n\t\t\t`sys_aw_ribbon_setting_list.do?sysparm_query=${encodedQuery}`\n\t\t)\n\t};\n\treturn {\n\t\twidgets: ribbonWidgets,\n\t\tisVisible: hasRibbonWidgets,\n\t\tconfigurationItem,\n\t\thasRibbonWidgets\n\t};\n};\n\nexport const createRibbonDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${RIBBON_QUERY_KEY}.${RIBBON_CONFIG_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId', 'workspaceConfigId', 'ribbonConfigId'],\n\t\ttemplateVariables: [],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\twidgets: {\n\t\t\t\tdefault: []\n\t\t\t},\n\t\t\tisVisible: {\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\thasRibbonWidgets: {},\n\t\t\tconfigurationItem: {}\n\t\t}\n\t});\n};\n","import { getValue, createDataProviderDataSource } from '@devsnc/library-form';\nimport _ from 'lodash';\n\nexport const SHN_QUERY_KEY = 'GlideSHN_Query';\nexport const SHN_ENABLE_KEY = 'isSHNEnabled';\nexport const SHN_TOTAL_MSGS_KEY = 'totalMsg';\n\nexport const QUERY_FRAGMENT = `\n${SHN_QUERY_KEY}(table: $table, sys_id: $sysId) {\n\t${SHN_ENABLE_KEY},\n\t${SHN_TOTAL_MSGS_KEY}\n}\n`;\n\nconst createTransform = getValueOrDefault => data => {\n\tconst shnEnabled = getValueOrDefault('isSHNEnabled', false)(data);\n\tconst totalMsg = getValueOrDefault(SHN_TOTAL_MSGS_KEY, 0)(data);\n\tconst enabled = shnEnabled && totalMsg > 0;\n\n\treturn {\n\t\tenabled\n\t};\n};\n\nexport const createSpecialHandlingNoteDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${SHN_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'sysId'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tsysId: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\tshnEnabled: {\n\t\t\t\tdefault: false\n\t\t\t}\n\t\t}\n\t});\n};\n","import { createDataProviderDataSource, getValue } from '@devsnc/library-form';\nimport { notificationProcessor } from '../../../../sn/sessionMessage/notificationProcessor';\n\nconst SESSION_MESSAGE_QUERY_KEY = 'GlideDomain_Query';\nconst SESSION_MESSAGE_CONFIG_KEY = 'session';\nconst SESSION_MESSAGE_NOTIFICATIONS_KEY = 'notifications';\nconst QUERY_FRAGMENT = `\n${SESSION_MESSAGE_QUERY_KEY} {\n\t${SESSION_MESSAGE_CONFIG_KEY} {\n\t\tnotifications{\n\t\t\ttype\n\t\t\ttext\n\t\t\tnotificationType\n\t\t\tnotificationAttributes {\n\t\t\t\tattributeName\n\t\t\t\tattributeValue\n\t\t\t}\n\t\t\tchildNotifications {\n\t\t\t\ttype\n\t\t\t\ttext\n\t\t\t\tnotificationType\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nconst transformMessages = (notifications, table, sysId) => {\n\tconst process = notificationProcessor(table, sysId);\n\treturn process(notifications);\n};\n\nconst createTransform = getValueOrDefault => (data, state, properties) => {\n\tconst { table, sysId } = properties;\n\tconst messages = transformMessages(\n\t\tgetValueOrDefault(SESSION_MESSAGE_NOTIFICATIONS_KEY, [])(data),\n\t\ttable,\n\t\tsysId\n\t);\n\treturn {\n\t\tmessages\n\t};\n};\n\nexport const createSessionMessageDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${SESSION_MESSAGE_QUERY_KEY}.${SESSION_MESSAGE_CONFIG_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: [],\n\t\ttransform,\n\t\tselectableProps: {\n\t\t\tmessages: {\n\t\t\t\tdefault: []\n\t\t\t}\n\t\t}\n\t});\n};\n","import {\n\tgetValue,\n\tcreateDataProviderDataSource\n} from '@devsnc/library-form';\nimport * as glideFormDataParser from '../../data/glideFormDataParser';\nimport _ from 'lodash';\n\nconst FIELD_NAME_FIELDS = `\ndependentFieldLabel\ndependentValue\ndisplayValueWithPath\n`;\nconst DICTIONARY_DEPENDENT_FIELD_LABEL = `dependentFieldLabel`;\nconst DOCUMENT_ID_ELEMENT_TYPE = `... on GlideLayout_DocumentIdElementType {\n\t\t\t\tdocumentLabel\n\t\t\t\tdependentValue\n\t\t\t}`;\nconst TEMPLATE_ELEMENT_TYPE = `...on GlideLayout_TemplateElementType {\ndependentField\ndependentValue\n}\n`;\nconst QUERY_FRAGMENT = `\nGlideLayout_Query {\n\tformLayout(table: $table, view: $view) {\n\t\tsectionLayout {\n\t\t\tsysId\n\t\t\tcaption\n\t\t\tcaptionDisplay\n\t\t\trows {\n\t\t\t\tfields\n\t\t\t}\n\t\t}\n\n\t\telementsData {\n\t\t\tname: elementName\n\t\t\tdictionary: dictionaryData {\n\t\t\t\ttype: dictionaryType\n\t\t\t\t${DICTIONARY_DEPENDENT_FIELD_LABEL}\n\t\t\t\tdependentField\n\t\t\t\tdependentTable\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tcanWrite\n\t\t\t\tcanRead\n\t\t\t\tcanCreate\n\t\t\t\tinternalType\n\t\t\t\tisMandatory\n\t\t\t\tsys_readonly: sysReadonly\n\t\t\t\tattributes {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t\t... on GlideLayout_ChoiceElementType {\n\t\t\t\tchoices {\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t\t... on GlideLayout_ReferenceElementType {\n\t\t\t\treference\n\t\t\t\treferenceQualifier\n\t\t\t\treferenceKey\n\t\t\t\tuseReferenceQualifier\n\t\t\t\tdependent\n\t\t\t\tdependentOnField\n\t\t\t\trefAutoCompleter\n\t\t\t\trefAcOrderBy\n\t\t\t\trefAcColumns\n\t\t\t\trefAcColumnsSearch\n\t\t\t\trefAcDisplayValue\n\t\t\t\trefQualElements\n\t\t\t\trefContributions\n\t\t\t\tisDynamicCreate\n\t\t\t\tisReferenceScriptableTable\n\t\t\t\treferenceError\n\t\t\t}\n\t\t\t... on GlideLayout_ValueElementType {\n\t\t\t\tmaxLength\n\t\t\t\tdefaultRows\n\t\t\t}\n\n\t\t\t... on GlideLayout_TableNameElementType {\n\t\t\t\tdisplayValue\n\t\t\t}\n\n\t\t\t... on GlideLayout_FieldNameElementType {\n\t\t\t\tdisplayValue\n\t\t\t\t${FIELD_NAME_FIELDS}\n\n\t\t\t}\n\n\t\t\t${TEMPLATE_ELEMENT_TYPE}\n\n\t\t\t${DOCUMENT_ID_ELEMENT_TYPE}\n\t\t}\n\t}\n}\n`;\nconst LAYOUT_QUERY_KEY = 'GlideLayout_Query';\nconst FORM_LAYOUT_QUERY_KEY = 'formLayout';\nconst RECORD_VALUES_KEY = 'recordValues';\nconst FIELD_ELEMENTS_KEY = 'elementsData';\nconst SECTION_LAYOUT = 'sectionLayout';\n\nconst transformFormFieldValues = (\n\ttable,\n\trecordValues,\n\tfieldElements,\n\tisFormReadonly,\n\tdeclarativeUIActions\n) => {\n\tconst formFieldValues = _.reduce(\n\t\tglideFormDataParser.parseFieldGraphQLResponse(\n\t\t\ttable,\n\t\t\t'-1',\n\t\t\trecordValues,\n\t\t\tfieldElements\n\t\t),\n\t\t(fields, field, key) => ({\n\t\t\t...fields,\n\t\t\t[key]: {\n\t\t\t\t...field,\n\t\t\t\tdeclarativeUiActions: declarativeUIActions[key]\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n\tif (!isFormReadonly) return formFieldValues;\n\treturn _.reduce(\n\t\tformFieldValues,\n\t\t(fields, field, key) => ({\n\t\t\t...fields,\n\t\t\t[key]: {\n\t\t\t\t...field,\n\t\t\t\tsys_readonly: true,\n\t\t\t\treadonly: true\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n};\n\nconst transformSections = sections => {\n\treturn sections.map((section, index) => ({\n\t\t...section,\n\t\tid: index,\n\t\tcaption: (section.caption || section.captionDisplay || '')\n\t\t\t.toLowerCase()\n\t\t\t.replace(' ', '_')\n\t\t\t.replace(/[^0-9a-z_]/gi, ''),\n\t\tlabel: section.captionDisplay,\n\t\texpanded: true\n\t}));\n};\n\nconst createTransform = getValueOrDefault => (\n\tdata,\n\tstate,\n\tproperties,\n\tdeclarativeUIActions = {}\n) => {\n\tconst { isFormReadonly } = state;\n\tconst { table } = properties;\n\tconst recordValues = getValueOrDefault(RECORD_VALUES_KEY, [])(data);\n\tconst fieldElements = getValueOrDefault(FIELD_ELEMENTS_KEY, [])(\n\t\tdata\n\t).filter(el => _.get(el, 'dictionary.canRead') !== false);\n\tconst sections = transformSections(\n\t\tgetValueOrDefault(SECTION_LAYOUT, [])(data)\n\t);\n\n\tconst formFieldValues = transformFormFieldValues(\n\t\ttable,\n\t\trecordValues,\n\t\tfieldElements,\n\t\tisFormReadonly,\n\t\tdeclarativeUIActions\n\t);\n\n\treturn {\n\t\trecordValues,\n\t\tfieldElements,\n\t\tsections,\n\t\tformFieldValues\n\t};\n};\n\nexport const createSimpleFormLayoutDataSource = (queryPrefix = '') => {\n\tconst baseKey = `${queryPrefix}${LAYOUT_QUERY_KEY}.${FORM_LAYOUT_QUERY_KEY}`;\n\tconst getValueOrDefault = getValue(baseKey);\n\tconst transform = createTransform(getValueOrDefault);\n\n\treturn createDataProviderDataSource({\n\t\tquery: QUERY_FRAGMENT,\n\t\tvariables: ['table', 'view'],\n\t\ttransform,\n\t\tprops: {\n\t\t\ttable: { default: '' },\n\t\t\tview: { default: '' }\n\t\t},\n\t\tselectableProps: {\n\t\t\trecordValues: {},\n\t\t\tfieldElements: {},\n\t\t\tsections: {},\n\t\t\tformFieldValues: {}\n\t\t}\n\t});\n};\n","module.exports = __TECTONIC__$devsnc_sn_declarative_actions;","import _ from 'lodash';\nimport { actionTypes } from '@servicenow/ui-core';\nimport {getInteractionId, mark, types as metrics} from '@servicenow/ui-metrics';\nimport {\n\tATFHelper,\n\tloadModals,\n\texecuteEffectIfTrueEffect,\n\tPREVIEW_RECORD,\n\tdispatchPreviewRecord,\n\tcreateReDispatchActionHandler,\n\ttransformPreviewRecordPayload\n} from '@devsnc/library-form';\nimport { sendRequestFactory } from '../sn/http/http';\nimport sessionMessageRESTHandler from '../sn/sessionMessage/SessionMessageRESTHandler';\nimport notificationActions from '../sn/sessionMessage/notificationActions';\nimport {\n\tDATASOURCE_NAMES,\n\tDATASOURCE_KEYS,\n\tgetFormModel,\n\tcreateTabRoutes\n} from '../sn/clientScript/dataProviders/utils';\nimport { gFormActionHandlers } from '../sn/clientScript/form/gFormActions';\nimport { isHostAction } from '../utils/seismic';\nimport { validateSourceCSDB } from '../utils/uxf';\n\nimport {\n\tFORM_UPDATE_HEADER,\n\tSET_FIELDS_VALUE,\n\tEXECUTE_UI_ACTION,\n\tPHONE_ADDON_ACTION_CLICK,\n\tOPEN_PHONE,\n\tWRAPPED_ACTION,\n\tITEM_SELECTED,\n\tREFERENCE_INFO_CLICK,\n\tRECORD_STATUS_UNMODIFIED,\n\tRECORD_STATUS_CHANGED,\n\tSCREEN_STATUS_CHANGED,\n\tTOGGLE_DOMAIN_SCOPE,\n\tQUERY_CHANGED,\n\tCONTENT_ITEMS_SELECTED,\n\tFORM_DATA_CONNECTED_SET_LOADING_STATE,\n\tFORM_DATA_CONNECTED_EXECUTE_UI_ACTION,\n\tFORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED,\n\tFORM_DATA_CONNECTED_ITEM_SELECTED,\n\tFORM_DATA_CONNECTED_PREVIEW_RECORD,\n\tFORM_DATA_CONNECTED_WRAPPED_ACTION,\n\tFORM_DATA_CONNECTED_OPEN_PHONE,\n\tFORM_DATA_CONNECTED_ADD_NOTIFICATIONS,\n\tFORM_DATA_CONNECTED_DOMAIN_UPDATED,\n\tRIBBON_OPEN_PHONE,\n\tRIBBON_EXECUTED_UI_ACTION,\n\tRIBBON_PREVIEW_RECORD,\n\tRIBBON_ITEM_SELECTED,\n\tRIBBON_WRAPPED_ACTION\n} from '../constants/ScriptingActions';\nimport {\n\tSnFormModal,\n\tSnAppModal,\n\tFieldSetWrapperModal\n} from '@devsnc/sn-scripted-modal';\nimport { UI_ACTION_BAR_ACTIONS } from '@servicenow/now-record-common';\nimport { GlideFormEnvironment } from '../sn/clientScript/form/GlideFormEnvironment';\nimport { loadPlatformResources } from '../sn/clientScript/platformResources';\nimport { createGlideFormBehaviorEventHandler } from '../sn/clientScript/form/GlideFormBehaviorEventHandlerFactory';\nimport liveUpdateActions from '../sn/liveUpdate/liveUpdateActions';\nimport usersDataFetchActions from '../sn/liveUpdate/datasources/UsersResource';\n\nimport {\n\tcreateUpdateDataHelper,\n\tcreateFormDataProvider,\n\tfetchFormDataActions\n} from '../sn/clientScript/dataProviders/formDataProvider';\n\nimport { getPropsTransformation } from '../sn/clientScript/dataProviders/recordPageFetchHandlers';\nimport { DOMAIN_SCOPES } from '../sn/clientScript/domain/domainProviderFactory';\nimport { t } from 'sn-translate';\nconst { COMPONENT_DOM_READY, COMPONENT_ERROR_THROWN, COMPONENT_TREE_RENDERED, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nconst getChildActivities = (detailsContext, table, sysId) => {\n\tlet updatedChildTabs = [];\n\t// agent workspace\n\tif (Array.isArray(detailsContext)) {\n\t\tupdatedChildTabs = detailsContext.filter(detail => {\n\t\t\treturn detail.op !== 'viewed' || detail.operation !== 'viewed';\n\t\t});\n\t// uib\n\t} else {\n\t\tif (!detailsContext instanceof Map)\n\t\t\treturn updatedChildTabs;\n\n\t\tconst key = `record~sysId~${sysId}~table~${table}`;\n\t\tconst activityLog = detailsContext.get(key);\n\t\tif (!activityLog || !activityLog.activities)\n\t\t\treturn updatedChildTabs;\n\n\t\tconst activityMap = activityLog.activities;\n\t\tif (!(activityMap instanceof Map))\n\t\t\treturn updatedChildTabs;\n\t\tconst crudActivities = activityMap.get(\"crud\");\n\t\tupdatedChildTabs = crudActivities.filter(detail => {\n\t\t\treturn detail.operation === 'inserted' || detail.operation === 'updated' || detail.operation === 'deleted';\n\t\t});\n\t}\n\treturn updatedChildTabs;\n}\n\nconst dispatchSetLoadingState = (loading, dispatch) => {\n\tdispatch(FORM_DATA_CONNECTED_SET_LOADING_STATE, {\n\t\tloading,\n\t\tlabel: loading ? t('Please wait...') : ''\n\t});\n};\n\nconst previewRecordInterceptors = [\n\t{\n\t\tbefore: context => {\n\t\t\tconst { coeffects } = context;\n\t\t\tconst {\n\t\t\t\taction: { payload },\n\t\t\t\tstate: { formData }\n\t\t\t} = coeffects;\n\t\t\tconst isNewRecord =\n\t\t\t\t'sys_id' in payload &&\n\t\t\t\tpayload.sys_id === '-1';\n\t\t\tif (isNewRecord && canExpandDomainScope(formData)) {\n\t\t\t\tconst params = _.get(\n\t\t\t\t\tcoeffects,\n\t\t\t\t\t'action.payload.params',\n\t\t\t\t\t{}\n\t\t\t\t);\n\t\t\t\tlet query = params.query || '';\n\t\t\t\tquery +=\n\t\t\t\t\t(query ? '^' : '') +\n\t\t\t\t\t'sys_domain=' +\n\t\t\t\t\tformData.layout.domainSeparation.domainId;\n\t\t\t\tcoeffects.action.payload.params = {\n\t\t\t\t\t...params,\n\t\t\t\t\tquery\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n];\n\nconst tabSelectedEffect = ({\n\taction,\n\tstate: { classicForm },\n\tproperties,\n\tupdateState,\n\tupdateProperties\n}) => {\n\tconst {\n\t\tpayload: { selectedTabName }\n\t} = action;\n\tif (!selectedTabName) return;\n\tif (classicForm) updateState({ selectedTabName });\n\telse {\n\t\tconst { nowRecordFormBlob } = properties;\n\t\tif (!nowRecordFormBlob) return;\n\t\tupdateProperties({\n\t\t\tpath: 'nowRecordFormBlob.selectedTabName',\n\t\t\tvalue: selectedTabName,\n\t\t\toperation: 'assign'\n\t\t});\n\t}\n};\n\nconst executeUiActionEffect = ({ state, action, host, properties }) => {\n\tconst { payload } = action;\n\tconst { glideEnvironment } = state;\n\tconst gUIActions = glideEnvironment.gUIActions;\n\tconst actionSysId = _.get(payload, 'actionSysId', '');\n\n\tif (!gUIActions || !actionSysId) return;\n\tif (!validateSourceCSDB(host, properties, action)) return;\n\n\t// eslint-disable-next-line no-unused-vars\n\n\tgUIActions.click(actionSysId).catch(error => {\n\t\tconsole.warn('Error in executing action');\n\t});\n};\n\nconst openPhoneEffect = ({ action, dispatch, state, properties }) => {\n\tconst phoneNumber = _.get(\n\t\taction,\n\t\t'payload.phoneNumber',\n\t\t''\n\t);\n\tconst {\n\t\ttable: recordTable,\n\t\tsysId: recordSysId\n\t} = properties;\n\tconst {\n\t\tformData: { tableDisplayValue, recordDisplayValue } = {}\n\t} = state;\n\n\tdispatch(OPEN_PHONE, {\n\t\ttype: OPEN_PHONE,\n\t\ttable: recordTable,\n\t\tsysId: recordSysId,\n\t\tphoneNumber,\n\t\ttableName: tableDisplayValue,\n\t\tdisplayValue: recordDisplayValue\n\t});\n}\n\nconst listDataFetchEffect = (globals, {action : { payload }, properties, updateProperties, host, state}) => {\n\tconst {\n\t\ttable, sysId\n\t} = properties;\n\tconst {\n\t\trelatedLists\n\t} = state;\n\tconst id = host.nowId;\n\tconst {\n\t\tparentTable,\n\t\tparentRecordSysId,\n\t\trelatedListName: updatedRelatedListName\n\t} = payload;\n\tif (parentTable !== table || parentRecordSysId !== sysId)\n\t\treturn;\n\n\tconst updatedRelatedListCount = _.get(payload, 'model.layoutQuery.count');\n\tif (updatedRelatedListCount === undefined) \n\t\treturn;\n\n\trelatedLists\n\t\t.filter(relatedList => relatedList.value === updatedRelatedListName)\n\t\t.forEach(relatedRelatedList => {\n\t\t\tconst updatedRelatedList = {\n\t\t\t\t...relatedRelatedList,\n\t\t\t\tcount: updatedRelatedListCount\n\t\t\t}\n\t\t\tglobals[id].eventHandler.onRelatedListChange(updatedRelatedList);\n\t\t});\n}\n\nconst setFormValue = ({ state, action: { payload } }) => {\n\tconst { glideEnvironment } = state;\n\n\tconst gForm = glideEnvironment.gForm;\n\tconst { fields, saveForm } = payload;\n\n\tif (!gForm) return;\n\n\t_.forEach(fields, (field, fieldName) => {\n\t\tgForm.setValue(fieldName, field.value, field.displayValue);\n\t});\n\n\tif (saveForm) {\n\t\tconst gUIActions = glideEnvironment.gUIActions;\n\t\tconst saveAction = gUIActions.getActionByName(\n\t\t\tgUIActions.getSaveActionName()\n\t\t);\n\n\t\tif (saveAction) {\n\t\t\tif (!gUIActions) return;\n\t\t\tgUIActions.click(saveAction.sysId).catch(error => {\n\t\t\t\tconsole.warn('Error in executing action');\n\t\t\t});\n\t\t} else console.warn('Unable to find save ui action.');\n\t}\n};\n\nSnAppModal.registerModal(FieldSetWrapperModal, 'FieldSetWrapperModal', {\n\topen: 'showFields'\n});\n\nconst registerGlideModal = (registeredModals = [], snFormModal) => {\n\t_.forEach(registeredModals, modal => {\n\t\tsnFormModal.registerGlideModal(\n\t\t\tmodal.component,\n\t\t\tmodal.namespace,\n\t\t\tmodal.api\n\t\t);\n\t});\n};\n\nconst BEHAVIOR_NAME = 'clientScriptEnvironment';\n\nconst createFormModal = (modals, oldFormModal) => {\n\tconst formModal = SnFormModal.clone(oldFormModal);\n\tloadModals(modals);\n\tregisterGlideModal(modals, formModal);\n\tformModal.initialize();\n\treturn formModal;\n};\n\nconst postConfigurations = (record, configurationItems, dispatch) => {\n\tconst { table, sysId } = record;\n\tdispatch('CONTENT_ITEMS_SELECTED', {\n\t\ttable,\n\t\tsysId,\n\t\titems: configurationItems\n\t});\n};\n\nconst postScreenStatusChangedForHeaderInfo = (header = {}, dispatch) => {\n\tconst {\n\t\trecordDisplayValue,\n\t\tprimaryValue,\n\t\tprimaryItem,\n\t\tsecondaryItems\n\t} = header;\n\tconst payload = {\n\t\ttitle: recordDisplayValue || primaryValue,\n\t\ttooltipPreview: {\n\t\t\tprimaryTitle: primaryValue,\n\t\t\tsecondaryContent: secondaryItems\n\t\t},\n\t\tprimaryItem: primaryItem,\n\t\tsecondaryItems: secondaryItems\n\t}\n\tdispatch(FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED, payload);\n};\n\nconst postFormUpdateHeader = (record, header, dispatch) => {\n\tconst { sysId } = record;\n\tconst payload = {\n\t\t...header,\n\t\tsysId\n\t};\n\tdispatch(FORM_UPDATE_HEADER, payload);\n};\n\nconst canExpandDomainScope = formData => {\n\treturn _.get(formData, 'layout.domainSeparation.canExpandScope', false);\n};\n\nconst getDomainProperties = (formData, properties) => {\n\tconst isNewRecord = _.get(formData, 'layout.isNewRecord', false);\n\tconst domainId = _.get(\n\t\tformData,\n\t\t'layout.domainSeparation.domainId',\n\t\t'global'\n\t);\n\treturn {\n\t\tnowDsDomainId: domainId,\n\t\tnowDsRecordId: isNewRecord ? '-1' : properties.sysId,\n\t\tnowDsRecordTable: properties.table\n\t};\n};\n\nconst getDomainScope = properties =>\n\tproperties.nowDsDomainScope || DOMAIN_SCOPES.RECORD;\n\nconst createBlockInnerFormActionInterceptor = (additionalEffects) => executeEffectIfTrueEffect(\n\t({ coeffects }) => {\n\t\tconst {\n\t\t\taction: {\n\t\t\t\tmeta: { id }\n\t\t\t},\n\t\t\taction,\n\t\t\thost,\n\t\t\tproperties,\n\t\t\tstate: { classicForm }\n\t\t} = coeffects;\n\t\tif (!classicForm) return true;\n\n\t\tconst shouldExecute = isHostAction(host, properties, id);\n\t\tif (!shouldExecute) action.stopPropagation();\n\n\t\treturn shouldExecute;\n\t},\n\t{ effect: () => {} },\n\tadditionalEffects\n);\n\nconst screenStatusChangeEffect = {\n\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED)\n};\n\n// When not specified components, it'll fetch all form data (ex for classic form), and using updateState instead of updateProperties for performance.\nexport const createClientScriptBehavior = (components, options = {}) => {\n\tconst globals = new WeakMap();\n\tconst atfHelper = ATFHelper(window);\n\tconst { publicActions = {}, classicForm = false } = options;\n\n\tconst selectableResult = components\n\t\t? getPropsTransformation(components)\n\t\t: {};\n\n\tconst fetchDataActions =\n\t\toptions.fetchFormDataActions || fetchFormDataActions;\n\n\tconst setupEventHandler = id => {\n\t\tconst { eventHandler, glideEnvironment, liveUpdate } = globals[id];\n\t\tglideEnvironment.onStateChange(eventHandler.onStateChange);\n\t\tglideEnvironment.onFormSubmit(submitResult => {\n\t\t\t// need to clean up liveUpdate immediately\n\t\t\tif (liveUpdate) {\n\t\t\t\tliveUpdate.destroy();\n\t\t\t\tglobals[id].liveUpdate = null;\n\t\t\t}\n\t\t\teventHandler.onFormSubmit(submitResult);\n\t\t});\n\t\tglideEnvironment.onChange(eventHandler.onChange);\n\t\tglideEnvironment.onPropChange(eventHandler.onPropChange);\n\t\tglideEnvironment.onLiveUpdated(eventHandler.onLiveUpdated);\n\t};\n\n\tconst setupGlideFormEnvironment = (\n\t\tformData,\n\t\tglideEnvironment,\n\t\tformModal,\n\t\tdispatch,\n\t\tsendRequest,\n\t\ttransformState,\n\t\tid,\n\t\tupdateProperties,\n\t\tupdateState,\n\t\tstate,\n\t\tproperties,\n\t\thost\n\t) => {\n\t\tif (!glideEnvironment) {\n\t\t\tconsole.warn(\n\t\t\t\t`Something went wrong. Environment hasn't been created yet!`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tglideEnvironment.configureWithOptions({\n\t\t\tdata: formData,\n\t\t\tdispatch,\n\t\t\tformModal,\n\t\t\tsendRequest,\n\t\t\treloadForm: () => {\n\t\t\t\tconst {\n\t\t\t\t\ttable,\n\t\t\t\t\tsysId: orgSysId,\n\t\t\t\t\tquery = '',\n\t\t\t\t\tview,\n\t\t\t\t\tforcedViewName,\n\t\t\t\t\tviews,\n\t\t\t\t\tactionConfigId,\n\t\t\t\t\theaderConfigId,\n\t\t\t\t\tribbonConfigId,\n\t\t\t\t\thighlightedValueConfigId,\n\t\t\t\t\tviewRuleConfigId\n\t\t\t\t} = properties;\n\t\t\t\tconst sysId = _.get(\n\t\t\t\t\tformData,\n\t\t\t\t\t`${DATASOURCE_NAMES.formLayout}.sysId`,\n\t\t\t\t\torgSysId\n\t\t\t\t);\n\t\t\t\tconst workspaceConfigId = _.get(\n\t\t\t\t\tformData,\n\t\t\t\t\t`workspaceConfigId`,\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t\tconst allViews = views || view;\n\t\t\t\tdispatch(fetchDataActions.START, {\n\t\t\t\t\ttable,\n\t\t\t\t\tsysId: orgSysId,\n\t\t\t\t\tquery,\n\t\t\t\t\tviews: _.isArray(allViews) ? allViews.join(',') : allViews,\n\t\t\t\t\tforcedViewName,\n\t\t\t\t\tworkspaceConfigId,\n\t\t\t\t\tactionConfigId,\n\t\t\t\t\theaderConfigId,\n\t\t\t\t\tribbonConfigId,\n\t\t\t\t\thighlightedValueConfigId,\n\t\t\t\t\tviewRuleConfigId\n\t\t\t\t});\n\t\t\t\tdispatch(RECORD_STATUS_CHANGED, {\n\t\t\t\t\ttable: table,\n\t\t\t\t\tsys_id: sysId,\n\t\t\t\t\tstatus: RECORD_STATUS_UNMODIFIED\n\t\t\t\t});\n\t\t\t\tdispatch(FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED, {\n\t\t\t\t\tisDirty: false\n\t\t\t\t});\n\t\t\t},\n\t\t\tdomainScope: getDomainScope(properties)\n\t\t});\n\t\tatfHelper.setDataLoadSessionId();\n\t\tif (\n\t\t\t!formData[DATASOURCE_KEYS[DATASOURCE_NAMES.formLayout]]\n\t\t\t\t.isValidRecord\n\t\t)\n\t\t\treturn;\n\n\t\tglobals[id].eventHandler = createGlideFormBehaviorEventHandler(\n\t\t\tdispatch,\n\t\t\ttransformState,\n\t\t\tformData,\n\t\t\tupdateProperties,\n\t\t\tfetchDataActions\n\t\t);\n\t\tsetupEventHandler(id);\n\n\t\t// Kick off the onLoad scripts\n\t\tglideEnvironment.initialize();\n\t};\n\n\tconst createFetchingHandlers = options => ({\n\t\tstartedHandler: {\n\t\t\teffect: ({ updateState, state, dispatch }) => {\n\t\t\t\tconst { classicForm } = state;\n\t\t\t\tif (!classicForm) {\n\t\t\t\t\tdispatchSetLoadingState(true, dispatch);\n\t\t\t\t\tupdateState({ loading: true });\n\t\t\t\t} else {\n\t\t\t\t\tif (!state.formData) return; // only set loading state when form is refresh again for perf\n\t\t\t\t\tupdateState({ loading: true });\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: classicForm\n\t\t},\n\t\tsucceededHandler: {\n\t\t\teffect: ({\n\t\t\t\tstate,\n\t\t\t\taction: {\n\t\t\t\t\tpayload: { data = {} },\n\t\t\t\t\tmeta: { id }\n\t\t\t\t},\n\t\t\t\tupdateProperties,\n\t\t\t\tupdateState,\n\t\t\t\tdispatch,\n\t\t\t\tproperties,\n\t\t\t\thost\n\t\t\t}) => {\n\t\t\t\t// when a form is rendered inside a tab-set, for some unknown reasons parent component is handled the action from child component first.\n\t\t\t\t// This extra check is to ensure that we will never end up in a situation that the handler is handled an action that is not belong to it.\n\t\t\t\tif (!isHostAction(host, properties, id)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst updatingProperties = createUpdateDataHelper(classicForm, properties);\n\t\t\t\tconst { formData, configurationItems } = updatingProperties(\n\t\t\t\t\tdata,\n\t\t\t\t\tstate,\n\t\t\t\t\tproperties\n\t\t\t\t);\n\n\t\t\t\tpostConfigurations(\n\t\t\t\t\tformData.record,\n\t\t\t\t\tconfigurationItems,\n\t\t\t\t\tdispatch\n\t\t\t\t);\n\n\t\t\t\tif (state.classicForm)\n\t\t\t\t\tpostFormUpdateHeader(\n\t\t\t\t\t\tformData.record,\n\t\t\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.header]],\n\t\t\t\t\t\tdispatch\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\tpostScreenStatusChangedForHeaderInfo(formData[DATASOURCE_KEYS[DATASOURCE_NAMES.header]], dispatch);\n\n\t\t\t\tif (!globals[id]) return;\n\n\t\t\t\tglobals[id].formModal = createFormModal(\n\t\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.registeredModal]]\n\t\t\t\t\t\t.modals,\n\t\t\t\t\tglobals[id].formModal\n\t\t\t\t);\n\t\t\t\tglobals[id].glideEnvPromise.then(\n\t\t\t\t\tgEnv => {\n\t\t\t\t\t\tlet initialState = {\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\tisReloading: false,\n\t\t\t\t\t\t\tinteractive: false\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsetupGlideFormEnvironment(\n\t\t\t\t\t\t\tformData,\n\t\t\t\t\t\t\tgEnv,\n\t\t\t\t\t\t\tglobals[id].formModal,\n\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\tglobals[id].sendRequest,\n\t\t\t\t\t\t\tstate => {\n\t\t\t\t\t\t\t\tinitialState = { ...initialState, ...state };\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tupdateProperties,\n\t\t\t\t\t\t\tupdateState,\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tproperties,\n\t\t\t\t\t\t\thost\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Kick off the onLoad scripts\n\t\t\t\t\t\tconst gForm = gEnv.gForm;\n\t\t\t\t\t\tif (selectableResult.selectablePropsTransformer) {\n\t\t\t\t\t\t\tconst props = selectableResult.selectablePropsTransformer(\n\t\t\t\t\t\t\t\tformData,\n\t\t\t\t\t\t\t\tglobals[id].formModal,\n\t\t\t\t\t\t\t\tgForm,\n\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatchSetLoadingState(false, dispatch);\n\t\t\t\t\t\t\tupdateProperties({\n\t\t\t\t\t\t\t\t...props\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst notifications = _.get(\n\t\t\t\t\t\t\tformData,\n\t\t\t\t\t\t\t`${DATASOURCE_NAMES.sessionMessage}.messages`,\n\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tgetDomainScope(properties) === DOMAIN_SCOPES.SESSION\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tnotifications.push({\n\t\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\t\tmessage: 'Domain Scope Expanded'\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (!state.classicForm) {\n\t\t\t\t\t\t\tif (notifications.length)\n\t\t\t\t\t\t\t\tdispatch(FORM_DATA_CONNECTED_ADD_NOTIFICATIONS, {\n\t\t\t\t\t\t\t\t\titems: notifications\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\t...initialState,\n\t\t\t\t\t\t\tformData,\n\t\t\t\t\t\t\tglideEnvironment: gEnv,\n\t\t\t\t\t\t\tformModal: globals[id].formModal,\n\t\t\t\t\t\t\tnotifications: [\n\t\t\t\t\t\t\t\t...(state.notifications || []),\n\t\t\t\t\t\t\t\t...notifications\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tglobals[id].eventHandler.setUpdateState(updateState);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectableResult.selectableProps &&\n\t\t\t\t\t\t\t(selectableResult.selectableProps\n\t\t\t\t\t\t\t\t.nowRecordFormBlob ||\n\t\t\t\t\t\t\t\tselectableResult.selectableProps\n\t\t\t\t\t\t\t\t\t.nowRecordCommonUiactionbar ||\n\t\t\t\t\t\t\t\tselectableResult.selectableProps\n\t\t\t\t\t\t\t\t\t.nowRecordFormSectionColumnLayout)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tglobals[id].eventHandler.setUpdateProps(state => {\n\t\t\t\t\t\t\t\tconst formModel = getFormModel(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...formData,\n\t\t\t\t\t\t\t\t\t\t[DATASOURCE_KEYS[\n\t\t\t\t\t\t\t\t\t\t\tDATASOURCE_NAMES.formLayout\n\t\t\t\t\t\t\t\t\t\t]]: {\n\t\t\t\t\t\t\t\t\t\t\t...formData[\n\t\t\t\t\t\t\t\t\t\t\t\tDATASOURCE_KEYS[\n\t\t\t\t\t\t\t\t\t\t\t\t\tDATASOURCE_NAMES.formLayout\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tformFieldValues: state.fields\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tglobals[id].formModal,\n\t\t\t\t\t\t\t\t\tgForm\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tselectableResult.selectableProps\n\t\t\t\t\t\t\t\t\t\t.nowRecordFormBlob\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst relatedItems =\n\t\t\t\t\t\t\t\t\t\tformData[\n\t\t\t\t\t\t\t\t\t\t\tDATASOURCE_KEYS[\n\t\t\t\t\t\t\t\t\t\t\t\tDATASOURCE_NAMES.formDA\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t].relatedItems;\n\t\t\t\t\t\t\t\t\tconst relatedLists = state.relatedLists;\n\n\t\t\t\t\t\t\t\t\tconst tabRoutes = createTabRoutes({\n\t\t\t\t\t\t\t\t\t\trelatedLists,\n\t\t\t\t\t\t\t\t\t\trelatedItems,\n\t\t\t\t\t\t\t\t\t\tformModel\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tupdateProperties(({ properties }) => {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tnowRecordFormBlob\n\t\t\t\t\t\t\t\t\t\t} = properties;\n\t\t\t\t\t\t\t\t\t\tif (!nowRecordFormBlob)\n\t\t\t\t\t\t\t\t\t\t\treturn { shouldUpdate: false };\n\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tpath: 'nowRecordFormBlob',\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t\t\t\t...nowRecordFormBlob,\n\t\t\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\t\t\tdetailsProps: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...nowRecordFormBlob.detailsProps,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsections: state.sections,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields: state.fields,\n\t\t\t\t\t\t\t\t\t\t\t\t\tserializedChanges: formModel.serializedChanges\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ttabRoutes,\n\t\t\t\t\t\t\t\t\t\t\t\tisAttachmentUploadDisabled: formModel.isAttachmentUploadDisabled\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tselectableResult.selectableProps\n\t\t\t\t\t\t\t\t\t\t.nowRecordFormSectionColumnLayout\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tupdateProperties(({ properties }) => {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tnowRecordFormSectionColumnLayout\n\t\t\t\t\t\t\t\t\t\t} = properties;\n\t\t\t\t\t\t\t\t\t\tif (!nowRecordFormSectionColumnLayout)\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate: false\n\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tpath:\n\t\t\t\t\t\t\t\t\t\t\t\t'nowRecordFormSectionColumnLayout',\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t\t\t\t...nowRecordFormSectionColumnLayout,\n\t\t\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\t\t\tserializedChanges: formModel.serializedChanges\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tselectableResult.selectableProps\n\t\t\t\t\t\t\t\t\t\t.nowRecordCommonUiactionbar\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst daModel = {\n\t\t\t\t\t\t\t\t\t\t...formModel,\n\t\t\t\t\t\t\t\t\t\tfields: Object.values(formModel.fields) // DA action executor needs fields in array different than our related items and side panel\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tupdateProperties(({ properties }) => {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tnowRecordCommonUiactionbar\n\t\t\t\t\t\t\t\t\t\t} = properties;\n\t\t\t\t\t\t\t\t\t\tif (!nowRecordCommonUiactionbar)\n\t\t\t\t\t\t\t\t\t\t\treturn { shouldUpdate: false };\n\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tpath: 'nowRecordCommonUiactionbar',\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t\t\t\t...nowRecordCommonUiactionbar,\n\t\t\t\t\t\t\t\t\t\t\t\tdaModel\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (publicActions.FETCH_STATUS_UPDATED)\n\t\t\t\t\t\t\tdispatch(publicActions.FETCH_STATUS_UPDATED, {\n\t\t\t\t\t\t\t\tstatus: 'succeeded',\n\t\t\t\t\t\t\t\ttime: Date.now()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif (canExpandDomainScope(formData)) {\n\t\t\t\t\t\t\tconst domainProps = getDomainProperties(formData, properties);\n\t\t\t\t\t\t\tdispatch(FORM_DATA_CONNECTED_DOMAIN_UPDATED, { domainId: domainProps.nowDsDomainId });\n\t\t\t\t\t\t\tupdateProperties(domainProps);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconsole.warn(`Unable to setup GlideFormEnvironment`);\n\t\t\t\t\t\tif (!state.classicForm)\n\t\t\t\t\t\t\tdispatchSetLoadingState(false, dispatch);\n\n\t\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\t\tisReloading: false,\n\t\t\t\t\t\t\t\tinteractive: false,\n\t\t\t\t\t\t\t\terror: 'Unable to setup GlideFormEnvironment'\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (publicActions.FETCH_STATUS_UPDATED)\n\t\t\t\t\t\t\tdispatch(publicActions.FETCH_STATUS_UPDATED, {\n\t\t\t\t\t\t\t\tstatus: 'failed',\n\t\t\t\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\t\t\t\terror: 'Unable to setup GlideFormEnvironment'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\tstopPropagation: classicForm\n\t\t},\n\t\tfailedHandle: {\n\t\t\teffect: ({ updateState, action, state, dispatch }) => {\n\t\t\t\tif (!state.classicForm)\n\t\t\t\t\tdispatchSetLoadingState(false, dispatch);\n\n\t\t\t\tupdateState({\n\t\t\t\t\terror: action.payload,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tisReloading: false\n\t\t\t\t});\n\t\t\t\tif (publicActions.FETCH_STATUS_UPDATED)\n\t\t\t\t\tdispatch(publicActions.FETCH_STATUS_UPDATED, {\n\t\t\t\t\t\tstatus: 'failed',\n\t\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\t\terror: action.payload\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t}\n\t});\n\n\tconst selectableProps = selectableResult.selectableProps\n\t\t? selectableResult.selectableProps\n\t\t: {};\n\tconst additionProps = !classicForm\n\t\t? {\n\t\t\t\tshowActivityStreamInDetails: {\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tschema: { type: 'boolean' }\n\t\t\t\t}\n\t\t  }\n\t\t: {};\n\tconst props = Object.keys(selectableProps).reduce(\n\t\t(combinedProps, key) => ({\n\t\t\t...combinedProps,\n\t\t\t[key]: {\n\t\t\t\t...selectableProps[key],\n\t\t\t\tselectable: true\n\t\t\t}\n\t\t}),\n\t\t{\n\t\t\ttable: { mandatory: true, selectable: true },\n\t\t\tview: {\n\t\t\t\tmandatory: false,\n\t\t\t\tselectable: true,\n\t\t\t\tdefault: 'default view'\n\t\t\t},\n\t\t\tsysId: { mandatory: true, selectable: true },\n\t\t\tquery: { mandatory: false },\n\t\t\tworkspaceConfigId: { mandatory: false },\n\t\t\tactionConfigId: { mandatory: false },\n\t\t\theaderConfigId: { mandatory: false },\n\t\t\tribbonConfigId: { mandatory: false },\n\t\t\thighlightedValueConfigId: { mandatory: false },\n\t\t\tviewRuleConfigId: { mandatory: false },\n\t\t\tforcedViewName: {mandatory: false},\n\t\t\t...additionProps\n\t\t}\n\t);\n\n\tconst formDataProvider = createFormDataProvider(\n\t\tcreateFetchingHandlers(),\n\t\tselectableProps,\n\t\tfetchDataActions,\n\t\tclassicForm\n\t);\n\n\treturn {\n\t\tname: BEHAVIOR_NAME,\n\t\tproperties: props,\n\t\tactionHandlers: {\n\t\t\t...formDataProvider.actionHandlers,\n\t\t\t...notificationActions.actionHandlers,\n\t\t\t...usersDataFetchActions.actionHandlers,\n\t\t\t...liveUpdateActions.actionHandlers,\n\t\t\t...gFormActionHandlers.actionHandlers,\n\t\t\t[COMPONENT_PROPERTY_CHANGED]: {\n\t\t\t\teffect(context) {\n\t\t\t\t\tif (formDataProvider.actionHandlers[COMPONENT_PROPERTY_CHANGED] && formDataProvider.actionHandlers[COMPONENT_PROPERTY_CHANGED].effect)\n\t\t\t\t\t\tformDataProvider.actionHandlers[COMPONENT_PROPERTY_CHANGED].effect(context)\n\t\t\t\t\t\n\t\t\t\t\tif (liveUpdateActions.actionHandlers[COMPONENT_PROPERTY_CHANGED] && liveUpdateActions.actionHandlers[COMPONENT_PROPERTY_CHANGED].effect)\n\t\t\t\t\t\tliveUpdateActions.actionHandlers[COMPONENT_PROPERTY_CHANGED].effect(context);\n\t\t\t\t\t\n\t\t\t\t\tconst { action , state, host, properties: {table, sysId} } = context;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tpreviousValue\n\t\t\t\t\t\t}\n\t\t\t\t\t} = action;\n\t\n\t\t\t\t\tif (name !== 'detailsContext') return;\n\t\t\t\t\tif (value === previousValue) return;\n\n\t\t\t\t\tconst { relatedLists } = state;\n\t\t\t\t\tconst updatedChildTabs = getChildActivities(value, table, sysId);\n\t\t\t\t\t\n\t\t\t\t\tconst id = host.nowId;\n\n\t\t\t\t\tif (!updatedChildTabs.length) return;\n\n\t\t\t\t\tconst shouldRefresh = relatedList => {\n\t\t\t\t\t\tconst refreshNeeded = updatedChildTabs.some(\n\t\t\t\t\t\t\tdetailContext => {\n\t\t\t\t\t\t\t\treturn detailContext.table === relatedList.table;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn refreshNeeded;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (globals[id] && globals[id].eventHandler)\n\t\t\t\t\t\trelatedLists.filter(relatedList => shouldRefresh(relatedList))\n\t\t\t\t\t\t\t.map(relatedList => {\n\t\t\t\t\t\t\t\t\tconst updatedRelatedList = {\n\t\t\t\t\t\t\t\t\t\t...relatedList,\n\t\t\t\t\t\t\t\t\t\trefreshRequested: {\n\t\t\t\t\t\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tglobals[id].eventHandler.onRelatedListChange(updatedRelatedList);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[COMPONENT_DOM_READY]: {\n\t\t\t\teffect(context) {\n\t\t\t\t\tformDataProvider.actionHandlers[COMPONENT_DOM_READY](\n\t\t\t\t\t\tcontext\n\t\t\t\t\t);\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\tmeta: { id }\n\t\t\t\t\t\t}\n\t\t\t\t\t} = context;\n\t\t\t\t\tlet glideEnvPromiseResolve;\n\t\t\t\t\tlet glideEnvPromiseReject;\n\t\t\t\t\tconst glideEnvPromise = new Promise((resolve, reject) => {\n\t\t\t\t\t\tglideEnvPromiseResolve = resolve;\n\t\t\t\t\t\tglideEnvPromiseReject = reject;\n\t\t\t\t\t});\n\t\t\t\t\tconst sendRequest = sendRequestFactory(\n\t\t\t\t\t\tsessionMessageRESTHandler(dispatch)\n\t\t\t\t\t);\n\t\t\t\t\tglobals[id] = {\n\t\t\t\t\t\tsendRequest,\n\t\t\t\t\t\tglideEnvironment: null,\n\t\t\t\t\t\tformModal: null,\n\t\t\t\t\t\tliveUpdate: null,\n\t\t\t\t\t\teventHandler: null,\n\t\t\t\t\t\tglideEnvPromise\n\t\t\t\t\t};\n\n\t\t\t\t\tloadPlatformResources(sendRequest).then(\n\t\t\t\t\t\tresources => {\n\t\t\t\t\t\t\tglobals[\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t].glideEnvironment = new GlideFormEnvironment(\n\t\t\t\t\t\t\t\tresources\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tglideEnvPromiseResolve(\n\t\t\t\t\t\t\t\tglobals[id].glideEnvironment\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tconsole.warn(`Unable to load platform resources`);\n\t\t\t\t\t\t\tglideEnvPromiseReject();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[COMPONENT_ERROR_THROWN]: ({ action: { payload } }) => {\n\t\t\t\tconsole.log(`error:`, payload);\n\t\t\t},\n\t\t\t[RIBBON_EXECUTED_UI_ACTION]: {\n\t\t\t\teffect: executeUiActionEffect,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[UI_ACTION_BAR_ACTIONS.ACTION_CLICK]: {\n\t\t\t\teffect: executeUiActionEffect,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[FORM_DATA_CONNECTED_EXECUTE_UI_ACTION]: {\n\t\t\t\teffect: executeUiActionEffect,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[EXECUTE_UI_ACTION]: {\n\t\t\t\t// This is used in workspace, needs to keep it there.\n\t\t\t\teffect: executeUiActionEffect,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[SET_FIELDS_VALUE]: {\n\t\t\t\teffect: setFormValue,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[REFERENCE_INFO_CLICK]: {\n\t\t\t\teffect: ({ action, dispatch }) => {\n\t\t\t\t\tconst referenceInfoClick = _.get(\n\t\t\t\t\t\taction,\n\t\t\t\t\t\t'payload.referenceInfoClick',\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\tconst {\n\t\t\t\t\t\treferencetable: refTable,\n\t\t\t\t\t\tsys_id: refSysId\n\t\t\t\t\t} = referenceInfoClick;\n\t\t\t\t\tdispatchPreviewRecord(dispatch, {\n\t\t\t\t\t\ttable: refTable,\n\t\t\t\t\t\tsysId: refSysId\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[RIBBON_OPEN_PHONE]: createReDispatchActionHandler(FORM_DATA_CONNECTED_OPEN_PHONE),\n\t\t\t[PHONE_ADDON_ACTION_CLICK]: {\n\t\t\t\teffect: openPhoneEffect,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[TOGGLE_DOMAIN_SCOPE]: {\n\t\t\t\teffect: ({ updateProperties, action: { payload } }) => {\n\t\t\t\t\tupdateProperties({ nowDsDomainScope: payload.domainScope });\n\t\t\t\t},\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[QUERY_CHANGED]: {\n\t\t\t\teffect: ({ action, updateState, dispatch, properties, state }) => {\n\t\t\t\t\tconst query = _.get(action, 'payload.query', '');\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tdomainQuery: query,\n\t\t\t\t\t\tdomainQuerySet: true,\n\t\t\t\t\t\tshouldRender: false\n\t\t\t\t\t});\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttable,\n\t\t\t\t\t\tsysId,\n\t\t\t\t\t\tview,\n\t\t\t\t\t\tviews,\n\t\t\t\t\t\tworkspaceConfigId: propWorkspaceConfigId,\n\t\t\t\t\t\tactionConfigId,\n\t\t\t\t\t\theaderConfigId,\n\t\t\t\t\t\tribbonConfigId,\n\t\t\t\t\t\thighlightedValueConfigId,\n\t\t\t\t\t\tviewRuleConfigId,\n\t\t\t\t\t\tforcedViewName\n\t\t\t\t\t} = properties;\n\t\t\t\t\tconst { classicForm } = state;\n\t\t\t\t\tconst allViews = views || view;\n\t\t\t\t\tlet workspaceConfigId = propWorkspaceConfigId;\n\t\t\t\t\tif (classicForm && !workspaceConfigId) {\n\t\t\t\t\t\tworkspaceConfigId = _.get(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t'behaviors.wsConfigSysId',\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatch(fetchDataActions.START, {\n\t\t\t\t\t\ttable,\n\t\t\t\t\t\tsysId,\n\t\t\t\t\t\tviews: _.isArray(allViews)\n\t\t\t\t\t\t\t? allViews.join(',')\n\t\t\t\t\t\t\t: allViews,\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\tworkspaceConfigId: workspaceConfigId || '',\n\t\t\t\t\t\tactionConfigId,\n\t\t\t\t\t\theaderConfigId,\n\t\t\t\t\t\tribbonConfigId,\n\t\t\t\t\t\thighlightedValueConfigId,\n\t\t\t\t\t\tviewRuleConfigId,\n\t\t\t\t\t\tforcedViewName\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[PREVIEW_RECORD]: {\n\t\t\t\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD, transformPreviewRecordPayload),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t[RIBBON_PREVIEW_RECORD]: {\n\t\t\t\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t'NOW_RECORD_COMMON_TEMPLATES_CONNECTED#PREVIEW_RECORD': {\n\t\t\t\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t'NOW_RECORD_COMMON_HEADER#PREVIEW_RECORD': {\n\t\t\t\teffect:  createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#PREVIEW_RECORD':  {\n\t\t\t\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t'RECORD_PAGE_TABS#PREVIEW_RECORD':  {\n\t\t\t\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t'NOW_ACTIVITY_COMBO#PREVIEW_RECORD_REQUESTED': {\n\t\t\t\teffect: createReDispatchActionHandler(FORM_DATA_CONNECTED_PREVIEW_RECORD),\n\t\t\t\tinterceptors: previewRecordInterceptors\n\t\t\t},\n\t\t\t[RECORD_STATUS_CHANGED]: createBlockInnerFormActionInterceptor(),\n\t\t\t[FORM_UPDATE_HEADER]: createBlockInnerFormActionInterceptor(),\n\t\t\t[CONTENT_ITEMS_SELECTED]: createBlockInnerFormActionInterceptor(),\n\t\t\t[FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED]: createBlockInnerFormActionInterceptor(),\n\t\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#SCREEN_STATUS_CHANGED': screenStatusChangeEffect,\n\t\t\t'RECORD_PAGE_TABS#SCREEN_STATUS_CHANGED': screenStatusChangeEffect,\n\t\t\t[RIBBON_ITEM_SELECTED]: createReDispatchActionHandler(FORM_DATA_CONNECTED_ITEM_SELECTED),\n\t\t\t[ITEM_SELECTED]: createReDispatchActionHandler(FORM_DATA_CONNECTED_ITEM_SELECTED),\n\t\t\t'RECORD_PAGE_TABS#ITEM_SELECTED': createReDispatchActionHandler(FORM_DATA_CONNECTED_ITEM_SELECTED),\n\t\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#ITEM_SELECTED': createReDispatchActionHandler(FORM_DATA_CONNECTED_ITEM_SELECTED),\n\t\t\t'NOW_RECORD_FORM_BLOB#TAB_SELECTED': {\n\t\t\t\teffect: tabSelectedEffect,\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[WRAPPED_ACTION]: createReDispatchActionHandler(FORM_DATA_CONNECTED_WRAPPED_ACTION),\n\t\t\t[RIBBON_WRAPPED_ACTION]: createReDispatchActionHandler(FORM_DATA_CONNECTED_WRAPPED_ACTION),\n\t\t\t'RECORD_PAGE_TABS#WRAPPED_ACTION': createReDispatchActionHandler(FORM_DATA_CONNECTED_WRAPPED_ACTION),\n\t\t\t'NOW_RECORD_FORM_SECTION_COLUMN_LAYOUT#WRAPPED_ACTION': createReDispatchActionHandler(FORM_DATA_CONNECTED_WRAPPED_ACTION),\n\t\t\t'RECORD_PAGE_TABS#LIST_DATA_FETCH_SUCCEEDED': {\n\t\t\t\teffect: _.partial(listDataFetchEffect, globals),\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[COMPONENT_TREE_RENDERED]({\n\t\t\t\thost,\n\t\t\t\taction: {meta},\n\t\t\t\tstate: {\n\t\t\t\t\tinteractive,\n\t\t\t\t\tformData,\n\t\t\t\t\tloading\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t}) {\n\t\t\t\tif (!_.isEmpty(formData) && !loading && !interactive) {\n\t\t\t\t\tmark(host, getInteractionId(meta), metrics.HERO_INTERACTIVE);\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tshouldRender: false,\n\t\t\t\t\t\tpath: 'interactive',\n\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t'WORKSPACE_FORM_LAYOUT_UPDATE_RELATED_LIST_REQUEST': {\n\t\t\t\teffect: ({\n\t\t\t\t\taction: {\n\t\t\t\t\t\tpayload\n\t\t\t\t\t},\n\t\t\t\t\thost,\n\t\t\t\t\tstate\n\t\t\t\t}) => {\n\t\t\t\t\tconst id = host.nowId;\n\t\t\t\t\tconst updatedRelatedList = payload.value;\n\t\t\t\t\tif (updatedRelatedList)\n\t\t\t\t\t\tglobals[id].eventHandler.onRelatedListChange(updatedRelatedList)\n\t\t\t\t},\n\t\t\t\tstopPropagation: true\n\t\t\t}\n\t\t}\n\t};\n};\n","module.exports = __TECTONIC__$servicenow_ui_metrics;","module.exports = __TECTONIC__sn_http_request_0_4_0;","import { get } from 'lodash';\nimport {\n\tSESSION_MESSAGE_CONFIG_KEY,\n\tSESSION_MESSAGE_NOTIFICATIONS_KEY\n} from '../../resources/EnvironmentQuery';\nimport { ADD_NOTIFICATIONS } from '../../constants/ScriptingActions';\nimport { notificationProcessor } from './notificationProcessor';\n\nconst NOTIFICATIONS_REST_PATH = `data.${SESSION_MESSAGE_CONFIG_KEY}.${SESSION_MESSAGE_NOTIFICATIONS_KEY}`;\n\nexport default function sessionMessageRESTHandler(dispatch) {\n\tfunction dispatchNotifications(notifications) {\n\t\tconst process = notificationProcessor();\n\t\tconst messages = process(notifications);\n\n\t\tif (messages.length > 0) {\n\t\t\tdispatch(ADD_NOTIFICATIONS, {\n\t\t\t\tnotifications: messages\n\t\t\t});\n\t\t}\n\t}\n\n\treturn function handleSessionMessages(response) {\n\t\tconst notifications = get(response, NOTIFICATIONS_REST_PATH, []);\n\t\tif (notifications.length > 0) {\n\t\t\tdispatchNotifications(notifications);\n\t\t}\n\t};\n}\n","import { createDataLookup } from './DataLookup';\nimport _ from 'lodash';\nimport {\n\tGlideFormEnvironmentScope,\n\tG_FORM,\n\tG_MODAL,\n\tG_SCRATCHPAD,\n\tG_UI_ACTIONS,\n\tG_USER,\n\tG_UI_SCRIPTS,\n\tG_AW\n} from './GlideFormEnvironmentScope';\nimport getServiceCatalogAPI from '../extensionPoints/glideServiceCatalog';\nimport getAlertIntelligenceAPI from '../extensionPoints/alertIntelligence';\nimport getAgentWorkspaceAPI from '../extensionPoints/agentWorkspace';\n\nexport class GlideFormEnvironment {\n\tconstructor({\n\t\tglideFormEnvironmentFactory,\n\t\tglideFormFactory,\n\t\tglideAjax,\n\t\tglideRecord,\n\t\tglideModalFactory,\n\t\tglideUser,\n\t\tuiScriptFactory\n\t}) {\n\t\tthis.glideFormEnvironmentFactory = glideFormEnvironmentFactory;\n\t\tthis.glideFormFactory = glideFormFactory;\n\t\tthis.glideAjax = glideAjax;\n\t\tthis.glideRecord = glideRecord;\n\t\tthis.glideModalFactory = glideModalFactory;\n\t\tthis.glideUser = glideUser;\n\t\tthis.uiScriptFactory = uiScriptFactory;\n\t\tthis._scope = new GlideFormEnvironmentScope();\n\t\tthis._env = null;\n\t\tthis._changeSubscriber = null;\n\t\tthis._propChangeSubscriber = null;\n\t\tthis._stateSubscriber = null;\n\t\tthis._submitSubscriber = null;\n\t\tthis._liveUpdatedSubscriber = null;\n\t\tthis._gForm = null;\n\t}\n\n\tdestroy() {\n\t\tthis._submitSubscriber = null;\n\t\tthis._changeSubscriber = null;\n\t\tthis._propChangeSubscriber = null;\n\t\tthis._stateSubscriber = null;\n\t\tthis._liveUpdatedSubscriber = null;\n\n\t\t// TODO: destroy the env\n\t\tthis._env = null;\n\t}\n\n\t/**\n\t * Returns a g_form like object for use within the UI controls\n\t * @return {GlideForm}\n\t */\n\tget gForm() {\n\t\tif (this._gForm) {\n\t\t\treturn this._gForm;\n\t\t}\n\n\t\tconst g_form = this._scope.get(G_FORM);\n\t\tconst facade = {};\n\t\tObject.keys(g_form).forEach(function(key) {\n\t\t\tfacade[key] = g_form[key];\n\t\t});\n\t\tfacade.setValue = facade.setUserValue;\n\t\tthis._gForm = facade;\n\t\treturn this._gForm;\n\t}\n\n\tget gUser() {\n\t\treturn this._scope.get(G_USER);\n\t}\n\n\tget gUIActions() {\n\t\treturn this._scope.get(G_UI_ACTIONS);\n\t}\n\n\tget closeFormAction() {\n\t\treturn this._scope.get(G_AW).closeRecord;\n\t}\n\n\tonFormSubmit(subscriber) {\n\t\tthis._submitSubscriber = subscriber;\n\t}\n\n\tonChange(subscriber) {\n\t\tthis._changeSubscriber = subscriber;\n\t}\n\n\tonPropChange(subscriber) {\n\t\tthis._propChangeSubscriber = subscriber;\n\t}\n\n\tonStateChange(subscriber) {\n\t\tthis._stateSubscriber = subscriber;\n\t}\n\n\tonLiveUpdated(subscriber) {\n\t\tthis._liveUpdatedSubscriber = subscriber;\n\t}\n\n\tconfigureWithOptions({\n\t\tdata,\n\t\tdispatch,\n\t\tformModal,\n\t\tsendRequest,\n\t\treloadForm,\n\t\tdomainScope\n\t}) {\n\t\tconst { table, sysId, view, trueTable } = data.record;\n\t\tthis._scope.set(data.environment.globals);\n\t\tthis._scope.setScratchpad(data.environment.globals[G_SCRATCHPAD]);\n\t\tthis._scope.setServiceCatalogAPI(\n\t\t\tgetServiceCatalogAPI(dispatch, table, sysId)\n\t\t);\n\t\tthis._scope.setAlertIntelligenceAPI(\n\t\t\tgetAlertIntelligenceAPI(dispatch, sysId)\n\t\t);\n\t\tthis._scope.setLocalizationMethods(\n\t\t\t{\n\t\t\t\t...data.environment.messages,\n\t\t\t\t...data.uiActions.messages\n\t\t\t},\n\t\t\tsendRequest\n\t\t);\n\t\tthis._scope.setGlideAPIs(this.glideAjax, this.glideRecord);\n\t\tthis._scope.setModal(this.glideModalFactory, formModal);\n\t\tthis._scope.setUser(this.glideUser, data.currentUser.user);\n\t\tthis._scope.setITSMWorkbench();\n\t\tthis._scope.setUIScripts(this.uiScriptFactory, data.uiScripts.scripts);\n\t\tthis._scope.setNamespaces();\n\t\tconst submitSubscriber = (record, redirect, operation) => {\n\t\t\tif (this._submitSubscriber) {\n\t\t\t\tthis._submitSubscriber.call(\n\t\t\t\t\tthis._submitSubscriber,\n\t\t\t\t\trecord,\n\t\t\t\t\tredirect,\n\t\t\t\t\toperation\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tthis._scope.setUIActions(\n\t\t\tdata.uiActions.formActions,\n\t\t\tsubmitSubscriber,\n\t\t\tsendRequest,\n\t\t\tdispatch,\n\t\t\t{ table, sysId }\n\t\t);\n\n\t\t// TODO: fix change lifecycle\n\t\tconst changeSubscriber = changedFields => {\n\t\t\tif (this._changeSubscriber) {\n\t\t\t\tthis._changeSubscriber.call(\n\t\t\t\t\tthis._changeSubscriber,\n\t\t\t\t\tchangedFields\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tconst propChangeSubscriber = (type, name, propName, value) => {\n\t\t\tif (this._propChangeSubscriber) {\n\t\t\t\tthis._propChangeSubscriber.call(\n\t\t\t\t\tthis._propChangeSubscriber,\n\t\t\t\t\ttype,\n\t\t\t\t\tname,\n\t\t\t\t\tpropName,\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tconst stateSubscriber = (oldState, newState) => {\n\t\t\tif (this._stateSubscriber) {\n\t\t\t\tthis._stateSubscriber.call(\n\t\t\t\t\tthis._stateSubscriber,\n\t\t\t\t\toldState,\n\t\t\t\t\tnewState\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tconst liveUpdatedSubscriber = liveUpdatedFields => {\n\t\t\tif (this._liveUpdatedSubscriber) {\n\t\t\t\tthis._liveUpdatedSubscriber.call(\n\t\t\t\t\tthis._liveUpdatedSubscriber,\n\t\t\t\t\tliveUpdatedFields\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tthis._gForm = null;\n\t\tthis._scope.setForm(\n\t\t\tthis.glideFormFactory,\n\t\t\tchangeSubscriber,\n\t\t\tpropChangeSubscriber,\n\t\t\tstateSubscriber,\n\t\t\tliveUpdatedSubscriber,\n\t\t\t{\n\t\t\t\ttableName: trueTable,\n\t\t\t\tsysId: sysId,\n\t\t\t\tformFields: data.layout.formFields,\n\t\t\t\tencodedRecord: data.layout.encodedRecord,\n\t\t\t\tsections: data.layout.sections,\n\t\t\t\trelatedLists: data.layout.relatedLists,\n\t\t\t\tattachments: data.attachments.props || data.attachments,\n\t\t\t\tviewName: view,\n\t\t\t\tmodal: formModal,\n\t\t\t\tvariablesLayout: data.layout.variablesLayout,\n\t\t\t\treloadForm,\n\t\t\t\tuniqueValue: data.layout.sysId\n\t\t\t},\n\t\t\tdispatch\n\t\t);\n\n\t\tthis._dataLookup = createDataLookup(\n\t\t\tthis._scope.get(G_FORM),\n\t\t\tdata.dataLookup.fields,\n\t\t\tsendRequest,\n\t\t\tdata.layout.encodedRecord\n\t\t);\n\n\t\tthis._scope.setAgentWorkspaceAPI(\n\t\t\tgetAgentWorkspaceAPI(\n\t\t\t\tdispatch,\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tthis._scope.get(G_FORM),\n\t\t\t\tdata,\n\t\t\t\tdomainScope\n\t\t\t)\n\t\t);\n\n\t\tlet clientScripts = data.environment.clientScripts;\n\t\tlet uiPolicies = data.environment.uiPolicies;\n\n\t\tconst catalogClientScripts = data.environment.catalogClientScripts;\n\t\tconst catalogUiPolicies = data.environment.catalogUiPolicies;\n\t\tif (catalogClientScripts || catalogUiPolicies) {\n\t\t\tif (!_.isEmpty(catalogClientScripts))\n\t\t\t\tclientScripts = _.mergeWith(\n\t\t\t\t\tclientScripts,\n\t\t\t\t\tcatalogClientScripts,\n\t\t\t\t\tthis.customizer\n\t\t\t\t);\n\t\t\tif (!_.isEmpty(catalogUiPolicies))\n\t\t\t\tuiPolicies = uiPolicies.concat(catalogUiPolicies);\n\t\t}\n\t\t// all scoped variables should be configured, initialize scripts\n\t\tconst environment = this.glideFormEnvironmentFactory.createWithConfiguration(\n\t\t\tthis._scope.get(G_FORM),\n\t\t\tthis._scope.get(G_USER),\n\t\t\tthis._scope.get(G_SCRATCHPAD),\n\t\t\tclientScripts,\n\t\t\tuiPolicies,\n\t\t\tthis._scope.get(G_MODAL),\n\t\t\tdata.validationScripts.fieldValidators,\n\t\t\tthis._scope.get(G_UI_SCRIPTS)\n\t\t);\n\n\t\t// apply new scope\n\t\tconst { g_env } = environment;\n\t\t_.forEach(this._scope.getVariables(), (val, key) => {\n\t\t\tg_env.registerExtensionPoint(key, val);\n\t\t});\n\t\tthis._env = environment;\n\t}\n\n\tcustomizer(objValue, srcValue) {\n\t\tif (_.isArray(objValue)) return objValue.concat(srcValue);\n\t}\n\n\t/**\n\t * Fires the glide form environment\n\t */\n\tinitialize() {\n\t\tthis._env.initialize();\n\t\t\tif (this._dataLookup) {\n\t\t\t\tthis._dataLookup.initialize();\n\t\t\t}\n\t}\n}\n","/**\n * DataLookup processes a list of fields that have DataLookup definitions (table: dl_definition)\n * defined for that table/field combination.  The customer can create a table that acts as a\n * decision matrix, setting values based on current form field values\n */\n\n/**\n * Initialize DataLookup, transforming the list of fields into an object, and binding the\n * on change handler.\n *\n * @param gForm {Object}\n * @param fields {Array}\n * @param encodedRecord {String}\n */\n\nexport function createDataLookup(gForm, fields, sendRequest, encodedRecord) {\n\tif (!gForm) {\n\t\tconsole.log('g_form is not defined');\n\t\treturn;\n\t}\n\n\tif (fields.length === 0) {\n\t\tconsole.log(\n\t\t\t`No DataLookup definitions found for ${gForm.getTableName()} table`\n\t\t);\n\t\treturn;\n\t}\n\n\tlet dataLookupInProgress = false;\n\tlet lastSerializedForm = null;\n\tconst dataLookupFields = fields.reduce((o, item) => {\n\t\to[item.field] = item;\n\t\treturn o;\n\t}, {});\n\n\t/**\n\t * Send a request for DataLookup a DataLookup Definition, setting a form value\n\t * if all the criteria has been met.\n\t *\n\t * @param item {Object}\n\t */\n\tfunction _sendRequest(item) {\n\t\treturn sendRequest(`/api/now/ui/datalookup/${item.sysId}`, 'POST', {\n\t\t\tparams: {\n\t\t\t\tsysparm_table: gForm.getTableName(),\n\t\t\t\tsysparm_sys_id: gForm.isNewRecord() ? '-1' : gForm.getSysId()\n\t\t\t},\n\t\t\tbody: {\n\t\t\t\tfields: gForm.serialize(),\n\t\t\t\tencoded_record: encodedRecord || ''\n\t\t\t}\n\t\t}).then(\n\t\t\tresponse => {\n\t\t\t\tif (!response.data.result) return;\n\t\t\t\tdataLookupInProgress = true;\n\t\t\t\tresponse.data.result.forEach(element => {\n\t\t\t\t\tgForm.setValue(\n\t\t\t\t\t\telement.name,\n\t\t\t\t\t\telement.value,\n\t\t\t\t\t\telement.displayValue\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tdataLookupInProgress = false;\n\t\t\t},\n\t\t\tresponse => {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Error processing DataLookup Definition ${item.name}`,\n\t\t\t\t\tresponse\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Process a field that has a DataLookup definition defined.  There are built in safeguards to prevent\n\t * DataLookup definitions triggering themselves, and we count the transactions that we have sent\n\t * to only process the most recent for that field.\n\t *\n\t * @param fieldName {String}\n\t * @param oldValue {String}\n\t * @param newValue {String}\n\t * @param isLoading {boolean}\n\t */\n\tfunction _process(fieldName, oldValue, newValue, isLoading) {\n\t\tif (isLoading || !dataLookupFields[fieldName] || dataLookupInProgress) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst serializedForm = gForm.serialize();\n\t\tif (!serializedForm || lastSerializedForm === serializedForm) {\n\t\t\treturn;\n\t\t}\n\n\t\tdataLookupFields[fieldName].definitions.forEach(item => {\n\t\t\tlastSerializedForm = serializedForm;\n\t\t\t_sendRequest(item);\n\t\t});\n\t}\n\n\treturn {\n\t\tinitialize: function() {\n\t\t\tgForm.$private.events.on('change', _process);\n\t\t}\n\t};\n}\n","import { GlideClientScriptFactory } from '../environment/GlideClientScriptFactory';\nimport { GlideVariableScope } from '../environment/GlideVariableScope';\nimport { GlideUIActions } from './GlideUIActions';\nimport { MessageLocalizerFactory } from '../MessageLocalizer';\nimport { ModalSize, IFrameAutoCloseOn } from '@devsnc/sn-scripted-modal';\nimport {\n\tADD_NOTIFICATIONS,\n\tCLEAR_NOTIFICATIONS\n} from '../../../constants/ScriptingActions';\nimport { t } from 'sn-translate';\nimport { ATFHelper } from '@devsnc/library-form';\n\nexport const G_FORM = 'g_form';\nexport const G_ITSM_WORKBENCH = 'g_itsm_workbench';\nexport const G_MODAL = 'g_modal';\nexport const G_SCRATCHPAD = 'g_scratchpad';\nexport const G_UI_ACTIONS = 'g_ui_actions';\nexport const G_USER = 'g_user';\nexport const G_SERVICE_CATALOG = 'g_service_catalog';\nconst G_ALERT_INTELLIGENCE = 'g_alert_intelligence';\nexport const G_AW = 'g_aw';\nexport const G_UI_SCRIPTS = 'g_ui_scripts';\n\nexport const GLIDE_AJAX = 'GlideAjax';\nexport const GLIDE_RECORD = 'GlideRecord';\nexport const GET_MESSAGE = 'getMessage';\nexport const GET_MESSAGES = 'getMessages';\nexport const FORMAT = 'format';\n\nexport const NS_NOW = 'NOW';\n\nexport class GlideFormEnvironmentScope extends GlideVariableScope {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// sandbox variables\n\t\tthis.set({\n\t\t\twindow: null,\n\t\t\tdocument: null,\n\t\t\t$: null,\n\t\t\tjQuery: null,\n\t\t\t$$: null,\n\t\t\t$j: null,\n\t\t\tangular: null,\n\t\t\tsnmCabrillo: null,\n\t\t\tcabrillo: null\n\t\t});\n\t}\n\n\tsetServiceCatalogAPI(serviceCatalog) {\n\t\tthis.set(G_SERVICE_CATALOG, serviceCatalog);\n\t}\n\n\tsetAlertIntelligenceAPI(alertIntelligence) {\n\t\tthis.set(G_ALERT_INTELLIGENCE, alertIntelligence);\n\t}\n\n\tsetAgentWorkspaceAPI(awApi) {\n\t\tthis.set(G_AW, awApi);\n\t}\n\n\tsetScratchpad(scratchPad) {\n\t\tif (!scratchPad) return {};\n\n\t\tlet parsed = {};\n\t\ttry {\n\t\t\tparsed = JSON.parse(scratchPad);\n\t\t\tparsed.getValue = function(name) {\n\t\t\t\treturn this.get(G_SCRATCHPAD)[name];\n\t\t\t}.bind(this);\n\t\t} catch (e) {\n\t\t\tconsole.error(\n\t\t\t\t'Exception while parsing g_scratchpad',\n\t\t\t\te,\n\t\t\t\tscratchPad\n\t\t\t);\n\t\t}\n\t\tthis.set(G_SCRATCHPAD, parsed);\n\t}\n\n\tsetGlideAPIs(glideAjax, glideRecord) {\n\t\tthis.set(GLIDE_AJAX, glideAjax);\n\t\tthis.set(GLIDE_RECORD, glideRecord);\n\t}\n\n\tsetLocalizationMethods(preloadedMessages, sendRequest) {\n\t\tconst localizer = MessageLocalizerFactory({ sendRequest });\n\t\tconst messageLocalizer = new localizer();\n\t\tmessageLocalizer.localizedMessages = preloadedMessages;\n\t\tthis.set(GET_MESSAGE, messageLocalizer.getMessage);\n\t\tthis.set(GET_MESSAGES, messageLocalizer.getMessages);\n\t\tthis.set(FORMAT, messageLocalizer.interpolate);\n\t}\n\n\tsetNamespaces() {\n\t\tthis.set(NS_NOW, {});\n\t}\n\n\tsetModal(glideModalFactory, formModal) {\n\t\tconst atfHelper = ATFHelper(window);\n\t\tconst options = {\n\t\t\talert: atfHelper.createAtfModalPromiseInterceptor(formModal.info),\n\t\t\tconfirm: atfHelper.createAtfModalPromiseInterceptor(\n\t\t\t\tformModal.confirm\n\t\t\t),\n\t\t\tconfirmDestroy: atfHelper.createAtfModalPromiseInterceptor(\n\t\t\t\tformModal.confirmDestroy\n\t\t\t),\n\t\t\tshowFields: formModal.showFields,\n\t\t\tshowFrame: atfHelper.createAtfModalPromiseInterceptor(options => {\n\t\t\t\tlet {\n\t\t\t\t\tsize,\n\t\t\t\t\theight,\n\t\t\t\t\ttitle,\n\t\t\t\t\turl,\n\t\t\t\t\tcallback,\n\t\t\t\t\tautoCloseOn\n\t\t\t\t} = options;\n\t\t\t\tif (\n\t\t\t\t\tsize &&\n\t\t\t\t\t![\n\t\t\t\t\t\tModalSize.MD,\n\t\t\t\t\t\tModalSize.LG,\n\t\t\t\t\t\tModalSize.XL,\n\t\t\t\t\t\tModalSize.FW\n\t\t\t\t\t].includes(size.toLowerCase())\n\t\t\t\t) {\n\t\t\t\t\tsize = ModalSize.MD;\n\t\t\t\t}\n\t\t\t\treturn formModal.showFrame({\n\t\t\t\t\tsize,\n\t\t\t\t\ttitle,\n\t\t\t\t\turl,\n\t\t\t\t\tcallback,\n\t\t\t\t\theight,\n\t\t\t\t\tautoCloseOn: autoCloseOn || IFrameAutoCloseOn.EMPTY_BODY\n\t\t\t\t});\n\t\t\t}),\n\t\t\t..._.omit(formModal.customModals)\n\t\t};\n\t\tconst extras = {\n\t\t\tmessages: {\n\t\t\t\tOK: t('OK'),\n\t\t\t\tCancel: t('Cancel')\n\t\t\t}\n\t\t};\n\t\tthis.set(G_MODAL, glideModalFactory.create(options, extras));\n\t}\n\n\tsetUser(glideUser, userData) {\n\t\t// glideUser expects a userId, not sys_id\n\t\tuserData.userId = userData.sys_id;\n\t\tconst g_user = new glideUser(userData);\n\t\tthis.set(G_USER, g_user);\n\t}\n\n\tsetForm(\n\t\tglideFormFactory,\n\t\tchangeSubscriber,\n\t\tpropChangeSubscriber,\n\t\tstateSubscriber,\n\t\tliveUpdatedSubscriber,\n\t\tconfig,\n\t\tdispatch\n\t) {\n\t\tconst uiMessageHandler = (g_form, messageType, messageStr) => {\n\t\t\tlet type;\n\t\t\tlet message = messageStr;\n\t\t\tswitch (messageType) {\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\tcase 'mandatoryMessage':\n\t\t\t\t\ttype = 'error';\n\t\t\t\t\tmessage = message.replace(/\\n/g, '<br>');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'clearMessages':\n\t\t\t\t\tdispatch(CLEAR_NOTIFICATIONS, {\n\t\t\t\t\t\tnotificationAction: {\n\t\t\t\t\t\t\ttype: 'clear'\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\tcase 'infoMessage':\n\t\t\t\t\ttype = 'info';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'errorMessage':\n\t\t\t\t\ttype = 'error';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'warningMessage':\n\t\t\t\t\ttype = 'warning';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatch(ADD_NOTIFICATIONS, {\n\t\t\t\tnotifications: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tmessage\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\treturn true;\n\t\t};\n\n\t\tconst messages = this.generateErrorMessages();\n\n\t\tconst g_form = glideFormFactory.create(\n\t\t\tconfig.tableName,\n\t\t\tconfig.sysId,\n\t\t\tconfig.formFields,\n\t\t\tthis.get(G_UI_ACTIONS),\n\t\t\t{\n\t\t\t\tencodedRecord: config.encodedRecord,\n\t\t\t\tsections: config.sections,\n\t\t\t\tvariablesLayout: config.variablesLayout,\n\t\t\t\trelatedLists: config.relatedLists,\n\t\t\t\tviewName: config.viewName,\n\t\t\t\tattachments: config.attachments,\n\t\t\t\tuiMessageHandler: uiMessageHandler,\n\t\t\t\tsubmitPromises: false,\n\t\t\t\tmessages,\n\t\t\t\treloadForm: config.reloadForm,\n\t\t\t\tuseCatalogVariableFieldHandler: true,\n\t\t\t\tuniqueValue: config.uniqueValue,\n\t\t\t\tserializedExclusionList: ['declarativeUiActions']\n\t\t\t}\n\t\t);\n\n\t\tconst EVENT_CHANGED = 'changed';\n\t\tconst EVENT_CHANGE = 'change';\n\t\tconst EVENT_PROPERTY_CHANGE = 'propertyChange';\n\t\tconst EVENT_STATE_CHANGE = 'stateChange';\n\t\tconst EVENT_LIVE_UPDATED = 'liveUpdated';\n\n\t\t// wire up form events\n\t\tvar changedFields = {};\n\t\tg_form.$private.events.on(EVENT_CHANGE, function(fieldName) {\n\t\t\tchangedFields[fieldName] = true;\n\t\t});\n\n\t\tg_form.$private.events.on(EVENT_CHANGED, () => {\n\t\t\tif (changeSubscriber) {\n\t\t\t\tchangeSubscriber(changedFields);\n\t\t\t}\n\t\t\tchangedFields = {};\n\t\t});\n\t\tif (propChangeSubscriber) {\n\t\t\tg_form.$private.events.on(\n\t\t\t\tEVENT_PROPERTY_CHANGE,\n\t\t\t\tpropChangeSubscriber\n\t\t\t);\n\t\t}\n\t\tif (stateSubscriber) {\n\t\t\tg_form.$private.events.on(EVENT_STATE_CHANGE, stateSubscriber);\n\t\t}\n\t\tif (liveUpdatedSubscriber) {\n\t\t\tg_form.$private.events.on(\n\t\t\t\tEVENT_LIVE_UPDATED,\n\t\t\t\tliveUpdatedSubscriber\n\t\t\t);\n\t\t}\n\t\tthis.set(G_FORM, g_form);\n\t}\n\n\tgenerateErrorMessages() {\n\t\treturn {\n\t\t\tMANDATORY_MESSAGE: t(\n\t\t\t\t'The following mandatory fields are not filled in'\n\t\t\t),\n\t\t\tFIELD_ERROR_MESSAGE: t('The following fields contain errors')\n\t\t};\n\t}\n\n\tsetUIActions(uiActions, submitSubscriber, sendRequest, dispatch, record) {\n\t\tconst onClickFactory = new GlideClientScriptFactory('onClick', 'g_form');\n\t\tonClickFactory.scope = this;\n\n\t\tconst g_ui_actions = new GlideUIActions(\n\t\t\tuiActions,\n\t\t\t(action, options) => {\n\t\t\t\tconst { runOn } = options;\n\t\t\t\tconst g_form = this.get(G_FORM);\n\t\t\t\tconst table = record.table;\n\t\t\t\tconst sysId = record.sysId;\n\t\t\t\tswitch (runOn) {\n\t\t\t\t\tcase 'server': {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tsendRequest(\n\t\t\t\t\t\t\t\t'/api/now/ui/ui_action/' + action.sysId,\n\t\t\t\t\t\t\t\t'POST', {\n\t\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\t\tsysparm_table: table,\n\t\t\t\t\t\t\t\t\t\tsysparm_sys_id: sysId\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\t\tencodedRecord: g_form.getEncodedRecord(),\n\t\t\t\t\t\t\t\t\t\tfields: g_form.serialize()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\t\t// parse the UI Action API response\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t\t} = response;\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t\t} = data;\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\toperation\n\t\t\t\t\t\t\t\t} = result;\n\t\t\t\t\t\t\t\tif (submitSubscriber) {\n\t\t\t\t\t\t\t\t\tsubmitSubscriber({\n\t\t\t\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\t\toperation\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(response => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t\t} = response;\n\t\t\t\t\t\t\t\tconst result = data.result || data;\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t} = result;\n\t\t\t\t\t\t\t\tif (status === 'failure') {\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t\t\t} = error;\n\t\t\t\t\t\t\t\t\tdispatch(ADD_NOTIFICATIONS, {\n\t\t\t\t\t\t\t\t\t\tnotifications: [{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'client': {\n\t\t\t\t\t\t// TODO: consider caching?\n\t\t\t\t\t\t// TODO: remove private API usage\n\t\t\t\t\t\tg_form.$private.userState.setRunningAction(\n\t\t\t\t\t\t\taction.name,\n\t\t\t\t\t\t\taction.sysId\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst script = onClickFactory.create(action.clientScript);\n\t\t\t\t\t\tlet promise;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = script.invoke();\n\t\t\t\t\t\t\tpromise = Promise.resolve(response);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdispatch(ADD_NOTIFICATIONS, {\n\t\t\t\t\t\t\t\tnotifications: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\tmessage: t(\n\t\t\t\t\t\t\t\t\t\t\t'Failed to execute the UI Action. Please contact your administrator.'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tpromise = Promise.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn promise.finally(function() {\n\t\t\t\t\t\t\tg_form.$private.userState.resetRunningAction();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\taction => {\n\t\t\t\tconst g_form = this.get(G_FORM);\n\t\t\t\treturn g_form.$private.validateForm(action.name);\n\t\t\t},\n\t\t\taction => {\n\t\t\t\tconst g_form = this.get(G_FORM);\n\t\t\t\tconst submitResult = g_form.submit(action.sysId);\n\t\t\t\treturn !submitResult\n\t\t\t\t\t? Promise.reject(submitResult)\n\t\t\t\t\t: Promise.resolve(submitResult);\n\t\t\t},\n\t\t\t() => this.get(G_FORM)\n\t\t);\n\t\tthis.set(G_UI_ACTIONS, g_ui_actions);\n\t}\n\n\tsetUIScripts(uiScriptFactory, uiScripts = []) {\n\t\tthis.set(G_UI_SCRIPTS, uiScriptFactory.create(uiScripts));\n\t}\n\n\tsetITSMWorkbench() {\n\t\tconst g_itsm_workbench = {};\n\t\tg_itsm_workbench.openWorkbench = (sysId, version) => {\n\t\t\tconst params = [];\n\t\t\tconst table =\n\t\t\t\tversion === 'v1'\n\t\t\t\t\t? 'sn_major_inc_mgmt_workbench.do'\n\t\t\t\t\t: '$major_incident_workbench.do';\n\t\t\tif (!sysId) return;\n\n\t\t\tparams.push(`sysparm_sys_id=${sysId}`);\n\t\t\tparams.push('sysparm_stack=no');\n\t\t\tparams.push('sysparm_stand_alone=true');\n\t\t\twindow.open(`/${table}?${params.join('&')}`);\n\t\t};\n\t\tthis.set(G_ITSM_WORKBENCH, g_itsm_workbench);\n\t}\n}\n","import { GlideScopedScript } from './GlideScopedScript';\n\n/**\n * Convenience for creating scripts of a certain type\n */\nexport class GlideClientScriptFactory {\n\tconstructor(functionName, ...functionParameters) {\n\t\tthis._name = functionName;\n\t\tthis._parameters = functionParameters;\n\t\tthis._scripts = [];\n\t}\n\n\tset scope(scope) {\n\t\tthis._scope = scope;\n\t\tthis._scripts.map(script => {\n\t\t\tscript.scope = scope;\n\t\t});\n\t}\n\n\tget scope() {\n\t\treturn this._scope;\n\t}\n\n\tcreate(script, id) {\n\t\tlet clientScript = new GlideScopedScript(\n\t\t\tthis._name,\n\t\t\tthis._parameters,\n\t\t\tscript\n\t\t);\n\t\tif (id) {\n\t\t\tclientScript.id = id;\n\t\t}\n\t\tif (this.scope) {\n\t\t\tclientScript.scope = this.scope;\n\t\t}\n\t\tthis._scripts.push(clientScript);\n\t\treturn clientScript;\n\t}\n}\n","import _ from 'lodash';\n\nexport class GlideScopedScript {\n\tconstructor(functionName, functionParameters, clientScript) {\n\t\tthis._id = 'GlideScopedScript';\n\t\tthis._function = functionName;\n\t\tthis._parameters = functionParameters || [];\n\t\tthis._script = clientScript;\n\t\tthis._scope = null;\n\t\tthis._scopedFunction = null;\n\t}\n\n\t/**\n\t * Used for log messages\n\t * @param id\n\t */\n\tset id(id) {\n\t\tthis._id = id;\n\t}\n\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\tset scope(s) {\n\t\tthis._scope = s;\n\t}\n\n\tget scope() {\n\t\treturn this._scope;\n\t}\n\n\t/**\n\t * Lazy generation of the function\n\t * @return {Function}\n\t */\n\tget scopedFunction() {\n\t\tif (!this._scopedFunction) {\n\t\t\tlet scopedFunction;\n\t\t\tlet scopeVariableNames = [];\n\t\t\tlet scopeArguments = [];\n\t\t\tif (this.scope) {\n\t\t\t\tscopeVariableNames = this.scope.getVariableNames();\n\t\t\t\tscopeArguments = this.scope.getArguments();\n\t\t\t}\n\t\t\tlet functionName = this._function;\n\t\t\tlet script = this._script;\n\t\t\ttry {\n\t\t\t\tlet scopingFunction = new Function(\n\t\t\t\t\tscopeVariableNames,\n\t\t\t\t\t`return (${script});`\n\t\t\t\t);\n\n\t\t\t\t// create the closure\n\t\t\t\tscopedFunction = scopingFunction.apply(\n\t\t\t\t\tscopingFunction,\n\t\t\t\t\tscopeArguments\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\t// Try to accommodate multiple root function declarations\n\t\t\t\tif (functionName) {\n\t\t\t\t\t// Wrap the whole script in a single function\n\t\t\t\t\tlet scopingFunction = new Function(\n\t\t\t\t\t\tscopeVariableNames,\n\t\t\t\t\t\t`${script}; return ${functionName};`\n\t\t\t\t\t);\n\n\t\t\t\t\t// create the closure\n\t\t\t\t\tscopedFunction = scopingFunction.apply(\n\t\t\t\t\t\tscopingFunction,\n\t\t\t\t\t\tscopeArguments\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis._scopedFunction = scopedFunction;\n\t\t\t}\n\t\t}\n\t\treturn this._scopedFunction;\n\t}\n\n\tgetArguments(locals) {\n\t\tlocals = locals || {};\n\t\tlet isLocalsArray = _.isArray(locals);\n\t\tlet scopeVariables = this.scope ? this.scope.getVariables() : {};\n\t\treturn this._parameters.map((name, index) => {\n\t\t\tif (isLocalsArray) {\n\t\t\t\treturn locals[index];\n\t\t\t} else if (locals[name]) {\n\t\t\t\treturn locals[name];\n\t\t\t} else {\n\t\t\t\treturn scopeVariables[name];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Take optional args to set as an array. Will map by index\n\t * @alias invoke([...])\n\t * @param arg1, arg2, ... argN\n\t * @return {*}\n\t */\n\tcall(...args) {\n\t\tthis.invoke(args.length ? args : undefined);\n\t}\n\n\t/**\n\t * Take optional args to set as an array or map. Will map by name\n\t * @param {Object} args\n\t * @return {*}\n\t */\n\tinvoke(args) {\n\t\tlet fn = this.scopedFunction;\n\t\ttry {\n\t\t\treturn fn.apply(fn, this.getArguments(args));\n\t\t} catch (e) {\n\t\t\t// TODO: logging\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t'SCRIPT:EXEC',\n\t\t\t\t'Error while running Client Script \"' + this.id + '\": ' + e\n\t\t\t);\n\t\t}\n\t}\n}\n","export class GlideVariableScope {\n\tconstructor() {\n\t\tthis._variables = {};\n\t\tthis._variableNames = null;\n\t}\n\n\tgetVariables() {\n\t\treturn this._variables;\n\t}\n\n\tgetVariableNames() {\n\t\t// @note: this will pin the variables\n\t\tif (!this._variableNames) {\n\t\t\tthis._variableNames = Object.keys(this._variables);\n\t\t}\n\t\treturn this._variableNames;\n\t}\n\n\tgetArguments() {\n\t\treturn this.getVariableNames().map(key => {\n\t\t\treturn this._variables[key];\n\t\t});\n\t}\n\n\tget(variable) {\n\t\treturn this._variables[variable];\n\t}\n\n\t/**\n\t * Add variables to the scope\n\t * @param {*} variable - if an object is provided, all keys will be applied\n\t * @param [value]\n\t */\n\tset(variable, value) {\n\t\tif (typeof variable !== 'string') {\n\t\t\tObject.assign(this._variables, variable);\n\t\t} else {\n\t\t\tthis._variables[variable] = value;\n\t\t}\n\t}\n\n\tunset(variable) {\n\t\tdelete this._variables[variable];\n\t}\n}\n","import { createUIAction } from './GlideUIAction';\nimport { UX_ACTION_TYPES } from '@servicenow/now-record-common';\nconst SAVE_ACTION_NAME = 'sysverb_ws_save';\n\nexport class GlideUIActions {\n\tconstructor(\n\t\tuiActions,\n\t\tactionExecutor,\n\t\tformSubmitValidator,\n\t\tformSubmitExecutor,\n\t\tgFormAccessor\n\t) {\n\t\tif (!uiActions) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn('uiActions must be provided');\n\t\t\treturn;\n\t\t}\n\t\tlet _currentAction;\n\t\tlet _inProgress = false;\n\t\tlet _uiActionsById = {};\n\t\tlet _uiActions = uiActions.map(uiAction => {\n\t\t\tif (!uiAction) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet action = createUIAction({\n\t\t\t\tname: uiAction.name,\n\t\t\t\tid: uiAction.id,\n\t\t\t\tlabel: uiAction.label,\n\t\t\t\tuxActionType: uiAction.uxActionType,\n\t\t\t\taction: uiAction\n\t\t\t});\n\n\t\t\t_uiActionsById[action.sysId] = action;\n\t\t\treturn action;\n\t\t});\n\n\t\tthis.getActions = () => {\n\t\t\treturn _uiActions;\n\t\t};\n\n\t\tthis.getAction = sysId => {\n\t\t\treturn _uiActionsById[sysId];\n\t\t};\n\n\t\tthis.getSaveActionName = () => {\n\t\t\treturn SAVE_ACTION_NAME;\n\t\t};\n\n\t\t/**\n\t\t * Search by name or sysId\n\t\t * @param name\n\t\t */\n\t\tthis.getActionByName = name => {\n\t\t\tif (_inProgress) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn _uiActions.find(a => {\n\t\t\t\treturn a.name === name || a.sysId === name;\n\t\t\t});\n\t\t};\n\n\t\tthis.submit = (sysId, options = {}) => {\n\t\t\tconst { skipValidation } = options;\n\t\t\tlet glideAction = this.getAction(sysId);\n\t\t\t_currentAction = glideAction;\n\t\t\tif (!glideAction) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t_inProgress = true;\n\n\t\t\t// validate the onSubmit scripts\n\t\t\tif (!skipValidation && !formSubmitValidator(glideAction.action)) {\n\t\t\t\t_inProgress = false;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn actionExecutor(glideAction.action, {\n\t\t\t\trunOn: 'server'\n\t\t\t}).finally(() => {\n\t\t\t\t_inProgress = false;\n\t\t\t\t_currentAction = undefined;\n\t\t\t});\n\t\t};\n\n\t\tthis.click = sysId => {\n\t\t\tif (gFormAccessor) {\n\t\t\t\tlet gForm = gFormAccessor();\n\t\t\t\tif (gForm) gForm.clearMessages();\n\t\t\t}\n\t\t\tlet glideAction = this.getAction(sysId);\n\t\t\t_currentAction = glideAction;\n\t\t\tif (!glideAction || !glideAction.action) {\n\t\t\t\treturn Promise.reject(false);\n\t\t\t}\n\n\t\t\tif (glideAction.uxActionType !== UX_ACTION_TYPES.UI_ACTION) {\n\t\t\t\treturn Promise.reject('Invalid action type');\n\t\t\t}\n\n\t\t\tconst uiAction = glideAction.action;\n\t\t\t// goto server if there is no clientScript\n\t\t\tif (!uiAction.hasClientScript || !uiAction.clientScript) {\n\t\t\t\treturn formSubmitExecutor(uiAction);\n\t\t\t}\n\t\t\treturn actionExecutor(uiAction, {\n\t\t\t\trunOn: 'client'\n\t\t\t}).finally(() => {\n\t\t\t\t_currentAction = undefined;\n\t\t\t});\n\t\t};\n\n\t\tthis.getActiveActionName = () => {\n\t\t\treturn _currentAction\n\t\t\t\t? _currentAction.name || _currentAction.sysId\n\t\t\t\t: 'none';\n\t\t};\n\t}\n}\n","export function createUIAction({ name, id, label, uxActionType, action }) {\n\treturn {\n\t\tget sysId() {\n\t\t\treturn id;\n\t\t},\n\t\tget name() {\n\t\t\treturn name;\n\t\t},\n\t\tget uxActionType() {\n\t\t\treturn uxActionType;\n\t\t},\n\t\tget label() {\n\t\t\treturn label;\n\t\t},\n\t\tget action() {\n\t\t\treturn action;\n\t\t}\n\t};\n}\n","import _ from 'lodash';\n\nexport function MessageLocalizerFactory({ sendRequest }) {\n\treturn class MessageLocalizer {\n\t\tconstructor() {\n\t\t\tthis.localizedMessages = {};\n\t\t\tthis._url = '/angular.do?sysparm_type=message';\n\t\t\tthis.interpolate = this.interpolate.bind(this);\n\t\t\tthis.getMessage = this.getMessage.bind(this);\n\t\t\tthis.getMessages = this.getMessages.bind(this);\n\t\t}\n\n\t\tinterpolate(str, param) {\n\t\t\tif (typeof param === 'string' || typeof param === 'number') {\n\t\t\t\tparam = [param];\n\t\t\t}\n\t\t\treturn str.replace(/{([0-9]*)}/g, (a, b) => {\n\t\t\t\tlet r = param[b];\n\t\t\t\treturn typeof r === 'string' || typeof r === 'number' ? r : a;\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Returns a single localized string (or passed-in key, if localized value doesn't exist)\n\t\t * @param {String} key Localized-string key\n\t\t * @param {Array} [interpolationParams] parameters to use in template interpolation\n\t\t * @param {Function} [callback] callback to fire when server response and interpolation have completed\n\t\t * @returns {String}\n\t\t */\n\t\tgetMessage(key, interpolationParam, callback) {\n\t\t\tif (typeof interpolationParam === 'function') {\n\t\t\t\tcallback = interpolationParam;\n\t\t\t\tinterpolationParam = null;\n\t\t\t} else if (\n\t\t\t\ttypeof interpolationParam === 'string' ||\n\t\t\t\ttypeof interpolationParam === 'number'\n\t\t\t) {\n\t\t\t\tinterpolationParam = [interpolationParam];\n\t\t\t}\n\n\t\t\tlet translatedKey = key;\n\t\t\tconst onKeyFound = msgs => {\n\t\t\t\ttranslatedKey = interpolationParam\n\t\t\t\t\t? this.interpolate(msgs[key], interpolationParam)\n\t\t\t\t\t: msgs[key];\n\t\t\t\tif (callback) callback(translatedKey);\n\t\t\t};\n\n\t\t\tif (this.localizedMessages[key]) onKeyFound(this.localizedMessages);\n\t\t\telse\n\t\t\t\tthis.getMessages([key]).then(msgs => {\n\t\t\t\t\tonKeyFound(msgs);\n\t\t\t\t});\n\t\t\treturn translatedKey;\n\t\t}\n\n\t\t/**\n\t\t * Returns localized keys (or passed-in keys, if localized values don't exist)\n\t\t * @param {Array} keys array of keys) to retrieve\n\t\t * @param {Function} [callback] callback (deprecated, use the returned promise instead)\n\t\t * @returns {Promise}\n\t\t */\n\t\tgetMessages(keys, callback) {\n\t\t\tlet _resolve;\n\t\t\tlet promise = new Promise(resolve => {\n\t\t\t\t_resolve = resolve;\n\t\t\t});\n\t\t\tlet messages = {};\n\t\t\tlet missingKeys = [];\n\t\t\tkeys.forEach(key => {\n\t\t\t\t// don't use getMessage here, as it'll just return the key\n\t\t\t\tlet msg = this.localizedMessages[key];\n\t\t\t\tif (msg !== undefined) {\n\t\t\t\t\tmessages[key] = msg;\n\t\t\t\t} else {\n\t\t\t\t\tmissingKeys.push(key);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (missingKeys.length > 0) {\n\t\t\t\tthis.fetchKeys(missingKeys).then(fetchedMessages => {\n\t\t\t\t\tthis.loadMessages(fetchedMessages);\n\t\t\t\t\tlet allRequestedMessages = _.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tfetchedMessages,\n\t\t\t\t\t\tmessages\n\t\t\t\t\t);\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback(allRequestedMessages);\n\t\t\t\t\t}\n\t\t\t\t\t_resolve(allRequestedMessages);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(messages);\n\t\t\t\t}\n\t\t\t\t_resolve(messages);\n\t\t\t}\n\t\t\treturn promise;\n\t\t}\n\t\t/**\n\t\t * Upserts a single localized key/value pair into the localized strings map\n\t\t * @param {String} localizedValue\n\t\t * @param {String} key\n\t\t */\n\t\tloadMessage(key, localizedValue) {\n\t\t\tthis.localizedMessages[key] = localizedValue;\n\t\t}\n\t\t/**\n\t\t * Bulk upserts localized key/value pairs into the localized strings map\n\t\t * @param {Object} messages localized string definitions\n\t\t */\n\t\tloadMessages(messages) {\n\t\t\t_.assign(this.localizedMessages, messages);\n\t\t}\n\t\t/**\n\t\t * Retrieves keys from server\n\t\t * @param {Array} messages array of localized strings to retrieve\n\t\t * @returns {Promise}\n\t\t */\n\t\tfetchKeys(messages) {\n\t\t\treturn sendRequest(this._url, 'POST', {\n\t\t\t\tbody: {\n\t\t\t\t\tmessages\n\t\t\t\t}\n\t\t\t}).then(({ data }) => data.messages || {});\n\t\t}\n\t};\n}\n","import { dispatchPreviewRecord } from '@devsnc/library-form';\nexport default function create(dispatch, parentTable, parentSysId) {\n\treturn {\n\t\topenCatalogItem: function(table, sysId, params) {\n\t\t\tdispatchPreviewRecord(dispatch, {\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tparams: {\n\t\t\t\t\tparent_table: parentTable,\n\t\t\t\t\tparent_sys_id: parentSysId,\n\t\t\t\t\t...(params ? params : {})\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","import { dispatchPreviewRecord } from '@devsnc/library-form';\n\nexport default function create(dispatch, parentSysId) {\n\treturn {\n\t\topenInsight: function(sysId, params) {\n\t\t\tdispatchPreviewRecord(dispatch, {\n\t\t\t\ttable: 'em_alert_insight_container',\n\t\t\t\tsysId,\n\t\t\t\tparams: {\n\t\t\t\t\tparent_table: 'em_alert',\n\t\t\t\t\tparent_sys_id: parentSysId,\n\t\t\t\t\t...(params ? params : {})\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","import {\n\tSCREEN_STATUS_CHANGED,\n\tRECORD_STATUS_CHANGED,\n\tRECORD_STATUS_CLOSED\n} from '../../../constants/ScriptingActions';\nimport { DomainProviderFactory } from '../domain/domainProviderFactory';\nimport { GlideFormSectionManager } from '../form/GlideFormSectionManager';\nimport { dispatchPreviewRecord } from '@devsnc/library-form';\n\nexport default function create(\n\tdispatch,\n\tcurrentTable,\n\tcurrentSysId,\n\tgForm,\n\tdata,\n\tdomainScope\n) {\n\tconst domainProvider = new DomainProviderFactory(\n\t\tdata,\n\t\tgForm,\n\t\tdispatch,\n\t\tdomainScope\n\t);\n\tconst sectionManager = new GlideFormSectionManager(gForm);\n\n\treturn {\n\t\topenRecord(table, sysId, params) {\n\t\t\tdispatchPreviewRecord(dispatch, {\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tparams\n\t\t\t});\n\t\t},\n\n\t\tcloseRecord() {\n\t\t\tdispatch(SCREEN_STATUS_CHANGED, {\n\t\t\t\ttable: currentTable,\n\t\t\t\tsys_id: currentSysId,\n\t\t\t\tstatus: RECORD_STATUS_CLOSED\n\t\t\t});\n\t\t\tdispatch(RECORD_STATUS_CHANGED, {\n\t\t\t\ttable: currentTable,\n\t\t\t\tsys_id: currentSysId,\n\t\t\t\tstatus: RECORD_STATUS_CLOSED\n\t\t\t});\n\t\t},\n\n\t\tsetSectionExpanded(sectionName, expanded) {\n\t\t\tsectionManager.setSectionExpanded(sectionName, expanded);\n\t\t},\n\n\t\tdomainScopeProvider() {\n\t\t\treturn domainProvider.getApi();\n\t\t}\n\t};\n}\n","import { glideRequestFactory } from './glideRequest';\nimport { glideRecordFactory } from './GlideRecord';\n\n// TODO: these should be imported instead of discovered at runtime\nlet glideFormEnvironmentFactory;\nlet glideFormFactory;\nlet glideAjax;\nlet glideRecord;\nlet glideModalFactory;\nlet glideUser;\nlet uiScriptFactory;\n\nfunction assignPlatformResources(sendRequest) {\n\tglideFormEnvironmentFactory = window['glideFormEnvironmentFactory'];\n\tglideFormFactory = window['glideFormFactory'];\n\tglideAjax = window['GlideAjax'];\n\tglideRecord = glideRecordFactory({ sendRequest });\n\tglideModalFactory = window['glideModalFactory'];\n\tglideUser = window['GlideUser'];\n\tuiScriptFactory = window['uiScriptFactory'];\n\n\tconst glideRequest = glideRequestFactory({ sendRequest });\n\t// inject new request layer\n\tglideFormFactory.glideRequest = glideRequest;\n\tglideAjax.glideRequest = glideRequest;\n\tglideRecord.glideRequest = glideRequest;\n\twindow['GlideRecord'] = glideRecord;\n\n\treturn {\n\t\tglideFormEnvironmentFactory,\n\t\tglideFormFactory,\n\t\tglideAjax,\n\t\tglideRecord,\n\t\tglideModalFactory,\n\t\tglideUser,\n\t\tuiScriptFactory\n\t};\n}\n\n/**\n * Loads the client scripting resources from the platform\n */\nexport const loadPlatformResources = sendRequest => {\n\tif (typeof window['glideFormFactory'] !== 'undefined') {\n\t\treturn Promise.resolve(assignPlatformResources(sendRequest));\n\t}\n\tlet script = document.createElement('script');\n\tscript.src = '/scripts/sn/common/clientScript/js_includes_clientScript.js';\n\tlet promise = new Promise((resolve, reject) => {\n\t\tscript.onload = () => {\n\t\t\tresolve(assignPlatformResources(sendRequest));\n\t\t};\n\t\tscript.onerror = () => {\n\t\t\treject();\n\t\t};\n\t});\n\tdocument.getElementsByTagName('head')[0].appendChild(script);\n\treturn promise;\n};\n","import { encodeURIParameters } from '../http/http';\nimport _ from 'lodash';\n\nfunction _applyOptions(method, url, options) {\n\tlet fetchOptions = {\n\t\t...options,\n\t\tmethod: method,\n\t\turl: url\n\t};\n\tlet { data, dataType } = fetchOptions;\n\n\tswitch (method) {\n\t\tcase 'get':\n\t\t\tif (data) {\n\t\t\t\t// @note: quick and dirty param concat\n\t\t\t\tvar params = encodeURIParameters(data);\n\t\t\t\tif (url.indexOf('?') !== -1)\n\t\t\t\t\tfetchOptions.url = url + '&' + params;\n\t\t\t\telse fetchOptions.url = url + '?' + params;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (dataType === 'xml')\n\t\t\t\tfetchOptions.body = encodeURIParameters(data);\n\t\t\telse fetchOptions.body = data;\n\t\t\tbreak;\n\t}\n\n\tswitch (dataType) {\n\t\tdefault:\n\t\tcase 'json':\n\t\t\tfetchOptions.headers = {\n\t\t\t\tAccept: 'application/json, text/javascript',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'X-UserToken': window.g_ck\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'xml':\n\t\t\tfetchOptions.headers = {\n\t\t\t\tAccept: 'application/xml, text/xml',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t'X-UserToken': window.g_ck\n\t\t\t};\n\t\t\tbreak;\n\t}\n\treturn fetchOptions;\n}\n\nexport function glideRequestFactory({ sendRequest }) {\n\treturn {\n\t\tgetAngularURL: function(path, parameters) {\n\t\t\treturn (\n\t\t\t\t'/angular.do?sysparm_type=' +\n\t\t\t\tpath +\n\t\t\t\t'&' +\n\t\t\t\t(parameters ? encodeURIParameters(parameters) : '')\n\t\t\t);\n\t\t},\n\t\tget: function(url, options) {\n\t\t\tif (!url) {\n\t\t\t\tthrow 'Must specify a URL';\n\t\t\t}\n\t\t\tvar fetchOptions = _applyOptions('get', url, options);\n\t\t\treturn sendRequest(fetchOptions.url, 'get', fetchOptions);\n\t\t},\n\t\tpost: function(url, options) {\n\t\t\tif (!url) {\n\t\t\t\tthrow 'Must specify a URL';\n\t\t\t}\n\t\t\tvar fetchOptions = _applyOptions('post', url, options);\n\t\t\treturn sendRequest(fetchOptions.url, 'post', fetchOptions).then(\n\t\t\t\tresponse => {\n\t\t\t\t\t/* for glideAjax */\n\t\t\t\t\tlet type = fetchOptions.dataType;\n\t\t\t\t\tresponse.type = type;\n\t\t\t\t\tresponse.responseText = response.data;\n\t\t\t\t\tresponse.responseXML =\n\t\t\t\t\t\ttype === 'xml'\n\t\t\t\t\t\t\t? _.get(response, 'request.responseXML', null)\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\treturn response;\n\t\t\t\t},\n\t\t\t\tresponse => {\n\t\t\t\t\treturn response;\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\tput: function(url, options) {\n\t\t\tif (!url) {\n\t\t\t\tthrow 'Must specify a URL';\n\t\t\t}\n\t\t\tvar fetchOptions = _applyOptions('put', url, options);\n\t\t\treturn sendRequest(fetchOptions.url, 'put', fetchOptions);\n\t\t},\n\t\tpatch: function(url, options) {\n\t\t\tif (!url) {\n\t\t\t\tthrow 'Must specify a URL';\n\t\t\t}\n\t\t\tvar fetchOptions = _applyOptions('patch', url, options);\n\t\t\treturn sendRequest(fetchOptions.url, 'patch', fetchOptions);\n\t\t}\n\t};\n}\n","import _ from 'lodash';\n\nconst changeValues = {};\n\nfunction changedFields(object) {\n\tObject.entries(object).forEach(([fieldName]) => {\n\t\tif (object.getValue(fieldName) !== object[fieldName])\n\t\t\tif (!object.ignoreNames[fieldName])\n\t\t\t\tchangeValues[fieldName] = object[fieldName];\n\t});\n\treturn changeValues;\n}\n\nfunction _logError(code, msg) {\n\t/* eslint-disable no-console */\n\tif (console && console.error) {\n\t\tconsole.error('(GlideRecord) [' + code + '] ' + msg);\n\t}\n\t/* eslint-enable no-console */\n}\n\nfunction _logWarn(code, msg) {\n\t/* eslint-disable no-console */\n\tif (console && console.warn) {\n\t\tconsole.warn('(GlideRecord) [' + code + '] ' + msg);\n\t}\n\t/* eslint-enable no-console */\n}\n\nexport function glideRecordFactory({ sendRequest }) {\n\treturn class GlideRecord {\n\t\t/*\n\t\t * query: \"An encoded query string used to filter the results\" fields: \"A\n\t\t * comma-separated list of fields to return in the response\" limit: \"The\n\t\t * maximum number of results returned per page (default: 10,000)\"\n\t\t */\n\t\tconstructor(tableName) {\n\t\t\tthis.tableName = tableName;\n\t\t\tthis.encodedQuery = '';\n\t\t\tthis.conditions = [];\n\t\t\tthis.orderByFields = [];\n\t\t\tthis.orderByDescFields = [];\n\t\t\tthis.limit = 200;\n\t\t\tthis._callback = null;\n\t\t\tthis.currentRow = -1;\n\t\t\tthis.recordSet = [];\n\t\t\tthis.initialized = false;\n\n\t\t\tif (!this.initialized) {\n\t\t\t\tthis.ignoreNames = {};\n\t\t\t\t// setup an array of names when we are done initializing..\n\t\t\t\t// we will use this array later to determine what vars the\n\t\t\t\t// end user has added\n\t\t\t\tObject.entries(this).forEach(([xname]) => {\n\t\t\t\t\tthis.ignoreNames[xname] = true;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tObject.entries(this).forEach(([xname]) => {\n\t\t\t\t\tif (!this.ignoreNames[xname]) delete this[xname];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.initialized = true;\n\t\t}\n\n\t\tquery(callback) {\n\t\t\tif (typeof callback !== 'function') {\n\t\t\t\t_logWarn(\n\t\t\t\t\t'Q:NOCB',\n\t\t\t\t\t'Query must be called with a callback function'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn sendRequest(\n\t\t\t\t'/api/now/ui/glideRecord/' + this.tableName,\n\t\t\t\t'GET',\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tsysparm_display_value: 'all',\n\t\t\t\t\t\tsysparm_table: this.tableName,\n\t\t\t\t\t\tsysparm_query: this.getEncodedQuery(),\n\t\t\t\t\t\tsysparm_limit: this.getLimit()\n\t\t\t\t\t},\n\t\t\t\t\tbody: {}\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\tthis._queryResponse.bind(this, callback),\n\t\t\t\tthis._queryErrorResponse.bind(this, callback)\n\t\t\t);\n\t\t}\n\n\t\t_queryResponse(callback, response) {\n\t\t\tif (!response.data.result) return;\n\n\t\t\tthis.recordSet = response.data.result || [];\n\t\t\tcallback(this);\n\t\t}\n\n\t\t_queryErrorResponse(callback, response = {}) {\n\t\t\tconst {\n\t\t\t\tdata: { error: { message, detail } = {} } = {},\n\t\t\t\tstatus\n\t\t\t} = response;\n\t\t\t_logWarn(\n\t\t\t\t'Q:FAILED',\n\t\t\t\t`Query failed: status=${status} message=${message}, detail=${detail}`\n\t\t\t);\n\t\t\tthis.recordSet = [];\n\t\t\tcallback(this);\n\t\t}\n\n\t\tget(/* fieldName, value, callback */) {\n\t\t\tlet callback;\n\t\t\tif (arguments.length == 2 && typeof arguments[1] === 'function') {\n\t\t\t\tthis.addQuery('sys_id', arguments[0]);\n\t\t\t\tcallback = arguments[1];\n\t\t\t} else if (\n\t\t\t\targuments.length == 3 &&\n\t\t\t\ttypeof arguments[2] === 'function'\n\t\t\t) {\n\t\t\t\tthis.addQuery(arguments[0], arguments[1]);\n\t\t\t\tcallback = arguments[2];\n\t\t\t} else {\n\t\t\t\t_logWarn(\n\t\t\t\t\t'GET:NOCB',\n\t\t\t\t\t'Get must be called with a callback function'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.query(this._getResponse.bind(this, callback));\n\t\t}\n\n\t\t_getResponse(callback, response) {\n\t\t\tif (!response) return;\n\n\t\t\tthis.next();\n\t\t\tcallback(this);\n\t\t}\n\n\t\tupdateRecord(callback) {\n\t\t\tif (typeof callback !== 'function') {\n\t\t\t\t_logError(\n\t\t\t\t\t'Q:NOCB',\n\t\t\t\t\t'UpdateRecord must be called with a callback function'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst change = changedFields(this);\n\t\t\treturn sendRequest(\n\t\t\t\t'/api/now/ui/glideRecord/' +\n\t\t\t\t\tthis.tableName +\n\t\t\t\t\t'/' +\n\t\t\t\t\tthis.getValue('sys_id'),\n\t\t\t\t'PUT',\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'X-WantSessionNotificationMessages': true,\n\t\t\t\t\t\t'X-No-Response-Body': true\n\t\t\t\t\t},\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tsysparm_display_value: true\n\t\t\t\t\t},\n\t\t\t\t\tbody: change\n\t\t\t\t}\n\t\t\t).then(callback(this));\n\t\t}\n\n\t\tdeleteRecord(callback) {\n\t\t\tif (typeof callback !== 'function') {\n\t\t\t\t_logError(\n\t\t\t\t\t'Q:NOCB',\n\t\t\t\t\t'DeleteRecord must be called with a callback function'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn sendRequest(\n\t\t\t\t'/api/now/ui/glideRecord/' +\n\t\t\t\t\tthis.tableName +\n\t\t\t\t\t'/' +\n\t\t\t\t\tthis.getValue('sys_id'),\n\t\t\t\t'DELETE',\n\t\t\t\t{\n\t\t\t\t\tparams: {},\n\t\t\t\t\tbody: {}\n\t\t\t\t}\n\t\t\t).then(callback(this));\n\t\t}\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\taddQuery(field, operator, value) {\n\t\t\tconst args = [];\n\t\t\tArray.prototype.push.apply(args, arguments);\n\n\t\t\tconst name = args.shift();\n\t\t\tconst oper = args.length === 1 ? '=' : args.shift();\n\t\t\tconst fieldValue = args.shift();\n\n\t\t\tthis.conditions.push({ name, oper, fieldValue });\n\t\t}\n\n\t\thasNext() {\n\t\t\treturn this.currentRow + 1 < this.recordSet.length;\n\t\t}\n\n\t\tnext() {\n\t\t\treturn this._next();\n\t\t}\n\n\t\t_next() {\n\t\t\tif (!this.hasNext()) return false;\n\n\t\t\tthis.loadRow(this.currentRow + 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tloadRow(index) {\n\t\t\tthis.currentRow = index;\n\t\t\tconst currentRow = this.getCurrentRow();\n\t\t\t_.each(currentRow, (value, key) => {\n\t\t\t\tif (_.isObject(value)) value = value.value;\n\n\t\t\t\tthis[key] = value;\n\t\t\t});\n\t\t}\n\n\t\t_loadRecordSet(records) {\n\t\t\tthis.recordSet = records || [];\n\t\t}\n\n\t\tsetEncodedQuery(queryString) {\n\t\t\tthis.encodedQuery = queryString;\n\t\t}\n\n\t\tgetEncodedQuery() {\n\t\t\tconst qc = [];\n\t\t\tconst ec = this.encodedQuery;\n\t\t\tif (ec) {\n\t\t\t\tqc.push(ec);\n\t\t\t}\n\t\t\tthis.conditions.forEach(q => {\n\t\t\t\tqc.push(q.name + q.oper + q.fieldValue);\n\t\t\t});\n\n\t\t\treturn '^' + qc.join('^');\n\t\t}\n\n\t\torderBy(field) {\n\t\t\tthis.addOrderBy(field);\n\t\t}\n\n\t\torderByDesc(field) {\n\t\t\tthis.orderByDescFields.push(field);\n\t\t}\n\n\t\tsetLimit(maxRows) {\n\t\t\tthis.limit = maxRows;\n\t\t}\n\n\t\tgetLimit() {\n\t\t\treturn this.limit;\n\t\t}\n\n\t\tsetValue(fieldName, fieldValue) {\n\t\t\tchangeValues[fieldName] = fieldValue;\n\t\t}\n\n\t\tgetValue(fieldName) {\n\t\t\tconst current = this.getCurrentRow();\n\t\t\treturn current && current[fieldName]\n\t\t\t\t? current[fieldName].value : '';\n\t\t}\n\n\t\tgetDisplayValue(fieldName) {\n\t\t\tconst current = this.getCurrentRow();\n\t\t\tif (!fieldName) {\n\t\t\t\treturn current ? current['display_value'] : '';\n\t\t\t} else if (current && current[fieldName]) {\n\t\t\t\treturn current[fieldName].display_value;\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\tgetCurrentRow() {\n\t\t\treturn this.recordSet[this.currentRow];\n\t\t}\n\n\t\tgetRowCount() {\n\t\t\treturn this.recordSet.length;\n\t\t}\n\n\t\tgetTableName() {\n\t\t\treturn this.tableName;\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn 'GlideRecord';\n\t\t}\n\n\t\taddOrderBy(field) {\n\t\t\tthis.orderByFields.push(field);\n\t\t}\n\t};\n}\n","import {\n\tRECORD_STATUS_CHANGED,\n\tRECORD_STATUS_UPDATED,\n\tRECORD_STATUS_INSERTED,\n\tRECORD_STATUS_DELETED,\n\tRECORD_STATUS_LIVEUPDATED,\n\tRECORD_STATUS_UNMODIFIED,\n\tRECORD_STATUS_MODIFIED,\n\tRECORD_STATUS_CLOSED,\n\tFORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED\n} from '../../../constants/ScriptingActions';\nimport _ from 'lodash';\nimport { DATASOURCE_NAMES } from '../dataProviders/utils';\nimport { dispatchPreviewRecord } from '@devsnc/library-form';\n\nconst PROPERTY_CHANGE_FORM = 'FORM';\nconst PROPERTY_CHANGE_FIELD = 'FIELD';\nconst PROPERTY_CHANGE_SECTION = 'SECTION';\nconst PROPERTY_CHANGE_RELATED_LIST = 'RELATED_LIST';\n\nconst matchRelatedList = listName => list =>\n\tlist.related_field\n\t\t? list.value === listName\n\t\t: list.table + '.' + list.field === listName;\n\nconst matchSection = sectionName => section => section.caption === sectionName;\n\nconst copyObjectAtIndex = (array, object, index) => [\n\t...array.slice(0, index),\n\t_.cloneDeep(object),\n\t...array.slice(index + 1)\n];\n\nconst operationToStatus = operation => {\n\tswitch (operation) {\n\t\tcase 'insert':\n\t\t\treturn RECORD_STATUS_INSERTED;\n\t\tcase 'update':\n\t\t\treturn RECORD_STATUS_UPDATED;\n\t\tcase 'delete':\n\t\t\treturn RECORD_STATUS_DELETED;\n\t\tdefault:\n\t\t\treturn operation;\n\t}\n};\n\nconst updateItems = (changedFieldNames, fields, formData) => {\n\tlet changed = false;\n\tconst { primaryItem, secondaryItems, rest } = (formData[\n\t\tDATASOURCE_NAMES.header\n\t] = {});\n\tif (!primaryItem && _.isEmpty(secondaryItems)) return;\n\n\tlet newConfig = {\n\t\tprimaryItem,\n\t\tsecondaryItems,\n\t\t...rest\n\t};\n\tif (changedFieldNames.includes(primaryItem.fieldName)) {\n\t\tchanged = true;\n\t\tconst field = fields[primaryItem.fieldName];\n\t\tnewConfig = {\n\t\t\t...newConfig,\n\t\t\tprimaryValue: field.displayValue,\n\t\t\tprimaryItem: {\n\t\t\t\t...newConfig.primaryItem,\n\t\t\t\tdisplayValue: field.displayValue\n\t\t\t}\n\t\t};\n\t}\n\n\tsecondaryItems.forEach((item, index) => {\n\t\tif (changedFieldNames.includes(item.fieldName)) {\n\t\t\tchanged = true;\n\t\t\tconst field = fields[item.fieldName];\n\t\t\tnewConfig = {\n\t\t\t\t...newConfig,\n\t\t\t\tsecondaryItems: [\n\t\t\t\t\t...newConfig.secondaryItems.slice(0, index),\n\t\t\t\t\t{\n\t\t\t\t\t\t...newConfig.secondaryItems[index],\n\t\t\t\t\t\tdisplayValue: field.displayValue\n\t\t\t\t\t},\n\t\t\t\t\t...newConfig.secondaryItems.slice(index + 1)\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t});\n\n\tif (changed) {\n\t\t_setState({\n\t\t\t...formData,\n\t\t\t[DATASOURCE_NAMES.header]: newConfig\n\t\t});\n\t}\n\n\treturn changed;\n};\n\nexport const createGlideFormBehaviorEventHandler = (\n\tdispatch,\n\tupdateState,\n\tformData,\n\tupdateProperties,\n\tfetchFormDataActions\n) => {\n\tlet state = {};\n\tlet _prevRecordStatus;\n\tlet _updateState = updateState;\n\tlet _updateProps = null;\n\tconst _setState = newState => {\n\t\tstate = {\n\t\t\t...state,\n\t\t\t...newState\n\t\t};\n\t\t_updateState(newState);\n\t\tif (_updateProps) {\n\t\t\t_updateProps(state);\n\t\t}\n\t};\n\n\tconst _updatingState = (stateName, matchCallBack, payload) => {\n\t\tconst items = state[stateName];\n\t\tconst index = items.findIndex(matchCallBack);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = items[index];\n\t\tconst updatedItem = { ...item, ...payload };\n\t\t_setState({\n\t\t\t[stateName]: copyObjectAtIndex(items, updatedItem, index)\n\t\t});\n\t};\n\n\tconst transformStatusChanged = (status, table, sysId) => {\n\t\tswitch (status) {\n\t\t\tcase RECORD_STATUS_INSERTED:\n\t\t\t\treturn {\n\t\t\t\t\tisDirty: false,\n\t\t\t\t\tscreenParams: {\n\t\t\t\t\t\tsys_id: sysId,\n\t\t\t\t\t\ttable\n\t\t\t\t\t},\n\t\t\t\t\tstatus\n\t\t\t\t};\n\t\t\tcase RECORD_STATUS_MODIFIED:\n\t\t\t\treturn {\n\t\t\t\t\tisDirty: true,\n\t\t\t\t\tstatus: RECORD_STATUS_MODIFIED\n\t\t\t\t};\n\t\t\tcase RECORD_STATUS_DELETED:\n\t\t\t\treturn {\n\t\t\t\t\tstatus: RECORD_STATUS_CLOSED\n\t\t\t\t};\n\t\t\tcase RECORD_STATUS_UNMODIFIED:\n\t\t\tcase RECORD_STATUS_UPDATED:\n\t\t\t\treturn {\n\t\t\t\t\tisDirty: false,\n\t\t\t\t\tstatus: RECORD_STATUS_UPDATED\n\t\t\t\t};\n\t\t\tcase RECORD_STATUS_LIVEUPDATED:\n\t\t\t\treturn {\n\t\t\t\t\thasUpdate: true\n\t\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tconst _handleRecordStatusChanged = (status, table, sysId) => {\n\t\tif (\n\t\t\t_prevRecordStatus === RECORD_STATUS_DELETED ||\n\t\t\t_prevRecordStatus === RECORD_STATUS_INSERTED ||\n\t\t\t_prevRecordStatus === RECORD_STATUS_UPDATED\n\t\t)\n\t\t\treturn;\n\n\t\tconst screenStatusPayload = transformStatusChanged(\n\t\t\tstatus,\n\t\t\ttable,\n\t\t\tsysId\n\t\t);\n\t\tif (screenStatusPayload)\n\t\t\tdispatch(FORM_DATA_CONNECTED_SCREEN_STATUS_CHANGED, screenStatusPayload);\n\n\t\tlet payload = {\n\t\t\ttable: table,\n\t\t\tsys_id: sysId,\n\t\t\tstatus\n\t\t};\n\t\tif (\n\t\t\tstatus === RECORD_STATUS_INSERTED ||\n\t\t\tstatus === RECORD_STATUS_UPDATED\n\t\t)\n\t\t\tpayload = {\n\t\t\t\t...payload,\n\t\t\t\tquery: ''\n\t\t\t};\n\t\tdispatch(RECORD_STATUS_CHANGED, payload);\n\n\t\tif (status !== RECORD_STATUS_LIVEUPDATED) {\n\t\t\t_prevRecordStatus = status;\n\t\t}\n\n\t\tif (\n\t\t\t[\n\t\t\t\tRECORD_STATUS_UNMODIFIED,\n\t\t\t\tRECORD_STATUS_MODIFIED,\n\t\t\t\tRECORD_STATUS_INSERTED,\n\t\t\t\tRECORD_STATUS_UPDATED\n\t\t\t].includes(status)\n\t\t) {\n\t\t\tconst isDirty = status === RECORD_STATUS_MODIFIED;\n\t\t\t_setState({\n\t\t\t\tisDirty\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onStateChange = (oldState, newState) => {\n\t\tconst { table, sysId } = formData.record;\n\t\t_handleRecordStatusChanged(newState, table, sysId);\n\t};\n\n\tconst operationTransformer = operation =>\n\t\tformData.record.sysId === '-1' && operation === 'update'\n\t\t\t? operationToStatus('insert')\n\t\t\t: operationToStatus(operation);\n\n\tconst onFormSubmit = ({ record, redirect, operation }) => {\n\t\t// @note: let the chrome know about the updated record\n\t\tif (operation && record && record.sys_id) {\n\t\t\tconst { table, sys_id: sysId } = record;\n\t\t\t_handleRecordStatusChanged(\n\t\t\t\toperationTransformer(operation),\n\t\t\t\ttable,\n\t\t\t\tsysId\n\t\t\t);\n\t\t}\n\t\tif (redirect) {\n\t\t\tswitch (redirect.type) {\n\t\t\t\tcase 'TABLE': {\n\t\t\t\t\tconst { table, sys_id, query } = redirect.type_metadata;\n\t\t\t\t\tdispatchPreviewRecord(dispatch, {\n\t\t\t\t\t\ttable,\n\t\t\t\t\t\tsysId: sys_id,\n\t\t\t\t\t\tquery\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('Unhandled redirect type', redirect);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// if ui action didn't save the record, it should not reload the form\n\t\tif (!operation) {\n\t\t\treturn;\n\t\t}\n\n\t\t// reload the record\n\t\tif (!record) {\n\t\t\tconsole.warn('Record values were not returned');\n\t\t\treturn;\n\t\t}\n\t\tconst { table, sys_id: sysId } = record;\n\t\tconst { query, views, sysId: orgSysId, view } = formData.record;\n\t\tif (orgSysId !== sysId || query) {\n\t\t\tupdateProperties({\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tviews,\n\t\t\t\tview,\n\t\t\t\tquery: ''\n\t\t\t});\n\t\t\t_updateState({\n\t\t\t\tisReloading: true\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch(fetchFormDataActions.RELOAD);\n\t\t}\n\t};\n\n\tconst onChange = changedFields => {\n\t\tconst { fields } = state;\n\t\tconst gFormFields = formData.layout.formFieldValues;\n\t\tconst updatedFields = Object.keys(changedFields).reduce(\n\t\t\t(updatedFields, fieldName) => {\n\t\t\t\tif (fields[fieldName]) {\n\t\t\t\t\tupdatedFields[fieldName] = _.cloneDeep(\n\t\t\t\t\t\tgFormFields[fieldName]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn updatedFields;\n\t\t\t},\n\t\t\t{}\n\t\t);\n\t\t_setState({\n\t\t\tfields: {\n\t\t\t\t...fields,\n\t\t\t\t...updatedFields\n\t\t\t}\n\t\t});\n\t};\n\n\tconst onPropChange = (type, name, propName, value) => {\n\t\tswitch (type) {\n\t\t\tcase PROPERTY_CHANGE_FORM:\n\t\t\t\tif (propName === 'messages') {\n\t\t\t\t\t_setState({\n\t\t\t\t\t\tfields: _.cloneDeep(formData.layout.formFieldValues)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PROPERTY_CHANGE_FIELD: {\n\t\t\t\tconst { fields } = state;\n\t\t\t\tconst gFormFields = formData.layout.formFieldValues;\n\n\t\t\t\tif (!fields[name]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_setState({\n\t\t\t\t\tfields: {\n\t\t\t\t\t\t...fields,\n\t\t\t\t\t\t[name]: _.cloneDeep(gFormFields[name])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase PROPERTY_CHANGE_SECTION:\n\t\t\t\t_updatingState('sections', matchSection(name), {\n\t\t\t\t\t[propName]: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase PROPERTY_CHANGE_RELATED_LIST:\n\t\t\t\t_updatingState('relatedLists', matchRelatedList(name), {\n\t\t\t\t\t[propName]: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst _updateFormHeader = fieldNames => {\n\t\treturn updateItems(\n\t\t\tfieldNames,\n\t\t\tformData.layout.formFieldValues,\n\t\t\tformData\n\t\t);\n\t};\n\n\tconst onLiveUpdated = (fieldNames = []) => {\n\t\tconst status =\n\t\t\tfieldNames.length > 0\n\t\t\t\t? RECORD_STATUS_LIVEUPDATED\n\t\t\t\t: _prevRecordStatus === RECORD_STATUS_MODIFIED\n\t\t\t\t? RECORD_STATUS_MODIFIED\n\t\t\t\t: RECORD_STATUS_UNMODIFIED;\n\t\tif (!formData.record) return;\n\n\t\tconst { table, sysId } = formData.record;\n\t\tif (_updateFormHeader(fieldNames)) {\n\t\t\t_setState({\n\t\t\t\t...state\n\t\t\t});\n\t\t}\n\t\t_handleRecordStatusChanged(status, table, sysId);\n\t};\n\n\tconst onRelatedListChange = (updatedRelatedList) => {\n\t\tconst {\n\t\t\trelatedLists\n\t\t} = state;\n\t\tconst updatedRelatedLists = relatedLists.map(relatedList =>\n\t\t\trelatedList.value === updatedRelatedList.value ? updatedRelatedList : relatedList\n\t\t);\n\n\t\t_setState({\n\t\t\trelatedLists: updatedRelatedLists,\n\t\t});\n\t};\n\t\n\t_setState({\n\t\tfields: _.cloneDeep(formData.layout.formFieldValues),\n\t\tsections: _.cloneDeep(formData.layout.sections),\n\t\trelatedLists: _.cloneDeep(formData.layout.relatedLists)\n\t});\n\n\treturn {\n\t\tonStateChange,\n\t\tonFormSubmit,\n\t\tonChange,\n\t\tonPropChange,\n\t\tonLiveUpdated,\n\t\tsetUpdateState: fn => {\n\t\t\t_updateState = fn;\n\t\t},\n\t\tsetUpdateProps: fn => {\n\t\t\t_updateProps = fn;\n\t\t},\n\t\tonRelatedListChange\n\t};\n};\n","import { createAmbSubscriptionEffect } from '@servicenow/ui-effect-amb';\nimport { actionTypes } from '@servicenow/ui-core';\nconst { COMPONENT_CONNECTED, COMPONENT_DISCONNECTED, COMPONENT_PROPERTY_CHANGED } = actionTypes;\nimport { get, isEqual } from \"lodash\";\n\nexport const LIVEUPDATE_KEY = 'liveUpdateData';\n\nexport const RECORD_WATCH_ACTIONS = {\n\tRECORD_WATCHER_SUBSCRIPTION_CHANGED: 'RECORD_WATCHER_SUBSCRIPTION_CHANGED',\n\tRECORD_WATCHER_SUBSCRIBE_STARTED: 'RECORD_WATCHER_SUBSCRIBE_STARTED',\n\tRECORD_WATCHER_SUBSCRIBED: 'RECORD_WATCHER_SUBSCRIBED',\n\tRECORD_WATCHER_SUBSCRIBE_FAILED: 'RECORD_WATCHER_SUBSCRIBE_FAILED',\n\tRECORD_WATCHER_UNSUBSCRIBED: 'RECORD_WATCHER_UNSUBSCRIBED',\n\tRECORD_WATCHER_ITEM_CHANGED: 'RECORD_WATCHER_ITEM_CHANGED'\n};\n\nconst recordWatcherHandler = createAmbSubscriptionEffect(\n\t'/rw/default/:table/:filter',\n\t{\n\t\tsubscribeStartedActionType:\n\t\t\tRECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIBE_STARTED,\n\t\tsubscribeSucceededActionType:\n\t\t\tRECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIBED,\n\t\tsubscribeFailedActionType:\n\t\t\tRECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIBE_FAILED,\n\t\tunsubscribeSucceededActionType:\n\t\t\tRECORD_WATCH_ACTIONS.RECORD_WATCHER_UNSUBSCRIBED,\n\t\tmessageReceivedActionType:\n\t\t\tRECORD_WATCH_ACTIONS.RECORD_WATCHER_ITEM_CHANGED\n\t}\n);\n\n// exported for unit testing\nexport const getSubscriptionArgs = (table, sysId) => ({\n\ttable,\n\tfilter: btoa(`sys_id=${sysId}`).replace(/=/g, '-')\n});\n\nexport default {\n\tactionHandlers: {\n\t\t[COMPONENT_CONNECTED]: ({ dispatch, properties }) => {\n\t\t\tconst { table, sysId } = properties;\n\t\t\tif (sysId === '-1') return;\n\n\t\t\tdispatch(RECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIPTION_CHANGED, {\n\t\t\t\t...getSubscriptionArgs(table, sysId),\n\t\t\t\tsubscribe: true\n\t\t\t});\n\t\t},\n\t\t[COMPONENT_PROPERTY_CHANGED]: {\n\t\t\teffect: ({ dispatch, properties: {table}, action: { payload: { name, value, previousValue }} }) => {\n\t\t\t\tif (name === 'sysId' && previousValue === '-1' && !isEqual(value, previousValue)) {\n\t\t\t\t\tdispatch(RECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIPTION_CHANGED, {\n\t\t\t\t\t\t...getSubscriptionArgs(table, value),\n\t\t\t\t\t\tsubscribe: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[COMPONENT_DISCONNECTED]: ({ dispatch, properties }) => {\n\t\t\tconst { table, sysId } = properties;\n\t\t\tif (sysId === '-1') return;\n\t\t\tdispatch(RECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIPTION_CHANGED, {\n\t\t\t\t...getSubscriptionArgs(table, sysId),\n\t\t\t\tsubscribe: false\n\t\t\t});\n\t\t},\n\t\t[RECORD_WATCH_ACTIONS.RECORD_WATCHER_SUBSCRIPTION_CHANGED]: {\n\t\t\t...recordWatcherHandler,\n\t\t\tinterceptors: [\n\t\t\t\t{\n\t\t\t\t\tafter: context => {\n\t\t\t\t\t\tconst containerId = context.coeffects.action.meta.id;\n\t\t\t\t\t\tconst subscriptionId = context.effects[0].args[1];\n\t\t\t\t\t\tcontext.effects[0].args[1] = `${containerId}-${subscriptionId}`;\n\t\t\t\t\t\treturn context;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[RECORD_WATCH_ACTIONS.RECORD_WATCHER_ITEM_CHANGED]: {\n\t\t\teffect: ({ state, properties, action }) => {\n\t\t\t\tconst { table, sysId } = properties;\n\t\t\t\tconst { glideEnvironment } = state;\n\t\t\t\tif (!glideEnvironment) return;\n\n\t\t\t\tconst gForm = glideEnvironment.gForm;\n\t\t\t\tif (!gForm) return;\n\n\t\t\t\tconst { data = {} } = action.payload;\n\t\t\t\tconst {\n\t\t\t\t\taction: actionType,\n\t\t\t\t\tchanges,\n\t\t\t\t\ttable_name: changedTable,\n\t\t\t\t\tsys_id: changedSysId,\n\t\t\t\t\trecord\n\t\t\t\t} = data;\n\n\t\t\t\tif (\n\t\t\t\t\tactionType !== 'change' ||\n\t\t\t\t\ttable !== changedTable ||\n\t\t\t\t\tsysId !== changedSysId\n\t\t\t\t)\n\t\t\t\t\treturn;\n\n\t\t\t\tconst username = get(record, 'sys_updated_by.value', '');\n\t\t\t\tconst displayName = get(\n\t\t\t\t\trecord,\n\t\t\t\t\t'sys_updated_by.display_value',\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t\tconst updatedRecord = changes.reduce((acc, fieldName) => {\n\t\t\t\t\tif (record[fieldName]) acc[fieldName] = record[fieldName];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {});\n\n\t\t\t\tif (Object.keys(updatedRecord).length > 0) {\n\t\t\t\t\tgForm.$private.applyLiveUpdate(updatedRecord, {\n\t\t\t\t\t\tusername,\n\t\t\t\t\t\tdisplayName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t}\n\t}\n};\n","module.exports = __TECTONIC__$servicenow_ui_effect_amb;","import UsersQuery from './usersQuery';\n\nimport { createGraphQLActionHandlers } from '@devsnc/library-form';\n\nexport const USER_FETCH_ACTIONS = {\n\tSTART: 'USER_DATA_START_FETCH',\n\tSTARTED: 'USER_DATA_FETCH_STARTED',\n\tSUCCEEDED: 'USER_DATA_FETCH_SUCCEEDED',\n\tFAILED: 'USER_DATA_FETCH_FAILED'\n};\n\nexport const USER_DATA_KEY = 'userData';\n\nexport default createGraphQLActionHandlers(\n\tUSER_FETCH_ACTIONS,\n\tUSER_DATA_KEY,\n\tUsersQuery,\n\t['conditions']\n);\n","export const USERS_QUERY_KEY = 'Users';\nconst UsersQuery = `\n\tquery($conditions: String!) {\n\t\t${USERS_QUERY_KEY}:GlideRecord_Query  {\n\t\t\tsys_user(queryConditions: $conditions, pagination: {limit: 1000}) {\n\t\t\t\t_rowCount\n\t\t\t\t_results {\n\t\t\t\t\tname {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tuser_name {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default UsersQuery;\n","import {\n\tDATASOURCE_NAMES,\n\tcomponentDataSources,\n\tgetConfig,\n\tgetFormModel,\n\tcreateTabRoutes,\n\tDATASOURCE_KEYS\n} from './utils';\nimport _ from 'lodash';\n\nconst componentAdditionProps = {\n\t'now-record-common-header': [],\n\t'now-record-common-sidebar': ['formModel', 'actions', 'sidebarPanelExtras'],\n\t'now-record-common-uiactionbar': ['daModel'],\n\t'now-record-form-blob': [\n\t\t'fields',\n\t\t'sections',\n\t\t'defaultTab',\n\t\t'config',\n\t\t'gForm',\n\t\t'formModal',\n\t\t'currentUser',\n\t\t'hideDetails',\n\t\t'hasErrorMessage',\n\t\t'formTabs',\n\t\t'relatedLists',\n\t\t'relatedItems',\n\t\t'isAttachmentUploadDisabled',\n\t\t'serializedChanges',\n\t\t'encodedRecord',\n\t\t'tabRoutes',\n\t\t'detailsProps',\n\t\t'isReloading'\n\t],\n\t'now-record-form-section-column-layout': ['fields', 'sections', 'config', 'serializedChanges'],\n\t'now-activity-combo': [\n\t\t'active',\n\t\t'isNewRecord',\n\t\t'fields',\n\t\t'table',\n\t\t'sysId',\n\t\t'view'\n\t],\n\t'sn-record-ribbon': ['table', 'sysId'],\n\t'now-activity-stream-compose-connected': [\n\t\t'table',\n\t\t'sysId',\n\t\t'fields',\n\t\t'isNewRecord'\n\t],\n\t'now-activity-stream-connected': [\n\t\t'active',\n\t\t'isNewRecord',\n\t\t'table',\n\t\t'sysId',\n\t\t'view'\n\t],\n\t'now-record-common-attachments-connected': ['table', 'sysId', 'isReadOnly']\n};\n\n// allow to transform props per component\nconst componentPropsTransformer = {};\n\nexport const getPropsTransformation = components => {\n\tconst selectableProps = {\n\t\t...components.reduce(\n\t\t\t(selectableProps, component) => ({\n\t\t\t\t...selectableProps,\n\t\t\t\t[_.camelCase(component)]: {}\n\t\t\t}),\n\t\t\t{\n\t\t\t\t__clientScriptApi: {}\n\t\t\t}\n\t\t)\n\t};\n\n\tconst selectablePropsTransformer = (formData, formModal, gForm, state) => {\n\t\tconst wsConfigSysId = _.get(state, 'behaviors.wsConfigSysId', '');\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\ttable,\n\t\t\t\tsysId,\n\t\t\t\tactive,\n\t\t\t\tdefaultTab,\n\t\t\t\thideDetails,\n\t\t\t\tworkspaceConfigId = wsConfigSysId,\n\t\t\t\tactionConfigId,\n\t\t\t\theaderConfigId,\n\t\t\t\tribbonConfigId,\n\t\t\t\thighlightedValueConfigId,\n\t\t\t\tviewRuleConfigId,\n\t\t\t\tshowActivityStreamInDetails\n\t\t\t},\n\t\t\tclassicForm,\n\t\t\tisReloading\n\t\t} = state;\n\t\tconst record = formData.record;\n\t\tconst config = getConfig(\n\t\t\tformData,\n\t\t\tclassicForm,\n\t\t\tshowActivityStreamInDetails\n\t\t);\n\t\tconst formModel = getFormModel(formData, formModal, gForm);\n\t\tconst daModel = {\n\t\t\t...formModel,\n\t\t\tfields: Object.values(formModel.fields) // DA action executor needs fields in array different than our related items and side panel\n\t\t};\n\t\tconst notifications =\n\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.sessionMessage]].messages;\n\t\tconst currentUser =\n\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.currentUser]];\n\t\tconst formLayoutConfig = _.get(currentUser, 'formLayoutConfig', {});\n\t\tconst layout = formData[DATASOURCE_KEYS[DATASOURCE_NAMES.formLayout]];\n\t\tconst defaultTabOverride =\n\t\t\tdefaultTab || _.get(layout, 'formTabs.defaultTabFocus');\n\t\tconst hideDetailsOverride =\n\t\t\thideDetails || _.get(layout, 'formSettings.isDetailsHidden');\n\t\tconst hasErrorMessage =\n\t\t\tnotifications.findIndex(n => n.type === 'error') > -1;\n\t\tconst { formActions = [] } = formData[\n\t\t\tDATASOURCE_KEYS[DATASOURCE_NAMES.uiAction]\n\t\t];\n\t\tconst isAttachmentUploadDisabled = gForm.isAttachmentUploadDisabled();\n\t\tconst serializedChanges = JSON.stringify(gForm.serialize(true));\n\t\tconst fields = formModel.fields;\n\t\tconst sections = layout.sections;\n\t\tconst formTabs = layout.formTabs;\n\t\tconst encodedRecord = layout.encodedRecord;\n\t\tconst relatedLists = layout.relatedLists;\n\t\tconst relatedItems =\n\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.formDA]].relatedItems;\n\n\t\tconst tabRoutes = createTabRoutes({\n\t\t\trelatedLists,\n\t\t\trelatedItems,\n\t\t\tformModel,\n\t\t\tloadComponent: true\n\t\t});\n\n\t\tconst layoutTypeMap = ['left', 'both', 'right'];\n\n\t\tconst detailsProps = {\n\t\t\tfields,\n\t\t\tsections,\n\t\t\tconfig,\n\t\t\ttable,\n\t\t\tsysId,\n\t\t\tview: record.view,\n\t\t\tserializedChanges,\n\t\t\tencodedRecord,\n\t\t\tactivityStream: formData.activityStream,\n\t\t\tdefaultDisplayedPane: config.showActivityStreamPane\n\t\t\t\t? layoutTypeMap[formLayoutConfig.formLayoutType]\n\t\t\t\t: 'left',\n\t\t\tdefaultDividerPosition: formLayoutConfig.formSizeRatio\n\t\t};\n\n\t\tconst additionState = {\n\t\t\tformModel,\n\t\t\tdaModel,\n\t\t\tmodel: _.omit(formModel, ['fields', 'currentUser']),\n\t\t\tconfig,\n\t\t\tactivityStream:\n\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.activityStream]],\n\t\t\tcurrentUser,\n\t\t\tnotifications,\n\t\t\tgForm,\n\t\t\tformModal,\n\t\t\tattachment:\n\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.attachmentACL]],\n\t\t\tisNewRecord: config.isNewRecord,\n\t\t\tfields,\n\t\t\ttable,\n\t\t\tsysId,\n\t\t\tview: record.view,\n\t\t\tactive,\n\t\t\tworkspaceConfigId,\n\t\t\tactionConfigId,\n\t\t\theaderConfigId,\n\t\t\tribbonConfigId,\n\t\t\thighlightedValueConfigId,\n\t\t\tviewRuleConfigId,\n\t\t\thideDetails: hideDetailsOverride,\n\t\t\tdefaultTab: defaultTabOverride,\n\t\t\thasErrorMessage,\n\t\t\tformTabs,\n\t\t\tsections,\n\t\t\trelatedLists,\n\t\t\trelatedItems,\n\t\t\tactions:\n\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.formDA]]\n\t\t\t\t\t.sidebarActions,\n\t\t\tuiActions: formActions,\n\t\t\tisReadOnly: formData.isReadOnly,\n\t\t\tisAttachmentUploadDisabled,\n\t\t\tserializedChanges,\n\t\t\tencodedRecord,\n\t\t\ttabRoutes,\n\t\t\tdetailsProps,\n\t\t\tisReloading\n\t\t};\n\n\t\tconst componentsDataSourcesMap = componentDataSources(classicForm);\n\n\t\tconst selectableComponentDataProps = components.reduce(\n\t\t\t(props, tag) => {\n\t\t\t\tconst tagKey = _.camelCase(tag);\n\t\t\t\tconst newProps = {\n\t\t\t\t\t...props,\n\t\t\t\t\t[tagKey]: {\n\t\t\t\t\t\t...componentsDataSourcesMap[tag].reduce(\n\t\t\t\t\t\t\t(combinedProps, ds) => ({\n\t\t\t\t\t\t\t\t...combinedProps,\n\t\t\t\t\t\t\t\t...formData[\n\t\t\t\t\t\t\t\t\tDATASOURCE_KEYS[DATASOURCE_KEYS[ds]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t),\n\t\t\t\t\t\t...(componentAdditionProps[tag] || []).reduce(\n\t\t\t\t\t\t\t(object, key) => ({\n\t\t\t\t\t\t\t\t...object,\n\t\t\t\t\t\t\t\t[key]: additionState[key]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst tagTransformer = componentPropsTransformer[tag];\n\t\t\t\tif (!tagTransformer) return newProps;\n\n\t\t\t\tconst oldTagProps = newProps[tagKey];\n\t\t\t\tconst tagProps = Object.keys(oldTagProps).reduce(\n\t\t\t\t\t(combinedProps, prop) => ({\n\t\t\t\t\t\t...combinedProps,\n\t\t\t\t\t\t[prop]: tagTransformer[prop]\n\t\t\t\t\t\t\t? tagTransformer[prop](oldTagProps[prop])\n\t\t\t\t\t\t\t: oldTagProps[prop]\n\t\t\t\t\t}),\n\t\t\t\t\t{}\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\t...newProps,\n\t\t\t\t\t[tagKey]: tagProps\n\t\t\t\t};\n\t\t\t},\n\t\t\t{\n\t\t\t\t__clientScriptApi: gForm\n\t\t\t}\n\t\t);\n\t\treturn selectableComponentDataProps;\n\t};\n\n\treturn {\n\t\tselectableProps,\n\t\tselectablePropsTransformer\n\t};\n};\n","import _ from 'lodash';\nimport { actionTypes } from '@servicenow/ui-core';\nconst { COMPONENT_ERROR_THROWN } = actionTypes;\nimport {\n\tDATASOURCE_NAMES,\n\tDATASOURCE_KEYS\n} from '../sn/clientScript/dataProviders/utils';\nimport {\n\tcreateUpdateDataHelper,\n\tcreateSimpleFormDataProvider\n} from '../sn/clientScript/dataProviders/workspaceSimpleFormDataProvider';\nimport {\n\tdefault as simpleFormFactory,\n\tEVENT_CHANGE,\n\tEVENT_PROPERTY_CHANGE,\n\tPROPERTY_CHANGE_FIELD,\n\tPROPERTY_CHANGE_SECTION\n} from '../sn/clientScript/form/workspaceSimpleFormFactory';\nimport {\n\tPHONE_ADDON_ACTION_CLICK,\n\tOPEN_PHONE,\n\tREFERENCE_INFO_CLICK\n} from '../constants/ScriptingActions';\nimport { gFormActionHandlers } from '../sn/clientScript/form/gFormActions';\nimport { dispatchPreviewRecord } from '@devsnc/library-form';\nconst BEHAVIOR_NAME = 'simpleFormClientScriptEnvironment';\n\nconst isDirty = function(originalValue, newValue) {\n\treturn _.isNil(originalValue)\n\t\t? !_.isNil(newValue)\n\t\t: originalValue !== newValue;\n};\n\nexport const createSimpleFormClientScriptBehavior = () => {\n\tconst updatingProperties = createUpdateDataHelper();\n\tconst createForm = (formData, updateState, properties) => {\n\t\tlet formFieldValues =\n\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.simpleFormLayout]]\n\t\t\t\t.formFieldValues;\n\t\tlet sections =\n\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.simpleFormLayout]]\n\t\t\t\t.sections || [];\n\t\tconst gForm = simpleFormFactory.create(formFieldValues, sections);\n\t\tgForm.$private.events.on(EVENT_CHANGE, (name, oldValue, value) => {\n\t\t\tconst { onDataChanged } = properties;\n\t\t\tformFieldValues[name] = Object.assign(formFieldValues[name], {\n\t\t\t\tisDirty: isDirty(oldValue, value)\n\t\t\t});\n\t\t\t//force new fields object to trigger render\n\t\t\tconst fields = {\n\t\t\t\t...formFieldValues,\n\t\t\t\t[name]: {\n\t\t\t\t\t...formFieldValues[name]\n\t\t\t\t}\n\t\t\t};\n\t\t\tupdateState({ fields });\n\t\t\tonDataChanged &&\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tonDataChanged(fields);\n\t\t\t\t});\n\t\t});\n\n\t\tgForm.$private.events.on(\n\t\t\tEVENT_PROPERTY_CHANGE,\n\t\t\t(type, name, propName, propValue) => {\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase PROPERTY_CHANGE_FIELD:\n\t\t\t\t\t\tformFieldValues[name] = Object.assign(\n\t\t\t\t\t\t\tformFieldValues[name],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[propName]: propValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\t//force new fields object to trigger render\n\t\t\t\t\t\tconst fields = {\n\t\t\t\t\t\t\t...formFieldValues,\n\t\t\t\t\t\t\t[name]: {\n\t\t\t\t\t\t\t\t...formFieldValues[name]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tupdateState({ fields });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PROPERTY_CHANGE_SECTION:\n\t\t\t\t\t\tconst index = sections.findIndex(\n\t\t\t\t\t\t\tsection => section.caption === name\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (index === -1) return;\n\n\t\t\t\t\t\tsections[index] = {\n\t\t\t\t\t\t\t...sections[index],\n\t\t\t\t\t\t\t[propName]: propValue\n\t\t\t\t\t\t};\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tsections: [...sections]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\treturn gForm;\n\t};\n\n\tconst fetchingHandlers = {\n\t\tstartedHandler: {\n\t\t\teffect: ({ updateState }) => {\n\t\t\t\tupdateState({ loading: true });\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\tsucceededHandler: {\n\t\t\teffect: ({\n\t\t\t\tstate,\n\t\t\t\tproperties,\n\t\t\t\taction: {\n\t\t\t\t\tpayload: { data = {} }\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t}) => {\n\t\t\t\tconst { formData } = updatingProperties(\n\t\t\t\t\tdata,\n\t\t\t\t\tstate,\n\t\t\t\t\tproperties\n\t\t\t\t);\n\t\t\t\tconst { onDataLoaded } = properties;\n\t\t\t\tconst gForm = createForm(formData, updateState, properties);\n\t\t\t\tconst formFieldValues =\n\t\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.simpleFormLayout]]\n\t\t\t\t\t\t.formFieldValues;\n\t\t\t\tconst sections =\n\t\t\t\t\tformData[DATASOURCE_KEYS[DATASOURCE_NAMES.simpleFormLayout]]\n\t\t\t\t\t\t.sections || [];\n\t\t\t\tupdateState({\n\t\t\t\t\tformData,\n\t\t\t\t\tfields: formFieldValues,\n\t\t\t\t\tsections,\n\t\t\t\t\tgForm,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t\tonDataLoaded && onDataLoaded({ loaded: true });\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\tfailedHandle: {\n\t\t\teffect: ({ updateState, action }) => {\n\t\t\t\tupdateState({ error: action.payload, loading: false });\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t}\n\t};\n\n\tconst formDataProvider = createSimpleFormDataProvider(fetchingHandlers);\n\n\treturn {\n\t\tname: BEHAVIOR_NAME,\n\t\tactionHandlers: {\n\t\t\t...formDataProvider.actionHandlers,\n\t\t\t...gFormActionHandlers.actionHandlers,\n\t\t\t[COMPONENT_ERROR_THROWN]: ({ action: { payload } }) => {\n\t\t\t\tconsole.log(`error:`, payload);\n\t\t\t},\n\t\t\t[REFERENCE_INFO_CLICK]: {\n\t\t\t\teffect: ({ action, dispatch }) => {\n\t\t\t\t\tconst referenceInfoClick = _.get(\n\t\t\t\t\t\taction,\n\t\t\t\t\t\t'payload.referenceInfoClick',\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\tconst {\n\t\t\t\t\t\treferencetable: refTable,\n\t\t\t\t\t\tsys_id: refSysId\n\t\t\t\t\t} = referenceInfoClick;\n\t\t\t\t\tdispatchPreviewRecord(dispatch, {\n\t\t\t\t\t\ttable: refTable,\n\t\t\t\t\t\tsysId: refSysId\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstopPropagation: true\n\t\t\t},\n\t\t\t[PHONE_ADDON_ACTION_CLICK]: {\n\t\t\t\teffect: ({ action, dispatch, state, properties }) => {\n\t\t\t\t\tconst phoneNumber = _.get(\n\t\t\t\t\t\taction,\n\t\t\t\t\t\t'payload.phoneNumber',\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttable: recordTable,\n\t\t\t\t\t\tsysId: recordSysId\n\t\t\t\t\t} = properties;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tformData: { tableDisplayValue, recordDisplayValue } = {}\n\t\t\t\t\t} = state;\n\n\t\t\t\t\tdispatch(OPEN_PHONE, {\n\t\t\t\t\t\ttype: OPEN_PHONE,\n\t\t\t\t\t\ttable: recordTable,\n\t\t\t\t\t\tsysId: recordSysId,\n\t\t\t\t\t\tphoneNumber,\n\t\t\t\t\t\ttableName: tableDisplayValue,\n\t\t\t\t\t\tdisplayValue: recordDisplayValue\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstopPropagation: true\n\t\t\t}\n\t\t}\n\t};\n};\n","import _ from 'lodash';\nimport { QUERY_PREFIX } from '../../../resources/EnvironmentQuery';\nimport { createDataProvider, getFetchActions } from '@devsnc/library-form';\nimport {\n\tgetDataSourcesForComponents,\n\tDATASOURCE_NAMES,\n\tisReadonly\n} from './utils';\n\nconst DATA_PROVIDER = 'simple-form-data-provider';\n\nexport const fetchFormDataActions = getFetchActions(DATA_PROVIDER);\n\nconst dataSources = getDataSourcesForComponents('', [\n\t'sn-form-internal-simple-form'\n]);\n\nconst updatingProperties = (data, state, properties) => {\n\tconst { table, sysId, views, query, view } = properties;\n\tconst computedView = view;\n\tconst isWhitelistedForEdit = true;\n\n\tconst record = {\n\t\ttable,\n\t\tsysId,\n\t\tviews,\n\t\tquery,\n\t\tview: computedView,\n\t\tisWhitelistedForEdit\n\t};\n\tconst isFormReadonly = isReadonly(\n\t\tstate,\n\t\tcomputedView,\n\t\tisWhitelistedForEdit\n\t);\n\tconst isMissingWorkspaceView = isFormReadonly && !isWhitelistedForEdit;\n\n\t// clear the data fetchers\n\tconst newState = {\n\t\t...state,\n\t\trecord,\n\t\tisFormReadonly\n\t};\n\n\tconst update = Object.keys(dataSources).reduce((update, name) => {\n\t\tconst updatedData =\n\t\t\tname === DATASOURCE_NAMES.simpleFormLayout\n\t\t\t\t? dataSources[name].transform(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tnewState,\n\t\t\t\t\t\tproperties,\n\t\t\t\t\t\t(update.declarativeUIActions || {})\n\t\t\t\t\t\t\t.declarativeFieldActions\n\t\t\t\t  )\n\t\t\t\t: dataSources[name].transform(data, newState, properties);\n\t\treturn {\n\t\t\t...update,\n\t\t\t[name]: updatedData\n\t\t};\n\t}, {});\n\n\treturn {\n\t\tformData: {\n\t\t\tisReadOnly: isFormReadonly,\n\t\t\tisMissingWorkspaceView,\n\t\t\trecord: {\n\t\t\t\t...record,\n\t\t\t\tsys_id: update[DATASOURCE_NAMES.simpleFormLayout].sysId\n\t\t\t},\n\t\t\t...update\n\t\t}\n\t};\n};\n\nconst createGraphQLHandlers = () => ({\n\tstartedHandler: {\n\t\teffect: ({ updateState }) => {\n\t\t\tupdateState({ loading: true });\n\t\t},\n\t\tstopPropagation: true\n\t},\n\tsucceededHandler: {\n\t\teffect: ({\n\t\t\tstate,\n\t\t\taction: {\n\t\t\t\tpayload: { data = {} }\n\t\t\t},\n\t\t\tupdateState,\n\t\t\tproperties\n\t\t}) => {\n\t\t\tupdateState({\n\t\t\t\tformData: updatingProperties(data, state, properties)\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\tfailedHandle: {\n\t\teffect: ({ updateState, action }) => {\n\t\t\tupdateState({ loading: false, error: action.payload });\n\t\t},\n\t\tstopPropagation: true\n\t}\n});\n\nexport const createUpdateDataHelper = () => (data, state, properties) => {\n\treturn updatingProperties(data, state, properties);\n};\n\nconst getQueryTemplate = () => {\n\treturn `query($table: String!, $sysId: String, $view: String!, $query: String!, $workspaceConfigId: String, $actionConfigId: String) {\n\t\t<<queries>>\n\t}`;\n};\n\nexport const createSimpleFormDataProvider = fetchingHandlers => {\n\treturn createDataProvider({\n\t\tname: DATA_PROVIDER,\n\t\tdataSources: Object.values(dataSources),\n\t\tqueryTemplate: getQueryTemplate(),\n\t\tvariableParams: {\n\t\t\ttable: { mandatory: true },\n\t\t\tview: { mandatory: false },\n\t\t\tsysId: { mandatory: false },\n\t\t\tquery: { mandatory: false },\n\t\t\tworkspaceConfigId: { mandatory: false },\n\t\t\tactionConfigId: { mandatory: false }\n\t\t},\n\t\tgetParams(properties, state) {\n\t\t\tconst {\n\t\t\t\ttable,\n\t\t\t\tview,\n\t\t\t\tsysIds,\n\t\t\t\tquery = '',\n\t\t\t\tworkspaceConfigId = '',\n\t\t\t\tactionConfigId = ''\n\t\t\t} = properties;\n\t\t\treturn {\n\t\t\t\ttable,\n\t\t\t\tquery,\n\t\t\t\tsysId: sysIds.split(',')[0],\n\t\t\t\tview,\n\t\t\t\tworkspaceConfigId,\n\t\t\t\tactionConfigId\n\t\t\t};\n\t\t},\n\t\tgraphqlHandlers: fetchingHandlers || createGraphQLHandlers()\n\t});\n};\n","import { GFORM_ACTIONS } from '../form/gFormActions';\nconst VALIDATE_SUCCEEDED = 'GFORM#VALIDATE_SUCCEEDED';\nconst VALIDATE_FAILED = 'GFORM#VALIDATE_FAILED';\n\nexport function validateFormEffect(options = {}, { dispatch }) {\n\tconst {\n\t\tsuccessActionName = VALIDATE_SUCCEEDED,\n\t\terrorActionName = VALIDATE_FAILED\n\t} = options;\n\n\ttry {\n\t\tdispatch(GFORM_ACTIONS.GFORM_VALIDATE, {\n\t\t\tsuccessActionName,\n\t\t\terrorActionName\n\t\t});\n\t} catch (error) {\n\t\tdispatch(errorActionName);\n\t}\n}\n\n/**\n * Effect that triggers gform validation and dispatches a success/error event based on the result\n * @function createValidateFormEffect\n * @example\n * import {createValidateFormEffect} from '@devsnc/sn-scripting-environment';\n *\n * const VALIDATE_SUCCEEDED = 'VALIDATE_SUCCEEDED';\n * const VALIDATE_FAILED = 'VALIDATE_FAILED';\n * const VALIDATE_START = 'VALIDATE_START';\n *\n * const validateFormEffect = createValidateFormEffect({\n *      successActionName: VALIDATE_SUCCEEDED,\n *      errorActionName: VALIDATE_FAILED\n * });\n *\n * // Register with component action handlers:\n * {\n *     actionHandlers: {\n *         [VALIDATE_START]: validateFormEffect,\n *         [VALIDATE_SUCCEEDED]: () => {...},\n *         [VALIDATE_FAILED]: () => {...}\n *     }\n * }\n *\n * @param {Object} options\n * @param {String} options.successActionName - Action to be dispatched when the validation complete and form is valid\n * @param {Object} options.errorActionName -Action to be dispatched when the validation complete and form is NOT valid\n * @return {Object} Validate Effect Descriptor\n */\nexport default function createValidateFormEffect(options) {\n\treturn {\n\t\teffect: validateFormEffect,\n\t\targs: [options]\n\t};\n}\n"],"sourceRoot":""}