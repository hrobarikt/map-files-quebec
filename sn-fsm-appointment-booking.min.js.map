{"version":3,"sources":["webpack://__TECTONIC__sn_fsm_appointment_booking/webpack/bootstrap","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/constants.js","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__sn_uxpage_presource_18_0_2\"","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__moment_timezone_0_5_26\"","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__sn_fsm_appointment_booking/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/styles.scss","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/styles.scss?7ce7","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/util.js","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/queries.js","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__$servicenow_ui_effect_http\"","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/actions.js","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__$servicenow_now_loader\"","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__sn_fsm_appointment_booking/external \"__TECTONIC__$servicenow_now_appointment_calendar\"","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/view.js","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/fsmAppointmentBooking.js","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/sn-fsm-appointment-booking/index.js","webpack://__TECTONIC__sn_fsm_appointment_booking/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_uiCore","ACTION_PREFIX","INTERNAL_DATE_TIME_FORMAT","FETCH_URL","POST_URL","APMT_CAL_ACTION_PREFIX","SELECTED_SLOT_SCHEMA","type","properties","startDateTimeUTC","endDateTimeUTC","SYS_ID_SCHEMA","pattern","ACTIONS","INIT","COMPONENT_BOOTSTRAPPED","actionTypes","INTERNAL_ERROR","APPOINTMENT_SLOTS_FETCHED","SLOTS_FETCH_SUCCEEDED","SLOTS_FETCH_FAILED","SUBMIT_APPOINTMENT","SUBMIT_SUCCEEDED","SUBMIT_FAILED","APPOINTMENT_BOOKING_CONFIG_FETCHED","APPOINTMENT_BOOKING_CONFIG_FETCH_SUCCEEDED","APPOINTMENT_BOOKING_CONFIG_FETCH_FAILED","SCHEDULE_APPOINTMENT","RESCHEDULE_APPOINTMENT","RANGE_UPDATED","EVENT_TYPES","AVAILABLE","UNAVAILABLE","SELECTED","LOCALE_MAP","en","es","it","et","zt","xl","fi","pb","pl","fr","ko","pt","ja","ru","tr","zh","sv","he","nb","hu","cs","de","th","fq","nl","VIEWS","WEEK","DAY","__TECTONIC__sn_uxpage_presource_18_0_2","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__moment_timezone_0_5_26","__TECTONIC__sn_translate","__TECTONIC__$servicenow_ui_core","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","result","getMomentEquivalentDateFormat","dateFormat","userPreferredDateFormat","dateFormatSeperator","possibleSeperators","momentDateFormatMapper","dd","yyyy","momentDateFormat","index","seperator","indexOf","dateFormatArray","split","dateEntity","slice","_constants","slotType","slot","selectedAppointment","start_dateUTC","end_dateUTC","available","formatSlot","arguments","undefined","start","start_date","end","end_date","startEndDates","date","firstDayOfWeek","futureBookableDays","addBuffer","clone","startOf","add","endOf","subtract","isBefore","_momentTimezone2","default","isAfter","format","fetch_slots_post_data","task_table","taskId","otherInputs","opened_for","location","catalog_id","field_mapping","get_next_available_slot","full_day","submit_post_data","state","startMoment","endMoment","startDateUTC","utc","_f","endDateUTC","actualStartDate","tz","timezone","actualEndDate","taskTable","locationId","catalogId","openedFor","openedForId","reschedule","appointmentConfigQuery","__TECTONIC__$servicenow_ui_effect_http","_uiEffectHttp","_snUxpagePresource","_queries","_util","_snTranslate","apptBknConfigActionHandlers","createHttpEffect","queryParams","method","successActionType","errorActionType","_defineProperty","_apptBknConfigActionH","_ref","action","dispatch","updateState","config","payload","service_config","future_bookable_max_days","getBehaviorProp","firstLastDays","contextDate","calendarView","view_scale","toUpperCase","data","_ref2","error","message","apptAvailabilityActionHandlers","dataParams","batch","_apptAvailabilityActi","_ref3","formated_slots","availability","find","e","moment","time_zone","filter","today","nextAvailableEvent","next_available_slot","appointment_slots","slots_start_date","meta","request","slots_end_date","_ref4","submitApptActionHandlers","_submitApptActionHand","_ref5","success","_ref6","actionHandlers","_ref7","missingValues","_extends3","_ref8","event","_ref9","_ref10","isSameOrAfter","isSameOrBefore","_ref11","__TECTONIC__$servicenow_now_loader","__TECTONIC__$servicenow_now_modal","__TECTONIC__$servicenow_now_appointment_calendar","view","_uiRendererSnabbdom","createElement","className","timeFormat","getProperty","window","ux_globals","sysprops","replace","app-title","first-day-of-week","context-date","time-format","show-in-modal","next-available-event","events","size","_view","_actions","nowSettingsPresource","createPreSourceBehavior","transform","GlideDomain_Query","locale","user","language","time_format","createCustomElement","renderer","snabbdom","schema","behaviors","styles"],"mappings":"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","file":"sn-fsm-appointment-booking.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","import {actionTypes} from '@servicenow/ui-core';\n\nexport const INTERNAL_DATE_TIME_FORMAT = \t'YYYY-MM-DD HH:mm:ss';\nexport const FETCH_URL = '/api/sn_apptmnt_booking/v1/appointment/appointment';\nexport const POST_URL = '/api/sn_apptmnt_booking/v1/appointment/appointment';\n\nexport const ACTION_PREFIX = 'SN_FSM_APPOINTMENT_BOOKING#';\nexport const APMT_CAL_ACTION_PREFIX = 'NOW_APPOINTMENT_CALENDAR#';\n\nexport const SELECTED_SLOT_SCHEMA = {\n\ttype: 'object',\n\tproperties: {\n\t\tstartDateTimeUTC: {type: 'string'},\n\t\tendDateTimeUTC: {type: 'string'}\n\t}\n};\nexport const SYS_ID_SCHEMA = {\n\ttype: 'string',\n\tpattern: '^[a-f0-9]{32}$'\n};\n\nexport const ACTIONS = {\n\t/**\n\t * Fired on bootstrap of the component, validates properties and dispatched event to fetch appointment booking config\n\t */\n\tINIT: `${ACTION_PREFIX}INIT`,\n\tCOMPONENT_BOOTSTRAPPED: actionTypes.COMPONENT_BOOTSTRAPPED,\n\n\tINTERNAL_ERROR: `${ACTION_PREFIX}INTERNAL_ERROR`,\n\n\t/**\n\t * Appointment Booking Availablility Network call (HTTP POST) to fetch slots\n\t */\n\tAPPOINTMENT_SLOTS_FETCHED: `${ACTION_PREFIX}APPOINTMENT_SLOTS_FETCHED`,\n\t/**\n\t * Appointment Booking Availablility Network call success\n\t */\n\tSLOTS_FETCH_SUCCEEDED: `${ACTION_PREFIX}SLOTS_FETCH_SUCCEEDED`,\n\t/**\n\t * Appointment Booking Availablility Network call failure, raises INTERNAL_ERROR\n\t */\n\tSLOTS_FETCH_FAILED: `${ACTION_PREFIX}SLOTS_FETCH_FAILED`,\n\n\t/**\n\t * Submit Appointment Network call (HTTP POST) \n\t */\n\tSUBMIT_APPOINTMENT: `${ACTION_PREFIX}SUBMIT_APPOINTMENT`,\n\t/**\n\t * Submit Appointment Network call (HTTP POST) success, raises \n\t * - NOW_MODAL#OPENED_SET { value: false }\n\t * - SN_SCRIPTED_MODAL#DATA_SET {success: true}\n\t */\n\tSUBMIT_SUCCEEDED: `${ACTION_PREFIX}SUBMIT_SUCCEEDED`,\n\t/**\n\t * Submit Appointment Network call (HTTP POST) failure, raises \n\t * - INTERNAL_ERROR\n\t * - NOW_MODAL#OPENED_SET { value: false }\n\t * - SN_SCRIPTED_MODAL#DATA_SET {success: false}\n\t */\n\tSUBMIT_FAILED: `${ACTION_PREFIX}SUBMIT_FAILED`,\n\n\t/**\n\t * Appointment Booking Config Network call\n\t */\n\tAPPOINTMENT_BOOKING_CONFIG_FETCHED: `${ACTION_PREFIX}APPOINTMENT_BOOKING_CONFIG_FETCHED`,\n\t/**\n\t * Appointment Booking Config Network call success\n\t */\n\tAPPOINTMENT_BOOKING_CONFIG_FETCH_SUCCEEDED: `${ACTION_PREFIX}APPOINTMENT_BOOKING_CONFIG_FETCH_SUCCEEDED`,\n\t/**\n\t * Appointment Booking Config Network call failure, raises INTERNAL_ERROR\n\t */\n\tAPPOINTMENT_BOOKING_CONFIG_FETCH_FAILED: `${ACTION_PREFIX}APPOINTMENT_BOOKING_CONFIG_FETCH_FAILED`,\n\t\n\tSCHEDULE_APPOINTMENT: `${APMT_CAL_ACTION_PREFIX}SCHEDULE_APPOINTMENT`,\n\tRESCHEDULE_APPOINTMENT: `${APMT_CAL_ACTION_PREFIX}RESCHEDULE_APPOINTMENT`,\n\tRANGE_UPDATED: `${APMT_CAL_ACTION_PREFIX}RANGE_UPDATED`,\n};\n\nexport const EVENT_TYPES = {\n\tAVAILABLE: 'available',\n\tUNAVAILABLE: 'unavailable',\n\tSELECTED: 'selected'\n};\n\nexport const LOCALE_MAP = {\n\t'en': 'en',\n\t'es': 'es',\n\t'it': 'it',\n\t'et': 'et',\n\t'zt': 'zh-cn',\n\t'xl': 'x-pseudo',\n\t'fi': 'fi',\n\t'pb': 'pt-br',\n\t'pl': 'pl',\n\t'fr': 'fr',\n\t'ko': 'ko',\n\t'pt': 'pt',\n\t'ja': 'ja',\n\t'ru': 'ru',\n\t'tr': 'tr',\n\t'zh': 'zh-cn',\n\t'sv': 'sv',\n\t'he': 'he',\n\t'nb': 'nb',\n\t'hu': 'hu',\n\t'cs': 'cs',\n\t'de': 'de',\n\t'th': 'th',\n\t'fq': 'fa-ca',\n\t'nl': 'nl'\n};\n\nexport const VIEWS = {\n\tWEEK: 'WEEK',\n\tDAY: 'DAY'\n};","module.exports = __TECTONIC__sn_uxpage_presource_18_0_2;","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__moment_timezone_0_5_26;","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_ui_core;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".padded-center{min-height:100px;display:flex;justify-content:center;align-items:center;font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {EVENT_TYPES, INTERNAL_DATE_TIME_FORMAT} from './constants';\nimport moment from 'moment-timezone';\n\nexport function getMomentEquivalentDateFormat(dateFormat) {\n\tconst userPreferredDateFormat = dateFormat;\n\tlet dateFormatSeperator = '';\n\tconst possibleSeperators = ['.', '-', '/'];\n\tconst momentDateFormatMapper = {'dd':'DD','yyyy':'YYYY'};\n\tlet momentDateFormat = '';\n\tfor (let index = 0; index < possibleSeperators.length; index++) {\n\t\tconst seperator = possibleSeperators[index];\n\t\tif ( userPreferredDateFormat.indexOf(seperator) !== -1) {\n\t\t\tdateFormatSeperator = seperator;\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst dateFormatArray = userPreferredDateFormat.split(dateFormatSeperator);\n\tfor (let index = 0; index < dateFormatArray.length; index++) {\n\t\tconst dateEntity = dateFormatArray[index];\n\t\tmomentDateFormat += (momentDateFormatMapper[dateEntity] ? momentDateFormatMapper[dateEntity]: dateFormatArray[index]) + dateFormatSeperator;\n\t}\n\n\tmomentDateFormat = momentDateFormat.slice(0, -1);\n\treturn momentDateFormat;\n}\n\nexport const slotType = (slot, selectedAppointment) => {\n\tif(slot.start_dateUTC == selectedAppointment.startDateTimeUTC && slot.end_dateUTC == selectedAppointment.endDateTimeUTC){\n\t\treturn EVENT_TYPES.SELECTED;\n\t}\n\n\treturn slot.available ?\n\t\tEVENT_TYPES.AVAILABLE : EVENT_TYPES.UNAVAILABLE;\n};\n\nexport const formatSlot = (slot, selectedAppointment = {}) => ({\n\tstart: slot.start_date,\n\tend: slot.end_date,\n\ttype: slotType(slot, selectedAppointment)\n});\n\nexport const startEndDates = (date, firstDayOfWeek, futureBookableDays, addBuffer) => {\n\tlet start_date = date.clone();\n\tstart_date.startOf('week');\n\tstart_date.add(firstDayOfWeek, 'days');\n\n\tlet end_date = date.clone();\n\tend_date.endOf('week');\n\tend_date.add(firstDayOfWeek, 'days');\n\t\n\tif (addBuffer) {\n\t\tstart_date.subtract(1,'days');\n\t\tend_date.add(1,'days');\n\t}\n\n\tif (start_date.isBefore(moment())) {\n\t\tstart_date = moment().startOf('day');\n\t}\n\n\tif (end_date.isAfter(moment().add(futureBookableDays, 'days'))) {\n\t\tend_date = moment().endOf('day').add(futureBookableDays, 'days');\n\t}\n\t\n\treturn {\n\t\tstart_date: start_date.format(INTERNAL_DATE_TIME_FORMAT),\n\t\tend_date: end_date.format(INTERNAL_DATE_TIME_FORMAT)\n\t}\n};\n","export const fetch_slots_post_data = (start_date, end_date, task_table, taskId, otherInputs, opened_for, location, catalog_id, field_mapping, get_next_available_slot) => ({\n\tstart_date,\n\tend_date,\n\tlocation,\n\tcatalog_id,\n\tfield_mapping, \n\ttask_table,\n\ttaskId,\n\totherInputs,\n\topened_for,\n\t'full_day': true,\n\tget_next_available_slot\n});\n\nexport const submit_post_data = (state, startMoment, endMoment) => ({\n\tstartDateUTC: startMoment.utc().format(startMoment._f),\n\tendDateUTC: endMoment.utc().format(endMoment._f),\n\tactualStartDate:startMoment.tz(state.timezone).format(startMoment._f),\n\tactualEndDate:endMoment.tz(state.timezone).format(endMoment._f),\n\ttaskTable: state.taskTable,\n\tlocation: state.properties.locationId,\n\tcatalogId: state.properties.catalogId || state.catalogId,\n\topenedFor: state.properties.openedForId,\n\ttaskId: state.properties.taskId,\n\treschedule: state.properties.selectedAppointment.startDateTimeUTC ? true : false,\n\tfield_mapping: state.field_mapping,\n\ttimezone: state.timezone\n});\n\nexport const appointmentConfigQuery = `query ($queryParams: String!) {\n\tGlideRecord_Query {\n\t\tsn_apptmnt_booking_service_config (queryConditions: $queryParams){\n\t\t\t_results {\n\t\t\t\tlocation{\n\t\t\t\t\t_reference {\n\t\t\t\t\t\tname{\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t},\n\t\t\t\t\t\tquestion_text{\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tuser_contact{\n\t\t\t\t\t_reference {\n\t\t\t\t\t\tname{\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tquestion_text{\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfuture_bookable_max_days {\n\t\t\t\t\tvalue\n\t\t\t\t},\n\t\t\t\tcatalog_item {\n\t\t\t\t\tvalue\n\t\t\t\t},\n\t\t\t\tappointment_booking_config {\n\t\t\t\t\t_reference {\n\t\t\t\t\t\tportal_view {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttask_table {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n","module.exports = __TECTONIC__$servicenow_ui_effect_http;","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport { getBehaviorProp } from 'sn-uxpage-presource';\n\nimport moment from 'moment-timezone';\n\nimport {fetch_slots_post_data, submit_post_data} from './queries';\nimport {ACTIONS, INTERNAL_DATE_TIME_FORMAT, EVENT_TYPES} from './constants';\nimport {formatSlot, startEndDates} from './util';\nimport { t } from 'sn-translate';\n\n\nconst apptBknConfigActionHandlers = {\n\t[ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCHED]: createHttpEffect('/api/sn_apptmnt_booking/appointment/configuration', {\n\t\tqueryParams: ['catalog_id'],\n\t\tmethod: 'GET',\n\t\tsuccessActionType: ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCH_SUCCEEDED,\n\t\terrorActionType: ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCH_FAILED\n\t}),\n\t[ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCH_SUCCEEDED]: ({action, state, properties,dispatch, updateState}) => {\n\t\tconst config = action.payload.result;\n\t\tconst futureBookableDays = config.service_config.future_bookable_max_days; \n\t\tconst field_mapping = config.service_config.field_mapping;\n\t\t\n\t\tconst firstDayOfWeek = getBehaviorProp(state, 'now-settings').firstDayOfWeek;\n\t\tconst firstLastDays = startEndDates(moment(state.contextDate), firstDayOfWeek, futureBookableDays, true);\n\t\t\n\t\tconst calendarView = config.view_scale.toUpperCase();\n\t\tconst taskTable = config.task_table;\n\t\t\n\t\tconst {catalogId} = properties;\n\n\t\tupdateState({field_mapping, futureBookableDays, catalogId, calendarView, taskTable});\n\t\t\n\t\t// PARAMS fetch_slots_post_data(start_date, end_date, task_table, opened_for, locationId, catalogId, field_mapping, get_next_available_slot)\n\t\tdispatch(ACTIONS.APPOINTMENT_SLOTS_FETCHED, {data: fetch_slots_post_data(\n\t\t\tfirstLastDays.start_date,\n\t\t\tfirstLastDays.end_date,\n\t\t\ttaskTable,\n\t\t\tstate.properties.taskId,\n\t\t\tstate.properties.otherInputs,\n\t\t\tstate.properties.openedForId,\n\t\t\tstate.properties.locationId,\n\t\t\tcatalogId,\n\t\t\tfield_mapping,\n\t\t\ttrue)});\n\t},\n\t[ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCH_FAILED]: ({dispatch}) => {\n\t\tconst error = {\n\t\t\tmessage: 'Failed to fetch appointment booking configuration. Please contact your administrator.',\n\t\t\ttype: ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCH_FAILED\n\t\t};\n\t\tdispatch(ACTIONS.INTERNAL_ERROR, error);\n\t}\n};\n\t\nconst apptAvailabilityActionHandlers = {\n\t[ACTIONS.APPOINTMENT_SLOTS_FETCHED]: createHttpEffect('/api/sn_apptmnt_booking/v1/appointment/availability', {\n\t\tmethod: 'POST',\n\t\tdataParams: 'data',\n\t\tsuccessActionType: ACTIONS.SLOTS_FETCH_SUCCEEDED,\n\t\terrorActionType: ACTIONS.SLOTS_FETCH_FAILED,\n\t\tbatch: false\n\t}),\n\t[ACTIONS.SLOTS_FETCH_SUCCEEDED]: ({action: {payload}, action, state, properties, updateState}) => {\n\t\tconst slots = payload.result.availability;\n\t\t\n\t\tlet formated_slots = slots.map((slot) => formatSlot(slot, properties.selectedAppointment));\n\n\t\tif (properties.selectedAppointment.startDateTimeUTC)\n\t\t\tif (!formated_slots.find(e => e.type == EVENT_TYPES.SELECTED)) {\n\t\t\t\tformated_slots.push ({\n\t\t\t\t\tstart: moment.tz(properties.selectedAppointment.startDateTimeUTC, 'UTC').tz(payload.result.time_zone).format(INTERNAL_DATE_TIME_FORMAT),\n\t\t\t\t\tend: moment.tz(properties.selectedAppointment.endDateTimeUTC, 'UTC').tz(payload.result.time_zone).format(INTERNAL_DATE_TIME_FORMAT),\n\t\t\t\t\ttype: EVENT_TYPES.SELECTED\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\tconst timezone = payload.result.time_zone;\n\n\t\tformated_slots = formated_slots.filter( slot => {\n\t\t\tvar start = moment.tz(slot.start, timezone);\n\t\t\tvar end = moment.tz(slot.end, timezone);\n\t\t\tvar today = moment.tz(moment(), timezone).startOf('day');\n\t\t\treturn start.isAfter(today) && end.isBefore(today.add(state.futureBookableDays, 'days').endOf('day'));\n\t\t});\n\n\t\tupdateState({\n\t\t\tnextAvailableEvent: payload.result.next_available_slot ? formatSlot(payload.result.next_available_slot) : state.nextAvailableEvent,\n\t\t\tappointment_slots: formated_slots,\n\t\t\ttimezone,\n\t\t\tslots_start_date: moment(action.meta.request.data.start_date),\n\t\t\tslots_end_date: moment(action.meta.request.data.end_date)\n\t\t});\n\t\t\n\t},\n\t[ACTIONS.SLOTS_FETCH_FAILED]: ({dispatch}) => {\n\t\tconst error = {\n\t\t\tmessage: t('Failed to fetch appointment slots. Please contact your administrator.'),\n\t\t\ttype: ACTIONS.SLOTS_FETCH_FAILED\n\t\t};\n\t\tdispatch(ACTIONS.INTERNAL_ERROR, error);\n\t}\n};\n\nconst submitApptActionHandlers = {\n\t[ACTIONS.SUBMIT_APPOINTMENT]: createHttpEffect('/api/sn_apptmnt_booking/v1/appointment/appointment', {\n\t\tmethod: 'POST',\n\t\tdataParams: 'data',\n\t\tsuccessActionType: ACTIONS.SUBMIT_SUCCEEDED,\n\t\terrorActionType: ACTIONS.SUBMIT_FAILED,\n\t\tbatch: false\n\t}),\n\t[ACTIONS.SUBMIT_SUCCEEDED]: ({action: {payload}, dispatch}) => {\n\t\tdispatch('NOW_MODAL#OPENED_SET', {value: false});\n\t\tdispatch('SN_SCRIPTED_MODAL#DATA_SET', {success: true, payload});\n\n\t},\n\t[ACTIONS.SUBMIT_FAILED]: ({dispatch}) => {\n\t\tconst error = {\n\t\t\tmessage: t('Failed to submit appointment. Please contact your administrator.'),\n\t\t\ttype: ACTIONS.SUBMIT_FAILED\n\t\t};\n\t\tdispatch(ACTIONS.INTERNAL_ERROR, error);\n\t\tdispatch('NOW_MODAL#OPENED_SET', {value: false});\n\t\tdispatch('SN_SCRIPTED_MODAL#DATA_SET', {success: false});\n\t}\n}\n\nexport const actionHandlers = {\n\t// ---------- INIT ----------\n\t[ACTIONS.COMPONENT_BOOTSTRAPPED]: ({dispatch, properties, updateState}) => {\n\t\tlet contextDate = moment().startOf('day');\n\t\tif (properties.selectedAppointment.startDateTimeUTC) {\n\t\t\tcontextDate = moment.tz(properties.selectedAppointment.startDateTimeUTC, 'UTC').startOf('day');\n\t\t}\n\n\t\tupdateState({contextDate});\n\n\t\tlet missingValues = [];\n\t\tif (!properties.taskId) missingValues.push('Task ID');\n\t\tif (!properties.openedForId) missingValues.push('Opened For(contact)');\n\n\t\tif (missingValues.length != 0) {\n\t\t\tdispatch(ACTIONS.INTERNAL_ERROR, {\n\t\t\t\tmessage: t('Please provide information for the following fields: {0}',  missingValues.join(', ')),\n\t\t\t\ttype: 'INVALID PROPERTIES'\n\t\t\t}); \n\t\t} else {\n\t\t\tdispatch(ACTIONS.APPOINTMENT_BOOKING_CONFIG_FETCHED,{catalog_id: properties.catalogId});\n\t\t}\n\t},\n\n\t// ---------- Network Calls ----------\n\t...apptBknConfigActionHandlers,\n\t...apptAvailabilityActionHandlers,\n\t...submitApptActionHandlers,\n\n\t//---------- now-appointment-calendar Actions ----------\n\t[ACTIONS.SCHEDULE_APPOINTMENT]: ({dispatch, state, action: {payload}}) => {\n\t\tdispatch(ACTIONS.SUBMIT_APPOINTMENT, {data: submit_post_data(state, payload.action.event.startMoment, payload.action.event.endMoment)});\n\t},\n\t[ACTIONS.RESCHEDULE_APPOINTMENT]: ({dispatch, state, action: {payload}}) => {\n\t\tdispatch(ACTIONS.SUBMIT_APPOINTMENT, {data: submit_post_data(state, payload.action.event.startMoment, payload.action.event.endMoment)});\n\t},\n\t[ACTIONS.RANGE_UPDATED]: ({action: {payload}, dispatch, state, updateState}) => {\n\t\tconst firstDayOfWeek = getBehaviorProp(state, 'now-settings').firstDayOfWeek;\n\n\t\tconst firstLastDays = startEndDates(payload.startMoment, firstDayOfWeek, state.futureBookableDays, true);\n\n\t\tif (moment(firstLastDays.start_date).isSameOrAfter(state.slots_start_date) && moment(firstLastDays.end_date).isSameOrBefore(state.slots_end_date)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (state.properties.selectedAppointment.startDateTimeUTC)\n\t\t\tupdateState({appointment_slots: [state.appointment_slots.find(e => e.type == EVENT_TYPES.SELECTED)]});\n\t\telse\n\t\t\tupdateState({appointment_slots: []});\n\t\t\t\n\t\tdispatch(ACTIONS.APPOINTMENT_SLOTS_FETCHED, {\n\t\t\tdata: fetch_slots_post_data (\n\t\t\t\tfirstLastDays.start_date,\n\t\t\t\tfirstLastDays.end_date,\n\t\t\t\tstate.taskTable,\n\t\t\t\tstate.properties.taskId,\n\t\t\t\tstate.properties.otherInputs,\n\t\t\t\tstate.properties.openedForId,\n\t\t\t\tstate.properties.locationId,\n\t\t\t\tstate.catalogId,\n\t\t\t\tstate.field_mapping\n\t\t\t)});\n\t},\n\n\t// ERROR HANDLING\n\t[ACTIONS.INTERNAL_ERROR]: ({action: {payload}, dispatch, updateState}) => {\n\t\n\t\tconst error = {\n\t\t\tmessage: payload.message,\n\t\t\ttype: payload.type\n\t\t};\n\n\t\tupdateState({error});\n\t\tdispatch('SN_SCRIPTED_MODAL#DATA_SET', {error});\n\t}\n};","module.exports = __TECTONIC__$servicenow_now_loader;","module.exports = __TECTONIC__$servicenow_now_modal;","module.exports = __TECTONIC__$servicenow_now_appointment_calendar;","import '@servicenow/now-appointment-calendar';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-loader';\nimport {t} from 'sn-translate';\nimport { getBehaviorProp } from 'sn-uxpage-presource';\nimport { getProperty } from \"sn-uxpage-presource\";\n\nimport {VIEWS, INTERNAL_DATE_TIME_FORMAT} from './constants';\n\nexport const view = (state) => {\n\tif(state.error) {\n\t\treturn (\n\t\t\t<div className='padded-center'>\n\t\t\t\t{state.error.message}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif(state.timezone && !state.error && state.contextDate) {\n\t\tconst firstDayOfWeek = getBehaviorProp(state, 'now-settings').firstDayOfWeek;\n\t\tconst tf = getProperty(\"glide.sys.time_format\", \"HH:mm:ss\");\n\t\tlet timeFormat = window.ux_globals.sysprops[\"glide.sys.time_format\"] || \"HH:mm:ss\";\n\t\ttimeFormat = timeFormat.replace(\":ss\", \"\");\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<now-appointment-calendar\n\t\t\t\t\tapp-title={state.properties.selectedAppointment.startDateTimeUTC ? t('Reschedule Appointment') : t('Schedule Appointment')}\n\t\t\t\t\tfirst-day-of-week={firstDayOfWeek}\n\t\t\t\t\tview={VIEWS[state.calendarView]}\n\t\t\t\t\tcontext-date={state.contextDate.format(INTERNAL_DATE_TIME_FORMAT)}\n\t\t\t\t\ttimezone={state.timezone}\n\t\t\t\t\ttime-format={timeFormat}\n\t\t\t\t\tshow-in-modal={true}\n\t\t\t\t\tnext-available-event={state.nextAvailableEvent ? state.nextAvailableEvent : '' }\n\t\t\t\t\tevents={state.appointment_slots}>\n\t\t\t\t</now-appointment-calendar>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div className=\"padded-center\"><now-loader size=\"lg\"></now-loader></div>;\n\t}\n};\n","import {createCustomElement} from '@servicenow/ui-core';\nimport {snabbdom}from '@servicenow/ui-renderer-snabbdom';\nimport {createPreSourceBehavior} from 'sn-uxpage-presource';\n\nimport {view} from './view';\nimport {actionHandlers} from './actions';\nimport {LOCALE_MAP, SELECTED_SLOT_SCHEMA, SYS_ID_SCHEMA} from './constants';\nimport styles from './styles.scss';\n\nconst nowSettingsPresource = createPreSourceBehavior(\n\t'sn-fsm-appointment-booking',\n\t{\n\t\tname: 'now-settings',\n\t\ttransform: (data) => {\n\t\t\tif (!data.data || !data.data.GlideDomain_Query) {\n\t\t\t\treturn {\n\t\t\t\t\tfirstDayOfWeek: 0,\n\t\t\t\t\tlocale: 'en',\n\t\t\t\t\ttimeFormat: 'hh:mm A'\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tlet nowSettings = {\n\t\t\t\tfirstDayOfWeek: data.data.GlideDomain_Query.firstDayOfWeek.value != null ? data.data.GlideDomain_Query.firstDayOfWeek.value : 0,\n\t\t\t\tlocale: LOCALE_MAP[data.data.GlideDomain_Query.user.language],\n\t\t\t\ttimeFormat: data.data.GlideDomain_Query.time_format.value.replace(\":ss\", \"\")\n\t\t\t};\n\t\t\treturn nowSettings;\n\t\t}\n\t}\n);\n\n/**\n * A thin wrapper component around now-appointment-calendar to handle the data layer/ business logic.\n *  + The wrapper component handles the network calls (fetch / post)\n *  + Converting the data into format required by now-appointment-calendar\n *  + Convert the post data into the format needed by end point\n *\n * @summary A component is a small, re-usable bit of code used to make UIs.\n * @seismicElement my-component\n */\ncreateCustomElement('sn-fsm-appointment-booking', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tview,\n\tactionHandlers,\n\tproperties: {\n\t\t/**\n     * Appointments are created for the record in tables extending the Task table.\n\t\t * Pass the SysId of the task on which the appointment should be made\n     * @type {sys_id}\n     */\n\t\ttaskId : {\n\t\t\tschema: SYS_ID_SCHEMA //TODO: replace with sysId from @seismic/types\n\t\t},\n\t\t/**\n     * Location of the appointment, pass SysId from cmn_location (or extending) table\n     * @type {sys_id}\n     */\n\t\tlocationId : {\n\t\t\tschema: SYS_ID_SCHEMA\n\t\t},\n\t\t/**\n     * The user for which the appointment is being booked, pass SysId from sys_user (or extending) table\n     * @type {sys_id}\n     */\n\t\topenedForId: {\n\t\t\tschema: SYS_ID_SCHEMA\n\t\t},\n\t\t\t/**\n     * Ever appointment booking setup in sn_apptmnt_booking_service_config needs a catalog item to be configured.\n\t\t * Pass SysId of the catalog item setup in sn_apptmnt_booking_service_config.\n     * @type {sys_id}\n     */\n\t\tcatalogId : {\n\t\t\tschema: SYS_ID_SCHEMA\n\t\t},\n\t\t/**\n     * To change to Reschedule mode, if nothing is passed in the correct format the component starts in Schedule mode.\n\t\t * If an appointment for the task exists, pass the startDateTimeUTC and endDateTimeUTC in on of the accepted formats:\n\t\t * - UTC MS\n\t\t * - GlideDate Internal format (yyyy-MM-dd HH:MM:SS) - Interpreted in the same timezone as passed in the timezone attribute\n\t\t * - ISO Date format\n\t\t * - Moment format\n     */\n\t\tselectedAppointment: {\n\t\t\tdefault: {},\n\t\t\tschema: SELECTED_SLOT_SCHEMA\n\t\t},\n\t\totherInputs : {\n\t\t\ttype: \"object\"\n\t\t}\n\t},\n\tbehaviors: [nowSettingsPresource],\n\tstyles\n});\n\n// selectedAppointment format\n// {\n// \tstartDateTimeUTC: '2020-01-17 03:30:00',\n// \tendDateTimeUTC: '2020-01-17 05:30:00'\n// }\n","import './fsmAppointmentBooking';","import './sn-fsm-appointment-booking';\n"],"sourceRoot":""}