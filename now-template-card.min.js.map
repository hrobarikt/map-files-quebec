{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_template_card/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_library_enhanced_element_19_8_3\"","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_library_enhanced_utils_19_8_3\"","webpack://__TECTONIC__$servicenow_now_template_card/./src/_now-card-template.scss?8a41","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_now_card\"","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__$servicenow_now_template_card/./src/index.js","webpack://__TECTONIC__$servicenow_now_template_card/./src/now-template-card-omnichannel.js","webpack://__TECTONIC__$servicenow_now_template_card/./src/_now-card-template.scss","webpack://__TECTONIC__$servicenow_now_template_card//mnt/jenkins/workspace/motive_design-system_quebec-LAU4EC4LTND4QOM764JRONU2HSYHYZ6QDWUSLZIXTBP7KKZ7BWQQ/target/checkout/node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_template_card/./src/now-template-card-attachment.js","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_now_icon\"","webpack://__TECTONIC__$servicenow_now_template_card/./src/now-template-card-assist.js","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_now_label_value\"","webpack://__TECTONIC__$servicenow_now_template_card/external \"__TECTONIC__$servicenow_library_schemas_19_8_3\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__$servicenow_library_enhanced_element_19_8_3","__TECTONIC__$servicenow_library_enhanced_utils_19_8_3","result","toString","__TECTONIC__$servicenow_now_card","__TECTONIC__sn_translate","__TECTONIC__$servicenow_now_dropdown","createNowTemplateCardAssistDriver","createNowTemplateCardAttachmentDriver","createNowTemplateCardOmnichannelDriver","version","require","registry","window","___NOW_DESIGN_SYSTEM_PACKAGES___","createEnhancedElement","properties","tagline","schema","type","label","icon","heading","level","enum","content","actions","items","variant","disabled","clickActionType","actionHandlers","makeRedispatchEffect","view","state","className","lines","undefined","slots","defaultSlot","styles","dispatches","push","useSourceMap","list","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","identifier","src","alt","caption","actionsSchema","dropdowns","slot","size","_renderIdentifier","__TECTONIC__$servicenow_now_icon","translatable","contentSchema","contentItemMinWidth","footerContent","reversed","configAria","oneOf","button","configAriaSchema","additionalProperties","selected","default","manageable","manageSelected","configAriaToUse","manage-selected","config-aria","interaction","align","item-min-width","truncated","wrapped","__TECTONIC__$servicenow_now_label_value","__TECTONIC__$servicenow_library_schemas_19_8_3"],"mappings":"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","file":"now-template-card.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__$servicenow_library_enhanced_element_19_8_3;","module.exports = __TECTONIC__$servicenow_library_enhanced_utils_19_8_3;","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./_now-card-template.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __TECTONIC__$servicenow_now_card;","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_now_dropdown;","import './now-template-card-omnichannel';\nimport './now-template-card-attachment';\nimport './now-template-card-assist';\nexport {\n\tcreateNowTemplateCardAssistDriver,\n\tcreateNowTemplateCardAttachmentDriver,\n\tcreateNowTemplateCardOmnichannelDriver\n} from '../drivers';\n\n/*\n * TODO: This is a temporary way of debugging customer problems during the\n * Seismic 18 upgrade process, because tectonic resolution makes it hard to\n * know what version of a component is running. Remove when not needed.\n * Intentionally runs in dev + production environments so we can debug all builds.\n */\nconst {name, version} = require('../package.json');\nconst registry = (window.___NOW_DESIGN_SYSTEM_PACKAGES___ =\n\twindow.___NOW_DESIGN_SYSTEM_PACKAGES___ || {});\nif (!registry[name]) {\n\tregistry[name] = version;\n}\n","import {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport {makeRedispatchEffect} from '@servicenow/library-enhanced-utils';\nimport styles from './_now-card-template.scss';\nimport '@servicenow/now-card';\n\nconst view = (state) => {\n\tconst {tagline, heading, content, actions} = state.properties;\n\treturn (\n\t\t<now-card className=\"now-template-card-now-card\">\n\t\t\t<div className=\"now-template-card-container\">\n\t\t\t\t<now-card-header\n\t\t\t\t\tclassName=\"now-m-block-end--sm\"\n\t\t\t\t\ttagline={tagline}\n\t\t\t\t\theading={\n\t\t\t\t\t\theading\n\t\t\t\t\t\t\t? {label: heading.label, level: heading.level, lines: 1}\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<slot>\n\t\t\t\t\t{content ? (\n\t\t\t\t\t\t<dl className=\"now-template-card-omnichannel-content\">\n\t\t\t\t\t\t\t<div className=\"now-line-height-crop\">\n\t\t\t\t\t\t\t\t<dt>{content.label}</dt>\n\t\t\t\t\t\t\t\t<dd>{content.value}</dd>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tundefined\n\t\t\t\t\t)}\n\t\t\t\t</slot>\n\t\t\t\t<now-card-actions\n\t\t\t\t\tclassName=\"now-template-card-footer\"\n\t\t\t\t\titems={actions}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</now-card>\n\t);\n};\n\n/**\n * Omnichannel template cards provide a method to reveal content that enables a user's\n * interaction. Omnichannel template cards provide a summary and view for a task, workflow\n * or event. Omnichannel template cards allow users to quickly and conveniently take actions\n * on task, workflows, or events without going into those specific objects.\n *\n * ```jsx\n * <now-template-card-omnichannel\n * \t tagline={{icon: \"chat-outline\", label: 'Chat CH0001081'}}\n * \t heading=\"Something is broken\"\n * \t content={{\n * \t   label: 'Joe Employee',\n * \t   value: 'San Diego Tech Lounge'\n * \t }}\n * \t actions={[\n * \t   {label: 'Decline', variant: 'secondary-negative'},\n * \t   {label: 'Approve', variant: 'secondary-positive'}\n * \t ]}\n * />\n * ```\n *\n * @seismicElement now-template-card-omnichannel\n * @summary Omnichannel template cards provide a method for revealing content that\n * enables a user's interaction.\n */\ncreateEnhancedElement('now-template-card-omnichannel', {\n\tproperties: {\n\t\t/**\n\t\t * An object with properties to configure a tagline/title for the card:\n\t\t * - `label`: Tagline text context\n\t\t * - `icon`: Icon that appears before the tagline `label`\n\t\t * @type {{label: string, icon: string}}\n\t\t */\n\t\ttagline: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string'},\n\t\t\t\t\ticon: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The most prominent text. This is the text description of the card.\n\t\t * Required\n\t\t * - `label`: Text content\n\t\t * - `level = 3`: HTML heading element number used to render a heading\n\t\t * @type {{label: string, level: (1|2|3|4|5|6)}}\n\t\t */\n\t\theading: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string'},\n\t\t\t\t\tlevel: {type: 'number', enum: [1, 2, 3, 4, 5, 6]}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * An object with properties to configure the label and value in the content.\n\t\t * `label`: Label text displayed above the value\n\t\t * `value`: Value text displayed below the label\n\t\t * @type {{ label: string, value: string}}\n\t\t */\n\t\tcontent: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Array of objects that define buttons displayed.\n\t\t * The keys of each object are properties for `now-button`. See\n\t\t * `now-button` for more information on these properties.\n\t\t * - `label: string` (Required): Label describing the action\n\t\t * - `icon: string`: Icon displayed with the label\n\t\t * - `variant: string`: Button style variant\n\t\t * - `disabled: boolean`: Whether to mute the button color and disallow user click interactions\n\t\t * - `clickActionType: string = \"NOW_TEMPLATE_CARD_OMNICHANNEL#ACTION_CLICKED\"`: Overrides the default action type dispatched when the user clicks on the action\n\t\t * Required\n\t\t * @type {{ label: string, icon: string, variant: string, disabled: boolean, clickActionType: string}[]}\n\t\t */\n\t\tactions: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: {type: 'string'},\n\t\t\t\t\t\ticon: {type: 'string'},\n\t\t\t\t\t\tvariant: {type: 'string'},\n\t\t\t\t\t\tdisabled: {type: 'boolean'},\n\t\t\t\t\t\tclickActionType: {type: 'string'}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t'NOW_CARD_ACTIONS#ACTION_CLICKED': makeRedispatchEffect(\n\t\t\t'NOW_TEMPLATE_CARD_OMNICHANNEL#ACTION_CLICKED'\n\t\t)\n\t},\n\tview,\n\tslots: {\n\t\t/**\n\t\t * Content placed in the default slot of the now-template-card-omnichannel\n\t\t * appears inside the body of the now-template-card-omnichannel,\n\t\t * taking the place of the `content`.\n\t\t * @defaultSlot\n\t\t */\n\t\tdefaultSlot: {}\n\t},\n\tstyles,\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when a user clicks the card action button. The payload contains\n\t\t * the configuration of the action as passed into the `actions` property.\n\t\t * @type {{action: Object}}\n\t\t */\n\t\t'NOW_TEMPLATE_CARD_OMNICHANNEL#ACTION_CLICKED': {}\n\t}\n});\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}:host{display:block}.now-template-card-now-card{height:inherit}.now-template-card-now-card .now-line-height-crop:after,.now-template-card-now-card .now-line-height-crop:before{content:\\\"\\\";display:block;height:0}.now-template-card-now-card .now-line-height-crop:before{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-template-card-now-card .now-line-height-crop:after{margin-block-end:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-template-card-now-card .now-line-height-crop+.now-template-card-now-card .now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1*-1)}.now-template-card-container{display:flex;flex-direction:column;height:100%;font-style:normal;font-weight:400;font-variant:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;text-indent:0;text-shadow:none;white-space:normal}.now-template-card-footer{margin-block-start:auto;padding-block-start:.5rem}.now-template-card-omnichannel-content{margin-block-start:0;margin-block-end:0;font-size:1rem;line-height:1.25;color:RGB(var(--mv9-ztTXjrzt-JrZp-vTmAJ8rmmtj--JvjvZ,var(--now-color_text--tertiary,var(--now-color--neutral-9,99,114,116))))}.now-template-card-omnichannel-content dd{margin-inline-start:0}.now-template-card-attachment-image{width:32px;height:32px}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport {makeRedispatchEffect} from '@servicenow/library-enhanced-utils';\nimport styles from './_now-card-template.scss';\nimport '@servicenow/now-card';\nimport '@servicenow/now-icon';\nimport {t} from 'sn-translate';\nimport {itemsSchema as actionsSchema} from '@servicenow/now-dropdown';\n\nconst _renderIdentifier = (identifier) => {\n\tif (identifier && identifier.type) {\n\t\tconst {type, icon, src, alt} = identifier;\n\t\treturn type === 'icon' ? (\n\t\t\t<now-icon slot=\"identifier\" icon={icon} size=\"xl\" />\n\t\t) : (\n\t\t\t<img\n\t\t\t\tslot=\"identifier\"\n\t\t\t\tclassName=\"now-template-card-attachment-image\"\n\t\t\t\tsrc={src}\n\t\t\t\talt={alt}\n\t\t\t/>\n\t\t);\n\t}\n};\n\nconst view = (state) => {\n\tconst {identifier, heading, actions, caption} = state.properties;\n\treturn (\n\t\t<now-card className=\"now-template-card-now-card\">\n\t\t\t<now-card-header\n\t\t\t\theading={{label: heading.label, level: heading.level}}\n\t\t\t\tcaption={{label: caption}}\n\t\t\t\tdropdowns={\n\t\t\t\t\tactions\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: t('Actions'),\n\t\t\t\t\t\t\t\t\ticon: 'ellipsis-v-outline',\n\t\t\t\t\t\t\t\t\titems: actions\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: undefined\n\t\t\t\t}>\n\t\t\t\t{_renderIdentifier(identifier)}\n\t\t\t</now-card-header>\n\t\t</now-card>\n\t);\n};\n\n/**\n * Attachment template cards are a subset of the record template card.\n * Attachment template cards are best used to show a file has been or will be\n * added to a record.\n *\n * ```jsx\n * <now-template-card-attachment\n *   identifier={type: 'icon', icon: 'clipboard-outline'}\n *   heading=\"Pasted Image\"\n *   caption=\"49.8 KB\"\n *   actions={[\n *     {id: 'share', label: 'Copy URL'},\n *     {id: 'close', label: 'Mark Complete'}\n *   ]}\n * />\n * ```\n *\n * @seismicElement now-template-card-attachment\n * @summary Attachment template cards are best used to show a file has been or\n * will be added to a record.\n */\ncreateEnhancedElement('now-template-card-attachment', {\n\tproperties: {\n\t\t/**\n\t\t * This object can be configured with the following keys:\n\t\t * - `type: ('icon' | 'image')`: Type of identifier to display\n\t\t *\n\t\t * For `type` of \"icon\":\n\t\t * - `icon: string`: Icon to be displayed as the identifier for the card template\n\t\t *\n\t\t * For `type` of \"image\":\n\t\t * - `src: string`: Location of the image to display in the card template\n\t\t * - `alt: string`: Alt tag for the <img/>\n\t\t * @type {{type: ('icon'|'image'), icon: string, src: string, alt: string}}\n\t\t */\n\t\tidentifier: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\ttype: {type: 'string', enum: ['icon', 'image']},\n\t\t\t\t\ticon: {type: 'string'},\n\t\t\t\t\tsrc: {type: 'string'},\n\t\t\t\t\talt: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The most prominent text. This is the text description of the card.\n\t\t * Required\n\t\t * - `label`: Text content\n\t\t * - `level = 3`: HTML heading element number used to render the heading\n\t\t * @type {{label: string, level: (1|2|3|4|5|6)}}\n\t\t */\n\t\theading: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string'},\n\t\t\t\t\tlevel: {type: 'number', enum: [1, 2, 3, 4, 5, 6]}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Caption describing the attachment.\n\t\t * Required\n\t\t * @type {string}\n\t\t */\n\t\tcaption: {schema: {type: 'string'}},\n\t\t/**\n\t\t * Array that defines actions displayed at the top of the card.\n\t\t *\n\t\t * The keys of each object are properties for a `now-dropdown` item.\n\t\t * See `now-dropdown` for more information.\n\t\t * @type {{id: (string|number), label: string}[]}\n\t\t */\n\t\tactions: {schema: actionsSchema}\n\t},\n\tactionHandlers: {\n\t\t'NOW_CARD_HEADER#ACTION_CLICKED': makeRedispatchEffect(\n\t\t\t'NOW_TEMPLATE_CARD_ATTACHMENT#ACTION_CLICKED'\n\t\t)\n\t},\n\tview,\n\tstyles,\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when the user clicks a card action in the dropdown.\n\t\t * The payload contains the configuration of the action as passed into the\n\t\t * `actions` property.\n\t\t * @type {{action: Object}}\n\t\t */\n\t\t'NOW_TEMPLATE_CARD_ATTACHMENT#ACTION_CLICKED': {}\n\t}\n});\n","module.exports = __TECTONIC__$servicenow_now_icon;","import {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport {makeRedispatchEffect} from '@servicenow/library-enhanced-utils';\nimport styles from './_now-card-template.scss';\nimport '@servicenow/now-card';\nimport '@servicenow/now-label-value';\nimport {t} from 'sn-translate';\nimport {itemsSchema as contentSchema} from '@servicenow/now-label-value';\nimport {itemsSchema as actionsSchema} from '@servicenow/now-dropdown';\nimport {configAriaSchema} from '@servicenow/library-schemas';\n\nconst view = (state) => {\n\tconst {\n\t\ttagline,\n\t\tactions,\n\t\theading,\n\t\tcontent,\n\t\tcontentItemMinWidth,\n\t\tfooterContent,\n\t\tconfigAria,\n\t\tselected,\n\t\tmanageSelected\n\t} = state.properties;\n\n\tconst configAriaToUse = (configAria && configAria.button) || configAria;\n\n\treturn (\n\t\t<now-card\n\t\t\tclassName=\"now-template-card-now-card\"\n\t\t\tselected={selected}\n\t\t\tmanage-selected={manageSelected}\n\t\t\tconfig-aria={{\n\t\t\t\tbutton: {'aria-label': heading.label, ...configAriaToUse}\n\t\t\t}}\n\t\t\tinteraction=\"select\">\n\t\t\t<div className=\"now-template-card-container\">\n\t\t\t\t<now-card-header\n\t\t\t\t\tclassName=\"now-m-block-end--sm\"\n\t\t\t\t\ttagline={tagline}\n\t\t\t\t\theading={\n\t\t\t\t\t\theading\n\t\t\t\t\t\t\t? {label: heading.label, level: heading.level, lines: 2}\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\tdropdowns={\n\t\t\t\t\t\tactions\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: t('Actions'),\n\t\t\t\t\t\t\t\t\t\ticon: 'ellipsis-v-outline',\n\t\t\t\t\t\t\t\t\t\titems: actions\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<slot>\n\t\t\t\t\t<now-label-value-stacked\n\t\t\t\t\t\titems={content}\n\t\t\t\t\t\talign=\"horizontal-equal\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\titem-min-width={contentItemMinWidth}\n\t\t\t\t\t\ttruncated\n\t\t\t\t\t\twrapped\n\t\t\t\t\t/>\n\t\t\t\t</slot>\n\t\t\t\t{footerContent ? (\n\t\t\t\t\t<now-card-footer className=\"now-template-card-footer\">\n\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\tlabel={footerContent.label}\n\t\t\t\t\t\t\tvalue={footerContent.value}\n\t\t\t\t\t\t\treversed={footerContent.reversed}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</now-card-footer>\n\t\t\t\t) : (\n\t\t\t\t\tundefined\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</now-card>\n\t);\n};\n\n/**\n * Exposes relevant information from an assist record to help the user make a decision\n * or to provide context.\n *\n * ```jsx\n * <now-template-card-assist\n * \t tagline={{icon: \"tree-view-long-outline\", label: 'Process'}}\n * \t actions={[\n * \t   {id: 'share', label: 'Copy URL'},\n * \t   {id: 'close', label: 'Mark Complete'}\n * \t ]}\n * \t heading=\"Submit attachment to malware sandbox and review the results\"\n * \t content={[\n * \t   {label: 'State', value: {type: 'string', value: 'Closed'}},\n * \t   {label: 'Assigned', value: {type: 'string', value: 'Carla S'}},\n * \t   {label: 'Priority', value: {type: 'string', value: 'Low'}},\n * \t   {label: 'SLA', value: {type: 'string', value: 'No SLA Set'}}\n * \t ]}\n * \t footer-content={{\n * \t   label: 'Updated',\n * \t   value: '2019-01-15 08:41:09'\n * \t }}\n * />\n * ```\n *\n * @seismicElement now-template-card-assist\n * @summary Displays a summary of an assist record.\n * @uib.label Template card\n * @uib.icon template-card-assist\n * @uib.description Displays a summary of an assist record\n * @uib.category primitives\n * @uib.associatedTypes global.core\n * @uib.properties tagline, actions, heading, content, footerContent, selected, contentItemMinWidth, configAria\n * @uib.actions NOW_TEMPLATE_CARD_ASSIST#SELECTED_SET\n * @uib.slots\n */\n// TODO: re-enable slots in UIB when we can support\ncreateEnhancedElement('now-template-card-assist', {\n\tproperties: {\n\t\t/**\n\t\t * Object with properties to configure a tagline/title for the card:\n\t\t * - `label`: Tagline text context.\n\t\t * - `icon`: Icon that appears before the tagline `label`.\n\t\t * @type {{label: string, icon: string}}\n\t\t * @uib.description Properties to configure a tagline and title for the card.\n\t\t * @uib.defaultValue {\"label\": \"Tagline\", \"icon\": \"tree-view-long-outline\"}\n\t\t */\n\t\ttagline: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string', translatable: true},\n\t\t\t\t\ticon: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Array that defines actions displayed at the top of the card.\n\t\t *\n\t\t * The keys of each object are properties for a `now-dropdown` item.\n\t\t * See `now-dropdown` for more information.\n\t\t * @type {{id: (string|number), label: string}[]}\n\t\t * @uib.description Defines actions displayed in the dropdown.\n\t\t * @uib.defaultValue [{\"id\": \"action1\", \"label\": \"Dropdown Item 1\"}, {\"id\": \"action2\", \"label\": \"Dropdown Item 2\"}]\n\t\t */\n\t\tactions: {schema: actionsSchema},\n\t\t/**\n\t\t * Text description of the card. Required.\n\t\t * - `label`: Text content.\n\t\t * - `level`: HTML heading element number used to render heading. Default value: 3\n\t\t * @type {{label: string, level: (1|2|3|4|5|6)}}\n\t\t * @uib.description The text description of the card.\n\t\t * @uib.defaultValue {\"label\": \"Card Heading\", \"level\": 3}\n\t\t */\n\t\theading: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string', translatable: true},\n\t\t\t\t\tlevel: {type: 'number', enum: [1, 2, 3, 4, 5, 6]}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Array of objects that define the label-values displayed in the content.\n\t\t * The keys of each object are configuration for the `items` property in\n\t\t * `now-label-value-stacked`. See `now-label-value-stacked` for more information.\n\t\t *\n\t\t * - `label`: String. Text displayed as a label. Required.\n\t\t * - `value`: String, Object, or Object[]. A single value or an array of values. Required.\n\t\t *\n\t\t * Each `value` can be a string for a simple value or an object for more\n\t\t * complex values. Object values are configured with the following keys:\n\t\t *\n\t\t * string type:\n\t\t * - `type`: String. Renders the value as a string.\n\t\t * - `value`: String. Current value.\n\t\t * - `previous`: String. Previous value (crossed out).\n\t\t *\n\t\t * highlighted-value type (See `now-highlighted-value` documentation for details.):\n\t\t * - `type`: String. Enter \"highlighted-value\" to render the value with now-highlighted-value component.\n\t\t *\n\t\t * text-link type (See `now-text-link` documentation for details.):\n\t\t * - `type`: String. Enter \"text-link\" to render the value with now-text-link component.\n\t\t * @type {{label: string, values: (string|Object|Object[])}[]}\n\t\t * @uib.description Defines how the label values display in the content.\n\t\t * @uib.defaultValue [{\"label\": \"Content Label1\", \"value\": \"Content Value1\"}, {\"label\": \"Content Label2\", \"value\": {\"type\":\"string\", \"value\": \"Content Value2\"}}]\n\t\t */\n\t\tcontent: {schema: contentSchema},\n\t\t/**\n\t\t * Sets the minimum width for the items of the `content`. This is the point at\n\t\t * which the content items wrap to a new line.\n\t\t * Use this property in conjunction with `content`.\n\t\t * The value in this property maps to `now-label-value-stacked[item-min-width]`\n\t\t *\n\t\t * The value must have units.\n\t\t * @type {string}\n\t\t * @uib.label Content item min. width\n\t\t * @uib.description Sets the minimum width for the items of the content. This is the point at which the content items wrap to a new line. Use this property in conjunction with content. The value in this property maps to now-label-value-stacked[item-min-width]\n\t\t * @uib.defaultValue 300\n\t\t */\n\t\tcontentItemMinWidth: {schema: {type: 'string'}},\n\t\t/**\n\t\t * Object that defines the label value displayed in the footer.\n\t\t * The keys of the object are properties for a `now-label-value-inline`.\n\t\t * See `now-label-value-inline` for more documentation on these properties.\n\t\t *\n\t\t * - `label`: String. Text displayed as a label. Required.\n\t\t * - `value`: String. Text displayed as a value. Required.\n\t\t * - `reversed`: Boolean. When true, reverses the label and value order.\n\t\t * @type {{label: string, value: string, reversed: boolean}}\n\t\t * @uib.description Defines how the label value displays in the footer.\n\t\t * @uib.defaultValue {\"label\": \"Footer Label\", \"value\": \"Footer Value\", \"reversed\": false}\n\t\t */\n\t\tfooterContent: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: {type: 'string', translatable: true},\n\t\t\t\t\tvalue: {type: 'string', translatable: true},\n\t\t\t\t\treversed: {type: 'boolean'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * An object whose keys reference a specific HTML element within the\n\t\t * now-card. The value of each key is an object that contains an ARIA\n\t\t * property (or properties) and corresponding value/s. These ARIA\n\t\t * properties are set on the specified element.\n\t\t * The 'button' key corresponds to the inner html `<button>` in\n\t\t * now-card. The card's aria-label is set to the card header text by\n\t\t * default, but can be overridden by setting aria-label through this property.\n\t\t * See https://www.w3.org/TR/wai-aria-1.1/#button for properties and accepted values.\n\t\t * @type {{ 'aria-*': string }}\n\t\t * @uib.label ARIA properties\n\t\t * @uib.description ARIA properties that are set on the inner html. The 'button' key corresponds to the inner html `<button>` in the card. The card's aria-label is set to the card header text by default, but can be overridden by setting aria-label through this property. See https://www.w3.org/TR/wai-aria-1.1/#button for properties and accepted values\n\t\t * @uib.defaultValue {}\n\t\t */\n\t\tconfigAria: {\n\t\t\tschema: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tbutton: configAriaSchema\n\t\t\t\t\t\t},\n\t\t\t\t\t\tadditionalProperties: false\n\t\t\t\t\t},\n\t\t\t\t\tconfigAriaSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Maps to the `selected` property in `now-card`.\n\t\t * Use `manage-selected` to override the default behavior and handle the\n\t\t * `NOW_TEMPLATE_CARD_ASSIST#SELECTED_SET` action manually.\n\t\t * @type {boolean}\n\t\t * @uib.description Indicates the selected state of the card.\n\t\t */\n\t\tselected: {default: false, manageable: true, schema: {type: 'boolean'}}\n\t},\n\tview,\n\tactionHandlers: {\n\t\t'NOW_CARD#SELECTED_SET': makeRedispatchEffect(\n\t\t\t'NOW_TEMPLATE_CARD_ASSIST#SELECTED_SET'\n\t\t)\n\t},\n\tslots: {\n\t\t/**\n\t\t * Content placed in the default slot of the now-template-card-assist\n\t\t * card appear inside the body of the card, taking the place\n\t\t * of the `content`.\n\t\t * @defaultSlot\n\t\t */\n\t\tdefaultSlot: {}\n\t},\n\tstyles,\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when the user clicks the card body. Set the `manage-selected`\n\t\t * property to override the default behavior and handle this action manually.\n\t\t * @type {{value: boolean}}\n\t\t * @uib.description Dispatched when the user clicks the card body\n\t\t */\n\t\t'NOW_TEMPLATE_CARD_ASSIST#SELECTED_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object'\n\t\t\t}\n\t\t}\n\t}\n});\n","module.exports = __TECTONIC__$servicenow_now_label_value;","module.exports = __TECTONIC__$servicenow_library_schemas_19_8_3;"],"sourceRoot":""}