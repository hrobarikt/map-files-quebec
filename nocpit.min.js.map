{"version":3,"sources":["webpack://__TECTONIC__nocpit/webpack/bootstrap","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$devsnc_library_opws_mapping_shared\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__lodash_4_17_15\"","webpack://__TECTONIC__nocpit/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/constants.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_ui_effect_http\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/transforms.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_heading\"","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/nocTilemapSelectGroupEffect.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/index.js","webpack://__TECTONIC__nocpit/./src/noc-popover-behavior/index.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/createNocElement.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/utils.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/userViewsUtils.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumConsts.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/constants.js","webpack://__TECTONIC__nocpit/./src/sn-noc-views/userViewsConstants.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/settingsModalEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_tooltip\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_text_link\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_icon\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_label_value\"","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/clearServicePreviewDataEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree-behaviors/nocServiceGroupsEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/saveCurrentUserViewEffect.js","webpack://__TECTONIC__nocpit/./src/sn-noc-views/userViewSaveAsModalEffect.js","webpack://__TECTONIC__nocpit/./src/noc-global-filter/effectGetFilterCountHandler.js","webpack://__TECTONIC__nocpit/./src/noc-breadcrumb/nocBreadcrumbEffect.js","webpack://__TECTONIC__nocpit/./src/noc-severity-indicators-bar/nocSeverityIndicatorBarEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_alert\"","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-element-with-tooltip/index.js","webpack://__TECTONIC__nocpit/./src/noc-field-select/view.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/index.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/comparators/ordinalComparator.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/removeFromFavoritesEffect.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/addToFavoritesEffect.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/generatePreviewId.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/getServicePreviewEffect.js","webpack://__TECTONIC__nocpit/./src/noc-popover-behavior/nocPopoverOpenCloseEffect.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/createActionConfig.js","webpack://__TECTONIC__nocpit/./src/noc-app/nocVisibilityChangeEffect.js","webpack://__TECTONIC__nocpit/./src/noc-app/effectAlertSelected.js","webpack://__TECTONIC__nocpit/./src/noc-app/effectImpactedServices.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree-behaviors/utils/serviceGroupBuckets.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree-behaviors/nocGetServiceGroupsBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-changes-notificator-behavior/nocChangeEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/userViewMutationEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/handleUserViewResponseEffect.js","webpack://__TECTONIC__nocpit/./src/noc-initial-data-behavior/getPopulationEffect.js","webpack://__TECTONIC__nocpit/./src/noc-app/index.js","webpack://__TECTONIC__nocpit/./src/index.js","webpack://__TECTONIC__nocpit/./src/sn-component-nocpit/index.js","webpack://__TECTONIC__nocpit/./src/noc-app/nocApp.scss","webpack://__TECTONIC__nocpit/./src/noc-app/nocApp.scss?f9a4","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumContainerEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_input\"","webpack://__TECTONIC__nocpit/./src/sn-noc-views/userViewSaveAsModalJsx.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/settingsModalJsx.js","webpack://__TECTONIC__nocpit/./src/sn-noc-views/snNocViewsEffects.js","webpack://__TECTONIC__nocpit/./src/sn-noc-views/snNocViews.scss","webpack://__TECTONIC__nocpit/./src/sn-noc-views/snNocViews.scss?e1b2","webpack://__TECTONIC__nocpit/./src/sn-noc-views/snNocViewsView.js","webpack://__TECTONIC__nocpit/./src/sn-noc-views/snNocViews.js","webpack://__TECTONIC__nocpit/./src/sn-noc-views/index.js","webpack://__TECTONIC__nocpit/./src/noc-global-filter/effectFilterPropertyChanged.js","webpack://__TECTONIC__nocpit/./src/noc-global-filter/nocGlobalFilter.scss","webpack://__TECTONIC__nocpit/./src/noc-global-filter/nocGlobalFilter.scss?001d","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_badge\"","webpack://__TECTONIC__nocpit/./src/noc-global-filter/view.js","webpack://__TECTONIC__nocpit/./src/noc-global-filter/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumButtonsJsx.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-noc-notifications/snNocNotifications.scss","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-noc-notifications/snNocNotifications.scss?911f","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-noc-notifications/snNocNotificationsView.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-noc-notifications/snNocNotifications.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-noc-notifications/index.js","webpack://__TECTONIC__nocpit/./src/noc-breadcrumb/nocBreadcrumbBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-breadcrumb/view.js","webpack://__TECTONIC__nocpit/./src/noc-breadcrumb/nocBreadcrumb.scss","webpack://__TECTONIC__nocpit/./src/noc-breadcrumb/nocBreadcrumb.scss?9e42","webpack://__TECTONIC__nocpit/./src/noc-breadcrumb/index.js","webpack://__TECTONIC__nocpit/./src/noc-severity-indicators-bar/nocSeverityIndicatorBar.scss","webpack://__TECTONIC__nocpit/./src/noc-severity-indicators-bar/nocSeverityIndicatorBar.scss?c6c4","webpack://__TECTONIC__nocpit/./src/noc-severity-indicators-bar/transformState.js","webpack://__TECTONIC__nocpit/./src/sn-noc-severity-indicator/effectNocSeverityIndicator.js","webpack://__TECTONIC__nocpit/./src/sn-noc-severity-indicator/nocSeverityIndicator.scss","webpack://__TECTONIC__nocpit/./src/sn-noc-severity-indicator/nocSeverityIndicator.scss?70ae","webpack://__TECTONIC__nocpit/./src/sn-noc-severity-indicator/nocSeverityIndicatorView.js","webpack://__TECTONIC__nocpit/./src/sn-noc-severity-indicator/snNocSeverityIndicator.js","webpack://__TECTONIC__nocpit/./src/sn-noc-severity-indicator/index.js","webpack://__TECTONIC__nocpit/./src/noc-severity-indicators-bar/view.js","webpack://__TECTONIC__nocpit/./src/noc-severity-indicators-bar/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumContainerView.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumContainer.scss","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumContainer.scss?c91e","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/snNocSpectrumContainer.js","webpack://__TECTONIC__nocpit/./src/sn-noc-spectrum-container/index.js","webpack://__TECTONIC__nocpit/./src/noc-app/snNocSpectrumJsx.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/nocTilemapSelectGroupBehavior.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_behavior_resize_18_3_15\"","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/nocTilemapContainer.scss","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/nocTilemapContainer.scss?de64","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-loader/snOpwsLoaderEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_loader\"","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-loader/snOpwsLoaderView.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-loader/snOpwsLoader.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-loader/index.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/constants.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-search/view.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-search/nocSearch.scss","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-search/nocSearch.scss?ae17","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-search/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-tilemap-layout/transformers/transformState.js","webpack://__TECTONIC__nocpit/./src/sn-noc-tilemap-layout/snNocTilemapLayout.scss","webpack://__TECTONIC__nocpit/./src/sn-noc-tilemap-layout/snNocTilemapLayout.scss?6868","webpack://__TECTONIC__nocpit/./src/noc-tilemap/nocTilemap.scss","webpack://__TECTONIC__nocpit/./src/noc-tilemap/nocTilemap.scss?4372","webpack://__TECTONIC__nocpit/./src/noc-tilemap/openPreviewHandler.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview/effectClickOutsidePopover.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-element-with-tooltip/nocElementWithTooltip.scss","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-element-with-tooltip/nocElementWithTooltip.scss?5cf8","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/noc-element-with-tooltip/view.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_highlighted_value\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_legacy_icon\"","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_image\"","webpack://__TECTONIC__nocpit/./src/noc-service-preview/view.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview/nocServicePreview.scss","webpack://__TECTONIC__nocpit/./src/noc-service-preview/nocServicePreview.scss?f023","webpack://__TECTONIC__nocpit/./src/noc-service-preview/index.js","webpack://__TECTONIC__nocpit/./src/noc-popover/nocPopover.scss","webpack://__TECTONIC__nocpit/./src/noc-popover/nocPopover.scss?ed8c","webpack://__TECTONIC__nocpit/./src/noc-popover/view.js","webpack://__TECTONIC__nocpit/./src/noc-popover/nocPopoverOnEscEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_behavior_key_binding_18_3_15\"","webpack://__TECTONIC__nocpit/./src/noc-popover/index.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_behavior_fit_18_3_15\"","webpack://__TECTONIC__nocpit/./src/noc-tilemap/fitPreviewPopover.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap/generatePreviewPopover.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap/view.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-tilemap-layout/snNocTilemapLayoutView.js","webpack://__TECTONIC__nocpit/./src/sn-noc-tilemap-layout/snNocTilemapLayout.js","webpack://__TECTONIC__nocpit/./src/sn-noc-tilemap-layout/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-pills-bar/snNocPillsBar.scss","webpack://__TECTONIC__nocpit/./src/sn-noc-pills-bar/snNocPillsBar.scss?9764","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_pill\"","webpack://__TECTONIC__nocpit/./src/sn-noc-pills-bar/snNocPillsBarView.js","webpack://__TECTONIC__nocpit/./src/sn-noc-pills-bar/snNocPillsBar.js","webpack://__TECTONIC__nocpit/./src/sn-noc-pills-bar/index.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree-behaviors/index.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/nocTilemapToolbarEffect.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/nocTilemapToolbarBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/transformState.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/nocTilemapToolbar.scss","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/nocTilemapToolbar.scss?b69f","webpack://__TECTONIC__nocpit/./src/noc-field-select/nocFieldSelect.scss","webpack://__TECTONIC__nocpit/./src/noc-field-select/nocFieldSelect.scss?840f","webpack://__TECTONIC__nocpit/./src/noc-field-select/selectionEffect.js","webpack://__TECTONIC__nocpit/./src/noc-field-select/nocDropdownBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-field-select/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-service-tree-container/transformState.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree/nocServiceGroupsTree.scss","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree/nocServiceGroupsTree.scss?791a","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_content_tree\"","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree/view.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree/index.js","webpack://__TECTONIC__nocpit/./src/sn-noc-service-tree-container/view.js","webpack://__TECTONIC__nocpit/./src/sn-noc-service-tree-container/index.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-toolbar/view.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/view.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/transformers/impactedByAlertPopulation.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/transformers/sortGroupsPopulation.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/transformers/sortByPopulation.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/transformers/groupByPopulation.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/transformers/populationFilter.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/transformState.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/nocFavoritesBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-service-preview-behaviors/nocServicePreviewBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-popover-behavior/nocPopoverBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/categorizedFieldsEffect.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/searchTermEffect.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_ui_effect_update_state\"","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/nocTilemapDynamicLayoutConfigEffect.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/nocTileMapConfigEffect.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/nocTilemapDataBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-data-behavior/index.js","webpack://__TECTONIC__nocpit/./src/noc-tilemap-container/index.js","webpack://__TECTONIC__nocpit/./src/noc-app/snNocTilemapContainerJsx.js","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/snNocOpenAlertEffect.js","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/snNocAlertsPanelEffect.js","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/snNocAlertsPanelView.js","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/snNocAlertsPanel.scss","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/snNocAlertsPanel.scss?cf9a","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/snNocAlertsPanel.js","webpack://__TECTONIC__nocpit/./src/sn-noc-alerts-panel/index.js","webpack://__TECTONIC__nocpit/external \"__TECTONIC__$servicenow_now_record_common\"","webpack://__TECTONIC__nocpit/./src/noc-app/snNocSidePanelJsx.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-is-visible/effectIsVisible.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/extensions/defaultsExtension.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/extensions/performanceExtension.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/utils/misc.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/utils/logging.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/utils/performance.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-is-visible/snOpwsIsVisible.js","webpack://__TECTONIC__nocpit/./node_modules/@devsnc/library-opws-mapping-shared/src/components/sn-opws-is-visible/index.js","webpack://__TECTONIC__nocpit/./src/noc-app/view.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree-behaviors/utils/serviceGroupTree.js","webpack://__TECTONIC__nocpit/./src/noc-service-groups-tree-behaviors/utils/serviceGroupBreadcrumb.js","webpack://__TECTONIC__nocpit/./src/noc-changes-notificator-behavior/nocOnChangeEffect.js","webpack://__TECTONIC__nocpit/./src/noc-changes-notificator-behavior/nocChangesNotificatorBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-changes-notificator-behavior/index.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/revertUserViewEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/revertUserViewBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/saveSpecificUserViewEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/saveUserViewBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/getManageViewsEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/getSpecificUserViewEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/getUserViewNamesEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/getCurrentUserViewEffect.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/getUserViewBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-user-view-behaviors/index.js","webpack://__TECTONIC__nocpit/./src/noc-initial-data-behavior/initChangesManagerEffect.js","webpack://__TECTONIC__nocpit/./src/noc-initial-data-behavior/userMetaEffect.js","webpack://__TECTONIC__nocpit/./src/noc-initial-data-behavior/nocConfigEffect.js","webpack://__TECTONIC__nocpit/./src/noc-initial-data-behavior/nocInitialDataBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-initial-data-behavior/index.js","webpack://__TECTONIC__nocpit/./src/noc-severity-data-behavior/prefilterPopulationEffect.js","webpack://__TECTONIC__nocpit/./src/noc-severity-data-behavior/severityChoicesEffect.js","webpack://__TECTONIC__nocpit/./src/noc-severity-data-behavior/nocSeverityDataBehavior.js","webpack://__TECTONIC__nocpit/./src/noc-severity-data-behavior/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$devsnc_library_opws_mapping_shared","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__lodash_4_17_15","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","__TECTONIC__sn_translate","_snTranslate","_libraryOpwsMappingShared","ACTION_TYPES","UPDATE_USER_VIEW_ON_STATE","INSERT_USER_VIEW_REQUEST","SAVE_USER_VIEW_REQUEST","UPDATE_USER_VIEW_REQUEST","USER_VIEW_SAVE_REQUESTED","USER_VIEW_NAME_CHANGED","UPDATE_UBER_FILTER_REQUEST","UPDATE_ALERT_PREFERENCES_REQUEST","UPDATE_SEVERITY_FILTER_REQUEST","UPDATE_TILEMAPS_FORMAT_REQUEST","UPDATE_TO_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED","MUTATE_USER_VIEW_REQUEST_STARTED","INSERT_USER_VIEW_REQUEST_SUCCEEDED","UPDATE_USER_VIEW_REQUEST_SUCCEEDED","MUTATE_USER_VIEW_REQUEST_FAILED","CONSTANTS","NOC_ERROR_OCCURRED","UBER_FILTER_SAVE_REQUESTED","SEVERITY_FILTER_SAVE_REQUESTED","TILEMAPS_FORMAT_SAVE_REQUESTED","ALERT_PREFERENCES_SAVE_REQUESTED","USER_VIEW_SAVE_AS_REQUEST_SAVE","CURR_GLOBAL_FILTER_CHANGED","CURR_USER_VIEW_REQUEST","CURR_GLOBAL_FILTER_REQUEST","CURR_USER_VIEW_REQUEST_STARTED","CURR_USER_VIEW_REQUEST_SUCCEEDED","CURR_USER_VIEW_REQUEST_FAILED","SPECIFIC_USER_VIEW_SELECTED","SPECIFIC_USER_VIEW_REQUEST","SPECIFIC_USER_VIEW_REQUEST_STARTED","SPECIFIC_USER_VIEW_REQUEST_SUCCEEDED","SPECIFIC_USER_VIEW_REQUEST_FAILED","LOAD_USER_VIEW_NAMES","USER_VIEW_NAMES_REQUEST","USER_VIEW_NAMES_REQUEST_STARTED","USER_VIEW_NAMES_REQUEST_SUCCEEDED","USER_VIEW_NAMES_REQUEST_FAILED","REVERT_CURRENT_USER_VIEW","NOC_USER_VIEW_MANAGE_VIEWS","REVERT_CURRENT_USER_VIEW_REQUEST","REVERT_CURRENT_USER_VIEW_REQUEST_STARTED","REVERT_CURRENT_USER_VIEW_REQUEST_SUCCEEDED","REVERT_CURRENT_USER_VIEW_REQUEST_FAILED","UPDATE_DEFAULT_USER_VIEW_REQUEST","UPDATE_DEFAULT_USER_VIEW_REQUEST_STARTED","UPDATE_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED","UPDATE_DEFAULT_USER_VIEW_REQUEST_FAILED","USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED","COMPARISON_SAVE_BUTTON_STATE","COMPARISON_USER_VIEW_REQUEST","COMPARISON_USER_VIEW_REQUEST_STARTED","COMPARISON_USER_VIEW_REQUEST_SUCCEEDED","COMPARISON_USER_VIEW_REQUEST_FAILED","VIEW_SECTIONS","GLOBAL","PRIVATE","DEFAULTS","CURRENT_USER_VIEW_NAME","DEFAULT_USER_VIEW_NAME","VIEW_GQL_QUERIES","get_noc_user_view_names","get_noc_user_view","get_noc_user_view_records_for_comparison","get_current_global_filter","INSERT_NOC_USER_VIEW_PATH","__TECTONIC__$servicenow_ui_effect_http","__TECTONIC__$servicenow_ui_effect_graphql","_lodash","SECTIONS","uberFilter","recordHasSection","record","isUndefined","recordToModel","filter","modelToMutationVar","model","severityFilter","enabledSeverities","sevKeys","forOwn","split","sev","enabledSeveritiesArr","keys","enabled_severities","val","sort","tilemapsFormat","sortByField","sortByOrder","groupByField","groupByOrder","businessServiceGroup","tileSize","sort_by_field","sort_by_order","group_by_field","group_by_order","business_service_group","tile_size","alertPreferences","isAlertsCorrelatedView","defaultAlertsSorting","alerts_correlated_view","alerts_panel_default_sorting","reduceRecordToModel","input","section","result","transformToModel","reduce","reduceModelToMutationVars","sectionName","modelSection","getMutationVars","workspace","viewName","userId","sysId","originViewId","sys_id","origin_view_id","view_name","user_id","transformRecordToMutationVars","__TECTONIC__$servicenow_now_heading","effectHandlers","selectSpecificGroup","coeffects","dispatch","properties","updateState","_coeffects$action","action","payload","type","LOGGING","log","checkForError","caller","selectedGroup","TILEMAP_SELECT_REGULAR_GROUP","_nocServicePreviewBehavior","_nocFavoritesBehavior","nocServicePreviewBehaviors","behaviors","nocServicePreviewBehavior","nocFavoritesBehavior","getServicePreviewEffect","clearServicePreviewDataEffect","addToFavoritesEffect","removeFromFavoritesEffect","_nocPopoverBehavior","nocPopoverOpenCloseEffect","nocPopoverBehavior","behavior","_uiCore","_performanceExtension","_defaultsExtension","EXTENSIONS","defaults","extendWithDefaults","performance","extendWithPerformance","DEFAULT_EXTENSIONS","asArray","extensions","isArray","createNocElement","baseConfig","arguments","undefined","mergedConfig","extensionsArray","_toConsumableArray","extension","extensionFunctions","isFunction","functions","createCustomElement","_performance","_logging","_misc","DEV_LOG_LEVEL","LogLevel","INFO","PROD_LOG_LEVEL","WARN","MISC","Misc","PERFORMANCE","Performance","Logging","UTILS","misc","logging","setLogLevel","isInDev","setAllow","setLogCallback","window","NOC","_extends","VIEW_CONSTANTS","isViewExists","itemsMap","trim","found","values","find","view","Boolean","isViewGlobal","userViewsUtils","items","origin","itemsToMap","viewItems","_sections","selected","sections","label","children","_defineProperty","suffix","newItem","createViewItems","selectedView","defaultViewSysId","defaultView","getUserDefaultViewSysId","SEVERITY_BREAKDOWN","LABEL_SETTINGS","LABEL_SECTION_TILE_SIZE","LABEL_TILE_SIZE","tileSizeDropdownItems","SECTION_ID_TILE_SIZE","SECTION_ID_TILE_SIZE_HIDDEN_LABEL","ITEM_ID_TILE_SIZE","__TECTONIC__$servicenow_now_button","__TECTONIC__$servicenow_now_modal","DROPDOWN_TYPES","GROUP_BY","SORT_BY","GROUP_ORDER","ascending","GLOBALS","ASC","descending","DESC","ORDER_TYPES","sortByOderOptions","groupByOrderOptions","TILEMAPS_DROPDOWN_CHANGED","OPEN_ALERTS_PANEL","OPEN_GROUP_TREE_MODAL","LABELS","CONFIG_SELECT_PLACEHOLDER","CONFIG_SELECT_TOOLTIP","CONFIG_SAVE_TOOLTIP","CONFIG_MORE_ACTIONS_TOOLTIP","HEADER_SAVE_AS","HEADER_DESCRIPTION","TITLE_VIEW_NAME","SAVE_AS_TOOLTIP","VIEW_NAME_PLACEHOLDER","VIEW_NAME_LABEL","LABEL_SAVE_COPY","LABEL_CANCEL","LABEL_REVERT","LABEL_MANAGE","LABEL_SAVE","MORE_ACTIONS_ARIA","VIEW_NAME_SELECTED","VIEW_NAME_CHANGED","VIEW_ITEM_CLICKED","SAVE_BUTTON_CLICKED","REQUESTED_SAVE_EFFECT","VIEW_SAVE_AS_CLICKED","toggleSettingsModalEffect","_coeffects$action$pay","isOpen","updateProperties","settingsModal","notification","dropdownValueChangedEffect","state","_action$payload$value","selectedValue","meta","path","includes","COMPONENT_IDS","TILE_SIZE_DROPDOWN_ID","newTilemapsFormat","updateTileSize","SETTINGS_MODAL_ID","SETTINGS_MODAL_STATE_CHANGED","DROPDOWN_STATE_CHANGED","__TECTONIC__$servicenow_now_tooltip","__TECTONIC__$servicenow_now_text_link","__TECTONIC__$servicenow_now_icon","__TECTONIC__$servicenow_now_dropdown","__TECTONIC__$servicenow_now_label_value","_generatePreviewId","servicePreviewResource","popoverKey","generatePreviewPopoverKey","currId","debug","servicePreviewData","NOC_POPOVER_CLOSED","NOC_CLEAR_SERVICE_PREVIEW","__TECTONIC__$servicenow_ui_core","_uiEffectHttp","_serviceGroupBreadcrumb","_serviceGroupBuckets","GET_SERVICE_GROUP_TREE_REQUEST","GET_SERVICE_GROUP_TREE_REQUEST_STARTED","GET_SERVICE_GROUP_TREE_REQUEST_SUCCEEDED","GET_SERVICE_GROUP_TREE_REQUEST_FAILED","SERVICE_GROUP_TREE_RESOURCE_STATE_UPDATED","SERVICE_GROUP_SELECT_DIFFERENT_GROUP","getServiceGroupsTreeHandler","effect","timestampForTiles","timestamp","includeBusinessServices","getServiceGroupsTreeRequest","createHttpEffect","method","queryParams","startActionType","successActionType","errorActionType","handleGetServiceGroupsTreeResponse","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","serviceGroupsTreeResource","succeeded","data","onNextFrame","stop","_x","apply","createServiceGroupsTreeModel","createNocUpdateStateEffect","getAfterStateUpdate","populationMapper","_state$serviceGroupsT","_state$serviceGroupsT2","severities","breadcrumb","constructBreadcrumb","buckets","isEmpty","constructServiceGroupsBuckets","selectedNodeRef","tree","_serviceGroupTree2","default","servicesCount","getNumOfUniqueServices","newState","serviceGroups","then","reduceService","servicesIds","service","add","reduceBucket","bucket","population","Set","size","updateUserSelectedServiceGroup","_action$payload$item","isString","Error","_transforms","createCurrentUserViewSaveRequestedEffect","mutationActionType","info","_coeffects$properties","userMeta","views","userViewModel","variables","createSpecificUserViewSaveRequestedEffect","uberFilterSaveRequestedHandler","severityFilterSaveRequestedHandler","tilemapsFormatSaveRequestedHandler","alertPreferencesSaveRequestedHandler","revertCurrentUserViewRequestedHandler","dispatchComparisonForViews","coeffect","_coeffect$action$payl","q","current","latest","queryConditions","compareViews","viewsArr","_viewsArr","_slicedToArray","originView","latestView","isEqual","noChangesOnCurrentView","toggleUserViewSaveAsModalEffect","_payload$value","userViewSaveAsModal","isValid","errors","saveUserViewSaveAsModalEffect","getViewNameFromInput","userViewNameChangedEffect","USER_VIEW_SAVE_AS_MODAL_ID","QUERY_PARSE_REQUEST_REQUESTED","QUERY_PARSE_REQUEST_STARTED","QUERY_PARSE_REQUEST_SUCCEEDED","QUERY_PARSE_REQUEST_FAILED","getQueryParseEffectRequest","handleQueryParseResponse","filterSize","_payload$result$parse","parsed_query","flat","parseQueryResponse","onBreadcrumbClickEffect","_action$payload$id","newServiceGroupId","nocTilemapSelectGroupEffect","NOC_BREADCRUMB_ITEM_CLICKED","filterSeverities","severityClicked","NOC_SEVERITY_INDICATOR_CLICKED","__TECTONIC__$servicenow_now_alert","_view","renderer","snabbdom","styles","tooltip","targetElm","NONE_VALUE","createOption","option","_state$properties","choices","displayNone","displayNoneValue","disabled","tooltipContent","manageSelectedItems","dropDownID","replace","toLowerCase","hiddenLabelId","options","opt","forEach","choice","createOptions","selectedItem","labelledBy","_uiRendererSnabbdom","createElement","className","selected-items","tooltip-content","variant","bare","manage-selected-items","aria-labelledby","_nocTilemapToolbarBehavior","_nocServiceGroupsTreeBehaviors","transformState","nocConfig","sidePanel","sortByFields","groupByFields","selectedAlert","isModalOpen","nocTilemapToolbarBehavior","nocModalActionBehavior","nocServiceGroupsTreeBehaviors","ordinalComparator","comparatorByField","field","a","b","ordA","getOrdinal","ordB","REMOVE_FROM_FAVORITES_REQUEST","REMOVE_FROM_FAVORITES_REQUEST_STARTED","REMOVE_FROM_FAVORITES_REQUEST_SUCCEEDED","REMOVE_FROM_FAVORITES_REQUEST_FAILED","removeFromFavoritesRequest","removeFromFavoritesResponse","favorite","operation","ADD_TO_FAVORITES_REQUEST","ADD_TO_FAVORITES_REQUEST_STARTED","ADD_TO_FAVORITES_REQUEST_SUCCEEDED","ADD_TO_FAVORITES_REQUEST_FAILED","addToFavoritesRequest","addToFavoritesResponse","generatePreviewId","serviceId","tilemapId","isDefined","SERVICE_PREVIEW_REQUESTED","REFRESH_SERVICE_PREVIEW_REQUESTED","SERVICE_PREVIEW_REQUEST","SERVICE_PREVIEW_REQUEST_STARTED","SERVICE_PREVIEW_REQUEST_SUCCEEDED","SERVICE_PREVIEW_REQUEST_FAILED","transformOverviewFields","displayName","display_name","getDisplayName","displayValue","display_value","getDisplayValue","transformResponse","response","overviewFields","servicePreviewRequestedHandler","_ref3","_ref2","_action$payload","warn","refreshServicePreviewRequested","displayedPreviewTimestamp","requestedTimestamp","servicePreviewHandler","pathParams","servicePreviewResponseHandler","_ref4","_callee2","_ref5","receivedServiceId","_context2","NOC_SERVICE_PREVIEW_SET","_x2","nocPopoverOpenEffect","popover","focusTarget","nocPopoverCloseEffect","nocPopoverFitEffect","positionStyle","NOC_POPOVER_OPEN","NOC_POPOVER_FIT","_utils","createActionConfig","handler","isPrivate","stopPropagation","handleVisibilityChangeEffect","isVisible","nocChangeEffect","ACTIONS_TYPES","NOC_ON_START_CHANGE_TIMER","NOC_ON_STOP_CHANGE_TIMER","NOC_VISIBILITY_CHANGED","delayTimer","nocSelectedAlertEffect","clearTimeout","setTimeout","NOC_SELECT_ALERT_CARD","GET_IMPACTED_SERVICES_REQUEST_STARTED","GET_IMPACTED_SERVICES_REQUEST_SUCCEEDED","GET_IMPACTED_SERVICES_REQUEST_FAILED","GET_IMPACTED_SERVICES_REQUEST","CLEAR_IMPACTED_SERVICES_REQUEST","getImpactedServicesEffectHandler","handleImpactedServicesRequestStarted","isImpactedServicesLoading","handleGetImpactedServicesResponse","receivedIds","currentIds","impactedServicesAlertIds","xor","clearImpactedServicesHandler","ORPHANS","isGroup","nodeType","splitIntoContainers","child","_child$data2","services","addBusinessServicesChildren","setContainer","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","_child$data","err","return","containers","_containers$key","groupField","isServiceGroup","createGroupBucket","populationMapperItem","isEnabled","nocGetServiceGroupsBehavior","actionHandlers","NOC_POPULATION_SET","_actionHandlers","TILEMAPS_FORMAT_SET","NOC_POPULATION_GROUPS_SET","GLOBAL_ACTION_TYPES","CHANGE_EVENT_CONSTANTS","previousChanges","changes","consumers","prop","timeoutId","NOC_ON_READ_CHANGES","NOC_ON_START_CHANGES","NOC_ON_READ_CHANGES_QUERY","NOC_ON_READ_CHANGES_SUCCESS","NOC_ON_READ_CHANGES_ERROR","NOC_DO_INIT","initPreviousChanges","types","pChanges","initChangeManager","changeAction","omit","requestChangesCall","propChanges","stopCurrentTimeout","doCall","nocRefreshRate","CHANGE_RESPONSE_REQUEST_SENT","extra","REQUEST_STOP_CHANGE_TIMER","REQUEST_START_CHANGE_TIMER","NOC_INIT_CHANGE_MANAGER","REQUEST_REPEATED_CHANGE_NOTIFICATION","REQUEST_CHANGE_NOTIFICATION","_payload$propChanges","params","changeTypes","getChangeRequestParams","REQUEST_CHANGE_NOTIFICATION_EFFECT_HANDLER","CHANGE_RESPONSE_SUCCESS","notificationList","prevValue","changedItem","previous","NOC_EVENT_HASH_CHANGED","notifyChanges","notificationMap","json","parse","setChangeProperties","CHANGE_RESPONSE_ERROR","_uiEffectGraphql","_handleUserViewResponseEffect","insertUserViewHandler","createGraphQLEffect","GQL_MUTATION_INSERT","variableList","updateUserViewHandler","GQL_MUTATION_UPDATE","insertUserViewResponseHandler","handleUserViewResponseEffect","updateUberFilterHandler","GQL_MUTATION_UPDATE_UBER_FILTER","updateSeverityFilterHandler","GQL_MUTATION_UPDATE_SEVERITY_FILTER","updateAlertPreferencesHandler","GQL_MUTATION_UPDATE_ALERT_PREFERENCES","updateTilemapsFormatHandler","GQL_MUTATION_UPDATE_TILEMAPS_FORMAT","revertCurrentUserViewHandler","GQL_MUTATION_UPDATE_TO_DEFAULT_USER_VIEW","updateUserViewResponseHandler","mutateUserViewHandler","mutateUserViewFailed","updateUserViewMetaData","selectableProps","UBER_FILTER_SET","forcePopulationUpdate","SEVERITY_FILTER_SET","ALERT_PREFERENCES_SET","resultPath","nocViewsRecord","recordSysId","userViewResource","viewIsCurrent","isNewView","isInsertNew","handleUserViewSwitch","NOC_POPULATION_REFRESH_REQUESTED","BASE_POPULATION_REQUEST","EM_POPULATION_REQUEST","POPULATION_REQUEST_STARTED","EM_POPULATION_REQUEST_SUCCEEDED","BASE_POPULATION_REQUEST_SUCCEEDED","POPULATION_REQUEST_FAILED","formatPopulationResult","mapper","idx","assign","dynamicFieldsPlain","dynamicFieldsComplex","mapValues","formatComplexFieldsToCamelCase","getPopulationHandler","_state$properties$noc","_state$properties$ube","_action$payload$force","lastUpdatedPopulationTimestamp","_uberFilter$filter","currTimestamp","query","String","getPopulationParams","_nocConfig$isEm","isEm","populationRequestAction","getEmPopulationEffectHandler","handleEmPopulationResponse","_formatPopulationResu","NOC_POPULATION_SET_PHASE_2","handleBasePopulationResponse","_formatPopulationResu2","enabledPopulation","_nocSeverityDataBehavior","_nocInitialDataBehavior","_nocUserViewBehaviors","_nocChangesNotificatorBehavior","_nocGetServiceGroupsBehavior","onBootstrap","host","NOC_COMPONENT_CONNECTED","intialState","isViewModified","WORKSPACE","selectable","alerts","effectImpactedServices","effectAlertSelected","effectToggleSidePanel","TOGGLE_SIDE_PANEL","toggleSidePanel","nocVisibilityChangeEffect","nocInitialDataBehavior","userViewBehaviors","getUserViewBehavior","saveUserViewBehavior","revertUserViewBehavior","nocSeverityDataBehavior","nocChangesNotificatorBehavior","nocErrorBehavior","behaviorNocNotification","component-id","NOC_APP_COMPONENT_ID","toggleModalEffect","dispatches","error","MODAL_STATE_CHANGED","__TECTONIC__$servicenow_now_input","FOOTER_ACTIONS","save_copy","clickActionType","cancel","handleOninput","debounce","e","getUserViewSaveAsModal","args","viewNameSuggestion","inputRef","createRef","footerActions","allowSave","getFooterActions","userViewSaveAsModalEffect","opened","append-to-payload","header-label","footer-actions","hasNoMargin","level","autofocus","required","placeholder","ref","minlength","maxlength","manageInvalid","invalid","on-input","messages","getSettingsModal","tileSizeLabelledBy","SPECTRUM_CONST","tileSizeDropdownJsx","Fragment","style","display","i18n","NOC_UPDATES_USER_VIEW","NOC_NO_TILE_SIZE_TOOLTIP","selectedItems","settingsModalEffect","sectionsJsx","sectionId","itemId","sectionLabel","aria-describedBy","settingsModalContent","slot","userViewSelectedEffect","output","objects","userViewActionsEffect","_properties$views","userSaveActionEffect","_properties$views2","userSaveAsActionEffect","_userViewsUtils","CONFIG_SELECT_ARIA","aria-label","CONFIG_SAVE_ARIA","_state$properties$vie","_state$properties$vie2","currentView","dropDownViewItems","isGlobalView","moreActionsItems","viewsList","on-change","config-aria","viewActions","icon","hide-caret","select","saveViewButton","_snNocViewsView","USER_VIEW_CONSTANTS","snNocViewsEffects","_effectGetFilterCountHandler","effectFilterPropertyOnChange","sysparm_query","effectFilterPropertyChanged","__TECTONIC__$servicenow_now_badge","PROPERTIES_SET","GENERAL","MODAL_HEADER","TOOLTIP_FILTER","openGlobalFilter","onFrameInsert","elm","addEventListener","evt","url","onRedirect","userViewId","modal","iframe","hook-insert","width","frameBorder","height","src","content-full-width","createFilterModal","FILTER_BADGE_MESSAGE","filterBadge","round","status","on-click","configAria","_effectFilterPropertyChanged","onChange","CONFIG_ARIA","getButtonsJsx","openSettingsModal","user-view-id","no-changes-on-current-view","current-view","_state$properties$not","notifications","manage-items","_createNocElement","_snNocNotificationsView","nocBreadcrumbBehavior","nocBreadcrumbEffect","generateBreadcrumb","currentIndex","itemsCount","elements","href","changeServiceGroup","aria-current","_nocBreadcrumbBehavior","_state$properties$pop","isObject","sortedSeverities","sortBy","sortSeverities","populationSize","indicatorClicked","event","severity","nocSeverityIndicatorBarEffect","SEVERITIES_TO_GREY_MAP","1","2","3","4","5","nocSeverityIndicatorView","indicatorJsx","count","percentage","iconUrl","indicatorIconUrl","indicatorLabel","indicatorTooltip","aria-selected","createIndicatorJsx","_nocSeverityIndicatorView","eventHandlers","events","effectNocSeverityIndicator","buildIndicator","groupSz","toFixed","BAR_LABEL","_state$sortedSeveriti","indicators","buildIndicatorsJsx","_transformState","nocSeverityIndicatorEffect","_snNocSpectrumButtonsJsx","_settingsModalJsx","_userViewSaveAsModalJsx","VIEW_NAME_REGEX","serviceText","_state$properties$til","_state$properties$set","_state$properties$use","currentViewName","currentViewUserId","settingsModalJsx","generateSettingsModal","userViewSaveAsModalJsx","generateUserViewSaveAsModal","numberSuffix","exec","getInitialViewName","buttonsJsx","displayUserViewName","toLocaleUpperCase","slice","fixUserViewName","role","has-no-margin","severity-filter","NOC_APP_NOTIFICATIONS_COMPONENT_ID","_snNocSpectrumContainerView","snNocSpectrumContainerEffect","fieldValue","_coeffect$properties","getNocSpectrumJsx","_state$userViewResour","_state$userViewResour2","NOC_SPECTRUM_CONTAINER_COMPONENT_ID","service-groups","tilemaps-format","selected-view","views-list","nocTilemapSelectGroupBehavior","__TECTONIC__$servicenow_behavior_resize_18_3_15","OPWS_LOADER_BOOTSTRAP","actionTypes","COMPONENT_BOOTSTRAPPED","OPWS_LOADER_DISCONNECTED","COMPONENT_DISCONNECTED","OPWS_LOADER_SHOW","_loaderSet","showing","debounceFn","opwsLoaderBootstrap","debounceTime","opwsLoaderCancel","opwsLoaderShow","__TECTONIC__$servicenow_now_loader","componentId","_createActionConfig","_snOpwsLoaderView","initialState","snNocLoaderEffect","TEXT","HOME","NOC_TILEMAP_LAYOUT_COMPONENT_ID","NOC_TILEMAP_TOOLBAR_COMPONENT_ID","NOC_TILEMAP_CONTAINER_COMPONENT_ID","NOC_BREADCRUMB_COMPONENT_COMPONENT_ID","NOC_FALLBACK_SORT_FIELD","RELATED_ITEMS_PAGE_SIZE","ENTER_KEY_CODE","EM_SEVERITY_TO_EDS_STATUS","ALL_SYS_ID","ASSURANCE","MAPPING","BS_URL","TABLES_NAMES","EM_ALERT","NOC_SHOW_NOTIFICATION","NOC_CLEAR_NOTIFICATIONS","USER_META_SET","NOC_CONFIG_SET","NOC_CONFIG_SET_PHASE_2","NOC_TILE_MAP_CONFIG_SET","NOC_COLORS_AND_ICONS_SET","NOC_COLORS_AND_ICONS_SET_PHASE_2","NOC_SEVERITY_CHOICES_SET","SEVERITY_TOGGLE_CHANGED","SEARCH_TERM_CHANGED","IMPACTED_SERVICES_REQUESTED","NOC_STOP_LISTEN_TO_ALERTS_CHANGE","NOC_ALERTS_REFRESH_REQUESTED","NOC_GET_ALERTS_INIT","ITEM_SELECTED","_constants","searchTerm","searchDescription","searchLabel","clearSearchLabel","configSearchAria","clearSearchButton","clearSearch","attr-onsubmit","aria-describedby","auto-focus","search","calculateMedian","groups","maxAvailableSegments","start","end","arr","serviceNumber","numbers","sorted","middle","Math","floor","getMedian","createGroup","groupData","groupIndex","maxServicesInGroup","segmentsChoicesCount","canSegmentsDividedEqually","segments","lastSegmentType","lastSegment","segmentType","getValue","createSegments","segmentSize","itemsPerSegment","segmentTotalItemsCount","segmentItemsCount","isExpendable","fixSegmentsSize","group","segmentedBy","totalServicesCount","createRow","choicesFieldsModel","config","median","maxItems","row","columns","calculateMaxServicesAllowed","rowItemsCount","rowTotalItemsCount","windowSize","dynamicLayoutConfig","filteredGroups","Number","MAX_SAFE_INTEGER","g","grid","columnMaxWidth","gridServicesCount","gridTotalServicesCount","rows","autoTileSizeDetection","breakpoint","calculatedTileSize","createGrid","createOpenPreviewHandler","previewServiceId","previewTilemapId","_nocServicePreviewBehaviors","stopAllPropagations","stopImmediatePropagation","closePopOver","nocPopoverClickedEffect","keyCode","nocDocumentClickEffect","assignedNodes","onSlotInsert","target-ref","__TECTONIC__$servicenow_now_highlighted_value","__TECTONIC__$servicenow_now_legacy_icon","__TECTONIC__$servicenow_now_image","LABEL_CLOSE","buttonLabelTruncateConfig","separator","VIEW_SERVICE_DETAILS","truncate","VIEW_SERVICE_MAP","BREAKDOWN_SEVERITY","OPEN_SERVICE_DETAILS","OPEN_SERVICE_MAP","TOOLTIP_PRIMARY_ALERTS","layoutOverviewFields","getNonEmptyDisplayValueItems","generateJsxHeader","color","headerTextColor","shouldUseWhiteText","backgroundColor","overviewItems","CLOSE_BUTTON_CONFIG_ARIA","alt","wont-wrap","closePreview","align","truncated","getNonZeroValueItems","generateJsxSeverityBreakdown","severityBreakdown","metadata","primaryAlertsAmount","severityListLI","show-icon","PRIMARY_ALERTS_COUNT","table","defaultTab","cmdb_ci_service_discovered","cmdb_ci_query_based_service","openPrimaryAlertsForm","getServiceLinks","_servicePreviewData$h","hasMap","serviceFormButton","mapId","genUniqueSysId","parent_table","parent_sys_id","openServiceMap","openServiceForm","header","some","hasAlerts","serviceLinks","_effectClickOutsidePopover","target","document","onPopoverAttach","vNode","invokeOnNextFrame","slottedElm","focus","_state$properties$pos","aria-live","nocPopoverOnEscKey","onCloseAction","NOC_POPOVER_ESC_KEY_PRESSED","__TECTONIC__$servicenow_behavior_key_binding_18_3_15","nocPopoverOnEscEffect","keyBindingBehavior","keyBindings","onEscKeyPress","handlers","__TECTONIC__$servicenow_behavior_fit_18_3_15","_behaviorFit","fitPopover","popoverTargetRef","popoverContentRef","popoverContainerRef","currPositionStyle","isInsert","insertvNode","updatevNode","contentBox","getBoundingClientRect","contentArea","container","offset","position","constrain","minHeight","parseInt","minWidth","getBestFitInfo","topInt","top","clientHeight","left","max","opacity","animationName","animationDuration","curr","detectChangeInPositionStyle","fitPopoverOnUpdate","fitPopoverOnInsert","_fitPreviewPopover","ARIA_PREVIEW_POPOVER_ID","generatePreviewPopover","servicePreviewId","_popover$positionStyl","fitPopoverArgs","tabindex","_generatePreviewPopover","_openPreviewHandler","tileIdToElmMap","Map","addTileToMap","tileKey","oldVnode","vnode","set","getTileElm","isConnected","isRtl","dir","generateTooltipContent","tile","fields","keyValuePair","reverse","generateTileJsx","_state$properties$dat","hoverTooltipFields","tilemapsConfig","nocAppRef","_tilemapsFormat$busin","tileId","_generateTileKey","isPreviewDisplayed","ariaDescribedBy","labelId","tileSizeClass","cssClass","openPreviewHandler","previewPopover","tooltipText","shouldShowTooltip","edsTooltip","hook-update","hook-destroy","delete","removeTileFromMap","on-mouseenter","showTooltip","on-mouseleave","hideTooltip","generateSegmentJsx","segment","_state$properties3","segmentJsx","ellipsisTile","diffText","tooltipShow","drillDownToGroup","generateEllipsisTile","isGroupSegmented","hasCategoryIndicator","categoryIndicator","_state$properties2","_choicesFieldsModel$s","kebabCase","generateIndicatorJsx","newServiceGroupObj","newDrillDownToGroup","isExpandable","res","_state$properties5","_state$properties5$da","segmentsJsx","snakeCase","labelJsx","_state$properties4","isServiceGroupOrphansChildren","isSelectedGroup","_data$groupField","createGroupTitleJsx","generateCellJsx","cell","_properties","tilemapKey","timestamp-for-tiles","tilemaps-config","choices-fields-model","generateRowJsx","rowJsx","snNocTilemapLayoutView","gridJsx","_snNocTilemapLayoutView","__TECTONIC__$servicenow_now_pill","SEVERITIES_LABEL","PILL_TYPES","createPillJsx","can-dismiss","manage-selected","pillAlert","alert","number","pillAlertJsx","pillSeverities","reduced","pillLabel","trueCounter","falseCounter","pillSeveritiesJsx","dismissPill","_snNocPillsBarView","NOW_PILL#DISMISSED","modalActionTypes","nocModalActionEffect","nocSetAndSaveTileFormat","TILEMAP_CONSTANTS","openAlertsPanelEffect","open","openGroupTreeEffect","NOC_ACTION_CLICK","nocTilemapToolbarEffect","serviceGroupOption","preventSelection","addFieldOption","newGroupByField","serviceSysId","getServiceGroupName","updatedGroupByFields","newGroupByFields","updateGroupByFields","selectionChangedEffect","singleValue","_ref$preventSelection","_selectionEffect","nocDropdownBehavior","_view2","_nocDropdownBehavior","_nocTilemapToolbar","noop","_state$properties$ena","stateView","__TECTONIC__$servicenow_now_content_tree","expandedIds","expandedItems","index","show-dividers","show-highlighted-value","footerAction","_nocFieldSelect","groupBy","TOOLBAR_CONSTANTS","dispatchMessage","groupOrder","createDropdown","_ref$hasBorder","hasBorder","_ref$manageSelectedIt","display-none","display-none-value","serviceGroupTree","LABEL_SEARCH","DESC_SEARCH","CLEAR_SEARCH","BREADCRUMB_HOME","NO_SERVICES_TO_DISPLAY_MSG","TRY_SOMETHING_ELSE_MSG","getLoaderSection","debounce-time","NOC_LOADER_LABEL_SERVICES","createTilemap","groupedPopulation","resize","canLoadTilemap","_state$groupedPopulat","layoutSegmentsEquallyDivided","dynamic-layout-config","can-segments-divided-equally","getTilemap","_state$properties3$ti","cloneDeep","createBreadcrumbJsx","nocSearch","pillsBar","selected-alert","tilemapGrid","noc-config","side-panel","impactedServicesFilter","impactedServicesIdsMap","getValueAsKey","impactedByAlertPopulation","mapKeys","servicesFiltered","_ordinalComparator","runSortGroupsStrategy","sortGroupsPopulation","isAscending","sortedGroupedPopulation","hasOther","theOther","runSortByStrategy","sortByPopulation","newGroupedPopulation","forIn","sortGroup","groupByPopulation","runGroupByStrategy","groupItemFieldValue","NOC_DEFAULT_GROUP_LABEL","groupKey","newResult","NOC_DEFAULT_GROUP_DISPLAY_VALUE","enabledPopulationFilter","searchFilterPopulation","searchFields","requiredFields","serviceGroupsPopulationFilter","servicesPopulationFilter","it","searchTermLC","_populationFilter","_groupByPopulation","_sortByPopulation","_sortGroupsPopulation","_impactedByAlertPopulation","transformGroupedPopulation","serviceGroupTransformers","regularTransformers","fn","measureCall","NOC_GET_COLORS_AND_ICONS","NOC_GET_CHOICE_FIELDS","CATEGORIZED_FIELDS_EFFECT_STARTED","CATEGORIZED_FIELDS_EFFECT_SUCCEEDED","CATEGORIZED_FIELDS_EFFECT_FAILED","CATEGORIZED_FIELDS_EFFECT_SET_STATE","CATEGORIZED_FIELDS_EFFECT_CHOICES_MODEL_SET_STATE","constructGQLQuery","constructGQL","categorizedFields","categorizedByFields","queryVariablesDeclaration","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","constructGQLDeclaration","queryContent","constructGQLContent","constructPayloadAction","transform","choiceField","obj","relevantSeveritiesFilter","f","valueNotSeverityFilter","v","fieldIsSeverityFilter","onTilemapConfigSet","getChoices","interceptors","after","context","effects","tableName","newCoeffects","extendedEffects","gql","qglHandler","fetchFieldsChoicesEffect","getColorsAndIcons","_properties$tilemapsC","colorsAndIconsEffect","COLORS_REQUEST","getVariables","setChoicesFieldResource","_payload$data","choicesFieldResource","choiceDataRetriever","mergeContentAndIcons","category","_properties$tilemapsC2","colorsAndIconsResource","handleNocSearchTerm","__TECTONIC__$servicenow_ui_effect_update_state","NOC_TILEMAP_DYNAMIC_LAYOUT_CONFIG_INIT_REQUESTED","NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_STARTED","NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_SUCCEEDED","NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_FAILED","getDynamicLayoutConfig","nocLayoutQuery","storeDynamicLayoutConfig","GlideRecord_Query","noc_layout","_results","getRecords","max_items","NOC_TILE_MAP_CONFIG_REQUEST_INIT","NOC_TILE_MAP_CONFIG_REQUEST_STARTED","NOC_TILE_MAP_CONFIG_REQUEST_SUCCEEDED","NOC_TILE_MAP_CONFIG_REQUEST_FAILED","mapValuesFromArray","reduceChoiceFields","total","reducedKey","camelCase","transformTileMapConfig","choicesFields","plain","fieldsObj","transformPlainFields","plainFields","handleNocTileMapConfigInit","handleNocTileMapConfigSucceeded","nocTileMapsConfigResource","handleNocTileMapConfigFailed","initFlowHandler","nocTileMapConfigEffect","nocTilemapLayoutConfigEffect","nocTilemapDataBehavior","searchTermEffect","categorizedFieldsEffect","colorsFetchedHandler","COLORS_REQUEST_SUCCEEDED","handleColorsResponse","_nocTilemapDataBehavior","_nocTilemapSelectGroupBehavior","isNaN","oldVal","newVal","categorizedModel","resizeBehavior","timer","wait","getNocTilemapContainerJsx","impacted-services-alert-ids","is-impacted-services-loading","OPEN_ALERT_FORM_INVOKED","snOpwsAlertCardActionTypes","openAlertForm","alertId","NOC_GET_ALERTS_REQUESTED","NOC_GET_ALERTS_REQUEST_STARTED","NOC_GET_ALERTS_REQUEST_SUCCEEDED","NOC_GET_ALERTS_REQUEST_FAILED","getAlerts","alertsSortingChanged","selectedSortOption","refreshAlerts","_sortedBy$","selectedType","sortOptions","isOrderASC","order","sortingColumnName","firstRow","isLoading","saveAlerts","_payload$alerts","totalRecords","formattedAlerts","lastUpdated","deepFreeze","formatAlertsResponse","getAlertsError","selectAlert","_action$payload2","isSelected","groupId","ciId","headerTitle","selectedAlertId","manage-selected-item-id","selected-sort-option","selected-item-id","is-loading","last-updated","Date","now","total-records","item-types","snOpwsRelatedItemsListItemTypes","header-title","snOpwsRelatedItemsListActionTypes","SORT_SELECTED","REFRESH_REQUESTED","ALERT_CARD_SELECTED","snNocOpenAlertEffect","__TECTONIC__$servicenow_now_record_common","FILTER_BY_ALERT","sidePanelPayload","sidePanelStatePropertyName","getNocSidePanelJsx","actions","actionComponent","actionAttributes","assignmentId","getAlertsTab","wrapperClasses","noc-side-panel","is-open","class","manage-opened","START_CHECKS","seismicActionTypes","COMPONENT_CONNECTED","STOP_CHECKS","CHECK_IF_VISIBLE","DEFAULT_ON_CHANGE","triggerNextTick","startChecking","checkIfVisible","anchorElm","actionOnChange","offsetParent","isElementVisible","visibilityInterval","stopChecking","_coeffects$state$visi","extend","viewWrapper","allow","_inDev_override","IN_DEV_OVERRIDE","_this","getAllow","targets","Target","pT","iT","resetAllow","defaultOptions","targetKeys","getLogLevel","logLevel","resetLogLevel","canLog","targetLogLevel","getFormatter","formatter","setFormatter","resetFormatters","message","msg","mergedOptions","force","tags","triggers","tag","_tag","started","_message","post","SERVER","notify","NOTIFICATION","CONSOLE","trace","TRACE","DEBUG","ERROR","updateOptions","_len","newOptions","Array","_key","updatedOptions","oldValues","newValues","trigger","condition","freeze","LOG","_typeof","toUpperCase","_CONSOLE_FORMATTER","prefix","callerName","_DEFAULT_FORMATTER","_messageToConsole","_options$output","tables","logger","console","extraOutput","_messageToNotification","_messageToServer","_caller","targetFn","_getTargetFn","_getMsgFormatter","_targets","DEFAULT_ALLOW_PERFORMANCE","DEFAULT_LOG_LEVEL","logCallback","_log","duration","clearMeasures","fnName","getMeasures","getEntriesByName","_toArray","measure","measures","effectIsVisible","_snNocSidePanelJsx","_snNocTilemapContainerJsx","_snNocSpectrumJsx","packageJson","require","version","opwsIsVisible","anchor-elm","action-on-change","nocOnVisibleChangeEffect","spectrumJsx","tilemapContainerJsx","nocSidePanelJsx","constructTree","_node$data","attributes","_node$children","newChildren","newTree","highlightedValueProps","actionable","iconName","serviceGroupSysId","selectedNode","searchNode","pop","refreshRequestByChangeType","DASHBOARD_CHANGE","ALERT","nocOnChangeEffect","arrivedTimestamp","refreshRequestAction","NOC_ON_START_REPEATED_CHANGES","requestDefaultUserViewHandler","defaultUserViewFetched","handleDefaultUserViewResponse","revertUserViewEffect","saveCurrentUserViewEffect","userViewMutationEffect","requestedSaveAsViewEffect","saveSpecificUserViewEffect","openManageViewsEffect","requestSpecificUserViewHandler","specificUserViewFetched","handleSpecificUserViewResponse","updateSpecificUserViewFailed","comparisonUserViewFetched","userViewNamesFetched","requestUserViewNamesHandler","handleUserViewNamesResponse","nocViews","getUserViewNamesFailed","_transforms2","currGlobalFilterFetched","requestCurrentGlobalFilterHandler","requestCurrentUserViewHandler","currUserViewFetched","handleCurrentUserViewResponse","nocViewsFirstRecord","nocViewsSecondRecord","firstRecordUserId","secondRecordUserId","updatePayload","updateCurrentUserViewOnStateHandler","updateCurrentUserViewFailed","getCurrentUserViewEffect","getUserViewNamesEffect","getSpecificUserViewEffect","getManageViewsEffect","_getUserViewBehavior","_saveUserViewBehavior","_revertUserViewBehavior","initChangeHandler","PAYLOADS","POPULATION_CHANGES","USER_META_REQUEST","USER_META_REQUEST_STARTED","USER_META_REQUEST_SUCCEEDED","USER_META_REQUEST_FAILED","isA11y","userMetaFetched","GQL_QUERY","handleUserMetaResponse","NOC_CONFIG_REQUEST","NOC_CONFIG_REQUEST_STARTED","NOC_CONFIG_REQUEST_SUCCEEDED","NOC_CONFIG_REQUEST_FAILED","overrideLogging","debugLevel","debugOptions","optionsJson","nocConfigFetched","handleNocConfigResponse","transformedNocConfig","onNocConfigSet","getPopulationEffect","nocConfigEffect","userMetaEffect","initChangesManagerEffect","enabledPopulationCounterAndFilter","severityValue","enabledGroups","severityState","groupsMapper","gr","colorsAndIcons","ctx","colorCode","filterPopulation","severitiesArr","keyBy","prefilterPopulationHandler","_filterPopulation","SEVERITY_CHOICE_REQUEST","SEVERITY_CHOICE_REQUEST_STARTED","SEVERITY_CHOICE_REQUEST_SUCCEEDED","SEVERITY_CHOICE_REQUEST_FAILED","transformed","sequence","handleSeverityChoicesFetched","handleSeverityChoicesResponded","records","severityChoicesResource","fieldName","requestInitialSeverityDataHandler","severityChoicesEffect","prefilterPopulationEffect"],"mappings":"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","file":"nocpit.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 237);\n","module.exports = __TECTONIC__$devsnc_library_opws_mapping_shared;","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__lodash_4_17_15;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __TECTONIC__sn_translate;","import { t } from 'sn-translate';\nimport { CONSTANTS } from '@devsnc/library-opws-mapping-shared';\n\n\nconst DEFAULTS = {\n\tCURRENT_USER_VIEW_NAME: 'default',\n\tDEFAULT_USER_VIEW_NAME: 'default'\n};\n\nconst ACTION_TYPES = {\n\tUPDATE_USER_VIEW_ON_STATE: 'UPDATE_USER_VIEW_ON_STATE',\n\tINSERT_USER_VIEW_REQUEST: 'INSERT_USER_VIEW_REQUEST',\n\tSAVE_USER_VIEW_REQUEST: 'SAVE_USER_VIEW_REQUEST',\n\tUPDATE_USER_VIEW_REQUEST: 'UPDATE_USER_VIEW_REQUEST',\n\tUSER_VIEW_SAVE_REQUESTED: 'USER_VIEW_SAVE_REQUESTED',\n\tUSER_VIEW_NAME_CHANGED: 'USER_VIEW_NAME_CHANGED',\n\n\tUPDATE_UBER_FILTER_REQUEST: 'UPDATE_UBER_FILTER_REQUEST',\n\tUPDATE_ALERT_PREFERENCES_REQUEST: 'UPDATE_ALERT_PREFERENCES_REQUEST',\n\tUPDATE_SEVERITY_FILTER_REQUEST: 'UPDATE_SEVERITY_FILTER_REQUEST',\n\tUPDATE_TILEMAPS_FORMAT_REQUEST: 'UPDATE_TILEMAPS_FORMAT_REQUEST',\n\n\tUPDATE_TO_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED: 'UPDATE_TO_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED',\n\n\tMUTATE_USER_VIEW_REQUEST_STARTED: 'MUTATE_USER_VIEW_REQUEST_STARTED',\n\tINSERT_USER_VIEW_REQUEST_SUCCEEDED: 'INSERT_USER_VIEW_REQUEST_SUCCEEDED',\n\tUPDATE_USER_VIEW_REQUEST_SUCCEEDED: 'UPDATE_USER_VIEW_REQUEST_SUCCEEDED',\n\tMUTATE_USER_VIEW_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n\n\n\t//payload: {uberFilter: {filter: string}}\n\tUBER_FILTER_SAVE_REQUESTED: CONSTANTS.ACTION_TYPES.UBER_FILTER_SAVE_REQUESTED,\n\t//payload: {severityFilter: {enabledSeverities: {...}}}\n\tSEVERITY_FILTER_SAVE_REQUESTED: CONSTANTS.ACTION_TYPES.SEVERITY_FILTER_SAVE_REQUESTED,\n\t//payload: {tilemapsFormat: {sortByField, groupByField, sortByOrder, groupByOrder}}\n\tTILEMAPS_FORMAT_SAVE_REQUESTED: CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SAVE_REQUESTED,\n\t//payload: {alertPreferences: {defaultAlertsSorting}}\n\tALERT_PREFERENCES_SAVE_REQUESTED: CONSTANTS.ACTION_TYPES.ALERT_PREFERENCES_SAVE_REQUESTED,\n\n\tUSER_VIEW_SAVE_AS_REQUEST_SAVE: 'USER_VIEW_SAVE_AS_REQUEST_SAVE',\n\n\tCURR_GLOBAL_FILTER_CHANGED: 'CURR_GLOBAL_FILTER_CHANGED',\n\tCURR_USER_VIEW_REQUEST: 'CURR_USER_VIEW_REQUEST',\n\tCURR_GLOBAL_FILTER_REQUEST: 'CURR_GLOBAL_FILTER_REQUEST',\n\tCURR_USER_VIEW_REQUEST_STARTED: 'CURR_USER_VIEW_REQUEST_STARTED',\n\tCURR_USER_VIEW_REQUEST_SUCCEEDED: 'CURR_USER_VIEW_REQUEST_SUCCEEDED',\n\tCURR_USER_VIEW_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n\n\tSPECIFIC_USER_VIEW_SELECTED: 'SPECIFIC_USER_VIEW_SELECTED',\n\tSPECIFIC_USER_VIEW_REQUEST: 'SPECIFIC_USER_VIEW_REQUEST',\n\tSPECIFIC_USER_VIEW_REQUEST_STARTED: 'SPECIFIC_USER_VIEW_REQUEST_STARTED',\n\tSPECIFIC_USER_VIEW_REQUEST_SUCCEEDED: 'SPECIFIC_USER_VIEW_REQUEST_SUCCEEDED',\n\tSPECIFIC_USER_VIEW_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n\n\tLOAD_USER_VIEW_NAMES: 'LOAD_USER_VIEW_NAMES',\n\tUSER_VIEW_NAMES_REQUEST: 'USER_VIEW_NAMES_REQUEST',\n\tUSER_VIEW_NAMES_REQUEST_STARTED: 'USER_VIEW_NAMES_REQUEST_STARTED',\n\tUSER_VIEW_NAMES_REQUEST_SUCCEEDED: 'USER_VIEW_NAMES_REQUEST_SUCCEEDED',\n\tUSER_VIEW_NAMES_REQUEST_FAILED: 'USER_VIEW_NAMES_REQUEST_FAILED',\n\n\tREVERT_CURRENT_USER_VIEW: 'REVERT_CURRENT_USER_VIEW',\n\tNOC_USER_VIEW_MANAGE_VIEWS: 'NOC_USER_VIEW_MANAGE_VIEWS',\n\n\tREVERT_CURRENT_USER_VIEW_REQUEST: 'REVERT_CURRENT_USER_VIEW_REQUEST',\n\tREVERT_CURRENT_USER_VIEW_REQUEST_STARTED: 'REVERT_CURRENT_USER_VIEW_REQUEST_STARTED',\n\tREVERT_CURRENT_USER_VIEW_REQUEST_SUCCEEDED: 'REVERT_CURRENT_USER_VIEW_REQUEST_SUCCEEDED',\n\tREVERT_CURRENT_USER_VIEW_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n\tUPDATE_DEFAULT_USER_VIEW_REQUEST: 'UPDATE_DEFAULT_USER_VIEW_REQUEST',\n\n\tUPDATE_DEFAULT_USER_VIEW_REQUEST_STARTED: 'UPDATE_DEFAULT_USER_VIEW_REQUEST_STARTED',\n\tUPDATE_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED: 'UPDATE_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED',\n\tUPDATE_DEFAULT_USER_VIEW_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n\n\tUSER_VIEW_SAVE_AS_MODAL_STATE_CHANGED: 'USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED',\n\n\tCOMPARISON_SAVE_BUTTON_STATE: 'COMPARISON_SAVE_BUTTON_STATE',\n\tCOMPARISON_USER_VIEW_REQUEST: 'COMPARISON_USER_VIEW_REQUEST',\n\tCOMPARISON_USER_VIEW_REQUEST_STARTED: 'COMPARISON_USER_VIEW_REQUEST_STARTED',\n\tCOMPARISON_USER_VIEW_REQUEST_SUCCEEDED: 'COMPARISON_USER_VIEW_REQUEST_STARTED',\n\tCOMPARISON_USER_VIEW_REQUEST_FAILED: 'COMPARISON_USER_VIEW_REQUEST_STARTED'\n};\n\nconst INSERT_NOC_USER_VIEW_PATH = 'payload.data.GlideRecord_Mutation.insert_noc_user_view';\n\nconst VIEW_SECTIONS = {\n\tGLOBAL: t('Global views'),\n\tPRIVATE: t('Private views')\n};\n\nconst VIEW_GQL_QUERIES = {\n\t//  we limit results to 999, it seems like an ad-hoc solution, if users will add more than 999 we will have to revisit the solution\n\tget_noc_user_view_names: `\n\t\tquery getNocUserViewNames($queryConditions: String!) {\n\t\t\t\tGlideRecord_Query {\n\t\t\t\t\tnoc_user_view(queryConditions: $queryConditions, pagination: {limit: 999}) {\n\t\t\t\t\t\t_results { \n\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tview_name {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuser_id {\n\t\t\t\t\t\t\t\tvalue \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\torigin_view_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\n\tget_noc_user_view: `\n\t\tquery getNocUserView($queryConditions: String!){\n\t\t\t\tGlideRecord_Query {\n\t\t\t\t\tnoc_user_view(queryConditions: $queryConditions, pagination: {limit: 2, offset: 0}) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tview_name {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfilter {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsort_by_field {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsort_by_order {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgroup_by_field {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgroup_by_order {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tenabled_severities {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talerts_panel_default_sorting {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talerts_correlated_view {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuser_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\tbusiness_service_group {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttile_size {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\torigin_view_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t`,\n\n\tget_noc_user_view_records_for_comparison: `\n\t\tquery getNocUserViewsRecords($queryConditions: String!){\n\t\t\t\tGlideRecord_Query {\n\t\t\t\t\tnoc_user_view(queryConditions: $queryConditions) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tfilter {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsort_by_field {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsort_by_order {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgroup_by_field {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgroup_by_order {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tenabled_severities {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talerts_panel_default_sorting {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talerts_correlated_view {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbusiness_service_group {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttile_size {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t`,\n\tget_current_global_filter: `\n\t\tquery getGlobalFilter($sys_id: String){\n\t\t\t\tGlideRecord_Query {\n\t\t\t\t\tnoc_user_view(sys_id: $sys_id) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfilter {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuser_id {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t\t\t\t \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t`\n};\n\nexport default {\n\tDEFAULTS,\n\tACTION_TYPES,\n\tVIEW_SECTIONS,\n\tVIEW_GQL_QUERIES,\n\tINSERT_NOC_USER_VIEW_PATH\n};","module.exports = __TECTONIC__$servicenow_ui_effect_http;","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","import {\n\tforOwn as _forOwn,\n\tget as _get,\n\tkeys as _keys,\n\tisUndefined as _isUndefined,\n\treduce as _reduce\n} from 'lodash';\n\n// TODO Arik: Remove all recordHasSection() functions, useless if we expect default properties\nexport const SECTIONS = {\n\tuberFilter: {\n\t\t/**\n\t\t * Returns true if given gql record has specified section in it\n\t\t * @param record\n\t\t */\n\t\trecordHasSection(record) {\n\t\t\treturn !_isUndefined(_get(record, 'filter.value'));\n\t\t},\n\n\t\t/**\n\t\t * Transform record (gql response) into client model representation.\n\t\t * @param record response from gql request.\n\t\t */\n\t\trecordToModel(record) {\n\t\t\tif (!record || !this.recordHasSection(record))\n\t\t\t\treturn {};\n\n\t\t\tconst uberFilter = {\n\t\t\t\tfilter: _get(record, 'filter.value') || ''\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tuberFilter\n\t\t\t};\n\t\t},\n\n\n\t\t/**\n\t\t * Transform client model representation into qgl mutation vars\n\t\t * @param model client model representation of relevant portion of user view.\n\t\t */\n\t\tmodelToMutationVar(model) {\n\t\t\tif (!model)\n\t\t\t\treturn {};\n\n\t\t\tconst {filter} = model;\n\n\t\t\tconst raw = {\n\t\t\t\tfilter\n\t\t\t};\n\n\t\t\treturn raw;\n\t\t}\n\t},\n\tseverityFilter: {\n\t\trecordHasSection(record) {\n\t\t\treturn !_isUndefined(_get(record, 'enabled_severities.value'));\n\t\t},\n\n\t\trecordToModel(record) {\n\t\t\tif (!record || !this.recordHasSection(record))\n\t\t\t\treturn {};\n\n\t\t\tconst severityFilter = {\n\t\t\t\tenabledSeverities: {}\n\t\t\t};\n\n\t\t\tconst sevKeys = _get(record, 'enabled_severities.value') || '';\n\n\t\t\t//enabledSeverities transformed to map {severityValue -> true}\n\t\t\t_forOwn(sevKeys.split(','), sev => {\n\t\t\t\tseverityFilter.enabledSeverities[sev] = true;\n\t\t\t});\n\n\t\t\treturn {severityFilter};\n\t\t},\n\n\t\tmodelToMutationVar(model) {\n\t\t\tif (!model)\n\t\t\t\treturn {};\n\n\t\t\tconst {enabledSeverities} = model;\n\t\t\tlet enabledSeveritiesArr = _keys(enabledSeverities);\n\t\t\tenabledSeveritiesArr = enabledSeveritiesArr.filter(val => enabledSeverities[val]).sort();\n\n\t\t\tconst raw = {\n\t\t\t\tenabled_severities: enabledSeveritiesArr.join(',')\n\t\t\t};\n\n\t\t\treturn raw;\n\t\t}\n\n\t},\n\ttilemapsFormat: {\n\t\trecordHasSection(record) {\n\t\t\treturn !_isUndefined(_get(record, 'sort_by_field.value'));\n\t\t},\n\n\t\trecordToModel(record) {\n\t\t\tif (!record || !this.recordHasSection(record))\n\t\t\t\treturn {};\n\n\t\t\tconst tilemapsFormat = {\n\t\t\t\tsortByField: _get(record, 'sort_by_field.value') || '',\n\t\t\t\tsortByOrder: _get(record, 'sort_by_order.value') || '',\n\t\t\t\tgroupByField: _get(record, 'group_by_field.value') || '',\n\t\t\t\tgroupByOrder: _get(record, 'group_by_order.value') || '',\n\t\t\t\tbusinessServiceGroup: _get(record, 'business_service_group.value') || '',\n\t\t\t\ttileSize: _get(record, 'tile_size.value') || ''\n\t\t\t};\n\t\t\treturn {tilemapsFormat};\n\t\t},\n\n\t\tmodelToMutationVar(model) {\n\t\t\tif (!model)\n\t\t\t\treturn {};\n\n\t\t\tconst raw = {\n\t\t\t\tsort_by_field: model.sortByField,\n\t\t\t\tsort_by_order: model.sortByOrder,\n\t\t\t\tgroup_by_field: model.groupByField,\n\t\t\t\tgroup_by_order: model.groupByOrder,\n\t\t\t\tbusiness_service_group: model.businessServiceGroup,\n\t\t\t\ttile_size: model.tileSize\n\t\t\t};\n\n\t\t\treturn raw;\n\t\t}\n\n\t},\n\talertPreferences: {\n\t\trecordHasSection(record) {\n\t\t\treturn !_isUndefined(_get(record, 'alerts_correlated_view.value'));\n\t\t},\n\n\t\trecordToModel(record) {\n\t\t\tif (!record || !this.recordHasSection(record))\n\t\t\t\treturn {};\n\n\t\t\tconst alertPreferences = {\n\t\t\t\tisAlertsCorrelatedView: _get(record, 'alerts_correlated_view.value') || false,\n\t\t\t\tdefaultAlertsSorting: _get(record, 'alerts_panel_default_sorting.value') || ''\n\t\t\t};\n\n\t\t\treturn {alertPreferences};\n\t\t},\n\n\t\tmodelToMutationVar(model) {\n\t\t\tif (!model)\n\t\t\t\treturn {};\n\n\t\t\tconst raw = {\n\t\t\t\talerts_correlated_view: model.isAlertsCorrelatedView,\n\t\t\t\talerts_panel_default_sorting: model.defaultAlertsSorting\n\t\t\t};\n\n\t\t\treturn raw;\n\t\t}\n\t}\n};\n\nconst reduceRecordToModel = (input, section) => {\n\tconst {record, result} = input;\n\treturn {\n\t\trecord,\n\t\tresult: {\n\t\t\t...result,\n\t\t\t...section.recordToModel(record)\n\t\t}\n\t};\n};\n\nexport const transformToModel = record => {\n\tconst reduced = _reduce(SECTIONS, reduceRecordToModel, {\n\t\trecord,\n\t\tresult: {}\n\t});\n\n\treturn reduced.result;\n};\n\nconst reduceModelToMutationVars = (input, section, sectionName) => {\n\tconst {model, result} = input;\n\tconst modelSection = model[sectionName];\n\treturn {\n\t\tmodel,\n\t\tresult: {\n\t\t\t...result,\n\t\t\t...section.modelToMutationVar(modelSection)\n\t\t}\n\t};\n};\n\nexport const getMutationVars = (workspace, viewName, userId, sysId, originViewId, model) => {\n\tconst reduced = _reduce(SECTIONS, reduceModelToMutationVars, {\n\t\tmodel,\n\t\tresult: {\n\t\t\tworkspace,\n\t\t\tsys_id: sysId,\n\t\t\torigin_view_id: originViewId,\n\t\t\tview_name: viewName,\n\t\t\tuser_id: userId\n\t\t}\n\t});\n\n\treturn reduced.result;\n};\n\nexport const transformRecordToMutationVars = (workspace, viewName, userId, sysId, originViewId, record) => {\n\tconst model = transformToModel(record);\n\treturn getMutationVars(workspace, viewName, userId, sysId, originViewId, model);\n};\n","module.exports = __TECTONIC__$servicenow_now_heading;","import {LOGGING, checkForError} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n    TILEMAP_SELECT_REGULAR_GROUP: 'TILEMAP_SELECT_REGULAR_GROUP'\n};\n\n/**\n * This method affects on the drilled down group within the regular services\n * @type {{effect: nocUpdateStateEffect, args: *[]}}\n */\nconst selectSpecificGroup = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\tproperties,\n\t\tupdateState,\n\t\taction: {payload, type}\n\t} = coeffects;\n\n\tLOGGING.log(`nocTilemapSelectGroupEffect->selectSpecificGroup called by action ${type}`);\n\n\tconst errors = checkForError({payload, dispatch, caller: 'selectSpecificGroup'});\n\tif (errors)\n\t\treturn;\n\n\tconst {tilemapsFormat: {businessServiceGroup}} = properties;\n\tconst {name : selectedGroup} = payload;\n\tupdateState({selectedGroup});\n};\n\n\nconst effectHandlers = {\n\tselectSpecificGroup\n};\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import {nocServicePreviewBehavior} from './nocServicePreviewBehavior';\nimport {nocFavoritesBehavior} from './nocFavoritesBehavior';\nimport getServicePreviewEffect from './getServicePreviewEffect';\nimport clearServicePreviewDataEffect from './clearServicePreviewDataEffect';\nimport addToFavoritesEffect from './addToFavoritesEffect';\nimport removeFromFavoritesEffect from './removeFromFavoritesEffect';\n\nexport const nocServicePreviewBehaviors = {\n\tbehaviors: {\n\t\tnocServicePreviewBehavior,\n\t\tnocFavoritesBehavior\n\t},\n\tACTION_TYPES: {\n\t\t...getServicePreviewEffect.ACTION_TYPES,\n\t\t...clearServicePreviewDataEffect.ACTION_TYPES,\n\t\t...addToFavoritesEffect.ACTION_TYPES,\n\t\t...removeFromFavoritesEffect.ACTION_TYPES\n\t}\n};","import {nocPopoverBehavior as behavior} from './nocPopoverBehavior';\nimport nocPopoverOpenCloseEffect from './nocPopoverOpenCloseEffect';\n\nconst {ACTION_TYPES, effectHandlers} = nocPopoverOpenCloseEffect;\n\nexport const nocPopoverBehavior = {\n    behavior,\n    ACTION_TYPES,\n    effectHandlers\n};","import {createCustomElement} from '@servicenow/ui-core';\nimport {extendWithPerformance} from './extensions/performanceExtension';\nimport {extendWithDefaults} from './extensions/defaultsExtension';\nimport {isArray as _isArray, isFunction as _isFunction} from 'lodash';\n\nconst EXTENSIONS = {\n\tdefaults: extendWithDefaults,\n\tperformance: extendWithPerformance\n};\n\nconst DEFAULT_EXTENSIONS = ['defaults'];\n\nconst asArray = (extensions) => {\n\treturn extensions ? (_isArray(extensions) ? extensions : [extensions]) : [];\n};\n\nexport const createNocElement = (name, baseConfig = {}, extensions = null) => {\n\tlet mergedConfig = baseConfig;\n\n\tconst extensionsArray = [DEFAULT_EXTENSIONS, ...asArray(extensions)];\n\n\tif (extensionsArray) {\n\t\tmergedConfig = extensionsArray.reduce((mergedConfig, extension) => {\n\t\t\t// either get functions by named map or as functions\n\t\t\tconst extensionFunctions = _isFunction(extension) ? extension : EXTENSIONS[extension];\n\t\t\tconst functions = asArray(extensionFunctions);\n\n\t\t\treturn functions ?\n\t\t\t\tfunctions.reduce((mergedConfig, value) => value(name, mergedConfig), mergedConfig) :\n\t\t\t\tmergedConfig;\n\n\t\t}, baseConfig);\n\t}\n\n\tcreateCustomElement(name, mergedConfig);\n};","import {Performance} from './utils/performance';\nimport {Logging, LogLevel} from './utils/logging';\nimport {Misc} from './utils/misc';\n\nconst DEV_LOG_LEVEL = LogLevel.INFO;\nconst PROD_LOG_LEVEL = LogLevel.WARN;\n\n/**\n * Shorthand to performance utils (instead of calling UTILS.PERFORMANCE, simply call PERFORMANCE, etc.)\n */\nexport const MISC = new Misc();\nexport const PERFORMANCE = new Performance();\nexport const LOGGING = new Logging();\n\n/**\n * Utilities for NOCpit\n */\nexport const UTILS = {\n\t/**\n\t * Miscellaneous utilities\n\t */\n\tmisc: () => MISC,\n\t/**\n\t * Logging utilities\n\t */\n\tlogging: () => LOGGING,\n\t/**\n\t * Performance utilities\n\t */\n\tperformance: () => PERFORMANCE\n};\n\n// TODO a dispatcher like will be much better (dispatch a log message to whoever listens, register the logging util(s), call by each utility)\n\n\n//\n// TODO beginning code for loading debug configuration from server and overriding default\nfunction overrideDefaults() {\n\t//\n\t// setting options (after all utilities have been created)\n\t//\n\tfunction loadDefaultsFromClient() {\n\t\t// TODO move each default call to the specific utility (thn override with global util.js)\n\n\t\t// override properties of one utility with properties that are from a different utility\n\t\tLOGGING.setLogLevel(MISC.isInDev() ? DEV_LOG_LEVEL : PROD_LOG_LEVEL);\n\t\tPERFORMANCE.setAllow(MISC.isInDev());\n\t\tPERFORMANCE.setLogCallback(LOGGING.log);\n\t}\n\n\tfunction loadDefaultsFromServer() {\n\t\t// TODO load default properties per utility from GlideProperties\n\t}\n\n\tloadDefaultsFromClient();\n\tloadDefaultsFromServer();\n}\n\noverrideDefaults();\n\n//\n// Set default window NOC (for console overrides)\n//\nwindow.NOC = {\n\t...window.NOC,\n\tMISC,\n\tLOGGING,\n\tPERFORMANCE\n};\n","import VIEW_CONSTANTS from './constants';\nimport { get as _get } from 'lodash';\n\nconst PRIVATE = VIEW_CONSTANTS.VIEW_SECTIONS.PRIVATE;\nconst GLOBAL = VIEW_CONSTANTS.VIEW_SECTIONS.GLOBAL;\n\n\nexport const isViewExists = (viewName, itemsMap) => {\n\tviewName = viewName.trim();\n\tconst found = Object.values(itemsMap).find(view => view.view_name.value.trim() === viewName);\n\treturn Boolean(found);\n};\n\n/**\n * map all items to [{key: item}, ...]\n *\n * @param items\n * @returns {Array|*}\n */\nconst itemsToMap = items => {\n\tif (!items)\n\t\treturn null;\n\n\tconst itemsMap = items.reduce((result, item) => {\n\t\tresult[item.sys_id.value] = item;\n\t\treturn result;\n\t}, {});\n\n\treturn itemsMap;\n};\n\n/**\n *\n * @param itemsMap\n * @param selected\n * @returns {[*, *]}\n */\nconst createViewItems = (items, selected = null) => {\n\tconst sections = {\n\t\t[PRIVATE]: { label: PRIVATE, children: [] },\n\t\t[GLOBAL]: { label: GLOBAL, children: [] }\n\t};\n\n\t// FIXME temporary for now\n\tconst viewChanged = false;\n\n\titems.map(item => {\n\t\t// ignore the item with the origin view id (its the 'latest' view)\n\t\tif (item.origin_view_id.value)\n\t\t\treturn;\n\n\t\t// this view is marked as the latest and was changed\n\t\tconst suffix = item.sys_id.value && viewChanged === selected ? '*' : '';\n\n\t\tconst newItem = { id: item.sys_id.value, label: item.view_name.value + suffix };\n\t\tconst section = item.user_id.value ? sections[PRIVATE] : sections[GLOBAL];\n\n\t\tsection.children.push(newItem);\n\t});\n\n\t// TODO sort each section by view name\n\tconst viewItems = [\n\t\tsections[GLOBAL],\n\t\tsections[PRIVATE]\n\t];\n\n\treturn viewItems;\n};\n\nconst getUserDefaultViewSysId = (items) => {\n\tconst defaultView = items.find(item => {\n\t\tconst originViewId = _get(item, 'origin_view_id.value', null);\n\t\tconst viewName = _get(item, 'view_name.value', null);\n\n\t\treturn originViewId && viewName === VIEW_CONSTANTS.DEFAULTS.DEFAULT_USER_VIEW_NAME;\n\t});\n\n\treturn defaultView ? _get(defaultView, 'sys_id.value', null) : null;\n};\n\nexport const isViewGlobal = (view) => {\n\tif (!view) {\n\t\treturn false;\n\t}\n\n\treturn _get(view, 'user_id.value', null) === null;\n}\n\nexport const userViewsUtils = (items, origin) => {\n\tconst itemsMap = itemsToMap(items);\n\tconst viewItems = createViewItems(items, origin);\n\tconst defaultViewSysId = getUserDefaultViewSysId(items);\n\tconst selectedView = [origin];\n\n\tconst newViews = {\n\t\tviewItems,\n\t\titemsMap,\n\t\tselectedView,\n\t\tdefaultViewSysId\n\t};\n\n\treturn newViews;\n};","import {t} from 'sn-translate';\n\nconst SEVERITY_BREAKDOWN = t('Severity breakdown');\nconst LABEL_SETTINGS = t('Display settings');\n\nconst LABEL_SECTION_TILE_SIZE = t('Service dashboard view');\nconst LABEL_TILE_SIZE= t('Tile size');\nconst SECTION_ID_TILE_SIZE = 'SECTION_ID_TILE_SIZE';\nconst SECTION_ID_TILE_SIZE_HIDDEN_LABEL = 'SECTION_ID_TILE_SIZE_HIDDEN_LABEL';\nconst ITEM_ID_TILE_SIZE = 'ITEM_ID_TILE_SIZE';\n\nconst tileSizeDropdownItems = [\n    {\n        id: 'auto',\n        label: t('Auto')\n    },\n    {\n        id: 'small',\n        label: t('Small')\n    },\n    {\n        id: 'large',\n        label: t('Large')\n    }\n];\n\nexport default {\n    SEVERITY_BREAKDOWN,\n    LABEL_SETTINGS,\n    LABEL_SECTION_TILE_SIZE,\n    LABEL_TILE_SIZE,\n    SECTION_ID_TILE_SIZE,\n    SECTION_ID_TILE_SIZE_HIDDEN_LABEL,\n    ITEM_ID_TILE_SIZE,\n    tileSizeDropdownItems\n};\n\n","module.exports = __TECTONIC__$servicenow_now_button;","module.exports = __TECTONIC__$servicenow_now_modal;","import {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {t} from 'sn-translate';\n\nconst DROPDOWN_TYPES = {\n\tGROUP_BY: {type: 'groupByField', label: t('Group by')},\n\tSORT_BY: {type: 'sortByField', label: t('Segment each group by')},\n\tGROUP_ORDER: {type: 'groupByOrder', label: t('Group order')}\n};\n\n\nconst ascending = {value: CONSTANTS.GLOBALS.ASC, label: t('Ascending')};\nconst descending = {value: CONSTANTS.GLOBALS.DESC, label: t('Descending')};\nconst ORDER_TYPES = {\n\tsortByOderOptions: [ascending, descending],\n\tgroupByOrderOptions: [ascending, descending]\n};\n\nconst ACTION_TYPES = {\n\tTILEMAPS_DROPDOWN_CHANGED: 'TILEMAPS_DROPDOWN_CHANGED',\n\tOPEN_ALERTS_PANEL: 'OPEN_ALERTS_PANEL',\n\tOPEN_GROUP_TREE_MODAL: 'OPEN_GROUP_TREE_MODAL'\n};\n\nexport default {\n\tDROPDOWN_TYPES,\n\tORDER_TYPES,\n\tACTION_TYPES\n};","import {t} from 'sn-translate';\n\nconst ACTION_TYPES = {\n\tVIEW_NAME_SELECTED: 'NOW_DROPDOWN#SELECTED_ITEMS_SET',\n\tVIEW_NAME_CHANGED: 'VIEW_NAME_CHANGED',\n\tVIEW_ITEM_CLICKED: 'NOW_DROPDOWN#ITEM_CLICKED',\n\tSAVE_BUTTON_CLICKED: 'NOW_BUTTON#CLICKED',\n\tREQUESTED_SAVE_EFFECT: 'REQUESTED_SAVE_EFFECT',\n\tVIEW_SAVE_AS_CLICKED: 'VIEW_SAVE_AS#CLICKED',\n};\n\n\nconst LABELS = {\n\tCONFIG_SELECT_PLACEHOLDER: t('Select view'),\n\tCONFIG_SELECT_TOOLTIP: t('Select view'),\n\tCONFIG_SAVE_TOOLTIP: t('Save view'),\n\tCONFIG_MORE_ACTIONS_TOOLTIP: t('More actions'),\n\tHEADER_SAVE_AS: t('Save as copy'),\n\tHEADER_DESCRIPTION: t('Assign a name to your view. A view contains all of the currently applied filters, the group type, the group order, and the tile size settings.'),\n\tTITLE_VIEW_NAME: t('View name'),\n\tSAVE_AS_TOOLTIP: t('tooltip'),\n\tVIEW_NAME_PLACEHOLDER: t('View name'),\n\tVIEW_NAME_LABEL: t('View name'),\n\tLABEL_SAVE_COPY: t('Save as copy'),\n\tLABEL_CANCEL: t('Cancel'),\n\tLABEL_REVERT: t('Discard changes'),\n\tLABEL_MANAGE: t('Manage views...'),\n\tLABEL_SAVE: t('Save'),\n\tMORE_ACTIONS_ARIA: t('More actions')\n};\n\n\nexport default {\n\tLABELS,\n\tACTION_TYPES\n}\n","import {CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tSETTINGS_MODAL_STATE_CHANGED: 'SETTINGS_MODAL#OPENED_SET',\n\tDROPDOWN_STATE_CHANGED: 'NOW_DROPDOWN#SELECTED_ITEMS_SET' //dropdown selected value changed\n};\n\n\n/**\n * When the settings modal opens or closes, this effect clears any notifications that stored on the modal level on\n * state.\n */\nconst toggleSettingsModalEffect = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tvalue: isOpen = false\n\t\t\t}\n\t\t},\n\t\tproperties,\n\t\tupdateProperties\n\t} = coeffects;\n\n\tupdateProperties({\n\t\t\t\tsettingsModal: {\n\t\t\t\t\t...properties.settingsModal,\n\t\t\t\t\tnotification: null,\n\t\t\t\t\tisOpen\n\t\t\t\t}\n\t\t\t}\n\t);\n};\n\n\nconst updateTileSize = (dispatch, tilemapsFormat, tileSize) => {\n\tif (!tileSize) {\n\t\treturn;\n\t}\n\n\tconst newTilemapsFormat = {\n\t\t...tilemapsFormat,\n\t\ttileSize\n\t};\n\n\tdispatch(CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SAVE_REQUESTED, {tilemapsFormat: newTilemapsFormat});\n};\n\n/**\n * When the dropdown for tile size changes value, this effect adds notification on settings modal.\n * @param {*} coeffects\n */\nconst dropdownValueChangedEffect = coeffects => {\n\tconst {state, action, dispatch} = coeffects;\n\tconst {value: selectedValue = []} = action.payload;\n\tconst {path} = action.meta;\n\tif (path.includes(COMPONENT_IDS.TILE_SIZE_DROPDOWN_ID)) {\n\t\tconst {\n\t\t\ttilemapsFormat\n\t\t} = state.properties;\n\n\t\tupdateTileSize(dispatch, tilemapsFormat, selectedValue[0]);\n\t}\n\n};\n\nconst effectHandlers = {\n\ttoggleSettingsModalEffect,\n\tdropdownValueChangedEffect\n};\n\nconst COMPONENT_IDS = {\n\tSETTINGS_MODAL_ID: 'SETTINGS_MODAL_ID',\n\tTILE_SIZE_DROPDOWN_ID: 'TILE_SIZE_DROPDOWN_ID'\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers,\n\tCOMPONENT_IDS\n};","module.exports = __TECTONIC__$servicenow_now_tooltip;","module.exports = __TECTONIC__$servicenow_now_text_link;","module.exports = __TECTONIC__$servicenow_now_icon;","module.exports = __TECTONIC__$servicenow_now_dropdown;","module.exports = __TECTONIC__$servicenow_now_label_value;","import {get as _get} from 'lodash';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {nocPopoverBehavior} from '../noc-popover-behavior';\nimport {generatePreviewPopoverKey} from './generatePreviewId';\n\nconst ACTION_TYPES = {\n\tNOC_CLEAR_SERVICE_PREVIEW: 'NOC_CLEAR_SERVICE_PREVIEW'\n};\n\nconst clearServicePreviewDataEffect = coeffects => {\n\tconst {\n\t\tstate: {servicePreviewResource},\n\t\tproperties,\n\t\tupdateProperties,\n\t\tdispatch\n\t} = coeffects;\n\n\tconst popoverKey = generatePreviewPopoverKey(servicePreviewResource);\n\tconst currId = _get(properties, 'popover.id', null);\n\n\tLOGGING.debug(`clearServicePreviewDataEffect: invoked popoverKey=${popoverKey} currId=${currId}`);\n\n\tupdateProperties({servicePreviewData: null});\n\n\tif (popoverKey && popoverKey === currId) {\n\t\tLOGGING.debug(`clearServicePreviewDataEffect: clearing servicePreviewResource popoverKey=${popoverKey}`);\n\n\t\tdispatch(nocPopoverBehavior.ACTION_TYPES.NOC_POPOVER_CLOSED);\n\t}\n};\n\nconst effectHandlers = {\n\tclearServicePreviewDataEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","module.exports = __TECTONIC__$servicenow_ui_core;","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, LOGGING, createNocUpdateStateEffect, checkForError, onNextFrame} from '@devsnc/library-opws-mapping-shared';\nimport {isEmpty as _isEmpty, isString as _isString, isUndefined as _isUndefined} from 'lodash';\nimport {constructBreadcrumb} from './utils/serviceGroupBreadcrumb';\nimport {constructServiceGroupsBuckets} from './utils/serviceGroupBuckets';\nimport constructServiceGroupsTree from './utils/serviceGroupTree';\n\nconst ACTION_TYPES = {\n    GET_SERVICE_GROUP_TREE_REQUEST: 'GET_SERVICE_GROUP_TREE_REQUEST',\n    GET_SERVICE_GROUP_TREE_REQUEST_STARTED: 'GET_SERVICE_GROUP_TREE_REQUEST_STARTED',\n    GET_SERVICE_GROUP_TREE_REQUEST_SUCCEEDED: 'GET_SERVICE_GROUP_TREE_REQUEST_SUCCEEDED',\n    GET_SERVICE_GROUP_TREE_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n    SERVICE_GROUP_TREE_RESOURCE_STATE_UPDATED: 'SERVICE_GROUP_TREE_RESOURCE_STATE_UPDATED',\n    SERVICE_GROUP_SELECT_DIFFERENT_GROUP: 'SERVICE_GROUP_SELECT_DIFFERENT_GROUP'\n};\n\nconst getServiceGroupsTreeHandler = {\n    effect(coeffects) {\n        const {dispatch, action, state} = coeffects;\n        LOGGING.log(`getServiceGroupsTreeEffect->getServiceGroupsTreeHandler called by action ${action.type}`);\n        const {timestampForTiles} = state.properties;\n\n        if (timestampForTiles)\n            dispatch(ACTION_TYPES.GET_SERVICE_GROUP_TREE_REQUEST, {\n                timestamp: timestampForTiles,\n                includeBusinessServices: true\n            });\n    }\n};\n\nconst getServiceGroupsTreeRequest = createHttpEffect('/api/sn_nocpit/nocpit/GroupTree', {\n    method: 'GET',\n    queryParams: ['timestamp', 'includeBusinessServices'],\n    startActionType: ACTION_TYPES.GET_SERVICE_GROUP_TREE_REQUEST_STARTED,\n    successActionType: ACTION_TYPES.GET_SERVICE_GROUP_TREE_REQUEST_SUCCEEDED,\n    errorActionType: ACTION_TYPES.GET_SERVICE_GROUP_TREE_REQUEST_FAILED\n});\n\n\nconst handleGetServiceGroupsTreeResponse = async coeffects => {\n    const {\n\t\tdispatch,\n\t\tupdateState,\n\t\taction: {payload, type}\n    } = coeffects;\n    \n    LOGGING.log(`getServiceGroupsTreeHandler->handleGetServiceGroupsTreeResponse called by action ${type}`);\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleGetServiceGroupsTreeResponse'});\n\tif (errors)\n        return;\n        \n    updateState({\n        serviceGroupsTreeResource: {\n            succeeded: true,\n            data: payload || {}\n        }\n    });\n\n    await onNextFrame();\n\n    dispatch(ACTION_TYPES.SERVICE_GROUP_TREE_RESOURCE_STATE_UPDATED, {});\n};\n\nconst createServiceGroupsTreeModel = createNocUpdateStateEffect((state, action, getAfterStateUpdate) => {\n    LOGGING.log(`getServiceGroupsTreeHandler->createServiceGroupsTreeModel called by action ${action.type}`);\n    const {properties, populationMapper, serviceGroupsTreeResource: {data = {}} = {}} = state;\n    const {tilemapsFormat, timestampForTiles, severities} = properties;\n    const {businessServiceGroup} = tilemapsFormat || {};\n\n    //Verify population timestamp is equal to the one within the tree\n    if (!severities) {\n        return state;\n    }\n\n    if (timestampForTiles !== data.timestamp) {\n        //TODO Arik: what was the reason for this?\n        // LOGGING.info('timestampForTiles !== data.timestamp --> did not render the tiles before!');\n    }\n\n    const breadcrumb = (businessServiceGroup) ? constructBreadcrumb(data, businessServiceGroup) : null;\n    const buckets = (businessServiceGroup) ?\n        (!_isEmpty(breadcrumb) ? constructServiceGroupsBuckets(populationMapper, breadcrumb.selectedNodeRef) : null): null;\n    const tree = constructServiceGroupsTree(severities, data);\n\n    const servicesCount = getNumOfUniqueServices(buckets);\n\n    const newState = {\n        ...state,\n        properties: {\n            ...state.properties,\n            serviceGroups: {\n                ...state.properties.serviceGroups,\n                servicesCount,\n                tree,\n                breadcrumb,\n                buckets\n            }\n        }\n    };\n\n    getAfterStateUpdate().then(dispatch => {\n        LOGGING.log(`getServiceGroupsTreeHandler->createServiceGroupsTreeModel->getAfterStateUpdate`);\n    });\n\n    return newState;\n});\n\n/**\n * Update the noc_user table -> tilemapsFormat section\n * expect to get in payload :{\n *     item: {\n *         id\n *     }\n * }\n * @type {{effect(*): void}}\n */\nconst updateUserSelectedServiceGroup = {\n    effect(coeffects) {\n        const {dispatch, action, state} = coeffects;\n        LOGGING.log(`getServiceGroupsTreeHandler->updateUserSelectedServiceGroup called by action ${action.type}`);\n\n        const {tilemapsFormat} = state.properties;\n        const {item: {id} = {}} = action.payload;\n        if (!_isString(id))\n            throw new Error(`updateUserSelectedServiceGroup expected to get an object {item: {id :''}} got->${action.payload} `);\n\n        //Id can be empty string, in case of reset Service Group and moving back to regular services\n        //if (tilemapsFormat && newServiceGroupId !== undefined && newServiceGroupId !== null) {\n        if (tilemapsFormat) {\n            const newTilemapsFormat = {\n                tilemapsFormat: {\n                    ...tilemapsFormat,\n                    businessServiceGroup: id\n                }\n            };\n\n            dispatch(CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SAVE_REQUESTED, newTilemapsFormat);//Update noc-user table\n        }\n    }\n};\n\nconst reduceService = (servicesIds, service) => {\n    servicesIds.add(service.id);\n    return servicesIds;\n};\n\nconst reduceBucket = (servicesIds, bucket) => bucket.population.reduce(reduceService, servicesIds);\n\nconst getNumOfUniqueServices = (buckets) => {\n    if (buckets === null || _isUndefined(buckets))\n        return 0;\n    const servicesIds = buckets.reduce(reduceBucket, new Set());\n    return servicesIds.size;\n};\n\nconst effectHandlers = {\n    getServiceGroupsTreeHandler,\n    getServiceGroupsTreeRequest,\n    handleGetServiceGroupsTreeResponse,\n    createServiceGroupsTreeModel,\n    updateUserSelectedServiceGroup\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};","/**\n * This effect provides action name to update current user view.\n * It encapsulates logic to update or insert a record on noc_user_view table.\n */\nimport { get as _get, isEqual as _isEqual } from 'lodash';\nimport { getMutationVars } from './transforms';\nimport { LOGGING } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\n\n\n\nconst createSpecificUserViewSaveRequestedEffect = coeffects => {\n\tLOGGING.info(`Called`, { caller: 'saveCurrentUserViewEffect.createSpecificUserViewSaveRequestedEffect' });\n\tconst {\n\t\tdispatch,\n\t\taction: { payload },\n\t\tproperties\n\t} = coeffects;\n\n\tconst workspace = 'nocpit';\n\tconst { userMeta: { userId } } = properties;\n\tconst { viewName, sysId } = payload;\n\n\tconst variables = getMutationVars(\n\t\tworkspace,\n\t\tviewName,\n\t\tuserId,\n\t\tsysId,\n\t\tnull,\n\t\tproperties\n\t);\n\tconst actionType = sysId ? VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST : VIEW_CONSTANTS.ACTION_TYPES.INSERT_USER_VIEW_REQUEST;\n\tdispatch(actionType, variables);\n};\n\nconst createCurrentUserViewSaveRequestedEffect = mutationActionType => coeffects => {\n\tLOGGING.info(`Called with ${mutationActionType}`, { caller: 'saveCurrentUserViewEffect.createCurrentUserViewSaveRequestedEffect' });\n\n\tconst {\n\t\tdispatch,\n\t\tstate,\n\t\taction,\n\t\tproperties: {\n\t\t\tuserMeta,\n\t\t\tviews: { selectedView }\n\t\t\t// workspace //FIXME temporary removing workspace for WS integration\n\t\t}\n\t} = coeffects;\n\n\t//temporary removing workspace for WS integration\n\tconst workspace = 'nocpit';\n\n\tconst { userId } = userMeta;\n\tconst userViewModel = action.payload;\n\tconst sysId = _get(state, 'userViewResource.sys_id') || '-1';\n\tconst originViewId = selectedView ? selectedView[0] : null; //_get(state, 'userViewResource.originViewId', null);\n\n\t//getMutationVars will return only variables for passed part in userViewModel.\n\tconst variables = getMutationVars(workspace, VIEW_CONSTANTS.DEFAULTS.CURRENT_USER_VIEW_NAME, userId, sysId, originViewId, userViewModel);\n\tdispatch(mutationActionType, variables);\n};\n\nconst dispatchComparisonForViews = coeffect => {\n\tconst { dispatch, action: { payload: { current, latest } } } = coeffect;\n\tlet q = `sys_id=${current}^ORsys_id=${latest}`;\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_USER_VIEW_REQUEST, { queryConditions: q });\n}\n\nconst compareViews = coeffect => {\n\tconst { action, updateProperties } = coeffect;\n\tconst viewsArr = _get(action, 'payload.data.GlideRecord_Query.noc_user_view._results', null);\n\tif (viewsArr != null) {\n\t\tconst [originView, latestView] = viewsArr;\n\t\tconst keys = Object.keys(originView);\n\t\tconst result = keys.find(key => latestView[key] && !_isEqual(originView[key], latestView[key]));\n\t\tupdateProperties({ noChangesOnCurrentView: Boolean(!result) });\n\t}\n}\n\nconst uberFilterSaveRequestedHandler =\n\tcreateCurrentUserViewSaveRequestedEffect(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_UBER_FILTER_REQUEST);\n\nconst severityFilterSaveRequestedHandler =\n\tcreateCurrentUserViewSaveRequestedEffect(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_SEVERITY_FILTER_REQUEST);\n\nconst tilemapsFormatSaveRequestedHandler =\n\tcreateCurrentUserViewSaveRequestedEffect(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_TILEMAPS_FORMAT_REQUEST);\n\nconst alertPreferencesSaveRequestedHandler =\n\tcreateCurrentUserViewSaveRequestedEffect(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_ALERT_PREFERENCES_REQUEST);\n\nconst revertCurrentUserViewRequestedHandler =\n\tcreateCurrentUserViewSaveRequestedEffect(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_TO_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED);\n\nconst effectHandlers = {\n\tcreateSpecificUserViewSaveRequestedEffect,\n\tuberFilterSaveRequestedHandler,\n\tseverityFilterSaveRequestedHandler,\n\ttilemapsFormatSaveRequestedHandler,\n\talertPreferencesSaveRequestedHandler,\n\trevertCurrentUserViewRequestedHandler,\n\tdispatchComparisonForViews,\n\tcompareViews\n};\n\nexport default {\n\teffectHandlers\n};\n","import { LOGGING } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\nimport { get as _get } from 'lodash';\n\n\n/**\n * When the user view modal opens or closes, this effect clears any notifications that stored on the modal level on\n * state.\n */\nconst toggleUserViewSaveAsModalEffect = coeffects => {\n\tconst {\n\t\taction: { payload = {} },\n\t\tupdateProperties,\n\t\tproperties\n\t} = coeffects;\n\tconst { value: isOpen = false } = payload;\n\tLOGGING.info(`Received a call to ${isOpen ? 'open' : 'close'} 'save as...' modal`, { caller: 'userViewSaveAsModalEffect.toggleUserViewSaveAsModalEffect' });\n\tupdateProperties({\n\t\tuserViewSaveAsModal: {\n\t\t\tisValid: true,\n\t\t\terrors: null,\n\t\t\tnotification: null,\n\t\t\tisOpen\n\t\t}\n\t});\n};\n\nconst saveUserViewSaveAsModalEffect = coeffects => {\n\tLOGGING.info(`User clicked on 'Save' in the 'Save as...' modal`, { caller: 'userViewSaveAsModalEffect.saveUserViewSaveAsModalEffect' });\n\tconst {\n\t\taction: { payload: { action: { getViewNameFromInput } } },\n\t\tdispatch\n\t} = coeffects;\n\n\t// close the modal\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED, { value: false });\n\t// dispatch save view\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_REQUEST_SAVE, { viewName: getViewNameFromInput() });\n};\n\nconst userViewNameChangedEffect = coeffects => {\n\tconst {\n\t\taction,\n\t\tproperties,\n\t\tupdateProperties\n\t} = coeffects;\n\n\tconst { value: viewName } = action.payload;\n\n\tupdateProperties({\n\t\tuserViewSaveAsModal: {\n\t\t\t...properties.userViewSaveAsModal,\n\t\t\tviewName\n\t\t}\n\t});\n};\n\nconst effectHandlers = {\n\ttoggleUserViewSaveAsModalEffect,\n\tsaveUserViewSaveAsModalEffect,\n\tuserViewNameChangedEffect\n};\n\nconst COMPONENT_IDS = {\n\tUSER_VIEW_SAVE_AS_MODAL_ID: 'USER_VIEW_SAVE_AS_MODAL_ID'\n};\n\nexport default {\n\teffectHandlers,\n\tCOMPONENT_IDS\n};\n","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {checkForError, CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\n\n/**\n * This is the table which is used for taking the filter conditions from,\n * Currently hardcoded to the default table, should be tabken from noc_user_view table property\n * @type {string}\n */\nconst QUERY_PARSE_TABLE = 'cmdb_ci_service_auto';\n\nexport const ACTION_TYPES = {\n\tQUERY_PARSE_REQUEST_REQUESTED: 'QUERY_PARSE_REQUEST_REQUESTED',\n\tQUERY_PARSE_REQUEST_STARTED: 'QUERY_PARSE_REQUEST_STARTED',\n\tQUERY_PARSE_REQUEST_SUCCEEDED: 'QUERY_PARSE_REQUEST_SUCCEEDED',\n\tQUERY_PARSE_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nexport const getQueryParseEffectRequest = createHttpEffect('/api/now/ui/query_parse/' + QUERY_PARSE_TABLE, {\n\tmethod: 'GET',\n\tqueryParams: ['sysparm_query'],\n\tstartActionType: ACTION_TYPES.QUERY_PARSE_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.QUERY_PARSE_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.QUERY_PARSE_REQUEST_FAILED\n});\n\n/**\n *\n * @param payload\n * @returns {*}\n */\nconst parseQueryResponse = (payload) => {\n\tif (!payload) {\n\t\treturn 0;\n\t}\n\n\tconst {parsed_query = []} = payload.result;\n\treturn parsed_query.flat().length;\n};\n\nexport const handleQueryParseResponse = coeffects => {\n\tconst caller = 'handleQueryParseResponse';\n\tLOGGING.info('Received response', {caller});\n\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller});\n\tif (errors) {\n\t\treturn;\n\t}\n\n\tconst filterSize = parseQueryResponse(payload);\n\tupdateProperties({filterSize});\n};\n\nexport const effectHandlers = {\n\tgetQueryParseEffectRequest,\n\thandleQueryParseResponse\n};\n","import serviceGroups from '../noc-service-groups-tree-behaviors/nocServiceGroupsEffect';\nimport nocTilemapSelectGroupEffect from '../noc-tilemap-data-behavior/nocTilemapSelectGroupEffect';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n    NOC_BREADCRUMB_ITEM_CLICKED: 'NOC_BREADCRUMB_ITEM_CLICKED'\n};\n\nconst onBreadcrumbClickEffect = {\n    effect(coeffects) {\n        const {dispatch, state, action} = coeffects;\n        LOGGING.log(`nocBreadcrumbEffect->onBreadcrumbClickEffect called by action ${action.type}`);\n        const {payload: {id=''}} =action;\n\n        const newServiceGroupId = {item: {id}} //The structure of the item is equal to the one send from the tree\n        dispatch(serviceGroups.ACTION_TYPES.SERVICE_GROUP_SELECT_DIFFERENT_GROUP, newServiceGroupId);\n        dispatch(nocTilemapSelectGroupEffect.ACTION_TYPES.TILEMAP_SELECT_REGULAR_GROUP, {name: ''}); //Reset the drill down\n    }\n};\n\nconst effectHandlers = {\n    onBreadcrumbClickEffect\n};\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};\n","import {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n    NOC_SEVERITY_INDICATOR_CLICKED: 'NOC_SEVERITY_INDICATOR#CLICKED' //When severity indicator clicked\n};\n\nconst filterSeverities = coeffects => {\n    const {action, dispatch, properties} = coeffects;\n    const {severityClicked} = action.payload;\n    const {enabledSeverities}  = properties.severityFilter || {};\n\n    enabledSeverities[severityClicked] = !enabledSeverities[severityClicked];\n    dispatch(CONSTANTS.ACTION_TYPES.SEVERITY_FILTER_SAVE_REQUESTED, {\n        severityFilter: {enabledSeverities}\n    });\n};\n\nexport const effectHandlers = {\n    filterSeverities,\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};","module.exports = __TECTONIC__$servicenow_now_alert;","import snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport {view} from './view';\nimport styles from './nocElementWithTooltip.scss';\nimport {createNocElement} from '../../createNocElement';\n\ncreateNocElement('noc-element-with-tooltip', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\n\tstyles,\n\n\tproperties: {\n\t\ttooltip: {\n\t\t\tdefault: '' //String\n\t\t},\n\n\t\t//type: must be DOM element\n\t\ttargetElm: {\n\t\t\tdefault: null\n\t\t}\n\t}\n});","import \"@servicenow/now-dropdown\";\nimport {t} from 'sn-translate';\n\nexport const NONE_VALUE = 'none';\n\nconst createOption = (option) => {\n    return {\n        ...option,\n        id: option.value,\n        value: option.label,\n        label: option.label\n    };\n};\n\nconst createOptions = (choices, displayNone = false,\n                       displayNoneValue = t('--NONE--'),\n                       selectedValue = null) => {\n    let options = [];\n\n    if (displayNone) {\n        const opt = {'value': NONE_VALUE, 'label': displayNoneValue};\n        options.push(createOption(opt));\n    }\n\n    //add 'choices'\n    if (choices) {\n        choices.forEach(choice => {\n            options.push(createOption(choice, selectedValue));\n        });\n    }\n\n    return options;\n};\n\nexport const view = (state, dispatch) => {\n    const {\n        label, \n        choices, \n        displayNone, \n        displayNoneValue, \n        value, \n        disabled,\n        tooltipContent,\n        manageSelectedItems\n    } = state.properties;\n\n    const labelWithNoSpaces = label.replace(/\\s+/g, '-').toLowerCase();\n    const dropDownID = `noc_field_select_${labelWithNoSpaces}_${disabled}`;\n    const hiddenLabelId = `${dropDownID}_hidden`;\n    const options = createOptions(choices, displayNone, displayNoneValue, value);\n    const selectedItem = [value];\n\n    const labelledBy = `${dropDownID} ${hiddenLabelId}`;\n    \n    return (\n        <form>\n            <label \n            className='dropdown-label'\n            id={dropDownID}>\n                {label} \n            </label>\n\n            <label id={hiddenLabelId} className='now-a11y-label'>\n                {tooltipContent}\n            </label>\n\n            <now-dropdown disabled={disabled}\n                          selected-items={selectedItem}\n                          tooltip-content={tooltipContent}\n                          key={dropDownID}\n                          className='noc-field-dropdown'\n                          items={options}\n                          variant='tertiary'\n                          size=\"md\"\n                          bare\n                          manage-selected-items={manageSelectedItems}\n                          aria-labelledby={labelledBy}\n            />\n        </form>\n    );\n};","import {createNocElement, nocModalActionBehavior} from '@devsnc/library-opws-mapping-shared';\nimport {view} from './view';\nimport styles from './nocTilemapToolbar.scss';\nimport transformState from './transformState';\nimport {nocTilemapToolbarBehavior} from './nocTilemapToolbarBehavior';\nimport {nocServiceGroupsTreeBehaviors} from '../noc-service-groups-tree-behaviors';\n\ncreateNocElement('noc-tilemap-toolbar', {\n\tview,\n\ttransformState,\n\tstyles,\n\tproperties: {\n\t\tnocConfig: {\n\t\t\tdefault: null\n\t\t},\n\t\ttilemapsFormat: {\n\t\t\tdefault: null\n\t\t},\n\t\tsidePanel: {\n\t\t\tdefault: null\n\t\t},\n\t\tsortByFields: {\n\t\t\tdefault: null\n\t\t},\n\t\tgroupByFields: {\n\t\t\tdefault: null\n\t\t},\n\t\tselectedAlert: {\n\t\t\tdefault:  null\n\t\t},\n\t\tselectedGroup: {\n\t\t\tdefault: null\n\t\t},\n\t\tserviceGroups: {\n\t\t\tdefault: null\n\t\t},\n\t\tworkspace: {\n\t\t\tdefault: null\n\t\t},\n\t\tisModalOpen: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\tbehaviors: [\n\t\tnocTilemapToolbarBehavior,\n\t\tnocModalActionBehavior,\n\t\tnocServiceGroupsTreeBehaviors.behaviors\n\t]\n});\n\n","import {getOrdinal} from '@devsnc/library-opws-mapping-shared';\n\n/**\n *\n * @param field\n * @param ascending\n * @returns {function(*, *): number}\n */\nexport const comparatorByField = (field, ascending) => {\n\tif (ascending) {\n\t\treturn (a, b) => ordinalComparator(a[field], b[field]);\n\t} else {\n\t\treturn (a, b) => ordinalComparator(b[field], a[field]);\n\t}\n};\n\n/**\n *\n * @param a\n * @param b\n * @returns {number}\n * @constructor\n */\nconst ordinalComparator = (a, b) => {\n\tconst ordA = getOrdinal(a);\n\tconst ordB = getOrdinal(b);\n\n\tif (ordA > ordB) {\n\t\treturn 1;\n\t} else if (ordB > ordA) {\n\t\treturn -1;\n\t}\n\n\treturn 0;\n};\n","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, LOGGING, checkForError} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tREMOVE_FROM_FAVORITES_REQUEST: 'REMOVE_FROM_FAVORITES_REQUEST',\n\tREMOVE_FROM_FAVORITES_REQUEST_STARTED: 'REMOVE_FROM_FAVORITES_REQUEST_STARTED',\n\tREMOVE_FROM_FAVORITES_REQUEST_SUCCEEDED: 'REMOVE_FROM_FAVORITES_REQUEST_SUCCEEDED',\n\tREMOVE_FROM_FAVORITES_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\n\n\n\nconst removeFromFavoritesRequest = createHttpEffect('/api/sn_nocpit/nocpit/RemoveFromFavorites', {\n\tmethod: 'PUT',\n\tqueryParams: ['workspace', 'ciId'],\n\tstartActionType: ACTION_TYPES.REMOVE_FROM_FAVORITES_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.REMOVE_FROM_FAVORITES_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.REMOVE_FROM_FAVORITES_REQUEST_FAILED\n});\n\n\n\nconst removeFromFavoritesResponse = coeffects => {\n\tLOGGING.log('removeFromFavoritesResponse');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'removeFromFavoritesResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst {favorite} = payload.result;\n\n\tupdateProperties({\n\t\tpath: 'servicePreviewData.favorite',\n\t\tvalue: favorite,\n\t\toperation: 'set'\n\t});\n};\n\n\nconst effectHandlers = {\n\tremoveFromFavoritesRequest,\n\tremoveFromFavoritesResponse\n};\n\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, LOGGING, checkForError} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tADD_TO_FAVORITES_REQUEST: 'ADD_TO_FAVORITES_REQUEST',\n\tADD_TO_FAVORITES_REQUEST_STARTED: 'ADD_TO_FAVORITES_REQUEST_STARTED',\n\tADD_TO_FAVORITES_REQUEST_SUCCEEDED: 'ADD_TO_FAVORITES_REQUEST_SUCCEEDED',\n\tADD_TO_FAVORITES_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\n\n\n\nconst addToFavoritesRequest = createHttpEffect('/api/sn_nocpit/nocpit/AddToFavorites', {\n\tmethod: 'PUT',\n\tqueryParams: ['workspace', 'ciId'],\n\tstartActionType: ACTION_TYPES.ADD_TO_FAVORITES_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.ADD_TO_FAVORITES_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.ADD_TO_FAVORITES_REQUEST_FAILED\n});\n\n\nconst addToFavoritesResponse = coeffects => {\n\tLOGGING.log('addToFavoritesResponse');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'addToFavoritesResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst {favorite} = payload.result;\n\n\tupdateProperties({\n\t\tpath: 'servicePreviewData.favorite',\n\t\toperation: 'set',\n\t\tvalue: favorite\n\t});\n};\n\n\nconst effectHandlers = {\n\taddToFavoritesRequest,\n\taddToFavoritesResponse\n};\n\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","/**\n * Generates id for current preview data state.\n * Designed to be used as key to prevent jsx redraws on preview popover.\n * @param {*} servicePreviewResource \n */\nexport const generatePreviewId = servicePreviewResource => {\n\tif (!servicePreviewResource)\n\t\treturn 'none';\n\n\tconst {\n\t\tserviceId, tilemapId, timestamp\n\t} = servicePreviewResource;\n\n\treturn `preview_${tilemapId}_${serviceId}_${timestamp}`;\n};\n\n/**\n * Preview popover key doesn't have the timestamp.\n * It's a stable key that reduce renderings of <noc-preview-popover> element on DOM on each change in tiles data.\n * @param {*} servicePreviewResource \n */\nexport const generatePreviewPopoverKey = servicePreviewResource => {\n\tif (!servicePreviewResource)\n\t\treturn 'none';\n\n\tconst {\n\t\tserviceId, tilemapId\n\t} = servicePreviewResource;\n\n\treturn `preview_popover_${tilemapId}_${serviceId}`;\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {CONSTANTS, checkForError, onNextFrame, createNocUpdateStateEffect} from '@devsnc/library-opws-mapping-shared';\n\nimport {isUndefined as _isUndefined} from 'lodash';\n\nconst isDefined = value => (value !== null && !_isUndefined(value));\n\nconst ACTION_TYPES = {\n\tSERVICE_PREVIEW_REQUESTED: CONSTANTS.ACTION_TYPES.SERVICE_PREVIEW_REQUESTED,\n\tREFRESH_SERVICE_PREVIEW_REQUESTED: CONSTANTS.ACTION_TYPES.REFRESH_SERVICE_PREVIEW_REQUESTED,\n\tSERVICE_PREVIEW_REQUEST: 'SERVICE_PREVIEW_REQUEST',\n\tSERVICE_PREVIEW_REQUEST_STARTED: 'SERVICE_PREVIEW_REQUEST_STARTED',\n\tSERVICE_PREVIEW_REQUEST_SUCCEEDED: 'SERVICE_PREVIEW_REQUEST_SUCCEEDED',\n\tSERVICE_PREVIEW_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,//'SERVICE_PREVIEW_REQUEST_FAILED'\n};\n\nconst refreshServicePreviewRequested = coeffects => {\n\tconst {action, state, dispatch} = coeffects;\n\n\tconst {\n\t\tserviceId, \n\t\ttilemapId, \n\t\tsucceeded,\n\t\ttimestamp: displayedPreviewTimestamp\n\t} = (state.servicePreviewResource || {});\n\n\tif (!succeeded || !serviceId) {\n\t\tLOGGING.log('refreshServicePreviewRequested: no data about currently displaying service preview. Skipping refresh.');\n\t\treturn;\n\t}\n\n\tconst {timestamp: requestedTimestamp} = action.payload;\n\n\tif (!requestedTimestamp) {\n\t\tLOGGING.log('refreshServicePreviewRequested: Expected \"timestamp\" in payload, got ', requestedTimestamp);\n\t\treturn;\n\t}\n\n\tif (requestedTimestamp === displayedPreviewTimestamp) {\n\t\tLOGGING.log('refreshServicePreviewRequested: displayed preview timestamp is the same as requested. Skipping refresh ', requestedTimestamp);\n\t\treturn;\n\t}\n\n\tdispatch(ACTION_TYPES.SERVICE_PREVIEW_REQUESTED, {serviceId, tilemapId, timestamp: requestedTimestamp});\n};\n\nconst servicePreviewRequestedHandler = async ({action, properties, dispatch, updateState}) => {\n\tconst {workspace} = properties;\n\n\tconst {\n\t\tserviceId,\n\t\ttilemapId,\n\t\ttimestamp} = action.payload;\n\n\tLOGGING.info(`Called to open service preview for service ${serviceId} / ${tilemapId} (${timestamp})`, {caller: 'getServicePreviewEffect.servicePreviewRequestedHandler'});\n\n    //temporary removing workspace for WS integration\n\n\tif (!serviceId || !workspace || !timestamp) {\n\t\tLOGGING.warn(['servicePreviewRequestedHandler missing parameters: serviceId: ', serviceId,\n\t\t\t' workspace: ', workspace,\n\t\t\t' timestamp: ', timestamp]);\n\t\treturn;\n\t}\n\n\tupdateState({\n\t\tservicePreviewResource: {\n\t\t\tserviceId,\n\t\t\ttilemapId,\n\t\t\ttimestamp\n\t\t}\n\t});\n\n\tawait onNextFrame();\n\n\tdispatch(ACTION_TYPES.SERVICE_PREVIEW_REQUEST, {serviceId, workspace, timestamp});\n};\n\nconst servicePreviewHandler = createHttpEffect('/api/sn_nocpit/nocpit/EMServicePreview/:serviceId', {\n\tmethod: 'GET',\n\tpathParams: ['serviceId'],\n\tqueryParams: ['workspace', 'timestamp'],\n\tstartActionType: ACTION_TYPES.SERVICE_PREVIEW_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.SERVICE_PREVIEW_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.SERVICE_PREVIEW_REQUEST_FAILED\n});\n\n/**\n *\n * Notes: empty display string can be an acceptable value\n * @param field\n * @returns {string|*}\n */\nconst getDisplayName = field => {\n\t// empty string can be an acceptable value\n\treturn isDefined(field.display_name) ? field.display_name : field.name;\n};\n\n/**\n *\n * Notes: empty display string can be an acceptable value\n * @param field\n * @returns {string|*}\n */\nconst getDisplayValue = field => {\n\t// empty string can be an acceptable value\n\treturn isDefined(field.display_value) ? field.display_value : field.value;\n};\n\nconst transformOverviewFields = field => {\n\t\n\tconst {name, value} = field;\n\treturn {\n\t\tname,\n\t\tvalue,\n\t\tdisplayName: getDisplayName(field),\n\t\tdisplayValue: getDisplayValue(field)\n\t}\n};\n\nconst transformResponse = response => {\n\tconst overviewFields = response.overviewFields.map(transformOverviewFields);\n\n\treturn {\n\t\t...response,\n\t\toverviewFields\n\t};\n};\n\nconst servicePreviewResponseHandler = async coeffects => {\n\tLOGGING.info('servicePreviewResponseHandler');\n\tconst {\n\t\tstate,\n\t\tdispatch,\n\t\tupdateState, \n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'servicePreviewResponseHandler'});\n\tif (errors)\n\t\treturn;\n\t\n\tconst {\n\t\tserviceId,\n\t\ttilemapId,\n\t\ttimestamp\n\t} = (state.servicePreviewResource || {});\n\n\tconst receivedServiceId = payload.sysId || '';\n\t\n\tif (serviceId !== receivedServiceId) {\n\t\tLOGGING.info(`servicePreviewResponseHandler: waiting for data on service ${serviceId}, \n\t\tgot service ${receivedServiceId}. \n\t\tSkipping the data.`);\n\n\t\treturn;\n\t}\n\t\n\tconst servicePreviewData = transformResponse(payload || {});\n\n\tupdateState({\n\t\tservicePreviewResource: {\n\t\t\tsucceeded: true,\n\t\t\tserviceId,\n\t\t\ttilemapId,\n\t\t\ttimestamp\n\t\t}\n\t});\n\n\tupdateProperties({\n\t\tservicePreviewData: { //selectable\n\t\t\ttilemapId,\n\t\t\t...servicePreviewData \n\t\t}\n\t});\n\n\tawait onNextFrame();\n\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_SERVICE_PREVIEW_SET, {});\n};\n\nconst effectHandlers = {\n\tservicePreviewRequestedHandler,\n\trefreshServicePreviewRequested,\n\tservicePreviewHandler,\n\tservicePreviewResponseHandler\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {isFunction as _isFunction} from 'lodash';\n\nconst ACTION_TYPES = {\n    /**\n     * To be dispatched by opener component that renders noc-popover, then popover is added on DOM (before or after).\n     * payload={focusTarget: effect(), tileId: String}\n     * @param focusTarget {Function} function that will be called when popover closes, to regain focus on target element.\n     * @param tileId {String} will be passed to `focusTarget` function. This removes need to create new `focusTarget` function every time.\n     */\n    NOC_POPOVER_OPEN: 'NOC_POPOVER_OPEN',\n\n\t//payload={positionStyle={object for inline style}}\n\tNOC_POPOVER_FIT: 'NOC_POPOVER_FIT',\n\n\t//to be dispatched by opener component that renders noc-popover, after popover has been removed from DOM.\n\tNOC_POPOVER_CLOSED: 'NOC_POPOVER_CLOSED'\n};\n\n/**\n * This effect only stores the handler that will be used to restore original focus when popover is closed.\n */\nconst nocPopoverOpenEffect = coeffects => {\n\tconst {\n\t\tupdateProperties,\n\t\taction: {payload: {focusTarget}}\n\t} = coeffects;\n\n\tupdateProperties({popover: {focusTarget}});\n};\n\n/**\n * This effect sets positionStyle for popover content, after it was already computed.\n * Computation done asynchronously, in `hook-insert` after content element was rendered.\n */\nconst nocPopoverFitEffect = coeffects => {\n\t//id sent on each fit, because initially on open id is still not ready.\n\tconst {\n\t\tproperties,\n\t\tupdateProperties,\n\t\taction: {\n\t\t\tpayload: {positionStyle, id}\n\t\t}\n\t} = coeffects;\n\n\tupdateProperties({\n\t\tpopover: {\n\t\t\t...properties.popover,\n\t\t\tid,\n\t\t\tpositionStyle\n\t\t}\n\t});\n};\n\n/**\n * Default behavior on popover close: restore focus on target element.\n * using handler function that was provided in POPOVER_OPEN\n */\nconst nocPopoverCloseEffect = coeffects => {\n\tconst {\n\t\tupdateProperties,\n\t\tproperties: {popover = {}}\n\t} = coeffects;\n\n\tconst {focusTarget} = popover;\n\n\tif (_isFunction(focusTarget)) {\n\t\tfocusTarget();\n\t}\n\n\tupdateProperties({popover});\n};\n\nconst effectHandlers = {\n\tnocPopoverOpenEffect,\n\tnocPopoverCloseEffect,\n\tnocPopoverFitEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {isArray as _isArray, isFunction as _isFunction} from 'lodash';\n\nimport {LOGGING} from './utils';\n\nexport const createActionConfig = (handler, isPrivate = true) => {\n\tif (!handler) {\n\t\tLOGGING.warn(new Error('createActionConfig skipping because handler is not defined!'));\n\t\treturn {};\n\t}\n\n\tif (_isFunction(handler)) {\n\t\thandler = {\n\t\t\teffect: handler\n\t\t};\n\n\t} else if (_isArray(handler)) {\n\t\tthrow new Error('Array of handlers not supported. Only single hander is supported');\n\t}\n\n\treturn {\n\t\t...handler,\n\t\tstopPropagation: (isPrivate === true)\n\t};\n};","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport nocChangeEffect from '../noc-changes-notificator-behavior/nocChangeEffect';\n\nconst ACTION_TYPES = {\n\tNOC_VISIBILITY_CHANGED: 'NOC_VISIBLE_CHANGED'\n};\n\nconst handleVisibilityChangeEffect = ({dispatch, action}) => {\n\tconst {payload: {isVisible}} = action;\n\n\tLOGGING.info(`Setting NOCpit visibility to ${isVisible}`, {caller: 'handleVisibilityChangeEffect'});\n\n\tdispatch(isVisible ? nocChangeEffect.ACTIONS_TYPES.NOC_ON_START_CHANGE_TIMER : nocChangeEffect.ACTIONS_TYPES.NOC_ON_STOP_CHANGE_TIMER);\n};\n\nconst effectHandlers = {\n\thandleVisibilityChangeEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {checkForError, LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n    NOC_SELECT_ALERT_CARD: 'NOC_SELECT_ALERT_CARD',\n};\n\nlet delayTimer;\nconst nocSelectedAlertEffect = coeffects => {\n    LOGGING.info('nocSelectedAlertEffect', {caller: 'nocSelectedAlertEffect'});\n    clearTimeout(delayTimer);\n    const {\n        dispatch,\n        action: {payload},\n        updateProperties\n    } = coeffects;\n\n    const {selectedAlert} = payload;\n    const errors = checkForError({payload, dispatch, caller: 'nocSelectedAlertEffect'});\n    if (errors)\n        return;\n    delayTimer = setTimeout(function () {\n        updateProperties({selectedAlert});\n    }, 300);\n\n\n};\nconst effectHandlers = {\n    nocSelectedAlertEffect\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, LOGGING, checkForError} from '@devsnc/library-opws-mapping-shared';\nimport {isEmpty as _isEmpty, xor as _xor, get as _get} from 'lodash';\n\nconst ACTION_TYPES = {\n    GET_IMPACTED_SERVICES_REQUEST_STARTED: 'GET_IMPACTED_SERVICES_REQUEST_STARTED',\n    GET_IMPACTED_SERVICES_REQUEST_SUCCEEDED: 'GET_IMPACTED_SERVICES_REQUEST_SUCCEEDED',\n    GET_IMPACTED_SERVICES_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n    GET_IMPACTED_SERVICES_REQUEST: 'GET_IMPACTED_SERVICES_REQUEST',\n    CLEAR_IMPACTED_SERVICES_REQUEST: CONSTANTS.ACTION_TYPES.CLEAR_IMPACTED_SERVICES_REQUEST\n};\n\nconst getImpactedServicesEffectHandler = createHttpEffect('/api/sn_nocpit/nocpit/ImpactedServicesByAlert', {\n    method: 'GET',\n    queryParams: ['alertId', 'groupId', 'ciId'],\n    startActionType: ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST_STARTED,\n    successActionType: ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST_SUCCEEDED,\n    errorActionType: ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST_FAILED\n});\n\nconst handleImpactedServicesRequestStarted = coeffects => {\n    const {\n        updateProperties\n    } = coeffects;\n\n    LOGGING.info(`Requested to get impacted services for selected service`,\n        {caller: 'effectImpactedServices.handleImpactedServicesRequestStarted'});\n\n    updateProperties({isImpactedServicesLoading: true});\n};\n\nconst handleGetImpactedServicesResponse = coeffects => {\n    const caller = 'effectImpactedServices.handleGetImpactedServicesResponse';\n    LOGGING.info(`handleGetImpactedServicesResponse`, {caller});\n\n    const {\n        properties,\n        dispatch,\n        updateProperties,\n        action: {payload}\n    } = coeffects;\n\n    LOGGING.info(`Received get impacted services for selected service`, {caller});\n    updateProperties({isImpactedServicesLoading: false});\n\n    const errors = checkForError({payload, dispatch, caller});\n    if (errors)\n        return;\n\n    const receivedIds = _get(payload, 'impactedServicesIds', []);\n    const currentIds = properties.impactedServicesAlertIds || [];\n\n    // check if the arrays contain different impacted services\n    const hasChangesInIds = (_isEmpty(currentIds) && _isEmpty(receivedIds)) || !_isEmpty(_xor(currentIds, receivedIds));\n\n    if (hasChangesInIds)\n        updateProperties({impactedServicesAlertIds: receivedIds});\n};\n\n\nconst clearImpactedServicesHandler = coeffects => {\n    LOGGING.info('clearImpactedServicesHandler', {caller: 'clearImpactedServicesHandler'});\n\n    const {\n        dispatch,\n        action: {payload},\n        updateProperties\n    } = coeffects;\n    const errors = checkForError({payload, dispatch, caller: 'clearImpactedServicesHandler'});\n    if (errors)\n        return;\n    updateProperties({selectedAlert: null, impactedServicesAlertIds: []});\n\n};\n\nconst effectHandlers = {\n    getImpactedServicesEffectHandler,\n    handleImpactedServicesRequestStarted,\n    handleGetImpactedServicesResponse,\n    clearImpactedServicesHandler\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {t} from 'sn-translate';\n\nexport const ORPHANS =  t('Other services');\n\nconst isGroup = nodeType =>{\n   return  nodeType === 'GROUP';\n}\n\nconst createGroupBucket = (displayValue, id) => ({\n    groupField: {displayValue, value: displayValue, name: 'serviceGroup', id, isServiceGroup:true},\n    population: []\n});\n\nconst addBusinessServicesChildren = (setContainer, node) => {\n    const {children} = node;\n    for (const child of children) {\n        const {data: {id, type}} = child;\n        if (!isGroup(type)) {\n            setContainer.add(id);\n            continue;\n        }\n        addBusinessServicesChildren(setContainer, child);\n    }\n};\n\n/**\n *  Distribute all Business Services into temporary containers, which represents only\n *The first level children of the selected node + a special system Children container -> to hold\n *All Business Services which resides directly under the selected node.\n *We use Set in order to ensure existing of only one instance of service per container.\n * @param selectedNodeRef - The parent node (the one that was selected in the Service Tree)\n * @returns {*}\n */\nconst splitIntoContainers = selectedNodeRef => {\n    const {data: {id}} = selectedNodeRef;\n\n    const containers = selectedNodeRef.children.reduce((result, child) => {\n        const {data: {id, name, type}} = child;\n        if (!isGroup(type)) {\n            result[ORPHANS].services.add(id);\n        } else {\n            //In case of a GROUP\n            if (!result[name])\n                result[name] = {\n                    id,\n                    services: new Set()\n                };\n\n            addBusinessServicesChildren(result[name].services, child);\n        }\n        return result;\n    }, {\n        [ORPHANS]:{\n            id,\n            services: new Set()\n        }\n    });\n\n    return containers;\n};\n\nexport const constructServiceGroupsBuckets = function (populationMapper, selectedNodeRef) {\n    if (!populationMapper || !selectedNodeRef || !selectedNodeRef.children) {\n        LOGGING.warn('NOC: constructServiceGroupsBuckets didn\\'t get the mandatory arguments', populationMapper, selectedNodeRef);\n        return null;\n    }\n    const containers = splitIntoContainers(selectedNodeRef);\n    const buckets = Object.keys(containers).map(key =>{\n        const {id, services} = containers[key];\n        const bucket = createGroupBucket(key, id);\n\n        services.forEach(id => {\n            const populationMapperItem = populationMapper[id];\n            if (populationMapperItem.isEnabled)\n                bucket.population.push(populationMapperItem);\n        });\n\n        return bucket;\n    });\n\n    return buckets;\n};","import {CONSTANTS, createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport serviceGroups from './nocServiceGroupsEffect';\n\nexport const nocGetServiceGroupsBehavior = {\n\tname: 'nocGetServiceGroupsTreeBehavior',\n\tactionHandlers: {\n\t\t/**\n         * On Population changed, build the model (tree, breadcrumb, layout buckets)\n         */\n\t\t[CONSTANTS.ACTION_TYPES.NOC_POPULATION_SET]:\n                  createActionConfig(serviceGroups.effectHandlers.getServiceGroupsTreeHandler),\n\n\t\t[serviceGroups.ACTION_TYPES.GET_SERVICE_GROUP_TREE_REQUEST]:\n                  createActionConfig(serviceGroups.effectHandlers.getServiceGroupsTreeRequest),\n\n\t\t[serviceGroups.ACTION_TYPES.GET_SERVICE_GROUP_TREE_REQUEST_SUCCEEDED]:\n                  createActionConfig(serviceGroups.effectHandlers.handleGetServiceGroupsTreeResponse),\n\n\t\t[serviceGroups.ACTION_TYPES.SERVICE_GROUP_TREE_RESOURCE_STATE_UPDATED]:\n                  createActionConfig(serviceGroups.effectHandlers.createServiceGroupsTreeModel),\n\n\t\t/**\n         * On Tilesmap Format changed (We need this in order to create again the\n         * serviceGroup model to reflect the changes made in tilemapFormatConf\n         */\n\t\t [CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SET]:\n                   createActionConfig(serviceGroups.effectHandlers.createServiceGroupsTreeModel),\n\n        [CONSTANTS.ACTION_TYPES.NOC_POPULATION_GROUPS_SET]:\n            createActionConfig(serviceGroups.effectHandlers.createServiceGroupsTreeModel),\n\n\t\t/**\n         * On Service Group Tree item clicked/changed\n         */\n\t\t[\"NOW_CONTENT_TREE#ACTIONABLE_ITEM_CLICKED\"]:\n                  createActionConfig(serviceGroups.effectHandlers.updateUserSelectedServiceGroup),\n\n\t\t/**\n         * On Breadcrumb Service Group item clicked/changed\n         */\n\t\t[serviceGroups.ACTION_TYPES.SERVICE_GROUP_SELECT_DIFFERENT_GROUP]:\n                  createActionConfig(serviceGroups.effectHandlers.updateUserSelectedServiceGroup)\n\t}\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CHANGE_EVENT_CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {keys as _keys, omit as _omit} from 'lodash';\n\nconst {GLOBAL_ACTION_TYPES} = CHANGE_EVENT_CONSTANTS;\n\n/**\n * TODO: refactor, rewrite the flow.\n * `prop` and `previousChanges` store component state in global variables and use it asynchronously.\n * In addition, function `doCall` reuses same `dispatch` for multiple async updates of state.\n * This is not promised to work by design in Seismic.\n * Danger of state overwriting in future versions of Seismic.\n */\n\nlet previousChanges = {'changes': {},'consumers':{}};\nlet prop = {'changes': {},'consumers':{}};\n//keeping id of current `setTimeout`,\n//to protect against duplicate `setTimeout` invocations for `isChanged` request.\nlet timeoutId = null;\n\nconst ACTIONS_TYPES = {\n\tNOC_ON_READ_CHANGES:          'NOC_ON_READ_CHANGES',\n\tNOC_ON_START_CHANGES:         'NOC_ON_START_CHANGES',\n\tNOC_ON_READ_CHANGES_QUERY:    'NOC_ON_READ_CHANGES_QUERY',\n\tNOC_ON_READ_CHANGES_SUCCESS:  'NOC_ON_READ_CHANGES_SUCCESS',\n\tNOC_ON_READ_CHANGES_ERROR:    'NOC_ON_READ_CHANGES_ERROR',\n\tNOC_DO_INIT:                  'NOC_DO_INIT',\n\tNOC_ON_START_CHANGE_TIMER:    'NOC_ON_START_CHANGE_TIMER',\n\tNOC_ON_STOP_CHANGE_TIMER:     'NOC_ON_STOP_CHANGE_TIMER'\n};\n\nconst initPreviousChanges = (state,payload) => {\n\tconst consumers = {\n\t\t...previousChanges.consumers,\n\t\t...payload.types\n\t};\n\t\n\tconst pChanges = {\n\t\t...state,\n\t\tconsumers,\n\t\tid: payload.id, \n\t\tchanges: {\n\t\t\t...previousChanges.changes,\n\t\t\t...payload.types\n\t\t}\n\t};\n\tpreviousChanges = pChanges;\n};\n\nconst initChangeManager = (state,payload) => {\n\tconst newState = {\n\t\t...state,\n\t\tconsumers: {\n\t\t\t...prop.consumers\n\t\t},\n\t\tid: payload.id,\n\t\tchanges: {\n\t\t\t...prop.changes\n\t\t}\n\t};\n\n\tif (!payload.changeAction || payload.changeAction  === 'add') {\n\t\tnewState.consumers = {...newState.consumers, ...payload.types};\n\t\tnewState.changes = {...newState.changes, ...payload.types};\n\t} else if (payload.changeAction === 'remove') {\n\t\tnewState.consumers = _omit(newState.consumers, _keys(payload.types));\n\t\tnewState.changes = _omit(newState.changes, _keys(payload.types));\n\t}\n\n\treturn newState;\n};\n\nconst getChangeRequestParams = (coeffects, payload) => {\n\tconst {id, consumers} = payload.propChanges;\n\tconst params = {types: consumers};\n\tconst changeTypes = JSON.stringify(params);\n\treturn {\n\t\tid,\n\t\tchangeTypes\n\t};\n};\n\nconst requestChangesCall = dispatch => () => {\n\tdispatch(ACTIONS_TYPES.NOC_ON_START_CHANGES, {propChanges: prop});\n};\n\nconst stopCurrentTimeout = () => {\n\tif (timeoutId) {\n\t\tLOGGING.info('repeated change already running, resetting.', {caller: 'nocChangeEffect.stopCurrentTimeout'});\n\t\tclearTimeout(timeoutId);\n\t\ttimeoutId = null;\n\t}\n};\n\nconst REQUEST_START_CHANGE_TIMER = {\n\teffect(coeffects) {\n\t\tLOGGING.info('Called to start change timer', {caller: 'nocChangeEffect.REQUEST_START_CHANGE_TIMER'});\n\n\t\tconst {dispatch} = coeffects;\n\t\tdispatch(CHANGE_EVENT_CONSTANTS.GLOBAL_ACTION_TYPES.NOC_INIT_CHANGE_MANAGER);\n\t}\n};\n\nconst REQUEST_STOP_CHANGE_TIMER = {\n\teffect(coeffects) {\n\t\tLOGGING.info('Called to stop change timer', {caller: 'nocChangeEffect.REQUEST_STOP_CHANGE_TIMER'});\n\n\t\tconst {\n\t\t\tstate,\n\t\t\taction\n\t\t} = coeffects;\n\n\t\tconst payload = {...action.payload, changeAction: 'remove'};\n\n\t\tstopCurrentTimeout();\n\t\tprop = initChangeManager(state, payload);\n\t\tinitPreviousChanges(state, payload);\n\t}\n};\n\nconst doCall = (dispatch) => {\n\t//extra safety to prevent any potential duplication of setTimeout\n\tstopCurrentTimeout();\n\ttimeoutId = setTimeout(requestChangesCall(dispatch), prop.properties.nocConfig.nocRefreshRate);\n};\n\nconst REQUEST_REPEATED_CHANGE_NOTIFICATION = {\n\teffect(coeffects) {\n\t\tconst {\n\t\t\tdispatch, \n\t\t\tstate,\n\t\t\taction: {payload}\n\t\t} = coeffects;\n\n\t\tprop = initChangeManager(state, payload);\n\t\tinitPreviousChanges(state, payload);\n\n\t\tstopCurrentTimeout();\n\t\tLOGGING.info('Initializing repeated change sequence.', {caller: 'nocChangeEffect.REQUEST_REPEATED_CHANGE_NOTIFICATION'});\n\t\trequestChangesCall(dispatch)();\n\t}   \n};\n\n/**\n * This handler called to trigger getChange.\n * The effect decides which REST API to apply.\n */\nconst REQUEST_CHANGE_NOTIFICATION =  {\n\teffect(coeffects) {\n\t\tconst {payload} = coeffects.action;\n\t\tconst {dispatch, state, action} = coeffects;\n\n\t\ttimeoutId = null;\n\t\tconst queryParams = getChangeRequestParams(coeffects, payload);\n\t\tLOGGING.info(`getChangeEffect called by action ${action.type}`, {caller: 'nocChangeEffect.REQUEST_CHANGE_NOTIFICATION', extra: queryParams.changeTypes});\n\t\tdispatch(ACTIONS_TYPES.NOC_ON_READ_CHANGES, queryParams);\n\t}\n};\n\nconst CHANGE_RESPONSE_REQUEST_SENT = {\n\teffect(coeffects) {\n\t\tconst {dispatch, state, action} = coeffects;\n\n\t\tLOGGING.info('Change response request sent', {caller: 'nocChangeEffect.CHANGE_RESPONSE_REQUEST_SENT', extra: action.type});\n\t }\n};\n\n/**\n * Sets the property return by thge result.\n * @param {} coeffects\n * @param {*} changes \n * @param {*} properties \n */\nconst setChangeProperties = (coeffects) => {\n\tlet  notificationMap  = [];\n\tconst {state, action} = coeffects;\n\tconst {properties}    = state;\n\tconst {types}         = action.payload;\n\tif (typeof types == 'undefined') {\n\t\treturn notificationMap;\n\t}\n\tconst json = JSON.parse(types);\n\tlet key = '';\n\tfor (key in json) {\n\t\tif (previousChanges.changes[key] !== json[key]) {\n\t\t\tnotificationMap.push({'name': key, 'value': json[key], 'prevValue': previousChanges.changes[key]});\n\t\t\tpreviousChanges.changes[key] = json[key];\n\t\t}\n\t}\n\treturn notificationMap;\n};\n\nconst notifyChanges = (coeffects, notificationList) => {\n\tconst {dispatch} = coeffects;\n   \n\tnotificationList.forEach((value, key) => {\n\t\tLOGGING.info(`nocChangeEffect/notifyChanges: \n\t\tname:       ${value.name} \n\t\tvalue:      ${value.value}\n\t\tPrevValue:  ${value.prevValue}`);\n\t\t\n\t\tconst changedItem = {\n\t\t\ttype: value.name,\n\t\t\tvalue: value.value, \n\t\t\tprevious: value.prevValue\n\t\t};\n\t\t\n\t\tdispatch(GLOBAL_ACTION_TYPES.NOC_EVENT_HASH_CHANGED, changedItem);\n\t});\n};\n\nconst CHANGE_RESPONSE_SUCCESS = coeffects => {\n\tconst {\n\t\tdispatch\n\t} = coeffects;\n\n\tLOGGING.info('isChange success', {caller: 'nocChangeEffect.CHANGE_RESPONSE_SUCCESS'});\n\tdoCall(dispatch); //schedule next call for changes\n\tconst notificationList = setChangeProperties(coeffects);\n\tnotifyChanges(coeffects, notificationList);\n};\n\nconst CHANGE_RESPONSE_ERROR = coeffects => {\n\tconst {\n\t\tdispatch\n\t} = coeffects;\n\n\tLOGGING.warn('isChange failure', {caller: 'nocChangeEffect.CHANGE_RESPONSE_ERROR'});\n\tdoCall(dispatch); //schedule next call for changes\n};\n\nconst REQUEST_CHANGE_NOTIFICATION_EFFECT_HANDLER = createHttpEffect('/api/now/it_service/isChanged', {\n\tmethod: 'GET',\n\tqueryParams: ['id', 'changeTypes'],\n\tstartActionType:    ACTIONS_TYPES.NOC_ON_READ_CHANGES_QUERY,\n\tsuccessActionType:  ACTIONS_TYPES.NOC_ON_READ_CHANGES_SUCCESS,\n\terrorActionType:    ACTIONS_TYPES.NOC_ON_READ_CHANGES_ERROR\n});\n\nconst effectHandlers = {\n\tREQUEST_STOP_CHANGE_TIMER,\n\tREQUEST_START_CHANGE_TIMER,\n\tREQUEST_REPEATED_CHANGE_NOTIFICATION,\n\tREQUEST_CHANGE_NOTIFICATION,\n\tREQUEST_CHANGE_NOTIFICATION_EFFECT_HANDLER,\n\tCHANGE_RESPONSE_REQUEST_SENT,\n\tCHANGE_RESPONSE_SUCCESS,\n\tCHANGE_RESPONSE_ERROR\n};\n\nexport default {\n\tACTIONS_TYPES,\n\teffectHandlers\n}","/**\n * GQL Mutation to insert and update User View record.\n */\n\n\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {handleUserViewResponseEffect} from './handleUserViewResponseEffect';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\n\n\nconst GQL_MUTATION_INSERT = `\n\tmutation ($workspace: String!,\n\t$view_name: String!, \n\t$user_id: String!, \n\t$filter: String!,\n\t$tile_size: String!,\n\t$sort_by_field: String!,\n\t$sort_by_order: String!,\n\t$group_by_field: String!, \n\t$group_by_order: String!,\n\t$business_service_group: String!, \n\t$enabled_severities: String!,\n\t$alerts_panel_default_sorting: String!,\n\t$alerts_correlated_view: String!,\n\t$origin_view_id: String){\n\t\tGlideRecord_Mutation {\n\t\t\tinsert_noc_user_view \n\t\t\t\t(workspace: $workspace,\n\t\t\t\tview_name: $view_name, \n\t\t\t\tuser_id: $user_id, \n\t\t\t\tfilter: $filter,\n\t\t\t\tsort_by_field: $sort_by_field, \n\t\t\t\tsort_by_order: $sort_by_order,\n\t\t\t\tgroup_by_field: $group_by_field,\n\t\t\t\tgroup_by_order: $group_by_order,\n\t\t\t\tbusiness_service_group: $business_service_group, \n\t\t\t\tenabled_severities: $enabled_severities,\n\t\t\t\ttile_size: $tile_size,\n\t\t\t\talerts_panel_default_sorting: $alerts_panel_default_sorting,\n\t\t\t\talerts_correlated_view: $alerts_correlated_view,\n\t\t\t\torigin_view_id: $origin_view_id) {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tview_name {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tuser_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tfilter {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tbusiness_service_group {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tenabled_severities {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\ttile_size {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\talerts_panel_default_sorting {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\talerts_correlated_view {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\torigin_view_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n`;\n\nconst GQL_MUTATION_UPDATE = `\n\tmutation ($sys_id: String!,\n\t$workspace: String!,\n\t$view_name: String!, \n\t$user_id: String!, \n\t$filter: String!,\n\t$tile_size: String!,\n\t$sort_by_field: String!,\n\t$sort_by_order: String!,\n\t$group_by_field: String!, \n\t$group_by_order: String!,\n\t$business_service_group: String!, \n\t$enabled_severities: String!,\n\t$alerts_panel_default_sorting: String!,\n\t$alerts_correlated_view: String!,\n\t$origin_view_id: String){\n\t\tGlideRecord_Mutation {\n\t\t\tupdate_noc_user_view \n\t\t\t\t(sys_id: $sys_id,\n\t\t\t\tworkspace: $workspace,\n\t\t\t\tview_name: $view_name, \n\t\t\t\tuser_id: $user_id, \n\t\t\t\tfilter: $filter,\n\t\t\t\tsort_by_field: $sort_by_field, \n\t\t\t\tsort_by_order: $sort_by_order,\n\t\t\t\tgroup_by_field: $group_by_field,\n\t\t\t\tgroup_by_order: $group_by_order,\n\t\t\t\tbusiness_service_group: $business_service_group, \n\t\t\t\tenabled_severities: $enabled_severities,\n\t\t\t\ttile_size: $tile_size,\n\t\t\t\talerts_panel_default_sorting: $alerts_panel_default_sorting,\n\t\t\t\talerts_correlated_view: $alerts_correlated_view,\n\t\t\t\torigin_view_id: $origin_view_id) {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tview_name {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tuser_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tfilter {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tbusiness_service_group {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tenabled_severities {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\ttile_size {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\talerts_panel_default_sorting {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\talerts_correlated_view {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\torigin_view_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n`;\n\nconst insertUserViewHandler = createGraphQLEffect(GQL_MUTATION_INSERT, \n\t{\n\t\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n\t\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.INSERT_USER_VIEW_REQUEST_SUCCEEDED,\n\t\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n\t\tvariableList: [\n\t\t\t'workspace', \n\t\t\t'view_name', \n\t\t\t'user_id', \n\t\t\t'filter', \n\t\t\t'enabled_severities',\n\t\t\t'alerts_panel_default_sorting',\n\t\t\t'alerts_correlated_view',\n\t\t\t'sort_by_field', \n\t\t\t'sort_by_order', \n\t\t\t'business_service_group',\n\t\t\t'group_by_field', \n\t\t\t'group_by_order',\n\t\t\t'tile_size',\n\t\t\t'origin_view_id'\n\t\t]\n\t}\n\t);\n\nconst updateUserViewHandler = createGraphQLEffect(GQL_MUTATION_UPDATE,\n\t{\n\t\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n\t\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED,\n\t\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n\t\tvariableList: [\n\t\t\t'sys_id',\n\t\t\t'workspace',\n\t\t\t'view_name',\n\t\t\t'user_id',\n\t\t\t'filter',\n\t\t\t'enabled_severities',\n\t\t\t'alerts_panel_default_sorting',\n\t\t\t'alerts_correlated_view',\n\t\t\t'sort_by_field',\n\t\t\t'sort_by_order',\n\t\t\t'business_service_group',\n\t\t\t'group_by_field',\n\t\t\t'group_by_order',\n\t\t\t'tile_size',\n\t\t\t'origin_view_id'\n\t\t]\n\t}\n);\n\nconst insertUserViewResponseHandler = handleUserViewResponseEffect(VIEW_CONSTANTS.INSERT_NOC_USER_VIEW_PATH);\n\nconst GQL_MUTATION_UPDATE_UBER_FILTER = `\n\tmutation ($sys_id: String!,\n\t$filter: String!){\n\t\tGlideRecord_Mutation {\n\t  \tupdate_noc_user_view (\n\t\t\t\tsys_id: $sys_id,\n\t\t\t\tfilter: $filter) {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tfilter {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \t }\n`;\n\nconst GQL_MUTATION_UPDATE_SEVERITY_FILTER = `\n\tmutation ($sys_id: String!,\n\t$enabled_severities: String!){\n\t\tGlideRecord_Mutation {\n\t\t\tupdate_noc_user_view (sys_id: $sys_id,\n\t\t\t\tenabled_severities: $enabled_severities) {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tenabled_severities {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n`;\n\nconst GQL_MUTATION_UPDATE_ALERT_PREFERENCES = `\n\tmutation ($sys_id: String!,\n\t$alerts_panel_default_sorting: String!,\n\t$alerts_correlated_view: String!){\n\t\tGlideRecord_Mutation {\n\t\t\tupdate_noc_user_view \n\t\t\t(sys_id: $sys_id,\n\t\t\t alerts_panel_default_sorting: $alerts_panel_default_sorting,\n\t\t\t alerts_correlated_view: $alerts_correlated_view) {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\talerts_panel_default_sorting {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\talerts_correlated_view {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst GQL_MUTATION_UPDATE_TILEMAPS_FORMAT = `\n\tmutation (\n\t\t$sys_id: String!,\n\t\t$sort_by_field: String!,\n\t\t$sort_by_order: String!, \n\t\t$group_by_field: String!, \n\t\t$business_service_group: String!, \n\t\t$group_by_order: String!,\n\t\t$tile_size: String!\n\t) {\n\t\tGlideRecord_Mutation {\n\t\tupdate_noc_user_view (\n\t\t\t\tsys_id: $sys_id,\n\t\t\t\tsort_by_field: $sort_by_field,\n\t\t\t\tsort_by_order: $sort_by_order, \n\t\t\t\tgroup_by_field: $group_by_field,\n\t\t\t\tbusiness_service_group: $business_service_group,\n\t\t\t\tgroup_by_order: $group_by_order,\n\t\t\t\ttile_size: $tile_size\n\t\t\t\t) {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tbusiness_service_group {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\ttile_size{\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n`;\n\nconst GQL_MUTATION_UPDATE_TO_DEFAULT_USER_VIEW = `\nmutation ($sys_id: String!,\n\t$sort_by_field: String!,\n\t$enabled_severities: String!,\n\t$alerts_correlated_view: String!,\n\t$sort_by_order: String!, \n\t$workspace: String!, \n\t$view_name: String!, \n\t$business_service_group: String!, \n\t$group_by_field: String!, \n\t$tile_size: String!,\n\t$group_by_order: String!,\n\t$origin_view_id: String!){\n\t\tGlideRecord_Mutation {\n\t  \tupdate_noc_user_view (\n\t\t\t\tsys_id: $sys_id,\n\t\t\t\tview_name: $view_name,\n\t\t\t\tworkspace: $workspace,\n\t\t\t\tenabled_severities: $enabled_severities,\n\t\t\t\talerts_correlated_view: $alerts_correlated_view,\n\t\t\t\tsort_by_field: $sort_by_field,\n\t\t\t\tsort_by_order: $sort_by_order, \n\t\t\t\tbusiness_service_group: $business_service_group,\n\t\t\t\tgroup_by_field: $group_by_field, \n\t\t\t\ttile_size: $tile_size,\n\t\t\t\tgroup_by_order: $group_by_order,\n\t\t\t\torigin_view_id: $origin_view_id) {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tview_name {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tworkspace {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tenabled_severities {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\talerts_correlated_view {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsort_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_field {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tgroup_by_order {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tbusiness_service_group {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\ttile_size{\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\torigin_view_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n  \t}\n`;\n\nconst UPDATE_RESPONSE_PATH = 'payload.data.GlideRecord_Mutation.update_noc_user_view';\n\nconst updateUberFilterHandler = createGraphQLEffect(GQL_MUTATION_UPDATE_UBER_FILTER, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n\tvariableList: [\n\t\t'sys_id', \n\t\t'filter'\n\t]\n});\n\nconst updateSeverityFilterHandler = createGraphQLEffect(GQL_MUTATION_UPDATE_SEVERITY_FILTER, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n\tvariableList: [\n\t\t'sys_id', \n\t\t'enabled_severities'\n\t]\n});\n\nconst updateAlertPreferencesHandler = createGraphQLEffect(GQL_MUTATION_UPDATE_ALERT_PREFERENCES, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n\tvariableList: [\n\t\t'sys_id',\n\t\t'alerts_panel_default_sorting',\n\t\t'alerts_correlated_view'\n\t]\n});\n\nconst updateTilemapsFormatHandler = createGraphQLEffect(GQL_MUTATION_UPDATE_TILEMAPS_FORMAT, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n\tvariableList: [\n\t\t'sys_id', \n\t\t'sort_by_field', \n\t\t'sort_by_order', \n\t\t'group_by_field', \n\t\t'group_by_order', \n\t\t'business_service_group',\n\t\t'tile_size'\n\t]\n});\n\n\nconst revertCurrentUserViewHandler = createGraphQLEffect(GQL_MUTATION_UPDATE_TO_DEFAULT_USER_VIEW, {\n    startActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED,\n    successActionType: VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED,\n    errorActionType: VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED,\n    variableList: [\n\t\t\t'sys_id', \n\t\t\t'enabled_severities',\n\t\t\t'alerts_panel_default_sorting',\n\t\t\t'alerts_correlated_view',\n\t\t\t'sort_by_field', \n\t\t\t'sort_by_order', \n\t\t\t'group_by_field', \n\t\t\t'group_by_order', \n\t\t\t'view_name', \n\t\t\t'workspace',  \n\t\t\t'business_service_group',\n\t\t\t'tile_size',\n\t        'origin_view_id'\n\t\t]\n});\nconst updateUserViewResponseHandler = handleUserViewResponseEffect(UPDATE_RESPONSE_PATH);\n\nconst mutateUserViewHandler = coeffects => {\n\tLOGGING.log('Received mutateUserViewHandler', {caller: 'userViewMutationEffect'});\n};\n\nconst mutateUserViewFailed = coeffects => {\n\tLOGGING.warn('Received mutateUserViewFailed', {caller: 'userViewMutationEffect'});\n};\n\nconst effectHandlers = {\n\tinsertUserViewHandler,\n\tupdateUserViewHandler,\n\tinsertUserViewResponseHandler,\n\tupdateUberFilterHandler,\n\tupdateSeverityFilterHandler,\n\tupdateAlertPreferencesHandler,\n\tupdateTilemapsFormatHandler,\n\trevertCurrentUserViewHandler,\n\tupdateUserViewResponseHandler,\n\tmutateUserViewHandler,\n\tmutateUserViewFailed\n};\n\nexport default {\n\teffectHandlers\n};\n","import { get as _get, isEqual as _isEqual } from 'lodash';\nimport { transformToModel } from './transforms';\nimport { CONSTANTS, onNextFrame, checkForError, LOGGING } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\n\n/**\n *\n * @param dispatch\n * @param selectableProps\n */\nconst updateUserViewMetaData = async (dispatch, selectableProps) => {\n\tawait onNextFrame();\n\n\tif (selectableProps.uberFilter) {\n\t\tdispatch(CONSTANTS.ACTION_TYPES.UBER_FILTER_SET, { forcePopulationUpdate: true });\n\t}\n\n\tif (selectableProps.severityFilter) {\n\t\tdispatch(CONSTANTS.ACTION_TYPES.SEVERITY_FILTER_SET, {});\n\t}\n\n\tif (selectableProps.tilemapsFormat) {\n\t\tdispatch(CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SET, {});\n\t}\n\n\tif (selectableProps.alertPreferences) {\n\t\tdispatch(CONSTANTS.ACTION_TYPES.ALERT_PREFERENCES_SET, {});\n\t}\n};\n\n/**\n *\n * @param dispatch\n * @param nocViewsRecord\n */\n// TODO merge with snNocViewsEffects.userViewSelectedEffect\nconst handleUserViewSwitch = (dispatch, nocViewsRecord) => {\n\tconst {\n\t\tview_name: { value: viewName },\n\t\tuser_id: { value: userId }\n\t} = nocViewsRecord;\n\n\tLOGGING.info(`Switching to new view '${viewName}' of user '${userId}'`, { caller: 'handleUserViewSwitch' });\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_SELECTED, { viewName, userId });\n};\n\n/**\n * HOC function to reuse code for userViewResponseInterceptor.\n * Created interceptor must be used with updateStateEffect.\n * Same effect used in GlideRecord_Query response,\n * and in insert and update GlideRecord_Mutation responses.\n * The only difference is the response format.\n * @param resultPath the path where the result is stored on the action.\n */\nexport const handleUserViewResponseEffect = resultPath => {\n\treturn coeffects => {\n\t\tconst caller = 'handleUserViewResponseEffect';\n\t\tLOGGING.info(`Received response [${resultPath}]`, { caller });\n\n\t\tconst {\n\t\t\tdispatch,\n\t\t\tstate,\n\t\t\tupdateState,\n\t\t\tupdateProperties,\n\t\t\taction,\n\t\t\tproperties: { views }\n\t\t} = coeffects;\n\n\t\tconst { payload } = action;\n\n\t\tconst errors = checkForError({ payload, dispatch, caller });\n\t\tif (errors) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nocViewsRecord = _get(action, resultPath);\n\t\tconst selectableProps = transformToModel(nocViewsRecord);\n\n\t\tconst recordSysId = _get(nocViewsRecord, 'sys_id.value') || '';\n\t\tconst originViewId = _get(nocViewsRecord, 'origin_view_id.value') || _get(state, 'userViewResource.originViewId') || recordSysId;\n\t\tconst defaultViewSysId = _get(state, 'userViewResource.sys_id') || recordSysId;\n\n\t\tupdateProperties(selectableProps);\n\n\t\tupdateState({\n\t\t\tuserViewResource: {\n\t\t\t\tsys_id: defaultViewSysId,\n\t\t\t\toriginViewId\n\t\t\t}\n\t\t});\n\n\n\t\t//disable the save button there are no changes\n\t\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_SAVE_BUTTON_STATE, { current: originViewId, latest: defaultViewSysId });\n\n\n\t\tconst viewIsCurrent = recordSysId === defaultViewSysId;\n\t\tconst isNewView = views.itemsMap !== null && !views.itemsMap[recordSysId];\n\t\tconst isInsertNew = resultPath === VIEW_CONSTANTS.INSERT_NOC_USER_VIEW_PATH;\n\n\t\t// view is not the default (current) and not found in views (items) map and as a result of an insert response (resultPath)\n\t\tif (!viewIsCurrent && isNewView && isInsertNew) {\n\t\t\thandleUserViewSwitch(dispatch, nocViewsRecord);\n\t\t} else {\n\t\t\treturn updateUserViewMetaData(dispatch, selectableProps);\n\t\t}\n\t};\n};\n","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {\n\tCONSTANTS,\n\tLOGGING,\n\tcreateNocUpdateStateEffect,\n\tformatComplexFieldsToCamelCase,\n\tonNextFrame,\n\tcheckForError\n} from '@devsnc/library-opws-mapping-shared';\n\nimport {\n\tassign as _assign, \n\tisArray as _isArray, \n\tisUndefined as _isUndefined, \n\tmapValues as _mapValues\n} from 'lodash';\n\nconst ACTION_TYPES = {\n\tNOC_POPULATION_REFRESH_REQUESTED: CONSTANTS.ACTION_TYPES.NOC_POPULATION_REFRESH_REQUESTED,\n\tBASE_POPULATION_REQUEST: 'BASE_POPULATION_REQUEST', //TODO implement REST endpoint\n\tEM_POPULATION_REQUEST: 'EM_POPULATION_REQUEST',\n\tPOPULATION_REQUEST_STARTED: 'POPULATION_REQUEST_STARTED',\n\tEM_POPULATION_REQUEST_SUCCEEDED: 'EM_POPULATION_REQUEST_SUCCEEDED',\n\tBASE_POPULATION_REQUEST_SUCCEEDED: 'BASE_POPULATION_REQUEST_SUCCEEDED',\n\tPOPULATION_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst getPopulationParams = (filter, workspace, currTimestamp) => {\n\tconst query = filter ? String(filter) : 'sys_idISNOTEMPTY';\n\t\n\tlet timestamp = _isUndefined(currTimestamp) ? -1 : currTimestamp;\n\t\n\treturn {\n\t\tquery,\n\t\tworkspace,\n\t\ttimestamp\n\t};\n};\n\n/**\n * This handler called to trigger getPopulation.\n * The effect decides which REST API to apply (EM or BASE population).\n * If nocConfig or uberFilter are not ready, then effect does nothing.\n */\nconst getPopulationHandler = createNocUpdateStateEffect((state, action, getAfterStateUpdate) => {\n\tLOGGING.log(`getPopulationHandler called by action ${action.type}`);\n\t\n\tconst {\n\t\tnocConfig = null,\n\t\tuberFilter = null,\n\t\tworkspace,\n\t\ttimestampForTiles\n\t} = state.properties;\n\n\t// When this flag is true, the population will be updated regardless the timestamp\n\tconst {forcePopulationUpdate = false} = action.payload;\n\n\t//wait for required properties.\n\t//wait until changeNotificator has initialized the timestamp.\n\tif (timestampForTiles === '-1' || !nocConfig || !uberFilter)\n\t\treturn state;\n\t\t\n\t//Dealing with duplicate calls from same cycle of changes. Not likely to happen.\n\tif (!forcePopulationUpdate && state.lastUpdatedPopulationTimestamp === timestampForTiles)\n\t\treturn state;\n\t\n\t//ready to fetch population, let's do it!\n\tconst {filter = ''} = uberFilter;\n\tconst queryParams = getPopulationParams(filter, workspace, timestampForTiles);\n\tconst {\n\t\tisEm = false\n\t} = nocConfig;\n\t\n\tLOGGING.log(`getPopulationHandler ready to fetch population. \n\t\tisEm: ${isEm}, \n\t\ttimestamp: ${timestampForTiles}`);\n\t\n\tconst populationRequestAction = isEm ?\n\t\tACTION_TYPES.EM_POPULATION_REQUEST :\n\t\tACTION_TYPES.BASE_POPULATION_REQUEST; //TODO implement REST endpoint for BASE_\n\n\tconst newState = {\n\t\t...state,\n\t\tlastUpdatedPopulationTimestamp: timestampForTiles\n\t};\n\n\tgetAfterStateUpdate().then(dispatch =>\n\t\tdispatch(populationRequestAction, queryParams));\n\n\treturn newState;\n});\n\nconst getEmPopulationEffectHandler = createHttpEffect('/api/sn_nocpit/nocpit/EMServices', {\n\tmethod: 'GET',\n\tqueryParams: ['query', 'workspace', 'timestamp'],\n\tstartActionType: ACTION_TYPES.POPULATION_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.EM_POPULATION_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.POPULATION_REQUEST_FAILED\n});\n\nconst formatPopulationResult = population => {\n\tif (!_isArray(population))\n\t\treturn [];\n\n\t//instead immutable approach, transforming population items to prevent double size memory consumption.\n    const populationMapper = population.reduce((mapper, item, idx) => {\n        //flattening TileDTO to access dynamicFields transparently\n        _assign(item, item.dynamicFieldsPlain);\n        delete item.dynamicFieldsPlain;\n\n        _assign(item, item.dynamicFieldsComplex);\n        delete item.dynamicFieldsComplex;\n\n        item = _mapValues(item, formatComplexFieldsToCamelCase);\n\n\t\tmapper[item.id] = item;\n\t\tpopulation[idx] = item;\n        return mapper;\n\t}, {});\n\t\n\treturn {population, populationMapper};\n};\n\nconst handleEmPopulationResponse = async coeffects => {\n\tLOGGING.log('handleEmPopulationResponse');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateState,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleEmPopulationResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst {population, populationMapper} = formatPopulationResult(payload || []);\n\n\tupdateState({populationMapper});\n\tupdateProperties({population});\n\n\tawait onNextFrame();\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_POPULATION_SET, {});\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_POPULATION_SET_PHASE_2, {});\n};\n\n//NOT IN USE. Waiting for EM agnostic REST API implementation\nconst handleBasePopulationResponse = coeffects => {\n\tLOGGING.log('handleBasePopulationResponse');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateState,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleBasePopulationResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst {population, populationMapper} = formatPopulationResult(payload || []);\n\n\tupdateState({populationMapper});\n\n\tupdateProperties({\n\t\tpopulation,\n\t\tenabledPopulation: population\n\t});\n};\n\nconst effectHandlers = {\n\tgetPopulationHandler,\n\tgetEmPopulationEffectHandler,\n\t//TODO getBasePopulationHandler\n\thandleEmPopulationResponse,\n\thandleBasePopulationResponse\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import { nocSeverityDataBehavior } from '../noc-severity-data-behavior';\nimport { nocInitialDataBehavior } from '../noc-initial-data-behavior';\nimport { userViewBehaviors } from '../noc-user-view-behaviors';\nimport { \n\tCONSTANTS, \n\tcreateNocElement, \n\tnocErrorBehavior, \n\tcreateActionConfig, \n\tbehaviorNocNotification,\n\teffectToggleSidePanel\n} from '@devsnc/library-opws-mapping-shared';\nimport { nocChangesNotificatorBehavior } from '../noc-changes-notificator-behavior';\nimport { nocGetServiceGroupsBehavior } from '../noc-service-groups-tree-behaviors/nocGetServiceGroupsBehavior';\nimport effectImpactedServices from './effectImpactedServices';\nimport effectAlertSelected from './effectAlertSelected';\nimport nocVisibilityChangeEffect from './nocVisibilityChangeEffect';\nimport { view } from './view';\nimport styles from './nocApp.scss';\n\n\ncreateNocElement('noc-app', {\n\tview,\n\tonBootstrap(host, dispatch) {\n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_COMPONENT_CONNECTED, {}, { stopPropagation: true });\n\t},\n\tstyles,\n\tintialState: {\n\t\tuserViewResource: {\n\t\t\tisViewModified: false\n\t\t}\n\t},\n\tproperties: {\n\t\t//selectable properties\n\n\t\t/**\n\t\t * name of workspace URL parameter\n\t\t * String\n\t\t */\n\t\tworkspace: {\n\t\t\tdefault: CONSTANTS.DEFAULTS.WORKSPACE, //TODO set public prop from URL\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Array of services returned by services API, before any filtering\n\t\t * [EMServiceDTO]\n\t\t */\n\t\tpopulation: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\t\t/**\n\t\t * Object container for all service groups data structure models\n\t\t */\n\t\tserviceGroups: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\t\t/**\n\t\t * Array of displayed services, filtered by enabled severities.\n\t\t * [EMServiceDTO]\n\t\t */\n\t\tenabledPopulation: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/** mapping of severity objects with the following fields:\n\t\t * {\n\t\t * value: {value, label, iconUrl, color, isEnabled, populationSize, sequence}\n\t\t * }\n\t\t * 'value' is a numerical (1,2,3,4,5)\n\t\t */\n\t\tseverities: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t//timestamp for tilemap refresh synchronization (eliminate repeated refesh on same timestamp value)\n\t\ttimestampForTiles: {\n\t\t\tdefault: '-1',\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Formatted data from noc_config\n\t\t * {isEM: boolean}\n\t\t */\n\t\tnocConfig: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Formatted data on current user\n\t\t * {userId, isA11y}\n\t\t */\n\t\tuserMeta: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Part of noc_user_view with the uber filter query\n\t\t * {filter: String}\n\t\t */\n\t\tuberFilter: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Part of noc_user_view with severities state.\n\t\t * {enabledSeverities: {1: true, 3: true, 5: true...}}\n\t\t */\n\t\tseverityFilter: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Part of noc_user_view with user preferences that affect alerts representation\n\t\t * {isAlertsCorrelatedView: Boolean, defaultAlertsSorting: String}\n\t\t */\n\t\talertPreferences: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tviews: {\n\t\t\tdefault: {\n\t\t\t\tviewItems: [],\n\t\t\t\titemsMap: null,\n\t\t\t\tselectedView: null,\n\t\t\t\tdefaultViewSysId: null\n\t\t\t},\n\t\t\tselectable: true\n\t\t},\n\n\n\t\t/**\n\t\t * Part of noc_user_view with the honeycomb state\n\t\t * {\n\t\t *   groupByField: FieldName\n\t\t *\t groupByOrder: \"asc|desc\"\n\t\t *\t sortByField: FieldName\n\t\t *\t sortByOrder: \"asc|desc\"\n\t\t * }\n\t\t */\n\t\ttilemapsFormat: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Side panel (right) which is used for showing alerts and other data\n\t\t */\n\t\tsidePanel: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\n\t\talerts: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t *     Array of services ids that are impacted by the alert\n\t\t */\n\t\timpactedServicesAlertIds: {\n\t\t\tdefault: [],\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * True if we are in the middle of getting impacted services\n\t\t */\n\t\tisImpactedServicesLoading: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * The selected alert, or null if not selected.\n\t\t */\n\t\tselectedAlert: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * This property shows if changes are performed on a view (used for \"save\" button disable/enable)\n\t\t */\n\t\tnoChangesOnCurrentView: {\n\t\t\tdefault: true,\n\t\t\tselectable: true\n\t\t}\n\n\t},\n\tactionHandlers: {\n\t\t[effectImpactedServices.ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST]:\n\t\t\tcreateActionConfig(effectImpactedServices.effectHandlers.getImpactedServicesEffectHandler),\n\n\t\t[effectImpactedServices.ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST_STARTED]:\n\t\t\tcreateActionConfig(effectImpactedServices.effectHandlers.handleImpactedServicesRequestStarted),\n\n\t\t[effectImpactedServices.ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(effectImpactedServices.effectHandlers.handleGetImpactedServicesResponse),\n\n\t\t[effectImpactedServices.ACTION_TYPES.CLEAR_IMPACTED_SERVICES_REQUEST]:\n\t\t\tcreateActionConfig(effectImpactedServices.effectHandlers.clearImpactedServicesHandler),\n\n\t\t[effectAlertSelected.ACTION_TYPES.NOC_SELECT_ALERT_CARD]:\n\t\t\tcreateActionConfig(effectAlertSelected.effectHandlers.nocSelectedAlertEffect),\n\n\t\t[effectToggleSidePanel.ACTION_TYPES.TOGGLE_SIDE_PANEL]:\n\t\t\tcreateActionConfig(effectToggleSidePanel.effectHandlers.toggleSidePanel),\n\n\t\t[nocVisibilityChangeEffect.ACTION_TYPES.NOC_VISIBILITY_CHANGED]:\n\t\t\tcreateActionConfig(nocVisibilityChangeEffect.effectHandlers.handleVisibilityChangeEffect)\n\n\t},\n\tbehaviors: [\n\t\tnocInitialDataBehavior.behavior,\n\t\tuserViewBehaviors.behaviors.getUserViewBehavior,\n\t\tuserViewBehaviors.behaviors.saveUserViewBehavior,\n\t\tuserViewBehaviors.behaviors.revertUserViewBehavior,\n\t\tnocSeverityDataBehavior.behavior,\n\t\tnocChangesNotificatorBehavior.behavior,\n\t\tnocGetServiceGroupsBehavior,\n\t\tnocErrorBehavior,\n\t\tbehaviorNocNotification\n\t]\n});\n","export {default as indexJs} from './index.js';\nexport {default as nocApp} from './noc-app';\nexport {default as snComponentNocpit} from './sn-component-nocpit';\n","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport '../noc-app';\n\n\ncreateNocElement('sn-component-nocpit', {\n\tview: () => {\n\t\treturn <noc-app component-id={CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/>;\n\t}\n});\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}:host{height:100%;width:100%;display:block;overflow:hidden}.tilemap-container{height:100%;display:flex;flex-grow:1}.noc-app-root{display:flex;flex-direction:column;height:100%;width:100%}.noc-app-root-section{display:flex;flex-grow:1;height:100%;min-height:0;min-width:0}:host(:not([dir=rtl])) .noc-side-panel.is-open,:root:not([dir=rtl]) .noc-side-panel.is-open{border-left:1px solid rgb(var(--now-color--neutral-7,135,147,148))}:host([dir=rtl]) .noc-side-panel.is-open,:root[dir=rtl] .noc-side-panel.is-open{border-right:1px solid rgb(var(--now-color--neutral-7,135,147,148))}@media screen and (max-width:50rem){:host{display:block;overflow:auto}.noc-side-panel,:host{height:auto}}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocApp.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tMODAL_STATE_CHANGED: 'NOW_MODAL#OPENED_SET' //modal opened/closed\n};\n\n/**\n * When the settings modal opens or closes, this effect clears any notifications that stored on the modal level on\n * state.\n */\nconst toggleModalEffect = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\taction: {payload: {dispatches}}\n\t} = coeffects;\n\n\tif (!dispatches) {\n\t\tLOGGING.error(`Requested to toggle modal but no 'dispatches' value provided!`, {caller: 'snNocSpectrumContainerEffect.toggleModalEffect'});\n\t\treturn;\n\t}\n\n\tLOGGING.info(`Toggle modal - dispatch [${dispatches}]`, {caller: 'snNocSpectrumContainerEffect.toggleModalEffect'});\n\n\tdispatch(dispatches, coeffects);\n};\n\n\nconst effectHandlers = {\n\ttoggleModalEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n}","module.exports = __TECTONIC__$servicenow_now_input;","import '@servicenow/now-modal';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-input';\nimport userViewSaveAsModalEffect from './userViewSaveAsModalEffect';\nimport { createRef } from '@servicenow/ui-renderer-snabbdom';\nimport CONSTANTS from './userViewsConstants';\nimport {get as _get, debounce as _debounce} from 'lodash';\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\n\nconst FOOTER_ACTIONS = {\n\tsave_copy: {\n\t\t'label': CONSTANTS.LABELS.LABEL_SAVE_COPY,\n\t\t'variant': 'primary',\n\t\t'clickActionType': VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_REQUESTED\n\t},\n\tcancel: {\n\t\t'label': CONSTANTS.LABELS.LABEL_CANCEL,\n\t\t'variant': 'secondary',\n\t\t'clickActionType': VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED,\n\t\t'payload': { value: false }\n\t}\n};\n\n\n/**\n * Get the footer actions but apply the current view name to the Save button data\n * and disable it if required\n *\n * @param allowSave\n * @returns {{viewName: *, disabled: boolean}[]}\n */\nconst getFooterActions = (allowSave, inputRef) => {\n\tconst footerActions = {\n\t\t...FOOTER_ACTIONS,\n\t\tsave_copy: {\n\t\t\t...FOOTER_ACTIONS.save_copy,\n\t\t\tdisabled: Boolean(!allowSave),\n\t\t\tgetViewNameFromInput: () => {\n\t\t\t\treturn inputRef.current.value;\n\t\t\t}\n\n\t\t}\n\t};\n\treturn Object.values(footerActions);\n};\n\nconst handleOninput = _debounce((e, dispatch) => {\n\tconst value = _get(e, 'path[0].value', null);\n\tif (value) {\n\t\tdispatch('NOW_INPUT#VALUE_SET', {value});\n\t}\n}, 200);\n\n/**\n *\n * @param args\n * @returns {*}\n */\nexport const getUserViewSaveAsModal = args => {\n\tconst {\n\t\tisValid,\n\t\terrors,\n\t\tviewNameSuggestion,\n\t\tdispatch\n\t} = args;\n\n\tconst inputRef = createRef();\n\tconst footerActions = getFooterActions(isValid, inputRef);\n\treturn (\n\t\t<now-modal\n\t\t\tclassName='save-as-form'\n\t\t\tcomponent-id={userViewSaveAsModalEffect.COMPONENT_IDS.USER_VIEW_SAVE_AS_MODAL_ID}\n\t\t\topened\n\t\t\tappend-to-payload={{ dispatches: VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED }}\n\t\t\tsize='md'\n\t\t\theader-label={CONSTANTS.LABELS.HEADER_SAVE_AS}\n\t\t\tfooter-actions={footerActions}>\n\n\t\t\t<now-heading\n\t\t\t\thasNoMargin\n\t\t\t\tvariant='title-secondary'\n\t\t\t\tlevel='1'\n\t\t\t\tlabel={CONSTANTS.LABELS.HEADER_DESCRIPTION}\n\t\t\t\tclassName='now-p-block-end--xl'\n\t\t\t/>\n\n\t\t\t<now-input\n\t\t\t\tautofocus\n\t\t\t\trequired\n\t\t\t\ttype='text'\n\t\t\t\tlabel={CONSTANTS.LABELS.TITLE_VIEW_NAME}\n\t\t\t\tplaceholder={CONSTANTS.LABELS.VIEW_NAME_PLACEHOLDER}\n\t\t\t\tvalue={viewNameSuggestion}\n\t\t\t\tref={inputRef}\n\t\t\t\tminlength={1}\n\t\t\t\tmaxlength={40}\n\t\t\t\tclassName='full-width'\n\t\t\t\tmanageInvalid\n\t\t\t\tinvalid={!isValid}\n\t\t\t\ton-input={(e) => handleOninput(e, dispatch)}\n\t\t\t\tmessages={errors ? [errors] : []}\n\t\t\t/>\n\n\t\t</now-modal>\n\t);\n};","import SPECTRUM_CONST from './snNocSpectrumConsts';\nimport settingsModalEffect from './settingsModalEffect';\nimport {i18n} from '@devsnc/library-opws-mapping-shared';\nimport {Fragment} from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-heading';\n\n\n\nexport const getSettingsModal = args => {\n\tconst {\n\t\tselectedItem,\n\t\tdispatch\n\t} = args;\n\n\tconst hiddenStyle = {\n\t\tdisplay: 'none'\n\t};\n\n\tconst tileSizeLabelledBy = `${SPECTRUM_CONST.SECTION_ID_TILE_SIZE} ${SPECTRUM_CONST.SECTION_ID_TILE_SIZE_HIDDEN_LABEL}`;\n\n\tconst tileSizeDropdownJsx = (\n\t\t<Fragment>\n\t\t\t<label id={SPECTRUM_CONST.SECTION_ID_TILE_SIZE_HIDDEN_LABEL} style={hiddenStyle}>\n\t\t\t\t{i18n.NOC_UPDATES_USER_VIEW}\n\t\t\t</label>\n\n\t\t\t<now-dropdown \n\t\t\t\tclassName=\"now-align -inline-end\"\n\t\t\t\ttooltipContent={i18n.NOC_NO_TILE_SIZE_TOOLTIP}\n\t\t\t\tselectedItems={selectedItem}\n\t\t\t\tcomponent-id={settingsModalEffect.COMPONENT_IDS.TILE_SIZE_DROPDOWN_ID}\n\t\t\t\tkey={settingsModalEffect.COMPONENT_IDS.TILE_SIZE_DROPDOWN_ID}\n\t\t\t\taria-labelledby={tileSizeLabelledBy}\n\t\t\t\titems={SPECTRUM_CONST.tileSizeDropdownItems}\n\t\t\t\tvariant='secondary'\n\t\t\t\ttype='sm'/>\n\t\t</Fragment>\n\t);\n\n\tconst labelValueItems = [\n\t\t{\n\t\t\tsectionId: SPECTRUM_CONST.SECTION_ID_TILE_SIZE,\n\t\t\titemId: SPECTRUM_CONST.ITEM_ID_TILE_SIZE,\n\t\t\tsectionLabel: SPECTRUM_CONST.LABEL_SECTION_TILE_SIZE,\n\t\t\tlabel: SPECTRUM_CONST.LABEL_TILE_SIZE,\n\t\t\tvalue: {\n\t\t\t\ttype: 'jsx', \n\t\t\t\tvalue: tileSizeDropdownJsx\n\t\t\t}\n\t\t}\n\t];\n\n\tconst generateSectionsJsx = item => (\n\t\t<section key={item.sectionId} className='settings-section'>\n\t\t\t<now-heading \n\t\t\t\thasNoMargin\n\t\t\t\tvariant='title-primary' \n\t\t\t\tlevel='2'\n\t\t\t\tlabel={item.sectionLabel}\n\t\t\t\tclassName='section-label' \n\t\t\t\tid={item.sectionId}/>\n        \n\t\t\t<now-label-value-tabbed\n\t\t\t\tclassName='section-item'\n\t\t\t\taria-describedBy={item.sectionId}\n\t\t\t\tsize='lg' \n\t\t\t\titems={[item]}/>\n\t\t</section>\n\t);\n\n\tconst sectionsJsx = labelValueItems.map(generateSectionsJsx);\n    \n\tconst settingsModalContent = (\n\t\t<form className='settings-form'>\n\t\t\t{sectionsJsx}\n\t\t</form>\n\t);\n\n\treturn(\n\t\t<now-modal\n\t\t\tcomponent-id={settingsModalEffect.COMPONENT_IDS.SETTINGS_MODAL_ID}\n\t\t\topened\n\t\t\tappend-to-payload={{dispatches: settingsModalEffect.ACTION_TYPES.SETTINGS_MODAL_STATE_CHANGED}}\n\t\t\tsize='sm'\n\t\t\theader-label={SPECTRUM_CONST.LABEL_SETTINGS}>\n\t\t\t<Fragment slot='content'>\n\t\t\t\t{settingsModalContent}\n\t\t\t</Fragment>\n\t\t</now-modal>\n\t);\n};","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\nimport {get as _get} from 'lodash';\n\n/**\n * When user selects a different view from a list\n *\n * TODO\n *      1. Check if current view is not saved - should notify user? TBD\n *      2. Change the current view to the selected view - DONE\n *      3. Update the latest/default view to hold the selected view - DONE\n *      4. Update the latest/default view origin_view_id to the selected view's ID - DONE\n *\n * TODO fix behavior of isModified check and notification to user\n *\t    situations where we should notify user about\n *\t    1. If view has not been modified - ALLOW changing view\n *\t    2. if view has been modified prior to the view change:\n * \t       a. Global view - Notify and wait for confirmation - ?\n *\t       b. Private view - Notify and wait for confirmation - ?\n *\n * @param coeffects\n */\n// TODO merge with handleUserViewResponseEffect.handleUserViewSwitch\nconst userViewSelectedEffect = ({action, properties, dispatch}) => {\n\tconst {value} = action.payload;\n\tconst {views: {itemsMap}} = properties;\n\n\tLOGGING.info(`Requested to change selected view`, {\n\t\tcaller: 'snNocViewsEffects.userViewChangedEffect',\n\t\textra: itemsMap[value],\n\t\toutput: {objects: true}\n\t});\n\n\tconst viewName = _get(itemsMap[value], 'view_name.value', null);\n\tconst userId = _get(itemsMap[value], 'user_id.value', null);\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_SELECTED, {viewName, userId});\n};\n\n/**\n *\n * @param coeffects\n */\nconst userViewActionsEffect = ({action, properties, dispatch}) => {\n\tconst caller = 'snNocViewsEffects.userViewActionsEffect';\n\tconst {item} = action.payload;\n\tconst {views: {itemsMap, selectedView}} = properties;\n\n\tLOGGING.info(`User selected item`, {\n\t\toutput: {objects: true},\n\t\textra: item,\n\t\tcaller\n\t});\n\n\tif (!selectedView) {\n\t\tLOGGING.warn('No selected view found!', {caller});\n\t\treturn;\n\t}\n\n\tconst value = selectedView[0];\n\tconst viewName = _get(itemsMap[value], 'view_name.value', null);\n\tconst userId = _get(itemsMap[value], 'user_id.value', null);\n\n\tLOGGING.info(`Dispatching '${item.action}' for view '${viewName}' user '${userId}'`, {caller});\n\tdispatch(item.action, {viewName, userId});\n};\n\n/**\n * User clicked on the 'Save as...' item from the split button dropdown\n *\n * @param dispatch\n */\nconst userSaveAsActionEffect = ({dispatch}) => {\n\tLOGGING.info(`Open 'save as...' modal`, {caller: 'snNocViewsEffects.userSaveAsActionEffect'});\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED, {value: true});\n};\n\n/**\n * User clicked on the 'Save' button in the split button.\n * The request is tested here before sending it to the server.\n *\n * TODO handle save\n *      1. Check if global view -\n *         a. Should we disallow saving? - DONE\n *         b. Should we popup 'Save as...' confirmation?\n *            i.  with global's view name as the default name / empty name?\n *            ii. if asked to save with a name that already exists, should we allow? another confirmation to overwrite?\n *\n * @param properties\n * @param dispatch\n */\nconst userSaveActionEffect = ({properties, dispatch}) => {\n\tconst caller = 'snNocViewsEffects.userSaveActionEffect';\n\tLOGGING.info(`User clicked on SAVE`, {caller});\n\n\tconst {views = {}} = properties;\n\tconst view = views.itemsMap[views.selectedView];\n\n\tif (!view) {\n\t\tLOGGING.warn('Failed to get current view', {caller});\n\t\treturn;\n\t}\n\n\tconst userId = _get(view, 'user_id.value', null);\n\tif (!userId) {\n\t\tLOGGING.warn(`View is a global view. Use 'Save as...' to save under a different view name`, {caller});\n\t\treturn;\n\t}\n\n\t//dispatch save action\n\tconst sysId = _get(view, 'sys_id.value', null);\n\tif (!sysId) {\n\t\tLOGGING.warn(`View with the requested sysId '${sysId}' was not found!`, {caller});\n\t\treturn;\n\t}\n\n\tconst viewName = _get(view, 'view_name.value', null);\n\tif (!viewName) {\n\t\tLOGGING.warn(`No view name!`, {caller});\n\t\treturn;\n\t}\n\n\tconst variables = {\n\t\tviewName,\n\t\tsysId\n\t};\n\n\tLOGGING.info(`Dispatch request to save view [${viewName}]`, {extra: view, caller});\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.SAVE_USER_VIEW_REQUEST, variables);\n};\n\n\nconst effectHandlers = {\n\tuserViewSelectedEffect,\n\tuserViewActionsEffect,\n\tuserSaveActionEffect,\n\tuserSaveAsActionEffect\n};\n\nexport default {\n\teffectHandlers\n};","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}:host{display:flex}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./snNocViews.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import '@servicenow/now-dropdown';\nimport { LOGGING } from '@devsnc/library-opws-mapping-shared';\nimport CONSTANTS from './userViewsConstants';\nimport { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport \"@servicenow/now-button\";\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\nimport {isViewGlobal} from '../noc-user-view-behaviors/userViewsUtils';\nimport {isEmpty as _isEmpty} from 'lodash';\n\nconst PRIVATE = VIEW_CONSTANTS.VIEW_SECTIONS.PRIVATE;\n\nconst CONFIG_SELECT_ARIA = {\n\t'aria-label': CONSTANTS.LABELS.CONFIG_SELECT_TOOLTIP\n};\n\nconst CONFIG_SAVE_ARIA = {\n\t'aria-label': CONSTANTS.LABELS.CONFIG_SAVE_TOOLTIP\n};\n\nconst MORE_ACTIONS_ARIA = {\n\t'aria-label': CONSTANTS.LABELS.MORE_ACTIONS_ARIA\n};\n\nexport const view = (state) => {\n\tconst {\n\t\tuserViewSaveAsModal = {},\n\t\tviews: {\n\t\t\tviewItems = [],\n\t\t\tselectedView,\n\t\t},\n\t\tnoChangesOnCurrentView,\n\t\tcurrentView\n\t} = state.properties;\n\n    const dropDownViewItems = viewItems.filter(item => {\n        return (item.label !==  PRIVATE || (item.label === PRIVATE && !_isEmpty(item.children)))\n    });\n\n\tconst isGlobalView = isViewGlobal(currentView);\n\n\tconst moreActionsItems = [{\n\t\tid: 'save_as',\n\t\tlabel: CONSTANTS.LABELS.LABEL_SAVE_COPY,\n\t\taction: CONSTANTS.ACTION_TYPES.VIEW_SAVE_AS_CLICKED\n\t},\n\t{\n\t\tid: 'revert',\n\t\tlabel: CONSTANTS.LABELS.LABEL_REVERT,\n\t\taction: VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW,\n\t\tdisabled: noChangesOnCurrentView\n\t}\n\t];\n\n\tLOGGING.info(`Selected view ${selectedView}`, { caller: 'snNocViewsView.view' });\n\tconst viewsList = <now-dropdown\n\t\tvariant='secondary'\n\t\tsize='md'\n\t\tmanage-selected-items={true}\n\t\titems={dropDownViewItems}\n\t\tselected-items={selectedView}\n\t\ton-change={CONSTANTS.ACTION_TYPES.VIEW_NAME_SELECTED}\n\t\tconfig-aria={CONFIG_SELECT_ARIA}\n\t\tplaceholder={CONSTANTS.LABELS.CONFIG_SELECT_PLACEHOLDER}\n\t\ttooltip-content={CONSTANTS.LABELS.CONFIG_SELECT_TOOLTIP}\n\t/>;\n\n\tconst viewActions = <now-dropdown\n\t\tclassName='now-m-inline-start--sm'\n\t\tvariant='secondary'\n\t\tsize='md'\n\t\ticon='ellipsis-h-fill'\n\t\titems={moreActionsItems}\n\t\tconfig-aria={MORE_ACTIONS_ARIA}\n\t\ttooltip-content={CONSTANTS.LABELS.CONFIG_MORE_ACTIONS_TOOLTIP}\n\t\thide-caret\n\t\tselect='none'\n\t/>;\n\n\tconst saveViewButton = <now-button\n\t\tclassName='now-m-inline-start--sm'\n\t\tvariant='primary'\n\t\tlabel={CONSTANTS.LABELS.LABEL_SAVE}\n\t\tsize='md'\n\t\tconfig-aria={CONFIG_SAVE_ARIA}\n\t\ttooltip-content={CONSTANTS.LABELS.CONFIG_SAVE_TOOLTIP}\n\t\tdisabled={noChangesOnCurrentView || isGlobalView}\n\t/>\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{viewsList}\n\t\t\t{saveViewButton}\n\t\t\t{viewActions}\n\t\t</Fragment>\n\t);\n};","import { view } from './snNocViewsView';\nimport { createNocElement, createActionConfig, CONSTANTS } from '@devsnc/library-opws-mapping-shared';\nimport styles from './snNocViews.scss';\nimport snNocViewsEffects from './snNocViewsEffects';\nimport USER_VIEW_CONSTANTS from './userViewsConstants';\n\ncreateNocElement('sn-noc-views', {\n\tview,\n\tstyles,\n\n\tproperties: {\n\t\tviews: {\n\t\t\tdefault: null\n\t\t},\n\t\tnoChangesOnCurrentView: {\n\t\t\tdefault: true\n\t\t},\n\t\tcurrentView: {\n\t\t\tdefault: null\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[USER_VIEW_CONSTANTS.ACTION_TYPES.VIEW_NAME_SELECTED]:\n\t\t\tcreateActionConfig(snNocViewsEffects.effectHandlers.userViewSelectedEffect),\n\t\t[USER_VIEW_CONSTANTS.ACTION_TYPES.VIEW_ITEM_CLICKED]:\n\t\t\tcreateActionConfig(snNocViewsEffects.effectHandlers.userViewActionsEffect),\n\t\t[USER_VIEW_CONSTANTS.ACTION_TYPES.SAVE_BUTTON_CLICKED]:\n\t\t\tcreateActionConfig(snNocViewsEffects.effectHandlers.userSaveActionEffect),\n\t\t[USER_VIEW_CONSTANTS.ACTION_TYPES.VIEW_SAVE_AS_CLICKED]:\n\t\t\tcreateActionConfig(snNocViewsEffects.effectHandlers.userSaveAsActionEffect)\n\t}\n});","import './snNocViews';","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {ACTION_TYPES} from './effectGetFilterCountHandler';\nimport {isEmpty as _isEmpty} from 'lodash';\n\n/**\n *\n * @param value\n * @param prevValue\n * @param dispatch\n *\n * @deprecated This is a backward compatibility fix due to a problem in Seismic 6.0.x\n */\nexport const effectFilterPropertyOnChange = (value, prevValue, dispatch) => {\n\tif (value !== prevValue) {\n\t\tLOGGING.info('Filter property has changed, dispatching query parse', {extra: value.filter});\n\t\tdispatch(ACTION_TYPES.QUERY_PARSE_REQUEST_REQUESTED, {sysparm_query: value.filter});\n\t}\n};\n\nexport const effectFilterPropertyChanged = (coeffects) => {\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tif (payload && payload.name === 'filter') {\n\t\tconst filter = payload.value;\n\n\t\t// check the inner value of the filter object\n\t\tif (filter && !_isEmpty(filter.filter)) {\n\t\t\tLOGGING.info('Filter property has changed, dispatching query parse', {extra: filter.filter});\n\t\t\tdispatch(ACTION_TYPES.QUERY_PARSE_REQUEST_REQUESTED, {sysparm_query: filter.filter});\n\t\t} else {\n\t\t\tLOGGING.info('Filter property is empty, resetting value');\n\t\t\tupdateProperties({filterSize: 0});\n\t\t}\n\t}\n};","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}:host{position:relative;display:block}.filter-badge{cursor:pointer;position:absolute;top:-.5em}:host(:not([dir=rtl])) .filter-badge,:root:not([dir=rtl]) .filter-badge{right:-.5rem}:host([dir=rtl]) .filter-badge,:root[dir=rtl] .filter-badge{left:-.5rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocGlobalFilter.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __TECTONIC__$servicenow_now_badge;","import '@servicenow/now-button';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-badge';\n\nimport {Fragment} from '@servicenow/ui-renderer-snabbdom';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {t} from 'sn-translate';\nimport {get as _get} from 'lodash';\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\n\nconst {PROPERTIES_SET} = CONSTANTS.GENERAL;\nconst MODAL_HEADER = t('Filter services');\nconst TOOLTIP_FILTER = t('Filter services');\n\nconst openGlobalFilter = (state, dispatch) => () => {\n\tconst val = state.properties.isModalOpen;\n\tdispatch(PROPERTIES_SET, {isModalOpen: !val});\n};\n\nconst onRedirect = (elm, dispatch) => evt => {\n\tconst url = _get(elm, 'contentWindow.location.href', '') || '';\n\tif (url.includes('redirected=true')) {\n\t\tdispatch(PROPERTIES_SET, {isModalOpen: false});\n\t\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.CURR_GLOBAL_FILTER_CHANGED, {});\n\t} else if (url.includes('action=cancel')) {\n\t\tdispatch(PROPERTIES_SET, {isModalOpen: false});\n\t}\n};\n\nconst onFrameInsert = dispatch => ({elm}) => {\n\tif (!elm) {\n\t\treturn;\n\t}\n\n\telm.addEventListener('load', onRedirect(elm, dispatch));\n};\n\nconst createFilterModal = (userViewId, dispatch) => {\n\tconst url = `/noc_user_view.do?sysparm_view=global_filter_view&sysparm_titleless=true&sysparm_skipmsgs=true&sys_id=${userViewId}`;\n\tconst iframe = <iframe\n\t\tkey='filter_modal_iframe'\n\t\thook-insert={onFrameInsert(dispatch)}\n\t\twidth='100%' frameBorder='0' height='400px'\n\t\tsrc={url}>\n\t</iframe>;\n\n\treturn <now-modal\n\t\topened\n\t\tsize='lg'\n\t\tcontent-full-width\n\t\theader-label={MODAL_HEADER}\n\t\tcontent={iframe}/>;\n};\n\nexport const view = (state, dispatch) => {\n\tconst {isModalOpen, userViewId, filterSize} = state.properties;\n\tif (!userViewId) {\n\t\treturn null;\n\t}\n\n\tconst modal = isModalOpen ? createFilterModal(userViewId, dispatch) : null;\n\tconst FILTER_BADGE_MESSAGE = filterSize === 0 ? TOOLTIP_FILTER : t('Show filters ({0} conditions)', filterSize);\n\tconst filterBadge = filterSize > 0 ?\n\t\t<now-badge className='filter-badge'\n\t\t           round\n\t\t           size='sm'\n\t\t           status='info'\n\t\t           value={filterSize}\n\t\t           aria-label={FILTER_BADGE_MESSAGE}\n\t\t           variant='secondary'\n\t\t           on-click={openGlobalFilter(state, dispatch)}/>\n\t\t: null;\n\n\tconst configAria = {\n\t\t'aria-label': FILTER_BADGE_MESSAGE\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-button-iconic\n\t\t\t\tvariant='secondary'\n\t\t\t\tsize='md'\n\t\t\t\tconfig-aria={configAria}\n\t\t\t\ticon='filter-outline'\n\t\t\t\ton-click={openGlobalFilter(state, dispatch)}\n\t\t\t\ttooltip-content={FILTER_BADGE_MESSAGE}/>\n\t\t\t{filterBadge}\n\t\t\t{modal}\n\t\t</Fragment>\n\t);\n};\n","import {view} from './view';\nimport styles from './nocGlobalFilter.scss';\nimport {createActionConfig, createNocElement, nocModalActionBehavior} from '@devsnc/library-opws-mapping-shared';\nimport {ACTION_TYPES, effectHandlers} from './effectGetFilterCountHandler';\nimport {effectFilterPropertyOnChange} from './effectFilterPropertyChanged';\n//import {effectFilterPropertyChanged} from './effectFilterPropertyChanged';\n//import {actionTypes} from '@seismic/core';\n//const {COMPONENT_PROPERTY_CHANGED} = actionTypes;\n\ncreateNocElement('noc-global-filter', {\n\tview,\n\tstyles,\n\n\tproperties: {\n\t\tisModalOpen: {\n\t\t\tdefault: false\n\t\t},\n\n\t\tuserViewId: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tfilter: {\n\t\t\t// TODO wait for fix: https://code.devsnc.com/dev/sn-seismic/issues/375\n\t\t\t// `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/uberFilter`,\n\t\t\tdefault: null,\n\t\t\t// TODO @deprecated remove onChange and keep the actionHandler\n\t\t\tonChange: effectFilterPropertyOnChange\n\t\t},\n\n\t\tfilterSize: {\n\t\t\tdefault: 0\n\t\t}\n\t},\n\n\t// TODO waiting for a fix in seismic (actionHandler not called on selectables)\n\t//actionHandlers: {\n\t//\t[COMPONENT_PROPERTY_CHANGED]: createActionConfig(effectFilterPropertyChanged)\n\t//},\n\n\tactionHandlers: {\n\t\t[ACTION_TYPES.QUERY_PARSE_REQUEST_REQUESTED]:\n\t\t\tcreateActionConfig(effectHandlers.getQueryParseEffectRequest),\n\t\t[ACTION_TYPES.QUERY_PARSE_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(effectHandlers.handleQueryParseResponse)\n\t},\n\n\tbehaviors: [\n\t\tnocModalActionBehavior\n\t]\n});","import SPECTRUM_CONST from './snNocSpectrumConsts';\nimport settingsModalEffect from './settingsModalEffect';\nimport '../noc-global-filter';\nimport '../sn-noc-views';\nimport '@servicenow/now-tooltip';\nimport {CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\n\n\nconst CONFIG_ARIA = {\n\t'aria-label': SPECTRUM_CONST.LABEL_SETTINGS\n};\n\nexport const getButtonsJsx = args => {\n\tconst {\n\t\tuserViewId,\n\t\tfilter,\n\t\tdispatch,\n\t\tnoChangesOnCurrentView,\n\t\tcurrentView\n\t} = args;\n\n\tconst openSettingsModal = dispatch => () => {\n\t\tLOGGING.info(`Open 'Settings' modal`, {caller: 'snNocSpectrumButtonsJsx.getButtonsJsx.openSettingsModal'});\n\t\tdispatch(settingsModalEffect.ACTION_TYPES.SETTINGS_MODAL_STATE_CHANGED, {value: true});\n\t};\n\n\tconst views = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/views`;\n\n\treturn (\n\t\t<div className='buttons'>\n\t\t\t<now-button-iconic\n\t\t\t\ttooltip-content={SPECTRUM_CONST.LABEL_SETTINGS}\n\t\t\t\tconfig-aria={CONFIG_ARIA}\n\t\t\t\tclassName='toolbar-button'\n\t\t\t\ticon='gear-outline'\n\t\t\t\tsize='md'\n\t\t\t\ton-click={openSettingsModal(dispatch)}\n\t\t\t/>\n\t\t\t<noc-global-filter filter={filter} user-view-id={userViewId}/>\n\t\t\t<sn-noc-views views={views} user-view-id={userViewId} no-changes-on-current-view={noChangesOnCurrentView} current-view={currentView}/>\n\t\t</div>\n\t);\n};","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../../css-loader/index.js!../../../../../postcss-loader/src/index.js??ref--6-2!../../../../../sass-loader/lib/loader.js??ref--6-3!./snNocNotifications.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import '@servicenow/now-alert';\n\nexport const view = (state) => {\n\tconst {\n\t\tnotifications = []\n\t} = state.properties;\n\t\n\tconst notificationsJsx = (notifications && notifications.length !== 0) ?\n\t\t<now-alert-list \n\t\t\tclassName='notifications'\n\t\t\tmanage-items\n\t\t\titems={notifications}/> :\n\t\tnull;\n\n\treturn notificationsJsx;\n};","import {createNocElement} from '../../createNocElement';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport {view} from './snNocNotificationsView';\nimport styles from './snNocNotifications.scss';\n\n/**\n * Seismic component `sn-noc-notifications`.\n * Visual part of notifications tray.\n * Wraps around `now-alert-list`.\n */\ncreateNocElement('sn-noc-notifications', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\n\tstyles,\n\n\tproperties: {\n\t\tnotifications: {\n\t\t\tdefault: []\n\t\t}\n\t}\n});","import './snNocNotifications';","import {createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport nocBreadcrumbEffect from './nocBreadcrumbEffect';\n\nexport const nocBreadcrumbBehavior = {\n\tname: 'nocBreadcrumbBehavior',\n\tactionHandlers: {\n\t\t[nocBreadcrumbEffect.ACTION_TYPES.NOC_BREADCRUMB_ITEM_CLICKED]:\n            createActionConfig(nocBreadcrumbEffect.effectHandlers.onBreadcrumbClickEffect)\n\t}\n};","import '@servicenow/now-text-link';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-label-value';\nimport nocBreadcrumbEffect from './nocBreadcrumbEffect';\n\nconst changeServiceGroup = (dispatch, item) => () => {\n     dispatch(nocBreadcrumbEffect.ACTION_TYPES.NOC_BREADCRUMB_ITEM_CLICKED, item);\n};\n\nconst generateBreadcrumb = (bucket, item, currentIndex) => {\n    const {itemsCount, elements, dispatch} = bucket;\n\n    if (currentIndex < itemsCount - 1) {\n        elements.push(<now-text-link bare\n                                     variant='primary'\n                                     className='breadcrumb-link'\n                                     label={item.name}\n                                     href='javascript:void(0)'\n                                     on-click={changeServiceGroup(dispatch, item)}/>);\n        elements.push(<now-icon icon='chevron-right-outline'\n                                className='breadcrumb-separator'\n                                size='md'/>);\n    } else {\n        elements.push(<span aria-current=\"true\">{item.name}</span>);\n    }\n\n    return bucket;\n};\n\n\nexport const view = (state, dispatch) => {\n    const {items} = state.properties.data;\n    if (!items)\n        return null;\n\n    const breadcrumb = items.reduce(generateBreadcrumb, {\n        itemsCount: items.length,\n        elements: [],\n        dispatch\n    });\n    return (\n        <nav aria-label=\"Breadcrumb\" className='breadcrumb'>\n\t\t\t{breadcrumb.elements}\n\t\t</nav>\n    );\n};\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.breadcrumb-separator,.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.breadcrumb{font-size:1rem;color:RGB(var(--now-color--neutral-18,22,27,28));display:flex;align-items:center;flex-wrap:wrap}.breadcrumb-link{font-weight:200}.breadcrumb-separator{color:RGB(var(--now-color--neutral-9,99,114,116))}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocBreadcrumb.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","/**\n * component noc-breadcrumb.\n */\nimport styles from './nocBreadcrumb.scss';\nimport {view} from './view.js';\nimport {CONSTANTS, createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {nocBreadcrumbBehavior} from './nocBreadcrumbBehavior';\n\ncreateNocElement('noc-breadcrumb', {\n\tview,\n\tstyles,\n\tproperties: {\n\t\tdata: {\n\t\t\tdefault: null\n\t\t}\n\t},\n    behaviors: [\n        nocBreadcrumbBehavior\n    ]\n});","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}fieldset{border:none;padding:0;margin:0;text-align:center}@media screen and (max-width:50rem){fieldset{text-align:left}}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocSeverityIndicatorBar.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {isObject as _isObject, values as _values, sortBy as _sortBy} from 'lodash';\n\nconst sortSeverities = severities => _sortBy(_values(severities), 'sequence');\n\nexport const transformState = state => {\n\tconst {\n\t\tseverities, \n\t\tpopulation = {length: 0}\n\t} = state.properties;\n\n\tif (!_isObject(severities))\n\t\treturn state;\n\tconst stateView = {\n\t\tsortedSeverities: sortSeverities(severities),\n\t\tpopulationSize: population.length\n\t};\n\n\treturn stateView;\n};","import nocSeverityIndicatorBarEffect from '../noc-severity-indicators-bar/nocSeverityIndicatorBarEffect';\n\nconst ACTION_TYPES = {\n};\n\nconst indicatorClicked = coeffects => {\n\tconst {properties, action: {payload: {event}}, dispatch} = coeffects;\n\n\tconst isClicked = (event.type === 'click');\n\tif (isClicked) {\n\t\tconst {severity: {value}} = properties;\n\t\tdispatch(nocSeverityIndicatorBarEffect.ACTION_TYPES.NOC_SEVERITY_INDICATOR_CLICKED, {\n\t\t\tseverityClicked: value\n\t\t});\n\t}\n};\n\nexport const effectHandlers = {\n\tindicatorClicked,\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.indicator-button-icon,.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.noc-severity-indicator,.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.indicator-button,button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.severity-1.bg-color{background-color:RGB(var(--now-color--alert-critical-1,221,133,129))}.severity-1.bg-color .tile-label{color:RGB(var(--now-color--alert-critical-5,80,24,22))}.severity-1.bg-color.selected,.severity-1.bg-color:active,.severity-1.bg-color:hover,.severity-1.bg-color:visited{border:2px solid rgb(var(--now-color--alert-critical-5,80,24,22))}.severity-1.bg-color.selected:not(:hover),.severity-1.bg-color:active,.severity-1.bg-color:visited{background-color:RGB(var(--now-color--alert-critical-0,241,206,205))}.severity-2.bg-color{background-color:RGB(var(--now-color--alert-high-1,233,184,111))}.severity-2.bg-color .tile-label{color:RGB(var(--now-color--alert-high-5,100,60,2))}.severity-2.bg-color.selected,.severity-2.bg-color:active,.severity-2.bg-color:hover,.severity-2.bg-color:visited{border:2px solid rgb(var(--now-color--alert-high-5,100,60,2))}.severity-2.bg-color.selected:not(:hover),.severity-2.bg-color:active,.severity-2.bg-color:visited{background-color:RGB(var(--now-color--alert-high-0,245,222,189))}.severity-3.bg-color{background-color:RGB(var(--now-color--alert-warning-1,226,216,89))}.severity-3.bg-color .tile-label{color:RGB(var(--now-color--alert-warning-5,64,64,0))}.severity-3.bg-color.selected,.severity-3.bg-color:active,.severity-3.bg-color:hover,.severity-3.bg-color:visited{border:2px solid rgb(var(--now-color--alert-warning-5,64,64,0))}.severity-3.bg-color.selected:not(:hover),.severity-3.bg-color:active,.severity-3.bg-color:visited{background-color:RGB(var(--now-color--alert-warning-0,242,237,179))}.severity-4.bg-color{background-color:RGB(var(--now-color--alert-info-1,104,171,218))}.severity-4.bg-color .tile-label{color:RGB(var(--now-color--alert-info-5,6,48,78))}.severity-4.bg-color.selected,.severity-4.bg-color:active,.severity-4.bg-color:hover,.severity-4.bg-color:visited{border:2px solid rgb(var(--now-color--alert-info-5,6,48,78))}.severity-4.bg-color.selected:not(:hover),.severity-4.bg-color:active,.severity-4.bg-color:visited{background-color:RGB(var(--now-color--alert-info-0,195,221,240))}.severity-5.bg-color{background-color:RGB(var(--now-color--alert-positive-1,119,178,123))}.severity-5.bg-color .tile-label{color:RGB(var(--now-color--alert-positive-5,15,52,17))}.severity-5.bg-color.selected,.severity-5.bg-color:active,.severity-5.bg-color:hover,.severity-5.bg-color:visited{border:2px solid rgb(var(--now-color--alert-positive-5,15,52,17))}.severity-5.bg-color.selected:not(:hover),.severity-5.bg-color:active,.severity-5.bg-color:visited{background-color:RGB(var(--now-color--alert-positive-0,201,224,202))}.indicator-button{display:inline-flex}.indicator-button-label{font-size:1rem;color:RGB(var(--now-color--secondary-1,1,119,142))}.indicator-button-label:hover{text-decoration:underline;color:RGB(var(--now-color--secondary-2,1,89,107))}.indicator-button-label:active{color:RGB(var(--now-color--secondary-3,1,60,71))}.noc-severity-indicator{display:inline-flex;align-items:center}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocSeverityIndicator.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","const CI_TYPE_ICON_SZ = 24; //px, aligned with now-icon size='lg'\nimport {t} from 'sn-translate';\n\n//Images that are taken from the db_image\nconst SEVERITIES_TO_GREY_MAP = {\n    1: 'severity_critical_grey.png',\n    2: 'severity_major_grey.png',\n    3: 'severity_minor_grey.png',\n    4: 'severity_warning_grey.png',\n    5: 'severity_ok_grey.png'\n};\n\n\nconst createIndicatorJsx = (count, severity, percentage) => {\n    const {label, iconUrl, isEnabled, value} = severity;\n    const indicatorIconUrl = isEnabled ? iconUrl : SEVERITIES_TO_GREY_MAP[value];\n    const indicatorLabel = `${count} ${label} (${percentage}%)`;\n    const indicatorTooltip = t('{0} {1} services', severity.isEnabled ? 'Hide' : 'Show', label);\n    return (\n        <noc-element-with-tooltip  tooltip={indicatorTooltip}>\n            <button\n                aria-selected={String(severity.isEnabled)}\n                className='indicator-button' >\n\n                <now-image\n                    className='indicator-button-icon'\n                    src={indicatorIconUrl}\n                    height={CI_TYPE_ICON_SZ}\n                    width={CI_TYPE_ICON_SZ}\n                />\n                <span className='indicator-button-label'>{indicatorLabel}</span>\n            </button>\n        </noc-element-with-tooltip>\n    );\n};\n\nexport const nocSeverityIndicatorView = (state) => {\n    const {\n        severity,\n        count,\n        percentage\n    } = state.properties;\n\n    const indicatorJsx = createIndicatorJsx(count, severity, percentage);\n    return (\n        <section className='noc-severity-indicator'>\n            {indicatorJsx}\n        </section>\n    );\n};\n\n","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {nocSeverityIndicatorView} from './nocSeverityIndicatorView';\nimport styles from './nocSeverityIndicator.scss';\nimport effectNocSeverityIndicator from './effectNocSeverityIndicator';\n\n\n/**\n * Seismic component noc-severity-indicator.\n * Implements single toggle for severity.\n * Defines toggle color and label.\n * Toggle label also has severity counter out of current population.\n */\ncreateNocElement('noc-severity-indicator', {\n    view: nocSeverityIndicatorView,\n    styles,\n    properties: {\n        severity: {\n            default: {}\n        },\n        count: {\n            default: 0\n        },\n        percentage: {\n            default: 0\n        }\n    },\n    eventHandlers: [{\n        // DEF0070357 - for some reason, clicking on Enter/Space causes two events to fire, MouseEvent and KeyUp\n        //              because we count on the current state (stateful), calling this effect twice causes the bug\n        events: ['click'],//, 'keyup'\n        effect: effectNocSeverityIndicator.effectHandlers.indicatorClicked\n    }]\n});\n","import './snNocSeverityIndicator';","import '../sn-noc-severity-indicator';\nimport {Fragment} from '@servicenow/ui-renderer-snabbdom';\nimport {t} from 'sn-translate';\n\n/**\n * Keep function, `this` context is in use by Array.map().\n * @param {*} sev\n */\nconst buildIndicator = function(sev) {\n\n\tconst {populationSize} = this;\n\n\tconst key = `indicator_toggle_${sev.value}`;\n\n\tconst groupSz = sev.populationSize;\n\n\tconst percentage = (!groupSz || !populationSize) ? '0' : (100 * (groupSz / populationSize)).toFixed(1);\n\n\treturn (<noc-severity-indicator\n\t\tkey={key}\n\t\tseverity={sev}\n\t\tcount={groupSz}\n\t\tpercentage={percentage}/>);\n};\n\nconst buildIndicatorsJsx = (sortedSeverities, populationSize) => {\n\treturn sortedSeverities.map(buildIndicator, {populationSize});\n};\n\nconst BAR_LABEL = t('Breakdown by severities');\n\nexport const view = (state, dispatch) => {\n\tconst {\n\t\tsortedSeverities = [],\n\t\tpopulationSize\n\t} = state;\n\n\tconst indicators = buildIndicatorsJsx(sortedSeverities, populationSize);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<fieldset  aria-label={BAR_LABEL}>\n\t\t\t\t{indicators}\n\t\t\t</fieldset>\n\t\t</Fragment>\n\t);\n};\n","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {CONSTANTS, createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport {view} from './view';\nimport {transformState} from './transformState';\nimport styles from './nocSeverityIndicatorBar.scss';\nimport nocSeverityIndicatorEffect from './nocSeverityIndicatorBarEffect';\n\n/**\n * Create custom element\n */\ncreateNocElement('noc-severity-indicators-bar', {\n\tview,\n\ttransformState,\n\tstyles,\n\tproperties: {\n\t\tseverities: {\n\t\t\tdefault: null\n\t\t},\n\t\tpopulation: {\n\t\t\tdefault: []\n\t\t},\n\t\tseverityFilter: {\n\t\t\tdefault: null\n\t\t},\n\t},\n\tactionHandlers: {\n\t\t[nocSeverityIndicatorEffect.ACTION_TYPES.NOC_SEVERITY_INDICATOR_CLICKED]:\n            createActionConfig(nocSeverityIndicatorEffect.effectHandlers.filterSeverities)\n\t}\n});\n","import '@servicenow/now-heading';\nimport '@servicenow/now-alert';\nimport '../noc-severity-indicators-bar';\nimport '../noc-breadcrumb';\nimport '@devsnc/library-opws-mapping-shared/src/components/sn-noc-notifications';\nimport SPECTRUM_CONST from './snNocSpectrumConsts';\nimport { CONSTANTS, LOGGING } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\nimport { getButtonsJsx } from './snNocSpectrumButtonsJsx';\nimport { getSettingsModal } from './settingsModalJsx';\nimport { getUserViewSaveAsModal } from '../sn-noc-views/userViewSaveAsModalJsx';\nimport { t } from 'sn-translate';\nimport { isEmpty as _isEmpty , get as _get} from 'lodash';\nimport { isViewExists } from '../noc-user-view-behaviors/userViewsUtils';\n\n\nconst VIEW_NAME_REGEX = /^(.*?)(\\-)*(\\d*)$/;\n\nconst getInitialViewName = (viewName, viewsList) => {\n\tconst TRIES_LIMIT = 100;\n\tfor (var suffix = 1; suffix < TRIES_LIMIT; suffix++) {\n\t\tvar name;\n\t\tconst numberSuffix = VIEW_NAME_REGEX.exec(viewName);\n\t\tif (!_isEmpty(numberSuffix[2])) {\n\t\t\tname = numberSuffix[1] + '-' + (+numberSuffix[3] + suffix);\n\t\t} else {\n\t\t\tname = numberSuffix[0] + '-' + suffix;\n\t\t}\n\t\tif (!isViewExists(name, viewsList)) {\n\t\t\treturn name;\n\t\t}\n\t}\n\treturn '';\n}\n\nconst generateSettingsModal = (tilemapsFormat, dispatch) => {\n\tconst selectedItem = [tilemapsFormat.tileSize];\n\treturn getSettingsModal({ selectedItem, dispatch });\n};\n\nconst generateUserViewSaveAsModal = (userViewSaveAsModal, dispatch, viewNameSuggestion) => {\n\tconst { isValid, errors } = userViewSaveAsModal;\n\tLOGGING.info(`Generate user view isValid? ${isValid}`);\n\treturn getUserViewSaveAsModal({ dispatch, isValid, errors, viewNameSuggestion });\n};\n\n/**\n * Fix default user view name to capital case (Default)\n * @param viewName\n * @param userId\n * @returns {string}\n */\nconst fixUserViewName = (viewName,  userId) =>\n\t(userId === null && viewName === VIEW_CONSTANTS.DEFAULTS.DEFAULT_USER_VIEW_NAME) ?\n\t\tviewName[0].toLocaleUpperCase() + viewName.slice(1) : viewName;\n\nexport const view = (state, dispatch) => {\n\tconst { population } = state.properties;\n\tconst serviceText = t('{0} services', population.length);\n\tconst {\n\t\ttilemapsFormat = {},\n\t\tuserViewId,\n\t\tfilter,\n\t\tsettingsModal = {},\n\t\tuserViewSaveAsModal = {},\n\t\tnotifications = [],\n\t\tviewsList,\n\t\tnoChangesOnCurrentView,\n\t\tselectedView\n\t} = state.properties;\n\tconst currentView = viewsList[selectedView];\n\n\tconst currentViewName = _get(currentView, 'view_name.value', '');\n\tconst currentViewUserId = _get(currentView, 'user_id.value', null);\n\n\tconst settingsModalJsx = settingsModal.isOpen ? generateSettingsModal(tilemapsFormat, dispatch) : null;\n\tvar userViewSaveAsModalJsx = null;\n\tif (userViewSaveAsModal.isOpen) {\n\t\tconst viewNameSuggestion = getInitialViewName(currentViewName, viewsList);\n\t\tuserViewSaveAsModalJsx = generateUserViewSaveAsModal(userViewSaveAsModal, dispatch, viewNameSuggestion);\n\t}\n\n\tconst buttonsJsx = getButtonsJsx({ userViewId, filter, dispatch, noChangesOnCurrentView, currentView });\n\n\tconst severities = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/severities`;\n\tconst severityFilter = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/severityFilter`;\n\n\tconst displayUserViewName = fixUserViewName(currentViewName, currentViewUserId);\n\n\treturn (\n\t\t<div className='noc-severity-bar' role=\"banner\">\n\t\t\t<span className='full-title-width'>\n\t\t\t\t<now-heading\n\t\t\t\t\thas-no-margin\n\t\t\t\t\tvariant='header-primary'\n\t\t\t\t\tlabel={displayUserViewName}\n\t\t\t\t\tclassName='view-name-title -right-Border' />\n\t\t\t\t<now-heading\n\t\t\t\t\thas-no-margin\n\t\t\t\t\tclassName='service-count'\n\t\t\t\t\tvariant='header-secondary'\n\t\t\t\t\tlabel={serviceText} />\n\n\t\t\t\t{buttonsJsx}\n\t\t\t\t{settingsModalJsx}\n\t\t\t\t{userViewSaveAsModalJsx}\n\t\t\t</span>\n\n\n\t\t\t<span className=\"severity-breakdown-container\">\n\t\t\t\t<label className='severity-breakdown'>{SPECTRUM_CONST.SEVERITY_BREAKDOWN}</label>\n\t\t\t\t<noc-severity-indicators-bar\n\t\t\t\t\tkey='noc_severity_indicators_bar__key'\n\t\t\t\t\tcomponent-id='noc-severity-indicators-indicators'\n\t\t\t\t\tseverities={severities}\n\t\t\t\t\tpopulation={population}\n\t\t\t\t\tseverity-filter={severityFilter}\n\t\t\t\t\tclassName=\"severity-indicators-bar\" />\n\t\t\t</span>\n\n\t\t\t<sn-noc-notifications\n\t\t\t\tcomponent-id={CONSTANTS.DEFAULTS.NOC_APP_NOTIFICATIONS_COMPONENT_ID}\n\t\t\t\tclassName='notifications'\n\t\t\t\tnotifications={notifications} />\n\n\t\t</div>\n\t);\n};\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align,.settings-form,.settings-form .settings-section{display:flex}.-row.-reverse.settings-form,.now-align.-row.-reverse,.settings-form .-row.-reverse.settings-section{flex-direction:row-reverse}.-column.settings-form,.now-align.-column,.settings-form .-column.settings-section{flex-direction:column}.-column.-reverse.settings-form,.now-align.-column.-reverse,.settings-form .-column.-reverse.settings-section{flex-direction:column-reverse}.-wrap.settings-form,.now-align.-wrap,.settings-form .-wrap.settings-section{flex-wrap:wrap}.-inline.settings-form,.now-align.-inline,.settings-form .-inline.settings-section{justify-content:space-between}.-inline-center.settings-form,.now-align.-inline-center,.settings-form .-inline-center.settings-section{justify-content:center}.-inline-end.settings-form,.now-align.-inline-end,.settings-form .-inline-end.settings-section{justify-content:flex-end}.-block-start.settings-form,.now-align.-block-start,.settings-form .-block-start.settings-section{align-items:flex-start}.-block-center.settings-form,.now-align.-block-center,.settings-form .-block-center.settings-section{align-items:center}.-block-end.settings-form,.now-align.-block-end,.settings-form .-block-end.settings-section{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl,.settings-form .settings-section:not(:first-of-type){margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md,.settings-form .settings-section .section-label{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.noc-severity-bar .buttons>*,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm,.settings-form .settings-section .section-item{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.noc-severity-bar,.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm,.settings-form .settings-section .section-label{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.noc-severity-bar,.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.noc-severity-bar .severity-breakdown,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-full-width{flex-basis:100%;width:100%}:host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.notifications{position:absolute;left:30%;max-width:60%;min-width:40%;top:.75rem}.flex-column{flex-direction:column}.noc-severity-bar{display:flex;flex-wrap:wrap;border-bottom:1px solid rgb(var(--now-color--neutral-5,172,180,181));vertical-align:middle}.noc-severity-bar .severity-breakdown-container{align-items:center;display:flex}.noc-severity-bar .severity-breakdown{font-size:1rem;color:RGB(var(--now-color--text-tertiary,99,114,116));padding-bottom:.25rem;margin-right:.5rem}.noc-severity-bar .service-count{align-self:flex-end;padding-bottom:.0625rem}.noc-severity-bar .buttons{display:flex;flex-grow:1;justify-content:flex-end;align-items:flex-start}@media (-ms-high-contrast:none){.noc-severity-bar .buttons>*,.noc-severity-bar ::-ms-backdrop{padding-left:.5rem}}.settings-form{margin:0}.settings-form,.settings-form .settings-section{flex-direction:column}.settings-form .settings-section .section-label{border-bottom:1px solid rgb(var(--now-color--neutral-7,135,147,148))}.view-name-title{font-size:2rem;color:RGB(var(--now-color--neutral-12,66,80,81));margin-top:.5rem}.view-name-title.-right-Border{margin-right:.5rem;padding-right:.5rem;border-right:2px solid rgb(var(--now-color--neutral-12,66,80,81))}.full-title-width{width:100%;display:flex;margin-bottom:.5rem}.flex-wrap-title{display:flex-wrap}.full-width{width:100%}@media screen and (max-width:50rem){.noc-severity-bar .buttons{justify-content:start;width:100%}.noc-severity-bar .full-title-width{display:block;margin-bottom:1rem}.noc-severity-bar .service-count,.noc-severity-bar .view-name-title{display:inline-block;margin-block-end:1rem}.noc-severity-bar .severity-breakdown-container{display:block}}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./snNocSpectrumContainer.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import { CONSTANTS, createNocElement, createActionConfig } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from '../noc-user-view-behaviors/constants';\nimport SPECTRUM_CONST from './snNocSpectrumConsts';\nimport styles from './snNocSpectrumContainer.scss';\nimport { view } from './snNocSpectrumContainerView';\nimport snNocSpectrumContainerEffect from './snNocSpectrumContainerEffect';\nimport settingsModalEffect from './settingsModalEffect';\nimport userViewSaveAsModalEffect from '../sn-noc-views/userViewSaveAsModalEffect';\nimport { isViewExists } from '../noc-user-view-behaviors/userViewsUtils';\nimport { t } from 'sn-translate';\n\n\ncreateNocElement('sn-noc-spectrum-container', {\n\tview,\n\tstyles,\n\tonBootstrap(host, dispatch) {\n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_COMPONENT_CONNECTED, {}, { stopPropagation: true });\n\t},\n\tproperties: {\n\t\tpopulation: {\n\t\t\tdefault: []\n\t\t},\n\t\tseverities: {\n\t\t\tdefault: null\n\t\t},\n\t\ttilemapsFormat: {\n\t\t\tdefault: null\n\t\t},\n\t\tuserViewId: {\n\t\t\tdefault: null\n\t\t},\n\t\tfilter: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tsettingsModal: {\n\t\t\tdefault: {\n\t\t\t\tisOpen: false\n\t\t\t}\n\t\t},\n\n\t\tuserViewSaveAsModal: {\n\t\t\tdefault: {\n\t\t\t\tisOpen: false,\n\t\t\t\terrors: null,\n\t\t\t\tisValid: true\n\t\t\t}\n\t\t},\n\n\t\tnotifications: {\n\t\t\tdefault: []\n\t\t},\n\n\n\n\t\tviewsList: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tselectedView: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tnoChangesOnCurrentView:{\n\t\t\tdefault: true\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[snNocSpectrumContainerEffect.ACTION_TYPES.MODAL_STATE_CHANGED]:\n\t\t\tcreateActionConfig(snNocSpectrumContainerEffect.effectHandlers.toggleModalEffect),\n\n\t\t[settingsModalEffect.ACTION_TYPES.SETTINGS_MODAL_STATE_CHANGED]:\n\t\t\tcreateActionConfig(settingsModalEffect.effectHandlers.toggleSettingsModalEffect),\n\n\t\t[settingsModalEffect.ACTION_TYPES.DROPDOWN_STATE_CHANGED]:\n\t\t\tcreateActionConfig(settingsModalEffect.effectHandlers.dropdownValueChangedEffect),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_MODAL_STATE_CHANGED]:\n\t\t\tcreateActionConfig(userViewSaveAsModalEffect.effectHandlers.toggleUserViewSaveAsModalEffect),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAME_CHANGED]:\n\t\t\tcreateActionConfig(userViewSaveAsModalEffect.effectHandlers.userViewNameChangedEffect),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_REQUESTED]:\n\t\t\tcreateActionConfig(userViewSaveAsModalEffect.effectHandlers.saveUserViewSaveAsModalEffect),\n\n\t\t['NOW_INPUT#INVALID_SET']:\n\t\t\t(coeffects) => {\n\t\t\t\tconst { updateProperties, properties: { userViewSaveAsModal }, action: { payload: { value ,fieldValue} } } = coeffects;\n\t\t\t\tconst isValid = (fieldValue.length>40)?false:!value;\n\t\t\t\tconst errors = !isValid ? { status: 'critical', content: t('View name must be between 1-40 characters.'), icon: 'exclamation-circle-outline' } : null;\n\t\t\t\tupdateProperties({ userViewSaveAsModal: { ...userViewSaveAsModal, isValid, errors } });\n\t\t\t},\n\t\t['NOW_INPUT#VALUE_SET']:\n\t\t\t(coeffect) => {\n\t\t\t\tconst { action: { payload: { value } }, updateProperties, properties: { userViewSaveAsModal, viewsList } } = coeffect;\n\t\t\t\tconst isValid = !isViewExists(value, viewsList);\n\t\t\t\tconst errors = !isValid ? { status: 'critical', content: t('Name is already in use. Choose a different view name.'), icon: 'exclamation-circle-outline' } : null;\n\t\t\t\tupdateProperties({ userViewSaveAsModal: { ...userViewSaveAsModal, isValid, errors } });\n\t\t\t}\n\n\t}\n});","import './snNocSpectrumContainer';","import {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport '../sn-noc-spectrum-container';\n\nexport const getNocSpectrumJsx = (state, isEm) => {\n\tconst {\n\t\tpopulation,\n\t\tuberFilter,\n\t\tseverities,\n\t\ttilemapsFormat,\n\t\tserviceGroups,\n\t\tnotifications\n\t} = state.properties;\n\n\tconst {\n\t\tuserViewResource: {\n\t\t\tsys_id = null\n\t\t} = {}\n\t} = state;\n\tconst selectedView=`@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/views.selectedView[0]`;\n\tconst viewsList=`@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/views.itemsMap`;\n\tconst noChangesOnCurrentView = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/noChangesOnCurrentView`;\n\n\tconst spectrumContainerJsx = (isEm && severities) ?\n\t\t<sn-noc-spectrum-container key='noc_spectrum_container_key'\n\t\t                           component-id={CONSTANTS.DEFAULTS.NOC_SPECTRUM_CONTAINER_COMPONENT_ID}\n\t\t                           population={population}\n\t\t                           filter={uberFilter}\n\t\t                           severities={severities}\n\t\t                           service-groups={serviceGroups}\n\t\t                           user-view-id={sys_id}\n\t\t                           tilemaps-format={tilemapsFormat}\n\t\t\t\t\t\t\t\t   notifications={notifications}\n\t\t\t\t\t\t\t\t   selected-view={selectedView}\n\t\t\t\t\t\t\t\t   views-list={viewsList}\n\t\t\t\t\t\t\t\t   no-changes-on-current-view={noChangesOnCurrentView}\n\t\t\t\t\t\t\t\t   /> : null;\n\treturn spectrumContainerJsx;\n};\n\n","import {createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport nocTilemapSelectGroupEffect from './nocTilemapSelectGroupEffect';\n\nexport const nocTilemapSelectGroupBehavior = {\n    name: 'nocTilemapSelectGroupBehavior',\n    actionHandlers: {\n        [nocTilemapSelectGroupEffect.ACTION_TYPES.TILEMAP_SELECT_REGULAR_GROUP]:\n            createActionConfig(nocTilemapSelectGroupEffect.effectHandlers.selectSpecificGroup)\n    }\n}","module.exports = __TECTONIC__$servicenow_behavior_resize_18_3_15;","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm,.tilemap-toolbar{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm,.search{padding-block-start:.5rem}.noc-breadcrumb-container,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl,.tilemap-toolbar,.tools-section{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.noc-breadcrumb-container,.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.now-align,.sn-opws-loader{display:flex}.-row.-reverse.sn-opws-loader,.now-align.-row.-reverse{flex-direction:row-reverse}.-column.sn-opws-loader,.now-align.-column{flex-direction:column}.-column.-reverse.sn-opws-loader,.now-align.-column.-reverse{flex-direction:column-reverse}.-wrap.sn-opws-loader,.now-align.-wrap{flex-wrap:wrap}.-inline.sn-opws-loader,.now-align.-inline{justify-content:space-between}.now-align.-inline-center,.sn-opws-loader{justify-content:center}.-inline-end.sn-opws-loader,.now-align.-inline-end{justify-content:flex-end}.-block-start.sn-opws-loader,.now-align.-block-start{align-items:flex-start}.now-align.-block-center,.sn-opws-loader{align-items:center}.-block-end.sn-opws-loader,.now-align.-block-end{align-items:flex-end}.sn-opws-loader{height:100%;display:flex;flex-direction:column;width:100%;flex-grow:1}:root{display:block;position:relative}.tilemap-toolbar{position:relative;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.tilemap-layout{position:relative;display:flex;height:100%;flex-grow:1}.header-no-data{display:flex;height:calc(90% - 48px);width:100%}.header-no-data,.noc-tilemap-empty-icon{align-items:center;justify-content:center}.noc-tilemap-empty-icon{display:inline-block;flex-direction:column;margin-bottom:1rem}.noc-empty-state{align-items:center;flex-direction:column;margin-bottom:1rem;min-height:150px}.noc-empty-state,.noc-empty-state-row{display:flex;justify-content:center;width:100%}.noc-empty-state-row{color:RGB(var(--now-color--neutral-18,22,27,28));font-size:1rem;text-align:center}.noc-empty-state-row.-header{color:RGB(var(--now-color--neutral-12,66,80,81));font-size:1.25rem;font-weight:400;margin-top:1rem;margin-bottom:1rem;padding:0}.noc-empty-state.-behind{z-index:-1}.noc-tilemap-empty-icon{width:145px;height:106px}.tilemap-container-layout{height:100%;display:flex;flex-direction:column;width:100%;flex-grow:1}.tools-section{display:flex;width:100%;justify-content:flex-start}.noc-breadcrumb-container{align-items:flex-start;flex-grow:1;line-height:1.5rem}.search{min-width:21.875rem;align-items:flex-end}@media screen and (max-width:50rem){.search{min-width:10.625rem}}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocTilemapContainer.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {LOGGING} from '../../utils';\nimport {debounce as _debounce} from 'lodash';\n\nimport {actionTypes} from '@servicenow/ui-core';\nconst {COMPONENT_BOOTSTRAPPED, COMPONENT_DISCONNECTED} = actionTypes;\n\nconst ACTION_TYPES = {\n\tOPWS_LOADER_BOOTSTRAP: COMPONENT_BOOTSTRAPPED,\n\tOPWS_LOADER_DISCONNECTED: COMPONENT_DISCONNECTED,\n\tOPWS_LOADER_SHOW: 'OPWS_LOADER_SHOW'\n};\n\nconst opwsLoaderBootstrap = coeffects => {\n\tlet {\n\t\tstate,\n\t\taction,\n\t\tdispatch\n\t} = coeffects;\n\n\tLOGGING.debug('Bootstrapping loader', {caller: action.meta.id});\n\n\tconst {properties: {debounceTime}} = state;\n\n\tconst debounceFn = _debounce(() => {\n\t\tLOGGING.debug('Debounce time ended', {caller: action.meta.id});\n\t\tdispatch(ACTION_TYPES.OPWS_LOADER_SHOW, {});\n\t}, debounceTime);\n\n\tdebounceFn();\n\n\tconst {updateState} = coeffects;\n\n\tupdateState({showing: false, debounceFn});\n};\n\nconst _loaderSet = (coeffects, showing) => {\n\tlet {\n\t\tstate,\n\t\taction,\n\t\tupdateState\n\t} = coeffects;\n\n\tLOGGING.debug(['Set loader showing=', showing], {caller: action.meta.id});\n\n\tconst {debounceFn} = state;\n\tif (debounceFn) {\n\t\tLOGGING.debug('Cancel loader', {caller: action.meta.id});\n\t\tdebounceFn.cancel();\n\t}\n\n\tupdateState({showing, debounceFn: null});\n};\n\nconst opwsLoaderCancel = coeffects => {\n\t_loaderSet(coeffects, false);\n};\n\nconst opwsLoaderShow = coeffects => {\n\t_loaderSet(coeffects, true);\n};\n\nconst effectHandlers = {\n\topwsLoaderBootstrap,\n\topwsLoaderCancel,\n\topwsLoaderShow\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","module.exports = __TECTONIC__$servicenow_now_loader;","import {LOGGING} from '../../utils';\nimport '@servicenow/now-loader';\n\nexport const view = (state, dispatch) => {\n\tconst {showing, properties: {label, size}} = state;\n\n\tLOGGING.debug(`Showing loader=${showing}`, {caller: state.componentId});\n\n\treturn showing ?\n\t\t<now-loader size={size} label={label}/> : null;\n};","import {createNocElement} from '../../createNocElement';\nimport {createActionConfig} from '../../createActionConfig';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport {view} from './snOpwsLoaderView';\nimport snNocLoaderEffect from './snOpwsLoaderEffect';\n\ncreateNocElement('sn-opws-loader', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\n\tinitialState: {\n\t\tshowing: false,\n\t\tdebounceFn: null\n\t},\n\n\tproperties: {\n\t\tdebounceTime: {\n\t\t\tdefault: 300\n\t\t},\n\t\tlabel: {\n\t\t\tdefault: null\n\t\t},\n\t\tsize: {\n\t\t\tdefault: 'lg'\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[snNocLoaderEffect.ACTION_TYPES.OPWS_LOADER_BOOTSTRAP]:\n\t\t\tcreateActionConfig(snNocLoaderEffect.effectHandlers.opwsLoaderBootstrap),\n\n\t\t[snNocLoaderEffect.ACTION_TYPES.OPWS_LOADER_DISCONNECTED]:\n\t\t\tcreateActionConfig(snNocLoaderEffect.effectHandlers.opwsLoaderCancel),\n\n\t\t[snNocLoaderEffect.ACTION_TYPES.OPWS_LOADER_SHOW]:\n\t\t\tcreateActionConfig(snNocLoaderEffect.effectHandlers.opwsLoaderShow)\n\t}\n});","import './snOpwsLoader';","import {t} from 'sn-translate';\n\n/**\n * Global or common purpose constants for NOCpit project.\n */\nexport const CONSTANTS = {\n\tTEXT: {\n\t\tHOME: t('Home')\n\t},\n\tDEFAULTS: {\n\t\tNOC_APP_COMPONENT_ID: 'noc-app-root',\n\t\tNOC_TILEMAP_LAYOUT_COMPONENT_ID: 'noc-tilemap-layout',\n\t\tNOC_TILEMAP_TOOLBAR_COMPONENT_ID: 'noc-tilemap-toolbar',\n\t\tNOC_TILEMAP_CONTAINER_COMPONENT_ID: 'noc-tilemap-container',\n\t\tNOC_SPECTRUM_CONTAINER_COMPONENT_ID: 'noc-spectrum-container',\n\t\tNOC_BREADCRUMB_COMPONENT_COMPONENT_ID: 'noc-breadcrumb-container',\n\t\tNOC_APP_NOTIFICATIONS_COMPONENT_ID: 'noc-app-notifications',\n\t\tWORKSPACE: 'nocpit',\n\t\tNOC_FALLBACK_SORT_FIELD: 'name',\n\t\tRELATED_ITEMS_PAGE_SIZE: 25\n\t},\n\n\tGENERAL: {\n\t\tPROPERTIES_SET: 'PROPERTIES_SET', //stop using it, use updateProperties()\n\t\tENTER_KEY_CODE: 13,\n\n\t\t/**\n\t\t * eds-highlighted-value has special hidden vlaues for status proeprty to set severity colors.\n\t\t * Workaround for tectonic 2.0.0+\n\t\t */\n\t\tEM_SEVERITY_TO_EDS_STATUS: {\n\t\t\t'1': 'critical',\n\t\t\t'2': 'high',\n\t\t\t'3': 'warning',\n\t\t\t'4': 'info',\n\t\t\t'5': 'positive'\n\t\t}\n    },\n\n\tGLOBALS: {\n\t\t// Ascending / descending\n\t\tASC: 'asc',\n\t\tDESC: 'desc',\n\t\tALL_SYS_ID: '0e7a06157f10310016181ccebefa91ce',\n\t\tASSURANCE: 'assurance',\n\t\tMAPPING: 'mapping',\n\t\t//TODO bring from configuration\n\t\tBS_URL: '/$sw_topology_map.do?sysparm_bsid={0}&sysparm_plugin_mode={1}'\n\t},\n\tTABLES_NAMES: {\n\t\tEM_ALERT: 'em_alert'\n\t},\n\tACTION_TYPES: {\n\t\t/**\n\t\t * This Action may be dispatched from any component `onConnect`.\n\t\t * Important: take care to set all handlers for this action as private.\n\t\t */\n\t\tNOC_COMPONENT_CONNECTED: 'NOC_COMPONENT_CONNECTED',\n\n\t\tNOC_ERROR_OCCURRED: 'NOC_ERROR_OCCURRED',\n\n\t\tNOC_SHOW_NOTIFICATION: 'NOC_SHOW_NOTIFICATION',\n\t\tNOC_CLEAR_NOTIFICATIONS: 'NOC_CLEAR_NOTIFICATIONS',\n\n\t\t/**\n\t\t * All *_SET actions dispatched at the end of logical step in flow, \n\t\t * after result was put on state.\n\t\t * All these events carry empty payload.\n\t\t * They should be used to continue the flow.\n\t\t */\n\t\tUSER_META_SET: 'USER_META_SET',\n\t\tNOC_CONFIG_SET: 'NOC_CONFIG_SET',\n\t\tNOC_CONFIG_SET_PHASE_2: 'NOC_CONFIG_SET_PHASE_2',\n\t\tUBER_FILTER_SET: 'UBER_FILTER_SET',\n\t\tSEVERITY_FILTER_SET: 'SEVERITY_FILTER_SET',\n\t\tALERT_PREFERENCES_SET: 'ALERT_PREFERENCES_SET',\n\t\tTILEMAPS_FORMAT_SET: 'TILEMAPS_FORMAT_SET',\n\t\tNOC_TILE_MAP_CONFIG_SET: 'NOC_TILE_MAP_CONFIG_SET',\n\t\tNOC_POPULATION_SET: 'NOC_POPULATION_SET',\n\t\tNOC_POPULATION_SET_PHASE_2: 'NOC_POPULATION_SET_PHASE_2',\n\t\tNOC_COLORS_AND_ICONS_SET: 'NOC_COLORS_AND_ICONS_SET',\n\t\tNOC_COLORS_AND_ICONS_SET_PHASE_2: 'NOC_COLORS_AND_ICONS_SET_PHASE_2',\n\t\tNOC_SEVERITY_CHOICES_SET: 'NOC_SEVERITY_CHOICES_SET',\n\t\tNOC_POPULATION_GROUPS_SET: 'NOC_POPULATION_GROUPS_SET',\n\n\t\tNOC_SERVICE_PREVIEW_SET: 'NOC_SERVICE_PREVIEW_SET',\n\n\t\tSEVERITY_TOGGLE_CHANGED: 'SEVERITY_TOGGLE_CHANGED',\n\n\t\tSEARCH_TERM_CHANGED: 'SEARCH_TERM_CHANGED',\n\n\t\tSERVICE_PREVIEW_REQUESTED: 'SERVICE_PREVIEW_REQUESTED',\n\t\tREFRESH_SERVICE_PREVIEW_REQUESTED: 'REFRESH_SERVICE_PREVIEW_REQUESTED',\n\n\t\tTOGGLE_SIDE_PANEL: 'TOGGLE_SIDE_PANEL',\n\n\t\tIMPACTED_SERVICES_REQUESTED: 'IMPACTED_SERVICES_REQUESTED',\n\n\t\tCLEAR_IMPACTED_SERVICES_REQUEST: 'CLEAR_IMPACTED_SERVICES_REQUEST',\n\t\tNOC_STOP_LISTEN_TO_ALERTS_CHANGE: 'NOC_STOP_LISTEN_TO_ALERTS_CHANGE',\n\n\t\t/**\n\t\t * These actions dispatched as result of changes notificator\n\t\t */\n\t\tNOC_POPULATION_REFRESH_REQUESTED: 'NOC_POPULATION_REFRESH_REQUESTED',\n\t\tNOC_ALERTS_REFRESH_REQUESTED: 'NOC_ALERTS_REFRESH_REQUESTED',\n\n\t\t/**\n\t\t * Actions to apply changes on current UserView.\n\t\t * Each action will result update on noc_user_view record, and modification of the corresponding public\n\t\t * property on noc-app\n\t\t */\n\t\t//payload: {uberFilter: {filter: string}}\n\t\tUBER_FILTER_SAVE_REQUESTED: 'UBER_FILTER_SAVE_REQUESTED',\n\t\t//payload: {severityFilter: {enabledSeverities: {...}}}\n\t\tSEVERITY_FILTER_SAVE_REQUESTED: 'SEVERITY_FILTER_SAVE_REQUESTED',\n\t\t//payload: {tilemapsFormat: {sortByField, groupByField, sortByOrder, groupByOrder}}\n\t\tTILEMAPS_FORMAT_SAVE_REQUESTED: 'TILEMAPS_FORMAT_SAVE_REQUESTED',\n\n\t\t//payload: {alertPreferences: {isAlertsCorrelatedView, defaultAlertsSorting}}\n\t\tALERT_PREFERENCES_SAVE_REQUESTED: 'ALERT_PREFERENCES_SAVE_REQUESTED',\n\n\t\tNOC_GET_ALERTS_INIT: 'NOC_GET_ALERTS_INIT',\n\n\t\t/**\n\t\t * Seismic actions\n\t\t */\n\t\tITEM_SELECTED:'ITEM_SELECTED'\n\t},\n\n\t\n};\n","import {createRef} from '@servicenow/ui-renderer-snabbdom';\nimport {CONSTANTS} from  '../../constants';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-button';\nimport {isEmpty as _isEmpty} from 'lodash';\n\nconst SEARCH_DESCRIPTION_ID = 'SEARCH_DESCRIPTION_ID';\nconst search = (inputRef, dispatch) => {\n\tlet delayTimer;\n\treturn function() {\n\t\tclearTimeout(delayTimer);\n\t\tdelayTimer = setTimeout(function() {\n\t\t\tconst {value} = inputRef.current;\n\t\t\tdispatch(CONSTANTS.ACTION_TYPES.SEARCH_TERM_CHANGED, {value: value.trim()});\n\t\t}, 1000);\n\t};\n};\n\nconst clearSearch = (dispatch) => () => {\n\tdispatch(CONSTANTS.ACTION_TYPES.SEARCH_TERM_CHANGED, {value: ''});\n};\n\nexport const view = (state, dispatch) => {\n\tconst {searchTerm, searchDescription, searchLabel, clearSearchLabel} = state.properties;\n\tconst configSearchAria = {'aria-label': clearSearchLabel};\n\tconst inputRef = createRef();\n\tconst clearSearchButton = !_isEmpty(searchTerm) ?\n\t\t<now-button-iconic\n\t\t\tvariant='tertiary'\n\t\t\tclassName='clear-search'\n\t\t\ticon='close-outline'\n\t\t\ton-click={clearSearch(dispatch)}\n\t\t\tsize='md'\n\t\t\ttooltip-content={clearSearchLabel}\n\t\t\tconfig-aria={configSearchAria}\n\t\t\tbare/> : null;\n\treturn (\n\t\t<form role='search'\n\t\t      className='search'\n\t\t      attr-onsubmit=\"javascript:return false;\">\n\t\t\t<label\n\t\t\t\tclassName='now-a11y-label'\n\t\t\t\tid={SEARCH_DESCRIPTION_ID}>\n\t\t\t\t{searchDescription}\n\t\t\t</label>\n\t\t\t<now-icon\n\t\t\t\tclassName='search-icon'\n\t\t\t\ticon='magnifying-glass-outline'\n\t\t\t\tsize='md'/>\n\t\t\t<input\n\t\t\t\tref={inputRef}\n\t\t\t\tclassName='search-input'\n\t\t\t\taria-label={searchLabel}\n\t\t\t\tplaceholder={searchLabel}\n\t\t\t\taria-describedby={SEARCH_DESCRIPTION_ID}\n\t\t\t\tauto-focus\n\t\t\t\ttype='text' //'search' - not supported in all browsers as we expect it\n\t\t\t\tvalue={searchTerm}\n\t\t\t\ton-input={search(inputRef, dispatch)}/>\n\t\t\t{clearSearchButton}\n\t\t</form>\n\t);\n};\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs,.search .search-input{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm,.search .search-icon{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm,.search .search-icon{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl,.search .search-input{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.search,.search::placeholder{color:var(--now-color--neutral-18,22,27,28)}.search{display:inline-flex;font-size:1rem;color:RGB(var(--now-color--neutral-9,99,114,116));align-items:center;width:100%;position:relative;color:var(--now-color--neutral-18,22,27,28)}.search::placeholder{opacity:.45}.search .search-icon{position:absolute;transition:opacity .3s ease-out;transform:scale(1);opacity:1}:host(:not([dir=rtl])) .search .search-icon,:root:not([dir=rtl]) .search .search-icon{left:0}:host([dir=rtl]) .search .search-icon,:root[dir=rtl] .search .search-icon{right:0}.search .search-input{font-family:inherit;font-size:1rem;color:RGB(var(--now-color--neutral-18,22,27,28));border:none;border-bottom:1px solid rgb(var(--now-color--neutral-5,172,180,181));width:100%;height:2rem}.search .search-input:hover{box-shadow:0 1px 0 RGB(var(--now-color--neutral-5,172,180,181))}.search .search-input.is-focus,.search .search-input:focus{outline:none;background-color:RGB(var(--now-color--secondary-0,217,235,238));box-shadow:0 1px 0 RGB(var(--now-color--secondary-1,1,119,142))}.search .clear-search{position:absolute}:host(:not([dir=rtl])) .search .clear-search,:root:not([dir=rtl]) .search .clear-search{right:0}:host([dir=rtl]) .search .clear-search,:root[dir=rtl] .search .clear-search{left:0}@media (-ms-high-contrast:none){.search-input,::-ms-backdrop{padding-left:2rem}}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../../css-loader/index.js!../../../../../postcss-loader/src/index.js??ref--6-2!../../../../../sass-loader/lib/loader.js??ref--6-3!./nocSearch.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","/**\n * Seismic component noc-field-select.\n *\n */\nimport {createNocElement} from '../../createNocElement';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './nocSearch.scss';\nimport {view} from './view.js';\n\n\ncreateNocElement('noc-search', {\n    renderer: {\n        type: snabbdom,\n        view\n    },\n    styles,\n\n    properties: {\n        searchTerm: {\n            default: ''\n        },\n        searchDescription: {\n            default: ''\n        },\n        searchLabel: {\n            default: ''\n        },\n        clearSearchLabel: {\n            default: ''\n        }\n    }\n})\n;","import {LOGGING, checkForError, getValue} from '@devsnc/library-opws-mapping-shared';\n\n\nconst getMedian = numbers => {\n    const sorted = numbers.slice().sort((a, b) => a - b);\n    const middle = Math.floor(sorted.length / 2);\n\n    if (sorted.length % 2 === 0)\n        return Math.floor((sorted[middle - 1] + sorted[middle]) / 2);\n\n    const median = Math.floor(sorted[middle]);\n    return median;\n};\n\nconst calculateMedian = (groups, maxAvailableSegments, start, end) => {\n    const arr = [];\n\n    //Prepare the input array for the median calculation\n    //The array should contains all group's services count within the same targeted row\n    for (let i = start; i < groups.length && i < end; i++) {\n        const serviceNumber = groups[i].population.length;\n        arr.push((serviceNumber <= maxAvailableSegments) ? maxAvailableSegments : serviceNumber);\n    }\n\n    const median = getMedian(arr);\n    return median;\n};\n\nconst calculateMaxServicesAllowed = (config, groups, segmentsChoicesCount, start, end) => {\n    //Calculate the median services per a specific row of groups\n    const median = calculateMedian(groups, segmentsChoicesCount, start, end);\n    const maxServicesInGroup = (median > config.maxItems) ? config.maxItems : median;\n    LOGGING.info(`calculateMaxServicesAllowed`, {\n        caller: 'Dynamic Layout',\n        extra: {row: (start / config.columns), config, median, maxServicesInGroup}\n    });\n\n    return maxServicesInGroup;\n};\n\nconst fixSegmentsSize = (segments, selectedGroup, maxServicesInGroup, segmentsChoicesCount, canSegmentsDividedEqually) => {\n    //Determine how many service should resides within each segment\n    const segmentSize = (canSegmentsDividedEqually) ? segmentsChoicesCount : segments.length;\n    const itemsPerSegment = Math.floor(maxServicesInGroup / segmentSize);\n\n    segments.forEach(s => {\n        s.segmentTotalItemsCount = s.items.length;\n        s.items.length = (selectedGroup) ? s.segmentTotalItemsCount : itemsPerSegment;\n        s.segmentItemsCount = (selectedGroup) ? s.segmentTotalItemsCount : itemsPerSegment;\n        s.isExpendable = (selectedGroup) ? false : (s.segmentTotalItemsCount > itemsPerSegment);\n    });\n};\n\n\nconst createSegments = (sortByField, groupData) => {\n    let lastSegmentType = null;\n    const segments = groupData.population.reduce((segments, service) => {\n        let lastSegment = segments[segments.length - 1];\n        const segmentType = getValue(service[sortByField]) || 'empty_segment';\n\n        if (!lastSegmentType || lastSegmentType !== segmentType) {\n            lastSegmentType = segmentType;\n            //Start a new Segment for the category\n            segments.push({\n                segmentType,\n                items: [service],\n            });\n        } else {\n            //If we are still in the same segment category just distribute it into the right row\n            lastSegment.items.push(service);\n        }\n        return segments;\n    }, []);\n\n    return segments;\n};\n\nconst createGroup = (groupData, groupIndex, sortByField, selectedGroup, maxServicesInGroup, segmentsChoicesCount, canSegmentsDividedEqually) => {\n    const {groupField, population} = groupData;\n    const segments = createSegments(sortByField, groupData);\n    fixSegmentsSize(segments, selectedGroup, maxServicesInGroup, segmentsChoicesCount, canSegmentsDividedEqually);\n\n    const group = {\n        segmentedBy: sortByField, //We need this to avoid runtime race conditions between the tilemapformat update and this model\n        groupField,\n        segments,\n        totalServicesCount: population.length,\n        groupIndex\n    };\n    group.itemsCount = group.segments.map(s => s.items.length).reduce((a, b) => a + b , 0);\n    return group;\n};\n\n\nconst createRow = (sortByField, canSegmentsDividedEqually, selectedGroup, choicesFieldsModel, groups, config, start, end) => {\n    //OOTB we have severity & business_critically as segmented\n    const isGroupSegmented = choicesFieldsModel.hasOwnProperty(sortByField);\n\n    //We can calculate the number of existing segments according to the number of options they have within choicesFieldsModel\n    const segmentsChoicesCount = isGroupSegmented ? Object.keys(choicesFieldsModel[sortByField]).length : 1;\n\n    //The amount of services to be displayed in one group complying median calculation and MAX,MIN limitations\n    const maxServicesInGroup = calculateMaxServicesAllowed(config, groups, segmentsChoicesCount, start, end);\n\n    const row = {\n        rowItemsCount: 0,\n        rowTotalItemsCount: 0,\n        items: []\n    };\n\n    for (let i = start; i < groups.length && i < end; i++) {\n        const group = createGroup(groups[i], i, sortByField, selectedGroup, maxServicesInGroup, segmentsChoicesCount, canSegmentsDividedEqually);\n        row.items.push(group);\n        row.rowItemsCount += group.itemsCount;\n        row.rowTotalItemsCount += groups[i].population.length;\n    }\n    return row;\n};\n\n\n/**\n * Generate a grid grid which represent the layout of the tilesmap groups\n * @param tilemapsFormat\n * @param canSegmentsDividedEqually\n * @param selectedGroup\n * @param choicesFieldsModel\n * @param groups - the raw list of groups\n * @param windowSize\n * @param config - the best suitable configuration settings for the current user viewport\n * @returns {Object} - The grid data contains the groups\n * example:\n * Grid = {\n *  columnMaxWidth: 420,\n *  gridServicesCount: 0,\n *  gridTotalServicesCount:0,\n *  items:[{\n *           //Group metadata...\n *           segmentedBy: \"busines_criticality\",\n *           calculatedTileSize: small | large\n *           segments:[{\n *              //Segment metadata\n *              isExpendable : true,\n *              rows: [{\n *                  //Row metadata\n *                  items:[//Services]\n *              }]\n *           }]\n *        }],\n * }\n */\nconst createGrid = (tilemapsFormat, canSegmentsDividedEqually, selectedGroup, choicesFieldsModel, groups, windowSize, config) => {\n    const {tileSize, sortByField} = tilemapsFormat;\n    //Generate Grid's data segments etc.\n    //by iterating the raw list of groups in steps(the number of columns)\n    const grid = {\n        columnMaxWidth: Math.floor(windowSize.width / config.columns),\n        gridServicesCount: 0,\n        gridTotalServicesCount: 0,\n        rows: []\n    };\n\n    //Generate Grid's data model,\n    //by iterating the raw list of groups in steps(the number of columns)\n    for (let i = 0; i < groups.length; i += config.columns) {\n        const row = createRow(sortByField, canSegmentsDividedEqually, selectedGroup, choicesFieldsModel, groups, config, i, (i + config.columns));\n        grid.rows.push(row);\n        grid.gridServicesCount += row.rowItemsCount;\n        grid.gridTotalServicesCount += row.rowTotalItemsCount;\n    }\n\n    //Could be one of small/large/auto\n    const autoTileSizeDetection = (grid.gridServicesCount < config.breakpoint) ? 'large' : 'small';\n    const calculatedTileSize = (tileSize === 'auto') ? autoTileSizeDetection : tileSize;\n    grid.rows.forEach(row => row.items.forEach(group => group.calculatedTileSize = calculatedTileSize));\n\n    LOGGING.info(\"createGrid calculatedTileSize\", {\n        caller: 'Dynamic Layout',\n        extra: {\n            grid,\n            tileSize,\n            calculatedTileSize\n        }\n    });\n\n    return grid;\n};\n\n\nexport const transformState = state => {\n    const {\n        properties: {\n            windowSize,\n            tilemapsFormat,\n            groups,\n            choicesFieldsModel,\n            selectedGroup,\n            dynamicLayoutConfig,\n            canSegmentsDividedEqually\n        },\n    } = state;\n\n    if (!windowSize || !groups || !choicesFieldsModel || !dynamicLayoutConfig)\n        return state;\n\n\n    //Searching in the configuration table the first config that fits the current user viewport\n    let config = dynamicLayoutConfig.find(c => c.width >= windowSize.width && c.height >= windowSize.height);\n    if (!config) {\n        LOGGING.error(`Can't find Dynamic Layout Configuration that comply resolution[${windowSize.width} ,${windowSize.height}]`);\n        return state;\n    }\n\n    let filteredGroups;\n\n    if (selectedGroup) {\n        //In case of selectedGroup or when NO_GROUPING mode ->\n        // then it means we need to eliminate all the limitations:\n        config = {\n            ...config,\n            maxItems: Number.MAX_SAFE_INTEGER,\n            columns: 1,\n        };\n        filteredGroups = groups.filter(g => g.groupField.displayValue === selectedGroup)\n    } else {\n        //Show default layout\n        filteredGroups = groups;\n    }\n\n    const grid = createGrid(tilemapsFormat, canSegmentsDividedEqually, selectedGroup, choicesFieldsModel, filteredGroups, windowSize, config);\n    return {...state, grid};\n};\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.layout,.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.layout,:host{min-height:0;min-width:0}.layout{height:100%;width:100%;overflow:auto}.layout-row{display:flex;margin-bottom:1.5rem}.layout-cell{width:100%;flex:1;margin-right:1rem;margin-left:1rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./snNocTilemapLayout.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.noc-tilemap-segment-container:not(:last-of-type),.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs,.segment-indicator.-busines-criticality{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs,.segment-indicator.-busines-criticality{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}.tile button,button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.severity-1.bg-color{background-color:RGB(var(--now-color--alert-critical-1,221,133,129))}.severity-1.bg-color .tile-label{color:RGB(var(--now-color--alert-critical-5,80,24,22))}.severity-1.bg-color.selected,.severity-1.bg-color:active,.severity-1.bg-color:hover,.severity-1.bg-color:visited{border:2px solid rgb(var(--now-color--alert-critical-5,80,24,22))}.severity-1.bg-color.selected:not(:hover),.severity-1.bg-color:active,.severity-1.bg-color:visited{background-color:RGB(var(--now-color--alert-critical-0,241,206,205))}.severity-2.bg-color{background-color:RGB(var(--now-color--alert-high-1,233,184,111))}.severity-2.bg-color .tile-label{color:RGB(var(--now-color--alert-high-5,100,60,2))}.severity-2.bg-color.selected,.severity-2.bg-color:active,.severity-2.bg-color:hover,.severity-2.bg-color:visited{border:2px solid rgb(var(--now-color--alert-high-5,100,60,2))}.severity-2.bg-color.selected:not(:hover),.severity-2.bg-color:active,.severity-2.bg-color:visited{background-color:RGB(var(--now-color--alert-high-0,245,222,189))}.severity-3.bg-color{background-color:RGB(var(--now-color--alert-warning-1,226,216,89))}.severity-3.bg-color .tile-label{color:RGB(var(--now-color--alert-warning-5,64,64,0))}.severity-3.bg-color.selected,.severity-3.bg-color:active,.severity-3.bg-color:hover,.severity-3.bg-color:visited{border:2px solid rgb(var(--now-color--alert-warning-5,64,64,0))}.severity-3.bg-color.selected:not(:hover),.severity-3.bg-color:active,.severity-3.bg-color:visited{background-color:RGB(var(--now-color--alert-warning-0,242,237,179))}.severity-4.bg-color{background-color:RGB(var(--now-color--alert-info-1,104,171,218))}.severity-4.bg-color .tile-label{color:RGB(var(--now-color--alert-info-5,6,48,78))}.severity-4.bg-color.selected,.severity-4.bg-color:active,.severity-4.bg-color:hover,.severity-4.bg-color:visited{border:2px solid rgb(var(--now-color--alert-info-5,6,48,78))}.severity-4.bg-color.selected:not(:hover),.severity-4.bg-color:active,.severity-4.bg-color:visited{background-color:RGB(var(--now-color--alert-info-0,195,221,240))}.severity-5.bg-color{background-color:RGB(var(--now-color--alert-positive-1,119,178,123))}.severity-5.bg-color .tile-label{color:RGB(var(--now-color--alert-positive-5,15,52,17))}.severity-5.bg-color.selected,.severity-5.bg-color:active,.severity-5.bg-color:hover,.severity-5.bg-color:visited{border:2px solid rgb(var(--now-color--alert-positive-5,15,52,17))}.severity-5.bg-color.selected:not(:hover),.severity-5.bg-color:active,.severity-5.bg-color:visited{background-color:RGB(var(--now-color--alert-positive-0,201,224,202))}:host{display:inline-block;position:relative}.noc-tilemap{padding-bottom:1.5rem}.noc-tilemap-segment-container{display:grid;align-items:flex-start;grid-template-columns:auto;grid-column-gap:.5rem}.noc-tilemap-segment-container.indicator{grid-template-columns:1.5rem auto}.noc-tilemap .segment{margin:0;padding:0;display:grid;grid-gap:.125rem;grid-template-columns:repeat(auto-fit,minmax(1.5rem,1.5rem));grid-template-rows:repeat(auto-fit,minmax(1.5rem,1.5rem))}.size-large .segment{grid-gap:.25rem;grid-template-columns:repeat(auto-fit,minmax(9rem,9rem));grid-template-rows:repeat(auto-fit,minmax(3rem,3rem))}noc-service-preview{display:block}.segment-indicator{width:1.5rem;height:1.5rem}.segment-indicator-icon{width:100%;display:block}.segment-indicator.-busines-criticality{background:RGB(var(--now-color--neutral-2,228,230,231))}.tile{position:relative;text-align:center;min-width:1.5rem;border-radius:.125rem;width:100%}.tile button{background-color:RGB(var(--now-color--neutral-2,228,230,231));display:block;flex-direction:column;justify-content:center;width:100%;height:100%;border:2px solid transparent}.tile .tile-icon{width:1.5rem;height:1.5rem;display:block;margin:0 auto;filter:brightness(0) saturate(100%)}.tile.tile-icon-white .tile-icon,.tile.tile-icon-white .tile-label{filter:brightness(0) saturate(100%) invert(1)}.tile .tile-label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tile-small{height:1.5rem}.tile-small .tile-label{display:none}.tile-large{height:3rem}.tile-large .tile-icon{padding:0;margin-bottom:.25rem;width:1rem;height:1rem}.tile-large .tile-label{font-size:.75rem;display:block;width:8.75rem;cursor:pointer}.tile-large button{padding:.5rem}li.tile{list-style-type:none}.tilemap-title-link{display:inline-block;font-size:1rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tilemap-no-services-to-display{display:grid;color:RGB(var(--now-color--neutral-9,99,114,116))}.show-more-text-container{align-self:end;list-style:none}.show-more-text{border-radius:.125rem;width:3.125rem;padding:0;margin:0;text-align:center;font-size:1rem;height:1.5rem;background-color:RGB(var(--now-color--secondary-0,217,235,238));color:RGB(var(--now-color--secondary-2,1,89,107));overflow:hidden;white-space:nowrap;text-overflow:ellipsis;border:none;cursor:pointer}.show-more-text:hover{text-decoration:underline}.size-small .show-more-text-container{grid-column-end:span 2}.size-large .show-more-text{height:3rem;line-height:3rem}.sr-only{border:0!important;clip:rect(1px,1px,1px,1px)!important;-webkit-clip-path:inset(50%)!important;clip-path:inset(50%)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important;white-space:nowrap!important}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocTilemap.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\nimport {LOGGING, CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {nocPopoverBehavior} from \"../noc-popover-behavior\";\n\n/**\n * Handler to open service preview popover for given serviceId.\n * @returns {Function}\n */\nexport const createOpenPreviewHandler = args => () => {\n\tconst {\n\t\tserviceId, \n\t\ttilemapId,\n\t\tdispatch, \n\t\tfocusTarget,\n\t\tservicePreviewData,\n\t\ttimestampForTiles: timestamp\n\t} = args;\n\n\tconst {\n\t\tsysId: previewServiceId, \n\t\ttilemapId: previewTilemapId\n\t} = servicePreviewData || {};\n\n\t//if same tile clicked after preview is already open, operation will be stopped here.\n\tif (previewServiceId === serviceId && previewTilemapId === tilemapId) {\n\t\tLOGGING.log(`openPreviewHandler requested preview that is already open, stopping: \n\t\t\tserviceId: ${serviceId}\n\t\t\ttilemapId: ${tilemapId}`);\n\t\t\t\n\t\treturn;\n\t}\n\n\t//bring preview data, this will render the popover\n\tdispatch(CONSTANTS.ACTION_TYPES.SERVICE_PREVIEW_REQUESTED, {serviceId, tilemapId, timestamp});\n\t//store state that will be needed when popover is closed\n\tdispatch(nocPopoverBehavior.ACTION_TYPES.NOC_POPOVER_OPEN, {focusTarget});\n};","import {nocServicePreviewBehaviors} from '../noc-service-preview-behaviors';\n\nconst ENTER_KEY_CODE = 13;\nconst SPACE_KEY_CODE = 32;\n\nconst nocPopoverClickedEffect = coeffects => {\n    const {action: {payload: {event}}} = coeffects;\n\n    if(event.type === 'click' )\n        stopAllPropagations(event);\n\n    if (event.type === 'keyup' && (event.keyCode === ENTER_KEY_CODE || event.keyCode === SPACE_KEY_CODE))\n        stopAllPropagations(event);\n};\n\nconst nocDocumentClickEffect = coeffects => {\n    const {dispatch, action: {payload: {event}}} = coeffects;\n\n    if(event.type === 'click')\n        closePopOver(dispatch);\n\n    if (event.type === 'keyup' && (event.keyCode === ENTER_KEY_CODE || event.keyCode === SPACE_KEY_CODE)) {\n        closePopOver(dispatch);\n    }\n};\n\nconst stopAllPropagations = (event) => {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n};\n\nconst closePopOver = (dispatch) => {\n    dispatch(nocServicePreviewBehaviors.ACTION_TYPES.NOC_CLEAR_SERVICE_PREVIEW, {});\n};\n\nexport const effectHandlers = {\n    nocPopoverClickedEffect,\n    nocDocumentClickEffect\n};\n\nexport default {\n    effectHandlers\n};","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}:host{display:flex}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../../css-loader/index.js!../../../../../postcss-loader/src/index.js??ref--6-2!../../../../../sass-loader/lib/loader.js??ref--6-3!./nocElementWithTooltip.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {Fragment} from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-tooltip';\n\nconst onSlotInsert = updateProperties => ({elm: slot}) => {\n\tconst targetElm = (slot.assignedNodes() || []) [0];\n\t\n\tif (targetElm)\n\t\tupdateProperties({targetElm});\n};\n\nexport const view = (state, {updateProperties}) => {\n\tconst {\n\t\ttargetElm, \n\t\ttooltip\n\t} = state.properties;\n\n\tif (!tooltip)\n\t\treturn <slot/>;\n\n\treturn (\n        <Fragment>\n\t\t\t<slot \n\t\t\t\t// Not using on-slotchange, it doesn't work in Safari. `hook-insert` works everywhere (including IE11)\n\t\t\t\thook-insert={onSlotInsert(updateProperties)}/>\n\t\t\t\n\t\t\t<now-tooltip\n\t\t\t\ttarget-ref={targetElm} \n\t\t\t\tcontent={tooltip}/>\n\t\t</Fragment>\n    );\n};","module.exports = __TECTONIC__$servicenow_now_highlighted_value;","module.exports = __TECTONIC__$servicenow_now_legacy_icon;","module.exports = __TECTONIC__$servicenow_now_image;","import '@servicenow/now-button';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-image';\nimport '@servicenow/now-legacy-icon';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-text-link';\nimport '@servicenow/now-highlighted-value';\nimport '@servicenow/now-heading';\nimport '@devsnc/library-opws-mapping-shared/src/components/noc-element-with-tooltip';\nimport {t} from 'sn-translate';\nimport {isUndefined as _isUndefined ,isEmpty as _isEmpty, some as _some, truncate as _truncate} from 'lodash';\n\nimport {\n\tCONSTANTS,\n\tgenUniqueSysId,\n\tshouldUseWhiteText\n} from '@devsnc/library-opws-mapping-shared';\nimport {nocServicePreviewBehaviors} from '../noc-service-preview-behaviors';\n\nconst {EM_SEVERITY_TO_EDS_STATUS} = CONSTANTS.GENERAL;\n\nconst LABEL_CLOSE = t('Close');\nconst buttonLabelTruncateConfig = {\n\tseparator: ' ',\n\tlength: 21\n};\n//DEF0047223: truncating labels to ensure that buttons won't overflow when translation applied.\nconst VIEW_SERVICE_DETAILS = _truncate(t('Service Details'), buttonLabelTruncateConfig);\nconst VIEW_SERVICE_MAP = _truncate(t('Service Map'), buttonLabelTruncateConfig);\nconst BREAKDOWN_SEVERITY = t('Severity breakdown');\n\nconst OPEN_SERVICE_DETAILS = t('Open service details');\nconst OPEN_SERVICE_MAP = t('Open service map');\nconst TOOLTIP_PRIMARY_ALERTS = t('Open primary alerts');\n\nconst CLOSE_BUTTON_TOOLTIP_ID = 'CLOSE_BUTTON_TOOLTIP_ID';\nconst ALERT_BREAKDOWN_ITEM_TOOLTIP_ID = 'ALERT_BREAKDOWN_ITEM_TOOLTIP_ID';\nconst TOTAL_PRIMARY_ALERTS_TOOLTIP_ID = 'TOTAL_PRIMARY_ALERTS_TOOLTIP_ID';\n\n// TODO for Orlando\nconst SERVICE_MAP_IN_WORKSPACE = true;\n\n//TODO: We are not supporting favorites in NY need to return this in O\n//const favoriteToggle = (dispatch, favorite, workspace, ciId) => () => {\n//\tconst actionType = favorite ?\n//\t\t  nocServicePreviewBehaviors.ACTION_TYPES.REMOVE_FROM_FAVORITES_REQUEST :\n//\t\t  nocServicePreviewBehaviors.ACTION_TYPES.ADD_TO_FAVORITES_REQUEST;\n//\n//\tdispatch(actionType, {\n//\t\tworkspace,\n//\t\tciId\n//\t});\n//};\n\nconst openPrimaryAlertsForm = (serviceId, className, dispatch) => () => {\n\t// Related Alerts by class\n\tconst DEFAULT_TABS = {\n\t\tcmdb_ci_service_discovered: 'REL:1651427b5fa033003983c87a3f7313d5',\n\t\tcmdb_ci_query_based_service: 'REL:d2e3ceb85f9973003983c87a3f731328'\n\t};\n\n\tdispatch('PREVIEW_RECORD', {\n\t\ttable: className,\n\t\tsys_id: serviceId,\n\t\tparams: {defaultTab: DEFAULT_TABS[className]}\n\t});\n};\n\nconst openServiceForm = (serviceId, className, dispatch) => () => {\n\tdispatch('ITEM_SELECTED', {\n\t\ttable: className,\n\t\tsys_id: serviceId,\n\t\tparent_table: className,\n\t\tparent_sys_id: serviceId\n\t});\n};\n\n\nconst openServiceMap = (serviceId, name, className, dispatch) => () => {\n\tconst isEm = true;\n\t//TODO:abed remove 'SERVICE_MAP_IN_WORKSPACE` at all after verifying that the map opened as expected in tab\n\tif (SERVICE_MAP_IN_WORKSPACE) {\n\t\tconst mapId = genUniqueSysId(serviceId);\n\t\t//referenced to a record in cmdb_ci_service_discovered\n\t\tdispatch('ITEM_SELECTED', {\n\t\t\ttable: 'noc_service_map',\n\t\t\tsys_id: mapId,\n\t\t\tparams: {\n\t\t\t\tcomponentId: mapId,\n\t\t\t\tisEm,\n\t\t\t\tserviceId\n\t\t\t},\n\t\t\tparent_table: className,\n\t\t\tparent_sys_id: serviceId\n\t\t});\n\t} else {\n\t\tconst bsName = `&sysparm_bsname=${encodeURIComponent(name)}`;\n\t\tconst noBackButton = '&sysparm_no_back=true';\n\t\tconst uri = CONSTANTS.GLOBALS.BS_URL\n\t\t\t.replace('{0}', serviceId)\n\t\t\t.replace('{1}', isEm ? CONSTANTS.GLOBALS.ASSURANCE : CONSTANTS.GLOBALS.MAPPING)\n\t\t\t.concat(bsName).concat(noBackButton);\n\n\t\twindow.open(uri, '_blank');\n\t}\n};\n\n/**\n * HOC to create `on-click` handler for [close] button on service preview.\n * Sends action to clear service preview.\n */\nconst closePreview = dispatch => event => {\n\tif (event) {\n\t\tevent.stopImmediatePropagation();\n\t}\n\n\tdispatch(nocServicePreviewBehaviors.ACTION_TYPES.NOC_CLEAR_SERVICE_PREVIEW, {});\n};\n\nconst layoutOverviewFields = field => ({\n\tlabel: String(field.displayName) || ' ',\n\tvalue: String(field.displayValue) || ' '\n});\n\nconst getNonEmptyDisplayValueItems = item => {\n  return !_isEmpty(item.displayValue);\n};\nconst generateJsxHeader = (servicePreviewData, workspace, dispatch) => {\n\tconst {\n\t\tname,\n\t\tcolor,\n\t\toverviewFields,\n\t\tclassName,\n\t\ticonUrl\n\t} = servicePreviewData;\n\n\tconst backgroundContrast = shouldUseWhiteText(color);\n\tconst headerTextColor = `header${backgroundContrast ? ' white-text' : ''}`;\n\n\tconst style = {\n\t\tbackgroundColor: color\n\t};\n\n\tconst filteredOverviewFields = overviewFields.filter(getNonEmptyDisplayValueItems);\n\tconst overviewItems = filteredOverviewFields.map(layoutOverviewFields);\n\n\t//TODO need 'favorite' or 'star' icon\n\t// const favoriteIcon = favorite ? 'address-book-fill' : 'address-book-outline';\n\t//const iconWeight = favorite ? 'bold' : 'regular';\n\n\tconst CLOSE_BUTTON_CONFIG_ARIA = {'aria-label': LABEL_CLOSE};\n\n\treturn (\n\t\t<div className={headerTextColor} style={style}>\n\t\t\t<div className='title'>\n\t\t\t\t<now-image className='icon' src={iconUrl} alt={className}/>\n\t\t\t\t<now-heading className='name' label={name} variant='title-primary' hasNoMargin level='3' wont-wrap/>\n\t\t\t\t{/*\n\t\t\t\t //TODO: We are not supporting favorites in NY need to return this in O\n\n\t\t\t\t <span className='favorite'>\n\t\t\t\t <eds-legacy-icon\n\t\t\t\t fixed-width\n\t\t\t\t size='lg'\n\t\t\t\t weight={iconWeight}\n\t\t\t\t type='Star'\n\t\t\t\t on-click={favoriteToggle(dispatch, favorite, workspace, sysId)}/>\n\t\t\t\t </span> */}\n\n\t\t\t\t<noc-element-with-tooltip\n\t\t\t\t\tclassName='close-button-wrapper'\n\t\t\t\t\ttooltip={LABEL_CLOSE}>\n\n\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\tclassName='button'\n\t\t\t\t\t\taria-labelledby={CLOSE_BUTTON_TOOLTIP_ID}\n\t\t\t\t\t\tbare\n\t\t\t\t\t\ticon='close-outline'\n\t\t\t\t\t\tsize='md'\n\t\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\t\tconfig-aria={CLOSE_BUTTON_CONFIG_ARIA}\n\t\t\t\t\t\t//tooltip-content={LABEL_CLOSE} //- ##BUG??## tooltip position is off-charts\n\t\t\t\t\t\ton-click={closePreview(dispatch)}/>\n\n\t\t\t\t\t<label className='now-a11y-label' id={CLOSE_BUTTON_TOOLTIP_ID}>\n\t\t\t\t\t\t{LABEL_CLOSE}\n\t\t\t\t\t</label>\n\n\t\t\t\t</noc-element-with-tooltip>\n\n\t\t\t</div>\n\t\t\t<now-label-value-stacked className='eds-label' align='horizontal' items={overviewItems} truncated/>\n\t\t</div>\n\t);\n};\n\nconst generateJsxSeverityBreakdownItem = (metadata, item) => {\n\n\tconst displayValue = String(item.display_value);\n\tmetadata.primaryAlertsAmount += Number(item.value);\n\n\treturn (\n\t\t<li>\n\t\t\t<noc-element-with-tooltip\n\t\t\t\ttooltip={TOOLTIP_PRIMARY_ALERTS}>\n\n\t\t\t\t<now-highlighted-value\n\t\t\t\t\taria-describedby={ALERT_BREAKDOWN_ITEM_TOOLTIP_ID}\n\t\t\t\t\tlabel={`${displayValue} ${item.display_name}`}\n\t\t\t\t\tshow-icon\n\t\t\t\t\tstatus={EM_SEVERITY_TO_EDS_STATUS[String(item.name)]}/>\n\n\t\t\t\t<label className='now-a11y-label' id={ALERT_BREAKDOWN_ITEM_TOOLTIP_ID}>\n\t\t\t\t\t{TOOLTIP_PRIMARY_ALERTS}\n\t\t\t\t</label>\n\n\t\t\t</noc-element-with-tooltip>\n\t\t</li>\n\t);\n};\n\nconst getNonZeroValueItems = item => {\n    return !_isUndefined(item.value) && item.value !== \"0\" ;\n};\n\nconst generateJsxSeverityBreakdown = (servicePreviewData, dispatch) => {\n\tconst {severityBreakdown, sysId, className} = servicePreviewData;\n\tconst metadata = {\n\t\tprimaryAlertsAmount: 0\n\t};\n\n\tconst filteredSeverityBreakdown = severityBreakdown.filter(getNonZeroValueItems);\n\tconst severityListLI = filteredSeverityBreakdown.map(generateJsxSeverityBreakdownItem.bind(null, metadata));\n\n\tconst {primaryAlertsAmount} = metadata;\n\tconst PRIMARY_ALERTS_COUNT = t('{0} Primary alerts', primaryAlertsAmount);\n\tconst labelId = 'severityLabel';\n\n\treturn (\n\t\t<button\n\t\t\tclassName='severity-breakdown-button'\n\t\t\ton-click={openPrimaryAlertsForm(sysId, className, dispatch)}\n\t\t\taria-labelledby={labelId}\n\t\t\taria-describedby={TOTAL_PRIMARY_ALERTS_TOOLTIP_ID}>\n\n\t\t\t<noc-element-with-tooltip\n\t\t\t\ttooltip={TOOLTIP_PRIMARY_ALERTS}>\n\t\t\t\t<now-heading\n\t\t\t\t\tid={labelId}\n\t\t\t\t\tclassName='primary-alerts-label'\n\t\t\t\t\tlabel={PRIMARY_ALERTS_COUNT}\n\t\t\t\t\tvariant='title-primary'\n\t\t\t\t/>\n\t\t\t\t<label className='now-a11y-label' id={TOTAL_PRIMARY_ALERTS_TOOLTIP_ID}>\n\t\t\t\t\t{TOOLTIP_PRIMARY_ALERTS}\n\t\t\t\t</label>\n\t\t\t</noc-element-with-tooltip>\n\n\t\t\t<label className='highlighted-label'>{BREAKDOWN_SEVERITY}</label>\n\t\t\t<ul className='severity-list'>\n\t\t\t\t{severityListLI}\n\t\t\t</ul>\n\t\t</button>\n\t);\n};\n\n/**\n * Check all severity breakdown elements to see if there is at least one alert,\n * in this case it will return true\n * @param servicePreviewData\n * @returns {boolean} true if there is at least one alert\n */\nconst hasAlerts = servicePreviewData => {\n\n\tconst {severityBreakdown} = servicePreviewData;\n\treturn _some(severityBreakdown, item => Number(item.value) > 0);\n};\n\nconst getServiceLinks = (servicePreviewData, dispatch) => {\n\tconst {\n\t\tsysId, \n\t\tname, \n\t\tclassName,\n\t\thasMap = false\n\t} = servicePreviewData;\n\t\n\tconst serviceFormButton = hasMap ?\n\t\t(\n\t\t\t<now-button\n\t\t\t\tclassName=\"button now-align -inline-end\"\n\t\t\t\ton-click={openServiceMap(sysId, name, className, dispatch)}\n\t\t\t\tsize='md'\n\t\t\t\tlabel={VIEW_SERVICE_MAP}\n\t\t\t\ttooltip-content={OPEN_SERVICE_MAP}\n\t\t\t\tvariant='tertiary'/>\n\t\t) :\n\t\tnull;\n\n\treturn (\n\t\t<div className=\"buttons-container now-align\">\n\t\t\t<now-button\n\t\t\t\tclassName=\"button now-align -inline-start\"\n\t\t\t\ton-click={openServiceForm(sysId, className, dispatch)}\n\t\t\t\tlabel={VIEW_SERVICE_DETAILS}\n\t\t\t\tsize='md'\n\t\t\t\ttooltip-content={OPEN_SERVICE_DETAILS}\n\t\t\t\tvariant='primary'/>\n\n\t\t\t{serviceFormButton}\n\t\t</div>\n\t);\n};\n\nexport const view = (state, dispatch) => {\n\tconst {servicePreviewData} = state.properties;\n\t// const {servicePreviewData, workspace} =state.properties;\n\t//temporary removing workspace for WS integration\n\tconst workspace = 'nocpit';\n\n\tif (!servicePreviewData) {\n\t\treturn null;\n\t}\n\n\tconst header = generateJsxHeader(servicePreviewData, workspace, dispatch);\n\tconst severityBreakdown = hasAlerts(servicePreviewData) ? generateJsxSeverityBreakdown(servicePreviewData, dispatch) : null;\n\tconst serviceLinks = getServiceLinks(servicePreviewData, dispatch);\n\n\treturn (\n\t\t<section className='noc-service-preview'>\n\t\t\t{header}\n\n\t\t\t<div className='body'>\n\t\t\t\t{severityBreakdown}\n\t\t\t\t{serviceLinks}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.highlighted-label,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.highlighted-label,.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl,.severity-breakdown-button{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.buttons-container .button~*,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg,.severity-breakdown-button{padding-block-start:1rem;padding-block-end:1rem}.body,.header,.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg,.severity-breakdown-button{padding-inline-start:1rem;padding-inline-end:1rem}.body,.header,.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.noc-service-preview{width:25rem;max-width:calc(100% + .5rem);box-sizing:border-box;border-radius:.25rem;color:RGB(var(--now-color--text-primary,22,27,28));font-size:.75rem;margin:-.5rem -.25rem}.noc-service-preview a{color:RGB(var(--now-color--secondary-1,1,119,142));text-decoration:none}.header{border-radius:.25rem .25rem 0 0}.header .close-button-wrapper{margin-left:auto}.header .button,.header .eds-label{--now-color--neutral-9:0,0,0;--now-color--secondary-1:0,0,0;display:block;margin-left:auto;filter:brightness(0)}.header .title{display:flex;align-items:center;margin-bottom:.5rem}.header .title .icon{display:block;height:1rem;width:1rem;filter:brightness(0) saturate(100%)}.header .title .name{margin:0;padding:0 .75rem;width:calc(100% - 3rem)}.header .info{padding:0;margin:0 0 .5rem;list-style:none;display:flex;justify-content:space-between}.header.white-text{color:RGB(var(--now-color--neutral-0,255,255,255))}.header.white-text .eds-label,.header.white-text .title,.header.white-text .title>.icon{filter:brightness(0) saturate(100%) invert(1)}.severity-list{margin:0;padding:0;list-style:none;display:flex;flex-wrap:wrap;align-items:baseline;font-size:.75rem}.severity-list li{margin-right:.5rem;display:inline-flex;align-items:baseline}.severity-list li:last-of-type{margin-right:0}.severity-list .number{font-size:1.25rem;margin-right:.25rem}.severity-list .severity-dot{display:inline-block;width:8px;height:8px;border-radius:50%;background:RGB(var(--now-color--neutral-2,228,230,231));margin-right:.25rem}.severity-list span~.severity-dot{margin-left:.5rem}.severity-breakdown-button{background-color:RGB(var(--now-color--background-primary,255,255,255));font-size:1rem;width:100%;border:1px solid rgb(var(--now-color--neutral-3,209,214,214));display:block;cursor:pointer}.severity-breakdown-button:focus,.severity-breakdown-button:hover{box-shadow:0 2px 4px 0 rgba(0,0,0,.3)}.severity-breakdown-button:focus{border:1px solid rgb(var(--now-color--primary-1,30,133,109))}.severity-breakdown-button .amount{margin-left:.25rem}.severity-breakdown-button>*{cursor:pointer}.buttons-container{display:flex;flex-wrap:nowrap;width:100%;max-width:100%}.highlighted-label{display:block;font-style:normal;font-weight:400;font-variant:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;text-indent:0;text-shadow:none;white-space:normal;font-size:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116))}:host(:not([dir=rtl])) .highlighted-label,:root:not([dir=rtl]) .highlighted-label{text-align:left}:host([dir=rtl]) .highlighted-label,:root[dir=rtl] .highlighted-label{text-align:right}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocServicePreview.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {CONSTANTS, createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {nocServicePreviewBehaviors} from '../noc-service-preview-behaviors';\n\nimport styles from './nocServicePreview.scss';\nimport {view} from './view';\nimport {effectHandlers} from './effectClickOutsidePopover';\n\ncreateNocElement('noc-service-preview', {\n\tview,\n    // onDisconnect interfer with DEF0047454, opened new story STRY50283185clicking outside the popover should close the popover.\n\t// onDisconnect(host, dispatch) {\n\t// \t//clear servicePreview state when preview is removed from DOM.\n\t// \t//This should take care of side effect when popover disappears and the appears again \n\t// \t//because service was filtered out and then restored on view.\n\t// \tdispatch(nocServicePreviewBehaviors.ACTION_TYPES.NOC_CLEAR_SERVICE_PREVIEW, {});\n\t// },\n\n\tstyles,\n\tproperties: {\n\t\tservicePreviewData: {\n\t\t\tdefault: null\n\t\t},\n\t\tworkspace: {\n\t\t\tdefault: null\n\t\t}\n\t},\n    eventHandlers: [\n        {\n            events: ['click', 'keyup'],\n            effect: effectHandlers.nocDocumentClickEffect,\n            target: document\n        },\n        {\n            events: ['click', 'keyup'],\n            effect: effectHandlers.nocPopoverClickedEffect\n        }],\n\tbehaviors: [\n\t\tnocServicePreviewBehaviors.behaviors.nocFavoritesBehavior\n\t]\n});\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.noc-popover,.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.noc-popover,.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}@keyframes noc_popover_fade{0%{opacity:.3}25%{opacity:.7}to{opacity:1}}.noc-popover{transform-origin:0 20px;display:block;position:fixed;opacity:0;text-align:start;z-index:100;background-color:RGB(var(--now-color--neutral-0,255,255,255));border:1px solid rgb(var(--now-color--neutral-4,191,197,198));border-radius:.25rem;box-shadow:0 4px 8px 0 rgba(0,0,0,.3)}@media screen and (max-width:50rem){.noc-popover{top:1rem!important;left:calc(50% - 12.5rem)!important;max-width:calc(100% - 2rem);height:calc(100% - 2rem);overflow:auto}}@media screen and (max-width:22rem){.noc-popover{left:1rem!important;width:calc(100% - 2rem);height:calc(100% - 2rem)}}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocPopover.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {invokeOnNextFrame} from '@devsnc/library-opws-mapping-shared';\n\n/**\n * Once the popover opens and is visible, trigger a focus on it.\n */\nconst onPopoverAttach = vNode => invokeOnNextFrame(() => {\n\tconst {elm: slot} = vNode;\n\n\tconst slottedElm = (slot.assignedNodes() || []) [0];\n\t\n\tif (slottedElm)\n\t\tslottedElm.focus();\n});\n\nexport const view = (state, dispatch) => {\n\tconst {\n\t\tpositionStyle = {}\n\t} = state.properties;\n\n\treturn (\n\t   <div className='noc-popover'\n\t\t\tid='noc-popover'\n\t\t\trole='region'\n\t\t\taria-live='polite'\n\t\t\tstyle={positionStyle}>\n\t\t\t\n\t\t   <slot hook-insert={onPopoverAttach}/>\n\t   </div>\n\t);\n};","\nconst ACTION_TYPES = {\n\tNOC_POPOVER_ESC_KEY_PRESSED: 'NOC_POPOVER_ESC_KEY_PRESSED'\n};\n\nconst nocPopoverOnEscKey = coeffects => {\n    const {state, dispatch} = coeffects;\n\tconst {onCloseAction} = state.properties;\n\t\n\tif (onCloseAction)\n\t\tdispatch(onCloseAction, {});\n};\n\nconst effectHandlers = {\n\tnocPopoverOnEscKey\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","module.exports = __TECTONIC__$servicenow_behavior_key_binding_18_3_15;","import {createActionConfig, createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport keyBindingBehavior from \"@servicenow/behavior-key-binding\";\nimport {nocPopoverBehavior} from '../noc-popover-behavior';\nimport nocPopoverOnEscEffect from './nocPopoverOnEscEffect';\nimport {view} from './view';\nimport styles from './nocPopover.scss';\n\n\n/**\n * Escape key handler (a11y)\n * Closes the popup.\n * @param host\n * @param event\n * @param state\n * @param dispatch\n */\nconst onEscKeyPress = (host, event, dispatch) => {\n\tdispatch(nocPopoverOnEscEffect.ACTION_TYPES.NOC_POPOVER_ESC_KEY_PRESSED, {});\n};\n\ncreateNocElement('noc-popover', {\n\tview,\n\n\tstyles,\n\n\tproperties: {\n\t\t//ActionType to dispatch when popover closes.\n\t\tonCloseAction: {\n\t\t\tdefault: nocPopoverBehavior.ACTION_TYPES.NOC_POPOVER_CLOSED\n\t\t},\n\n\t\tpositionStyle: {\n\t\t\tdefault: null\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[nocPopoverOnEscEffect.ACTION_TYPES.NOC_POPOVER_ESC_KEY_PRESSED]: \n\t\t\tcreateActionConfig(nocPopoverOnEscEffect.effectHandlers.nocPopoverOnEscKey)\n\t},\n\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: keyBindingBehavior,\n\t\t\toptions: {\n\t\t\t\t\tkeyBindings: {\n\t\t\t\t\t\tonEscKeyPress: 'Escape',\n\t\t\t\t\t},\n\t\t\t\t\thandlers: {\n\t\t\t\t\t\tonEscKeyPress\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n\n});\n","module.exports = __TECTONIC__$servicenow_behavior_fit_18_3_15;","import {invokeOnNextFrame} from '@devsnc/library-opws-mapping-shared';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {getBestFitInfo} from \"@servicenow/behavior-fit\";\nimport {nocPopoverBehavior} from '../noc-popover-behavior';\n\nconst OFFSET_PX = 24;\n\nconst detectChangeInPositionStyle = (curr, next) => {\n\treturn (curr.left !== next.left || curr.top !== next.top);\n};\n\nconst fitPopover = args => {\n\tconst {\n\t\tdispatch,\n\t\tid,\n\t\tpopoverTargetRef,\n\t\tpopoverContentRef,\n\t\tpopoverContainerRef,\n\t\tcurrPositionStyle,\n\t\tisInsert\n\t} = args;\n\n\tconst hookUpdate = (insertvNode, updatevNode) => invokeOnNextFrame(() => {\n\t\tconst {elm} = (isInsert ? insertvNode : updatevNode);\n\t\tconst contentComponent = popoverContentRef.current;\n\t\tconst contentBox = contentComponent.getBoundingClientRect();\n\t\t\n\t\tconst args = {\n\t\t\ttarget: popoverTargetRef.current,\n\t\t\tcontent: elm,\n\t\t\tcontentArea: window,\n\t\t\tcontainer: popoverContainerRef.current,\n\t\t\toffset: [OFFSET_PX, OFFSET_PX, 8, 8, 8, 8],\n\t\t\tposition: [\n\t\t\t\t'center-end center-start',\n\t\t\t\t'center-start center-end',\n\t\t\t\t'top-end top-start',\n\t\t\t\t'top-start top-end', //FIXME this one has no offset by x.\n\t\t\t\t'bottom-start top-start',\n\t\t\t\t'top-end bottom-end'\n\t\t\t],\n\t\t\tconstrain: {\n\t\t\t\tminHeight: parseInt(contentBox.height),\n\t\t\t\tminWidth: parseInt(contentBox.width)\n\t\t\t}\n\t\t};\n\t\tconst fit = getBestFitInfo(args);\n\t\tconst {style} = fit;\n\n\t\tconst animation = {\n\t\t\tanimationName: 'noc_popover_fade',\n\t\t\tanimationDuration: '0.5s',\n\t\t};\n\n\t\t//https://code.devsnc.com/dev/emotive-design-system/issues/816\n\t\t//Ensuring offset of OFFSET_PX if fit didn't provide it.\n\n\t\tlet topInt = parseInt(style.top) || 0;\n\t\tif (topInt + args.constrain.minHeight > args.container.clientHeight) {\n\t\t\ttopInt = args.container.clientHeight - args.constrain.minHeight;\n\t\t}\n\n\t\tconst left = `${Math.max(OFFSET_PX, parseInt(style.left) || 0)}px`;\n\t\tconst top = `${Math.max(OFFSET_PX, topInt)}px`;\n\n\t\tconst positionStyle = {\n\t\t\topacity: '1',\n\t\t\t...animation, //TODO condition to put slide animation when popover was already open\n\t\t\tleft,\n\t\t\ttop\n\t\t};\n\n\t\t//if calculated fit style was changed since previous calculation, then store it on state\n\t\tif (detectChangeInPositionStyle(currPositionStyle, positionStyle))\n\t\t\tdispatch(nocPopoverBehavior.ACTION_TYPES.NOC_POPOVER_FIT, {positionStyle, id});\n\n\t\telse\n\t\t\tLOGGING.log('fitPopover repeated calculation. Skipping update state.');\n\t});\n\n\treturn hookUpdate;\n};\n\n\nexport const fitPopoverOnUpdate = fitPopover;\nexport const fitPopoverOnInsert = args => fitPopover({...args, isInsert: true});","import {createRef} from '@servicenow/ui-renderer-snabbdom';\nimport {fitPopoverOnInsert} from './fitPreviewPopover';\nimport {nocServicePreviewBehaviors} from '../noc-service-preview-behaviors';\nimport '../noc-popover';\nimport '../noc-service-preview';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\nexport const ARIA_PREVIEW_POPOVER_ID = 'noc_preview_popover';\n\n/**\n * Creating popover with service preview with given servicePreviewData\n * @param popoverConfig contains isOpen flag and popover coordinates\n * @param servicePreviewData data to provide for service preview.\n * @returns {*}\n */\nexport const generatePreviewPopover = args => {\n\tconst {\n\t\tdispatch,\n\t\tpopover,\n\t\tservicePreviewData,\n\t\tservicePreviewId,\n\t\tpopoverKey,\n\t\tpopoverTargetRef,\n\t\tpopoverContainerRef\n\t} = args;\n\n\tconst popoverContentRef = createRef();\n\tconst {positionStyle = {}} = popover;\n\t\n\tconst fitPopoverArgs = {\n\t\tdispatch,\n\t\tid: popoverKey,\n\t\tpopoverTargetRef,\n\t\tpopoverContentRef,\n\t\tpopoverContainerRef,\n\t\tcurrPositionStyle: positionStyle\n\t};\n\n\tconst workspace = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/workspace`;\n\treturn (\n\t\t<noc-popover\n\t\t\tkey={popoverKey}\n\t\t\tonCloseAction={nocServicePreviewBehaviors.ACTION_TYPES.NOC_CLEAR_SERVICE_PREVIEW}\n\t\t\tpositionStyle={positionStyle}\n\t\t\tid={ARIA_PREVIEW_POPOVER_ID}\n\t\t\thook-insert={fitPopoverOnInsert(fitPopoverArgs)}>\n\n\t\t\t<noc-service-preview\n\t\t\t\ttabindex='0'\n\t\t\t\tworkspace={workspace}\n\t\t\t\tservicePreviewData={servicePreviewData}\n\t\t\t\tref={popoverContentRef}/>\n\t\t\t\t\n\t\t</noc-popover>\n\t);\n};","import {createRef} from '@servicenow/ui-renderer-snabbdom';\nimport {\n\tgetDisplayValue,\n\tgetValue,\n\tinvokeOnNextFrame\n} from '@devsnc/library-opws-mapping-shared';\nimport {\n\tisEmpty as _isEmpty,\n\tsnakeCase as _snakeCase,\n\tisUndefined as _isUndefined,\n\tkebabCase as _kebabCase} from 'lodash';\n\nimport {ARIA_PREVIEW_POPOVER_ID, generatePreviewPopover} from './generatePreviewPopover';\nimport {createOpenPreviewHandler} from './openPreviewHandler';\nimport nocTilemapSelectGroupEffect from '../noc-tilemap-data-behavior/nocTilemapSelectGroupEffect';\nimport serviceGroups from '../noc-service-groups-tree-behaviors/nocServiceGroupsEffect';\n\nimport '@servicenow/now-tooltip';\nimport '@servicenow/now-text-link';\nimport '@devsnc/library-opws-mapping-shared/src/components/noc-element-with-tooltip';\nimport {t} from 'sn-translate';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {ORPHANS} from '../noc-service-groups-tree-behaviors/utils/serviceGroupBuckets';\n\n//mapping each tile element inside current <noc-tilemap> by tileId,\n//to find it for focus restore when popover closes.\nconst tileIdToElmMap = new Map();\n\nconst _generateTileKey = (tilemapId, tileId) => `tile_${tilemapId}_${tileId}`;\n\nconst addTileToMap = (tileKey) => (oldVnode, vnode) => {\n\t//this function works from both `hook-insert` and `hook-update`\n\tconst node = vnode || oldVnode;\n\tconst {elm} = node; //current element on DOM.\n\tLOGGING.debug(`tileIdToElmMap addTileToMap ${tileKey}`);\n\ttileIdToElmMap.set(tileKey, elm);\n};\n\nconst removeTileFromMap = (tileKey) => () => {\n\tLOGGING.debug(`tileIdToElmMap removeTileFromMap ${tileKey}`);\n\ttileIdToElmMap.delete(tileKey);\n};\n\nconst getTileElm = (tileKey) => {\n\tconst elm = tileIdToElmMap.get(tileKey);\n\tLOGGING.debug(`tileIdToElmMap getTileElm ${tileKey}. connected? ${elm && elm.isConnected}`);\n\treturn (elm && elm.isConnected) ? elm : null;\n};\n\nconst focusTarget = (tileKey) => () => invokeOnNextFrame(() => {\n\tconst elm = getTileElm(tileKey);\n\n\tif (elm) {\n\t\telm.focus();\n\t}\n});\n\n/**\n * Capitalize words in tooltip\n *\n * @type {{textTransform: string}}\n */\nconst style = {\n\ttextTransform: 'capitalize'\n};\n\nconst isRtl = () => {\n\treturn (String(document.dir).toLowerCase() || 'ltr') !== 'ltr';\n};\n\nconst generateTooltipField = (tile, field) => {\n\tconst keyValuePair = [getDisplayValue(field), getDisplayValue(tile[getValue(field)])];\n\tif (isRtl()) {\n\t\tkeyValuePair.reverse();\n\t}\n\n\treturn keyValuePair.join(': ');\n};\n\n/**\n * Go over all selected fields for hover tooltip and construct the list\n * of field name and value, i.e.\n *      Name: Service Name\n *      Severity: Major\n *\n * @param tile\n * @param fields\n */\nconst generateTooltipContent = (tile, fields) => {\n\t//If tooltip fields are empty, then return null to disable any overhead of tooltip rendering.\n\tif (!fields || fields.length === 0) {\n\t\treturn null;\n\t}\n\n\tconst tooltipContent = fields.map(generateTooltipField.bind(null, tile));\n\n\tif (isRtl()) {\n\t\ttooltipContent.reverse();\n\t}\n\n\treturn tooltipContent.join(', ');\n};\n\nconst showTooltip = (updateState, tileKey) => event => {\n\tLOGGING.debug(`showTooltip on ${tileKey}`);\n\tupdateState({\n\t\ttooltip: tileKey\n\t});\n};\n\nconst hideTooltip = (updateState, tileKey) => event => {\n\tLOGGING.debug(`hideTooltip from ${tileKey}`);\n\tupdateState({\n\t\ttooltip: null\n\t});\n};\n\nconst shouldShowTooltip = (tooltip, tileKey) => tooltip === tileKey;\n\n/**\n * Generate JSX for single service tile.\n * Keep it function, used to pass parameters on 'this'.\n * @param state\n * @param dispatch\n * @param updateState\n * @param tile - data object of tile/service.\n *\n * @returns {*}\n */\nconst generateTileJsx = (state, dispatch, updateState, tile) => {\n\tconst {tooltip} = state;\n\tconst {\n\t\tservicePreviewData,\n\t\tservicePreviewId,\n\t\tdata: {calculatedTileSize, groupField},\n\t\tpopoverKey,\n\t\tpopover,\n\t\ttilemapsConfig: {hoverTooltipFields},\n\t\tnocAppRef,\n\t\ttimestampForTiles,\n\t\ttilemapsFormat = {}\n\t} = state.properties;\n\n\n\tconst {businessServiceGroup = ''} = tilemapsFormat;\n\tconst iconUrl = getValue(tile.iconUrl);\n\tconst className = getDisplayValue(tile.className);\n\tconst severity = getValue(tile.severity);\n\tconst serviceId = getValue(tile.id);\n\tconst name = getDisplayValue(tile.name);\n\n\tconst tileId = `tile_${serviceId}`;\n\tconst tilemapId = `tilemap_${groupField.name}_${groupField.value}`;\n\tconst tileKey = _generateTileKey(tilemapId, tileId);\n\n\tconst isServiceGroupMode = businessServiceGroup !== '';\n\tconst isPreviewDisplayed = (\n\t\tservicePreviewData &&\n\t\t//only if in service groups, need to varify tilemapID to distinguish between differnt instances of service.\n\t\t(!isServiceGroupMode || servicePreviewData.tilemapId === tilemapId) &&\n\t\tservicePreviewData.sysId === serviceId\n\t);\n\n\tconst ariaDescribedBy = isPreviewDisplayed ? ARIA_PREVIEW_POPOVER_ID : undefined;\n\tconst labelId = `${tileKey}_label`;\n\tconst tileSizeClass = calculatedTileSize ? `tile tile-${calculatedTileSize}` : 'tile';\n\tlet cssClass = `severity-${severity} bg-color ${tileSizeClass}`;\n\n\tif (isPreviewDisplayed) {\n\t\tcssClass += ' selected';\n\t}\n\n\t//used to compute best fit for popover position\n\tconst popoverTargetRef = createRef();\n\n\tconst openPreviewHandler = createOpenPreviewHandler({\n\t\tserviceId,\n\t\ttilemapId,\n\t\tservicePreviewData,\n\t\tdispatch,\n\t\tfocusTarget: focusTarget(tileKey),\n\t\ttimestampForTiles\n\t});\n\n\tconst previewPopover = isPreviewDisplayed ?\n\t\tgeneratePreviewPopover({\n\t\t\tdispatch,\n\t\t\tpopover,\n\t\t\tservicePreviewData,\n\t\t\tservicePreviewId,\n\t\t\tpopoverKey,\n\t\t\tpopoverTargetRef,\n\t\t\tpopoverContainerRef: nocAppRef\n\t\t}) :\n\t\tnull;\n\tconst tooltipText = generateTooltipContent(tile, hoverTooltipFields);\n\tconst tooltipContent = shouldShowTooltip(tooltip, tileKey) ?\n\t\ttooltipText : null;\n\tconst edsTooltip = tooltipContent ?\n\t\t<now-tooltip\n\t\t\topened={true}\n\t\t\ttarget-ref={getTileElm(tileKey)}\n\t\t\tcontent={tooltipContent}/>\n\t\t: null;\n\treturn (\n\t\t<li className={tileSizeClass}\n\t\t    ref={popoverTargetRef}>\n\t\t\t<button\n\t\t\t\tclassName={cssClass}\n\t\t\t\tkey={tileKey}\n\t\t\t\ton-click={openPreviewHandler}\n\t\t\t\tid={tileKey}\n\t\t\t\tserviceId={serviceId}\n\t\t\t\taria-labelledby={labelId}\n\t\t\t\taria-describedby={ariaDescribedBy}\n\t\t\t\thook-insert={addTileToMap(tileKey)}\n\t\t\t\thook-update={addTileToMap(tileKey)} //required to update attached element on each render\n\t\t\t\thook-destroy={removeTileFromMap(tileKey)}\n\t\t\t\ton-mouseenter={showTooltip(updateState, tileKey)}\n\t\t\t\ton-mouseleave={hideTooltip(updateState, tileKey)}\n\t\t\t>\n\t\t\t\t<img className='tile-icon now-p-block--xs now-p-inline--xs' src={iconUrl} alt=\"\"/>\n\t\t\t\t<label id={labelId} className='tile-label'>\n\t\t\t\t\t{name || null}\n\t\t\t\t</label>\n\t\t\t\t<span className=\"sr-only\">{tooltipText}</span>\n\t\t\t</button>\n\n\t\t\t{edsTooltip}\n\t\t\t{previewPopover}\n\t\t</li>\n\t);\n};\n\nconst generateEllipsisTile = (state, dispatch, segment) => {\n\tconst TOOLTIP_SHOW_MORE_ELEMENT_ID = 'TOOLTIP_SHOW_MORE_ELEMENT_ID';\n\tconst {\n\t\tdata: {groupField}\n\t} = state.properties;\n\tconst diff = (segment.segmentTotalItemsCount - segment.segmentItemsCount);\n\tconst diffText = `+${diff}`;\n\n\tconst TOOLTIP_SHOW_MORE_ELEMENT = t('Show all services in \\'{0}\\'', groupField.displayValue);\n\tconst tooltipShow = TOOLTIP_SHOW_MORE_ELEMENT;\n\treturn (\n\t\t<li className='show-more-text-container'>\n\n\t\t\t<noc-element-with-tooltip tooltip={tooltipShow}>\n\t\t\t\t<button className='show-more-text'\n\t\t\t\t        aria-describedby={TOOLTIP_SHOW_MORE_ELEMENT_ID}\n\t\t\t\t        on-click={drillDownToGroup(dispatch, groupField.isServiceGroup, groupField)}>\n\t\t\t\t\t{diffText}\n\t\t\t\t</button>\n\n\t\t\t\t<label className='now-a11y-label' id={TOOLTIP_SHOW_MORE_ELEMENT_ID}>\n\t\t\t\t\t{tooltipShow}\n\t\t\t\t</label>\n\t\t\t</noc-element-with-tooltip>\n\t\t</li>\n\t);\n};\n\nconst generateIndicatorJsx = (currentIndex, segment, state) => {\n\tconst {\n\t\ttilemapsFormat: {sortByField},\n\t\tchoicesFieldsModel\n\t} = state.properties;\n\n\tconst {label, iconUrl} = choicesFieldsModel[sortByField][segment.segmentType];\n\n\tif (!label || !iconUrl) {\n\t\tLOGGING.error(`generateIndicatorJsx -> cannot find [${segment.segmentType}]`, {extra: {state, segment}});\n\t}\n\n\tconst indicatorClassTarget = `-${_kebabCase(sortByField)}`;\n\tconst key = `indicator_${currentIndex}`;\n\tconst className = `segment-indicator -${indicatorClassTarget}`;\n\n\treturn (\n\t\t<noc-element-with-tooltip\n\t\t\ttooltip={label}>\n\t\t\t<div className={className}>\n\t\t\t\t<img\n\t\t\t\t\tclassName='segment-indicator-icon'\n\t\t\t\t\talt={label}\n\t\t\t\t\tsrc={iconUrl}\n\t\t\t\t\tkey={key}/>\n\t\t\t</div>\n\t\t</noc-element-with-tooltip>\n\t);\n};\n\nconst generateSegmentJsx = (state, dispatch, updateState, segment, currentIndex) => {\n\tconst {\n\t\tchoicesFieldsModel,\n\t\tdata: {calculatedTileSize},\n\t\ttilemapsFormat: {sortByField}\n\t} = state.properties;\n\n\n\tconst segmentJsx = segment.items.map(generateTileJsx.bind(null, state, dispatch, updateState));\n\n\tif (segment.isExpendable) {\n\t\tconst ellipsisTile = generateEllipsisTile(state, dispatch, segment);\n\t\tsegmentJsx.push(ellipsisTile);\n\t}\n\n\tconst isGroupSegmented = choicesFieldsModel.hasOwnProperty(sortByField);\n\tconst hasCategoryIndicator = isGroupSegmented ? 'indicator' : '';\n\n\tconst categoryIndicator = isGroupSegmented ? generateIndicatorJsx(currentIndex, segment, state) : null;\n\tconst key = `segment_key_${currentIndex}`;\n\tconst className = `noc-tilemap-segment-container size-${calculatedTileSize} ${hasCategoryIndicator}`;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{categoryIndicator}\n\t\t\t<ol className='segment severity-colors'>\n\t\t\t\t{segmentJsx}\n\t\t\t</ol>\n\t\t</div>\n\t);\n};\n\nconst drillDownToGroup = (dispatch, isServiceGroup, groupField) => () => {\n\tif (isServiceGroup) {\n\t\tconst id = groupField.id;\n\t\tif (!id) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newServiceGroupObj = {item: {id}}; //The structure of the item is equal to the one send from the tree\n\t\tdispatch(serviceGroups.ACTION_TYPES.SERVICE_GROUP_SELECT_DIFFERENT_GROUP, newServiceGroupObj);\n\n\t\t//Only for the ORPHANS we want to continue and drilldown to this group by\n\t\t//dispatch the selectedGroup\n\t\tif (getDisplayValue(groupField) !== ORPHANS) {\n\t\t\treturn;\n\t\t}\n\t}\n\tconst newDrillDownToGroup = {name: getDisplayValue(groupField)};\n\tdispatch(nocTilemapSelectGroupEffect.ACTION_TYPES.TILEMAP_SELECT_REGULAR_GROUP, newDrillDownToGroup);\n};\n\nconst noServicesToDisplayJsx = () => {\n\treturn (\n\t\t<span className='tilemap-no-services-to-display'>No services to display</span>\n\t);\n};\n\nconst isExpandable = (segments) => {\n\tconst res = segments.find(segment => {\n\t\treturn segment.isExpendable === true;\n\t});\n\n\treturn !_isUndefined(res);\n};\n\nconst createGroupTitleJsx = (state, dispatch, label, labelId) => {\n\tconst {tilemapsFormat: {businessServiceGroup}, data, selectedGroup} = state.properties;\n\tconst isServiceGroupOrphansChildren = businessServiceGroup && !data.groupField.id;//Check if this is the Orphans\n                                                                                      // group\n\tconst isSelectedGroup = (selectedGroup && selectedGroup === data.label);\n\tconst {groupField: {isServiceGroup, displayValue}} = data;\n\n\tconst conditionForNotTextLink =\n\t\t(isServiceGroupOrphansChildren || isSelectedGroup) ||\n\t\t(data.segments.length === 0) ||\n\t\t(!isServiceGroup && !isExpandable(data.segments)) ||\n\t\t(isServiceGroup && displayValue === ORPHANS && !isExpandable(data.segments));\n\n\treturn conditionForNotTextLink ?\n\t\t<span className='tilemap-title-link  now-m-block-end--sm'>{label}</span> :\n\t\t<now-text-link variant='primary'\n\t\t               className='tilemap-title-link now-m-block-end--sm'\n\t\t               label={label}\n\t\t               id={labelId}\n\t\t               href='javascript:void(0)'\n\t\t               on-click={drillDownToGroup(dispatch, businessServiceGroup, data.groupField)}/>;\n};\n\nexport const view = (state, {dispatch, updateState}) => {\n\n\tconst {\n\t\tchoicesFieldsModel,\n\t\ttilemapsFormat: {sortByField},\n\t\tdata: {segments, segmentedBy, totalServicesCount, groupField}\n\t} = state.properties;\n\n\tif (!choicesFieldsModel || segmentedBy !== sortByField) {\n\t\treturn null;\n\t}\n\n\tconst segmentsJsx = !_isEmpty(segments) ? segments.map(generateSegmentJsx.bind(null, state, dispatch, updateState))\n\t\t: noServicesToDisplayJsx();\n\tconst labelId = `tilemap_section_label_${_snakeCase(groupField.displayValue)}`;\n\tconst label = `${groupField.displayValue} (${totalServicesCount})`;\n\tconst labelJsx = createGroupTitleJsx(state, dispatch, label, labelId);\n\tconst tilemapId = `tilemap_${groupField.name}_${groupField.value}`;\n\n\treturn (\n\t\t<section className='noc-tilemap' key={tilemapId} tabindex='0' aria-labelledby={labelId}>\n\t\t\t{labelJsx}\n\t\t\t{segmentsJsx}\n\t\t</section>\n\t);\n};\n","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {view} from './view';\nimport styles from './nocTilemap.scss';\n\ncreateNocElement('noc-tilemap', {\n\tview,\n\tstyles,\n\n\tinitialState: {\n\t\ttooltip: null\n\t},\n\n\tproperties: {\n\t\tnocAppRef: {\n\t\t\tdefault: null\n\t\t},\n\t\tservicePreviewData: {\n\t\t\tdefault: null\n\t\t},\n\t\t//unique id for service preview state. used as key to prevent jsx redraw of preview popover\n\t\tservicePreviewId: {\n\t\t\tdefault: 'none'\n\t\t},\n\n\t\tpopoverKey: {\n\t\t\tdefault: 'none'\n\t\t},\n\n\t\tpopover: { //FIXME selectables not working: update not received when component node persists\n\t\t\tdefault: null\n\t\t},\n\n\t\t// FIXME Arik: S18 change - not used?\n\t\tseverities: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tdata: {\n\t\t\tdefault: {}\n\t\t},\n\n\t\ttilemapsFormat: {\n\t\t\tdefault: null\n\t\t},\n\n\t\ttimestampForTiles: {\n\t\t\tdefault: '-1'\n\t\t},\n\n\t\ttilemapsConfig: {\n\t\t\tdefault: {}\n\t\t},\n\n\t\tchoicesFieldsModel: {\n\t\t\tdefault: null\n\t\t},\n\n\t\t/**\n\t\t * When regular group is drilled down.\n\t\t * Only for regular services (not working with in Service Groups mode)\n\t\t */\n\t\tselectedGroup: {\n\t\t\tdefault: null\n\t\t}\n\t}\n});\n","import {generatePreviewId, generatePreviewPopoverKey} from '../noc-service-preview-behaviors/generatePreviewId';\nimport '../noc-tilemap';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\n/**\n * This method responsible for rendering the entire group on its content\n * @param cell - a specific group data\n * @returns {The rendered HTML of one tilemap component}\n */\nconst generateCellJsx = function (cell) {\n\tconst {\n\t\tproperties: {\n\t\t\tservicePreviewResource,\n\t\t\ttilemapsFormat,\n\t\t\tpopover,\n\t\t\tselectedGroup,\n\t\t\tnocAppRef,\n\t\t}\n\t} = this;\n\n\tconst servicePreviewId = generatePreviewId(servicePreviewResource);\n\tconst popoverKey = generatePreviewPopoverKey(servicePreviewResource);\n\tconst tilemapKey = `cell_index_${cell.groupIndex}`;\n\n\tconst severities = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/severities`;\n\tconst timestampForTiles = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/timestampForTiles`;\n\tconst tilemapsConfig = `@${CONSTANTS.DEFAULTS.NOC_TILEMAP_CONTAINER_COMPONENT_ID}/tilemapsConfig`;\n\tconst choicesFieldsModel = `@${CONSTANTS.DEFAULTS.NOC_TILEMAP_CONTAINER_COMPONENT_ID}/choicesFieldsModel`;\n\tconst servicePreviewData = `@${CONSTANTS.DEFAULTS.NOC_TILEMAP_CONTAINER_COMPONENT_ID}/servicePreviewData`;\n\t\n\treturn (\n\t\t<noc-tilemap\n\t\t\tclassName=\"layout-cell\"\n\t\t\tkey={tilemapKey}\n\t\t\tnocAppRef={nocAppRef}\n\t\t\tdata={cell}\n\t\t\ttilemapsFormat={tilemapsFormat}\n\t\t\tservicePreviewData={servicePreviewData}\n\t\t\tservicePreviewId={servicePreviewId}\n\t\t\tpopoverKey={popoverKey}\n\t\t\tpopover={popover}\n\t\t\tselectedGroup={selectedGroup}\n\t\t\tseverities={severities}\n\t\t\ttimestamp-for-tiles={timestampForTiles}\n\t\t\ttilemaps-config={tilemapsConfig}\n\t\t\tchoices-fields-model={choicesFieldsModel}\n\t\t/>\n\t);\n};\n\nconst generateRowJsx = function (row) {\n\tconst rowJsx = row.items.map(generateCellJsx, this);\n\treturn (<div className=\"layout-row\">{rowJsx}</div>);\n};\n\nexport const snNocTilemapLayoutView = (state) => {\n\tconst {\n\t\tgrid,\n\t\tproperties: {\n\t\t\twindowSize,\n\t\t\tdynamicLayoutConfig\n\t\t}\n\t} = state;\n\n\tif (!grid || !windowSize || !dynamicLayoutConfig) \n\t\treturn null;\n\t\n\n\tconst gridJsx = grid.rows.map(generateRowJsx, state);\n\treturn (\n\t\t<section className=\"layout\" >\n\t\t\t{gridJsx}\n\t\t</section>\n\t);\n};\n","import {snNocTilemapLayoutView} from './snNocTilemapLayoutView';\nimport styles from './snNocTilemapLayout.scss';\nimport {transformState} from './transformers/transformState';\nimport {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport clearServicePreviewDataEffect from '../noc-service-preview-behaviors/clearServicePreviewDataEffect';\n\ncreateNocElement('sn-noc-tilemap-layout', {\n    view: snNocTilemapLayoutView,\n    transformState,\n    styles,\n    properties: {\n        nocAppRef: {\n            default: null\n        },\n\n        tilemapsFormat: {\n            default: null\n        },\n\n        choicesFieldsModel: {\n            default: null\n        },\n\n        /**\n         * The state table configuration of the dynamic layout\n         */\n        dynamicLayoutConfig: {\n            default: null\n        },\n\n        /**\n         * If true then the number of items per segments should be the same in all groups within the same row\n         */\n        canSegmentsDividedEqually: {\n            default: false\n        },\n\n        /**\n         * The container which holds the services divided into groups\n         */\n        groups: {\n            default: null\n        },\n        /**\n         * When regular group is drilled down.\n         * Only for regular services (not working with in Service Groups mode)\n         */\n        selectedGroup: {\n            default: null\n        },\n\n        windowSize: {\n            default: null,\n            onChange(value, prevValue, dispatch) {\n                //close preview when window resizes\n                dispatch(clearServicePreviewDataEffect.ACTION_TYPES.NOC_CLEAR_SERVICE_PREVIEW, {});\n            }\n        },\n\n        servicePreviewResource: {\n            default: null\n        },\n\n        popover: {\n            default: null\n        }\n    }\n});","import './snNocTilemapLayout';","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm,.pill{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.sn-pills-bar{transition:padding-bottom .3s ease-out;display:flex;align-items:flex-end}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./snNocPillsBar.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __TECTONIC__$servicenow_now_pill;","import '@servicenow/now-pill';\nimport {CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {isEmpty as _isEmpty, reduce as _reduce} from 'lodash';\nimport {t} from 'sn-translate';\nimport {SECTIONS} from \"../noc-user-view-behaviors/transforms\";\n\nconst SEVERITIES_LABEL = t('Severities');\n\nconst PILL_TYPES = {\n    ALERT: 'alert',\n    SEVERITIES: 'severities'\n};\n\nconst createPillJsx = (type, data, label , className) => {\n    return <now-pill\n        append-to-payload={{type, data}}\n        can-dismiss icon=\"list-fill\"\n        label={label}\n        className={className}\n        manage-selected size=\"sm\"/>;\n};\n\nconst pillAlertJsx = alert => {\n    if (!alert)\n        return null;\n\n    return createPillJsx(PILL_TYPES.ALERT, alert, alert.number, 'pill');\n};\n\nconst pillSeveritiesJsx = severities => {\n    if (!severities)\n        return null;\n\n    const reduced = _reduce(severities, (result, val) => {\n        const {isEnabled, label} = val;\n        if (isEnabled) {\n            result.pillLabel += `${label}, `;\n            result.trueCounter++\n        } else {\n            result.falseCounter++\n        }\n        return result;\n    }, {\n        trueCounter: 0,\n        falseCounter: 0,\n        pillLabel: `${SEVERITIES_LABEL}: `\n    });\n\n    //true if at least one severity is enabled but not if all are\n    const showPill = reduced.trueCounter > 0 && reduced.falseCounter > 0\n    if (showPill) {\n        reduced.pillLabel = reduced.pillLabel.slice(0, -2);\n        return createPillJsx(PILL_TYPES.SEVERITIES, severities, reduced.pillLabel, 'circle-exclamation-outline');\n    }\n    else {\n        return null;\n    }\n\n};\n\nexport const view = state => {\n    const {selectedAlert, severities} = state.properties;\n\n    const pillAlert = pillAlertJsx(selectedAlert);\n    const pillSeverities = pillSeveritiesJsx(severities);\n\n    return (pillAlert || pillSeverities ?\n        <div className='sn-pills-bar now-p-block-start--lg now-p-inline--xl'>\n          {pillAlert}\n          {pillSeverities}\n        </div> : null);\n};\n\nexport const dismissPill = coeffects => {\n    const {dispatch, action: {payload}} = coeffects;\n    if (_isEmpty(payload)) {\n        LOGGING.warn('Dismissed a pill without payload!');\n        return;\n    }\n\n    switch (payload.type) {\n        case PILL_TYPES.ALERT:\n            dispatch(CONSTANTS.ACTION_TYPES.CLEAR_IMPACTED_SERVICES_REQUEST);\n            break;\n        case PILL_TYPES.SEVERITIES:\n            const enabledSeverities = _reduce(payload.data, (result, val) => {\n                result[val.value]= true;\n                return result;\n            }, {});\n            dispatch(CONSTANTS.ACTION_TYPES.SEVERITY_FILTER_SAVE_REQUESTED, {\n                severityFilter: {enabledSeverities}\n            });\n            break;\n        default:\n            LOGGING.warn(['Dismissed a pill with an unknown type=', payload.type]);\n            return;\n    }\n};","import {dismissPill, view} from './snNocPillsBarView';\nimport styles from './snNocPillsBar.scss';\nimport {CONSTANTS, createNocElement} from '@devsnc/library-opws-mapping-shared';\ncreateNocElement('sn-noc-pills-bar', {\n\tview,\n\n\tstyles,\n  \n    actionHandlers: {\n        'NOW_PILL#DISMISSED': coeffects => {\n            dismissPill(coeffects);\n        }\n    },\n\tproperties: {\n        selectedAlert: {\n\t\t\tdefault: null\n        },\n        severities: {\n            default: null\n        }\n\t}\n});","import './snNocPillsBar';","import {nocGetServiceGroupsBehavior} from './nocGetServiceGroupsBehavior';\n\nexport const nocServiceGroupsTreeBehaviors = {\n\tbehaviors: {\n        nocGetServiceGroupsBehavior\n\t}\n};","import {CONSTANTS, nocModalActionEffect} from '@devsnc/library-opws-mapping-shared';\nimport TILEMAP_CONSTANTS from './constants';\nimport {isObject as _isObject} from 'lodash';\nimport nocTilemapSelectGroupEffect from '../noc-tilemap-data-behavior/nocTilemapSelectGroupEffect';\n\nconst {ACTION_TYPES: modalActionTypes} = nocModalActionEffect;\n\nconst nocSetAndSaveTileFormat = {\n\teffect(coeffects) {\n\t\tconst {payload} = coeffects.action;\n\t\tconst {dispatch, state} = coeffects;\n\t\tconst {tilemapsFormat} = state.properties;\n\n\t\tif (!_isObject(tilemapsFormat)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newTilemapsFormat = {\n\t\t\t...tilemapsFormat,\n\t\t\t[payload.type]: payload.value\n\t\t};\n\n\t\t// if groupBy, selection should clear businessServiceGroup and selectedGroup, if exists\n\t\tif (payload.type === TILEMAP_CONSTANTS.DROPDOWN_TYPES.GROUP_BY.type) {\n\t\t\tnewTilemapsFormat.businessServiceGroup = '';\n\t\t\tdispatch(nocTilemapSelectGroupEffect.ACTION_TYPES.TILEMAP_SELECT_REGULAR_GROUP, {selectedGroup: ''});\n\t\t}\n\n\t\t// and update groupBy field on user_view (properties)\n\t\tdispatch(CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SAVE_REQUESTED, {tilemapsFormat: newTilemapsFormat });\n\t}\n};\n\nconst openAlertsPanelEffect = {\n\teffect(coeffects) {\n\t\tconst {dispatch} = coeffects;\n\t\tdispatch(CONSTANTS.ACTION_TYPES.TOGGLE_SIDE_PANEL, {open: true});\n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_GET_ALERTS_INIT);\n\t}\n};\n\nconst openGroupTreeEffect = {\n\teffect(coeffects) {\n\t\tconst {dispatch} = coeffects;\n\n\t\tdispatch(modalActionTypes.NOC_ACTION_CLICK, {isModalOpen: true});\n\t}\n};\n\nexport const effectHandlers = {\n\tnocSetAndSaveTileFormat,\n\topenAlertsPanelEffect,\n\topenGroupTreeEffect\n};\n\nexport default {\n\teffectHandlers\n};\n","import nocTilemapToolbarEffect from './nocTilemapToolbarEffect';\nimport {createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport CONSTANTS from './constants';\n\nexport const nocTilemapToolbarBehavior = {\n\tname: 'nocTilemapToolbarBehavior',\n\tactionHandlers: {\n        [CONSTANTS.ACTION_TYPES.TILEMAPS_DROPDOWN_CHANGED]:\n            createActionConfig(nocTilemapToolbarEffect.effectHandlers.nocSetAndSaveTileFormat),\n\n        [CONSTANTS.ACTION_TYPES.OPEN_ALERTS_PANEL]:\n            createActionConfig(nocTilemapToolbarEffect.effectHandlers.openAlertsPanelEffect),\n\n\t\t[CONSTANTS.ACTION_TYPES.OPEN_GROUP_TREE_MODAL]:\n\t\t\tcreateActionConfig(nocTilemapToolbarEffect.effectHandlers.openGroupTreeEffect)\n    }\n}","import {t} from 'sn-translate';\nimport CONSTANTS from './constants';\nimport {get as _get} from 'lodash';\n\nconst serviceGroupOption = {\n\tvalue: 'service_group',\n\tlabel: t('Service group...'),\n\tpreventSelection: true,\n\taction: CONSTANTS.ACTION_TYPES.OPEN_GROUP_TREE_MODAL\n};\n\nconst addFieldOption = (fields, option) => {\n\treturn [\n\t\t...fields,\n\t\toption\n\t];\n};\n\nconst updateGroupByFields = (groupByFields, selectedGroup) => {\n\tlet newGroupByFields = addFieldOption(groupByFields, serviceGroupOption);\n\n\tif (!selectedGroup) {\n\t\treturn newGroupByFields;\n\t} else {\n\t\tconst selectedGroupOption = {\n\t\t\tlabel: selectedGroup,\n\t\t\tvalue: selectedGroup,\n\t\t\tpreventSelection: true\n\t\t};\n\n\t\tnewGroupByFields = addFieldOption(newGroupByFields, selectedGroupOption);\n\n\t\treturn newGroupByFields;\n\t}\n};\n\nconst getServiceGroupName = (serviceSysId, serviceGroups) => {\n\tif (serviceSysId && serviceGroups && serviceGroups.breadcrumb) { //FIXME Arik: No need for serviceGroups.breadcrumb check\n\t\tconst items = _get(serviceGroups, 'breadcrumb.items', []);\n\t\tconst item = items[items.length - 1];\n\n\t\treturn item.name;\n\t}\n\n\treturn null;\n};\n\nexport default state => {\n\tconst {groupByFields, tilemapsFormat: {groupByField, businessServiceGroup}, serviceGroups} = state.properties;\n\n\tconst newGroupByField = getServiceGroupName(businessServiceGroup, serviceGroups);\n\tconst updatedGroupByFields = updateGroupByFields(groupByFields, newGroupByField);\n\n\tconst newState = {\n\t\t...state,\n\t\tproperties: {\n\t\t\t...state.properties,\n\t\t\tgroupByFields: updatedGroupByFields,\n\t\t\ttilemapsFormat: {\n\t\t\t\t...state.properties.tilemapsFormat,\n\t\t\t\tgroupByField: newGroupByField || groupByField\n\t\t\t}\n\t\t}\n\t};\n\n\treturn newState;\n};","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl,.toolbar-button{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl,.select-field.-right-Border{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl,.select-field{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.noc-open-alerts-panel-visible{display:inline-block}.noc-open-alerts-panel-hidden{display:none}.noc-tilemap-toolbar{display:flex;width:100%;justify-content:flex-start;align-items:center}.noc-tilemap-select{margin-right:auto}.select-field.-right-Border{border-right:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.buttons{display:flex;justify-content:flex-end}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocTilemapToolbar.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs,form .dropdown-label{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}form{display:inline-flex;align-items:center}form .dropdown-label{font-size:1rem;display:flex;align-items:center;height:2rem}form label{margin-right:.5rem;font-size:1rem;color:RGB(var(--now-color--neutral-18,22,27,28))}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocFieldSelect.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {find as _find,\n\tisUndefined as _isUndefined} from 'lodash';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst selectionChangedEffect = {\n\teffect(coeffects) {\n\t\tconst {\n\t\t\tdispatch,\n\t\t\taction: {payload},\n\t\t\tproperties: {choices, onChange, type}\n\t\t} = coeffects;\n\n\t\tconst {value} = payload;\n\n\t\tif (_isUndefined(value)) {\n\t\t\tLOGGING.error('eds-dropdown selection returned undefined');\n\t\t\treturn;\n\t\t}\n\n\t\tif (choices && value) {\n\t\t\tconst singleValue = value[0];\n\t\t\tconst option = _find(choices, {value: singleValue});\n\t\t\tconst {preventSelection = false} = option || false;\n\n\t\t\tif (option && option.action) {\n\t\t\t\tLOGGING.debug(`calling action ${option.action}`, {output: {objects: true}, extra: option});\n\t\t\t\tdispatch(option.action, {option});\n\t\t\t}\n\n\t\t\tLOGGING.debug(`option preventSelection=${preventSelection}`);\n\t\t\tif (!preventSelection) {\n\t\t\t\tdispatch(onChange, {type: type, value: singleValue});\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const effectHandlers = {\n\tselectionChangedEffect\n};\n\nexport default {\n\teffectHandlers\n};","import {effectHandlers} from './selectionEffect'\nimport {createActionConfig} from '@devsnc/library-opws-mapping-shared';\n\nexport const nocDropdownBehavior = {\n\tname: 'nocDropdownBehavior',\n\tactionHandlers: {\n        [\"NOW_DROPDOWN#SELECTED_ITEMS_SET\"]:\n\t\t\tcreateActionConfig(effectHandlers.selectionChangedEffect)\n\t}\n}","/**\n * Seismic component noc-field-select.\n *\n */\nimport {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {noop} from 'lodash';\nimport {NONE_VALUE, view} from './view.js';\nimport {nocDropdownBehavior} from './nocDropdownBehavior';\nimport {nocTilemapToolbarBehavior} from '../noc-tilemap-toolbar';\n\nimport styles from './nocFieldSelect.scss';\n\nexport {NONE_VALUE} from './view';\n\ncreateNocElement('noc-field-select',  {\n\tview,\n\tstyles,\n\tproperties: {\n\t\tlabel: {\n\t\t\tdefault: null\n\t\t},\n\t\tvalue: {\n\t\t\tdefault: null\n\t\t},\n\t\tdisplayNone: {\n\t\t\t// FIXME there is a bug in seismic - doesn't accept boolean properties\n\t\t\tdefault: 'true'\n\t\t},\n\t\tdisplayNoneValue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tonChange: {\n\t\t\tdefault: noop\n\t\t},\n\t\tchoices: {\n\t\t\tdefault: null\n\t\t},\n\t\ttype: {\n\t\t\tdefault: ''\n\t\t},\n        disabled: {\n            default: false\n\t\t},\n\t\ttooltipContent: {\n\t\t\tdefault: ''\n\t\t},\n\t\tmanageSelectedItems: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\tbehaviors: [\n\t\tnocDropdownBehavior,\n\t\tnocTilemapToolbarBehavior\n\t]\n});","import {isObject as _isObject} from 'lodash';\n\nexport const transformState = state => {\n\tconst {\n\t\tseverities, \n\t\tenabledPopulation = {length: 0}\n\t} = state.properties;\n\n\tif (!_isObject(severities))\n\t\treturn state;\n\n\tconst stateView = {\n\t\t...state,\n\t\tpopulationSize: enabledPopulation.length\n\t};\n\treturn stateView;\n};","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.severity-1.bg-color{background-color:RGB(var(--now-color--alert-critical-1,221,133,129))}.severity-1.bg-color .tile-label{color:RGB(var(--now-color--alert-critical-5,80,24,22))}.severity-1.bg-color.selected,.severity-1.bg-color:active,.severity-1.bg-color:hover,.severity-1.bg-color:visited{border:2px solid rgb(var(--now-color--alert-critical-5,80,24,22))}.severity-1.bg-color.selected:not(:hover),.severity-1.bg-color:active,.severity-1.bg-color:visited{background-color:RGB(var(--now-color--alert-critical-0,241,206,205))}.severity-2.bg-color{background-color:RGB(var(--now-color--alert-high-1,233,184,111))}.severity-2.bg-color .tile-label{color:RGB(var(--now-color--alert-high-5,100,60,2))}.severity-2.bg-color.selected,.severity-2.bg-color:active,.severity-2.bg-color:hover,.severity-2.bg-color:visited{border:2px solid rgb(var(--now-color--alert-high-5,100,60,2))}.severity-2.bg-color.selected:not(:hover),.severity-2.bg-color:active,.severity-2.bg-color:visited{background-color:RGB(var(--now-color--alert-high-0,245,222,189))}.severity-3.bg-color{background-color:RGB(var(--now-color--alert-warning-1,226,216,89))}.severity-3.bg-color .tile-label{color:RGB(var(--now-color--alert-warning-5,64,64,0))}.severity-3.bg-color.selected,.severity-3.bg-color:active,.severity-3.bg-color:hover,.severity-3.bg-color:visited{border:2px solid rgb(var(--now-color--alert-warning-5,64,64,0))}.severity-3.bg-color.selected:not(:hover),.severity-3.bg-color:active,.severity-3.bg-color:visited{background-color:RGB(var(--now-color--alert-warning-0,242,237,179))}.severity-4.bg-color{background-color:RGB(var(--now-color--alert-info-1,104,171,218))}.severity-4.bg-color .tile-label{color:RGB(var(--now-color--alert-info-5,6,48,78))}.severity-4.bg-color.selected,.severity-4.bg-color:active,.severity-4.bg-color:hover,.severity-4.bg-color:visited{border:2px solid rgb(var(--now-color--alert-info-5,6,48,78))}.severity-4.bg-color.selected:not(:hover),.severity-4.bg-color:active,.severity-4.bg-color:visited{background-color:RGB(var(--now-color--alert-info-0,195,221,240))}.severity-5.bg-color{background-color:RGB(var(--now-color--alert-positive-1,119,178,123))}.severity-5.bg-color .tile-label{color:RGB(var(--now-color--alert-positive-5,15,52,17))}.severity-5.bg-color.selected,.severity-5.bg-color:active,.severity-5.bg-color:hover,.severity-5.bg-color:visited{border:2px solid rgb(var(--now-color--alert-positive-5,15,52,17))}.severity-5.bg-color.selected:not(:hover),.severity-5.bg-color:active,.severity-5.bg-color:visited{background-color:RGB(var(--now-color--alert-positive-0,201,224,202))}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./nocServiceGroupsTree.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __TECTONIC__$servicenow_now_content_tree;","import \"@servicenow/now-content-tree\";\n\nexport const view = (state, dispatch) => {\n    const {serviceGroups} = state.properties;\n    if (!serviceGroups)\n        return null;\n\n    let expandedIds = [], expandedItems;\n    if (serviceGroups.breadcrumb) {\n        expandedIds = serviceGroups.breadcrumb.items.reduce((result, group) => {\n            if (group.id)\n                result.push(group.id);\n            return result;\n        }, []);\n\n        expandedItems = expandedIds.map( (item, index, arr) =>{\n            return arr.slice(0, index + 1);\n        })\n\n    }\n\n    return (\n        <section className='severity-colors'>\n            <now-content-tree\n                show-dividers\n                show-highlighted-value\n                expandedItems = {expandedItems}\n                selectedItems = {[expandedIds]}\n                items={serviceGroups.tree}/>\n        </section>\n    );\n};\n","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {view} from './view';\nimport styles from './nocServiceGroupsTree.scss';\n\n\n/**\n * Seismic component noc-service-groups-tree.\n * Implements service groups tree.\n */\ncreateNocElement('noc-service-groups-tree', {\n\tview,\n\tstyles,\n\tproperties: {\n\t\t/***\n         * tree,\n         * breadcrumb,\n         * buckets\n         */\n\t\tserviceGroups:{\n\t\t\tdefault: null\n\t\t}\n\t}\n});\n","import {t} from 'sn-translate';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-heading';\nimport '../noc-service-groups-tree';\nimport {nocModalActionEffect} from '@devsnc/library-opws-mapping-shared';\nimport {isUndefined as _isUndefined} from 'lodash';\n\nconst {ACTION_TYPES: modalActionTypes} = nocModalActionEffect;\n\nconst footerAction = JSON.stringify([\n\t{\n\t\tvariant: 'primary',\n\t\tlabel: t('Close'),\n\t\tisModalOpen: false,\n\t\tclickActionType: modalActionTypes.NOC_ACTION_CLICK\n\t}\n]);\n\n//Captions\nconst MODAL_HEADER = t('Service groups');\n\nexport const view = (state) => {\n\tconst {\n\t\tpopulationSize,\n\t\tproperties: {serviceGroups}\n\t} = state;\n\n\tif (_isUndefined(populationSize)) {\n\t\treturn null;\n\t}\n\n\tconst tree = <noc-service-groups-tree serviceGroups={serviceGroups}/>;\n\n\treturn <now-modal\n\t\topened\n\t\tsize='lg'\n\t\theader-label={MODAL_HEADER}\n\t\tfooter-actions={footerAction}>\n\t\t{tree}\n\t</now-modal>;\n};\n\n\n","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {view} from './view';\nimport {transformState} from './transformState';\n\ncreateNocElement('sn-noc-service-tree-container', {\n    view,\n    transformState,\n\n    properties: {\n        severities: {\n            default: null\n        },\n        /***\n         * tree,\n         * breadcrumb,\n         * buckets\n         */\n        serviceGroups: {\n            default: null\n        }\n    }\n});\n","import {CONSTANTS, i18n} from '@devsnc/library-opws-mapping-shared';\nimport TOOLBAR_CONSTANTS from './constants';\nimport {t} from 'sn-translate';\nimport '../sn-noc-service-tree-container';\nimport '@servicenow/now-label-value';\nimport {NONE_VALUE} from '../noc-field-select';\n\n\nexport const view = (state, dispatch) => {\n    const {\n        groupByFields,\n        sortByFields,\n        tilemapsFormat,\n        selectedGroup,\n        isModalOpen\n    } = state.properties;\n\n    const {\n        groupByField,\n        sortByField,\n        groupByOrder,\n        businessServiceGroup\n    } = tilemapsFormat;\n\n\n    // we still did not receive the tilemaps format from server\n    if (!tilemapsFormat)\n        return null;\n\n\n    const groupBy = {\n        id: 'nocFieldSelectGroupBy',\n        label: TOOLBAR_CONSTANTS.DROPDOWN_TYPES.GROUP_BY.label,\n        value: groupByField,\n        displayNone: true,\n        disabled: false,\n        displayNoneValue: t('No grouping'),\n        choices: groupByFields,\n        type: TOOLBAR_CONSTANTS.DROPDOWN_TYPES.GROUP_BY.type,\n        dispatchMessage: TOOLBAR_CONSTANTS.ACTION_TYPES.TILEMAPS_DROPDOWN_CHANGED,\n    };\n\n    const sortBy = {\n        id: 'nocFieldSelectSortBy',\n        label: TOOLBAR_CONSTANTS.DROPDOWN_TYPES.SORT_BY.label,\n        value: sortByField,\n        displayNone: false,\n        disabled: false,\n        choices: sortByFields,\n        type: TOOLBAR_CONSTANTS.DROPDOWN_TYPES.SORT_BY.type,\n        dispatchMessage: TOOLBAR_CONSTANTS.ACTION_TYPES.TILEMAPS_DROPDOWN_CHANGED\n    };\n\n    const groupOrder = {\n        id: 'nocFieldSelectGroupOrder',\n        label: TOOLBAR_CONSTANTS.DROPDOWN_TYPES.GROUP_ORDER.label,\n        value: groupByOrder,\n        displayNone: false,\n        disabled: Boolean(!businessServiceGroup && (groupByField === NONE_VALUE) || selectedGroup),\n        choices: TOOLBAR_CONSTANTS.ORDER_TYPES.groupByOrderOptions,\n        type: TOOLBAR_CONSTANTS.DROPDOWN_TYPES.GROUP_ORDER.type,\n        dispatchMessage: TOOLBAR_CONSTANTS.ACTION_TYPES.TILEMAPS_DROPDOWN_CHANGED\n    };\n\n    const createDropdown = ({option, hasBorder = false, manageSelectedItems = false}) => {\n\n        const className = `select-field ${hasBorder ? '-right-Border' : ''}`;\n        return (\n            <noc-field-select\n                tooltip-content={i18n.NOC_UPDATES_USER_VIEW}\n                disabled={option.disabled}\n                id={option.id}\n                label={option.label}\n                value={option.value}\n                display-none={option.displayNone}\n                display-none-value={option.displayNoneValue}\n                choices={option.choices}\n                onChange={option.dispatchMessage}\n                type={option.type}\n                manage-selected-items={manageSelectedItems}\n                className={className}/>\n        );\n    };\n\n    const serviceGroups = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/serviceGroups`;\n    const severities = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/severities`;\n    const serviceGroupTree = isModalOpen ? <sn-noc-service-tree-container className='sn-noc-service-tree-container'\n                                                                          isModalOpen={isModalOpen}\n                                                                          service-groups={serviceGroups}\n                                                                          severities={severities}\n                                                                          key='sn-noc-service-tree-container__key'\n                                                                          component-id='sn-noc-service-tree-container'\n    /> : null;\n\n\n    // TODO remove the filterByAlertBtn when we will switch to 'tabbed' side-panel\n    return (\n        <section className='noc-tilemap-toolbar'>\n            <div role=\"group\" className='noc-tilemap-select'>\n                {createDropdown({option: groupBy, manageSelectedItems: true})}\n                {createDropdown({option: groupOrder, hasBorder: true})}\n                {createDropdown({option: sortBy})}\n            </div>\n            {serviceGroupTree}\n        </section>\n    );\n};","import '../noc-tilemap-toolbar';\nimport '../sn-noc-pills-bar';\nimport '../sn-noc-tilemap-layout';\nimport '@devsnc/library-opws-mapping-shared/src/components/noc-search';\nimport '@servicenow/now-heading';\nimport '@devsnc/library-opws-mapping-shared/src/components/sn-opws-loader';\nimport {t} from 'sn-translate';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {i18n} from '@devsnc/library-opws-mapping-shared';\nimport {cloneDeep as _cloneDeep} from 'lodash';\n\nconst LABEL_SEARCH = t('Search');\nconst DESC_SEARCH = t('Filter population by a keyword');\nconst CLEAR_SEARCH = t('Clear search query');\n\nconst BREADCRUMB_HOME = CONSTANTS.TEXT.HOME;\nconst EMPTY_ICON_PATH = '/images/sa.serviceTree/sn-es-no-records.svg';\nconst NO_SERVICES_TO_DISPLAY_MSG = t('No services to display');\nconst TRY_SOMETHING_ELSE_MSG = t('Try filtering by something less specific');\n\nconst createBreadcrumbJsx = state => {\n\tconst {selectedGroup, properties} = state;\n\tconst {tilemapsFormat: {businessServiceGroup}, serviceGroups} = properties;\n\n\tconst isServiceGroupMode = businessServiceGroup && serviceGroups && serviceGroups.breadcrumb; //Check that we have\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // indeed sys_id &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // serviceGroups\n\tconst breadcrumb = (isServiceGroupMode) ? _cloneDeep(serviceGroups.breadcrumb) : {items: [{name: BREADCRUMB_HOME}]};\n\n\tif (selectedGroup) {\n\t\tbreadcrumb.items.push({id: selectedGroup, name: selectedGroup, type: 'group'});\n\t}\n\n\n\treturn <noc-breadcrumb\n\t\tkey='noc_breadcrumb_key'\n\t\tcomponent-id={CONSTANTS.DEFAULTS.NOC_BREADCRUMB_COMPONENT_COMPONENT_ID}\n\t\tdata={breadcrumb}\n\t\tclassName='noc-breadcrumb-container'/>;\n};\n\nconst canLoadTilemap = (choicesFieldsModel, groupedPopulation, windowSize) => {\n\treturn (choicesFieldsModel && groupedPopulation && windowSize.width);\n};\n\nconst getEmptySection = () => {\n\treturn <section className='header-no-data'>\n\t\t<div className=\"noc-empty-state\">\n            <span className='noc-tilemap-empty-icon'>\n                <img src={EMPTY_ICON_PATH} alt='sn-empty-state'/>\n            </span>\n\t\t\t<div className=\"noc-empty-state-row -behind\"/>\n\t\t\t<now-heading className=\"noc-empty-state-row-header\"\n\t\t\t\t\t\t label={NO_SERVICES_TO_DISPLAY_MSG}\n\t\t\t\t\t\t variant='header-tertiary'\n\t\t\t\t\t\t level=\"1\"/>\n\n\t\t\t<div className=\"noc-empty-state-row\">\n\t\t\t\t{TRY_SOMETHING_ELSE_MSG}\n\t\t\t</div>\n\t\t</div>\n\t</section>;\n};\n\nconst getLoaderSection = (debounceTime = 300) => {\n\treturn <sn-opws-loader\n\t\tdebounce-time={debounceTime}\n\t\tclassName='sn-opws-loader'\n\t\tcomponent-id='tilemap-loader'\n\t\tlabel={i18n.NOC_LOADER_LABEL_SERVICES}/>;\n};\n\nconst getTilemap = (state) => {\n\tconst {\n\t\tservicePreviewResource,\n\t\tgroupedPopulation = [],\n\t\tproperties: {\n\t\t\tnocAppRef,\n\t\t\ttilemapsFormat,\n\t\t\ttilemapsConfig: {layoutSegmentsEquallyDivided},\n\t\t\tchoicesFieldsModel,\n\t\t\tpopover\n\t\t},\n\t\tselectedGroup,\n\t\tdynamicLayoutConfig\n\t} = state;\n\n\tconst windowSize = state.behaviors.resize.size;\n\treturn <sn-noc-tilemap-layout\n\t\tclassName='tilemap-layout now-p-block-start--xl'\n\t\tnocAppRef={nocAppRef}\n\t\tdynamic-layout-config={dynamicLayoutConfig}\n\t\tgroups={groupedPopulation}\n\t\tcan-segments-divided-equally={layoutSegmentsEquallyDivided}\n\t\tselectedGroup={selectedGroup}\n\t\tservicePreviewResource={servicePreviewResource}\n\t\tpopover={popover}\n\t\twindowSize={windowSize}\n\t\ttilemapsFormat={tilemapsFormat}\n\t\tchoices-fields-model={choicesFieldsModel}\n\t\tkey={CONSTANTS.DEFAULTS.NOC_TILEMAP_LAYOUT_COMPONENT_ID}\n\t\tcomponent-id={CONSTANTS.DEFAULTS.NOC_TILEMAP_LAYOUT_COMPONENT_ID}/>;\n};\n\nconst createTilemap = (state) => {\n\tconst {\n\t\tgroupedPopulation,\n\t\tproperties: {choicesFieldsModel, isImpactedServicesLoading}\n\t} = state;\n\tconst windowSize = state.behaviors.resize.size;\n\n\t// if we are going to show the spinner due to impact services loading, don't debounce\n\tif (isImpactedServicesLoading) {\n\t\treturn getLoaderSection(0);\n\t}\n\n\tif (!canLoadTilemap(choicesFieldsModel, groupedPopulation, windowSize)) {\n\t\treturn getLoaderSection();\n\t}\n\t\n\treturn groupedPopulation.length > 0 ? getTilemap(state) : getEmptySection();\n};\n\nexport const view = (state, dispatch) => {\n\tconst {\n\t\tproperties: {\n\t\t\ttilemapsFormat,\n\t\t\ttilemapsConfig: {groupByFields, sortByFields},\n\t\t},\n\t\tselectedGroup,\n\t\tdynamicLayoutConfig\n\t} = state;\n\n\tif (!tilemapsFormat || !groupByFields || !sortByFields || !dynamicLayoutConfig) {\n\t\treturn null;\n\t}\n\n\tconst searchTerm = `@${CONSTANTS.DEFAULTS.NOC_TILEMAP_CONTAINER_COMPONENT_ID}/searchTerm`;\n\tconst breadcrumb = createBreadcrumbJsx(state);\n\tconst nocSearch = <noc-search className='search' clearSearchLabel={CLEAR_SEARCH} searchDescription={DESC_SEARCH}\n\t\t\t\t\t\t\t\t  searchLabel={LABEL_SEARCH} searchTerm={searchTerm}/>;\n\n\tconst serviceGroups = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/serviceGroups`;\n\tconst selectedAlert = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/selectedAlert`;\n\tconst severities = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/severities`;\n\tconst nocConfig = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/nocConfig`;\n\tconst sidePanel = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/sidePanel`;\n\tconst workspace = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/workspace`;\n\n\tconst pillsBar = <sn-noc-pills-bar selected-alert={selectedAlert} severities={severities}/>;\n\tconst tilemapGrid = createTilemap(state);\n\n\treturn (\n\t\t<div className='tilemap-container-layout'>\n\t\t\t<noc-tilemap-toolbar\n\t\t\t\tclassName='tilemap-toolbar'\n\t\t\t\tnoc-config={nocConfig}\n\t\t\t\tside-panel={sidePanel}\n\t\t\t\tgroupByFields={groupByFields}\n\t\t\t\tsortByFields={sortByFields}\n\t\t\t\tselectedGroup={selectedGroup}\n\t\t\t\ttilemapsFormat={tilemapsFormat}\n\t\t\t\tselected-alert={selectedAlert}\n\t\t\t\tservice-groups={serviceGroups}\n\t\t\t\tworkspace={workspace}\n\t\t\t\tkey={CONSTANTS.DEFAULTS.NOC_TILEMAP_TOOLBAR_COMPONENT_ID}\n\t\t\t\tcomponent-id={CONSTANTS.DEFAULTS.NOC_TILEMAP_TOOLBAR_COMPONENT_ID}\n\t\t\t/>\n\t\t\t<section className='tools-section'>\n\t\t\t\t{breadcrumb}\n\t\t\t\t{nocSearch}\n\t\t\t</section>\n\t\t\t{pillsBar}\n\t\t\t{tilemapGrid}\n\t\t</div>\n\t);\n};\n","import {isEmpty as _isEmpty, mapKeys as _mapKeys} from 'lodash';\n\nconst impactedServicesFilter = function(service) {\n\tconst {impactedServicesIdsMap} = this;\n\tconst {id} = service;\n\treturn Boolean(impactedServicesIdsMap[id]);\n};\n\nconst getValueAsKey = (value, key) => value;\n\nexport const impactedByAlertPopulation = (population, state) => {\n\tconst {tilemapsFormat: {businessServiceGroup}, impactedServicesAlertIds, selectedAlert} = state.properties;\n\n\tif (!population || (selectedAlert === null && _isEmpty(impactedServicesAlertIds))) {\n\t\treturn population;\n\t}\n\n\t// Filter out any service which is not in the impacted services list\n\tconst impactedServicesIdsMap = _mapKeys(impactedServicesAlertIds, getValueAsKey);\n\tlet filteredPopulation;\n\tif (businessServiceGroup) {\n\t\tfilteredPopulation = population.map(group => {\n\t\t\tconst servicesFiltered = group.population.filter(impactedServicesFilter, {impactedServicesIdsMap});\n\t\t\treturn {\n\t\t\t\t...group,\n\t\t\t\tpopulation: servicesFiltered\n\t\t\t};\n\t\t});\n\t} else {\n\t\tfilteredPopulation = population.filter(impactedServicesFilter, {impactedServicesIdsMap});\n\t}\n\treturn filteredPopulation;\n};","import {values as _values, slice as _slice} from 'lodash';\nimport {getValue, getOrdinal, CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {comparatorByField} from '../comparators/ordinalComparator';\n\n/**\n *\n * @param groupedPopulation\n * @param state\n * @returns {*}\n */\nexport const sortGroupsPopulation = (groupedPopulation, state) => {\n    const {properties: {tilemapsFormat}} = state;\n    const {businessServiceGroup: isServiceGroup} = tilemapsFormat;\n    const isAscending =  tilemapsFormat.groupByOrder == CONSTANTS.GLOBALS.ASC;\n\n    groupedPopulation = runSortGroupsStrategy(groupedPopulation, tilemapsFormat.groupByField, isAscending, isServiceGroup);\n\n    return groupedPopulation;\n};\n\n\n\n// TODO there are constants under noc-tilemap-toolbar/src/constants.js which should be shared\n/**\n * Return the groups array sorted by groupByOrder\n *\n * @param groupedPopulation\n * @param groupByField\n * @param isAscending\n * @returns {*}\n */\nconst runSortGroupsStrategy = (groupedPopulation, groupByField, isAscending, isServiceGroup) => {\n    if (!groupByField) {\n        return groupedPopulation;\n    }\n\n    let sortedGroupedPopulation = _values(groupedPopulation);\n    if (sortedGroupedPopulation.length <= 1) {\n        return groupedPopulation;\n    }\n\n    const hasOther = isServiceGroup || (sortedGroupedPopulation[0].groupField.value === '');\n    const theOther = hasOther ? sortedGroupedPopulation[0] : null;\n    const population = hasOther ? sortedGroupedPopulation.slice(1) : sortedGroupedPopulation;\n\n    sortedGroupedPopulation = population.sort(comparatorByField('groupField', isAscending));\n\n    if (hasOther) {\n        sortedGroupedPopulation.push(theOther); //should be always on the end\n    }\n\n    return sortedGroupedPopulation;\n};\n","import {forIn as _forIn} from 'lodash';\nimport {comparatorByField} from '../comparators/ordinalComparator';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\n/**\n *\n * @param groupedPopulation\n * @param state\n * @returns {*}\n */\nexport const sortByPopulation = (groupedPopulation, state) => {\n\tconst {properties: {tilemapsFormat}} = state;\n    const {businessServiceGroup} = tilemapsFormat;\n    const groupBy = (businessServiceGroup) ? null : tilemapsFormat.groupByField;\n\n\tconst sortByField = (tilemapsFormat.sortByField === groupBy) ?\n\t\tCONSTANTS.DEFAULTS.NOC_FALLBACK_SORT_FIELD : tilemapsFormat.sortByField;\n\n\treturn runSortByStrategy(groupedPopulation, sortByField,\n\t\ttilemapsFormat.sortByOrder === CONSTANTS.GLOBALS.ASC);\n};\n\n/**\n * Return the array sorted by sortByField\n *\n * @param population\n * @param sortByField\n * @param ascending\n * @returns {*}\n */\nconst runSortByStrategy = (groupedPopulation, sortByField, ascending) => {\n\tconst newGroupedPopulation = groupedPopulation;\n\n\t// sort each group internally\n\tif (sortByField) {\n\t\t_forIn(newGroupedPopulation, group => {\n\t\t\tgroup.population = sortGroup(group, sortByField, ascending);\n\t\t});\n\t}\n\n\treturn newGroupedPopulation;\n};\n\n\n/**\n *\n * @param group\n * @param sortByField\n * @param ascending\n * @returns {Array}\n */\nconst sortGroup = (group, sortByField, ascending) => {\n\tconst {population} = group;\n\n\tlet sortedPopulation = population.sort(comparatorByField(sortByField, ascending));\n\n\treturn sortedPopulation;\n};\n","import {getDisplayValue, getValue} from '@devsnc/library-opws-mapping-shared';\nimport {i18n} from '@devsnc/library-opws-mapping-shared';\n\n/**\n *\n * @param groupedPopulation\n * @param state\n * @returns {*}\n */\nexport const groupByPopulation = (groupedPopulation, state) => {\n\tconst {properties: {tilemapsFormat}} = state;\n\n\tconst newGroupedPopulation = runGroupByStrategy(groupedPopulation, state, tilemapsFormat.groupByField);\n\n\treturn newGroupedPopulation;\n};\n\n/**\n *  Return the array grouped by groupByField\n *\n * @param groupedPopulation\n * @param state\n * @param groupByField\n * @returns {*}\n */\nconst runGroupByStrategy = (groupedPopulation, state, groupByField) => {\n\n\tconst newGroupedPopulation = groupedPopulation.reduce((result, item) => {\n\t\tconst groupItemFieldValue = groupByField ? item[groupByField] : '';\n\t\tconst fieldValue = (groupItemFieldValue) ? groupItemFieldValue : i18n.NOC_DEFAULT_GROUP_LABEL;\n\t\tconst groupKey = getValue(fieldValue);\n\t\tconst type  =  (groupItemFieldValue) ? groupItemFieldValue.type || 'string' : 'string';\n\n\t\tlet newResult;\n\n\t\tlet group = result[groupKey];\n\t\tif (!group) {\n\n\t\t\tgroup = {\n\t\t\t\tgroupField: {\n\t\t\t\t\tdisplayValue: getDisplayValue(fieldValue) || i18n.NOC_DEFAULT_GROUP_DISPLAY_VALUE,\n\t\t\t\t\tvalue: groupKey,\n\t\t\t\t\tname: groupByField,\n\t\t\t\t\ttype: type\n\t\t\t\t},\n\t\t\t\tpopulation: []\n\t\t\t};\n\n\t\t\t// mutate only if required to add a new group\n\t\t\tnewResult = {\n\t\t\t\t...result,\n\t\t\t\t[groupKey]: group\n\t\t\t};\n\t\t} else {\n\t\t\tnewResult = result;\n\t\t}\n\n\t\tgroup.population.push(item);\n\n\t\treturn newResult;\n\t}, {});\n\n\treturn newGroupedPopulation;\n};\n","import {getDisplayValue, getValue} from '@devsnc/library-opws-mapping-shared';\n\n/**\n * Call filter on enabled population by the key term function searched in all related fields\n *\n * @param groupedPopulation\n * @param state\n */\nexport const searchFilterPopulation = (groupedPopulation, state) => {\n\tconst {\n\t\tsearchTerm,\n\t\ttilemapsFormat: {businessServiceGroup},\n\t\ttilemapsConfig: {searchFields}\n\t} = state.properties;\n\n    if (!searchFields || searchFields.length === 0) {\n        return groupedPopulation;\n    }\n\n    let requiredFields = searchFields.map(getValue);\n    const fn = (businessServiceGroup)? serviceGroupsPopulationFilter : servicesPopulationFilter;\n\treturn fn(groupedPopulation, searchTerm, requiredFields);\n};\n\n/**\n * Population filter.\n * The population could be filtered according to the group by fields and hover tooltip fields.\n */\nconst enabledPopulationFilter = function(it) {\n\tconst {searchTerm, searchFields} = this;\n\tconst searchTermLC = searchTerm.toLowerCase();\n\n\t// Go over all relevant fields and see if they contain the search term\n\tfor (let i = 0; i < searchFields.length; i++) {\n\t\tconst field = searchFields[i];\n\t\tconst displayValue = getDisplayValue(it[field]).toLowerCase();\n\n\t\tif (displayValue.includes(searchTermLC)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\n/**\n *\n * @param population\n * @param searchTerm - the term that the user wants to search\n * @param searchFields - the fields that the search term is searched in\n * @returns {{filteredPopulation: *}}\n */\nconst servicesPopulationFilter = (population, searchTerm, searchFields) => {\n\tif (!searchTerm) {\n\t\treturn population;\n\t}\n\n\tconst filteredPopulation = population.filter(enabledPopulationFilter, {searchTerm, searchFields});\n\treturn filteredPopulation;\n};\n\n\n/**\n *\n * @param population\n * @param searchTerm - the term that the user wants to search\n * @param searchFields - the fields that the search term is searched in\n * @returns {{filteredPopulation: *}}\n */\nexport const serviceGroupsPopulationFilter = (population, searchTerm, searchFields) => {\n    if (!searchTerm)\n        return population;\n\n    const filteredPopulation = population.map(group=>{\n        const servicesFiltered = group.population.filter(enabledPopulationFilter, {searchTerm, searchFields});\n        return {\n            ...group,\n            population: servicesFiltered\n        };\n    });\n    return filteredPopulation;\n};\n","import {searchFilterPopulation} from './transformers/populationFilter';\nimport {groupByPopulation} from './transformers/groupByPopulation';\nimport {sortByPopulation} from './transformers/sortByPopulation';\nimport {sortGroupsPopulation} from './transformers/sortGroupsPopulation';\nimport {impactedByAlertPopulation} from './transformers/impactedByAlertPopulation';\nimport {CONSTANTS, PERFORMANCE} from '@devsnc/library-opws-mapping-shared';\nimport {values as _values} from 'lodash';\n\n/**\n *\n * The expected structure of the grouped population, e.g.:\n * [\n *      {\n *          \"groupField\": {\n *              \"displayValue\": \"Info\",\n *              \"value\": \"5\",\n *              \"name\": \"severity\"\n *      },\n *          \"population\": [\n *              {...}\n *          ]\n *      }\n * ]\n *\n * @param groupedPopulation\n * @param state\n * @returns {{[p: string]: *}}\n */\nconst transformGroupedPopulation = (groupedPopulation, state) => {\n    let newGroupedPopulation = groupedPopulation;\n    const {tilemapsFormat: {businessServiceGroup}} = state.properties;\n\n    const transformersSet = (businessServiceGroup) ? serviceGroupTransformers: regularTransformers;\n    transformersSet.forEach(fn => {\n        newGroupedPopulation = fn(newGroupedPopulation, state);\n    });\n\n    const newState = {\n        ...state,\n        groupedPopulation: _values(newGroupedPopulation)\n    };\n    return newState;\n};\n\n/**\n *\n * @param state\n * @returns {*}\n */\nexport const transformState = (state) => {\n    const {tilemapsFormat: {businessServiceGroup}, serviceGroups} = state.properties;\n    let groupedPopulation;\n\n    if (businessServiceGroup) {\n        if (!serviceGroups || !serviceGroups.buckets)\n            return state;\n\n        groupedPopulation = serviceGroups.buckets;\n    } else {\n        groupedPopulation = state.properties.population;\n    }\n\n\n    // do nothing when no population.\n    // empty population is a valid response.\n    if (!groupedPopulation) {\n        return state;\n    }\n\n    return PERFORMANCE.measureCall(transformGroupedPopulation, [groupedPopulation, state]);\n};\n\n/**\n * array of functions to pipeline by order\n * @type {*[]}\n */\nconst regularTransformers = [\n    impactedByAlertPopulation, // filter out any service which is not in the list of services that are impacted by the alert\n    searchFilterPopulation, //filter according to the search term\n    groupByPopulation, // group according to the 'Group By' field\n    sortByPopulation, // sort each group according to the 'Sort By' field\n    sortGroupsPopulation // sort groups according to the 'groupByOrder' field\n];\n\n\n\n\n/**\n * array of functions to pipeline by order for Service Group Mode\n * @type {*[]}\n */\nconst serviceGroupTransformers = [\n    impactedByAlertPopulation, // filter out any service which is not in the list of services that are impacted by the alert\n    searchFilterPopulation, //filter according to the search term\n    sortByPopulation, // sort each group according to the 'Sort By' field\n    sortGroupsPopulation // sort groups according to the 'groupByOrder' field\n];\n\n\n\n\n","import {CONSTANTS, createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport addToFavoritesEffect from './addToFavoritesEffect';\nimport removeFromFavoritesEffect from './removeFromFavoritesEffect';\n\nexport const nocFavoritesBehavior = {\n\tname: 'nocFavoritesBehavior',\n\tactionHandlers: {\n\t\t[addToFavoritesEffect.ACTION_TYPES.ADD_TO_FAVORITES_REQUEST]:\n\t\t\tcreateActionConfig(addToFavoritesEffect.effectHandlers.addToFavoritesRequest),\n\n\t\t[addToFavoritesEffect.ACTION_TYPES.ADD_TO_FAVORITES_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(addToFavoritesEffect.effectHandlers.addToFavoritesResponse),\n\n\t\t[removeFromFavoritesEffect.ACTION_TYPES.REMOVE_FROM_FAVORITES_REQUEST]:\n\t\t\tcreateActionConfig(removeFromFavoritesEffect.effectHandlers.removeFromFavoritesRequest),\n\n\t\t[removeFromFavoritesEffect.ACTION_TYPES.REMOVE_FROM_FAVORITES_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(removeFromFavoritesEffect.effectHandlers.removeFromFavoritesResponse)\n\t}\n}; ","import {createActionConfig,CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport getServicePreviewEffect from './getServicePreviewEffect';\nimport clearServicePreviewDataEffect from './clearServicePreviewDataEffect';\n\nexport const nocServicePreviewBehavior = {\n\tname: 'nocServicePreviewBehavior',\n\tactionHandlers: {\n\t\t[getServicePreviewEffect.ACTION_TYPES.SERVICE_PREVIEW_REQUESTED]:\n\t\t\tcreateActionConfig(getServicePreviewEffect.effectHandlers.servicePreviewRequestedHandler),\n\n\t\t[getServicePreviewEffect.ACTION_TYPES.SERVICE_PREVIEW_REQUEST]:\n\t\t\tcreateActionConfig(getServicePreviewEffect.effectHandlers.servicePreviewHandler),\n\n\t\t[getServicePreviewEffect.ACTION_TYPES.SERVICE_PREVIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(getServicePreviewEffect.effectHandlers.servicePreviewResponseHandler),\n\n\t\t[clearServicePreviewDataEffect.ACTION_TYPES.NOC_CLEAR_SERVICE_PREVIEW]:\n\t\t\tcreateActionConfig(clearServicePreviewDataEffect.effectHandlers.clearServicePreviewDataEffect),\n\n\t\t[getServicePreviewEffect.ACTION_TYPES.REFRESH_SERVICE_PREVIEW_REQUESTED]:\n\t\t\tcreateActionConfig(getServicePreviewEffect.effectHandlers.refreshServicePreviewRequested)\n\t}\n};","import nocPopoverOpenCloseEffect from './nocPopoverOpenCloseEffect';\nimport {createActionConfig} from '@devsnc/library-opws-mapping-shared';\n\nexport const nocPopoverBehavior = {\n\t\tname: 'nocPopoverBehavior',\n\t\tactionHandlers: {\n\t\t\t\t[nocPopoverOpenCloseEffect.ACTION_TYPES.NOC_POPOVER_OPEN]:\n\t\t\t\t\t\tcreateActionConfig(nocPopoverOpenCloseEffect.effectHandlers.nocPopoverOpenEffect),\n\n\t\t\t\t[nocPopoverOpenCloseEffect.ACTION_TYPES.NOC_POPOVER_FIT]:\n\t\t\t\t\t\tcreateActionConfig(nocPopoverOpenCloseEffect.effectHandlers.nocPopoverFitEffect),\n\n\t\t\t\t[nocPopoverOpenCloseEffect.ACTION_TYPES.NOC_POPOVER_CLOSED]:\n\t\t\t\t\t\tcreateActionConfig(nocPopoverOpenCloseEffect.effectHandlers.nocPopoverCloseEffect)\n\t\t}\n}","import {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {LOGGING, checkForError, getValue, onNextFrame, colorsAndIconsEffect} from '@devsnc/library-opws-mapping-shared';\n\nimport {\n    get as _get,\n    isArray as _isArray\n} from 'lodash';\n\nconst ACTION_TYPES = {\n    NOC_GET_COLORS_AND_ICONS: 'NOC_GET_COLORS_AND_ICONS',\n    NOC_GET_CHOICE_FIELDS: 'NOC_GET_CHOICE_FIELDS',\n    CATEGORIZED_FIELDS_EFFECT_STARTED: 'CATEGORIZED_FIELDS_EFFECT_STARTED',\n    CATEGORIZED_FIELDS_EFFECT_SUCCEEDED: 'CATEGORIZED_FIELDS_EFFECT_SUCCEEDED',\n    CATEGORIZED_FIELDS_EFFECT_FAILED: 'CATEGORIZED_FIELDS_EFFECT_FAILED',\n    CATEGORIZED_FIELDS_EFFECT_SET_STATE: 'CATEGORIZED_FIELDS_EFFECT_SET_STATE',\n    CATEGORIZED_FIELDS_EFFECT_CHOICES_MODEL_SET_STATE: 'CATEGORIZED_FIELDS_EFFECT_CHOICES_MODEL_SET_STATE'\n};\n\nconst constructGQLQuery = field => `\n    ${field}: GlideLayout_Query {\n            choiceDataRetriever(tableName: $tableName, fieldName: $${field}) {\n              choice {\n                value\n                label\n              }\n            }\n     }\n     `;\n\nconst constructGQLContent = categorizedByFields => {\n    let queryContent = '';\n    for (const field of categorizedByFields)\n        queryContent += constructGQLQuery(field);\n\n    return queryContent;\n};\n\nconst constructGQLDeclaration = categorizedByFields => {\n    let queryVariablesDeclaration = '';\n    for (const field of categorizedByFields)\n        queryVariablesDeclaration += `, $${field}: String!`;\n\n    return queryVariablesDeclaration;\n};\n\n\nconst constructGQL = categorizedFields => {\n    const declaration = constructGQLDeclaration(categorizedFields);\n    const content = constructGQLContent(categorizedFields);\n    return `query getCategorizedChoices($tableName: String! ${declaration}) {\n                ${content}\n            }`;\n};\n\nconst fetchFieldsChoicesEffect = (categorizedFields, coeffects) => {\n    const gql = constructGQL(categorizedFields);\n    const qglHandler = createGraphQLEffect(gql, {\n        startActionType: ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_STARTED,\n        successActionType: ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_SUCCEEDED,\n        errorActionType: ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_FAILED,\n        variableList: ['tableName'].concat(categorizedFields)\n    });\n\n    if (!qglHandler || !_isArray(qglHandler.args))\n        throw new Error('createGraphQLEffect expected to return object with `args` array.');\n\n    qglHandler.args.push(coeffects);\n    return qglHandler;\n};\n\nconst constructPayloadAction = (action, field) => {\n    action[field] = field;\n    return action;\n};\n\nconst getChoices = {\n    effect(coeffects) {\n        const {action} = coeffects;\n        LOGGING.log(`categorizedFieldsEffect-> getChoices called by action ${action.type}`);\n    },\n    interceptors: [{\n        after(context) {\n            const {coeffects, effects} = context;\n            const {state} = coeffects;\n            const {categorizedByFields = []} = state.properties.tilemapsConfig;\n            const categorizedFields = categorizedByFields.map(getValue).filter(f => f !== 'severity'); //severity is redundant, existing property on state\n            const {dispatch} = coeffects;\n\n            //If no categorized fields -> just hop to the next step - setting the model\n            if (categorizedFields.length === 0) {\n                dispatch(ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_SUCCEEDED, {});\n            }\n\n            const payload = categorizedFields.reduce(constructPayloadAction, {tableName: 'cmdb_ci_service_auto'});\n            const newCoeffects = {\n                ...coeffects,\n                action: {\n                    ...coeffects.action,\n                    payload\n                }\n            };\n\n            const extendedEffects = [\n                ...effects,\n                fetchFieldsChoicesEffect(categorizedFields, newCoeffects)\n            ];\n\n            return {\n                ...context,\n                effects: extendedEffects,\n                coeffects: newCoeffects\n            };\n        }\n    }]\n};\n\nconst transform = (options, choiceField) => options.reduce((obj, item, currentIndex) => {\n    const key = (choiceField === 'severity') ? currentIndex + 1 : getValue(item);\n    obj[key] = item;\n    return obj;\n}, {});\n\nconst relevantSeveritiesFilter = f => (f.value !== '' && f.value !== '0');\n\nconst setChoicesFieldResource = async coeffects => {\n    const {\n\t\tdispatch,\n\t\tupdateState,\n\t\taction: {payload, type}\n\t} = coeffects;\n\n    LOGGING.log(`categorizedFieldsEffect:setChoicesFieldResource called by action ${type}`);\n    const errors = checkForError({payload, dispatch, caller: 'categorizedFieldsEffect:setChoicesFieldResource'});\n\n    if (errors)\n        return;\n\n    const {data = []} = payload;\n    const choicesFieldResource = {};\n    for (const choiceField in data) {\n        const {choiceDataRetriever: {choice}} = data[choiceField];\n        const options = (choiceField === 'severity') ? choice.filter(relevantSeveritiesFilter) : choice;\n        choicesFieldResource[choiceField] = transform(options, choiceField);\n    }\n\n    updateState({choicesFieldResource});\n\n    await onNextFrame();\n\n    dispatch(ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_SET_STATE, {});\n};\n\nconst valueNotSeverityFilter = v => v !== 'severity';\n\nconst getColorsAndIcons = coeffects => {\n    const {action, dispatch, properties} = coeffects;\n    LOGGING.log(`categorizedFieldsEffect-> getColorsAndIcons called by action ${action.type}`);\n\n    const {categorizedByFields = []} = properties.tilemapsConfig;\n\n    //severity is redundant, existing property on state\n    const categorizedFields = categorizedByFields.map(getValue).filter(valueNotSeverityFilter); \n    \n    dispatch(colorsAndIconsEffect.ACTION_TYPES.COLORS_REQUEST,\n        colorsAndIconsEffect.getVariables(categorizedFields));\n};\n\nconst fieldIsSeverityFilter = f => f.value === 'severity';\n\nconst mergeContentAndIcons = async coeffects => {\n    const {\n        dispatch,\n        state,\n        properties,\n\t\tupdateProperties,\n\t\taction: {type}\n    } = coeffects;\n    \n    LOGGING.log(`NOC: categorizedFieldsEffect-> mergeContentAndIcons called by action ${type}`);\n\n    const {choicesFieldResource} = state;\n\n    //If already did the merge or we don't have enough data for it-> do nothing\n    if (properties.choicesFieldsModel || \n        !choicesFieldResource || \n        !state.colorsAndIconsResource || \n        !properties.severities)\n        return;\n\n    //Iterate over all fields (except severity)\n    \n    const choicesFieldsModel = {};\n    for (const category in choicesFieldResource) {\n        choicesFieldsModel[category] = {};\n        for (const index in choicesFieldResource[category]) {\n            const item = choicesFieldResource[category][index];\n            const key = getValue(item);\n            const style = state.colorsAndIconsResource.result[category][key];\n            choicesFieldsModel[category][index] = {\n                ...item,\n                ...style\n            };\n        }\n    }\n\n    //Insert also the severities if requested\n    const {categorizedByFields = []} = properties.tilemapsConfig;\n    const isSeverityEnabled = categorizedByFields.filter(fieldIsSeverityFilter).length > 0;\n    if (isSeverityEnabled)\n        choicesFieldsModel['severity'] = {...properties.severities};\n\n    updateProperties({choicesFieldsModel});\n\n    await onNextFrame();\n\n    dispatch(ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_CHOICES_MODEL_SET_STATE, {});\n};\n\nconst onTilemapConfigSet = ({dispatch}) => {\n    dispatch(ACTION_TYPES.NOC_GET_CHOICE_FIELDS, {});\n    dispatch(ACTION_TYPES.NOC_GET_COLORS_AND_ICONS, {});\n};\n\nconst effectHandlers = {\n    onTilemapConfigSet,\n    getChoices,\n    getColorsAndIcons,\n    setChoicesFieldResource,\n    mergeContentAndIcons\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};\n\n","/**\n * Effect handler for search tile map according to search term provided by the user.\n */\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\t\tSEARCH_TERM_CHANGED: CONSTANTS.ACTION_TYPES.SEARCH_TERM_CHANGED\n};\n\nconst handleNocSearchTerm = ({updateProperties, action}) => {\n\tconst {payload: {value}} = action;\n\tLOGGING.info('handleNocSearchTerm', {extra: value});\n\tupdateProperties({searchTerm: value});\n};\n\n/**\n * list of effects handled in this module\n *\n */\nconst effectHandlers = {\n\thandleNocSearchTerm\n};\n\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","module.exports = __TECTONIC__$servicenow_ui_effect_update_state;","import {LOGGING, checkForError} from '@devsnc/library-opws-mapping-shared';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {createUpdateStateEffect} from '@seismic/effect-update-state';\n\nconst ACTION_TYPES = {\n\tNOC_TILEMAP_DYNAMIC_LAYOUT_CONFIG_INIT_REQUESTED: 'NOC_TILEMAP_DYNAMIC_LAYOUT_CONFIG_INIT_REQUESTED',\n\tNOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_STARTED: 'NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_STARTED',\n\tNOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_SUCCEEDED: 'NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_SUCCEEDED',\n\tNOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst getRecords = result => result ? result.data.GlideRecord_Query.noc_layout._results : [];\n\nconst nocLayoutQuery = `\nquery getDynamicLayoutConfig($queryConditions: String!) {\n  GlideRecord_Query {\n    noc_layout(queryConditions: $queryConditions, pagination: {limit: 100, offset: 0}) {\n      _results {\n        width {\n          value\n        } \n        height {\n          value\n        }          \n        max_items {\n          value\n        }        \n        columns {\n          value\n        }\n        breakpoint {\n          value\n        }\n      }\n    }\n  }\n}\n`;\n\nconst getDynamicLayoutConfig = createGraphQLEffect(nocLayoutQuery, {\n\tstartActionType: ACTION_TYPES.NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_FAILED,\n\tvariableList: ['queryConditions']\n});\n\nconst storeDynamicLayoutConfig = coeffects => {\n\tconst {dispatch, updateState, action: {payload}} = coeffects;\n\tconst caller = 'storeDynamicLayoutConfig';\n\tLOGGING.info('After getting response from the graphQL', {caller});\n\n\tconst errors = checkForError({payload, dispatch, caller});\n\tif (errors) {\n\t\treturn;\n\t}\n\n\tconst dynamicLayoutConfig = getRecords(payload).map(item => {\n\t\treturn {\n\t\t\twidth: item.width.value,\n\t\t\theight: item.height.value,\n\t\t\tmaxItems: item.max_items.value,\n\t\t\tcolumns: item.columns.value,\n\t\t\tbreakpoint: item.breakpoint.value\n\t\t};\n\t});\n\n\tupdateState({dynamicLayoutConfig});\n};\n\nconst effectHandlers = {\n\tgetDynamicLayoutConfig,\n\tstoreDynamicLayoutConfig\n};\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","/**\n * Effect handler for NOCpit tile map configuration.\n * This handler will provide:\n * <lu>\n *     <li>sort by</li>\n *     <li>group by</li>\n *     <li>hover tooltip</li>\n * </lu>\n *\n * fields are from the `noc_tilemap_conf` table\n */\n\nimport {createHttpEffect} from '@servicenow/ui-effect-http';\n\nimport {camelCase as _camelCase} from 'lodash';\nimport {CONSTANTS, createNocUpdateStateEffect} from '@devsnc/library-opws-mapping-shared';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\n\n\nconst {PROPERTIES_SET} = CONSTANTS.GENERAL;\n\nconst ACTION_TYPES = {\n\tNOC_TILE_MAP_CONFIG_REQUEST_INIT: 'NOC_TILE_MAP_CONFIG_REQUEST_INIT',\n\tNOC_TILE_MAP_CONFIG_REQUEST_STARTED: 'NOC_TILE_MAP_CONFIG_REQUEST_STARTED',\n\tNOC_TILE_MAP_CONFIG_REQUEST_SUCCEEDED: 'NOC_TILE_MAP_CONFIG_REQUEST_SUCCEEDED',\n\tNOC_TILE_MAP_CONFIG_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\n\nconst handleNocTileMapConfigInit = createHttpEffect('/api/sn_nocpit/nocpit/GetTilemapGetChoices', {\n\tmethod: 'GET',\n\tqueryParams: ['workspace'],\n\tstartActionType: ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_FAILED,\n});\n\n\nconst mapValuesFromArray = item => ({\n\tvalue: item.name, \n\tlabel: item.displayName\n});\n\n\nconst reduceChoiceFields = (total, value) => {\n\tvar choices = value.choices.map(mapValuesFromArray);\n\tconst reducedKey = _camelCase(value.field);\n\n\treturn {\n\t\t...total,\n\t\t[reducedKey]: choices\n\t};\n};\n\nconst transformPlainFields = (fieldsObj) => {\n    let obj ={};\n    for (var item in  fieldsObj){\n        obj[_camelCase(item)] = fieldsObj[item];\n    }\n    return obj;\n};\n\n/**\n *\n * @param tileMapConfig\n */\nconst transformTileMapConfig = response => {\n\tconst choices = response.choicesFields.reduce(reduceChoiceFields, {});\n    const plain = transformPlainFields(response.plainFields);\n\treturn {\n        ...choices,\n        ...plain\n    };\n};\n\nconst handleNocTileMapConfigSucceeded = createNocUpdateStateEffect((state, action, getAfterStateUpdate) => {\n\tLOGGING.log('handleNocTileMapConfigSucceeded');\n\tif (action.error) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tnocTileMapsConfigResource: {\n\t\t\t\terror: action.error\n\t\t\t}\n\t\t};\n\t}\n\tconst result = action.payload;\n\n\tif (!result) {\n\t\tLOGGING.log('Failed fetching \"tileMapConfig\" record!');\n\t\treturn state;\n\t}\n\n\tconst tilemapsConfig =  transformTileMapConfig(result);\n\n\tvar newState = {\n\t\t...state,\n\t\tproperties: {\n\t\t\t...state.properties,\n\t\t\ttilemapsConfig\n\t\t}\n\t}\n\n\tgetAfterStateUpdate().then(dispatch => \n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_TILE_MAP_CONFIG_SET, {caller: 'nocTileMapConfigEffect'}));\n\t\t\n\treturn newState;\n});\n\n// TODO error handling\nconst handleNocTileMapConfigFailed = null;\n\n/**\n * list of effects handled in this module\n *\n */\nconst effectHandlers = {\n\thandleNocTileMapConfigInit,\n\thandleNocTileMapConfigSucceeded,\n\thandleNocTileMapConfigFailed\n};\n\nconst getVariables = workspace => {\n\treturn {\n\t\tqueryConditions: `workspace=${workspace}`\n\t};\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers,\n\tgetVariables\n};\n","import nocTileMapConfigEffect from './nocTileMapConfigEffect';\nimport nocTilemapLayoutConfigEffect from './nocTilemapDynamicLayoutConfigEffect';\nimport searchTermEffect from './searchTermEffect';\nimport {CONSTANTS, LOGGING, createActionConfig, colorsAndIconsEffect} from '@devsnc/library-opws-mapping-shared';\nimport categorizedFieldsEffect from './categorizedFieldsEffect';\n\nconst initFlowHandler = {\n    effect(coeffects) {\n        const {state, dispatch} = coeffects;\n        // const {workspace} = state.properties;\n        //temporary removing workspace for WS integration\n        const workspace = 'nocpit';\n\n        /* TODO FIXME this flow initializes from onConnect(). 'workspace' meant to listen on selectable property from noc-app.\n        * but it's not ready yet onConnect\n        */\n\n        LOGGING.log('dispatch NOC_TILE_MAP_CONFIG_REQUEST_INIT');\n        dispatch(nocTileMapConfigEffect.ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_INIT, {workspace});\n\n        LOGGING.log('dispatch NOC_TILE_MAP_LAYOUT_CONFIG_REQUEST_INIT');\n        dispatch(nocTilemapLayoutConfigEffect.ACTION_TYPES.NOC_TILEMAP_DYNAMIC_LAYOUT_CONFIG_INIT_REQUESTED, {\n            queryConditions:  'ORDERBYwidth^ORDERBYheight'\n        });\n    }\n};\n\n\nexport const nocTilemapDataBehavior = {\n    name: 'nocTilemapDataBehavior',\n    actionHandlers: {\n        /**\n         * TILE_MAP_CONFIG\n         */\n        [CONSTANTS.ACTION_TYPES.NOC_COMPONENT_CONNECTED]:\n            createActionConfig(initFlowHandler),\n\n        [nocTileMapConfigEffect.ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_INIT]:\n            createActionConfig(nocTileMapConfigEffect.effectHandlers.handleNocTileMapConfigInit),\n\n        [nocTileMapConfigEffect.ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_SUCCEEDED]:\n            createActionConfig(nocTileMapConfigEffect.effectHandlers.handleNocTileMapConfigSucceeded),\n\n        // [nocTileMapConfigEffect.ACTION_TYPES.NOC_TILE_MAP_CONFIG_REQUEST_FAILED]:\n        //     createActionConfig(nocTileMapConfigEffect.effectHandlers.handleNocTileMapConfigFailed),\n\n        [searchTermEffect.ACTION_TYPES.SEARCH_TERM_CHANGED]:\n            createActionConfig(searchTermEffect.effectHandlers.handleNocSearchTerm),\n\n        [CONSTANTS.ACTION_TYPES.NOC_TILE_MAP_CONFIG_SET]:\n            createActionConfig(categorizedFieldsEffect.effectHandlers.onTilemapConfigSet),\n\n        [categorizedFieldsEffect.ACTION_TYPES.NOC_GET_CHOICE_FIELDS]:\n            createActionConfig(categorizedFieldsEffect.effectHandlers.getChoices),\n\n        [categorizedFieldsEffect.ACTION_TYPES.NOC_GET_COLORS_AND_ICONS]:\n            createActionConfig(categorizedFieldsEffect.effectHandlers.getColorsAndIcons),\n\n        /**\n         * CATEGORIZED_FIELDS\n         */\n        [categorizedFieldsEffect.ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_SUCCEEDED]:\n            createActionConfig(categorizedFieldsEffect.effectHandlers.setChoicesFieldResource),\n\n        [categorizedFieldsEffect.ACTION_TYPES.CATEGORIZED_FIELDS_EFFECT_SET_STATE]:\n            createActionConfig(categorizedFieldsEffect.effectHandlers.mergeContentAndIcons),\n\n        /**\n         * CATEGORIZED_FIELDS_COLORS\n         */\n        [colorsAndIconsEffect.ACTION_TYPES.COLORS_REQUEST]:\n            createActionConfig(colorsAndIconsEffect.effectHandlers.colorsFetchedHandler),\n\n        [colorsAndIconsEffect.ACTION_TYPES.COLORS_REQUEST_SUCCEEDED]:\n            createActionConfig(colorsAndIconsEffect.effectHandlers.handleColorsResponse),\n\n        [CONSTANTS.ACTION_TYPES.NOC_COLORS_AND_ICONS_SET]:\n            createActionConfig(categorizedFieldsEffect.effectHandlers.mergeContentAndIcons),\n\n        /**\n         * DYNAMIC_LAYOUT_CONFIG\n         */\n        [nocTilemapLayoutConfigEffect.ACTION_TYPES.NOC_TILEMAP_DYNAMIC_LAYOUT_CONFIG_INIT_REQUESTED]:\n            createActionConfig(nocTilemapLayoutConfigEffect.effectHandlers.getDynamicLayoutConfig),\n\n        [nocTilemapLayoutConfigEffect.ACTION_TYPES.NOC_TILEMAP_DYNAMIC_LAYOUT_REQUEST_SUCCEEDED]:\n            createActionConfig(nocTilemapLayoutConfigEffect.effectHandlers.storeDynamicLayoutConfig)\n    }\n};","import {nocTilemapDataBehavior as behavior} from './nocTilemapDataBehavior';\n\n\nexport const nocTilemapDataBehavior = {\n\tbehavior\n};","import {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport {nocTilemapDataBehavior} from '../noc-tilemap-data-behavior';\nimport {nocPopoverBehavior} from '../noc-popover-behavior';\nimport {nocServicePreviewBehaviors} from '../noc-service-preview-behaviors';\nimport {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {transformState} from './transformState';\n\nimport {view} from './view.js';\nimport styles from './nocTilemapContainer.scss';\nimport resizeBehavior from \"@servicenow/behavior-resize\";\nimport {nocTilemapSelectGroupBehavior} from '../noc-tilemap-data-behavior/nocTilemapSelectGroupBehavior';\nimport nocTilemapSelectGroupEffect from '../noc-tilemap-data-behavior/nocTilemapSelectGroupEffect';\n\ncreateNocElement('noc-tilemap-container', {\n    view,\n    transformState,\n    onBootstrap(host, dispatch) {\n        dispatch(CONSTANTS.ACTION_TYPES.NOC_COMPONENT_CONNECTED, {}, {stopPropagation: true});\n    },\n\n    styles,\n\n    properties: {\n        nocAppRef: {\n            default: null\n        },\n\n        //current timestamp of changes manager.\n        timestamp: {\n            default: null,\n\n            //when STATUS timestamp changes, request servicePreview refresh (the effect will refresh only if relevant)\n            onChange(value, prevValue, dispatch) {\n                if (value !== prevValue && !isNaN(parseInt(value)))\n                    dispatch(CONSTANTS.ACTION_TYPES.REFRESH_SERVICE_PREVIEW_REQUESTED, {timestamp: value});\n            }\n        },\n\n        /**\n         {groupByField: \"cost\"\n         groupByOrder: \"asc\"\n         maxColumnsInRow: 3\n         maxItemsInColumn: 50\n         sortByField: \"location\"\n         sortByOrder: \"asc\"}\n         */\n        tilemapsFormat: {\n            default: null,\n            onChange(value, prevValue, dispatch) {\n                //In case changing from regular services into service group we need to reset the drill down if exists\n                const oldVal = (prevValue && prevValue.businessServiceGroup) ? prevValue.businessServiceGroup : null;\n                const newVal = (value && value.businessServiceGroup) ? value.businessServiceGroup : null;\n                if (newVal && (newVal !== oldVal)) {\n                    //Reset the drill down since  Service Group Exists\n                    dispatch(nocTilemapSelectGroupEffect.ACTION_TYPES.TILEMAP_SELECT_REGULAR_GROUP, {name: ''});\n                }\n            }\n        },\n\n        /**\n         {groupByFields: (4) [{…}, {…}, {…}, {…}]\n         hoverTooltipFields: (2) [{…}, {…}]\n         searchFields: [{…}]\n         sortByFields: (4) [{…}, {…}, {…}, {…}]}\n         **/\n        tilemapsConfig: {\n            selectable: true,\n            default: {}\n        },\n\n        /***\n         * tree,\n         * breadcrumb,\n         * buckets\n         */\n        serviceGroups: {\n            default: null\n        },\n\n        population: {\n            default: null\n        },\n\n        severities: {\n            default: null\n        },\n\n        categorizedModel: {\n            selectable: true,\n            default: null\n        },\n\n        choicesFieldsModel: {\n            selectable: true,\n            default: null\n        },\n\n        servicePreviewData: {\n            selectable: true,\n            default: null\n        },\n\n        popover: {\n            selectable: true,\n            default: {}\n        },\n\n        searchTerm: {\n            selectable: true,\n            default: ''\n        },\n\n        workspace: {\n            //bringing workspace directly from parent. Cannot listen on selectable, it's not resolved onBootstrap().\n            default: CONSTANTS.DEFAULTS.WORKSPACE\n        },\n\n        impactedServicesAlertIds: {\n            default: null\n        },\n\n        isImpactedServicesLoading: {\n            default: false\n        },\n\n        selectedAlert: {\n            default: null\n        },\n    },\n    behaviors: [\n        {behavior: resizeBehavior, options: {timer: {wait: 1000}}},\n        nocTilemapDataBehavior.behavior,\n        nocPopoverBehavior.behavior,\n        nocServicePreviewBehaviors.behaviors.nocServicePreviewBehavior,\n        nocTilemapSelectGroupBehavior\n    ]\n});","import {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {isEmpty as _isEmpty} from 'lodash';\nimport '../noc-tilemap-container';\n\nexport const getNocTilemapContainerJsx = (state, nocAppRef, workspace, isEm) => {\n    const {\n        severities,\n        tilemapsFormat,\n        timestampForTiles,\n    } = state.properties;\n\n\tconst serviceGroups = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/serviceGroups`;\n    const enabledPopulation = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/enabledPopulation`;\n    const impactedServicesAlertIds = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/impactedServicesAlertIds`;\n    const isImpactedServicesLoading = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/isImpactedServicesLoading`;\n    const selectedAlert = `@${CONSTANTS.DEFAULTS.NOC_APP_COMPONENT_ID}/selectedAlert`;\n\n    //TODO: Arik: use the selectable (timestamp, severities...)\n    const cond = (isEm && !_isEmpty(severities)) || !isEm;\n    const tilemapContainer = cond ?\n        <noc-tilemap-container\n            key='noc_tilemap_container_key'\n            nocAppRef={nocAppRef}\n            population={enabledPopulation}\n            workspace={workspace}\n            timestamp={timestampForTiles}\n            className='tilemap-container eds-inline -inline-start'\n            serviceGroups={serviceGroups}\n            severities={severities}\n            impacted-services-alert-ids={impactedServicesAlertIds}\n            is-impacted-services-loading={isImpactedServicesLoading}\n            selected-alert={selectedAlert}\n            tilemapsFormat={tilemapsFormat}\n            component-id={CONSTANTS.DEFAULTS.NOC_TILEMAP_CONTAINER_COMPONENT_ID}/> : null;\n\n    return  tilemapContainer;\n}\n\n","import {CONSTANTS, snOpwsAlertCardActionTypes} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n    OPEN_ALERT_FORM_INVOKED: snOpwsAlertCardActionTypes.OPEN_ALERT_FORM_INVOKED\n};\nconst openAlertForm = coeffects => {\n    const {\n        action: {payload},\n        dispatch\n    } = coeffects;\n\n    const {\n        alertId\n    } = payload;\n\n    dispatch(CONSTANTS.ACTION_TYPES.ITEM_SELECTED, {\n        table: CONSTANTS.TABLES_NAMES.EM_ALERT,\n        sys_id: alertId,\n        parent_table: CONSTANTS.TABLES_NAMES.EM_ALERT,\n        parent_sys_id: alertId\n    });\n};\n\nconst effectHandlers = {\n    openAlertForm\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, LOGGING, checkForError, deepFreeze, formatAlertsResponse} from '@devsnc/library-opws-mapping-shared';\nimport effectImpactedServices from '../noc-app/effectImpactedServices';\nimport effectAlertSelected from '../noc-app/effectAlertSelected';\n\nconst ACTION_TYPES = {\n    NOC_GET_ALERTS_REQUESTED: 'NOC_ALERTS_REQUESTED',\n    NOC_GET_ALERTS_REQUEST_STARTED: 'NOC_GET_ALERTS_REQUEST_STARTED',\n    NOC_GET_ALERTS_REQUEST_SUCCEEDED: 'NOC_GET_ALERTS_REQUEST_SUCCEEDED',\n    NOC_GET_ALERTS_REQUEST_FAILED: 'NOC_GET_ALERTS_REQUEST_FAILED'\n};\n\nconst saveAlerts = coeffects => {\n    LOGGING.info('saveAlerts', {caller: 'snNocAlertsPanelEffect#saveAlerts'});\n    const {\n        dispatch,\n        updateState,\n        updateProperties,\n        action: {payload}\n    } = coeffects;\n\n    const {\n        alerts = [],\n        totalRecords,\n        lastUpdated\n    } = payload;\n\n    const errors = checkForError({payload, dispatch, caller: 'snNocAlertsPanelEffect#saveAlerts'});\n\n    const formattedAlerts = (errors) ? null : deepFreeze(formatAlertsResponse(alerts));\n\n    updateState({\n        isLoading: false,\n        totalRecords\n    });\n\n    updateProperties({\n        alerts: formattedAlerts\n    });\n};\n\n\nconst getAlerts = createHttpEffect('/api/sn_nocpit/nocpit/AllAlertsForBs', {\n    method: 'POST',\n    startActionType: ACTION_TYPES.NOC_GET_ALERTS_REQUEST_STARTED,\n    successActionType: ACTION_TYPES.NOC_GET_ALERTS_REQUEST_SUCCEEDED,\n    errorActionType: ACTION_TYPES.NOC_GET_ALERTS_REQUEST_FAILED\n});\n\nconst getAlertsError = coeffects => {\n    const {\n        updateState,\n        dispatch,\n        action: {payload}\n    } = coeffects;\n\n    updateState({isLoading: false});\n\n    dispatch(CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED, payload);\n};\n\nconst alertsSortingChanged = coeffects => {\n    const {\n        updateState,\n        dispatch,\n        properties: {alertPreferences},\n        action: {payload: {selectedSortOption: defaultAlertsSorting}}\n    } = coeffects;\n\n    dispatch(CONSTANTS.ACTION_TYPES.ALERT_PREFERENCES_SAVE_REQUESTED, {alertPreferences: {...alertPreferences, defaultAlertsSorting}});\n};\n\nconst refreshAlerts = coeffects => {\n    const {\n        dispatch,\n        action,\n        updateState\n    } = coeffects;\n\n    LOGGING.info('refreshAlerts', {caller: 'snNocAlertsPanelEffect'});\n    const {selectedSortOption, selectedType: {sortOptions}} = action.payload;\n    const sortedBy = sortOptions.filter(s => s.id === selectedSortOption);\n    const {order, field: sortingColumnName} = sortedBy[0];\n\n\n    const data = {\n        isOrderASC: order === 'asc' ? true : false,\n        sortingColumnName,\n        firstRow: '',\n        timestamp: ''\n\n    };\n\n    updateState({isLoading: true});\n\n    dispatch(ACTION_TYPES.NOC_GET_ALERTS_REQUESTED, {data});\n};\n\nconst selectAlert = ({dispatch, action}) => {\n    LOGGING.info('selectAlert', {caller: 'snNocAlertsPanelEffect'});\n    const {isSelected, item} = action.payload;\n\n    if (isSelected) {\n        const {id: alertId, groupId, ciId} = item;\n        const queryParams = {\n            alertId,\n            groupId: (groupId) ? groupId : ' ',\n            ciId\n        };\n\n        // updating state to set id of selected alert.\n        dispatch(effectAlertSelected.ACTION_TYPES.NOC_SELECT_ALERT_CARD, {selectedAlert: item});\n        // Bring the sys ids of the services that are impacted by the alert\n        dispatch(effectImpactedServices.ACTION_TYPES.GET_IMPACTED_SERVICES_REQUEST, queryParams);\n    } else {\n        dispatch(effectImpactedServices.ACTION_TYPES.CLEAR_IMPACTED_SERVICES_REQUEST);\n    }\n};\n\nexport const effectHandlers = {\n    alertsSortingChanged,\n    refreshAlerts,\n    getAlerts,\n    saveAlerts,\n    getAlertsError,\n    selectAlert\n};\n\nexport default {\n    ACTION_TYPES,\n    effectHandlers\n};\n","import {snOpwsRelatedItemsListItemTypes} from '@devsnc/library-opws-mapping-shared';\n\nexport default state => {\n\tconst {\n\t\tisLoading,\n\t\ttotalRecords,\n\t\tproperties: {\n\t\t\talerts,\n\t\t\theaderTitle,\n\t\t\tselectedAlert,\n\t\t\talertPreferences: {\n\t\t\t\tdefaultAlertsSorting\n\t\t\t}\n\t\t}\n\t} = state;\n\n\tconst selectedAlertId = selectedAlert ? selectedAlert.id : '';\n\treturn (\n\t\t<sn-opws-related-items-list\n\t\t\tmanage-selected-item-id\n\t\t\tselected-sort-option={defaultAlertsSorting}\n\t\t\tselected-item-id={selectedAlertId}\n\t\t\tis-loading={isLoading}\n\t\t\titems={alerts ? alerts : []}\n\t\t\tlast-updated={Date.now()}\n\t\t\ttotal-records={totalRecords}\n\t\t\titem-types={snOpwsRelatedItemsListItemTypes}\n\t\t\theader-title={headerTitle}\n\t\t/>\n\t);\n};","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-start:.125rem;margin-block-end:.125rem}.now-m-block--xs{margin-block-start:.25rem;margin-block-end:.25rem}.now-m-block--sm{margin-block-start:.5rem;margin-block-end:.5rem}.now-m-block--md{margin-block-start:.75rem;margin-block-end:.75rem}.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block--xl{margin-block-start:1.5rem;margin-block-end:1.5rem}.now-m-block--xxl{margin-block-start:2rem;margin-block-end:2rem}.now-m-block--3xl{margin-block-start:2.5rem;margin-block-end:2.5rem}.now-m-block--0{margin-block-start:0;margin-block-end:0}.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-start--0{margin-block-start:0}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-block-end--0{margin-block-end:0}.now-m-inline--xxs{margin-inline-start:.125rem;margin-inline-end:.125rem}.now-m-inline--xs{margin-inline-start:.25rem;margin-inline-end:.25rem}.now-m-inline--sm{margin-inline-start:.5rem;margin-inline-end:.5rem}.now-m-inline--md{margin-inline-start:.75rem;margin-inline-end:.75rem}.now-m-inline--lg{margin-inline-start:1rem;margin-inline-end:1rem}.now-m-inline--xl{margin-inline-start:1.5rem;margin-inline-end:1.5rem}.now-m-inline--xxl{margin-inline-start:2rem;margin-inline-end:2rem}.now-m-inline--3xl{margin-inline-start:2.5rem;margin-inline-end:2.5rem}.now-m-inline--0{margin-inline-start:0;margin-inline-end:0}.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-start:.125rem;padding-block-end:.125rem}.now-p-block--xs{padding-block-start:.25rem;padding-block-end:.25rem}.now-p-block--sm{padding-block-start:.5rem;padding-block-end:.5rem}.now-p-block--md{padding-block-start:.75rem;padding-block-end:.75rem}.now-p-block--lg{padding-block-start:1rem;padding-block-end:1rem}.now-p-block--xl{padding-block-start:1.5rem;padding-block-end:1.5rem}.now-p-block--xxl{padding-block-start:2rem;padding-block-end:2rem}.now-p-block--3xl{padding-block-start:2.5rem;padding-block-end:2.5rem}.now-p-block--0{padding-block-start:0;padding-block-end:0}.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-block-end--0{padding-block-end:0}.now-p-inline--xxs{padding-inline-start:.125rem;padding-inline-end:.125rem}.now-p-inline--xs{padding-inline-start:.25rem;padding-inline-end:.25rem}.now-p-inline--sm{padding-inline-start:.5rem;padding-inline-end:.5rem}.now-p-inline--md{padding-inline-start:.75rem;padding-inline-end:.75rem}.now-p-inline--lg{padding-inline-start:1rem;padding-inline-end:1rem}.now-p-inline--xl{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline--xxl{padding-inline-start:2rem;padding-inline-end:2rem}.now-p-inline--3xl{padding-inline-start:2.5rem;padding-inline-end:2.5rem}.now-p-inline--0{padding-inline-start:0;padding-inline-end:0}.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,22,27,28))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,22,27,28))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,66,80,81))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,99,114,116))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.labels-container{flex-wrap:wrap}.font-md{font-size:1rem}.font-sm{font-size:.75rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/lib/loader.js??ref--6-3!./snNocAlertsPanel.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {\n    createNocElement, \n    createActionConfig, \n    snOpwsRelatedItemsListActionTypes, \n    snOpwsAlertCardActionTypes\n} from '@devsnc/library-opws-mapping-shared';\n\nimport styles from './snNocAlertsPanel.scss';\nimport view from './snNocAlertsPanelView';\nimport effects from './snNocAlertsPanelEffect';\nimport snNocOpenAlertEffect from './snNocOpenAlertEffect';\n\n\ncreateNocElement('sn-noc-alerts-panel', {\n    view,\n    styles,\n\n    initialState: {\n        isLoading: false,\n        totalRecords: 0\n    },\n\n    properties: {\n        alerts: {\n            default: null\n        },\n        headerTitle: {\n            default: ''\n        },\n        selectedAlert: {\n            default: null\n        },\n        alertPreferences: {\n            default: null\n        }\n    },\n\n    actionHandlers: {\n        [snOpwsRelatedItemsListActionTypes.SORT_SELECTED]:\n            createActionConfig(effects.effectHandlers.alertsSortingChanged),\n\n       [snOpwsRelatedItemsListActionTypes.REFRESH_REQUESTED]:\n            createActionConfig(effects.effectHandlers.refreshAlerts),\n\n        [snOpwsAlertCardActionTypes.ALERT_CARD_SELECTED]:\n            createActionConfig(effects.effectHandlers.selectAlert),\n\n        [effects.ACTION_TYPES.NOC_GET_ALERTS_REQUESTED]:\n            createActionConfig(effects.effectHandlers.getAlerts),\n\n        [effects.ACTION_TYPES.NOC_GET_ALERTS_REQUEST_SUCCEEDED]:\n            createActionConfig(effects.effectHandlers.saveAlerts),\n\n        [effects.ACTION_TYPES.NOC_GET_ALERTS_REQUEST_FAILED]:\n            createActionConfig(effects.effectHandlers.getAlertsError),\n\n        [snNocOpenAlertEffect.ACTION_TYPES.OPEN_ALERT_FORM_INVOKED]:\n            createActionConfig(snNocOpenAlertEffect.effectHandlers.openAlertForm)\n\n\n\n\n    }\n});","import './snNocAlertsPanel';","module.exports = __TECTONIC__$servicenow_now_record_common;","import '@servicenow/now-record-common';\nimport '../sn-noc-alerts-panel';\nimport {t} from 'sn-translate';\n\nconst FILTER_BY_ALERT = t('Filter services by alerts');\nconst sidePanelPayload = {\n    sidePanelStatePropertyName: 'sidePanel'\n};\n\nconst getAlertsTab = (selectedAlert, alertPreferences) => {\n    const actionAttributes = {\n        headerTitle: FILTER_BY_ALERT,\n        selectedAlert,\n        alertPreferences\n    };\n\n    return {\n        actionComponent: 'sn-noc-alerts-panel',\n        actionAttributes,\n        order: 0,\n        assignmentId: 'sn-noc-alerts-panel',\n        name: 'sn-noc-alerts-panel',\n        tooltip: FILTER_BY_ALERT,\n        icon: 'list-fill'\n    };\n};\n\nexport const getNocSidePanelJsx = (state, isEm) => {\n    const {\n        sidePanel, \n        selectedAlert,\n        alertPreferences\n    } = state.properties;\n\n    const actions = [\n        getAlertsTab(selectedAlert, alertPreferences)\n    ];\n\n    const wrapperClasses = {\n        'noc-side-panel': true,\n        'is-open': sidePanel\n    };\n\n    const nocSidePanelJsx = isEm ? \n        <now-record-common-sidebar \n            class={wrapperClasses}\n            append-to-payload={sidePanelPayload}\n            actions={actions} \n            manage-opened\n            opened={sidePanel}\n            /> :\n            null;\n            \n    return nocSidePanelJsx;\n};\n\n","import {LOGGING} from '../../utils';\nimport {actionTypes as seismicActionTypes} from '@servicenow/ui-core';\n\nconst {\n\tCOMPONENT_CONNECTED,\n\tCOMPONENT_DISCONNECTED,\n} = seismicActionTypes;\n\nconst CHECK_INTERVAL_MS = 1000; //1 second\n\nconst ACTION_TYPES = {\n\tSTART_CHECKS: COMPONENT_CONNECTED,\n\tSTOP_CHECKS: COMPONENT_DISCONNECTED,\n\tCHECK_IF_VISIBLE: 'SN_OPWS_CHECK_IS_VISIBLE#DO_CHECK',\n\tDEFAULT_ON_CHANGE: 'SN_OPWS_CHECK_IS_VISIBLE#CHANGED'\n};\n\nconst triggerNextTick = dispatch => () => dispatch(ACTION_TYPES.CHECK_IF_VISIBLE, {});\n\nconst startChecking = ({dispatch}) => \n\ttriggerNextTick(dispatch)();\n\n/**\n * Testing if given DOM element is visible on the screen.\n * https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n * @param {*} ref - ref object created by createRef()\n */\nconst isElementVisible = ref =>\n\tref && ref.current && ref.current.offsetParent !== null;\n\nconst checkIfVisible = coeffects => {\n\tconst {\n\t\tstate: {\n\t\t\tisVisible\n\t\t},\n\t\tproperties: {\n\t\t\tanchorElm,\n\t\t\tactionOnChange\n\t\t},\n\t\tupdateState,\n\t\tdispatch\n\t} = coeffects;\n\n\tLOGGING.debug('effectIsVisible#checkIfVisible');\n\n\tif (isElementVisible(anchorElm) !== isVisible) {\n\t\tLOGGING.info(`isVisible was changed to ${!isVisible}. Dispatching ${actionOnChange}`, {caller: 'effectIsVisible.checkIfVisible'});\n\t\t//notify about change in visibility\n\t\tdispatch(actionOnChange, {\n\t\t\tisVisible: !isVisible\n\t\t});\n\n\t\t//keep state up-to-date\n\t\tupdateState({\n\t\t\tisVisible: !isVisible\n\t\t});\n\t}\n\n\t//set next interval\n\tconst visibilityInterval = setTimeout(triggerNextTick(dispatch), CHECK_INTERVAL_MS);\n\n\tupdateState({visibilityInterval});\n};\n\nconst stopChecking = coeffects => {\n\tconst {\n\t\tvisibilityInterval = null\n\t} = coeffects.state;\n\n\tLOGGING.info('effectIsVisible#stopChecking');\n\tclearTimeout(visibilityInterval);\n};\n\nconst effectHandlers = {\n\tstartChecking,\n\tcheckIfVisible,\n\tstopChecking\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","export const extendWithDefaults = (name, baseConfig, options = {}) => {\n\treturn {\n\t\t...baseConfig,\n\t\tinitialState: {\n\t\t\t...baseConfig.initialState,\n\t\t\textensions: {\n\t\t\t\t...baseConfig.extensions,\n\t\t\t\tdefaults: {\n\t\t\t\t\textend: function(extension) {\n\t\t\t\t\t\t// TODO load specific extension by name (AFTER component creation)\n\t\t\t\t\t\t// TODO need to register this to 'window'?\n\t\t\t\t\t},\n\t\t\t\t\t...options\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n","import {PERFORMANCE} from '../utils';\n\nexport const extendWithPerformance = (name, baseConfig, options = {}) => {\n\treturn {\n\t\t...baseConfig,\n\t\trenderer: {\n\t\t\tview: viewWrapper(baseConfig.renderer.view)\n\t\t},\n\t\tinitialState: {\n\t\t\t...baseConfig.initialState,\n\t\t\textensions: {\n\t\t\t\tperformance: {\n\t\t\t\t\tallow: true,\n\t\t\t\t\tsuffix: name,\n\t\t\t\t\t...options\n\t\t\t\t},\n\t\t\t\t...baseConfig.extensions\n\t\t\t}\n\t\t}\n\t};\n};\n\nconst viewWrapper = view => (function(state, dispatch) {\n\treturn PERFORMANCE.measureCall(view, [state, dispatch], true, state.extensions.performance);\n});\n","const IN_DEV_OVERRIDE = false;\n\n/**\n *\n * @param params\n * @constructor\n */\nexport function Misc(params = {}) {\n\t/**\n\t *\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._inDev_override = IN_DEV_OVERRIDE;\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tthis.isInDev = function() {\n\t\treturn process.env.NODE_ENV === 'development' || this._inDev_override;\n\t};\n}","/**\n * TODO Requested: a single function for turning on all options (objects, tables, etc.)\n * TODO Requested: By default, print the caller function name in logging same as Performance is doing\n * TODO Requested: When printing Performance logs, use keys/tags to group same\n */\n\nimport {\n\tcloneDeep as _cloneDeep,\n\tget as _get,\n\tisArray as _isArray,\n\tisEmpty as _isEmpty,\n\tisFunction as _isFunction,\n\tisObject as _isObject,\n\tmapValues as _mapValues\n} from 'lodash';\n\nconst DEFAULT_PREFIX = 'NOC';\nconst HIDDEN_OBJECT_DATA = '{Hidden Object Data}';\n\nconst LOG_LEVEL_TRACE = 'trace';\nconst LOG_LEVEL_DEBUG = 'debug';\nconst LOG_LEVEL_LOG = 'log';\nconst LOG_LEVEL_INFO = 'info';\nconst LOG_LEVEL_WARN = 'warn';\nconst LOG_LEVEL_ERROR = 'error';\n\nexport const LogLevel = Object.freeze({\n\tTRACE: {name: LOG_LEVEL_TRACE, order: 100},\n\tDEBUG: {name: LOG_LEVEL_DEBUG, order: 200},\n\tLOG: {name: LOG_LEVEL_LOG, order: 300},\n\tINFO: {name: LOG_LEVEL_INFO, order: 400},\n\tWARN: {name: LOG_LEVEL_WARN, order: 500},\n\tERROR: {name: LOG_LEVEL_ERROR, order: 600},\n\n\tparse: (logLevel) => {\n\t\treturn logLevel ? (typeof logLevel === 'object') ? logLevel : LogLevel[logLevel.toUpperCase()] : null;\n\t},\n\n\torder: (logLevel) => {\n\t\tlogLevel = parse(logLevel);\n\t\treturn logLevel ? logLevel.order : -1;\n\t}\n});\n\n\nconst TARGET_CONSOLE = 'console';\nconst TARGET_SERVER = 'server';\nconst TARGET_NOTIFICATION = 'notification';\nexport const Target = Object.freeze({\n\tCONSOLE: TARGET_CONSOLE,\n\tSERVER: TARGET_SERVER,\n\tNOTIFICATION: TARGET_NOTIFICATION,\n\n\tparse: (target) => {\n\t\treturn target ? (typeof target === 'object') ? target : Target[target.toUpperCase()] : null;\n\t}\n});\n\n/**\n * TODO\n *\n * @param msg\n * @param prefix\n * @param caller\n * @returns {string}\n * @private\n */\nconst _SERVER_FORMATTER = function(msg, {suffix, caller}) {\n};\n\n/**\n *\n * @param msg\n * @param prefix\n * @param caller\n * @returns {string}\n * @private\n */\nconst _NOTIFICATION_FORMATTER = function(msg, {suffix, caller}) {\n\treturn (caller ? (_isFunction(caller) ? caller.name : caller) + ': ' : '') + msg;\n};\n\n/**\n *\n * @param msg\n * @param prefix\n * @param caller\n * @returns {string}\n * @private\n */\nconst _CONSOLE_FORMATTER = function(msg, {prefix, suffix, caller}) {\n\tconst callerName = caller ? (_isFunction(caller) ? caller.name : caller) : '';\n\n\tif (_isArray(msg)) {\n\t\tmsg = msg.join('');\n\t}\n\n\tconst parts = [prefix, suffix, callerName];\n\n\tconst text = '[' + parts.reduce((previous, current) =>\n\t\t(_isEmpty(current) ? previous : previous + '.' + current)) + ']: ' + msg;\n\n\treturn text;\n};\n\n/**\n *\n * @type {function(*=, {prefix: *, suffix?: *, caller?: *}): string}\n * @private\n */\nconst _DEFAULT_FORMATTER = _CONSOLE_FORMATTER;\n\n/**\n * Get the formatter/s from the options\n *\n *\n * @param target\n * @param options\n * @returns {*}\n * @private\n */\nconst _getMsgFormatter = function(target, options) {\n\tif (options && _isFunction(options)) {\n\t\treturn options;\n\t}\n\n\tconst {formatter} = options.targets[target];\n\n\treturn formatter ? formatter : _DEFAULT_FORMATTER;\n};\n\n/**\n *\n * @param target\n * @returns {*}\n * @private\n */\nconst _getTargetFn = function(target) {\n\tif (_isFunction(target)) {\n\t\treturn target;\n\t}\n\n\tswitch (target) {\n\t\tcase Target.NOTIFICATION:\n\t\t\treturn _messageToNotification;\n\t\tcase Target.SERVER:\n\t\t\treturn _messageToServer;\n\t\tcase Target.CONSOLE:\n\t\t\treturn _messageToConsole;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\n/**\n *\n * @param msg\n * @param logLevel\n * @param options\n * @private\n */\nconst _messageToConsole = function(msg, logLevel, options) {\n\tconst {extra, output: {tables, objects, stringify}} = options;\n\n\tlogLevel = LogLevel.parse(logLevel);\n\tconst logger = console[logLevel.name] || console.log;\n\n\t// if to print objects or 'extra' is not an object, allow to print\n\tlet extraOutput;\n\t//extraOutput = objects || !_isObject(extra) ? extra : '';\n\tif (extra) {\n\t\tif (_isObject(extra)) {\n\t\t\textraOutput = objects ? (stringify ? JSON.stringify(extra) : extra) : HIDDEN_OBJECT_DATA;\n\t\t} else {\n\t\t\textraOutput = extra;\n\t\t}\n\t} else {\n\t\textraOutput = '';\n\t}\n\n\tlogger ? logger(msg, extraOutput) : null;\n\n\tif (tables && _isArray(extra)) {\n\t\tconsole.table(extra);\n\t}\n};\n\n/**\n * TODO eds-alert\n * @param msg\n * @private\n */\nconst _messageToNotification = function(msg) {\n\twindow.alert(msg);\n};\n\n/**\n * TODO\n * @param msg\n * @param logLevel\n * @param options\n * @private\n */\nconst _messageToServer = function(msg, logLevel, options) {\n\t_messageToConsole(msg, logLevel, options);\n};\n\n/**\n *\n * @param msg\n * @param logLevel\n * @param options\n * @param target\n * @param _caller\n * @private\n */\nconst _message = function(msg, logLevel, options, target, _caller) {\n\tconst targetFn = _getTargetFn(target);\n\n\tif (targetFn) {\n\t\tconst formatter = _getMsgFormatter(target, options);\n\t\tconst formatterMsg = formatter ? formatter(msg, options) : msg;\n\n\t\ttargetFn(formatterMsg, logLevel, options, target, _caller);\n\t}\n};\n\n/**\n * Default options set at start. Can be overridden by the user at the construction stage\n * or/and in each message sent.\n */\nconst defaultOptions = Object.freeze({\n\tprefix: DEFAULT_PREFIX,\n\tsuffix: '',\n\t// tags\n\ttags: [],\n\t// allow and log level of each of the existing possible targets\n\ttargets: {\n\t\t[Target.CONSOLE]: {\n\t\t\tallow: true,\n\t\t\tformatter: _CONSOLE_FORMATTER,\n\t\t\tlogLevel: LogLevel.INFO\n\t\t},\n\t\t[Target.SERVER]: {\n\t\t\tallow: false,\n\t\t\tformatter: _SERVER_FORMATTER,\n\t\t\tlogLevel: LogLevel.WARN\n\t\t},\n\t\t[Target.NOTIFICATION]: {\n\t\t\tallow: false,\n\t\t\tformatter: _NOTIFICATION_FORMATTER,\n\t\t\tlogLevel: LogLevel.WARN\n\t\t}\n\t},\n\n\t// force logging, even if log level does not match\n\tforce: false,\n\t// Allow printing output of the following types\n\toutput: {\n\t\t//if possible, extra value will be printed as a table (if it exists and is an Array)\n\t\ttables: false,\n\t\t//if possible, extra value will be printed as an object (if it exists)\n\t\tobjects: false,\n\t\t// Objects will be stringify-ied to save on memory (must also set objects=true in order to affect)\n\t\tstringify: false,\n\t\t// Allow the use of triggered logging\n\t\ttriggers: false\n\t}\n});\n\n\n/**\n *\n * @param options\n * @constructor\n */\nexport function Logging(options = {}) {\n\ttry {\n\t\t/**\n\t\t * @param target\n\t\t * @param options\n\t\t * @returns {*}\n\t\t */\n\t\tthis.getAllow = (target, options = this.options) => {\n\t\t\treturn target ? _get(options.targets, `${target}.allow`, false) :\n\t\t\t\t_mapValues(options.targets, target => target.allow);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param allow\n\t\t * @param targets\n\t\t */\n\t\tthis.setAllow = (allow, targets = Object.keys(Target)) => {\n\t\t\ttargets = _isArray(targets) ? targets : [targets];\n\t\t\ttargets.forEach(target => {\n\t\t\t\tconst pT = Target.parse(target);\n\t\t\t\tif (pT) {\n\t\t\t\t\tconst iT = this.options.targets[pT];\n\t\t\t\t\tiT.allow = allow;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Reset 'allow' to the the Browser window state (use default)\n\t\t */\n\t\tthis.resetAllow = () => {\n\t\t\tconst {targets} = defaultOptions;\n\t\t\tif (targets) {\n\t\t\t\tconst targetKeys = this.options.targets && Object.keys(this.options.targets);\n\n\t\t\t\ttargetKeys.forEach(target => {\n\t\t\t\t\tthis.setAllow(targets[target].allow, target);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param target\n\t\t * @param options\n\t\t * @returns {*}\n\t\t */\n\t\tthis.getLogLevel = (target, options = this.options) => {\n\t\t\treturn target ? _get(options.targets, `${target}.logLevel`, null) :\n\t\t\t\t_mapValues(options.targets, target => target.logLevel);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param logLevel\n\t\t * @param targets\n\t\t */\n\t\tthis.setLogLevel = (logLevel, targets = Object.keys(Target)) => {\n\t\t\ttargets = _isArray(targets) ? targets : [targets];\n\t\t\ttargets.forEach(target => {\n\t\t\t\tconst pT = Target.parse(target);\n\t\t\t\tif (pT) {\n\t\t\t\t\tconst iT = this.options.targets[pT];\n\t\t\t\t\tiT.logLevel = LogLevel.parse(logLevel);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Reset 'logLevel' to the the Browser window state (use default)\n\t\t */\n\t\tthis.resetLogLevel = () => {\n\t\t\tconst {targets} = defaultOptions;\n\t\t\tif (targets) {\n\t\t\t\tconst targetKeys = this.options.targets && Object.keys(this.options.targets);\n\n\t\t\t\ttargetKeys.forEach(target => {\n\t\t\t\t\tthis.setLogLevel(targets[target].logLevel, target);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param target\n\t\t * @param options\n\t\t * @param logLevel\n\t\t */\n\t\tthis.canLog = (target, logLevel, options = this.options) => {\n\t\t\tif (this.getAllow(target, options)) {\n\t\t\t\tconst targetLogLevel = this.getLogLevel(target, options);\n\t\t\t\tlogLevel = LogLevel.parse(logLevel);\n\n\t\t\t\treturn logLevel && targetLogLevel && logLevel.order >= targetLogLevel.order;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t * @param target\n\t\t * @param options\n\t\t * @returns {*}\n\t\t */\n\t\tthis.getFormatter = (target, options = this.options) => {\n\t\t\treturn target ? _get(options.targets, `${target}.formatter`, null) :\n\t\t\t\t_mapValues(options.targets, target => target.formatter);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param formatter\n\t\t * @param targets\n\t\t */\n\t\tthis.setFormatter = (formatter, targets = Object.keys(Target)) => {\n\t\t\ttargets = _isArray(targets) ? targets : [targets];\n\t\t\ttargets.forEach(target => {\n\t\t\t\tconst pT = Target.parse(target);\n\t\t\t\tif (pT) {\n\t\t\t\t\tconst iT = this.options.targets[pT];\n\t\t\t\t\tiT.formatter = formatter;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Reset 'formatter' to the the Browser window state (use default)\n\t\t */\n\t\tthis.resetFormatters = () => {\n\t\t\tconst {targets} = defaultOptions;\n\t\t\tif (targets) {\n\t\t\t\tconst targetKeys = this.options.targets && Object.keys(this.options.targets);\n\n\t\t\t\ttargetKeys.forEach(target => {\n\t\t\t\t\tthis.setFormatter(targets[target].formatter, target);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Reset 'formatter' to the the Browser window state (use default)\n\t\t */\n\t\tthis.resetFormatters = () => {\n\t\t\tconst {targets} = defaultOptions;\n\t\t\tif (targets) {\n\t\t\t\tconst targetKeys = this.options.targets && Object.keys(this.options.targets);\n\n\t\t\t\ttargetKeys.forEach(target => {\n\t\t\t\t\tthis.setFormatter(targets[target].formatter, target);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Generic call to send message to targets\n\t\t *\n\t\t * @param msg\n\t\t * @param logLevel\n\t\t * @param options\n\t\t * @param targets\n\t\t */\n\t\tthis.message = (msg, logLevel, options = {}, targets = []) => {\n\t\t\tconst mergedOptions = {...this.options, ...options};\n\t\t\tconst {force} = mergedOptions;\n\n\t\t\ttargets = _isArray(targets) ? targets : [targets];\n\t\t\tmsg = _isArray(msg) ? msg : [msg];\n\n\t\t\ttargets.forEach(target => {\n\t\t\t\tif (force || this.canLog(target, logLevel, mergedOptions)) {\n\n\t\t\t\t\tlet canContinue;\n\n\t\t\t\t\t// check tags\n\t\t\t\t\tconst {tags, output: {triggers}} = mergedOptions;\n\t\t\t\t\tif (triggers) {\n\t\t\t\t\t\tif (!_isEmpty(tags)) {\n\t\t\t\t\t\t\t// locate tag that exists and is started\n\t\t\t\t\t\t\tcanContinue = tags.find((tag) => {\n\t\t\t\t\t\t\t\tconst _tag = this.tags[tag];\n\n\t\t\t\t\t\t\t\treturn (_tag && _tag.started);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// cancel, no tags but needs to use them\n\t\t\t\t\t\t\tcanContinue = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcanContinue = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (canContinue) {\n\t\t\t\t\t\t_message(msg, logLevel, mergedOptions, target, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * TODO Send message to server\n\t\t *\n\t\t * @param msg\n\t\t * @param logLevel\n\t\t * @param options\n\t\t */\n\t\tthis.post = (msg, logLevel, options = {}) => {\n\t\t\tthis.message(msg, logLevel, options, [Target.SERVER]);\n\t\t};\n\n\t\t/**\n\t\t * TODO Send message to notification\n\t\t *\n\t\t * @param msg\n\t\t * @param logLevel\n\t\t * @param options\n\t\t */\n\t\tthis.notify = (msg, logLevel, options = {}) => {\n\t\t\tthis.message(msg, logLevel, options, [Target.NOTIFICATION]);\n\t\t};\n\n\t\t/**\n\t\t * Send message to console logger\n\t\t *\n\t\t * @param msg      - Array or a String containing the message you want to print\n\t\t * @param logLevel - The log level of this message. Should be higher or equal to\n\t\t *                   the log level currently set in logging component.\n\t\t * @param options  - Additional options object. Merged with the current state of\n\t\t *                   options\n\t\t */\n\t\tthis.log = (msg, logLevel = LogLevel.INFO, options = {}) => {\n\t\t\tthis.message(msg, logLevel, options, [Target.CONSOLE]);\n\t\t};\n\t\t/**\n\t\t * Send messages with log level TRACE\n\t\t * @param msg\n\t\t * @param options\n\t\t */\n\t\tthis.trace = (msg, options = {}) => {\n\t\t\tthis.message(msg, LogLevel.TRACE, options, [Target.CONSOLE]);\n\t\t};\n\t\t/**\n\t\t * Send messages with log level DEBUG\n\t\t * @param msg\n\t\t * @param options\n\t\t */\n\t\tthis.debug = (msg, options = {}) => {\n\t\t\tthis.message(msg, LogLevel.DEBUG, options, [Target.CONSOLE]);\n\t\t};\n\t\t/**\n\t\t * Send messages with log level INFO\n\t\t * @param msg\n\t\t * @param options\n\t\t */\n\t\tthis.info = (msg, options = {}) => {\n\t\t\tthis.message(msg, LogLevel.INFO, options, [Target.CONSOLE]);\n\t\t};\n\t\t/**\n\t\t * Send messages with log level WARN\n\t\t * @param msg\n\t\t * @param options\n\t\t */\n\t\tthis.warn = (msg, options = {}) => {\n\t\t\tthis.message(msg, LogLevel.WARN, options, [Target.CONSOLE]);\n\t\t};\n\t\t/**\n\t\t * Send messages with log level ERROR\n\t\t * @param msg\n\t\t * @param options\n\t\t */\n\t\tthis.error = (msg, options = {}) => {\n\t\t\tthis.message(msg, LogLevel.ERROR, options, [Target.CONSOLE]);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param newOptions\n\t\t */\n\t\tthis.updateOptions = (...newOptions) => {\n\t\t\tconst result = newOptions.reduce((previous, current) => {\n\t\t\t\tconst updatedOptions = {...previous, ...current};\n\n\t\t\t\tconst keys = ['targets', 'output'];\n\t\t\t\tkeys.forEach(key => {\n\t\t\t\t\tconst oldValues = _get(previous, key, {});\n\t\t\t\t\tconst newValues = _get(current, key, {});\n\n\t\t\t\t\tupdatedOptions[key] = {...oldValues, ...newValues};\n\t\t\t\t});\n\n\t\t\t\treturn updatedOptions;\n\t\t\t}, {...this.options});\n\n\t\t\tthis.options = result;\n\t\t};\n\n\t\tthis.tags = {};\n\n\t\t// TODO under development\n\t\tthis.trigger = {\n\t\t\tstart: (tag, condition = true, options = null) => {\n\t\t\t\tif (condition) {\n\t\t\t\t\tthis.tags[tag] = {\n\t\t\t\t\t\tstarted: true,\n\t\t\t\t\t\toptions\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.message(['--START >>', tag], LogLevel.INFO, options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO not removing tag from array... should we?\n\t\t\tstop: (tag, condition = true, options = null) => {\n\t\t\t\tif (condition) {\n\t\t\t\t\tif (this.tags[tag]) {\n\t\t\t\t\t\tthis.tags[tag] = {\n\t\t\t\t\t\t\tstarted: false,\n\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.message(['--STOP <<', tag], LogLevel.INFO, options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t} finally {\n\t\tthis.updateOptions(defaultOptions, options);\n\t}\n}\n\n","import {cloneDeep as _cloneDeep} from 'lodash';\n\nconst DEFAULT_PREFIX_PERFORMANCE = 'PERFORMANCE';\nconst DEFAULT_SUFFIX_PERFORMANCE = '';\n\n/**\n *\n * @param duration\n * @returns {string}\n * @private\n */\nconst DEFAULT_LOG_FORMATTER = (duration) => `Call took ${duration} milliseconds.`;\nconst DEFAULT_ALLOW_PERFORMANCE = true;\nconst DEFAULT_LOG_LEVEL = 'info';\n\nconst defaultOptions = {\n\tallow: DEFAULT_ALLOW_PERFORMANCE,\n\tprefix: DEFAULT_PREFIX_PERFORMANCE,\n\tsuffix: DEFAULT_SUFFIX_PERFORMANCE,\n\tformatter: DEFAULT_LOG_FORMATTER,\n\tlogLevel: DEFAULT_LOG_LEVEL\n};\n\n/**\n *\n * @param options\n * @constructor\n */\nexport function Performance(options = {}) {\n\ttry {\n\t\t/**\n\t\t * @param options\n\t\t * @returns {*}\n\t\t */\n\t\tthis.getAllow = (options = this.options) => options.allow;\n\n\t\t/**\n\t\t *\n\t\t * @param allow\n\t\t */\n\t\tthis.setAllow = (allow) => {\n\t\t\tthis.options = {...this.options, allow};\n\t\t};\n\n\t\t/**\n\t\t * Reset 'allow' to the the Browser window state (use default)\n\t\t */\n\t\tthis.resetAllow = () => {\n\t\t\tthis.setAllow(DEFAULT_ALLOW_PERFORMANCE);\n\t\t};\n\n\t\t/**\n\t\t * @param options\n\t\t * @returns {*}\n\t\t */\n\t\tthis.getLogLevel = (options = this.options) => options.logLevel;\n\n\t\t/**\n\t\t *\n\t\t * @param logLevel\n\t\t */\n\t\tthis.setLogLevel = (logLevel) => {\n\t\t\tthis.options = {...this.options, logLevel};\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tthis.resetLogLevel = () => {\n\t\t\tthis.setLogLevel(DEFAULT_LOG_LEVEL);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param logCallback\n\t\t */\n\t\tthis.setLogCallback = (logCallback) => {\n\t\t\tthis.options = {...this.options, logCallback};\n\t\t};\n\n\t\t/**\n\t\t * Default function to log the measure\n\t\t *\n\t\t * @param duration\n\t\t * @param fn\n\t\t * @param options\n\t\t * @private\n\t\t */\n\t\tthis._log = (duration, fn, options = {}) => {\n\t\t\tconst {logCallback, prefix, suffix, formatter, logLevel} = options;\n\t\t\tlogCallback ? logCallback(formatter(duration), logLevel, {\n\t\t\t\tsuffix: prefix + (suffix ? '.' + suffix : ''),\n\t\t\t\tcaller: fn\n\t\t\t}) : null;\n\t\t};\n\n\t\t/**\n\t\t * Clear existing measures\n\t\t *\n\t\t * @param fnName\n\t\t */\n\t\tthis.clearMeasures = (fnName) => {\n\t\t\tperformance.clearMeasures(fnName);\n\t\t};\n\n\t\t/**\n\t\t * Get the current existing measures\n\t\t *\n\t\t * @param fnName\n\t\t * @returns {PerformanceEntryList}\n\t\t */\n\t\tthis.getMeasures = (fnName) => performance.getEntriesByName(fnName);\n\n\n\t\t/**\n\t\t * MeasureCall is used to measure the execution time taken by the function.\n\t\t * Arguments used by the function should be passed in an array\n\t\t *\n\t\t * @param fn\n\t\t * @param params [*]\n\t\t * @param clearMeasures\n\t\t * @param options\n\t\t * @returns {*}\n\t\t */\n\t\tthis.measureCall = function(fn, [...params], clearMeasures = true, options = {}) {\n\t\t\tif (!this.getAllow()) {\n\t\t\t\treturn fn(...params);\n\t\t\t}\n\n\t\t\tperformance.mark(`${fn.name}_START`);\n\t\t\ttry {\n\t\t\t\treturn fn(...params);\n\t\t\t} finally {\n\t\t\t\tperformance.mark(`${fn.name}_END`);\n\t\t\t\tperformance.measure(fn.name, `${fn.name}_START`, `${fn.name}_END`);\n\n\t\t\t\tconst measures = this.getMeasures(fn.name);\n\t\t\t\tconst measure = measures ? measures.reduce((result, measure) => result + measure.duration, 0) : 0;\n\n\t\t\t\tthis._log(measure, fn, {...this.options, ...options});\n\n\t\t\t\tif (clearMeasures) {\n\t\t\t\t\tthis.clearMeasures(fn.name);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} finally {\n\t\tthis.options = {..._cloneDeep(defaultOptions), ...options};\n\t}\n}","import {createActionConfig} from '../../createActionConfig';\nimport {createNocElement} from '../../createNocElement';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport effectIsVisible from './effectIsVisible';\n\n/**\n * This component is used to detect when a DOM is hidden or visible on the screen.\n * The component performs check on passed DOM ref `anchorElm` once per 1 second and dispatches event `actionOnChange`,\n * when element state changes from hidden to visible or vice versa. \n * The payload of `actionOnChange` contains boolean `isVisible`.\n * \n * Because of 1 second interval, it may happen that element flipped isVisible state twice in less than 1 second, and this component will miss the change.\n * This side effect is considered as positive, it debounces user interactions that were reverted in a very short time.\n * \n * The existence and the usage of this component serves currently as a workaround for lack of action from `now-record-common-sidebar-connected`,\n * that would notify about switching the tab or toggling the entire panel visibility.\n */\ncreateNocElement('sn-opws-is-visible', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview() {\n\t\t\treturn null;\n\t\t}\n\t},\n\n\tinitialState: {\n\t\tisVisible: false, //visibility state\n\t\tvisibilityInterval: null //interval id for clearInterval\n\t},\n\n\tproperties: {\n\t\tanchorElm: {\n\t\t\tdefault: null //ref to DOM element\n\t\t},\n\n\t\tactionOnChange: {\n\t\t\tdefault: effectIsVisible.ACTION_TYPES.DEFAULT_ON_CHANGE\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[effectIsVisible.ACTION_TYPES.START_CHECKS]:\n\t\t\tcreateActionConfig(effectIsVisible.effectHandlers.startChecking),\n\n\t\t[effectIsVisible.ACTION_TYPES.CHECK_IF_VISIBLE]:\n\t\t\tcreateActionConfig(effectIsVisible.effectHandlers.checkIfVisible),\n\n\t\t[effectIsVisible.ACTION_TYPES.STOP_CHECKS]:\n\t\t\tcreateActionConfig(effectIsVisible.effectHandlers.stopChecking)\n\t}\n});","import './snOpwsIsVisible';","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport '@devsnc/library-opws-mapping-shared/src/components/sn-opws-is-visible';\nimport {createRef} from '@servicenow/ui-renderer-snabbdom';\nimport {getNocSidePanelJsx} from './snNocSidePanelJsx.js';\nimport {getNocTilemapContainerJsx} from './snNocTilemapContainerJsx.js';\nimport {getNocSpectrumJsx} from './snNocSpectrumJsx';\nimport nocOnVisibleChangeEffect from './nocVisibilityChangeEffect';\n\nconst packageJson = require('../../package.json');\nLOGGING.info(`${packageJson.name} package version: ${packageJson.version}`, {force: true});\n\nexport const view = state => {\n    const {nocConfig} = state.properties;\n\n    if (!nocConfig)\n        return null;\n\n    const {isEm} = nocConfig;\n    const nocAppRef = createRef();\n    const workspace = 'nocpit';\n\n    const opwsIsVisible = <sn-opws-is-visible\n        anchor-elm={nocAppRef}\n        action-on-change={nocOnVisibleChangeEffect.ACTION_TYPES.NOC_VISIBILITY_CHANGED}/>;\n\n    const spectrumJsx   =  getNocSpectrumJsx(state, isEm);\n    const tilemapContainerJsx = getNocTilemapContainerJsx(state, nocAppRef, workspace, isEm);\n\n    // because the side panel needs the tilemap container on its 'side', we first want to make sure we got it\n    const nocSidePanelJsx =  tilemapContainerJsx ? getNocSidePanelJsx(state, isEm) : null;\n\n    return (\n        <main className='noc-app-root' ref={nocAppRef} >\n            {opwsIsVisible}\n            {spectrumJsx}\n            <section className='noc-app-root-section'>\n                {tilemapContainerJsx}\n                {nocSidePanelJsx}\n            </section>\n        </main>\n    );\n};\n","import {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {isEmpty as _isEmpty, isUndefined as _isUndefined} from 'lodash';\n\nconst {EM_SEVERITY_TO_EDS_STATUS} = CONSTANTS.GENERAL;\n\nconst constructTree = (severities, result, node) => {\n    if(_isUndefined(node) || _isEmpty(node)) {\n        return result;\n    }\n\n    const {\n        data: {\n            id,\n            type,\n            name,\n            attributes\n        },\n        children = []\n    } = node;\n\n    const {severity} = attributes;\n\n    if (type !== 'GROUP')\n        return result;\n\n    const newChildren = children.reduce(constructTree.bind(null, severities), []);\n\n    const highlightedValueProps = [\n        {\n            label: severities[severity].label,\n            status: EM_SEVERITY_TO_EDS_STATUS[severity]\n        }\n    ];\n\n    const newTree = {\n        id,\n        label: name,\n        children: newChildren,\n        highlightedValueProps,\n        actionable: true\n    };\n\n    if (newChildren.length > 0)\n        newTree.iconName = 'document-outline'; //TODO:Need to be changed to folder icon\n\n    result.push(newTree);\n    return result;\n};\n\nexport default function (severities, tree) {\n    if (!severities || !tree) {\n        console.error('NOC: constructServiceGroupsTree didn\\'t get the mandatory arguments',severities,  tree);\n        return null;\n    }\n    const serviceGroupTree = constructTree(severities, [], tree);\n    return serviceGroupTree;\n};","import {CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {isEmpty as _isEmpty} from 'lodash';\n\nconst searchNode = (node, arr, selectedNode) => {\n\tif (!node || _isEmpty(node))\n\t\treturn false;\n\n\tconst {data, data: {id}, children} = node;\n\tconst {serviceGroupSysId} = selectedNode;\n\tarr.push(data);\n\n\tif (id === serviceGroupSysId) {\n\t\tselectedNode.ref = node; //Set the ref for future usage (e.g finding the subTree beneath it)\n\t\treturn true;\n\t}\n\n\tfor (const child of children) {\n\t\tconst {data: {type}} = child;\n\t\tif (type !== 'GROUP')\n\t\t\tcontinue;\n\n\t\tconst isOneOfTheChildren = searchNode(child, arr, selectedNode);\n\t\tif (isOneOfTheChildren)\n\t\t\treturn true;\n\t}\n\n\tarr.pop();\n\treturn false;\n};\n\nexport const constructBreadcrumb = function (tree, serviceGroupSysId) {\n\tif (!tree || !serviceGroupSysId)\n\t\treturn null;\n\n\tconst items = [];\n\tconst selectedNode = {serviceGroupSysId, ref:null};\n\tconst isExists = searchNode(tree, items, selectedNode);\n\tif (!isExists) {\n\t\tLOGGING.warn(`NOC: constructBreadcrumb didn't find the Service Group[${serviceGroupSysId}] within the tree`, tree);\n\t\treturn null;\n\t}\n\n\treturn {\n\t\titems,\n\t\tselectedNodeRef : selectedNode.ref\n\t};\n};","import {createNocUpdateStateEffect, CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\n};\n\n//mapping from change type to Action for refresh request of certain part of application. \nconst refreshRequestByChangeType = {\n\tDASHBOARD_CHANGE: CONSTANTS.ACTION_TYPES.NOC_POPULATION_REFRESH_REQUESTED,\n\tALERT: CONSTANTS.ACTION_TYPES.NOC_ALERTS_REFRESH_REQUESTED\n};\n\nconst nocOnChangeEffect = createNocUpdateStateEffect((state, action, getAfterStateUpdate) => {\n\tconst {payload} = action;\n\tconst arrivedTimestamp = payload.value;\n\tconst currTimestamp = state.properties.timestampForTiles;\n\tconst refreshRequestAction = refreshRequestByChangeType[payload.type];\n\n\t//DEF0037195: Services in 'Service Group' doesn't refresh as needed\n\t//DEF0037045: Alert panel is not refreshing\n\tif (!refreshRequestAction)\n\t\treturn state;\n\t\t\n\n\t//If new timestamp arrived, then updating it in property 'timestampForTiles'\n\tconst newState = (currTimestamp === arrivedTimestamp) ? state : {\n\t\t...state,\n\t\tproperties: {\n\t\t\t...state.properties,\n\t\t\t//update timestampForTiles on DASHBOARD_CHANGE\n\t\t\t//this timestamp used to eliminate duplicate refresh on population\n\t\t\ttimestampForTiles: arrivedTimestamp\n\t\t}\n\t};\n\t\n\tgetAfterStateUpdate().then(dispatch => {\n\t\tdispatch(refreshRequestAction, {timestamp: arrivedTimestamp});\n\t});\n\t\n\treturn newState;\n});\n\nconst effectHandlers = {\n\tnocOnChangeEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import nocChangeEffect from './nocChangeEffect';\nimport nocOnChangeEffect from './nocOnChangeEffect';\nimport {createActionConfig, CHANGE_EVENT_CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\nconst {GLOBAL_ACTION_TYPES} = CHANGE_EVENT_CONSTANTS;\n\nexport const nocChangesNotificatorBehavior = {\n\tname: 'nocChangesNotificatorBehavior',\n\tactionHandlers: {\n\t\t[CHANGE_EVENT_CONSTANTS.GLOBAL_ACTION_TYPES.NOC_ON_START_REPEATED_CHANGES]:\n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.REQUEST_REPEATED_CHANGE_NOTIFICATION),\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_START_CHANGES]:\n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.REQUEST_CHANGE_NOTIFICATION),\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_READ_CHANGES]: \n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.REQUEST_CHANGE_NOTIFICATION_EFFECT_HANDLER),\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_READ_CHANGES_QUERY]: \n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.CHANGE_RESPONSE_REQUEST_SENT),\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_READ_CHANGES_SUCCESS]: \n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.CHANGE_RESPONSE_SUCCESS),\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_READ_CHANGES_ERROR]: \n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.CHANGE_RESPONSE_ERROR),\n\n\t\t[GLOBAL_ACTION_TYPES.NOC_EVENT_HASH_CHANGED]: \n\t\t\tcreateActionConfig(nocOnChangeEffect.effectHandlers.nocOnChangeEffect),\n\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_STOP_CHANGE_TIMER]:\n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.REQUEST_STOP_CHANGE_TIMER),\n\t\t[nocChangeEffect.ACTIONS_TYPES.NOC_ON_START_CHANGE_TIMER]:\n\t\t\tcreateActionConfig(nocChangeEffect.effectHandlers.REQUEST_START_CHANGE_TIMER)\n\t}\n};","import {nocChangesNotificatorBehavior as behavior} from './nocChangesNotificatorBehavior';\n\nexport const nocChangesNotificatorBehavior = {\n\tbehavior\n};\n","/**\n * GQL Query to get current User View for nocpit.\n * Used on page load.\n */\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {transformToModel} from './transforms';\n\nimport {get as _get} from 'lodash';\nimport {CONSTANTS, checkForError, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\n\nconst getVariables = (workspace, userId, viewName = CONSTANTS.DEFAULTS.DEFAULT_USER_VIEW_NAME) => {\n\tlet q = `user_id=${userId}^workspace=${workspace}^view_name=${viewName}`;\n\n\treturn {\n\t\tqueryConditions: q\n\t};\n};\n\nconst requestDefaultUserViewHandler = coeffects => {\n\tconst {state, dispatch, action: {payload: {userId, viewName}}} = coeffects;\n\n\t// const {workspace} = state.properties;\n\t//temporary removing workspace for WS integration\n\tconst workspace = 'nocpit';\n\n\tif (!workspace) {\n\t\treturn false;\n\t}\n\n\tconst variables = getVariables(workspace, userId, viewName);\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW_REQUEST, variables);\n};\n\nconst RESPONSE_RESULT_PATH = 'data.GlideRecord_Query.noc_user_view._results[0]';\n\nconst defaultUserViewFetched = createGraphQLEffect(VIEW_CONSTANTS.VIEW_GQL_QUERIES.get_noc_user_view, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW_REQUEST_FAILED,\n\tvariableList: ['queryConditions']\n});\n\nconst handleDefaultUserViewResponse = coeffects => {\n\tLOGGING.info('Received handleDefaultUserViewResponse', {caller: 'revertUserViewEffect'});\n\n\tconst {\n\t\tdispatch,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleDefaultUserViewResponse'});\n\tif (errors) {\n\t\treturn;\n\t}\n\n\tconst nocViewsRecord = _get(payload, RESPONSE_RESULT_PATH);\n\tconst selectableProps = transformToModel(nocViewsRecord);\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_DEFAULT_USER_VIEW_REQUEST, selectableProps);\n};\n\nconst effectHandlers = {\n\trequestDefaultUserViewHandler,\n\tdefaultUserViewFetched,\n\thandleDefaultUserViewResponse\n};\n\nexport default {\n\teffectHandlers,\n\tgetVariables\n};\n","import revertUserViewEffect from './revertUserViewEffect';\nimport userViewMutationEffect from './userViewMutationEffect';\nimport saveCurrentUserViewEffect from './saveCurrentUserViewEffect';\nimport {createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\n\nexport const revertUserViewBehavior = {\n\tname: 'revertUserViewBehavior',\n\tactionHandlers: {\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW]:\n\t\t\t\tcreateActionConfig(revertUserViewEffect.effectHandlers.requestDefaultUserViewHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(revertUserViewEffect.effectHandlers.defaultUserViewFetched),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.REVERT_CURRENT_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(revertUserViewEffect.effectHandlers.handleDefaultUserViewResponse),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_DEFAULT_USER_VIEW_REQUEST]:\n\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.revertCurrentUserViewRequestedHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_TO_DEFAULT_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.revertCurrentUserViewHandler)\n\t}\n};\n","import { LOGGING } from '@devsnc/library-opws-mapping-shared';\nimport { isViewExists } from './userViewsUtils';\nimport VIEW_CONSTANTS from './constants';\n\n/**\n * A request to save the current view under other view name.\n * The request is tested here before sending to server.\n *\n * @param coeffects\n */\nconst requestedSaveAsViewEffect = coeffects => {\n\tconst caller = 'snNocViewsEffects.requestedSaveAsViewEffect';\n\tconst {\n\t\tproperties: { views },\n\t\taction: { payload },\n\t\tdispatch\n\t} = coeffects;\n\tconst { viewName } = payload;\n\n\tLOGGING.info(`Requested to save current view under the name '${viewName}'`, { caller });\n\tconst { itemsMap } = views;\n\tconst viewExist = isViewExists(viewName, itemsMap);\n\tif (viewExist) {\n\t\tLOGGING.warn(`A view with the name '${viewName}' already exists!`, { caller });\n\t\treturn;\n\t}\n\n\tLOGGING.info(`Dispatch request to save view '${viewName}'`, { caller });\n\n\tconst variables = {\n\t\tviewName\n\t};\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.SAVE_USER_VIEW_REQUEST, variables);\n};\n\nconst effectHandlers = {\n\trequestedSaveAsViewEffect\n};\n\nexport default {\n\teffectHandlers\n};\n","import saveCurrentUserViewEffect from './saveCurrentUserViewEffect';\nimport saveSpecificUserViewEffect from './saveSpecificUserViewEffect';\nimport userViewMutationEffect from './userViewMutationEffect';\nimport { createActionConfig } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\n\nexport const saveUserViewBehavior = {\n\tname: 'saveUserViewBehavior',\n\tactionHandlers: {\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.SAVE_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.createSpecificUserViewSaveRequestedEffect),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.INSERT_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.insertUserViewHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.updateUserViewHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.INSERT_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.insertUserViewResponseHandler),\n\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_SAVE_AS_REQUEST_SAVE]:\n\t\t\tcreateActionConfig(saveSpecificUserViewEffect.effectHandlers.requestedSaveAsViewEffect),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UBER_FILTER_SAVE_REQUESTED]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.uberFilterSaveRequestedHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.SEVERITY_FILTER_SAVE_REQUESTED]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.severityFilterSaveRequestedHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.TILEMAPS_FORMAT_SAVE_REQUESTED]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.tilemapsFormatSaveRequestedHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.ALERT_PREFERENCES_SAVE_REQUESTED]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.alertPreferencesSaveRequestedHandler),\n\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_STARTED]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.mutateUserViewHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.MUTATE_USER_VIEW_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.mutateUserViewFailed),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_UBER_FILTER_REQUEST]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.updateUberFilterHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_SEVERITY_FILTER_REQUEST]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.updateSeverityFilterHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_ALERT_PREFERENCES_REQUEST]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.updateAlertPreferencesHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_TILEMAPS_FORMAT_REQUEST]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.updateTilemapsFormatHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(userViewMutationEffect.effectHandlers.updateUserViewResponseHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_SAVE_BUTTON_STATE]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.dispatchComparisonForViews)\n\t}\n};\n","import {CONSTANTS, LOGGING} from '@devsnc/library-opws-mapping-shared';\n\n/**\n *\n * @param coeffects\n */\nconst openManageViewsEffect = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\tproperties: {views},\n\t} = coeffects;\n\n\tconst {defaultViewSysId: sys_id} = views;\n\tconst table = 'noc_user_view';\n\n\tLOGGING.info(`Open form: record '${sys_id}' on table '${table}'`);\n\n\tdispatch(CONSTANTS.ACTION_TYPES.ITEM_SELECTED, {\n\t\ttable,\n\t\tsys_id,\n\t\tparent_table: table,\n\t\tparent_sys_id: sys_id\n\t});\n};\n\nconst effectHandlers = {\n\topenManageViewsEffect\n};\n\nexport default {\n\teffectHandlers\n};\n","import {checkForError, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {get as _get} from 'lodash';\nimport {transformRecordToMutationVars} from './transforms';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport VIEW_CONSTANTS from './constants';\n\nconst specificUserViewFetched = createGraphQLEffect(VIEW_CONSTANTS.VIEW_GQL_QUERIES.get_noc_user_view, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST_FAILED,\n\tvariableList: ['queryConditions']\n});\n\nconst comparisonUserViewFetched = createGraphQLEffect(VIEW_CONSTANTS.VIEW_GQL_QUERIES.get_noc_user_view_records_for_comparison, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_USER_VIEW_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_USER_VIEW_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_USER_VIEW_REQUEST_FAILED,\n\tvariableList: ['queryConditions']\n});\n\nconst requestSpecificUserViewHandler = coeffects => {\n\tLOGGING.info('Received requestSpecificUserViewHandler', {caller: 'getSpecificUserViewEffect'});\n\n\tconst {\n\t\tproperties,\n\t\taction: {payload},\n\t\tdispatch\n\t} = coeffects;\n\n\tif (checkForError({payload, dispatch, caller: 'requestSpecificUserViewHandler'})) {\n\t\treturn;\n\t}\n\n\t// get the view name and user id from payload\n\tconst {viewName, userId} = payload;\n\tconst {nocConfig} = properties;\n\t// const {workspace} = properties;\n\t//temporary removing workspace for WS integration\n\tconst workspace = 'nocpit';\n\n\tif (!workspace || !nocConfig) {\n\t\treturn;\n\t}\n\n\tconst variables = getVariables(workspace, viewName, userId);\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST, variables);\n};\n\nconst RESPONSE_RESULT_PATH = 'data.GlideRecord_Query.noc_user_view._results[0]';\nconst handleSpecificUserViewResponse = coeffects => {\n\tLOGGING.info('Received handleSpecificUserViewResponse', {caller: 'getSpecificUserViewEffect.handleSpecificUserViewResponse'});\n\n\tconst {\n\t\tproperties,\n\t\taction: {payload},\n\t\tdispatch,\n\t\tupdateProperties\n\t} = coeffects;\n\n\tif (checkForError({payload, dispatch, caller: 'getSpecificUserViewEffect.handleSpecificUserViewResponse'})) {\n\t\treturn;\n\t}\n\n\tconst {\n\t\t// workspace.\n\t\tviews,\n\t\tuserMeta: {userId}\n\t} = properties;\n\tconst {defaultViewSysId: sysId} = views;\n\tconst workspace = 'nocpit';\n\n\tconst nocViewsRecord = _get(payload, RESPONSE_RESULT_PATH);\n\tconst originViewId = nocViewsRecord.sys_id.value;\n\n\t//\n\t// Update the application values with ones from view\n\t//\n\tLOGGING.info('Updating state with specific user view values', {caller: 'getSpecificUserViewEffect.handleSpecificUserViewResponse'});\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_ON_STATE, nocViewsRecord);\n\n\t//\n\t// Write to the default user view\n\t//\n\tLOGGING.info(`Saving selected user view to user's default`, {caller: 'getSpecificUserViewEffect.handleSpecificUserViewResponse'});\n\tconst variables = transformRecordToMutationVars(\n\t\tworkspace,\n\t\tVIEW_CONSTANTS.DEFAULTS.CURRENT_USER_VIEW_NAME,\n\t\tuserId, //current user id, not from record!\n\t\tsysId,\n\t\toriginViewId,\n\t\tnocViewsRecord\n\t);\n\n\tconst actionType = sysId ? VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_REQUEST : VIEW_CONSTANTS.ACTION_TYPES.INSERT_USER_VIEW_REQUEST;\n\tdispatch(actionType, variables);\n\n\t//\n\t// Refresh the user views list and select the selected one\n\t//\n\tif (!views.itemsMap[originViewId]) {\n\t\tLOGGING.info('Dispatching load user view names', {\n\t\t\textra: variables,\n\t\t\tcaller: 'getSpecificUserViewEffect.handleSpecificUserViewResponse'\n\t\t});\n\t\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.LOAD_USER_VIEW_NAMES);\n\t} else {\n\t\tLOGGING.info(`Setting view from '${views.selectedView}' to '${originViewId}'`,\n\t\t\t{caller: 'getSpecificUserViewEffect.handleSpecificUserViewResponse'});\n\t\tconst selectedView = [originViewId];\n\t\tupdateProperties({views: {...views, selectedView}});\n\t}\n};\n\nconst updateSpecificUserViewFailed = coeffects => {\n\tLOGGING.error('Received updateSpecificUserViewFailed', {caller: 'getSpecificUserViewEffect.updateSpecificUserViewFailed'});\n};\n\n\nconst effectHandlers = {\n\trequestSpecificUserViewHandler,\n\tspecificUserViewFetched,\n\thandleSpecificUserViewResponse,\n\tupdateSpecificUserViewFailed,\n\tcomparisonUserViewFetched\n};\n\nconst getVariables = (workspace, viewName, userId) => {\n\tlet q = `user_id=${userId}^workspace=${workspace}^view_name=${viewName}`;\n\n\treturn {\n\t\tqueryConditions: q\n\t};\n};\n\nexport default {\n\teffectHandlers,\n\tgetVariables\n};\n","import {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {checkForError, LOGGING, onNextFrame} from '@devsnc/library-opws-mapping-shared';\nimport {get as _get} from 'lodash';\nimport VIEW_CONSTANTS from './constants';\nimport {userViewsUtils} from './userViewsUtils';\n\nconst userViewNamesFetched = createGraphQLEffect(VIEW_CONSTANTS.VIEW_GQL_QUERIES.get_noc_user_view_names, {\n\tstartActionType: VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST_STARTED,\n\tsuccessActionType: VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST_SUCCEEDED,\n\terrorActionType: VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST_FAILED,\n\tvariableList: ['queryConditions']\n});\n\nconst requestUserViewNamesHandler = async coeffects => {\n\tLOGGING.info('Received requestUserViewNamesHandler', {caller: 'getUserViewNamesEffect'});\n\n\tconst {\n\t\tproperties,\n\t\taction: {payload},\n\t\tdispatch\n\t} = coeffects;\n\n\tif (checkForError({payload, dispatch, caller: 'requestUserViewNamesHandler'}))\n\t\treturn;\n\n\tconst userId = _get(properties, 'userMeta.userId', null);\n\tconst {nocConfig} = properties;\n\t// const {workspace} = properties;\n\t//temporary removing workspace for WS integration\n\tconst workspace = 'nocpit';\n\n\tif (!userId || !workspace || !nocConfig)\n\t\treturn;\n\n\tconst variables = getVariables(workspace, userId);\n\n\tawait onNextFrame();\n\n\tdispatch(VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST, variables);\n};\n\n\nconst RESPONSE_RESULT_PATH = 'data.GlideRecord_Query.noc_user_view._results';\nconst handleUserViewNamesResponse = coeffects => {\n\tconst caller = 'getUserViewNamesEffect.handleUserViewNamesResponse';\n\tLOGGING.info('Received handleUserViewNamesResponse', {caller});\n\n\tconst {\n\t\tstate,\n\t\tupdateProperties,\n\t\taction: {payload},\n\t\tdispatch\n\t} = coeffects;\n\n\tif (checkForError({payload, dispatch, caller}))\n\t\treturn;\n\n\tconst nocViews = _get(payload, RESPONSE_RESULT_PATH);\n\tLOGGING.debug(`Received views`, {extra: nocViews, caller});\n\tconst originViewId = _get(state, 'userViewResource.originViewId') || '';\n\n\tconst views = userViewsUtils(nocViews, originViewId);\n\n\tupdateProperties({views});\n};\n\nconst getUserViewNamesFailed = coeffects => {\n\tLOGGING.error('Received getUserViewNamesFailed', {caller: 'getUserViewNamesEffect.getUserViewNamesFailed'});\n};\n\nconst effectHandlers = {\n\tuserViewNamesFetched,\n\trequestUserViewNamesHandler,\n\thandleUserViewNamesResponse,\n\tgetUserViewNamesFailed\n};\n\n/**\n * Can get specific view or all view of the user (including the empty ones)\n * @param workspace\n * @param userId\n * @param viewName\n * @returns {{queryConditions: *}}\n */\nconst getVariables = (workspace, userId, viewName = null) => {\n\tlet q = `user_id=${userId}^ORuser_idISEMPTY^workspace=${workspace}`;\n\n\tif (viewName)\n\t\tq += `^view_name=${viewName}`;\n\n\treturn {\n\t\tqueryConditions: q\n\t};\n};\n\nexport default {\n\teffectHandlers,\n\tgetVariables\n};\n","/**\n * GQL Query to get current User View for nocpit.\n * Used on page load.\n */\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {get as _get} from 'lodash';\nimport {checkForError, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {handleUserViewResponseEffect} from './handleUserViewResponseEffect';\nimport VIEW_CONSTANTS from './constants';\nimport {transformRecordToMutationVars} from './transforms';\nimport {transformToModel} from '../noc-user-view-behaviors/transforms';\n\nconst requestCurrentUserViewHandler = coeffects => {\n    LOGGING.info('Received requestCurrentUserViewHandler', {caller: 'getCurrentUserViewEffect'});\n\n    const {\n        properties,\n        action: {payload},\n        dispatch\n    } = coeffects;\n\n    if (checkForError({payload, dispatch, caller: 'requestCurrentUserViewHandler'}))\n        return;\n\n    const viewName = VIEW_CONSTANTS.DEFAULTS.CURRENT_USER_VIEW_NAME;\n\n    const userId = _get(properties, 'userMeta.userId', null);\n    const {nocConfig} = properties;\n    // const {workspace} = properties;\n    //temporary removing workspace for WS integration\n    const workspace = 'nocpit';\n\n    if (!userId || !workspace || !nocConfig)\n        return;\n\n    const variables = getVariables(workspace, viewName, userId);\n    dispatch(VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST, variables);\n};\n\nconst requestCurrentGlobalFilterHandler = coeffects => {\n    LOGGING.info('Received requestCurrentGlobalFilterHandler', {caller: 'getCurrentUserViewEffect'});\n    let {\n        state, \n        action: {payload}, \n        dispatch\n    } = coeffects;\n\n    if (checkForError({payload, dispatch, caller: 'requestCurrentGlobalFilterHandler'}))\n        return;\n\n    const sysId = _get(state, 'userViewResource.sys_id', null);\n    dispatch(VIEW_CONSTANTS.ACTION_TYPES.CURR_GLOBAL_FILTER_REQUEST, {sys_id: sysId});\n};\n\nconst RESPONSE_RESULT_PATH = 'data.GlideRecord_Query.noc_user_view._results[0]';\nconst RESPONSE_RESULT_ALTERNATIVE_PATH = 'data.GlideRecord_Query.noc_user_view._results[1]'; //For use for SN Hop users\n\nconst currGlobalFilterFetched = createGraphQLEffect(VIEW_CONSTANTS.VIEW_GQL_QUERIES.get_current_global_filter, {\n    startActionType: VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_STARTED,\n    successActionType: VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_SUCCEEDED,\n    errorActionType: VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_FAILED,\n    variableList: ['sys_id']\n});\n\nconst currUserViewFetched  = createGraphQLEffect(VIEW_CONSTANTS.VIEW_GQL_QUERIES.get_noc_user_view, {\n    startActionType: VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_STARTED,\n    successActionType: VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_SUCCEEDED,\n    errorActionType: VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_FAILED,\n    variableList: ['queryConditions']\n});\n\nconst handleCurrentUserViewResponse = coeffects => {\n    LOGGING.info('Received handleCurrentUserViewResponse', {caller: 'getCurrentUserViewEffect'});\n\n    const {\n        properties,\n        action: {payload}, \n        dispatch,\n        updateState\n    } = coeffects;\n\n    if (checkForError({payload, dispatch, caller: 'handleCurrentUserViewResponse'}))\n        return;\n\n    const {\n        // workspace, \n        userMeta: {userId}\n    } = properties;\n\n    const workspace = 'nocpit';\n\n    const nocViewsFirstRecord = _get(payload, RESPONSE_RESULT_PATH);\n    const nocViewsSecondRecord = _get(payload, RESPONSE_RESULT_ALTERNATIVE_PATH);\n    const firstRecordUserId = _get(nocViewsFirstRecord, 'user_id.value');\n    const secondRecordUserId = _get(nocViewsSecondRecord, 'user_id.value');\n\n    const existingUserId = firstRecordUserId || secondRecordUserId || false;\n\n    if (existingUserId) {\n        LOGGING.info('User has own record, skipping INSERT and triggering handleUserViewResponseEffect.', {caller: 'handleCurrentUserViewResponse'});\n\n        const updatePayload = (firstRecordUserId) ? nocViewsFirstRecord : nocViewsSecondRecord;\n        dispatch(VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_ON_STATE,  updatePayload);\n        updateState({originView: transformToModel(updatePayload)});\n    } else {\n        //New User\n        const originViewId = _get(nocViewsFirstRecord, 'sys_id.value');\n        const variables = transformRecordToMutationVars(\n            workspace,\n            VIEW_CONSTANTS.DEFAULTS.CURRENT_USER_VIEW_NAME,\n            userId,\n            null,\n            originViewId,\n            nocViewsFirstRecord\n        );\n\n        dispatch(VIEW_CONSTANTS.ACTION_TYPES.INSERT_USER_VIEW_REQUEST, variables);\n        updateState({originView: transformToModel(variables)});\n    }\n\n    LOGGING.info('Dispatching load user view names', {caller: 'getCurrentUserViewEffect.handleCurrentUserViewResponse'});\n    dispatch(VIEW_CONSTANTS.ACTION_TYPES.LOAD_USER_VIEW_NAMES);\n};\n\n//this effect is called when current UserViews load into model, and it already has unique record in DB.\nconst updateCurrentUserViewOnStateHandler = handleUserViewResponseEffect('payload');\n\nconst updateCurrentUserViewFailed = coeffects => {\n    LOGGING.warn('Received updateCurrentUserViewFailed', {caller: 'getCurrentUserViewEffect'});\n};\n\nconst effectHandlers = {\n    requestCurrentGlobalFilterHandler,\n    requestCurrentUserViewHandler,\n    currUserViewFetched,\n    currGlobalFilterFetched,\n\thandleCurrentUserViewResponse,\n\tupdateCurrentUserViewOnStateHandler,\n    updateCurrentUserViewFailed\n};\n\nconst getVariables = (workspace, viewName, userId) => {\n    let q = `user_id=${userId}^ORuser_idISEMPTY^workspace=${workspace}`;\n\n    if (viewName)\n        q += `^view_name=${viewName}`;\n\n    return {\n        queryConditions: q\n    };\n};\n\nexport default {\n    effectHandlers,\n    getVariables\n};\n","import { CONSTANTS, createActionConfig } from '@devsnc/library-opws-mapping-shared';\nimport VIEW_CONSTANTS from './constants';\nimport getCurrentUserViewEffect from './getCurrentUserViewEffect';\nimport getUserViewNamesEffect from './getUserViewNamesEffect';\nimport getSpecificUserViewEffect from './getSpecificUserViewEffect';\nimport getManageViewsEffect from './getManageViewsEffect';\nimport saveCurrentUserViewEffect from './saveCurrentUserViewEffect';\n\nexport const getUserViewBehavior = {\n\tname: 'getUserViewBehavior',\n\tactionHandlers: {\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.CURR_GLOBAL_FILTER_CHANGED]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.requestCurrentGlobalFilterHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.CURR_GLOBAL_FILTER_REQUEST]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.currGlobalFilterFetched),\n\n\t\t[CONSTANTS.ACTION_TYPES.USER_META_SET]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.requestCurrentUserViewHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.currUserViewFetched),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.handleCurrentUserViewResponse),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.UPDATE_USER_VIEW_ON_STATE]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.updateCurrentUserViewOnStateHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.CURR_USER_VIEW_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(getCurrentUserViewEffect.effectHandlers.updateCurrentUserViewFailed),\n\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.LOAD_USER_VIEW_NAMES]:\n\t\t\tcreateActionConfig(getUserViewNamesEffect.effectHandlers.requestUserViewNamesHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST]:\n\t\t\tcreateActionConfig(getUserViewNamesEffect.effectHandlers.userViewNamesFetched),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(getUserViewNamesEffect.effectHandlers.handleUserViewNamesResponse),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.USER_VIEW_NAMES_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(getUserViewNamesEffect.effectHandlers.getUserViewNamesFailed),\n\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_SELECTED]:\n\t\t\tcreateActionConfig(getSpecificUserViewEffect.effectHandlers.requestSpecificUserViewHandler),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(getSpecificUserViewEffect.effectHandlers.specificUserViewFetched),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(getSpecificUserViewEffect.effectHandlers.handleSpecificUserViewResponse),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.SPECIFIC_USER_VIEW_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(getSpecificUserViewEffect.effectHandlers.updateSpecificUserViewFailed),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.NOC_USER_VIEW_MANAGE_VIEWS]:\n\t\t\tcreateActionConfig(getManageViewsEffect.effectHandlers.openManageViewsEffect),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_USER_VIEW_REQUEST]:\n\t\t\tcreateActionConfig(getSpecificUserViewEffect.effectHandlers.comparisonUserViewFetched),\n\n\t\t[VIEW_CONSTANTS.ACTION_TYPES.COMPARISON_USER_VIEW_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(saveCurrentUserViewEffect.effectHandlers.compareViews)\n\n\n\t}\n};\n","import {getUserViewBehavior} from './getUserViewBehavior';\nimport {saveUserViewBehavior} from './saveUserViewBehavior';\nimport {revertUserViewBehavior} from './revertUserViewBehavior';\n\nexport const userViewBehaviors = {\n\tbehaviors: {\n\t\tgetUserViewBehavior,\n\t\tsaveUserViewBehavior,\n        revertUserViewBehavior\n\t}\n};\n","import {LOGGING, CHANGE_EVENT_CONSTANTS, CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\nconst initChangeHandler = {\n\teffect(coeffects) {\n\t\tconst {dispatch} = coeffects;\n\t\tconst {PAYLOADS, GLOBAL_ACTION_TYPES} = CHANGE_EVENT_CONSTANTS;\n\n\t\tLOGGING.info('dispatch ACTION_TYPES.NOC_ON_START_REPEATED_CHANGES', {caller: 'initChangeHandler', extra: PAYLOADS});\n\t\tdispatch(GLOBAL_ACTION_TYPES.NOC_ON_START_REPEATED_CHANGES, {...PAYLOADS.POPULATION_CHANGES, id: CONSTANTS.GLOBALS.ALL_SYS_ID});\n\t}\n};\n\nconst effectHandlers = {\n\tinitChangeHandler\n};\n\nexport default {\n\teffectHandlers\n};","import {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {CONSTANTS, LOGGING, checkForError, onNextFrame} from '@devsnc/library-opws-mapping-shared';\nimport {get as _get} from 'lodash';\n\nconst ACTION_TYPES = {\n\tUSER_META_REQUEST: 'USER_META_REQUEST',\n\tUSER_META_REQUEST_STARTED: 'USER_META_REQUEST_STARTED',\n\tUSER_META_REQUEST_SUCCEEDED: 'USER_META_REQUEST_SUCCEEDED',\n\tUSER_META_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst GQL_QUERY = `\nquery getUserMeta{\n  GlideDomain_Query {\n    user {\n      sys_id\n      preferences(name: [\"glide.ui.accessibility\"]) {\n        name\n        value\n      }\n    }\n  }\n}\n`;\n\nconst userMetaFetched = createGraphQLEffect(GQL_QUERY, {\n\tstartActionType: ACTION_TYPES.USER_META_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.USER_META_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.USER_META_REQUEST_FAILED,\n});\n\nconst transform = result => {\n\tconst userId = result.sys_id;\n\tconst isA11y = true;\n\treturn {\n\t\tuserId,\n\t\tisA11y\n\t}\n};\n\nconst handleUserMetaResponse = async coeffects => {\n\tLOGGING.log('handleUserMetaResponse');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleUserMetaResponse'});\n\tif (errors) \n\t\treturn;\n\n\tconst record = _get(payload, 'data.GlideDomain_Query.user');\n\tconst userMeta = transform(record);\n\n\tif (!userMeta)\n\t\treturn;\n\n\tupdateProperties({userMeta});\n\t\n\tawait onNextFrame();\n\tdispatch(CONSTANTS.ACTION_TYPES.USER_META_SET, {});\n};\n\nconst effectHandlers = {\n\tuserMetaFetched,\n\thandleUserMetaResponse\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","/**\n * Effect handlers to bring global nocpit configuration.\n */\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport getPopulationEffect from './getPopulationEffect';\nimport {get as _get} from 'lodash';\nimport {LOGGING, CHANGE_EVENT_CONSTANTS, CONSTANTS, checkForError, onNextFrame} from '@devsnc/library-opws-mapping-shared';\n\nconst {GLOBAL_ACTION_TYPES} = CHANGE_EVENT_CONSTANTS;\n\nconst ACTION_TYPES = {\n\tNOC_CONFIG_REQUEST: 'NOC_CONFIG_REQUEST',\n\tNOC_CONFIG_REQUEST_STARTED: 'NOC_CONFIG_REQUEST_STARTED',\n\tNOC_CONFIG_REQUEST_SUCCEEDED: 'NOC_CONFIG_REQUEST_SUCCEEDED',\n\tNOC_CONFIG_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst GQL_QUERY = `\n\tquery getNocConfig($queryConditions:String!) {\n\t  GlideRecord_Query{\n\t\t\tnoc_conf (queryConditions:$queryConditions) {\n\t\t\t\t_results {\n\t\t\t\t\tevent_mgmt_mode {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tnoc_refresh_rate {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tdebug_level {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tdebug_options {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst nocConfigFetched = createGraphQLEffect(GQL_QUERY, {\n\tstartActionType: ACTION_TYPES.NOC_CONFIG_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.NOC_CONFIG_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.NOC_CONFIG_REQUEST_FAILED,\n\tvariableList: ['queryConditions']\n});\n\nconst transform = result => {\n\tconst isEm = _get(result, 'event_mgmt_mode.value', false);\n    const nocRefreshRate = _get(result, 'noc_refresh_rate.value', 5 * 1000);\n\treturn {\n\t\tisEm,\n\t\tnocRefreshRate\n\t};\n};\n\nconst overrideLogging = (config) => {\n\tconst debugLevel = _get(config, 'debug_level.value', null);\n\tif (debugLevel) {\n\t\tLOGGING.info(`Updating logging level to ${debugLevel}`);\n\t\tLOGGING.setLogLevel(debugLevel);\n\t}\n\n\tconst debugOptions = _get(config, 'debug_options.value', null);\n\tif (debugOptions) {\n\t\tLOGGING.info(`Updating logging options to ${debugOptions}`);\n\t\ttry {\n\t\t\tconst optionsJson = JSON.parse(debugOptions);\n\t\t\tLOGGING.updateOptions(optionsJson);\n\t\t} catch(e) {\n\t\t\tLOGGING.warn(['Failed updating logging options', e]);\n\t\t}\n\t}\n};\n\nconst handleNocConfigResponse = async coeffects => {\n\tLOGGING.log('handleNocConfigResponse');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleNocConfigResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst nocConfig = _get(payload, 'data.GlideRecord_Query.noc_conf._results[0]', null);\n\n\tif (!nocConfig)\n\t\treturn;\n\n\toverrideLogging(nocConfig);\n\n\tconst transformedNocConfig = transform(nocConfig);\n\n\tupdateProperties({nocConfig: transformedNocConfig});\n\n\tawait onNextFrame();\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_CONFIG_SET, {});\n};\n\nconst onNocConfigSet = coeffects => {\n\tconst {dispatch} = coeffects;\n\t\n\tdispatch(getPopulationEffect.ACTION_TYPES.NOC_POPULATION_REFRESH_REQUESTED, {});\n\t// STRY50601730 - Using timer effect to init change manager if visible, no need to call it again\n\t//dispatch(GLOBAL_ACTION_TYPES.NOC_INIT_CHANGE_MANAGER, {});\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_CONFIG_SET_PHASE_2, {});\n};\n\nconst effectHandlers = {\n\tnocConfigFetched,\n\thandleNocConfigResponse,\n\tonNocConfigSet\n};\n\nconst getVariables = workspace => ({\n\tqueryConditions: `workspace=${workspace}`\n});\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers,\n\tgetVariables\n};\n","import nocConfigEffect from './nocConfigEffect';\nimport userMetaEffect from './userMetaEffect';\nimport getPopulationEffect from './getPopulationEffect';\nimport initChangesManagerEffect from './initChangesManagerEffect';\nimport {LOGGING, CHANGE_EVENT_CONSTANTS, CONSTANTS, createActionConfig} from '@devsnc/library-opws-mapping-shared';\n\nconst {GLOBAL_ACTION_TYPES} = CHANGE_EVENT_CONSTANTS;\n\nconst initFlowHandler = {\n\teffect(coeffects) {\n\t\tconst {state, dispatch} = coeffects;\n\t\t// const {workspace} = state.properties;\n\t\t//temporary removing workspace for WS integration\n        const workspace = 'nocpit';\n\t\tconst {ACTION_TYPES} = CHANGE_EVENT_CONSTANTS;\n\t\tconst {PAYLOADS} = CHANGE_EVENT_CONSTANTS;\n\n\t\tLOGGING.log('dispatch NOC_CONFIG_REQUEST');\n\t\tdispatch(nocConfigEffect.ACTION_TYPES.NOC_CONFIG_REQUEST,\n\t\t\tnocConfigEffect.getVariables(workspace));\n\n\t\tLOGGING.log('dispatch USER_META_REQUEST');\n\t\tdispatch(userMetaEffect.ACTION_TYPES.USER_META_REQUEST, {});\n\t}\n};\n\nexport const nocInitialDataBehavior = {\n\tname: 'nocInitialDataBehavior',\n\tactionHandlers: {\n\t\t[CONSTANTS.ACTION_TYPES.NOC_COMPONENT_CONNECTED]:\n\t\t\tcreateActionConfig(initFlowHandler),\n\n\t\t[nocConfigEffect.ACTION_TYPES.NOC_CONFIG_REQUEST]:\n\t\t\tcreateActionConfig(nocConfigEffect.effectHandlers.nocConfigFetched),\n\n\t\t[userMetaEffect.ACTION_TYPES.USER_META_REQUEST]:\n\t\t\tcreateActionConfig(userMetaEffect.effectHandlers.userMetaFetched),\n\n\t\t[userMetaEffect.ACTION_TYPES.USER_META_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(userMetaEffect.effectHandlers.handleUserMetaResponse),\n\n\t\t// [userMetaEffect.ACTION_TYPES.USER_META_REQUEST_FAILED]: //TODO reuse error handler]: \n\t\t// \tcreateActionConfig(),\n\n\t\t[nocConfigEffect.ACTION_TYPES.NOC_CONFIG_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(nocConfigEffect.effectHandlers.handleNocConfigResponse),\n\n\t\t// [nocConfigEffect.ACTION_TYPES.NOC_CONFIG_REQUEST_FAILED]: //TODO reuse error handler]: \n\t\t// \tcreateActionConfig(),\n\n\t\t[CONSTANTS.ACTION_TYPES.NOC_CONFIG_SET]:\n\t\t\tcreateActionConfig(nocConfigEffect.effectHandlers.onNocConfigSet),\n\n\t\t[GLOBAL_ACTION_TYPES.NOC_INIT_CHANGE_MANAGER]:\n\t\t\tcreateActionConfig(initChangesManagerEffect.effectHandlers.initChangeHandler),\n\n\t\t[CONSTANTS.ACTION_TYPES.UBER_FILTER_SET]:\n\t\t\tcreateActionConfig(getPopulationEffect.effectHandlers.getPopulationHandler),\n\n\t\t[getPopulationEffect.ACTION_TYPES.NOC_POPULATION_REFRESH_REQUESTED]:\n\t\t\tcreateActionConfig(getPopulationEffect.effectHandlers.getPopulationHandler),\n\n\t\t[getPopulationEffect.ACTION_TYPES.EM_POPULATION_REQUEST]:\n\t\t\tcreateActionConfig(getPopulationEffect.effectHandlers.getEmPopulationEffectHandler),\n\t\n\t\t// [getPopulationEffect.ACTION_TYPES.BASE_POPULATION_REQUEST), //TODO getBasePopulationRequestHandler]: \n\t\t// \tcreateActionConfig(),\n\n\t\t[getPopulationEffect.ACTION_TYPES.EM_POPULATION_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(getPopulationEffect.effectHandlers.handleEmPopulationResponse),\n\n\t\t[getPopulationEffect.ACTION_TYPES.BASE_POPULATION_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(getPopulationEffect.effectHandlers.handleBasePopulationResponse),\n\n\t\t //[getPopulationEffect.ACTION_TYPES.POPULATION_REQUEST_FAILED]: //TODO reuse error handle]:\n\t\t //\tcreateActionConfig()\n\t}\n};\n","import {nocInitialDataBehavior as behavior} from './nocInitialDataBehavior';\n\n\nexport const nocInitialDataBehavior = {\n\tbehavior\n};\n","import {CONSTANTS, LOGGING, onNextFrame, getValue} from '@devsnc/library-opws-mapping-shared';\nimport {get as _get, keyBy as _keyBy} from 'lodash';\n\nconst ACTION_TYPES = {\n};\n\n/**\n * Filter iterator function to pass only services of enabled severities.\n * @param it currently iterated population unit (a.k.a. service object)\n * 'this' contains mapping of severities and mapping of enabledGroups\n * @returns {Boolean}\n */\n//Keep it 'function', don't change to arrow. Array.filter expects 'this' context.\nconst enabledPopulationCounterAndFilter = function(it) {\n\tconst severityValue = getValue(it.severity);\n\tconst {severities, enabledGroups} = this;\n\tconst sev = severities[severityValue];\n\n\tif (!sev) {\n\t    it.isEnabled = false;\n\t    return false;\n\t}\n\n    const severityState = enabledGroups[severityValue];\n    it.isEnabled = Boolean(severityState);\n\t++sev.populationSize;\n\treturn enabledGroups[severityValue];\n};\n\n//Keep it 'function', don't change to arrow. Array.map expects 'this' context.\nconst groupsMapper = function(gr) {\n\tconst {colorsAndIcons, enabledGroups} = this;\n\n\tconst ctx = colorsAndIcons[gr.value] || colorsAndIcons[0]; //value '0' used as default fallback\n\tconst isEnabled = enabledGroups[gr.value] || false;\n\n\treturn {\n\t\t...gr,\n\t\tpopulationSize: 0,\n\t\tcolor: ctx.colorCode,\n\t\ticonUrl: ctx.iconUrl,\n\t\tisEnabled\n\t};\n};\n\nconst filterPopulation = (population, groups, enabledGroups, colorsAndIcons) => {\n\tconst severitiesArr = groups.map(groupsMapper, {colorsAndIcons, enabledGroups});\n\n\tconst severities = _keyBy(severitiesArr, 'value');\n\tconst enabledPopulation = population.filter(enabledPopulationCounterAndFilter, {severities, enabledGroups});\n\n\treturn {\n\t\tseverities,\n\t\tenabledPopulation\n\t};\n};\n\nconst prefilterPopulationHandler = async coeffects => {\n\tconst {\n\t    state,\n        properties,\n        action,\n        dispatch,\n        updateProperties\n    } = coeffects;\n\n    LOGGING.log(`prefilterPopulationHandler called by Action '${action.type}'`);\n\n\tconst {population} = properties;\n\tconst groups = _get(state, \"severityChoicesResource.result\", null);\n\tconst colorsAndIcons = _get(state, \"colorsAndIconsResource.result\", null);\n\n\tif (!population || !groups || !colorsAndIcons)\n\t\treturn;\n\n\tconst enabledGroups = _get(properties, 'severityFilter.enabledSeverities', {});\n\tconst {\n\t\tseverities,\n\t\tenabledPopulation\n\t} = filterPopulation(population, groups, enabledGroups, colorsAndIcons);\n\n\tLOGGING.log('prepareGroupsHandler applies.');\n\n    updateProperties({\n        severities,\n        enabledPopulation\n    });\n\n    await onNextFrame();\n    dispatch(CONSTANTS.ACTION_TYPES.NOC_POPULATION_GROUPS_SET, {});\n};\n\nconst effectHandlers = {\n\tprefilterPopulationHandler\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import {filter as _filter, get as _get, map as _map} from 'lodash';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {CONSTANTS, checkForError, LOGGING, onNextFrame} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tSEVERITY_CHOICE_REQUEST: 'SEVERITY_CHOICE_REQUEST',\n\tSEVERITY_CHOICE_REQUEST_STARTED: 'SEVERITY_CHOICE_REQUEST_STARTED',\n\tSEVERITY_CHOICE_REQUEST_SUCCEEDED: 'SEVERITY_CHOICE_REQUEST_SUCCEEDED',\n\tSEVERITY_CHOICE_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst GQL_QUERY = `\n\tquery getSeverityChoices($tableName: String!, $fieldName: String!) {\n\t  GlideLayout_Query {  \n\t\tchoiceDataRetriever(tableName: $tableName, fieldName: $fieldName) {\n\t\t  choice {\n\t\t\tvalue\n\t\t\tlabel\n\t\t  }\n\t\t}\n\t  }\n\t}\n`;\n\nconst handleSeverityChoicesFetched = createGraphQLEffect(GQL_QUERY, {\n\tstartActionType: ACTION_TYPES.SEVERITY_CHOICE_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.SEVERITY_CHOICE_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.SEVERITY_CHOICE_REQUEST_FAILED,\n\tvariableList: ['tableName', 'fieldName']\n});\n\nconst transform = result => {\n\t//remove from the result the choices: 'None' and 'Clear'\n\t//transform of population query takes care to eliminate 'Clear' severity and display it as 'Info'\n\tlet transformed = _filter(result, s => s.value !== '' && s.value !== '0');\n\n\ttransformed = _map(transformed,\n\t\t(s, idx) => ({\n\t\t\tvalue: s.value,\n\t\t\tlabel: s.label,\n\t\t\tsequence: idx\n\t\t}));\n\n\treturn transformed;\n};\n\nconst handleSeverityChoicesResponded = async coeffects => {\n\tLOGGING.log('handleSeverityChoicesResponded');\n\n\tconst {\n\t\tdispatch,\n\t\tupdateState,\n\t\taction: {payload}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleSeverityChoicesResponded'});\n\tif (errors)\n\t\treturn;\n\n\tconst records = _get(payload, 'data.GlideLayout_Query.choiceDataRetriever.choice', []);\n\tconst groups = transform(records);\n\n\tupdateState({\n\t\tseverityChoicesResource: {\n\t\t\tresult: groups\n\t\t}\n\t});\n\n\tawait onNextFrame();\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_SEVERITY_CHOICES_SET, {});\n};\n\nconst getVariables = () => {\n\treturn {\n\t\ttableName: 'cmdb_ci_service_auto',\n\t\tfieldName: 'severity'\n\t};\n};\n\nconst effectHandlers = {\n\thandleSeverityChoicesFetched,\n\thandleSeverityChoicesResponded\n};\n\nexport default {\n\tACTION_TYPES,\n\tgetVariables,\n\teffectHandlers\n};\n\n","import severityChoicesEffect from './severityChoicesEffect';\nimport prefilterPopulationEffect from './prefilterPopulationEffect';\nimport {CONSTANTS, LOGGING, createActionConfig, colorsAndIconsEffect} from '@devsnc/library-opws-mapping-shared';\n\nconst requestInitialSeverityDataHandler = {\n\teffect(coeffects) {\n\t\tconst {dispatch} = coeffects;\n\t\t\n\t\tLOGGING.log('dispatch COLORS_REQUEST');\n\t\tdispatch(colorsAndIconsEffect.ACTION_TYPES.COLORS_REQUEST,\n\t\t\tcolorsAndIconsEffect.getVariables(['severity']));\n\n\t\tLOGGING.log('dispatch SEVERITY_CHOICE_REQUEST');\n\t\tdispatch(severityChoicesEffect.ACTION_TYPES.SEVERITY_CHOICE_REQUEST,\n\t\t\tseverityChoicesEffect.getVariables());\n\t}\n};\n\nexport const nocSeverityDataBehavior = {\n\tname: 'nocSeverityDataBehavior',\n\tactionHandlers: {\n\t\t[CONSTANTS.ACTION_TYPES.NOC_CONFIG_SET_PHASE_2]:\n\t\t\tcreateActionConfig(requestInitialSeverityDataHandler),\n\n\t\t[colorsAndIconsEffect.ACTION_TYPES.COLORS_REQUEST]:\n\t\t\tcreateActionConfig(colorsAndIconsEffect.effectHandlers.colorsFetchedHandler),\n\t\n\t\t[colorsAndIconsEffect.ACTION_TYPES.COLORS_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(colorsAndIconsEffect.effectHandlers.handleColorsResponse),\n\n\t\t[severityChoicesEffect.ACTION_TYPES.SEVERITY_CHOICE_REQUEST]:\n\t\t\tcreateActionConfig(severityChoicesEffect.effectHandlers.handleSeverityChoicesFetched),\n\t\t\n\t\t[severityChoicesEffect.ACTION_TYPES.SEVERITY_CHOICE_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(severityChoicesEffect.effectHandlers.handleSeverityChoicesResponded),\n\t\t\t\n//\t\t[severityChoicesEffect.ACTION_TYPES.SEVERITY_CHOICE_REQUEST_FAILED]:\n//\t\t\tcreateActionConfig(severityChoicesEffect.effectHandlers.handleSeverityChoicesResponded),\n\n\t\t[CONSTANTS.ACTION_TYPES.NOC_POPULATION_SET_PHASE_2]:\n\t\t\tcreateActionConfig(prefilterPopulationEffect.effectHandlers.prefilterPopulationHandler),\n\n\t\t[CONSTANTS.ACTION_TYPES.NOC_COLORS_AND_ICONS_SET_PHASE_2]:\n\t\t\tcreateActionConfig(prefilterPopulationEffect.effectHandlers.prefilterPopulationHandler),\n\n\t\t[CONSTANTS.ACTION_TYPES.NOC_SEVERITY_CHOICES_SET]:\n\t\t\tcreateActionConfig(prefilterPopulationEffect.effectHandlers.prefilterPopulationHandler),\n\n\t\t[CONSTANTS.ACTION_TYPES.SEVERITY_FILTER_SET]:\n            createActionConfig(prefilterPopulationEffect.effectHandlers.prefilterPopulationHandler)\n\t}\n};\n","import {nocSeverityDataBehavior as behavior} from './nocSeverityDataBehavior';\n\nexport const nocSeverityDataBehavior = {\n\tbehavior,\n};\n"],"sourceRoot":""}