{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_layout/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__lodash_4_17_15\"","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__lodash_4_17_15[\\\"get\\\"]\"","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/RowColumn/utils.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/sn-layout.js","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__$servicenow_behavior_media_query_19_0_10\"","webpack://__TECTONIC__$devsnc_sn_layout/./src/slotted-polyfill-behavior/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/children-with-slot-behavior/index.js","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__$servicenow_behavior_rtl_19_0_10\"","webpack://__TECTONIC__$devsnc_sn_layout/external \"__TECTONIC__lodash_4_17_15[\\\"isString\\\"]\"","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/RowColumn/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/RowColumn/transformColumns.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/RowColumn/adjustColumns.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/Flex/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/Grid/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/RuleBased/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/RuleBased/utils.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/Free/index.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/styles.scss?6c97","webpack://__TECTONIC__$devsnc_sn_layout/./src/styles.scss","webpack://__TECTONIC__$devsnc_sn_layout/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$devsnc_sn_layout/./src/runtimes/getModelByDevice.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__lodash_4_17_15","GRID_SIZE","findIndexBy","collection","comparison","reduce","result","val","all","default","createCustomElement","renderer","type","snabbdom","view","state","dispatch","model","rawModel","JSON","parse","e","console","warn","parseModel","getModelByDevice","behaviors","mediaQuery","modelByDevice","isDesktopModel","runtimeFn","properties","isMobile","ruleBasedRows","currentSlots","childrenWithSlot","slots","parentTag","reflect","renderers","column","row","collapsibleColumns","initialState","undefined","resizeFn","mutationObserver","styles","behavior","slottedPolyfillBehavior","options","selector","mediaQueryBehavior","isTablet","isDesktop","childrenWithSlotBehavior","rtlBehavior","actionHandlers","CALCULATE_RULE_BASED_ROW","action","updateState","payload","rows","SET_MUTATION_OBSERVER_AND_RESIZE_FN","resize","window","addEventListener","observer","MutationObserver","callback","observe","host","childList","attributes","subtree","UNSET_MUTATION_OBSERVER_AND_RESIZE_FN","removeEventListener","disconnect","__TECTONIC__$servicenow_ui_core","__TECTONIC__$servicenow_behavior_media_query_19_0_10","getMargin","isIEOrEdge","MARGIN_MAP","locals","el","toLower","tagName","getAttribute","userAgent","test","onConnect","_","navigator","margin","forEach","querySelectorAll","style","display","marginBottom","WeakMap","Map","UPDATE_SLOT_LIST","added","removed","res","map","count","set","delete","a","has","path","operation","CLEAR_SLOTS_MAP","clear","actions","private","mutations","changes","acc","attributeName","target","slot","oldValue","push","removedNodes","length","addedNodes","attributeOldValue","onDisconnect","__TECTONIC__$servicenow_behavior_rtl_19_0_10","RowColumn","Flex","Grid","RuleBased","Free","defaultRenderer","props","className","children","getAdjustedColumns","columns","fixedColumns","dynamic","columnsToUse","filter","slotName","transformed","transformColumns","adjusted","adjustColumns","size","sizeClassNames","renderRow","divider","id","adjustedColumns","trim","Fragment","renderColumn","root","getSize","toNumber","Number","isNaN","totalSize","sumBy","Math","round","shaveOffLargest","toChange","sizes","largestIndex","gt","addOnToSmallest","smallestIndex","lt","getAdjustColumnSizesFn","gridSize","error","sum","counts","countBy","keys","abs","parseInt","adjustmentFn","range","renderChild","rules","validStyles","height","includeClassName","class","items","renderFlex","inline","renderGrid","algorithm","fillGaps","defaultRules","renderSlot","hook-insert","elm","calculateSizesAndGroup","debounce","recalculateOnResize","parentNode","hook-update","isEqual","hook-remove","v","removeCallback","parentElement","getGutterSpace","groups","renderGroup","group","maxWidth","groupWidth","maxHeight","groupHeight","additionalHeight","sizing","width","gutterSpace","groupSlots","getComputedStyle","getPropertyValue","slotList","getElementsByTagName","domSlots","current","assignedNode","assignedNodes","rect","getBoundingClientRect","newSlot","isNil","partition","remainders","tooLarge","buildGroups","invalids","rowWidth","rowHeight","slotWidth","slotHeight","lastGroup","availableWidth","filled","remainingWidth","smallest","minBy","h","w","candidate","find","currentIndex","findIndex","isUndefined","tryMakeSuperGroup","remove","prev","next","makeSuperGroup","parent","child","childIndex","splice","renderFree","toString","useSourceMap","list","this","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","alreadyImportedModules","queryVars","mobileModel","tabletModel","defaultModel"],"mappings":"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","file":"sn-layout.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__lodash_4_17_15;","module.exports = __TECTONIC__lodash_4_17_15[\"get\"];","import { reduce } from 'lodash';\n\nexport const GRID_SIZE = 12;\n\nexport const findIndexBy = (collection, comparison) => {\n\treturn reduce(\n\t\tcollection,\n\t\t(result, val, i, all) => (comparison(val, all[result]) ? i : result),\n\t\t0\n\t);\n};\n","export { default as SnLayout } from './sn-layout';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport mediaQueryBehavior from '@servicenow/behavior-media-query';\nimport slottedPolyfillBehavior from './slotted-polyfill-behavior';\nimport childrenWithSlotBehavior from './children-with-slot-behavior';\nimport rtlBehavior from '@servicenow/behavior-rtl';\n\nimport get from 'lodash/get';\nimport isString from 'lodash/isString';\n\nimport getLayoutRuntime from './runtimes';\nimport styles from './styles.scss';\nimport { getModelByDevice } from './runtimes/getModelByDevice';\n\nconst parseModel = (rawModel = null) => {\n\tif (isString(rawModel)) {\n\t\tlet model = null;\n\n\t\ttry {\n\t\t\tmodel = JSON.parse(rawModel);\n\t\t} catch (e) {\n\t\t\t/* eslint-disable-next-line no-console */\n\t\t\tconsole.warn('Unable to parse model in sn-layout');\n\t\t}\n\n\t\treturn model;\n\t} else {\n\t\treturn rawModel;\n\t}\n};\n\nconst view = (state, { dispatch }) => {\n\tconst model = parseModel(get(state, 'properties.model'));\n\n\tif (!model) return null;\n\n\tconst { modelByDevice, isDesktopModel } = getModelByDevice(\n\t\tmodel,\n\t\tstate.behaviors.mediaQuery\n\t);\n\n\tconst runtimeFn = getLayoutRuntime(modelByDevice);\n\treturn runtimeFn({\n\t\t...state.properties,\n\t\tmodel: modelByDevice,\n\t\tisMobile: !isDesktopModel,\n\t\tdispatch,\n\t\truleBasedRows: state.ruleBasedRows,\n\t\tcurrentSlots: state.currentSlots,\n\t\tchildrenWithSlot: state.behaviors.childrenWithSlot.slots\n\t});\n};\n\nconst TAG_NAME = 'sn-layout';\ncreateCustomElement(TAG_NAME, {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tmodel: {},\n\t\tparentTag: {\n\t\t\treflect: true\n\t\t},\n\t\trenderers: {\n\t\t\tdefault: {\n\t\t\t\tcolumn: null,\n\t\t\t\trow: null\n\t\t\t}\n\t\t},\n\t\tcollapsibleColumns: []\n\t},\n\tinitialState: {\n\t\truleBasedRows: [],\n\t\tcurrentSlots: undefined, // slots the DOM has rendered for ruleBased layouts\n\t\tresizeFn: null,\n\t\tmutationObserver: null\n\t},\n\tstyles,\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: slottedPolyfillBehavior,\n\t\t\toptions: {\n\t\t\t\tselector: '[slot]'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tbehavior: mediaQueryBehavior,\n\t\t\toptions: {\n\t\t\t\tisMobile: '(max-width: 480px)',\n\t\t\t\tisTablet: '(max-width: 1024px)',\n\t\t\t\tisDesktop: '(min-width: 1024px)'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tbehavior: childrenWithSlotBehavior\n\t\t},\n\t\t{ behavior: rtlBehavior }\n\t],\n\tactionHandlers: {\n\t\tCALCULATE_RULE_BASED_ROW({ action, updateState }) {\n\t\t\tupdateState({\n\t\t\t\truleBasedRows: action.payload.rows,\n\t\t\t\tcurrentSlots: action.payload.slots\n\t\t\t});\n\t\t},\n\t\tSET_MUTATION_OBSERVER_AND_RESIZE_FN({ action, updateState }) {\n\t\t\tconst resize = action.payload.resizeFn();\n\t\t\twindow.addEventListener('resize', resize);\n\n\t\t\tconst observer = new MutationObserver(() => {\n\t\t\t\taction.payload.callback();\n\t\t\t});\n\n\t\t\tobserver.observe(action.payload.host, {\n\t\t\t\tchildList: true,\n\t\t\t\tattributes: true,\n\t\t\t\tsubtree: true\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\tmutationObserver: observer,\n\t\t\t\tresizeFn: resize\n\t\t\t});\n\t\t},\n\t\tUNSET_MUTATION_OBSERVER_AND_RESIZE_FN({ state, updateState }) {\n\t\t\twindow.removeEventListener('resize', state.resizeFn);\n\t\t\tstate.mutationObserver.disconnect();\n\t\t\tupdateState({\n\t\t\t\tmutationObserver: null,\n\t\t\t\tresizeFn: null\n\t\t\t});\n\t\t}\n\t}\n});\n\nexport default TAG_NAME;\n","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__$servicenow_behavior_media_query_19_0_10;","/**\n * Seismic does not polyfill the `::slotted` psuedo-selector, which we use all\n * over this project to set margin between multiple slotted elements.\n *\n * This is a hacky workaround to inline margins onto the slotted components\n * directly for IE11/Edge browsers.\n */\nimport { toLower, forEach } from 'lodash';\n\nconst MARGIN_MAP = {\n\t'now-uxf-page': '1.5rem',\n\tdefault: '0.75rem'\n};\n\nexport function getMargin(locals, el) {\n\treturn (\n\t\tlocals[toLower(el.tagName)] ||\n\t\tlocals[toLower(el.getAttribute('parent-tag'))] ||\n\t\tlocals.default\n\t);\n}\n\nexport function isIEOrEdge(userAgent) {\n\treturn /Trident\\/|Edge/.test(userAgent);\n}\n\nexport default {\n\tname: 'slottedPolyfill',\n\tonConnect(el, _, { selector = '*' }) {\n\t\tif (!isIEOrEdge(window.navigator.userAgent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst margin = getMargin(MARGIN_MAP, el);\n\n\t\tif (margin) {\n\t\t\tforEach(el.querySelectorAll(selector), el => {\n\t\t\t\tel.style.display = 'block';\n\t\t\t\tel.style.marginBottom = margin;\n\t\t\t});\n\t\t}\n\t}\n};\n","import { map } from 'lodash';\n\nconst BEHAVIOR_NAME = 'childrenWithSlot';\n\nconst mutationObserver = new WeakMap();\n\n/**\n * The childrenWithSlot behavior has a list of the child elements\n * that have a 'slot' attribute\n */\nexport default {\n\tname: BEHAVIOR_NAME,\n\tinitialState: {\n\t\tslots: new Map()\n\t},\n\tactionHandlers: {\n\t\tUPDATE_SLOT_LIST({ action, state, updateState }) {\n\t\t\tconst { added, removed } = action.payload;\n\t\t\tconst res = new Map(state.behaviors[BEHAVIOR_NAME].slots);\n\t\t\tremoved.map(r => {\n\t\t\t\tconst count = res.get(r);\n\t\t\t\tcount > 1 ? res.set(r, count - 1) : res.delete(r);\n\t\t\t});\n\t\t\tadded.map(a => res.set(a, res.has(a) ? res.get(a) + 1 : 1));\n\t\t\tupdateState({\n\t\t\t\tpath: `behaviors.${BEHAVIOR_NAME}.slots`,\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: res\n\t\t\t});\n\t\t},\n\t\tCLEAR_SLOTS_MAP({ state, updateState }) {\n\t\t\tconst res = state.behaviors[BEHAVIOR_NAME].slots;\n\t\t\tres.clear();\n\t\t\tupdateState({\n\t\t\t\tpath: `behaviors.${BEHAVIOR_NAME}.slots`,\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: res\n\t\t\t});\n\t\t}\n\t},\n\tactions: {\n\t\tUPDATE_SLOT_LIST: {\n\t\t\tprivate: true\n\t\t},\n\t\tCLEAR_SLOTS_MAP: {\n\t\t\tprivate: true\n\t\t}\n\t},\n\tonConnect(el, { dispatch }) {\n\t\tif (!mutationObserver.has(el)) {\n\t\t\tconst observer = new MutationObserver(mutations => {\n\t\t\t\tconst changes = mutations.reduce(\n\t\t\t\t\t(acc, m) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tm.type === 'attributes' &&\n\t\t\t\t\t\t\tm.attributeName === 'slot' &&\n\t\t\t\t\t\t\tm.target.slot !== m.oldValue\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tacc.added.push(m.target.slot);\n\t\t\t\t\t\t\tacc.removed.push(m.oldValue);\n\t\t\t\t\t\t} else if (m.type === 'childList') {\n\t\t\t\t\t\t\tif (m.removedNodes.length > 0) {\n\t\t\t\t\t\t\t\tmap(m.removedNodes, n => acc.removed.push(n.slot));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m.addedNodes.length > 0) {\n\t\t\t\t\t\t\t\tmap(m.addedNodes, n => acc.added.push(n.slot));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{ added: [], removed: [] }\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tdispatch &&\n\t\t\t\t\t(changes.added.length > 0 || changes.removed.length > 0)\n\t\t\t\t) {\n\t\t\t\t\tdispatch('UPDATE_SLOT_LIST', changes);\n\t\t\t\t}\n\t\t\t});\n\t\t\tobserver.observe(el, {\n\t\t\t\tchildList: true,\n\t\t\t\tattributes: true,\n\t\t\t\tsubtree: true,\n\t\t\t\tattributeOldValue: true\n\t\t\t});\n\t\t\tmutationObserver.set(el, observer);\n\t\t}\n\t\tdispatch('UPDATE_SLOT_LIST', {\n\t\t\tadded: map(el.querySelectorAll('[slot]'), e => e.slot),\n\t\t\tremoved: []\n\t\t});\n\t},\n\tonDisconnect(el, { dispatch }) {\n\t\tmutationObserver.delete(el);\n\t\tdispatch('CLEAR_SLOTS_MAP');\n\t}\n};\n","module.exports = __TECTONIC__$servicenow_behavior_rtl_19_0_10;","module.exports = __TECTONIC__lodash_4_17_15[\"isString\"];","import RowColumn from './RowColumn/';\nimport Flex from './Flex/';\nimport Grid from './Grid/';\nimport RuleBased from './RuleBased/';\nimport Free from './Free';\nimport get from 'lodash/get';\n\nconst getLayoutRuntime = model => {\n\tconst type = get(model, 'type');\n\n\tswitch (type) {\n\t\tcase 'rowColumn':\n\t\t\treturn RowColumn;\n\t\tcase 'flex':\n\t\t\treturn Flex;\n\t\tcase 'grid':\n\t\t\treturn Grid;\n\t\tcase 'ruleBased':\n\t\t\treturn RuleBased;\n\t\tcase 'free':\n\t\t\treturn Free;\n\t\tdefault:\n\t\t\t/* eslint-disable-next-line no-console */\n\t\t\tconsole.warn(`Unknown layout type ${type}. Nothing will be rendered!`);\n\t\t\treturn () => null;\n\t}\n};\n\nexport default getLayoutRuntime;\n","import { transformColumns } from './transformColumns';\nimport { adjustColumns } from './adjustColumns';\nimport { map } from 'lodash';\nimport { Fragment } from '@servicenow/ui-renderer-snabbdom';\n\nfunction defaultRenderer(props) {\n\treturn <div className={props.className}>{props.children}</div>;\n}\n\nexport const getAdjustedColumns = (\n\tcolumns,\n\tfixedColumns = false,\n\tchildrenWithSlot,\n\tdynamic\n) => {\n\tconst columnsToUse = dynamic\n\t\t? columns.filter(c => childrenWithSlot.has(c.slotName))\n\t\t: columns;\n\tconst transformed = transformColumns(columnsToUse, dynamic, childrenWithSlot);\n\tconst adjusted = adjustColumns(transformed);\n\n\treturn map(adjusted, (size, i) => {\n\t\tconst sizeClassNames = fixedColumns\n\t\t\t? `col-xs-${size}`\n\t\t\t: `col-md-${size} col-xs-12`;\n\n\t\treturn {\n\t\t\t...columnsToUse[i],\n\t\t\tsizeClassNames\n\t\t};\n\t});\n};\n\nexport const renderRow = (row, renderers, childrenWithSlot, dynamic) => {\n\tconst { type, slotName, isMobile, divider, columns, id } = row;\n\n\tif (type !== 'row') return null;\n\n\tconst adjustedColumns = getAdjustedColumns(\n\t\tcolumns,\n\t\tisMobile,\n\t\tchildrenWithSlot,\n\t\tdynamic\n\t);\n\n\tconst className = `row ${divider ? 'divider-row' : ''}`.trim();\n\n\treturn (renderers.row || defaultRenderer)({\n\t\tclassName,\n\t\tid,\n\t\tchildren: (\n\t\t\t<Fragment>\n\t\t\t\t{map(adjustedColumns, column =>\n\t\t\t\t\trenderColumn(column, renderers, childrenWithSlot, dynamic)\n\t\t\t\t)}\n\t\t\t\t{slotName &&\n\t\t\t\t\trenderColumn(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\tslotName,\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t},\n\t\t\t\t\t\trenderers\n\t\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t)\n\t});\n};\n\nexport const renderColumn = (column, renderers, childrenWithSlot, dynamic) => {\n\tconst {\n\t\ttype,\n\t\tslotName,\n\t\trows,\n\t\tdivider,\n\t\tsizeClassNames = 'col-xs-12',\n\t\tstyles,\n\t\tid\n\t} = column;\n\n\tif (type !== 'column') return null;\n\n\tconst className = `column ${sizeClassNames} ${\n\t\tdivider ? 'divider-column' : ''\n\t}`.trim();\n\n\treturn (renderers.column || defaultRenderer)({\n\t\tclassName,\n\t\tid,\n\t\tchildren: (\n\t\t\t<Fragment>\n\t\t\t\t{map(rows, row => renderRow(row, renderers, childrenWithSlot, dynamic))}\n\t\t\t\t{slotName ? (\n\t\t\t\t\t<div style={styles}>\n\t\t\t\t\t\t<div className=\"slot-wrapper\">\n\t\t\t\t\t\t\t<slot name={slotName} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</Fragment>\n\t\t)\n\t});\n};\n\nexport default ({ model, renderers, childrenWithSlot }) => {\n\tlet { root, dynamic, styles } = model;\n\tif (root.type !== 'row') {\n\t\troot = {\n\t\t\ttype: 'row',\n\t\t\tcolumns: [{ ...root }]\n\t\t};\n\t}\n\treturn (\n\t\t<div style={styles}>\n\t\t\t{renderRow(root, renderers, childrenWithSlot, dynamic)}\n\t\t</div>\n\t);\n};\n","import { GRID_SIZE } from './utils';\nimport { map, sumBy, get, toNumber } from 'lodash';\n\nexport function getSize(column) {\n\tconst size = toNumber(get(column, 'size', 1));\n\treturn Number.isNaN(size) ? 1 : size;\n}\n\nexport const transformColumns = columns => {\n\tconst totalSize = sumBy(columns, getSize);\n\treturn map(columns, c => Math.round((getSize(c) / totalSize) * GRID_SIZE));\n};\n","import { GRID_SIZE, findIndexBy } from './utils';\nimport { map, sum, range, reduce, gt, lt, countBy } from 'lodash';\n\nexport const shaveOffLargest = toChange => sizes => {\n\t// columns of size 1 cannot be shaved\n\tif (toChange && toChange > 1) {\n\t\treturn map(sizes, size => (size === toChange ? size - 1 : size));\n\t}\n\tconst largestIndex = findIndexBy(sizes, gt);\n\treturn map(sizes, (size, i) => (i === largestIndex ? size - 1 : size));\n};\n\nexport const addOnToSmallest = toChange => sizes => {\n\tif (toChange) {\n\t\treturn map(sizes, size => (size === toChange ? size + 1 : size));\n\t}\n\tconst smallestIndex = toChange ? toChange : findIndexBy(sizes, lt);\n\treturn map(sizes, (size, i) => (i === smallestIndex ? size + 1 : size));\n};\n\nexport const getAdjustColumnSizesFn = gridSize => sizes => {\n\tconst total = sum(sizes);\n\tconst error = total - gridSize;\n\n\t// figure out what to adjust\n\tconst counts = countBy(sizes);\n\n\tlet toChange = Object.keys(counts).filter(\n\t\ti => i !== 1 && counts[i] === Math.abs(error)\n\t);\n\n\t// If there is an exact match of number of things to change\n\t// also don't let column sizes drop lower than 1\n\ttoChange = toChange.length === 1 ? parseInt(toChange[0]) : 0;\n\n\tconst adjustmentFn = error > 0 ? shaveOffLargest : addOnToSmallest;\n\treturn reduce(range(error), adjustmentFn(toChange), sizes);\n};\n\nexport const adjustColumns = getAdjustColumnSizesFn(GRID_SIZE);\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\n\nconst renderFlex = (rules, items, styles) => {\n\treturn (\n\t\t<div className=\"flex\" style={{ ...styles, ...rules }}>\n\t\t\t{items.map(renderChild)}\n\t\t</div>\n\t);\n};\n\nconst renderChild = ({ rules, slotName, styles = {} }) => {\n\tconst validStyles = {\n\t\t...styles,\n\t\theight: styles.height || '100%'\n\t};\n\tconst includeClassName = Object.keys(styles).length === 0;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{slotName ? (\n\t\t\t\t<div className=\"flex-item\" style={rules}>\n\t\t\t\t\t<div style={validStyles} class={{ 'slot-wrapper': includeClassName }}>\n\t\t\t\t\t\t<slot name={slotName} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</Fragment>\n\t);\n};\n\nexport default ({ model }) => {\n\tconst { rules, items, styles } = model;\n\treturn renderFlex(rules, items, styles);\n};\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\n\nconst renderGrid = (inline, rules, items, styles) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={inline ? 'grid-inline' : 'grid-block'}\n\t\t\tstyle={{ ...styles, ...rules }}\n\t\t>\n\t\t\t{items.map(renderChild)}\n\t\t</div>\n\t);\n};\n\nconst renderChild = ({ rules, slotName, styles = {} }) => {\n\tconst validStyles = {\n\t\t...styles,\n\t\theight: styles.height || '100%'\n\t};\n\tconst includeClassName = Object.keys(styles).length === 0;\n\n\trules = {\n\t\t'min-width': '0',\n\t\t...rules\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{slotName ? (\n\t\t\t\t<div className=\"grid-item\" style={rules}>\n\t\t\t\t\t<div style={validStyles} class={{ 'slot-wrapper': includeClassName }}>\n\t\t\t\t\t\t<slot name={slotName} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</Fragment>\n\t);\n};\n\nexport default ({ model }) => {\n\tconst { inline, rules, items, styles } = model;\n\treturn renderGrid(inline, rules, items, styles);\n};\n","import { calculateSizesAndGroup, getGutterSpace } from './utils';\nimport { isEqual, debounce, sumBy } from 'lodash';\n\nexport default ({ model, dispatch, ruleBasedRows, currentSlots }) => {\n\tconst { rules, items } = model;\n\n\tlet renderFn = rules.algorithm === 'fillGaps' ? fillGaps : defaultRules;\n\n\treturn renderFn(items, dispatch, ruleBasedRows, currentSlots);\n};\n\nconst defaultRules = slots => {\n\treturn <div className=\"rule-based\">{slots.map(renderSlot)}</div>;\n};\n\nconst recalculateOnResize = (slots, dispatch, elm) =>\n\tdebounce(() => calculateSizesAndGroup(slots, dispatch, elm), 200);\n\nconst fillGaps = (slots, dispatch, ruleBasedRows, currentSlots) => {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"rule-based\"\n\t\t\thook-insert={({ elm }) => {\n\t\t\t\tcalculateSizesAndGroup(slots, dispatch, elm);\n\t\t\t\tdispatch('SET_MUTATION_OBSERVER_AND_RESIZE_FN', {\n\t\t\t\t\tcallback: () => calculateSizesAndGroup(slots, dispatch, elm),\n\t\t\t\t\tresizeFn: () => recalculateOnResize(slots, dispatch, elm),\n\t\t\t\t\thost: elm.parentNode.host\n\t\t\t\t});\n\t\t\t}}\n\t\t\thook-update={(o, n) => {\n\t\t\t\tif (!isEqual(currentSlots, slots)) {\n\t\t\t\t\tcalculateSizesAndGroup(slots, dispatch, n.elm);\n\t\t\t\t}\n\t\t\t}}\n\t\t\thook-remove={(v, removeCallback) => {\n\t\t\t\tdispatch('UNSET_MUTATION_OBSERVER_AND_RESIZE_FN');\n\t\t\t\tif (removeCallback) removeCallback();\n\t\t\t}}\n\t\t\tkey=\"rule-based\"\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"absolute-wrapper\"\n\t\t\t\thook-update={(o, n) => {\n\t\t\t\t\tif (n && isEqual(currentSlots, slots)) {\n\t\t\t\t\t\tn.elm.parentElement.style.height =\n\t\t\t\t\t\t\tsumBy(ruleBasedRows, 'rowHeight') +\n\t\t\t\t\t\t\tgetGutterSpace() * (ruleBasedRows.length - 1) +\n\t\t\t\t\t\t\t'px';\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ruleBasedRows.length > 0 && isEqual(currentSlots, slots) ? (\n\t\t\t\t\truleBasedRows.map(renderRow)\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"rule-based-first-render\">{slots.map(renderSlot)}</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderRow = row => {\n\treturn <span className=\"rule-based-row\">{row.groups.map(renderGroup)}</span>;\n};\n\nconst renderGroup = group => {\n\treturn (\n\t\t<span\n\t\t\tclassName=\"rule-based-group\"\n\t\t\tstyle={{\n\t\t\t\tmaxWidth: `${group.groupWidth}px`,\n\t\t\t\tmaxHeight: `${group.groupHeight + group.additionalHeight}px`\n\t\t\t}}\n\t\t>\n\t\t\t{group.slots.map(s => (s.slots ? renderGroup(s) : renderSlot(s)))}\n\t\t</span>\n\t);\n};\n\nconst renderSlot = s => {\n\tconst sizing = { height: s.height, width: s.width };\n\treturn (\n\t\t<span className=\"rule-based-slot\" style={sizing}>\n\t\t\t<slot name={s.name} />\n\t\t</span>\n\t);\n};\n","import {\n\tfind,\n\tminBy,\n\tisUndefined,\n\tisNil,\n\tremove,\n\tsumBy,\n\tfindIndex,\n\treduce,\n\tpartition\n} from 'lodash';\n\nlet gutterSpace = 0; // gets set based on first render\n\nexport const getGutterSpace = () => {\n\treturn gutterSpace;\n};\n\n/**\n * 1. Sets the gutterspace after first render\n * 2. Gets the sizes of the contents of each slot and creates a new list\n *    based on the slots list from the json model\n *\n * @param {list} slots list from json model\n * @param {function} dispatch\n * @param {object} elm \"rule-based\" div\n */\nexport const calculateSizesAndGroup = (slots, dispatch, elm) => {\n\tif (gutterSpace === 0) {\n\t\tgutterSpace = Math.abs(\n\t\t\tparseInt(\n\t\t\t\twindow.getComputedStyle(elm, null).getPropertyValue('margin-left'),\n\t\t\t\t10\n\t\t\t) * 2\n\t\t);\n\t}\n\n\tconst slotList = elm.getElementsByTagName('slot');\n\n\t// get the dimensions that we will use to determine groups\n\tconst domSlots = reduce(\n\t\tslots,\n\t\t(acc, s) => {\n\t\t\tconst current = slotList[s.name];\n\t\t\tconst assignedNode =\n\t\t\t\tcurrent && current.assignedNodes\n\t\t\t\t\t? current.assignedNodes()[0]\n\t\t\t\t\t: undefined;\n\t\t\tif (assignedNode) {\n\t\t\t\tconst rect = assignedNode.getBoundingClientRect();\n\t\t\t\treturn [\n\t\t\t\t\t...acc,\n\t\t\t\t\t{\n\t\t\t\t\t\tname: s.name,\n\t\t\t\t\t\twidth: rect.width,\n\t\t\t\t\t\theight: rect.height\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t// if slot in the json doesn't exist in dom, we find the dom element this way\n\t\t\t\tconst newSlot = elm.parentNode.host.querySelectorAll(\n\t\t\t\t\t`[slot=\"${s.name}\"]`\n\t\t\t\t)[0];\n\t\t\t\tif (!isNil(newSlot)) {\n\t\t\t\t\tconst rect = newSlot.getBoundingClientRect();\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: s.name,\n\t\t\t\t\t\t\twidth: rect.width,\n\t\t\t\t\t\t\theight: rect.height\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\tdispatch('CALCULATE_RULE_BASED_ROW', {\n\t\trows: groupSlots(domSlots, elm.getBoundingClientRect().width, gutterSpace),\n\t\tslots\n\t});\n};\n\n/**\n * Groups slots and then puts those groups into different rows\n *\n * @param {List} slots the list of slots\n * @param {number} maxWidth The width sn-layout can take up\n * @param {number} gutterSpace The padding between slots\n */\nexport const groupSlots = (slots, maxWidth, gutterSpace) => {\n\tconst rows = [];\n\t// things that are too large shouldn't go through buildGroups()\n\tlet [remainders, tooLarge] = partition(\n\t\tslots,\n\t\ts => s.width + gutterSpace <= maxWidth\n\t);\n\n\t// create new rows as long as there are remainders\n\twhile (remainders.length > 0) {\n\t\tconst { groups, invalids, rowWidth, rowHeight } = buildGroups(\n\t\t\tremainders,\n\t\t\tmaxWidth,\n\t\t\tgutterSpace\n\t\t);\n\t\trows.push({ groups, rowWidth, rowHeight });\n\t\tremainders = invalids;\n\t}\n\n\t// render things that are too large into their own group at the end\n\tif (tooLarge.length) {\n\t\tconst width = sumBy(tooLarge, 'width');\n\t\tconst height = sumBy(tooLarge, 'height');\n\t\trows.push({\n\t\t\tgroups: [\n\t\t\t\t{\n\t\t\t\t\tslots: tooLarge,\n\t\t\t\t\tgroupHeight: height,\n\t\t\t\t\tgroupWidth: width\n\t\t\t\t}\n\t\t\t],\n\t\t\trowHeight: height,\n\t\t\trowWidth: width\n\t\t});\n\t}\n\n\treturn rows;\n};\n\n/**\n * Fills a row with groups that can layout in order\n * 1. Renders a row of slots\n * 2. Fills in the gaps left by the slots rendered in the first row\n * 3. Group up slots (and group up groups if necessary) in order to determine\n *    how large any remaining gaps are\n *\n * @param {list} slots list of slots with their heights and widths\n * @param {number} maxWidth\n * @param {number} gutterSpace\n */\nconst buildGroups = (slots, maxWidth, gutterSpace) => {\n\tconst invalids = [];\n\tconst groups = [];\n\tlet rowHeight = 0;\n\n\t// Initial groups, we render one row first as the initial group\n\tconst rowWidth = slots.reduce((acc, s, i) => {\n\t\tconst slotWidth = parseInt(s.width, 10);\n\t\tconst slotHeight = parseInt(s.height, 10);\n\t\tif (slotHeight > rowHeight) {\n\t\t\trowHeight = slotHeight;\n\t\t}\n\t\tif (acc + slotWidth + (i === 1 ? 0 : gutterSpace) <= maxWidth) {\n\t\t\t// group consecutive same-height slots\n\t\t\tconst lastGroup = groups[groups.length - 1];\n\t\t\tif (lastGroup && slotHeight === lastGroup.groupHeight) {\n\t\t\t\tlastGroup.slots.push(s);\n\t\t\t\tlastGroup.groupWidth += slotWidth + gutterSpace;\n\t\t\t\tlastGroup.availableWidth += slotWidth + gutterSpace;\n\t\t\t} else {\n\t\t\t\tgroups.push({\n\t\t\t\t\tslots: [s],\n\t\t\t\t\tgroupHeight: slotHeight,\n\t\t\t\t\tadditionalHeight: 0,\n\t\t\t\t\tgroupWidth: slotWidth + gutterSpace,\n\t\t\t\t\tavailableWidth: slotWidth,\n\t\t\t\t\tfilled: false\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn acc + slotWidth + gutterSpace;\n\t\t}\n\t\tinvalids.push(s);\n\t\treturn acc;\n\t}, 0);\n\n\t// last group in row should take up the rest of the width available\n\tconst remainingWidth = maxWidth - sumBy(groups, 'groupWidth');\n\tconst lastGroup = groups[groups.length - 1];\n\tlastGroup.groupWidth += remainingWidth;\n\tlastGroup.availableWidth += remainingWidth;\n\n\t// Fill in the groups until they are filled\n\t// We do this in order of smallest to largest height for a\n\t// logical order\n\twhile (find(groups, { filled: false }) && invalids.length > 0) {\n\t\tconst smallest = minBy(groups.filter(i => !i.filled), 'groupHeight');\n\n\t\t// calculate space left\n\t\tconst h = rowHeight - smallest.groupHeight;\n\t\tconst w = smallest.availableWidth;\n\n\t\t// see if anything fits in the space remaining\n\t\tconst candidate = find(invalids, slot => {\n\t\t\tconst slotWidth = parseInt(slot.width, 10);\n\t\t\tconst slotHeight = parseInt(slot.height, 10);\n\t\t\tif (slotWidth <= w && slotHeight <= h) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tconst currentIndex = findIndex(groups, smallest);\n\n\t\t// If nothing fits in the space remaining\n\t\tif (isUndefined(candidate)) {\n\t\t\t// make sure the group doesn't actually have more space\n\t\t\tsmallest.groupHeight += smallest.additionalHeight;\n\t\t\tsmallest.additionalHeight = 0;\n\t\t\tif (\n\t\t\t\tsmallest.groupHeight !== rowHeight &&\n\t\t\t\tsmallest.availableWidth + gutterSpace !== smallest.groupWidth\n\t\t\t) {\n\t\t\t\tsmallest.availableWidth = smallest.groupWidth - gutterSpace;\n\t\t\t} else {\n\t\t\t\t// otherwise try to make a supergroup, if unsuccessful, then the group is filled\n\t\t\t\tsmallest.filled = !tryMakeSuperGroup(currentIndex, rowHeight, groups);\n\t\t\t}\n\t\t} else {\n\t\t\t// if there is something that fits in the space remaining\n\t\t\tremove(invalids, i => i === candidate);\n\t\t\tconst slotWidth = parseInt(candidate.width, 10);\n\t\t\tconst slotHeight = parseInt(candidate.height, 10);\n\t\t\tsmallest.slots.push(candidate);\n\n\t\t\tif (slotWidth === smallest.availableWidth) {\n\t\t\t\tsmallest.groupHeight += slotHeight + gutterSpace;\n\t\t\t\tsmallest.availableWidth = smallest.groupWidth;\n\t\t\t} else {\n\t\t\t\t// if the candidate fills up the available width, we can\n\t\t\t\t// increase the groupHeight\n\t\t\t\tif (smallest.availableWidth === smallest.groupWidth) {\n\t\t\t\t\tsmallest.groupHeight += slotHeight + gutterSpace;\n\t\t\t\t} else if (smallest.additionalHeight < slotHeight) {\n\t\t\t\t\t// if the candidate didn't fill up the available width,\n\t\t\t\t\t// we have to try to fill in the available with while\n\t\t\t\t\t// making sure we keep track of the height we added\n\t\t\t\t\tsmallest.additionalHeight = slotHeight + gutterSpace;\n\t\t\t\t}\n\t\t\t\tsmallest.availableWidth -= slotWidth + gutterSpace;\n\t\t\t}\n\n\t\t\t// another possible place where we can make a super-group\n\t\t\ttryMakeSuperGroup(currentIndex, rowHeight, groups);\n\t\t}\n\t}\n\n\treturn {\n\t\tgroups,\n\t\tinvalids,\n\t\trowHeight,\n\t\trowWidth\n\t};\n};\n\n/**\n * Makes a super group if possible\n * @param {object} prev the object before smallest in groups\n * @param {object} next the object after smallest in groups\n * @param {object} smallest the smallest height slot/group in groups\n * @param {number} currentIndex index of smallest in groups\n */\nconst tryMakeSuperGroup = (currentIndex, rowHeight, groups) => {\n\tlet result = false;\n\tconst prev = groups[currentIndex - 1];\n\tconst next = groups[currentIndex + 1];\n\tlet smallest = groups[currentIndex];\n\tif (\n\t\tprev &&\n\t\tprev.groupHeight + prev.additionalHeight >=\n\t\t\tsmallest.groupHeight + smallest.additionalHeight &&\n\t\tprev.groupHeight + prev.additionalHeight !== rowHeight\n\t) {\n\t\tmakeSuperGroup(prev, smallest, currentIndex, groups);\n\t\twhile (\n\t\t\tgroups[currentIndex] &&\n\t\t\tgroups[currentIndex].groupHeight === prev.groupHeight\n\t\t) {\n\t\t\tmakeSuperGroup(prev, groups[currentIndex], currentIndex, groups);\n\t\t}\n\t\tresult = true;\n\t}\n\tif (\n\t\tnext &&\n\t\tnext.groupHeight + next.additionalHeight >=\n\t\t\tsmallest.groupHeight + smallest.additionalHeight &&\n\t\tnext.groupHeight + next.additionalHeight !== rowHeight\n\t) {\n\t\tsmallest.slots = [{ ...smallest }];\n\t\twhile (\n\t\t\tcurrentIndex + 1 < groups.length &&\n\t\t\tgroups[currentIndex + 1] &&\n\t\t\tgroups[currentIndex + 1].groupHeight +\n\t\t\t\tgroups[currentIndex + 1].additionalHeight >=\n\t\t\t\tsmallest.groupHeight + smallest.additionalHeight\n\t\t) {\n\t\t\tmakeSuperGroup(\n\t\t\t\tsmallest,\n\t\t\t\tgroups[currentIndex + 1],\n\t\t\t\tcurrentIndex + 1,\n\t\t\t\tgroups\n\t\t\t);\n\t\t}\n\t\tresult = true;\n\t}\n\treturn result;\n};\n\n/**\n * Combines slots and groups into a single group\n * @param {object} parent The base group\n * @param {object} child The slot or group to be added to parent\n * @param {number} childIndex\n */\nconst makeSuperGroup = (parent, child, childIndex, groups) => {\n\tparent.slots.push({ ...child });\n\tparent.availableWidth += child.groupWidth;\n\tparent.groupWidth += child.groupWidth;\n\tgroups.splice(childIndex, 1);\n};\n","const renderFree = (children, styles) => {\n\treturn <div style={styles}>{children.map(renderChild)}</div>;\n};\n\nconst renderChild = child => {\n\tconst { slotName, styles, children = [] } = child;\n\n\treturn (\n\t\t<div style={styles}>\n\t\t\t{slotName ? (\n\t\t\t\t<div className=\"slot-wrapper\">\n\t\t\t\t\t<slot name={slotName} />\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{children.map(renderChild)}\n\t\t</div>\n\t);\n};\n\nexport default ({ model }) => {\n\tconst { children, styles } = model;\n\treturn renderFree(children, styles);\n};\n","\n        var result = require(\"!!../node_modules/css-loader/index.js!../node_modules/postcss-loader/src/index.js??ref--6-2!../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flex{display:flex}.flex-item{flex:1 1 auto}.grid-block{display:grid;height:100%}.grid-inline{display:inline-grid;height:100%}.grid-item,.grid-item .slot-wrapper{height:100%}.absolute-wrapper{position:relative}.rule-based{display:flex;flex-wrap:wrap;margin:0 -.75rem}.rule-based-slot{margin:0 .75rem}.rule-based-row{display:flex;flex-direction:row;align-content:flex-start}.rule-based-group{display:flex;flex-direction:row;flex-wrap:wrap;margin-bottom:1.5rem}.rule-based-first-render{display:block;visibility:hidden;position:absolute}.divider-column{border-right:1px solid rgb(var(--now-color--divider-primary,var(--now-color--neutral-7,135,147,148)))}.divider-row{border-bottom:1px solid rgb(var(--now-color--divider-primary,var(--now-color--neutral-7,135,147,148)))}.row{display:flex;flex:0 1 auto;flex-wrap:wrap}.column,.row{box-sizing:border-box}.column{flex:0 0 auto}.row{margin-left:-.375rem;margin-right:-.375rem}.row:not(:last-of-type){margin-bottom:.75rem}.divider-row{padding-bottom:.75rem}.column{padding-left:.375rem;padding-right:.375rem}.column .slot-wrapper{margin-bottom:-.75rem}.column .slot-wrapper ::slotted(*){display:block;margin-bottom:.75rem}.divider-column{padding-right:.75rem}.divider-column+.column{padding-left:.75rem}:host([parent-tag=now-uxf-page]) .row{margin-left:-.75rem;margin-right:-.75rem}:host([parent-tag=now-uxf-page]) .row:not(:last-of-type){margin-bottom:1.5rem}:host([parent-tag=now-uxf-page]) .divider-row{padding-bottom:1.5rem}:host([parent-tag=now-uxf-page]) .column{padding-left:.75rem;padding-right:.75rem}:host([parent-tag=now-uxf-page]) .column .slot-wrapper{margin-bottom:-1.5rem}:host([parent-tag=now-uxf-page]) .column .slot-wrapper ::slotted(*){display:block;margin-bottom:1.5rem}:host([parent-tag=now-uxf-page]) .divider-column{padding-right:1.5rem}:host([parent-tag=now-uxf-page]) .divider-column+.column{padding-left:1.5rem}.col-xs-1{flex-basis:8.33333%;max-width:8.33333%}.col-xs-2{flex-basis:16.66667%;max-width:16.66667%}.col-xs-3{flex-basis:25%;max-width:25%}.col-xs-4{flex-basis:33.33333%;max-width:33.33333%}.col-xs-5{flex-basis:41.66667%;max-width:41.66667%}.col-xs-6{flex-basis:50%;max-width:50%}.col-xs-7{flex-basis:58.33333%;max-width:58.33333%}.col-xs-8{flex-basis:66.66667%;max-width:66.66667%}.col-xs-9{flex-basis:75%;max-width:75%}.col-xs-10{flex-basis:83.33333%;max-width:83.33333%}.col-xs-11{flex-basis:91.66667%;max-width:91.66667%}.col-xs-12{flex-basis:100%;max-width:100%}@media only screen and (min-width:64rem){.col-md-1{flex-basis:8.33333%;max-width:8.33333%}.col-md-2{flex-basis:16.66667%;max-width:16.66667%}.col-md-3{flex-basis:25%;max-width:25%}.col-md-4{flex-basis:33.33333%;max-width:33.33333%}.col-md-5{flex-basis:41.66667%;max-width:41.66667%}.col-md-6{flex-basis:50%;max-width:50%}.col-md-7{flex-basis:58.33333%;max-width:58.33333%}.col-md-8{flex-basis:66.66667%;max-width:66.66667%}.col-md-9{flex-basis:75%;max-width:75%}.col-md-10{flex-basis:83.33333%;max-width:83.33333%}.col-md-11{flex-basis:91.66667%;max-width:91.66667%}.col-md-12{flex-basis:100%;max-width:100%}}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import get from 'lodash/get';\n\nexport const getModelByDevice = (model, queryVars) => {\n\tconst { isMobile, isTablet } = queryVars;\n\tconst mobileModel = get(model, 'mobile');\n\tconst tabletModel = get(model, 'tablet');\n\tconst defaultModel = get(model, 'default');\n\tlet modelByDevice;\n\n\tif (isMobile) {\n\t\tmodelByDevice = mobileModel || tabletModel || defaultModel;\n\t} else if (isTablet) {\n\t\tmodelByDevice = tabletModel || defaultModel || mobileModel;\n\t} else {\n\t\tmodelByDevice = defaultModel || tabletModel || mobileModel;\n\t}\n\n\treturn {\n\t\tmodelByDevice,\n\t\tisDesktopModel: modelByDevice === defaultModel\n\t};\n};\n"],"sourceRoot":""}