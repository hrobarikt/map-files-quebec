{"version":3,"sources":["webpack://__TECTONIC__sn_component_timeago/webpack/bootstrap","webpack://__TECTONIC__sn_component_timeago/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__sn_component_timeago/./src/snTimeago/SnTimerService.js","webpack://__TECTONIC__sn_component_timeago/./src/index.js","webpack://__TECTONIC__sn_component_timeago/./src/snTimeago/SnTimeAgo.js","webpack://__TECTONIC__sn_component_timeago/./src/snTimeago/SnDateTimeWordService.js","webpack://__TECTONIC__sn_component_timeago/external \"__TECTONIC__lodash_4_17_4[\\\"isNumber\\\"]\"","webpack://__TECTONIC__sn_component_timeago/external \"__TECTONIC__lodash_4_17_4[\\\"isFunction\\\"]\"","webpack://__TECTONIC__sn_component_timeago/external \"__TECTONIC__sn_uxpage_presource_18_0_3\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__sn_translate","snTimerService","this","_fnArray","fn","_interval","setInterval","_fireEvents","push","_remove","index","indexOf","splice","forEach","SnTimeAgo","UNKNOWN","NOP","props","timestamp","options","_removeFn","_options","_incoming","timestampLong","timeAvailable","update","preUserData","preUserPrefs","dateFormat","getPreSource","find","dateFormatObj","_parseDateFormatPref","_DEFAULT_OPTIONS","user","timeZoneOffset","updateFn","remove","add","getTickTime","systemTime","timeAgo","dateBoth","dateOnly","date","snDateTimeWordService","parse","words","getWords","time","alternate","prefValue","replace","JSON","unused","console","warn","isSystemTime","dateParsed","_parse","Date","getTime","currentOffset","getTimezoneOffset","offset","SnDateTimeWordService","isValidDate","safariTimestamp","safariParsed","numericDate","parseInt","isDateOnly","baseDate","now","diff","days","actualDate","normalizedBaseDate","setHours","normalizedActualDate","Math","round","abs","daysBetween","_toWords","getDay","isNaN","diffMills","wantDate","diffDays","dayOfWeek","wantDateTime","isTomorrow","isToday","isYesterday","WORDS","WORD_LITERALS","isPast","AGO","ago","fromNow","NOW","justNow","almostNow","LAST","last","next","seconds","minutes","hours","years","substitute","minute","hour","today","yesterday","tomorrow","dayNames","ceil","month","months","year","string","number","undefined","format","day","numbers","__TECTONIC__lodash_4_17_4","__TECTONIC__sn_uxpage_presource_18_0_3"],"mappings":"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","file":"sn-component-timeago.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __TECTONIC__sn_translate;","const INTERVAL = 30 * 1000;\n\nclass SnTimerService {\n\tconstructor() {\n\t\tthis._fnArray = [];\n\t}\n\n\tadd(fn) {\n\t\tif (!this._interval) {\n\t\t\tthis._interval = setInterval(() => this._fireEvents(), INTERVAL);\n\t\t}\n\n\t\tthis._fnArray.push(fn);\n\t\treturn this._remove.bind(this, fn);\n\t}\n\n\t_remove(fn) {\n\t\tconst index = this._fnArray.indexOf(fn);\n\t\tif (index >= 0) {\n\t\t\tthis._fnArray.splice(index, 1);\n\t\t}\n\t}\n\n\t_fireEvents() {\n\t\tthis._fnArray.forEach(fn => fn());\n\t}\n}\n\nconst snTimerService = new SnTimerService();\nexport default snTimerService;","import SnTimeAgo from './snTimeago/SnTimeAgo';\nimport snTimerService from './snTimeago/SnTimerService';\n\nexport {SnTimeAgo, snTimerService};\n","import snDateTimeWordService from './SnDateTimeWordService';\nimport snTimerService from './SnTimerService';\nimport isFunction from 'lodash/isFunction';\nimport {t} from 'sn-translate';\nimport {preUserData, preUserPrefs} from 'sn-uxpage-presource';\n\nconst UNKNOWN = t('Unknown');\nconst NOP = () => {};\n\n\nexport default class SnTimeAgo {\n\tstatic getBehaviors() {\n\t\treturn [preUserData, preUserPrefs];\n\t}\n\n\tstatic _DEFAULT_OPTIONS = {\n\t\tsystemTime: false,\n\t\tdateOnly: false,\n\t\ttimeAgo: false,\n\t\tdateBoth: false\n\t};\n\n\t_incoming;\n\t_removeFn = NOP;\n\t_options = {};\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param props setup props, props.timestampLong holds the unix timestamp in milliseconds\n\t * (number of milliseconds between timestamp and the Unix Epoch )\n\t * @param timestamp the original timestamp (string)\n\t * @param options enforced options that will override the user preference\n\t */\n\tconstructor(props, timestamp, options) {\n\t\tthis._incoming = {\n\t\t\toptions: options,\n\t\t    timestamp: timestamp || UNKNOWN,\n\t\t    timestampLong: props.timestampLong,\n\t\t    timeAvailable: props.timestampLong || timestamp\n\t\t};\n\n\t\tthis.update(props);\n\t}\n\n\n\t/**\n\t * Used when the props for the behaviors have changed\n\t */\n\tupdate(props) {\n\t\tconst pref = preUserPrefs.getPreSource(props) || [];\n\t\tconst dateFormat = pref.find(p => p.name === 'glide.ui.date_format') || {};\n\t\tconst dateFormatObj = SnTimeAgo._parseDateFormatPref(dateFormat.value);\n\t\tthis._options = {...SnTimeAgo._DEFAULT_OPTIONS, ...dateFormatObj, ...this._incoming.options};\n\n\t\tconst user = preUserData.getPreSource(props);\n\t\tthis._options.timeZoneOffset = user.timeZoneOffset;\n\t}\n\n\t/** private */\n\tstatic _parseDateFormatPref(prefValue) {\n\t\tif (!prefValue) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst value = prefValue.replace(/([\\w]+)\\s*:/g, '\"$1\":');\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t}\n\t\tcatch (unused) {\n\t\t\tconsole.warn('The format for \"glide.ui.date_format\" is not recognizable');\t// eslint-disable-line no-console\n\t\t\treturn {};\n\t\t}\n\t}\n\n\t/**\n\t * Sets the callback function for when the time ago has \"ticked\" or the props have changed\n\t *\n\t * @param updateFn the callback function\n\t * @returns the function to call when to remove the callback function\n\t */\n\tsetUpdateFn(updateFn) {\n\t\tthis.remove();\n\t\treturn this._removeFn = isFunction(updateFn)\n\t\t\t? snTimerService.add(() => updateFn(this.getTickTime()))\n\t\t\t: NOP;\n\t}\n\n\t/**\n\t * Removes the callback function\n\t */\n\tremove() {\n\t\tthis._removeFn();\n\t}\n\n\t/**\n\t * Gets the current \"tick\" information for the time ago\n\t *\n\t * - time: the value that should be displayed\n\t * - alternate: the alternate display, usually in a tooltip\n\t * - timestamp: the original timestamp(string)\n\t * - words: the elapsed time from the timestamp\n\t * - timestampLong: the unix timestamp in milliseconds\n\t * - timeAvailable: holds timestampLong if it is available else holds timestamp\n\t *\n\t * * @returns {{time: string, alternate: string, timestamp: string, words: string}}\n\t */\n\tgetTickTime() {\n\t\tconst {timestamp, timestampLong, timeAvailable}= this._incoming;\n\t\tconst {systemTime, timeZoneOffset, timeAgo, dateBoth, dateOnly} = this._options;\n\t\tconst date = snDateTimeWordService.parse(timeAvailable, timeZoneOffset, systemTime, timestampLong);\n\t\tconst words = date\n\t\t\t? snDateTimeWordService.getWords(date, dateOnly)\n\t\t\t: UNKNOWN;\n\n\t\tlet time;\n\t\tlet alternate;\n\n\t\tif (dateBoth) {\n\t\t\ttime = `${timestamp} (${words})`;\n\t\t} else if (timeAgo) {\n\t\t\talternate = timestamp;\n\t\t\ttime = words;\n\t\t} else {\n\t\t\talternate = words;\n\t\t\ttime = timestamp;\n\t\t}\n\n\t\treturn {\n\t\t\ttime,\n\t\t\talternate,\n\n\t\t\twords,\n\t\t\ttimestamp,\n\t\t};\n\t}\n}\n","import {t} from 'sn-translate';\nimport isNumber from 'lodash/isNumber';\n\nconst MINUTES = 60 * 1000;\n\nclass SnDateTimeWordService {\n\tparse(timestamp, timeZoneOffset, isSystemTime, timestampLong) {\n\t\tconst dateParsed = this._parse(timestamp);\n\t\tif (!dateParsed) {\n\t\t\treturn;\n\t\t}\n\t\t//if timestampLong is available no need to add offset\n        if (timestampLong) {\n\t\t\treturn new Date(dateParsed.getTime());\n\t\t}  \n\t\tconst currentOffset = -dateParsed.getTimezoneOffset() * MINUTES;\n\t\tlet offset = 0;\n\t\tif (isNumber(timeZoneOffset)) {\n\t\t\toffset += currentOffset - timeZoneOffset;\n\t\t}\n\t\tif (isSystemTime) {\n\t\t\toffset += currentOffset;\n\t\t}\n\t\treturn new Date(dateParsed.getTime() + offset);        \n\t}    \n\n\t_parse (timestamp) {\n\t\tif (!timestamp) {\n\t\t\treturn;\n\t\t}\n\n\t\t// typical from GraphQL\n\t\tconst dateParsed = new Date(timestamp);\n\t\tif (SnDateTimeWordService.isValidDate(dateParsed)) {\n\t\t\treturn dateParsed;\n\t\t}\n\n\t\t// safari is much more restrictive of the acceptable format\n\t\tconst safariTimestamp = timestamp\n\t\t\t.replace(/\\.\\d+/,'') // remove milliseconds\n\t\t\t.replace(/-/g,'/') // - to /\n\t\t\t.replace(/T/,' ') // remove T\n\t\t\t.replace(/Z/,' UTC') // Z to UTC\n\t\t\t.replace(/([+-]\\d\\d):(\\d\\d)/,' $1$2') // -04:00 -> -0400\n\t\t\t.replace(/\\..*|\\+.*/,'');\n\n\t\tconst safariParsed = new Date(safariTimestamp);\n\t\tif (SnDateTimeWordService.isValidDate(safariParsed)) {\n\t\t\treturn safariParsed;\n\t\t}\n\n\t\t// possible\n\t\tconst numericDate = new Date(parseInt(timestamp, 10));\n\t\tif (SnDateTimeWordService.isValidDate(numericDate)) {\n\t\t\treturn numericDate;\n\t\t}\n\t}\n\n\tstatic isValidDate(date) {\n\t\treturn !isNaN(date.getTime());\n\t}\n\n\tgetWords(date, isDateOnly) {\n\t\tconst baseDate = new Date(Date.now());\n\t\tconst diff = baseDate - date;\n\t\tconst days = daysBetween(baseDate, date);\n\n\t\treturn SnDateTimeWordService._toWords(diff, isDateOnly, days, date.getDay());\n\t}\n\n\tstatic _toWords(diffMills, wantDate, diffDays, dayOfWeek) {\n\t\tconst wantDateTime = !wantDate;\n\n\t\tconst isTomorrow = diffDays === -1;\n\t\tconst isToday = (diffDays === 0) && wantDate;\n\t\tconst isYesterday = diffDays === 1;\n\n\t\tconst WORDS = WORD_LITERALS;\n\n\t\tconst isPast = diffMills >= 0;\n\t\tconst AGO = isPast ? WORDS.ago : WORDS.fromNow;\n\t\tconst NOW = isPast ? WORDS.justNow : WORDS.almostNow;\n\t\tconst LAST = isPast ? WORDS.last : WORDS.next;\n\n\t\tdiffMills = Math.abs(diffMills);\n\t\tconst seconds = diffMills / 1000;\n\t\tconst minutes = seconds / 60;\n\t\tconst hours = minutes / 60;\n\t\tconst days = hours / 24;\n\t\tconst years = days / 365;\n\n\t\tconst words =\n\t\t\tseconds < 45   && wantDateTime && substitute(NOW)                                         ||\n\t\t\tseconds < 90   && wantDateTime && substitute(WORDS.minute,    1, AGO)                     ||\n\t\t\tminutes < 45   && wantDateTime && substitute(WORDS.minutes,   Math.round(minutes), AGO)   ||\n\t\t\tminutes < 90   && wantDateTime && substitute(WORDS.hour,      1, AGO)                     ||\n\t\t\thours < 2      && wantDate     && substitute(WORDS.today)                                 ||\n\t\t\thours < 2      && wantDateTime && substitute(WORDS.hours,     Math.round(hours), AGO)     ||\n\t\t\thours < 48     && isYesterday  && substitute(WORDS.yesterday)                             ||\n\t\t\thours < 48     && isTomorrow   && substitute(WORDS.tomorrow)                              ||\n\t\t\thours < 24     && isToday      && substitute(WORDS.today)                                 ||\n\t\t\thours < 24     && wantDateTime && substitute(WORDS.hours,     Math.round(hours), AGO)     ||\n\t\t\tdays < 7                       && replace   (LAST,            WORDS.dayNames[dayOfWeek])  ||\n\t\t\tdays < 30                      && substitute(WORDS.days,      Math.ceil(days), AGO)       ||\n\t\t\tdays < 45                      && substitute(WORDS.month,     1, AGO)                     ||\n\t\t\tdays < 365                     && substitute(WORDS.months,    Math.round(days / 30), AGO) ||\n\t\t\tyears < 1.5                    && substitute(WORDS.year,      1, AGO)                     ||\n\n\t\t\tsubstitute(WORDS.years, Math.round(years), AGO);\n\n\t\treturn words;\n\t}\n\n}\n\nconst snDateTimeWordService = new SnDateTimeWordService();\nexport default snDateTimeWordService;\n\n\nconst DAY = 24 * 60 * 60 * 1000;\nfunction daysBetween(baseDate, actualDate) {\n\tconst normalizedBaseDate = new Date(baseDate.getTime());\n\tnormalizedBaseDate.setHours(0, 0, 0);\n\tconst normalizedActualDate = new Date(actualDate.getTime());\n\tnormalizedActualDate.setHours(0, 0, 0);\n\n\tconst diff = normalizedBaseDate.getTime() - normalizedActualDate.getTime();\n\treturn (diff >= 0 || -1) * Math.round(Math.abs(diff / DAY));\n}\n\nfunction substitute(string, number, ago) {\n\treturn(number === undefined)\n\t\t? string\n\t\t: replace(ago, replace(string, number));\n}\n\nfunction replace(format, string) {\n\treturn format.replace(/%d/i, string);\n}\n\nconst WORD_LITERALS = {\n\tago: t('%d ago'),\n\tfromNow: t('%d from now'),\n\tnext: t('this %d'),\n\tlast: t('last %d'),\n\tjustNow: t('just now'),\n\talmostNow: t('almost now'),\n\tseconds: t('less than a minute'),\n\tminute: t('about a minute'),\n\tminutes: t('%d minutes'),\n\thour: t('about an hour'),\n\thours: t('about %d hours'),\n\tday: t('about a day'),\n\tdays: t('%d days'),\n\tmonth: t('about a month'),\n\tmonths: t('%d months'),\n\tyear: t('about a year'),\n\tyears: t('%d years'),\n\ttoday: t('today'),\n\tyesterday: t('yesterday'),\n\ttomorrow: t('tomorrow'),\n\tdayNames: [\n\t\tt('Sunday'),\n\t\tt('Monday'),\n\t\tt('Tuesday'),\n\t\tt('Wednesday'),\n\t\tt('Thursday'),\n\t\tt('Friday'),\n\t\tt('Saturday')\n\t],\n\tnumbers: []\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"isNumber\"];","module.exports = __TECTONIC__lodash_4_17_4[\"isFunction\"];","module.exports = __TECTONIC__sn_uxpage_presource_18_0_3;"],"sourceRoot":""}