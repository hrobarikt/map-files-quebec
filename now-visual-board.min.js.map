{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_visual_board/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$devsnc_library_vtb_commons_19_2_2\"","webpack://__TECTONIC__$servicenow_now_visual_board/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/constants/actions.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/shared/utils.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/shared/if.js","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__lodash_4_17_20[\\\"get\\\"]\"","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/constants/translated.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/board-accessibility.js","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/shared/rearrange-list/rearrange-list.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/constants/constants.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/swimlane-collapse/collapse.js","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__lodash_4_17_20\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane/dragHelper.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/index.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/index.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/now-visual-board/now-visual-board.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/card-move-modal/card-move-modal.js","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$servicenow_behavior_key_binding_19_0_12\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/shared/rearrange-list/rearrange-list.scss?19c6","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/shared/rearrange-list/rearrange-list.scss","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__lodash_4_17_20[\\\"isEmpty\\\"]\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/card-move-modal/card-move-modal.scss?677e","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/card-move-modal/card-move-modal.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/lane-move-modal/lane-move-modal.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/lane-move-modal/lane-move-modal.scss?4bb8","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/accessibility/lane-move-modal/lane-move-modal.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/now-visual-board/board-view.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-swimlane/sn-swimlane.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-swimlane/sn-swimlane.scss?4a2a","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-swimlane/sn-swimlane.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-swimlane-header/sn-swimlane-header.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-swimlane-header/sn-swimlane-header.scss?4f47","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-swimlane-header/sn-swimlane-header.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/swimlane-collapse/behavior.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/swimlane-collapse/swimlane-collapse.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane/sn-lane.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane/sn-lane.scss?ed99","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane/sn-lane.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./node_modules/simplebar/dist/simplebar.css","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-card-wrapper/sn-card-wrapper.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-card-wrapper/sn-card-wrapper.scss?3b75","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-card-wrapper/sn-card-wrapper.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/custom-scrollbar/custom-scroll.js","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__simplebar_5_0_7\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/sortable/card-sort.js","webpack://__TECTONIC__$servicenow_now_visual_board/./node_modules/@servicenow/behavior-rtl/lib/index.js","webpack://__TECTONIC__$servicenow_now_visual_board/./node_modules/@servicenow/behavior-rtl/lib/rtl.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane-header/sn-lane-header.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane-header/sn-lane-header.scss?26fa","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/sn-lane-header/sn-lane-header.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/now-visual-board/now-visual-board.scss?f704","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/now-visual-board/now-visual-board.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/actions/dnd-handlers.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/actions/a11y-modal-handlers.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/actions/uxf-import-handlers.js","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__$devsnc_library_uxf\"","webpack://__TECTONIC__$servicenow_now_visual_board/external \"__TECTONIC__lodash_4_17_20[\\\"without\\\"]\"","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/accessibility/board-arrow-navigation.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/accessibility/visual-nav-override.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/sortable/lane-sort.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/lane-clone/lane-clone.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/lane-clone/lane-clone.scss?8ea1","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/components/lane-clone/lane-clone.scss","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/tilt/tilt.js","webpack://__TECTONIC__$servicenow_now_visual_board/./src/now-visual-board/behaviors/sortable/swimlane-sort.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__$servicenow_ui_core","__TECTONIC__$devsnc_library_vtb_commons_19_2_2","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","ACTION_PREFIX","INTERNAL_ACTION_PREFIX","CARD_MOVED","LANE_MOVED","SWIMLANE_MOVED","CARD_SORT_START","CARD_SORT_END","LANE_SORT_START","LANE_SORT_END","SWIMLANE_SORT_START","SWIMLANE_SORT_END","LANE_DROP_AREA_CHANGE","OPEN_CARD_MOVE_MODAL","OPEN_LANE_MOVE_MODAL","OPEN_SWIMLANE_MOVE_MODAL","REGISTER_WRAPPER_EVENT","pick","obj","orderSort","a","b","pickValue","order","getCardsForLane","lane","cards","filter","card","lane_id","sort","getCardsForSwimlane","swimlane","swim_lane_id","getStyles","elemName","pickLabel","getTagsToImport","boardProps","tags","COMPONENT_TAG_PROPS","tagName","tag","COMPONENT_TAG_OVERRIDE_PROPS","overrideProp","forEach","override","keys","itemId","config","OVERRIDING_TAG_KEYS","tagStr","indexOf","props","children","test","__TECTONIC__lodash_4_17_20","__TECTONIC__sn_translate","MOVE_CARD","MOVE_LANE","MOVE_SWIMLANE","ARRANGE_CARD_ORDER","ARRANGE_LANE_ORDER","ARRANGE_SWIMLANE_ORDER","VERTICAL_LANE","SWIM_LANE","CANCEL","CURRENT","SELECT_LOCATION","REARRANGE_LIST_INSTRUCTIONS","createCustomElement","view","state","properties","lanes","options","laneConfigOverride","swimlanes","swimlaneConfigOverride","customScrollOptions","action","selected-card","cardId","lane-config-override","swimlane-config-override","selected-lane","laneId","lane-type","custom-scroll-options","default","actionHandlers","updateProperties","__TECTONIC__$servicenow_now_modal","swapElements","array","indexA","indexB","temp","configAria","items","className","aria-hidden","aria-label","aria-describedby","index","selected","tabIndex","role","displayValue","focusActiveItem","behaviors","behavior","keyBindingBehavior","keyBindings","onMove","handlers","host","event","dispatch","stopPropagation","preventDefault","direction","keyCode","actionTypes","COMPONENT_DOM_READY","activeEl","querySelectorDeep","setTimeout","scrollIntoView","block","focus","payload","currentIndex","findIndex","updatedIndex","updatedItems","getUpdatedItemsList","styles","TAG_PROPERTIES","collapseSwimlanesAtElement","hostClientRect","slContainerEl","closestDeep","boardContainerEl","headerContainerEl","swimlaneIndex","swimlanesCount","collapsedSlTop","top","collapsedSlHeight","height","upperItemsHeight","currentScroll","scrollTop","containerTop","getBoundingClientRect","offsetTop","style","swimlaneElements","slice","el","swimlaneHeaders","reduce","totalHeight","sl","slHeader","position","slh","nextElementSibling","classList","add","collapsed","minScrollTop","maxScrollTop","expandSwimlanes","remove","getDraggedLane","addVLanePlaceholders","boardEl","srcEleWidth","visibleLanes","querySelectorAllDeep","firstLane","node","laneIndex","laneBody","dragPlaceHolder","document","createElement","minWidth","clientWidth","clientHeight","insertBefore","insertAfter","removeVLanePlaceholders","rootEl","removeNode","getScrollTopOfLane","customScroll","laneScrollTop","dragElem","scrollElSelector","scrollEl","board","initialState","a11yOptions","required","schema","type","title","cardTag","cardDragPlaceholderTag","cardDropPlaceholderTag","cardDraggable","laneHeaderTag","laneFooterTag","laneDragPlaceholderTag","laneDropPlaceholderTag","laneDraggable","swimlaneHeaderTag","swimlaneHeaderCloneTag","swimlaneDragPlaceholderTag","swimlaneDropPlaceholderTag","swimlaneDraggable","cloneMode","cardConfigOverride","useArrowNavigation","arrowNavigableElements","wrapperDomEvents","on","events","additionalProperties","enableScroll","scrollTrackCSS","scrollBarCSS","loadTagsFromUxf","dispatches","dndActionHandlers","a11yActionHandlers","uxfImportHandlers","element","capture","eventName","addEventListener","boardNavigationBehavior","laneSortBehavior","swimlaneSortBehavior","getCardFromId","find","getLaneMoveOptions","currentLaneId","isLaneDroppable","label","getCardMoveOptions","allCards","newLaneId","newSwimlaneId","currentCard","cardRearrangeOptions","otherCardOptions","cardTitle","selectedCard","selectedLaneId","selectedSwimlaneId","cardMoveOptions","currentLaneOptions","currentSwimlaneId","currentSwimlaneOptions","currentCardOptions","modalTitle","footerActions","variant","opened","size","header-label","footer-actions","append-to-payload","laneType","selected-items","config-aria","select","updatedOrder","dropdownEl","updateState","_selectedLaneId","_selectedSwimlaneId","actionType","footerAction","fromPosition","swimlaneId","getCardPositionInLane","toPosition","fromLane","fromSwimlane","toLane","toSwimlane","eventType","__TECTONIC__$servicenow_now_dropdown","__TECTONIC__$servicenow_behavior_key_binding_19_0_12","result","selectedLane","laneMoveOptions","currentLane","isVisibleInReorder","modalFooterActions","focus-active-item","globalCardTag","globalCardDraggable","globalCardDragPlaceholderTag","globalCardDropPlaceholderTag","globalLaneHeaderTag","globalLaneFooterTag","globalLaneDragPlaceholderTag","globalLaneDropPlaceholderTag","globalLaneDraggable","globalSwimlaneHeaderTag","globalSwimlaneDragPlaceholderTag","globalSwimlaneDropPlaceholderTag","globalSwimlaneDraggable","globalCardConfig","draggable","drag_placeholder_tag","drop_placeholder_tag","IS_SWIMLANE_BOARD","tag-lane-header","wrapper-dom-events","lane-index","lanes-count","hook-insert","e","elm","tag-lane-footer","tag-drag-placeholder","tag-drop-placeholder","global-card-config","card-config-override","slIndex","tag-swimlane-header","global-lane-footer-tag","swimlane-index","swimlanes-count","clone-mode","tagSwimlaneHeader","aria-expanded","rowspan","swimlane-id","reflect","tagDragPlaceholder","tagDropPlaceholder","data","swimlaneCollapseBehavior","addBehaviour","COMPONENT_PROPERTY_CHANGED","previouslyDraggable","previousValue","nowDraggable","removeBehaviour","collapseTimer","handleCollapse","collapseNow","resetImmediateDrag","window","resetSwimlanesPosition","removeEventListener","clearTimeout","tagLaneFooter","lanesCount","cardIndex","drag-placeholder-tag","drop-placeholder-tag","cardComp","orderPerLaneInSwimlane","countPerLaneInSwimlane","slot","tagLaneHeader","cardDragBehavior","scrollableEle","rtlBehavior","dragPlaceholderTag","dropPlaceholderTag","hideElement","container","autoHide","timeout","dir","scroll","SimpleBar","dataset","simplebarDirection","scrollTrackEl","axis","y","track","pointerEvents","entries","prop","val","cssText","scrollBarEl","scrollbar","__TECTONIC__simplebar_5_0_7","console","log","nowSortable","dropzone","extendedDropzone","actionPrefix","listOrder","cloneAppendTo","xScrollParent","yScrollParent","connectedLists","keyboardSupport","cursorChecker","shouldUpdate","newProps","oldProps","isEqual","itemsFilter","getProperties","condition","dynamicConfig","propsBasedConfig","tagSourcePlaceholder","tagDestPlaceholder","_rtl","require","aria-owns","sourceParent","sourceIndex","destinationParent","destinationIndex","toLaneEl","fromLaneEl","toLaneId","split","fromLaneId","cardMovePayload","importedTags","newTags","without","getComponentsByTagNames","catch","err","path","operation","error","COMPONENT_BOOTSTRAPPED","propChanged","includes","__TECTONIC__$devsnc_library_uxf","visualNavigation","elements","BOARD_ARROW_NAVIGABLE_ELEMENTS","targetElements","getNavigableElementsByDirection","canTabToElements","initDelay","coeffects","makeElementsTabbable","disable","lastFocusedLaneItemId","SN_LANE","getNextSwimlaneHeader","elementsSelector","activeElement","getNavigableElementsByDirectionIn2DBoard","getNavigableElementsByDirectionIn1DBoard","currentSwimlaneHeader","nextSibling","setLastFocusedLaneItemId","currentLaneHeader","swimlaneHeaderArrowDown","focusableLane","nextSwimlaneHeader","focusableElementsinLane","swimlaneHeaderArrowUp","previousSwimlaneHeaderSibling","focusableElementsInLane","focusLaneFooter","footerContainer","elToFocus","swimlaneHeader","laneHeaders","laneHeader","getSwimlaneHeader","DIRECTIONS","DOWN","ignoreDirection","matches","nextCardWrapper","nextCard","UP","header","previousSibling","getPreviousSwimlaneHeader","laneEl","cardWrapper","RIGHT","LEFT","nextFocusableLane","nextFocusableLaneHeader","horizontalNavIn2DBoard","nextElem","prevElem","navigableElemsInLane","previousCardWrapper","previousCard","headerContainer","restrictTo","lockAxis","clone","consumerConfig","onDestPlaceholderInsert","targetElement","srcPlaceholder","destPlaceholder","newPosition","snBoardElem","newPlaceholderPos","width","getCardsInDraggedLane","elem","cardsInViewport","dragLane","cardContainers","dragLaneRect","cardRect","isClientRectIntersecting","cardsInSwimLaneViewport","cardsInLaneViewPort","dragLanes","isSwimlaneBoard","card-tag","lane-header-tag","swimlane-header-tag","lane-footer-tag","horizontalDragDirection","swimlanesInViewport","scrollHeight","tiltBehaviour","COMPONENT_CONNECTED","swimlaneContainers","swimlaneContainersInViewport","boardRect","swimLaneRect","getSwimlaneContainerInViewport","getCardsInSwimlane","getCardsInSwimlaneViewport","scrollContainer","getScrollHeightFor2DBoard","cardsInLane","scrollingRequired","getScrollHeightFor1DBoard","COMPONENT_RENDERED","swimlaneContainersInClone","swimlaneContainerHeight","offsetHeight","scrollElem","copyLaneScrollOnCloneFor2D","copyLaneScrollOnCloneFor1D","laneCloneDiv","contains","allowFrom","cloneTag","cloneEl","onSrcPlaceholderInsert","dragElIndex","firstlaneTop","parseInt","splice"],"mappings":"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","file":"now-visual-board.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__$devsnc_library_vtb_commons_19_2_2;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","export const ACTION_PREFIX = 'NOW_VISUAL_BOARD#';\nexport const INTERNAL_ACTION_PREFIX = ACTION_PREFIX + 'INTERNAL#';\n/**\n * Fired when a card is moved from one lane to another lane.\n * The move can be triggered either by drag-and-drop or any alternative\n * accessibility approach.\n *\n * @param {String} card - the id of the card\n * @param {String} fromLane - the id of the source lane\n * @param {String} toLane - the id of the destination lane\n * @param {Integer} fromPosition - the index of the card in the source lane\n * @param {Integer} toPosition - the index of the card in the destination lane\n * */\nexport const CARD_MOVED = 'CARD_MOVED';\n\n/**\n * Fired when a lane is dragged from one position to another.\n * The move can be triggered either by drag-and-drop or any alternative\n * accessibility approach.\n *\n * @param {String} lane - the id of lane\n * @param {Integer} fromPosition - the source index position\n * @param {Integer} toPosition - the destination index position\n * */\nexport const LANE_MOVED = 'LANE_MOVED';\n\n/**\n * Fired when a swimlane is dragged from one position to another.\n * The move can be triggered either by drag-and-drop or any alternative\n * accessibility approach.\n *\n * @param {String} swimlane - the id of swimlane\n * @param {Integer} fromPosition - the source index position\n * @param {Integer} toPosition - the destination index position\n * */\nexport const SWIMLANE_MOVED = 'SWIMLANE_MOVED';\n\n/**\n * Fired when a card is dragged from its position in some lane\n * @param {String} card - the id of the card\n * @param {String} lane - the id of the lane\n * @param {Integer} fromPosition - the index of the card in the current lane\n * */\nexport const CARD_SORT_START = 'CARD_SORT_START';\n\n/**\n * Fired when the card's dragging ends\n * @param {String} card - the id of the card\n * @param {String} fromLane - the id of the source lane of the card\n * @param {String} toLane - the id of the destination lane of the card\n * @param {Integer} fromPosition - the index of the card in the source lane\n * @param {Integer} toPosition - the index of the card in the destination lane\n * */\nexport const CARD_SORT_END = 'CARD_SORT_END';\n\n/**\n * Fired when the lane is dragged from its position\n * @param {String} lane - the id of the lane\n * @param {Integer} fromPosition - the source index of the lane\n * @param {Integer} toPosition - the destination index of the lane\n * */\nexport const LANE_SORT_START = 'LANE_SORT_START';\n\n/**\n * Fired when the lane's dragging ends\n * @param {String} lane - the id of the lane\n * @param {Integer} fromPosition - the source index of the lane\n * @param {Integer} toPosition - the destination index of the lane\n * */\nexport const LANE_SORT_END = 'LANE_SORT_END';\n\n/**\n * Fired when the swimlane's dragging starts\n * @param {String} swimlane - the id of the swimlane\n * @param {Integer} fromPosition - the source index of the swimlane\n * */\nexport const SWIMLANE_SORT_START = 'SWIMLANE_SORT_START';\n\n/**\n * Fired when the swimlane's dragging ends\n * @param {String} swimlane - the id of the swimlane\n * @param {Integer} fromPosition - the source index of the swimlane\n * @param {Integer} toPosition - the destination index of the swimlane\n * */\nexport const SWIMLANE_SORT_END = 'SWIMLANE_SORT_END';\n\n/**\n * Fired when the lane drag area change\n * @param {String} lane - the target element\n * @param {Integer} oldPosition - the old position of lane\n * @param {Integer} newPosition - the new position of lane\n * */\nexport const LANE_DROP_AREA_CHANGE = 'LANE_DROP_AREA_CHANGE';\n\n/*************************************\n ************ ACCESSIBILITY **********\n **************************************/\n/**\n * Board consumers dispatch this action to trigger the drag-and-drop alternative modal\n * Example - dispatch(\"NOW_VISUAL_BOARD#OPEN_CARD_MOVE_MODAL\", { id: <card_id> })\n * */\nexport const OPEN_CARD_MOVE_MODAL = ACTION_PREFIX + 'OPEN_CARD_MOVE_MODAL';\n\n/**\n * Board consumers dispatch this action to trigger the lane reorder modal\n * Example usage - dispatch(\"NOW_VISUAL_BOARD#OPEN_LANE_MOVE_MODAL\", { id: <lane_id> })\n * */\nexport const OPEN_LANE_MOVE_MODAL = ACTION_PREFIX + 'OPEN_LANE_MOVE_MODAL';\n\n/**\n * Board consumers dispatch this action to trigger the swimlane reorder modal\n * Example usage - dispatch(\"NOW_VISUAL_BOARD#OPEN_SWIMLANE_MOVE_MODAL\", { id: <swim_lane_id> })\n * */\nexport const OPEN_SWIMLANE_MOVE_MODAL =\n\tACTION_PREFIX + 'OPEN_SWIMLANE_MOVE_MODAL';\n\n// Internal Actions\nexport const REGISTER_WRAPPER_EVENT = 'REGISTER_WRAPPER_EVENT';\n","import {\n\tCOMPONENT_TAG_PROPS,\n\tCOMPONENT_TAG_OVERRIDE_PROPS,\n\tOVERRIDING_TAG_KEYS,\n} from '../constants/constants';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const pick = (value) => (obj) => {\n\tif (typeof obj === 'object' && obj.hasOwnProperty(value)) return obj[value];\n\telse return obj;\n};\n\nconst orderSort = (a, b) => pickValue(a.order) - pickValue(b.order);\n\nexport const getCardsForLane = (lane, cards) =>\n\tcards.filter((card) => card.lane_id === lane.id).sort(orderSort);\n\nexport const getCardsForSwimlane = (swimlane, cards) =>\n\tcards.filter((card) => card.swim_lane_id === swimlane.id);\n\nexport const getStyles = (lane, elemName) => {\n\treturn lane['_style_'] ? lane['_style_'][elemName] : {};\n};\n\nexport const pickLabel = pick('label');\nexport const pickValue = pick('value');\n\n/**\n * Combines and returns all the component tags that are passed in the properties. These tags can be\n * meant for cards, lanes and swimlanes. Board also supports global tags, that are applicable for all items,\n * along with overriding tags, which can be specific to individual items, like cards or lanes.\n * See \"cardConfigOverride\" prop for an example.\n * */\nexport const getTagsToImport = (boardProps) => {\n\t// global tags\n\tconst tags = COMPONENT_TAG_PROPS.map(\n\t\t(tagName) => boardProps[tagName]\n\t).filter((tag) => !isEmpty(tag));\n\n\t// overriding tags\n\tconst overrideObjs = COMPONENT_TAG_OVERRIDE_PROPS.map(\n\t\t(overrideProp) => boardProps[overrideProp]\n\t);\n\n\toverrideObjs.forEach((override) => {\n\t\tObject.keys(override).forEach((itemId) => {\n\t\t\tconst config = override[itemId];\n\t\t\t// To keep it short, loop all the OVERRIDING_TAG_KEYS to consider overrides of cards, lanes and swimlanes\n\t\t\tOVERRIDING_TAG_KEYS.forEach((tagStr) => {\n\t\t\t\tif (config[tagStr] && tags.indexOf(config[tagStr]) === -1)\n\t\t\t\t\ttags.push(config[tagStr]);\n\t\t\t});\n\t\t});\n\t});\n\treturn tags;\n};\n","const If = (props, children) => {\n\tconst { test=false } = props;\n\treturn test ? children : null;\n};\n\nexport default If;\n","module.exports = __TECTONIC__lodash_4_17_20[\"get\"];","module.exports = __TECTONIC__sn_translate;","import { t } from 'sn-translate';\n\nexport const MOVE_CARD = t('Move card');\nexport const MOVE_LANE = t('Move lane');\nexport const MOVE_SWIMLANE = t('Move swimlane');\nexport const ARRANGE_CARD_ORDER = t('Arrange card order');\nexport const ARRANGE_LANE_ORDER = t('Arrange lane order');\nexport const ARRANGE_SWIMLANE_ORDER = t('Arrange swimlane order');\n\nexport const VERTICAL_LANE = t('Vertical lane');\nexport const SWIM_LANE = t('Swimlane');\n\nexport const CANCEL = t('Cancel');\nexport const CURRENT = t('Current');\n\nexport const SELECT_LOCATION = t('Select location');\nexport const REARRANGE_LIST_INSTRUCTIONS = t(\n\t'Use arrow keys to rearrange item position in this list'\n);\n","import { createCustomElement } from '@servicenow/ui-core';\nimport './card-move-modal/card-move-modal';\nimport './lane-move-modal/lane-move-modal';\n\nexport default createCustomElement('board-accessibility', {\n\tview(state) {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tcards,\n\t\t\t\tlanes,\n\t\t\t\toptions,\n\t\t\t\tlaneConfigOverride,\n\t\t\t\tswimlanes,\n\t\t\t\tswimlaneConfigOverride,\n\t\t\t\tcustomScrollOptions,\n\t\t\t},\n\t\t} = state;\n\n\t\tif (options.action === 'CARD_MOVE') {\n\t\t\treturn (\n\t\t\t\t<card-move-modal\n\t\t\t\t\tlanes={lanes}\n\t\t\t\t\tcards={cards}\n\t\t\t\t\tselected-card={options.cardId}\n\t\t\t\t\tlane-config-override={laneConfigOverride}\n\t\t\t\t\tswimlane-config-override={swimlaneConfigOverride}\n\t\t\t\t\tswimlanes={swimlanes}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (options.action === 'LANE_MOVE') {\n\t\t\treturn (\n\t\t\t\t<lane-move-modal\n\t\t\t\t\tlanes={lanes}\n\t\t\t\t\tselected-lane={options.laneId}\n\t\t\t\t\tlane-type=\"vertical\"\n\t\t\t\t\tcustom-scroll-options={customScrollOptions}\n\t\t\t\t\tlane-config-override={laneConfigOverride}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (options.action === 'SWIM_LANE_MOVE') {\n\t\t\treturn (\n\t\t\t\t<lane-move-modal\n\t\t\t\t\tlanes={swimlanes}\n\t\t\t\t\tselected-lane={options.laneId}\n\t\t\t\t\tlane-type=\"swimlane\"\n\t\t\t\t\tlane-config-override={swimlaneConfigOverride}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t},\n\tproperties: {\n\t\tcards: { default: {} },\n\t\tlanes: { default: {} },\n\t\toptions: { default: {} },\n\t\tlaneConfigOverride: { default: {} },\n\t\tswimlanes: { default: {} },\n\t\tswimlaneConfigOverride: { default: {} },\n\t\tcustomScrollOptions: { default: '' },\n\t},\n\tactionHandlers: {\n\t\t'NOW_VISUAL_BOARD#A11Y#OPTIONS_RESET': ({ updateProperties }) =>\n\t\t\tupdateProperties({ options: {} }),\n\t},\n});\n","module.exports = __TECTONIC__$servicenow_now_modal;","import { createCustomElement, actionTypes } from '@servicenow/ui-core';\nimport keyBindingBehavior from '@servicenow/behavior-key-binding';\nimport styles from './rearrange-list.scss';\nimport { REARRANGE_LIST_INSTRUCTIONS } from '../../../constants/translated';\nimport { querySelectorDeep } from '@devsnc/library-vtb-commons';\n\nconst swapElements = function (array, indexA, indexB) {\n\tconst temp = array[indexA];\n\tarray[indexA] = array[indexB];\n\tarray[indexB] = temp;\n};\n\nconst getUpdatedItemsList = (items, direction) => {\n\tlet currentIndex = items.findIndex((item) => item.selected);\n\tif (direction === 'ArrowDown') {\n\t\tif (currentIndex + 1 < items.length) {\n\t\t\tswapElements(items, currentIndex, ++currentIndex);\n\t\t}\n\t} else if (direction === 'ArrowUp') {\n\t\tif (currentIndex - 1 >= 0) {\n\t\t\tswapElements(items, currentIndex, --currentIndex);\n\t\t}\n\t}\n\n\treturn { updatedIndex: currentIndex, updatedItems: items };\n};\n\nexport default createCustomElement('rearrange-list', {\n\tview(state) {\n\t\tconst {\n\t\t\tproperties: { configAria, items },\n\t\t} = state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p\n\t\t\t\t\tid=\"rearrange_instructions\"\n\t\t\t\t\tclassName=\"sr-only\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{REARRANGE_LIST_INSTRUCTIONS}\n\t\t\t\t</p>\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"items-container\"\n\t\t\t\t\taria-label={configAria['aria-label']}\n\t\t\t\t\taria-describedby=\"rearrange_instructions\"\n\t\t\t\t>\n\t\t\t\t\t{items.map((item, index) => {\n\t\t\t\t\t\treturn item.selected === true ? (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\tclassName=\"active\"\n\t\t\t\t\t\t\t\trole=\"listitem\"\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\t'Selected item in position ' +\n\t\t\t\t\t\t\t\t\t(index + 1) +\n\t\t\t\t\t\t\t\t\t', out of ' +\n\t\t\t\t\t\t\t\t\titems.length +\n\t\t\t\t\t\t\t\t\t' items'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className=\"item-text\">\n\t\t\t\t\t\t\t\t\t{++index}. {item.displayValue}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{/* <span className=\"grippy\"></span> */}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<li role=\"listitem\" key={`listitem${index}`}>\n\t\t\t\t\t\t\t\t<span className=\"item-text\">\n\t\t\t\t\t\t\t\t\t{++index}. {item.displayValue}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\titems: { default: [] },\n\t\tconfigAria: { default: {} },\n\t\tfocusActiveItem: { default: false },\n\t},\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: keyBindingBehavior,\n\t\t\toptions: {\n\t\t\t\tkeyBindings: {\n\t\t\t\t\tonMove: ['ArrowUp', 'ArrowDown'],\n\t\t\t\t},\n\t\t\t\thandlers: {\n\t\t\t\t\tonMove: (host, event, dispatch) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tlet direction =\n\t\t\t\t\t\t\tevent.keyCode === 38 ? 'ArrowUp' : 'ArrowDown';\n\t\t\t\t\t\tdispatch('CHANGE_ORDER', { direction, host });\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_DOM_READY]: ({ host, properties }) => {\n\t\t\tconst activeEl = querySelectorDeep('li.active', host);\n\t\t\tif (activeEl) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tactiveEl.scrollIntoView({ block: 'center' });\n\t\t\t\t\tif (properties.focusActiveItem) activeEl.focus();\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\t['ORDER_CHANGED']: ({ action }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { host },\n\t\t\t} = action;\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst activeEl = querySelectorDeep('li.active', host);\n\t\t\t\tif (activeEl) activeEl.focus();\n\t\t\t}, 50);\n\t\t},\n\t\t['CHANGE_ORDER']: ({ state, updateProperties, action, dispatch }) => {\n\t\t\tconst {\n\t\t\t\tproperties: { items },\n\t\t\t} = state;\n\t\t\tconst {\n\t\t\t\tpayload: { direction, host },\n\t\t\t} = action;\n\t\t\tconst { updatedIndex, updatedItems } = getUpdatedItemsList(\n\t\t\t\titems,\n\t\t\t\tdirection\n\t\t\t);\n\t\t\tupdateProperties({ items: [...updatedItems] });\n\t\t\tdispatch('ORDER_CHANGED', { host });\n\t\t\tdispatch('NOW_VISUAL_BOARD#REARRANGE_LIST#ORDER_CHANGED', {\n\t\t\t\tupdatedItems,\n\t\t\t\tupdatedIndex,\n\t\t\t});\n\t\t},\n\t},\n\tstyles,\n});\n","export const COMPONENT_TAG_PROPS = [\n\t'cardTag',\n\t'cardDragPlaceholderTag',\n\t'cardDropPlaceholderTag',\n\t'laneHeaderTag',\n\t'laneFooterTag',\n\t'laneDragPlaceholderTag',\n\t'laneDropPlaceholderTag',\n\t'swimlaneHeaderTag',\n\t'swimlaneDragPlaceholderTag',\n\t'swimlaneDropPlaceholderTag',\n\t'swimlaneHeaderCloneTa',\n];\n\nexport const COMPONENT_TAG_OVERRIDE_PROPS = [\n\t'cardConfigOverride',\n\t'laneConfigOverride',\n\t'swimlaneConfigOverride',\n];\n\nexport const TAG_PROPERTIES = COMPONENT_TAG_PROPS.concat(\n\tCOMPONENT_TAG_OVERRIDE_PROPS\n);\n\nexport const OVERRIDING_TAG_KEYS = [\n\t'tag',\n\t'tag_lane_header',\n\t'tag_lane_footer',\n\t'tag_swimlane_header',\n\t'tag_drag_placeholder',\n\t'tag_drop_placeholder',\n];\n","import {\n\tclosestDeep,\n\tquerySelectorDeep,\n} from '@devsnc/library-vtb-commons';\n\nconst SORTABLE_AUTO_SCROLL_BOUNDS = '__auto_scroll_y_bounds__';\nconst SL_SCROLL_BUFFER_AREA = 200;\n\n//TODO: Try if we can make this collapse a generic behavior and move to sortable\nexport function collapseSwimlanesAtElement(host, hostClientRect) {\n\tconst slContainerEl = closestDeep(host, '.swimlanes');\n\tconst boardContainerEl = closestDeep(slContainerEl, '.sn-board');\n\tconst headerContainerEl = querySelectorDeep(\n\t\t'.lanes-header',\n\t\tboardContainerEl\n\t);\n\n\tconst swimlaneIndex = host.swimlaneIndex || 0;\n\tconst swimlanesCount = host.swimlanesCount || 0;\n\tconst collapsedSlTop = hostClientRect.top || 0;\n\tconst collapsedSlHeight = hostClientRect.height || 0;\n\tconst upperItemsHeight = swimlaneIndex * collapsedSlHeight;\n\tconst currentScroll = boardContainerEl.scrollTop;\n\tconst containerTop =\n\t\tboardContainerEl.getBoundingClientRect().top +\n\t\theaderContainerEl.getBoundingClientRect().height;\n\n\t// calculate swimlanes container offset after collasping\n\tconst offsetTop =\n\t\tcurrentScroll + (collapsedSlTop - containerTop) - upperItemsHeight;\n\n\t// set the height of container to its scroll height\n\tslContainerEl.style.height = `${\n\t\tslContainerEl.getBoundingClientRect().height\n\t}px`;\n\n\t//To animate collapse (top), set current position as top of each sn-swimlane\n\tconst swimlaneElements = [].slice\n\t\t.call(slContainerEl.children)\n\t\t.filter((el) => el.tagName === 'SN-SWIMLANE');\n\tconst swimlaneHeaders = [];\n\tswimlaneElements.reduce((totalHeight, sl) => {\n\t\tconst slHeader = querySelectorDeep('sn-swimlane-header', sl);\n\t\tswimlaneHeaders.push(slHeader);\n\t\tsl.style.top = `${totalHeight}px`;\n\t\treturn totalHeight + sl.getBoundingClientRect().height;\n\t}, 0);\n\n\tswimlaneElements.forEach((sl, index) => {\n\t\tsl.style.position = 'absolute';\n\t\tsl.style.top = offsetTop + index * collapsedSlHeight + 'px';\n\t});\n\tswimlaneHeaders.forEach((slh) => {\n\t\tslh.nextElementSibling.classList.add('hide');\n\t\tslh.collapsed = true;\n\t});\n\n\t// set scroll bounds to scrollParent (.boardContainer)\n\t// will be used by sortable library for autoscroll while sorting.\n\tlet minScrollTop = offsetTop < currentScroll ? offsetTop : currentScroll;\n\tminScrollTop =\n\t\tminScrollTop > SL_SCROLL_BUFFER_AREA\n\t\t\t? minScrollTop - SL_SCROLL_BUFFER_AREA\n\t\t\t: 0;\n\n\tlet maxScrollTop =\n\t\toffsetTop -\n\t\tSL_SCROLL_BUFFER_AREA +\n\t\t(swimlanesCount + 1) * collapsedSlHeight;\n\tmaxScrollTop = maxScrollTop > currentScroll ? maxScrollTop : currentScroll;\n\n\tboardContainerEl[SORTABLE_AUTO_SCROLL_BOUNDS] = [\n\t\tminScrollTop,\n\t\tmaxScrollTop,\n\t];\n}\n\nexport function expandSwimlanes(slContainerEl) {\n\t// Swimlanes are already expanded if slContainerEl height is unset\n\tif (!slContainerEl || slContainerEl.style.height === 'unset') \n\t\treturn;\n\n\tconst swimlaneElements = [].slice\n\t\t.call(slContainerEl.children)\n\t\t.filter((el) => el.tagName === 'SN-SWIMLANE');\n\t\n\tswimlaneElements.forEach((sl) => {\n\t\tsl.style.position = null;\n\t\tsl.style.top = null;\n\t\tconst slh = querySelectorDeep('sn-swimlane-header', sl);\n\t\tif (slh){\n\t\t\tslh.collapsed = sl.collapsed;\n\t\t\tif (!slh.collapsed) slh.nextElementSibling.classList.remove('hide');\n\t\t}\n\t});\n\tslContainerEl.style.height = 'unset';\n\n\tconst boardContainerEl = closestDeep(slContainerEl, '.sn-board');\n\tif (boardContainerEl) boardContainerEl[SORTABLE_AUTO_SCROLL_BOUNDS] = null;\n}\n","module.exports = __TECTONIC__lodash_4_17_20;","import {\n\tquerySelectorAllDeep,\n\tinsertAfter,\n\tinsertBefore,\n\tremoveNode,\n\tquerySelectorDeep,\n} from '@devsnc/library-vtb-commons';\n\nconst CUSTOM_SCROLL_BAR_EL = '.simplebar-content-wrapper';\n\nexport const addVLanePlaceholders = (index, boardEl, srcEleWidth) => {\n\t// For each sn-lane that has [laneIndex=\"index\"] (which can be multiple in 2D board),\n\t// add empty placeholder after it In the selector below,\n\n\tconst visibleLanes = querySelectorAllDeep('sn-lane', boardEl, false);\n\tconst firstLane = visibleLanes.filter((node) => node.laneIndex === 0); // For index < 0;\n\tconst lanes =\n\t\tindex < 0\n\t\t\t? firstLane\n\t\t\t: visibleLanes.filter((node) => node.laneIndex === index);\n\tlanes.forEach((lane) => {\n\t\tconst laneBody = querySelectorDeep('.lane-body', lane);\n\t\tconst dragPlaceHolder = document.createElement('div');\n\t\tdragPlaceHolder.classList.add('v-lane-dragging-placeholder');\n\t\tif (srcEleWidth) dragPlaceHolder.style.minWidth = srcEleWidth + 'px';\n\t\telse dragPlaceHolder.style.minWidth = `${laneBody.clientWidth}px`;\n\t\tdragPlaceHolder.style.height = `${laneBody.clientHeight}px`;\n\t\tif (index < 0) insertBefore(dragPlaceHolder, lane);\n\t\telse insertAfter(dragPlaceHolder, lane);\n\t});\n};\n\nexport const removeVLanePlaceholders = (rootEl) =>\n\tquerySelectorAllDeep('.v-lane-dragging-placeholder', rootEl, false).forEach(\n\t\tremoveNode\n\t);\n\nexport const getDraggedLane = (laneId, rootEl) =>\n\tquerySelectorDeep(`[id=\"lane_${laneId}\"]`, rootEl);\n\nexport const getScrollTopOfLane = (laneId, customScroll, boardEl) => {\n\tlet laneScrollTop = 0;\n\tlet dragElem = getDraggedLane(laneId, boardEl);\n\tif (dragElem) {\n\t\tconst scrollElSelector = customScroll\n\t\t\t? CUSTOM_SCROLL_BAR_EL\n\t\t\t: '.sn-lane';\n\t\tconst scrollEl = querySelectorDeep(scrollElSelector, dragElem);\n\t\tif (scrollEl) laneScrollTop = scrollEl.scrollTop;\n\t}\n\treturn laneScrollTop;\n};\n","import board from './now-visual-board';\nexport default board;\n","import board from './components/now-visual-board/now-visual-board';\n// import '../../example/demo-1D'; // Uncomment this line to create a bundle where demo content loads\nexport default board;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport '../accessibility/board-accessibility';\nimport { view } from './board-view';\nimport styles from './now-visual-board.scss';\nimport dndActionHandlers from '../../actions/dnd-handlers';\nimport a11yActionHandlers from '../../actions/a11y-modal-handlers';\nimport uxfImportHandlers from '../../actions/uxf-import-handlers';\nimport { boardNavigationBehavior } from '../../accessibility/board-arrow-navigation';\nimport laneSortBehavior from '../../behaviors/sortable/lane-sort';\nimport swimlaneSortBehavior from '../../behaviors/sortable/swimlane-sort';\nimport { REGISTER_WRAPPER_EVENT } from '../../constants/actions';\n\n/**\n * Main Board component that renders lanes and cards\n *\n * Usage:\n *\n * <now-visual-board\n * \t\tcards={[\n * \t\t\t{ id: \"card_1\", title: \"Email server is down\", order: 1 }\n * \t\t\t{ id: \"card_2\", title: \"Network is slow\", order: 3 }\n * \t\t\t{ id: \"card_3\", title: \"Server space full\", order: 2 }\n * \t\t]}\n * \t\tlanes={[\n * \t\t\t{ id: \"lane_1\", title: \"In Progress\" },\n * \t\t\t{ id: \"lane_2\", title: \"Completed\" }\n * \t\t]}\n * \t\tcard-tag=\"sn-incident-card\"\n * \t\tlane-header-tag=\"vtb-lane-header\"\n * \t\tlane-footer-tag=\"vtb-lane-footer\"\n * \t\tuse-arrow-navigation=\"true\"\n * \t\tarrow-navigable-elements=\".lane-header,.incident-card,.add-card-btn\"\n * />\n *\n * */\nexport default createCustomElement('now-visual-board', {\n\tview,\n\tinitialState: {\n\t\ta11yOptions: {},\n\t},\n\tproperties: {\n\t\t/**\n\t\t * Array of cards data to be rendered in the card slot\n\t\t * @type {Array}\n\t\t */\n\t\tcards: {\n\t\t\trequired: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tid: { type: 'string' },\n\t\t\t\t\t\ttitle: { type: 'string' },\n\t\t\t\t\t\torder: { type: 'number' },\n\t\t\t\t\t\tlane_id: { type: 'string' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: [],\n\t\t},\n\n\t\t/**\n\t\t * Array of lanes data\n\t\t * @type {Array}\n\t\t */\n\t\tlanes: {\n\t\t\trequired: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tid: { type: 'string' },\n\t\t\t\t\t\ttitle: { type: 'string' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: [],\n\t\t},\n\n\t\t/**\n\t\t * Array of swimlanes data\n\t\t * @type {Array}\n\t\t */\n\t\tswimlanes: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tid: { type: 'string' },\n\t\t\t\t\t\ttitle: { type: 'string' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: [],\n\t\t},\n\t\t/**\n\t\t * Element name to be rendered in the card slot\n\t\t * @type {string}\n\t\t */\n\t\tcardTag: { required: true, schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be shown as a placeholder for source card when drag event starts\n\t\t * @type {string}\n\t\t */\n\t\tcardDragPlaceholderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be shown as a placeholder for card at the drop zone during the drag event\n\t\t * @type {string}\n\t\t */\n\t\tcardDropPlaceholderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Set this flag to false if you don't want the cards to be draggable\n\t\t * @type {boolean}\n\t\t * @default {true}\n\t\t */\n\t\tcardDraggable: { schema: { type: 'boolean' }, default: true },\n\t\t/**\n\t\t * Element to be rendered in the lane header slot\n\t\t * @type {string}\n\t\t */\n\t\tlaneHeaderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be rendered in the lane footer slot\n\t\t * @type {string}\n\t\t */\n\t\tlaneFooterTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be shown as a placeholder for source lane when drag event starts\n\t\t * @type {string}\n\t\t */\n\t\tlaneDragPlaceholderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be shown as a placeholder for lane at the drop zone during the drag event\n\t\t * @type {string}\n\t\t */\n\t\tlaneDropPlaceholderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Set this flag to false if you don't want the lanes to be draggable\n\t\t * @type {boolean}\n\t\t * @default {true}\n\t\t */\n\t\tlaneDraggable: { schema: { type: 'boolean' }, default: true },\n\t\t/**\n\t\t * Element to be rendered in the swimlane header slot\n\t\t * @type {string}\n\t\t */\n\t\tswimlaneHeaderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be rendered in the swimlane header clone slot\n\t\t * @type {string}\n\t\t */\n\t\tswimlaneHeaderCloneTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be shown as a placeholder for source swimlane when drag event starts\n\t\t * @type {string}\n\t\t */\n\t\tswimlaneDragPlaceholderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Element to be shown as a placeholder for swimlane at the drop zone during the drag event\n\t\t * @type {string}\n\t\t */\n\t\tswimlaneDropPlaceholderTag: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Set this flag to false if you don't want the swimlanes to be draggable\n\t\t * @type {boolean}\n\t\t * @default {true}\n\t\t */\n\t\tswimlaneDraggable: { schema: { type: 'boolean' }, default: true },\n\t\t/**\n\t\t * Additional override properties for each lane.\n\t\t * Usage:\n\t\t * \tlaneConfigOverride: {\n\t\t * \t\t'lane-id': {\n\t\t * \t\t\ttag : '<string>',\n\t\t\t\t\tdrag-placeholder-tag : '<string>',\n\t\t\t\t\tdrop-placeholder-tag : '<string>',\n\t\t\t\t\tdraggable :'<boolean>',\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @type {Object}\n\t\t */\n\t\tlaneConfigOverride: {\n\t\t\tschema: { type: 'object' },\n\t\t\tdefault: {},\n\t\t},\n\t\t/**\n\t\t * Additional override properties for each swimlane.\n\t\t * Usage:\n\t\t * \tlaneConfigOverride: {\n\t\t * \t\t'lane-id': {\n\t\t * \t\t\ttag : '<string>',\n\t\t\t\t\tdrag-placeholder-tag : '<string>',\n\t\t\t\t\tdrop-placeholder-tag : '<string>',\n\t\t\t\t\tdraggable :'<boolean>',\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @type {Object}\n\t\t */\n\t\tswimlaneConfigOverride: {\n\t\t\tschema: { type: 'object' },\n\t\t\tdefault: {},\n\t\t},\n\t\tcloneMode: { schema: { type: 'boolean' }, default: false },\n\t\t/**\n\t\t * Additional override properties for each card.\n\t\t * Usage:\n\t\t * \tcardConfigOverride: {\n\t\t * \t\t'card-id': {\n\t\t * \t\t\ttag : '<string>',\n\t\t\t\t\tdrag-placeholder-tag : '<string>',\n\t\t\t\t\tdrop-placeholder-tag : '<string>',\n\t\t\t\t\tdraggable :'<boolean>',\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @type {Object}\n\t\t */\n\t\tcardConfigOverride: {\n\t\t\tschema: { type: 'object' },\n\t\t\tdefault: {},\n\t\t},\n\t\t/**\n\t\t * This flag allow the board to be accessible using arrow keys.\n\t\t * Arrow navigation by default works on the wrapper elements of the board.\n\t\t * To override this behavior use @property {arrowNavigableElements}\n\t\t * @type {boolean}\n\t\t */\n\t\tuseArrowNavigation: { schema: { type: 'boolean' }, default: true },\n\t\t/**\n\t\t * Comma separated values of selectors for arrow navigation\n\t\t * @type {string}\n\t\t */\n\t\tarrowNavigableElements: { schema: { type: 'string' }, default: '' },\n\t\t/**\n\t\t * Actions that are dispatched for native DOM events on wrapper elements\n\t\t * Supported Wrapper elements- ['sn-lane-header', 'sn-swimlane-header', 'sn-lane', 'sn-card-wrapper', 'lane-footer-container']\n\t\t * @type {Array}\n\t\t * @property events -List of Native DOM event names\n\t\t * @property action -Action dispatched for the corresponding DOM event\n\t\t * @property on -List of wrapper container names (whitelisted above)\n\t\t */\n\t\twrapperDomEvents: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ton: { type: 'array' },\n\t\t\t\t\t\tevents: { type: 'array' },\n\t\t\t\t\t\taction: { type: 'string' },\n\t\t\t\t\t},\n\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: [],\n\t\t},\n\t\t/**\n\t\t * Custom scrollBar options for lane\n\t\t * @property scrollTrack styles to be applied to scroll track\n\t\t * @property scrollbar styles to be applied to scroll bar\n\t\t * Example: customScrollOptions : {\n\t\t * \t\t\t\tenableScroll: true,\n\t\t * \t\t\t\tscrollTrackCSS: {\n\t\t * \t\t\t\t\tbackground: 'yellow',\n\t\t * \t\t\t\t\theight: '80%',\n\t\t * \t\t\t\t\t..other styles\n\t\t * \t\t\t\t},\n\t\t * \t\t\t\tscrollBarCSS: {\n\t\t * \t\t\t\t\tcolor: 'blue',\n\t\t *\t\t\t\t\t..other styles\n\t\t * \t\t\t\t}\n\t\t * \t\t\t}\n\t\t *\n\t\t */\n\t\tcustomScrollOptions: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tenableScroll: { type: 'boolean', default: false },\n\t\t\t\t\tscrollTrackCSS: { type: 'object' },\n\t\t\t\t\tscrollBarCSS: { type: 'object' },\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t/**\n\t\t * A boolean indicating whether the board should fetch the components mentioned by the tags, from\n\t\t * UXF registry and load them in the browser. The component should be available in the UXF registry\n\t\t * for this to work.\n\t\t *\n\t\t * Example: If the property `card-tag` is passed as `\"sn-component-vtb-card\"`, then the board will fetch this\n\t\t * component from UXF registry and it need not be manually imported in the code by the board consumer.\n\t\t *\n\t\t * */\n\t\tloadTagsFromUxf: {\n\t\t\tdefault: false,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\tstyles: {\n\t\t\tdefault: {},\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t},\n\t},\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when card drag has ended and has been dropped in a location\n\t\t * @type {{id:string, fromLane:string, toLane:string, fromSwimlane:string, toSwimlane:string,\n\t\t * fromPosition:number, toPosition:number}}\n\t\t */\n\t\t'NOW_VISUAL_BOARD#CARD_MOVED': {},\n\t\t/**\n\t\t * Dispatched when lane drag has ended\n\t\t * @type {{id:string, fromPosition:number, toPosition:number}}\n\t\t */\n\t\t'NOW_VISUAL_BOARD#LANE_MOVED': {},\n\t\t/**\n\t\t * Dispatched when swimlane drag has ended\n\t\t * @type {{id:string, fromPosition:number, toPosition:number}}\n\t\t */\n\t\t'NOW_VISUAL_BOARD#SWIMLANE_MOVED': {},\n\t},\n\tactionHandlers: {\n\t\t...dndActionHandlers,\n\t\t...a11yActionHandlers,\n    ...uxfImportHandlers,\n\t\t[REGISTER_WRAPPER_EVENT]: ({ state, action, dispatch }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { element, name },\n\t\t\t} = action;\n\t\t\tconst {\n\t\t\t\tproperties: { wrapperDomEvents },\n\t\t\t} = state;\n\t\t\twrapperDomEvents.forEach(\n\t\t\t\t({ events = [], action = '', on = [], capture = false }) => {\n\t\t\t\t\tif (on.indexOf(name) >= 0) {\n\t\t\t\t\t\tevents.forEach((eventName) => {\n\t\t\t\t\t\t\telement.addEventListener(\n\t\t\t\t\t\t\t\teventName,\n\t\t\t\t\t\t\t\t(event) => {\n\t\t\t\t\t\t\t\t\tdispatch(action, { event, name });\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcapture\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t},\n\tstyles,\n\tbehaviors: [\n\t\tboardNavigationBehavior,\n\t\tlaneSortBehavior,\n\t\tswimlaneSortBehavior,\n\t],\n});\n","import { createCustomElement, actionTypes } from '@servicenow/ui-core';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-dropdown';\nimport '../../shared/rearrange-list/rearrange-list';\nimport { querySelectorDeep } from '@devsnc/library-vtb-commons';\nimport { pickValue } from '../../../shared/utils';\nimport { ACTION_PREFIX, CARD_MOVED } from '../../../constants/actions';\nimport styles from './card-move-modal.scss';\nimport {\n\tMOVE_CARD,\n\tVERTICAL_LANE,\n\tSELECT_LOCATION,\n\tARRANGE_CARD_ORDER,\n\tCURRENT,\n\tCANCEL,\n\tSWIM_LANE,\n} from '../../../constants/translated';\nimport If from '../../shared/if';\n\nconst orderSort = (a, b) => pickValue(a.order) - pickValue(b.order);\nconst getCardFromId = (cards, cardId) =>\n\tcards.find((card) => card.id === cardId);\nconst isLaneDroppable = (laneId, laneConfigOverride) => {\n\treturn laneConfigOverride && laneConfigOverride[laneId]\n\t\t? laneConfigOverride[laneId]['droppable'] !== false\n\t\t: true;\n};\n\nconst getCardPositionInLane = (cards, cardId, laneId, swimlaneId) => {\n\treturn cards\n\t\t.filter(\n\t\t\t(card) =>\n\t\t\t\tcard.lane_id === laneId && card.swim_lane_id === swimlaneId\n\t\t)\n\t\t.sort(orderSort)\n\t\t.findIndex((card) => card.id === cardId);\n};\n\nconst getLaneMoveOptions = (lanes, currentLaneId, laneConfigOverride) => {\n\tif (!currentLaneId) return lanes;\n\treturn lanes\n\t\t.filter((lane) => {\n\t\t\treturn (\n\t\t\t\tisLaneDroppable(lane.id, laneConfigOverride) ||\n\t\t\t\tlane.id === currentLaneId\n\t\t\t);\n\t\t})\n\t\t.map((lane) => {\n\t\t\treturn {\n\t\t\t\tid: lane.id,\n\t\t\t\tlabel:\n\t\t\t\t\tlane.title +\n\t\t\t\t\t(lane.id === currentLaneId ? ` (${CURRENT})` : ''),\n\t\t\t};\n\t\t});\n};\n\nconst getCardMoveOptions = (\n\tallCards,\n\tnewLaneId,\n\tnewSwimlaneId,\n\tcurrentCard\n) => {\n\tif (!allCards || !newLaneId || !currentCard) return [];\n\n\tconst cardRearrangeOptions = [];\n\tif (\n\t\tcurrentCard.lane_id !== newLaneId ||\n\t\t(newSwimlaneId && currentCard.swim_lane_id !== newSwimlaneId)\n\t) {\n\t\tcardRearrangeOptions.push({\n\t\t\tdisplayValue: `${currentCard.title} (${CURRENT})`,\n\t\t\tvalue: currentCard.id,\n\t\t\tselected: true,\n\t\t});\n\t}\n\n\tconst otherCardOptions = allCards\n\t\t.filter((card) => {\n\t\t\tif (newSwimlaneId) {\n\t\t\t\treturn (\n\t\t\t\t\tcard.lane_id === newLaneId &&\n\t\t\t\t\tcard.swim_lane_id === newSwimlaneId\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn card.lane_id === newLaneId;\n\t\t\t}\n\t\t})\n\t\t.sort(orderSort)\n\t\t.map((card) => {\n\t\t\tlet cardTitle = card.title;\n\t\t\tif (card.id === currentCard.id) cardTitle += ` (${CURRENT})`;\n\t\t\treturn {\n\t\t\t\tdisplayValue: cardTitle,\n\t\t\t\tvalue: card.id,\n\t\t\t\tselected: card.id === currentCard.id,\n\t\t\t};\n\t\t});\n\n\treturn cardRearrangeOptions.concat(otherCardOptions);\n};\n\nexport default createCustomElement('card-move-modal', {\n\tview(state) {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tlanes,\n\t\t\t\tswimlanes,\n\t\t\t\tcards,\n\t\t\t\tselectedCard,\n\t\t\t\tlaneConfigOverride,\n\t\t\t\tswimlaneConfigOverride,\n\t\t\t},\n\t\t\tselectedLaneId,\n\t\t\tselectedSwimlaneId,\n\t\t\tcardMoveOptions,\n\t\t} = state;\n\n\t\tconst currentCard = getCardFromId(cards, selectedCard);\n\t\tif (!currentCard) return;\n\n\t\tlet currentLaneId = selectedLaneId || currentCard.lane_id;\n\t\tconst currentLaneOptions = getLaneMoveOptions(\n\t\t\tlanes,\n\t\t\tcurrentCard.lane_id,\n\t\t\tlaneConfigOverride\n\t\t);\n\n\t\tlet currentSwimlaneId = null;\n\t\tlet currentSwimlaneOptions = [];\n\t\tif (swimlanes && swimlanes.length > 0) {\n\t\t\tcurrentSwimlaneId = selectedSwimlaneId || currentCard.swim_lane_id;\n\t\t\tcurrentSwimlaneOptions = getLaneMoveOptions(\n\t\t\t\tswimlanes,\n\t\t\t\tcurrentCard.swim_lane_id,\n\t\t\t\tswimlaneConfigOverride\n\t\t\t);\n\t\t}\n\n\t\tconst currentCardOptions =\n\t\t\tcardMoveOptions ||\n\t\t\tgetCardMoveOptions(\n\t\t\t\tcards,\n\t\t\t\tcurrentLaneId,\n\t\t\t\tcurrentSwimlaneId,\n\t\t\t\tcurrentCard\n\t\t\t);\n\n\t\tconst modalTitle = `${MOVE_CARD}: ${currentCard.title}`;\n\t\tconst footerActions = [\n\t\t\t{ id: 'move_card', variant: 'primary', label: MOVE_CARD },\n\t\t\t{ id: 'cancel', variant: 'secondary', label: CANCEL },\n\t\t];\n\n\t\treturn (\n\t\t\t<now-modal\n\t\t\t\topened\n\t\t\t\tsize=\"lg\"\n\t\t\t\theader-label={modalTitle}\n\t\t\t\tfooter-actions={footerActions}\n\t\t\t>\n\t\t\t\t<p className=\"modal-sub-heading\">{SELECT_LOCATION}</p>\n\t\t\t\t<div className=\"select-lanes\">\n\t\t\t\t\t<div className=\"select-lane\">\n\t\t\t\t\t\t<p className=\"select-label\">{VERTICAL_LANE}</p>\n\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\tclassName=\"vlane-dropdown\"\n\t\t\t\t\t\t\titems={currentLaneOptions}\n\t\t\t\t\t\t\tappend-to-payload={{ laneType: 'LANE' }}\n\t\t\t\t\t\t\tselected-items={[currentLaneId]}\n\t\t\t\t\t\t\tconfig-aria={{ 'aria-label': VERTICAL_LANE }}\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<If test={swimlanes.length > 0}>\n\t\t\t\t\t\t<div className=\"select-lane\">\n\t\t\t\t\t\t\t<p className=\"select-label\">{SWIM_LANE}</p>\n\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\titems={currentSwimlaneOptions}\n\t\t\t\t\t\t\t\tappend-to-payload={{ laneType: 'SWIMLANE' }}\n\t\t\t\t\t\t\t\tselected-items={[currentSwimlaneId]}\n\t\t\t\t\t\t\t\tconfig-aria={{ 'aria-label': SWIM_LANE }}\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</If>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"select-label\">{ARRANGE_CARD_ORDER}</p>\n\t\t\t\t<div className=\"lanes-rearrange-container\">\n\t\t\t\t\t<rearrange-list\n\t\t\t\t\t\tconfig-aria={{ 'aria-label': ARRANGE_CARD_ORDER }}\n\t\t\t\t\t\titems={currentCardOptions}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</now-modal>\n\t\t);\n\t},\n\tinitialState: {\n\t\tupdatedOrder: -1,\n\t\tselectedLaneId: '',\n\t\tselectedSwimlaneId: '',\n\t\tcardMoveOptions: null,\n\t},\n\tproperties: {\n\t\tlanes: { default: {} },\n\t\tswimlanes: { default: {} },\n\t\tcards: { default: {} },\n\t\tselectedCard: { default: '' },\n\t\tlaneConfigOverride: { default: {} },\n\t\tswimlaneConfigOverride: { default: {} },\n\t},\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_DOM_READY]: ({ host }) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst dropdownEl = querySelectorDeep('.vlane-dropdown', host);\n\t\t\t\tif (dropdownEl) dropdownEl.focus();\n\t\t\t}, 100);\n\t\t},\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': ({\n\t\t\tstate,\n\t\t\taction: { payload },\n\t\t\tupdateState,\n\t\t}) => {\n\t\t\tconst {\n\t\t\t\tproperties: { cards, swimlanes, selectedCard },\n\t\t\t\tselectedSwimlaneId,\n\t\t\t\tselectedLaneId,\n\t\t\t} = state;\n\t\t\tconst currentCard = getCardFromId(cards, selectedCard);\n\t\t\tif (payload.laneType === 'LANE') {\n\t\t\t\tconst _selectedLaneId = payload.value[0];\n\t\t\t\tconst _selectedSwimlaneId =\n\t\t\t\t\tswimlanes.length > 0\n\t\t\t\t\t\t? selectedSwimlaneId || currentCard.swim_lane_id\n\t\t\t\t\t\t: null;\n\t\t\t\tconst cardMoveOptions = getCardMoveOptions(\n\t\t\t\t\tcards,\n\t\t\t\t\t_selectedLaneId,\n\t\t\t\t\t_selectedSwimlaneId,\n\t\t\t\t\tcurrentCard\n\t\t\t\t);\n\t\t\t\tconst updatedOrder =\n\t\t\t\t\tcurrentCard.lane_id !== _selectedLaneId ? 0 : -1;\n\t\t\t\tupdateState({\n\t\t\t\t\tselectedLaneId: _selectedLaneId,\n\t\t\t\t\tcardMoveOptions,\n\t\t\t\t\tupdatedOrder,\n\t\t\t\t});\n\t\t\t} else if (payload.laneType === 'SWIMLANE') {\n\t\t\t\tconst _selectedSwimlaneId = payload.value[0];\n\t\t\t\tconst currentCard = getCardFromId(cards, selectedCard);\n\t\t\t\tconst cardMoveOptions = getCardMoveOptions(\n\t\t\t\t\tcards,\n\t\t\t\t\tselectedLaneId || currentCard.lane_id,\n\t\t\t\t\t_selectedSwimlaneId,\n\t\t\t\t\tcurrentCard\n\t\t\t\t);\n\t\t\t\tconst updatedOrder =\n\t\t\t\t\tcurrentCard.swim_lane_id !== _selectedSwimlaneId ? 0 : -1;\n\t\t\t\tupdateState({\n\t\t\t\t\tselectedSwimlaneId: _selectedSwimlaneId,\n\t\t\t\t\tcardMoveOptions,\n\t\t\t\t\tupdatedOrder,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t'NOW_MODAL#OPENED_SET': ({ dispatch }) =>\n\t\t\tdispatch('NOW_VISUAL_BOARD#A11Y#OPTIONS_RESET'),\n\t\t'NOW_MODAL#FOOTER_ACTION_CLICKED': ({ action, state, dispatch }) => {\n\t\t\tconst actionType = action.payload.footerAction.id;\n\t\t\tconst {\n\t\t\t\tproperties: { cards, selectedCard },\n\t\t\t} = state;\n\t\t\tconst card = getCardFromId(cards, selectedCard);\n\t\t\tconst fromPosition = getCardPositionInLane(\n\t\t\t\tcards,\n\t\t\t\tcard.id,\n\t\t\t\tcard.lane_id,\n\t\t\t\tcard.swim_lane_id\n\t\t\t);\n\t\t\tconst toPosition =\n\t\t\t\tstate.updatedOrder >= 0 ? state.updatedOrder : fromPosition;\n\t\t\tif (actionType === 'move_card') {\n\t\t\t\tdispatch(ACTION_PREFIX + CARD_MOVED, {\n\t\t\t\t\tid: card.id,\n\t\t\t\t\tfromLane: card.lane_id,\n\t\t\t\t\tfromSwimlane: card.swim_lane_id,\n\t\t\t\t\tfromPosition,\n\n\t\t\t\t\ttoLane: state.selectedLaneId || card.lane_id,\n\t\t\t\t\ttoPosition,\n\t\t\t\t\ttoSwimlane: state.selectedSwimlaneId || card.swim_lane_id,\n\n\t\t\t\t\teventType: 'keyboard',\n\t\t\t\t});\n\t\t\t}\n\t\t\tdispatch('NOW_VISUAL_BOARD#A11Y#OPTIONS_RESET');\n\t\t},\n\t\t'NOW_VISUAL_BOARD#REARRANGE_LIST#ORDER_CHANGED': ({\n\t\t\taction,\n\t\t\tupdateState,\n\t\t}) => {\n\t\t\tupdateState({\n\t\t\t\tupdatedOrder: action.payload.updatedIndex,\n\t\t\t\tcardMoveOptions: action.payload.updatedItems,\n\t\t\t});\n\t\t},\n\t},\n\tstyles,\n});\n","module.exports = __TECTONIC__$servicenow_now_dropdown;","module.exports = __TECTONIC__$servicenow_behavior_key_binding_19_0_12;","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./rearrange-list.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}ul{padding:0;margin:0}ul li{list-style:none;color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)));font-size:1rem;height:2.5rem;line-height:2.5rem;padding-left:1.5rem;padding-right:1rem;background-color:RGB(var(--now-color--neutral-0,255,255,255))}ul li::-moz-focus-inner{border-style:none}ul li:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25);outline:none}ul li .item-text{display:inline-block;float:left;width:95%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}ul li:nth-child(odd){background-color:RGB(var(--now-color--neutral-1,246,247,247))}ul li.active{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)));background-color:RGB(var(--now-color--primary-0,221,237,233))}ul li.active span.grippy{display:inline-block;float:right;content:\\\"....\\\";cursor:move;width:1rem;height:2rem;line-height:.25rem;color:RGB(var(--now-color--neutral-9,99,114,116));font-size:1.25rem;font-weight:500;vertical-align:middle;overflow:hidden;padding:.25rem}ul li.active span.grippy:after{content:\\\".. .. .. ..\\\"}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}\", \"\"]);\n\n// exports\n","module.exports = __TECTONIC__lodash_4_17_20[\"isEmpty\"];","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./card-move-modal.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{position:relative;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}.modal-sub-heading{margin:0 0 1rem;font-size:1rem}.lanes-rearrange-container{border-top:1px solid RGB(var(--now-color--divider-primary,var(--now-color--neutral-7,135,147,148)));border-bottom:1px solid RGB(var(--now-color--divider-primary,var(--now-color--neutral-7,135,147,148)));overflow-x:hidden;overflow-y:auto;min-height:14.6875rem;max-height:14.6875rem}.select-lane{margin-bottom:1rem}.select-label{margin:0 0 .25rem 0;font-size:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116))}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport '@servicenow/now-modal';\nimport '../../shared/rearrange-list/rearrange-list';\nimport styles from './lane-move-modal.scss';\nimport {\n\tACTION_PREFIX,\n\tLANE_MOVED,\n\tSWIMLANE_MOVED,\n} from '../../../constants/actions';\nimport {\n\tMOVE_LANE,\n\tCANCEL,\n\tARRANGE_LANE_ORDER,\n\tCURRENT,\n\tARRANGE_SWIMLANE_ORDER,\n\tMOVE_SWIMLANE,\n} from '../../../constants/translated';\n\nconst isVisibleInReorder = (laneId, laneConfigOverride) => {\n\treturn laneConfigOverride && laneConfigOverride[laneId]\n\t\t? laneConfigOverride[laneId]['hide_in_reorder'] !== true\n\t\t: true;\n};\n\nconst getLaneMoveOptions = (lanes, currentLaneId, laneConfigOverride) => {\n\tif (!currentLaneId) return lanes;\n\treturn lanes\n\t\t.filter((lane) => {\n\t\t\treturn (\n\t\t\t\tisVisibleInReorder(lane.id, laneConfigOverride) ||\n\t\t\t\tlane.id === currentLaneId\n\t\t\t);\n\t\t})\n\t\t.map((lane) => {\n\t\t\tconst laneTitle =\n\t\t\t\tlane.title + (lane.id === currentLaneId ? ` (${CURRENT})` : '');\n\t\t\treturn {\n\t\t\t\tdisplayValue: laneTitle,\n\t\t\t\tvalue: lane.id,\n\t\t\t\tselected: lane.id === currentLaneId,\n\t\t\t};\n\t\t});\n};\n\nexport default createCustomElement('lane-move-modal', {\n\tview(state) {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tlanes,\n\t\t\t\tselectedLane,\n\t\t\t\tlaneType,\n\t\t\t\tcustomScrollOptions,\n\t\t\t\tlaneConfigOverride,\n\t\t\t},\n\t\t\tlaneMoveOptions,\n\t\t} = state;\n\n\t\tconst currentLane = lanes.find((lane) => lane.id === selectedLane);\n\t\tif (!currentLane) return;\n\n\t\tconst currentLaneOptions =\n\t\t\tlaneMoveOptions ||\n\t\t\tgetLaneMoveOptions(lanes, selectedLane, laneConfigOverride);\n\t\tconst modalTitle = `${\n\t\t\tlaneType === 'vertical' ? MOVE_LANE : MOVE_SWIMLANE\n\t\t}: ${currentLane.title}`;\n\t\tconst modalFooterActions = [\n\t\t\t{\n\t\t\t\tid: 'move_lane',\n\t\t\t\tvariant: 'primary',\n\t\t\t\tlabel: laneType === 'vertical' ? MOVE_LANE : MOVE_SWIMLANE,\n\t\t\t},\n\t\t\t{ id: 'cancel', variant: 'secondary', label: CANCEL },\n\t\t];\n\n\t\treturn (\n\t\t\t<now-modal\n\t\t\t\topened\n\t\t\t\tsize=\"lg\"\n\t\t\t\theader-label={modalTitle}\n\t\t\t\tfooter-actions={modalFooterActions}\n\t\t\t\tappend-to-payload={customScrollOptions}\n\t\t\t>\n\t\t\t\t<p className=\"select-label\">\n\t\t\t\t\t{laneType === 'vertical'\n\t\t\t\t\t\t? ARRANGE_LANE_ORDER\n\t\t\t\t\t\t: ARRANGE_SWIMLANE_ORDER}\n\t\t\t\t</p>\n\t\t\t\t<div className=\"lanes-rearrange-container\">\n\t\t\t\t\t<rearrange-list\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label':\n\t\t\t\t\t\t\t\tlaneType === 'vertical'\n\t\t\t\t\t\t\t\t\t? ARRANGE_LANE_ORDER\n\t\t\t\t\t\t\t\t\t: ARRANGE_SWIMLANE_ORDER,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={currentLaneOptions}\n\t\t\t\t\t\tfocus-active-item=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</now-modal>\n\t\t);\n\t},\n\tinitialState: {\n\t\tupdatedOrder: -1,\n\t\tlaneMoveOptions: null,\n\t},\n\tproperties: {\n\t\tlanes: { default: {} },\n\t\tselectedLane: { schema: { type: 'string' } },\n\t\tlaneType: { default: '' },\n\t\tlaneConfigOverride: { default: {} },\n\t\tcustomScrollOptions: { default: '' },\n\t},\n\tactionHandlers: {\n\t\t'NOW_MODAL#OPENED_SET': ({ dispatch }) =>\n\t\t\tdispatch('NOW_VISUAL_BOARD#A11Y#OPTIONS_RESET'),\n\t\t'NOW_MODAL#FOOTER_ACTION_CLICKED': ({\n\t\t\taction,\n\t\t\tstate,\n\t\t\tproperties,\n\t\t\tdispatch,\n\t\t}) => {\n\t\t\tconst lanes = properties.lanes;\n\t\t\tconst laneId = properties.selectedLane;\n\t\t\tconst laneType = properties.laneType;\n\t\t\tconst customScrollOptions = properties.customScrollOptions;\n\t\t\tconst actionType = action.payload.footerAction.id;\n\n\t\t\tif (actionType === 'move_lane' && state.updatedOrder >= 0) {\n\t\t\t\tlaneType === 'vertical'\n\t\t\t\t\t? dispatch(ACTION_PREFIX + LANE_MOVED, {\n\t\t\t\t\t\t\tid: laneId,\n\t\t\t\t\t\t\tfromPosition: lanes.findIndex(\n\t\t\t\t\t\t\t\t(lane) => lane.id === laneId\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttoPosition: state.updatedOrder,\n\t\t\t\t\t\t\teventType: 'keyboard',\n\t\t\t\t\t\t\tcustomScrollOptions: customScrollOptions,\n\t\t\t\t\t  })\n\t\t\t\t\t: dispatch(ACTION_PREFIX + SWIMLANE_MOVED, {\n\t\t\t\t\t\t\tid: laneId,\n\t\t\t\t\t\t\tfromPosition: lanes.findIndex(\n\t\t\t\t\t\t\t\t(lane) => lane.id === laneId\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttoPosition: state.updatedOrder,\n\t\t\t\t\t\t\teventType: 'keyboard',\n\t\t\t\t\t  });\n\t\t\t}\n\t\t\tdispatch('NOW_VISUAL_BOARD#A11Y#OPTIONS_RESET');\n\t\t},\n\t\t'NOW_VISUAL_BOARD#REARRANGE_LIST#ORDER_CHANGED': ({\n\t\t\taction,\n\t\t\tupdateState,\n\t\t}) => {\n\t\t\tupdateState({\n\t\t\t\tupdatedOrder: action.payload.updatedIndex,\n\t\t\t\tlaneMoveOptions: action.payload.updatedItems,\n\t\t\t});\n\t\t},\n\t},\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./lane-move-modal.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{position:relative}.select-label{margin-top:0;margin-bottom:.25rem;font-size:.75rem;color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}.lanes-rearrange-container{border-top:1px solid RGB(var(--now-color--divider-primary,var(--now-color--neutral-7,135,147,148)));border-bottom:1px solid RGB(var(--now-color--divider-primary,var(--now-color--neutral-7,135,147,148)));overflow-x:hidden;overflow-y:auto;min-height:17.625rem;max-height:25.125rem}\", \"\"]);\n\n// exports\n","import '../sn-swimlane/sn-swimlane';\nimport '../sn-swimlane-header/sn-swimlane-header';\nimport '../sn-lane/sn-lane';\nimport '../sn-lane-header/sn-lane-header';\nimport '../accessibility/board-accessibility';\nimport If from '../shared/if';\nimport get from 'lodash/get';\nimport { getCardsForLane, getCardsForSwimlane } from '../../shared/utils';\nimport { REGISTER_WRAPPER_EVENT } from '../../constants/actions';\n\nexport const view = (state, { dispatch }) => {\n\tconst {\n\t\tproperties: {\n\t\t\tcards,\n\t\t\tlanes,\n\t\t\tswimlanes,\n\t\t\tcardTag: globalCardTag,\n\t\t\tcardDraggable: globalCardDraggable,\n\t\t\tcardDragPlaceholderTag: globalCardDragPlaceholderTag,\n\t\t\tcardDropPlaceholderTag: globalCardDropPlaceholderTag,\n\t\t\tlaneHeaderTag: globalLaneHeaderTag,\n\t\t\tlaneFooterTag: globalLaneFooterTag,\n\t\t\tlaneDragPlaceholderTag: globalLaneDragPlaceholderTag,\n\t\t\tlaneDropPlaceholderTag: globalLaneDropPlaceholderTag,\n\t\t\tlaneDraggable: globalLaneDraggable,\n\t\t\tswimlaneHeaderTag: globalSwimlaneHeaderTag,\n\t\t\tswimlaneDragPlaceholderTag: globalSwimlaneDragPlaceholderTag,\n\t\t\tswimlaneDropPlaceholderTag: globalSwimlaneDropPlaceholderTag,\n\t\t\tswimlaneDraggable: globalSwimlaneDraggable,\n\t\t\tswimlaneConfigOverride,\n\t\t\tlaneConfigOverride,\n\t\t\tcardConfigOverride,\n\t\t\twrapperDomEvents,\n\t\t\tcloneMode,\n\t\t\tstyles,\n\t\t\tcustomScrollOptions,\n\t\t},\n\t\ta11yOptions,\n\t} = state;\n\n\tconst globalCardConfig = {\n\t\ttag: globalCardTag,\n\t\tdraggable: globalCardDraggable,\n\t\tdrag_placeholder_tag: globalCardDragPlaceholderTag,\n\t\tdrop_placeholder_tag: globalCardDropPlaceholderTag,\n\t};\n\n\tconst IS_SWIMLANE_BOARD = swimlanes && swimlanes.length > 0;\n\n\treturn (\n\t\t<div className=\"board-container\" role=\"grid\">\n\t\t\t<div\n\t\t\t\tclassName={`sn-board ${\n\t\t\t\t\tIS_SWIMLANE_BOARD ? 'swimlane-board' : ''\n\t\t\t\t}`}\n\t\t\t\tstyle={get(styles, 'sn-board', '')}\n\t\t\t>\n\t\t\t\t{/***********************\n\t\t\t\t ****** Lane Header *****\n\t\t\t\t ***********************/}\n\t\t\t\t<header className=\"lanes-header\" role=\"rowgroup\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"lanes-header-container\"\n\t\t\t\t\t\tstyle={get(styles, 'lanes-header-container', '')}\n\t\t\t\t\t\trole=\"row\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{lanes.map((lane, laneIndex) => (\n\t\t\t\t\t\t\t<sn-lane-header\n\t\t\t\t\t\t\t\tid={lane.id}\n\t\t\t\t\t\t\t\tlane={lane}\n\t\t\t\t\t\t\t\tkey={`lane_header_${lane.id}`}\n\t\t\t\t\t\t\t\tcards={getCardsForLane(lane, cards)}\n\t\t\t\t\t\t\t\tdraggable={get(\n\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t`${lane.id}.draggable`,\n\t\t\t\t\t\t\t\t\tglobalLaneDraggable\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\ttag-lane-header={get(\n\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t`${lane.id}.tag_lane_header`,\n\t\t\t\t\t\t\t\t\tglobalLaneHeaderTag\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\twrapper-dom-events={wrapperDomEvents}\n\t\t\t\t\t\t\t\tlane-index={laneIndex}\n\t\t\t\t\t\t\t\tlanes-count={lanes.length}\n\t\t\t\t\t\t\t\tswimlanes={swimlanes}\n\t\t\t\t\t\t\t\tcustom-scroll-options={customScrollOptions}\n\t\t\t\t\t\t\t\thook-insert={(e) => {\n\t\t\t\t\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\t\t\t\t\tname: 'sn-lane-header',\n\t\t\t\t\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t<main className=\"main-container\">\n\t\t\t\t\t{/***********************\n\t\t\t\t\t ******* 1D BOARD *******\n\t\t\t\t\t ***********************/}\n\n\t\t\t\t\t<If test={!IS_SWIMLANE_BOARD}>\n\t\t\t\t\t\t<div className=\"lanes-container\" role=\"rowgroup\">\n\t\t\t\t\t\t\t{lanes.map((lane, laneIndex) => (\n\t\t\t\t\t\t\t\t<sn-lane\n\t\t\t\t\t\t\t\t\tid={`lane_${lane.id}`}\n\t\t\t\t\t\t\t\t\tlane={lane}\n\t\t\t\t\t\t\t\t\tkey={lane.id}\n\t\t\t\t\t\t\t\t\tcards={getCardsForLane(lane, cards)}\n\t\t\t\t\t\t\t\t\tdraggable={get(\n\t\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${lane.id}.draggable`,\n\t\t\t\t\t\t\t\t\t\tglobalLaneDraggable\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\ttag-lane-header={get(\n\t\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${lane.id}.tag_lane_header`,\n\t\t\t\t\t\t\t\t\t\tglobalLaneHeaderTag\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\ttag-lane-footer={get(\n\t\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${lane.id}.tag_lane_footer`,\n\t\t\t\t\t\t\t\t\t\tglobalLaneFooterTag\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\ttag-drag-placeholder={get(\n\t\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${lane.id}.tag_drag_placeholder`,\n\t\t\t\t\t\t\t\t\t\tglobalLaneDragPlaceholderTag\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\ttag-drop-placeholder={get(\n\t\t\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${lane.id}.tag_drop_placeholder`,\n\t\t\t\t\t\t\t\t\t\tglobalLaneDropPlaceholderTag\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tglobal-card-config={globalCardConfig}\n\t\t\t\t\t\t\t\t\tcard-config-override={cardConfigOverride}\n\t\t\t\t\t\t\t\t\twrapper-dom-events={wrapperDomEvents}\n\t\t\t\t\t\t\t\t\tlane-index={laneIndex}\n\t\t\t\t\t\t\t\t\tlanes-count={lanes.length}\n\t\t\t\t\t\t\t\t\tcustom-scroll-options={customScrollOptions}\n\t\t\t\t\t\t\t\t\thook-insert={(e) => {\n\t\t\t\t\t\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\t\t\t\t\t\tname: 'sn-lane',\n\t\t\t\t\t\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</If>\n\n\t\t\t\t\t{/***********************\n\t\t\t\t\t ******* 2D BOARD *******\n\t\t\t\t\t ************************/}\n\n\t\t\t\t\t<If test={IS_SWIMLANE_BOARD}>\n\t\t\t\t\t\t<div className=\"swimlanes-container\">\n\t\t\t\t\t\t\t<div className=\"swimlanes\">\n\t\t\t\t\t\t\t\t{swimlanes.map((swimlane, slIndex) => (\n\t\t\t\t\t\t\t\t\t<sn-swimlane\n\t\t\t\t\t\t\t\t\t\tid={swimlane.id}\n\t\t\t\t\t\t\t\t\t\tkey={swimlane.id}\n\t\t\t\t\t\t\t\t\t\tswimlane={swimlane}\n\t\t\t\t\t\t\t\t\t\tlanes={lanes}\n\t\t\t\t\t\t\t\t\t\tcards={getCardsForSwimlane(\n\t\t\t\t\t\t\t\t\t\t\tswimlane,\n\t\t\t\t\t\t\t\t\t\t\tcards\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tcollapsed={swimlane.collapsed}\n\t\t\t\t\t\t\t\t\t\tdraggable={get(\n\t\t\t\t\t\t\t\t\t\t\tswimlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t\t`${swimlane.id}.draggable`,\n\t\t\t\t\t\t\t\t\t\t\tglobalSwimlaneDraggable\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\ttag-swimlane-header={get(\n\t\t\t\t\t\t\t\t\t\t\tswimlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t\t`${swimlane.id}.tag_swimlane_header`,\n\t\t\t\t\t\t\t\t\t\t\tglobalSwimlaneHeaderTag\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\ttag-drag-placeholder={get(\n\t\t\t\t\t\t\t\t\t\t\tswimlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t\t`${swimlane.id}.tag_drag_placeholder`,\n\t\t\t\t\t\t\t\t\t\t\tglobalSwimlaneDragPlaceholderTag\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\ttag-drop-placeholder={get(\n\t\t\t\t\t\t\t\t\t\t\tswimlaneConfigOverride,\n\t\t\t\t\t\t\t\t\t\t\t`${swimlane.id}.tag_drop_placeholder`,\n\t\t\t\t\t\t\t\t\t\t\tglobalSwimlaneDropPlaceholderTag\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tglobal-card-config={globalCardConfig}\n\t\t\t\t\t\t\t\t\t\tcard-config-override={\n\t\t\t\t\t\t\t\t\t\t\tcardConfigOverride\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlane-config-override={\n\t\t\t\t\t\t\t\t\t\t\tlaneConfigOverride\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tglobal-lane-footer-tag={\n\t\t\t\t\t\t\t\t\t\t\tglobalLaneFooterTag\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tswimlane-config-override={\n\t\t\t\t\t\t\t\t\t\t\tswimlaneConfigOverride\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twrapper-dom-events={wrapperDomEvents}\n\t\t\t\t\t\t\t\t\t\tswimlane-index={slIndex}\n\t\t\t\t\t\t\t\t\t\tswimlanes-count={swimlanes.length}\n\t\t\t\t\t\t\t\t\t\tclone-mode={cloneMode}\n\t\t\t\t\t\t\t\t\t\thook-insert={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'sn-swimlane',\n\t\t\t\t\t\t\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</If>\n\t\t\t\t</main>\n\n\t\t\t\t{/*************************************\n\t\t\t\t ***** ACCESSIBILE DND ALTERNATIVE ****\n\t\t\t\t *************************************/}\n\t\t\t\t<If test={!cloneMode}>\n\t\t\t\t\t<board-accessibility\n\t\t\t\t\t\tswimlanes={swimlanes}\n\t\t\t\t\t\tlanes={lanes}\n\t\t\t\t\t\tcards={cards}\n\t\t\t\t\t\tlane-config-override={laneConfigOverride}\n\t\t\t\t\t\toptions={a11yOptions}\n\t\t\t\t\t\tswimlane-config-override={swimlaneConfigOverride}\n\t\t\t\t\t\tcustom-scroll-options={customScrollOptions}\n\t\t\t\t\t/>\n\t\t\t\t</If>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport { getCardsForLane } from '../../shared/utils';\nimport styles from './sn-swimlane.scss';\nimport get from 'lodash/get';\nimport { t } from 'sn-translate';\nimport { REGISTER_WRAPPER_EVENT } from '../../constants/actions';\n\nexport default createCustomElement('sn-swimlane', {\n\tview({ properties }, { dispatch }) {\n\t\tconst {\n\t\t\tswimlane,\n\t\t\tlanes,\n\t\t\tcards,\n\t\t\tdraggable,\n\t\t\tcollapsed,\n\t\t\ttagSwimlaneHeader,\n\t\t\tglobalLaneFooterTag,\n\t\t\tglobalCardConfig,\n\t\t\tcardConfigOverride,\n\t\t\tlaneConfigOverride,\n\t\t\tswimlanesCount,\n\t\t\tswimlaneIndex,\n\t\t} = properties;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"sn-swimlane\"\n\t\t\t\trole=\"rowgroup\"\n\t\t\t\t// aria-owns={lanes.map(\n\t\t\t\t// \t(lane) =>\n\t\t\t\t// \t\t`${getCardsForLane(lane, cards).map(\n\t\t\t\t// \t\t\t(card) => ` card_${card.id} `\n\t\t\t\t// \t\t).join(' ')} lane_footer_${swimlane.id}_${lane.id}`\n\t\t\t\t// ).join(' ')}\n\t\t\t>\n\t\t\t\t{/**** SWIM LANE HEADER*****/}\n\t\t\t\t<sn-swimlane-header\n\t\t\t\t\tid={`sl_header_${swimlane.id}`}\n\t\t\t\t\tkey={`sl_header_${swimlane.id}`}\n\t\t\t\t\tclassName=\"swimlane-header\"\n\t\t\t\t\tcollapsed={collapsed}\n\t\t\t\t\tswimlane={swimlane}\n\t\t\t\t\tdraggable={draggable}\n\t\t\t\t\ttag-swimlane-header={tagSwimlaneHeader}\n\t\t\t\t\tswimlane-index={swimlaneIndex}\n\t\t\t\t\tswimlanes-count={swimlanesCount}\n\t\t\t\t\trole=\"rowheader\"\n\t\t\t\t\taria-label={t(\n\t\t\t\t\t\t'Swimlane Header, {0} out of {1}: {2}',\n\t\t\t\t\t\tswimlaneIndex + 1,\n\t\t\t\t\t\tswimlanesCount,\n\t\t\t\t\t\tswimlane.name\n\t\t\t\t\t)}\n\t\t\t\t\taria-expanded={`${!collapsed}`}\n\t\t\t\t\trowspan=\"2\"\n\t\t\t\t\thook-insert={(e) => {\n\t\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\t\tname: 'sn-swimlane-header',\n\t\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<div className={`swimlane-body ${collapsed ? 'hide' : ''}`}>\n\t\t\t\t\t{lanes.map((lane, laneIndex) => (\n\t\t\t\t\t\t<sn-lane\n\t\t\t\t\t\t\tid={`${swimlane.id}_${lane.id}`}\n\t\t\t\t\t\t\tkey={`${swimlane.id}_${lane.id}`}\n\t\t\t\t\t\t\tlane={lane}\n\t\t\t\t\t\t\tswimlane-id={swimlane.id}\n\t\t\t\t\t\t\tcards={getCardsForLane(lane, cards)}\n\t\t\t\t\t\t\t/* no 'tag-lane-header' prop here, because of 2D layout */\n\t\t\t\t\t\t\ttag-lane-footer={get(\n\t\t\t\t\t\t\t\tlaneConfigOverride,\n\t\t\t\t\t\t\t\t`${lane.id}.tag_lane_footer`,\n\t\t\t\t\t\t\t\tglobalLaneFooterTag\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tglobal-card-config={globalCardConfig}\n\t\t\t\t\t\t\tcard-config-override={cardConfigOverride}\n\t\t\t\t\t\t\tlane-config-override={laneConfigOverride}\n\t\t\t\t\t\t\tlane-index={laneIndex}\n\t\t\t\t\t\t\tlanes-count={lanes.length}\n\t\t\t\t\t\t\tswimlane={swimlane}\n\t\t\t\t\t\t\thook-insert={(e) => {\n\t\t\t\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\t\t\t\tname: 'sn-lane',\n\t\t\t\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tid: { default: '', reflect: true },\n\t\tswimlane: { default: {} },\n\t\tconfig: { default: {} },\n\t\tcards: { default: [] },\n\t\tlanes: { default: [] },\n\t\tdraggable: { default: true, reflect: true },\n\t\tcollapsed: { default: false },\n\t\ttagSwimlaneHeader: { default: '' },\n\t\tglobalLaneFooterTag: { default: '' },\n\t\tglobalCardConfig: { default: {} },\n\t\tcardConfigOverride: { default: {} },\n\t\tlaneConfigOverride: { default: {} },\n\t\ttagDragPlaceholder: { default: '' },\n\t\ttagDropPlaceholder: { default: '' },\n\t\tswimlaneIndex: { default: '' },\n\t\tswimlanesCount: { default: '' },\n\t},\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./sn-swimlane.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{touch-action:none;transition:top .5s ease 0s}.sn-swimlane{position:relative;display:flex;flex-direction:column}.sn-swimlane .swimlane-body{display:flex;opacity:1}.sn-swimlane .swimlane-body.hide{height:0;visibility:hidden;transition:visibility 0s ease .1s}\", \"\"]);\n\n// exports\n","import { createCustomElement, actionTypes } from '@servicenow/ui-core';\nimport If from '../shared/if';\nimport styles from './sn-swimlane-header.scss';\nimport { getStyles } from '../../shared/utils';\nimport swimlaneCollapseBehavior from '../../behaviors/swimlane-collapse/behavior';\n\nexport default createCustomElement('sn-swimlane-header', {\n\tview({ properties }) {\n\t\tconst {\n\t\t\tdraggable,\n\t\t\tswimlane,\n\t\t\ttagSwimlaneHeader,\n\t\t\tcollapsed,\n\t\t} = properties;\n\t\tif (!swimlane || !swimlane.id) return null;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={`swimlane_header_${swimlane.id}`}\n\t\t\t\tdraggable={draggable}\n\t\t\t\tclassName={`sn-swimlane-header ${draggable ? 'draggable' : ''}`}\n\t\t\t\tstyle={getStyles(swimlane, 'sn-swimlane-header')}\n\t\t\t>\n\t\t\t\t<div className=\"swimlane-header-element-wrapper\">\n\t\t\t\t\t<If test={tagSwimlaneHeader}>\n\t\t\t\t\t\t{/*dot required to resolve tag name*/}\n\t\t\t\t\t\t<properties.tagSwimlaneHeader\n\t\t\t\t\t\t\tdata={swimlane}\n\t\t\t\t\t\t\tcollapsed={collapsed}\n\t\t\t\t\t\t\t{...swimlane}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</If>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n\tbehaviors: [swimlaneCollapseBehavior],\n\tproperties: {\n\t\tid: { default: '', reflect: true },\n\t\tswimlane: { default: {} },\n\t\ttagSwimlaneHeader: { default: '' },\n\t\tdraggable: { default: true, reflect: true },\n\t\tcollapsed: { default: false },\n\t\tswimlaneIndex: { default: '' },\n\t\tswimlanesCount: { default: '' },\n\t\ttagDragPlaceholder: { default: '' },\n\t\ttagDropPlaceholder: { default: '' },\n\t},\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./sn-swimlane-header.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-swimlane-header.draggable{cursor:grab}\", \"\"]);\n\n// exports\n","import { actionTypes } from '@servicenow/ui-core';\nimport swimlaneCollapse from './swimlane-collapse';\n\nexport default {\n\tname: 'swimlane-collapse',\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_DOM_READY]: ({ host, properties }) => {\n\t\t\tif (properties.draggable) swimlaneCollapse(host).addBehaviour();\n\t\t},\n\t\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: ({ action, host }) => {\n\t\t\tconst { name } = action.payload;\n\t\t\tif (name === 'draggable') {\n\t\t\t\tconst {\n\t\t\t\t\tpreviousValue: previouslyDraggable,\n\t\t\t\t\tvalue: nowDraggable,\n\t\t\t\t} = action.payload;\n\t\t\t\t\n\t\t\t\tif (!previouslyDraggable && nowDraggable)\n\t\t\t\t\tswimlaneCollapse(host).addBehaviour();\n\t\t\t\telse if (previouslyDraggable && !nowDraggable)\n\t\t\t\t\tswimlaneCollapse(host).removeBehaviour();\n\t\t\t}\n\t\t},\n\t},\n};\n","import { closestDeep } from '@devsnc/library-vtb-commons';\nimport { collapseSwimlanesAtElement, expandSwimlanes } from './collapse';\n\nconst SL_COLLAPSE_INIT_DELAY = 250;\n\nexport default function swimlaneCollapse(host) {\n\tlet collapseTimer = null;\n\tlet hostClientRect = {};\n\t\n\tconst handleCollapse = () => {\n\t\t// save the sl-header client rect as soon as mouse down to handle immediate dragging.\n\t\t// this is required because, sortable makes element display none on drag start.\n\t\thostClientRect.top = host.getBoundingClientRect().top;\n\t\thostClientRect.height = host.getBoundingClientRect().height;\n\n\t\t// Listen to mousemove to handle the immediate drag of lane.\n\t\thost.addEventListener('mousemove', collapseNow);\n\n\t\t// If there is no immediate drag, collapse only after a delay\n\t\tcollapseTimer = setTimeout(\n\t\t\tcollapseNow,\n\t\t\tSL_COLLAPSE_INIT_DELAY\n\t\t);\n\t};\n\n\tconst collapseNow = () => {\n\t\tresetImmediateDrag();\n\t\tcollapseSwimlanesAtElement(host, hostClientRect);\n\n\t\t// Expand swimlanes on mouse up\n\t\twindow.addEventListener('mouseup', resetSwimlanesPosition);\n\t};\n\n\tconst resetSwimlanesPosition = () => {\n\t\twindow.removeEventListener('mouseup', resetSwimlanesPosition);\n\t\tconst slContainerEl = closestDeep(host, '.swimlanes');\n\t\texpandSwimlanes(slContainerEl);\n\t}\n\n\tconst resetImmediateDrag = () => {\n\t\thost.removeEventListener('mousemove', collapseNow);\n\t\t// Cancel in-queue collapse, if already called.\n\t\tif (collapseTimer) clearTimeout(collapseTimer);\n\t\tcollapseTimer = null;\n\t};\n\n\treturn {\n\t\taddBehaviour() {\n\t\t\thost.addEventListener('mousedown', handleCollapse);\n\t\t\thost.addEventListener('mouseup', resetImmediateDrag);\n\t\t},\n\t\tremoveBehaviour() {\n\t\t\thost.removeEventListener('mousedown', handleCollapse);\n\t\t\thost.removeEventListener('mouseup', resetImmediateDrag);\n\t\t},\n\t};\n}\n","import { createCustomElement } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\nimport styles from './sn-lane.scss';\nimport '../sn-card-wrapper/sn-card-wrapper';\nimport If from '../shared/if';\nimport get from 'lodash/get';\nimport { getStyles } from '../../shared/utils';\nimport customScroll from '../../behaviors/custom-scrollbar/custom-scroll';\nimport cardDragBehavior from '../../behaviors/sortable/card-sort';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport { REGISTER_WRAPPER_EVENT } from '../../constants/actions';\n\nconst view = ({ properties }, { dispatch }) => {\n\tconst {\n\t\tid,\n\t\tlane,\n\t\tcards,\n\t\ttagLaneFooter,\n\t\tglobalCardConfig,\n\t\tcardConfigOverride,\n\t\tlaneIndex, // for a11y\n\t\tlanesCount, // for a11y,\n\t\tswimlane,\n\t} = properties;\n\n\treturn (\n\t\t// TODO: Refactor this view\n\t\t<div className=\"sn-lane\" style={getStyles(lane, 'sn-lane')}>\n\t\t\t<div\n\t\t\t\tclassName=\"lane-body\"\n\t\t\t\tstyle={getStyles(lane, 'lane-body')}\n\t\t\t\trole=\"row\"\n\t\t\t\t// aria-owns={swimlane ? `sl_header_${swimlane.id}` : ``}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\taria-label={t(\n\t\t\t\t\t\t`Cards belonging to lane: ${lane.title}${\n\t\t\t\t\t\t\tswimlane ? `, swimlane: ${swimlane.title}` : ''\n\t\t\t\t\t\t}`\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\trole={cards.length ? 'list' : ''}\n\t\t\t\t\t\tclassName=\"list-elem\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<If test={cards && cards.length}>\n\t\t\t\t\t\t\t{cards.map((card, cardIndex) => (\n\t\t\t\t\t\t\t\t<sn-card-wrapper\n\t\t\t\t\t\t\t\t\tid={card.id}\n\t\t\t\t\t\t\t\t\tkey={card.id}\n\t\t\t\t\t\t\t\t\trole=\"listitem\"\n\t\t\t\t\t\t\t\t\tdraggable={get(\n\t\t\t\t\t\t\t\t\t\tcardConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${card.id}.draggable`,\n\t\t\t\t\t\t\t\t\t\tget(globalCardConfig, 'draggable')\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tdrag-placeholder-tag={get(\n\t\t\t\t\t\t\t\t\t\tcardConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${card.id}.drag_placeholder_tag`,\n\t\t\t\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\t\t\t\tglobalCardConfig,\n\t\t\t\t\t\t\t\t\t\t\t'drag_placeholder_tag'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tdrop-placeholder-tag={get(\n\t\t\t\t\t\t\t\t\t\tcardConfigOverride,\n\t\t\t\t\t\t\t\t\t\t`${card.id}.drop_placeholder_tag`,\n\t\t\t\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\t\t\t\tglobalCardConfig,\n\t\t\t\t\t\t\t\t\t\t\t'drop_placeholder_tag'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\taria-label={t(\n\t\t\t\t\t\t\t\t\t\t`Card ${cardIndex + 1} out of ${\n\t\t\t\t\t\t\t\t\t\t\tcards.length\n\t\t\t\t\t\t\t\t\t\t}. ${card.title}. In lane: ${\n\t\t\t\t\t\t\t\t\t\t\tlane.title\n\t\t\t\t\t\t\t\t\t\t}${\n\t\t\t\t\t\t\t\t\t\t\tswimlane\n\t\t\t\t\t\t\t\t\t\t\t\t? `, In swimlane: ${swimlane.title}`\n\t\t\t\t\t\t\t\t\t\t\t\t: ``\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\thook-insert={(e) => {\n\t\t\t\t\t\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\t\t\t\t\t\tname: 'sn-card-wrapper',\n\t\t\t\t\t\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<If\n\t\t\t\t\t\t\t\t\t\ttest={get(\n\t\t\t\t\t\t\t\t\t\t\tcardConfigOverride,\n\t\t\t\t\t\t\t\t\t\t\t`${card.id}.tag`,\n\t\t\t\t\t\t\t\t\t\t\tget(globalCardConfig, 'tag')\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{((card) => {\n\t\t\t\t\t\t\t\t\t\t\tconst cardComp = {\n\t\t\t\t\t\t\t\t\t\t\t\ttag: get(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardConfigOverride,\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${card.id}.tag`,\n\t\t\t\t\t\t\t\t\t\t\t\t\tget(globalCardConfig, 'tag')\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\tcard = {\n\t\t\t\t\t\t\t\t\t\t\t\t...card,\n\t\t\t\t\t\t\t\t\t\t\t\torderPerLaneInSwimlane:\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardIndex + 1,\n\t\t\t\t\t\t\t\t\t\t\t\tcountPerLaneInSwimlane:\n\t\t\t\t\t\t\t\t\t\t\t\t\tcards.length,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t// dot required to resolve tag name\n\t\t\t\t\t\t\t\t\t\t\t\t<cardComp.tag\n\t\t\t\t\t\t\t\t\t\t\t\t\tslot={card.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={card}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...card}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})(card)}\n\t\t\t\t\t\t\t\t\t</If>\n\t\t\t\t\t\t\t\t</sn-card-wrapper>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</If>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"lane-footer-container\"\n\t\t\t\trole=\"row\"\n\t\t\t\tid={`lane_footer_${id}`}\n\t\t\t\taria-label={t(\n\t\t\t\t\t`Lane Footer, ${\n\t\t\t\t\t\tlaneIndex + 1\n\t\t\t\t\t} out of ${lanesCount}, In lane: ${lane.title}${\n\t\t\t\t\t\tswimlane ? `, In swimlane: ${swimlane.title}` : ``\n\t\t\t\t\t}`\n\t\t\t\t)}\n\t\t\t\t// aria-owns={swimlane ? `sl_header_${swimlane.id}` : ``}\n\t\t\t\tstyle={getStyles(lane, 'lane-footer-container')}\n\t\t\t\thook-insert={(e) => {\n\t\t\t\t\tdispatch(REGISTER_WRAPPER_EVENT, {\n\t\t\t\t\t\tname: 'lane-footer-container',\n\t\t\t\t\t\telement: e.elm,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<If test={tagLaneFooter}>\n\t\t\t\t\t{/* dot required for tag to be resolved */}\n\t\t\t\t\t<properties.tagLaneFooter\n\t\t\t\t\t\tdata={lane}\n\t\t\t\t\t\tswimlane={swimlane}\n\t\t\t\t\t\t{...lane}\n\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t/>\n\t\t\t\t</If>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default createCustomElement('sn-lane', {\n\tview,\n\tproperties: {\n\t\tid: { default: '', reflect: true },\n\t\tlane: { default: {} },\n\t\tswimlaneId: { default: '' },\n\t\tcards: { default: [] },\n\t\ttagLaneHeader: { default: '' },\n\t\ttagLaneFooter: { default: '' },\n\t\ttagDragPlaceholder: { default: '' },\n\t\ttagDropPlaceholder: { default: '' },\n\t\tdraggable: { default: true },\n\t\tglobalCardConfig: { default: {} },\n\t\tcardConfigOverride: { default: {} },\n\t\tlaneIndex: { default: '' },\n\t\tlanesCount: { default: '' },\n\t\tcustomScrollOptions: { default: {} },\n\t\tswimlane: { default: null },\n\t},\n\tbehaviors: [\n\t\tcardDragBehavior,\n\t\t{\n\t\t\tbehavior: customScroll,\n\t\t\toptions: {\n\t\t\t\tscrollableEle: '.sn-lane',\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tbehavior: rtlBehavior,\n\t\t},\n\t],\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./sn-lane.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!simplebar/dist/simplebar.css\"), \"\");\n\n// module\nexports.push([module.id, \".simplebar-mask{z-index:auto}:host{--nvb-lane-focused:0}.sn-lane:focus-within,.sn-lane:hover{--nvb-lane-focused:1}.sn-lane .lane-body{display:flex;flex-direction:column}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[data-simplebar] {\\n  position: relative;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n  justify-content: flex-start;\\n  align-content: flex-start;\\n  align-items: flex-start;\\n}\\n\\n.simplebar-wrapper {\\n  overflow: hidden;\\n  width: inherit;\\n  height: inherit;\\n  max-width: inherit;\\n  max-height: inherit;\\n}\\n\\n.simplebar-mask {\\n  direction: inherit;\\n  position: absolute;\\n  overflow: hidden;\\n  padding: 0;\\n  margin: 0;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  right: 0;\\n  width: auto !important;\\n  height: auto !important;\\n  z-index: 0;\\n}\\n\\n.simplebar-offset {\\n  direction: inherit !important;\\n  box-sizing: inherit !important;\\n  resize: none !important;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  padding: 0;\\n  margin: 0;\\n  -webkit-overflow-scrolling: touch;\\n}\\n\\n.simplebar-content-wrapper {\\n  direction: inherit;\\n  box-sizing: border-box !important;\\n  position: relative;\\n  display: block;\\n  height: 100%; /* Required for horizontal native scrollbar to not appear if parent is taller than natural height */\\n  width: auto;\\n  visibility: visible;\\n  max-width: 100%; /* Not required for horizontal scroll to trigger */\\n  max-height: 100%; /* Needed for vertical scroll to trigger */\\n  scrollbar-width: none;\\n}\\n\\n.simplebar-content-wrapper::-webkit-scrollbar,\\n.simplebar-hide-scrollbar::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.simplebar-content:before,\\n.simplebar-content:after {\\n  content: ' ';\\n  display: table;\\n}\\n\\n.simplebar-placeholder {\\n  max-height: 100%;\\n  max-width: 100%;\\n  width: 100%;\\n  pointer-events: none;\\n}\\n\\n.simplebar-height-auto-observer-wrapper {\\n  box-sizing: inherit !important;\\n  height: 100%;\\n  width: 100%;\\n  max-width: 1px;\\n  position: relative;\\n  float: left;\\n  max-height: 1px;\\n  overflow: hidden;\\n  z-index: -1;\\n  padding: 0;\\n  margin: 0;\\n  pointer-events: none;\\n  flex-grow: inherit;\\n  flex-shrink: 0;\\n  flex-basis: 0;\\n}\\n\\n.simplebar-height-auto-observer {\\n  box-sizing: inherit;\\n  display: block;\\n  opacity: 0;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 1000%;\\n  width: 1000%;\\n  min-height: 1px;\\n  min-width: 1px;\\n  overflow: hidden;\\n  pointer-events: none;\\n  z-index: -1;\\n}\\n\\n.simplebar-track {\\n  z-index: 1;\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  pointer-events: none;\\n  overflow: hidden;\\n}\\n\\n[data-simplebar].simplebar-dragging .simplebar-content {\\n  pointer-events: none;\\n  user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n[data-simplebar].simplebar-dragging .simplebar-track {\\n  pointer-events: all;\\n}\\n\\n.simplebar-scrollbar {\\n  position: absolute;\\n  right: 2px;\\n  width: 7px;\\n  min-height: 10px;\\n}\\n\\n.simplebar-scrollbar:before {\\n  position: absolute;\\n  content: '';\\n  background: black;\\n  border-radius: 7px;\\n  left: 0;\\n  right: 0;\\n  opacity: 0;\\n  transition: opacity 0.2s linear;\\n}\\n\\n.simplebar-scrollbar.simplebar-visible:before {\\n  /* When hovered, remove all transitions from drag handle */\\n  opacity: 0.5;\\n  transition: opacity 0s linear;\\n}\\n\\n.simplebar-track.simplebar-vertical {\\n  top: 0;\\n  width: 11px;\\n}\\n\\n.simplebar-track.simplebar-vertical .simplebar-scrollbar:before {\\n  top: 2px;\\n  bottom: 2px;\\n}\\n\\n.simplebar-track.simplebar-horizontal {\\n  left: 0;\\n  height: 11px;\\n}\\n\\n.simplebar-track.simplebar-horizontal .simplebar-scrollbar:before {\\n  height: 100%;\\n  left: 2px;\\n  right: 2px;\\n}\\n\\n.simplebar-track.simplebar-horizontal .simplebar-scrollbar {\\n  right: auto;\\n  left: 0;\\n  top: 2px;\\n  height: 7px;\\n  min-height: 0;\\n  min-width: 10px;\\n  width: auto;\\n}\\n\\n/* Rtl support */\\n[data-simplebar-direction='rtl'] .simplebar-track.simplebar-vertical {\\n  right: auto;\\n  left: 0;\\n}\\n\\n.hs-dummy-scrollbar-size {\\n  direction: rtl;\\n  position: fixed;\\n  opacity: 0;\\n  visibility: hidden;\\n  height: 500px;\\n  width: 500px;\\n  overflow-y: hidden;\\n  overflow-x: scroll;\\n}\\n\\n.simplebar-hide-scrollbar {\\n  position: fixed;\\n  left: 0;\\n  visibility: hidden;\\n  overflow-y: scroll;\\n  scrollbar-width: none;\\n}\\n\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport styles from './sn-card-wrapper.scss';\n\nexport default createCustomElement('sn-card-wrapper', {\n\tview(state) {\n\t\tconst {\n\t\t\tproperties: { id, draggable },\n\t\t} = state;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`card-wrapper ${draggable ? 'draggable' : ''}`}\n\t\t\t\tid={id}\n\t\t\t>\n\t\t\t\t<slot name={id}></slot>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tid: { default: '', reflect: true },\n\t\tdraggable: { default: true },\n\t\tdragPlaceholderTag: { default: '' },\n\t\tdropPlaceholderTag: { default: '' },\n\t},\n\tbehaviors: [],\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./sn-card-wrapper.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card-wrapper{position:relative}.card-wrapper.draggable{cursor:grab}\", \"\"]);\n\n// exports\n","import { querySelectorDeep } from '@devsnc/library-vtb-commons';\nimport SimpleBar from 'simplebar';\nimport { actionTypes } from '@servicenow/ui-core';\nimport get from 'lodash/get';\n\nexport default {\n\tname: 'custom-scroll',\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_DOM_READY]: ({ host, properties, action }) => {\n\t\t\tconst {\n\t\t\t\tcustomScrollOptions: {\n\t\t\t\t\tenableScroll,\n\t\t\t\t\tscrollTrackCSS,\n\t\t\t\t\tscrollBarCSS,\n\t\t\t\t},\n\t\t\t} = properties;\n\t\t\tconst { scrollableEle, hideElement } = action.payload.options;\n\n\t\t\tif (enableScroll) {\n\t\t\t\tlet container = querySelectorDeep(scrollableEle, host);\n\t\t\t\tlet options = {\n\t\t\t\t\tautoHide: get(\n\t\t\t\t\t\tproperties,\n\t\t\t\t\t\t'customScrollOptions.autoHide',\n\t\t\t\t\t\t'true'\n\t\t\t\t\t),\n\t\t\t\t\ttimeout: get(\n\t\t\t\t\t\tproperties,\n\t\t\t\t\t\t'customScrollOptions.timeout',\n\t\t\t\t\t\t'500'\n\t\t\t\t\t),\n\t\t\t\t\tdirection: host.dir,\n\t\t\t\t};\n\t\t\t\tlet scroll = new SimpleBar(container, options);\n\n\t\t\t\t// RTL support\n\t\t\t\tcontainer.dataset.simplebarDirection = host.dir;\n\n\t\t\t\tlet scrollTrackEl = scroll.axis.y.track.el;\n\t\t\t\tscrollTrackEl.style.pointerEvents = 'auto';\n\t\t\t\tif (scrollTrackCSS) {\n\t\t\t\t\tfor (let [prop, val] of Object.entries(scrollTrackCSS)) {\n\t\t\t\t\t\tscrollTrackEl.style.cssText += `${prop}: ${val};`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet scrollBarEl = scroll.axis.y.scrollbar.el;\n\t\t\t\tif (scrollBarCSS) {\n\t\t\t\t\tfor (let [prop, val] of Object.entries(scrollBarCSS)) {\n\t\t\t\t\t\tscrollBarEl.style.cssText += `${prop}: ${val};`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n};\n","module.exports = __TECTONIC__simplebar_5_0_7;","import { nowSortable } from '@devsnc/library-vtb-commons';\nimport { isEqual } from 'lodash';\n\nconsole.log(nowSortable);\n\nexport default {\n\tbehavior: nowSortable,\n\toptions: {\n\t\titems: 'sn-card-wrapper',\n\t\tdropzone: '.lane-body .list-elem',\n\t\textendedDropzone: 'sn-lane',\n\t\tactionPrefix: 'CARD_',\n\t\tlistOrder: 'vertical',\n\t\tcloneAppendTo: '.board-container',\n\t\txScrollParent: '.sn-board',\n\t\tyScrollParent: '.sn-lane',\n\t\tconnectedLists: 'sn-lane',\n\t\tkeyboardSupport: false,\n\t\tcursorChecker: () => '',\n\t\tshouldUpdate: (newProps, oldProps) => {\n\t\t\t// Currently, since there is no store for cards and lanes, the global cards array is filtered repeatedly and\n\t\t\t// the result (a new filtered array) is passed to `sn-lane` component. This causes the `sn-lane` to re-render\n\t\t\t// many times, and that re-initializes the Sortable behaviour on it. Temporarily, to prevent this, only\n\t\t\t// update the Sortable behaviour when some props have really changed (by value), and not just by reference.\n\t\t\treturn !isEqual(newProps, oldProps);\n\t\t},\n\t\titemsFilter: (item) => item.getProperties().draggable,\n\t\tcondition: (host) => {\n\t\t\t// Don't add sortable behavior if cloneMode is true\n\t\t\treturn !host.cloneMode;\n\t\t},\n\t\tdynamicConfig: (el) => {\n\t\t\tconst propsBasedConfig = {}; // This config object will be merged with the other static config above\n\t\t\tconst props = el.getProperties();\n\t\t\tconst {\n\t\t\t\tglobalCardConfig: {\n\t\t\t\t\tdrag_placeholder_tag,\n\t\t\t\t\tdrop_placeholder_tag,\n\t\t\t\t},\n\t\t\t\tswimlaneId,\n\t\t\t\tcustomScrollOptions,\n\t\t\t} = props;\n\t\t\tpropsBasedConfig.tagSourcePlaceholder = drag_placeholder_tag;\n\t\t\tpropsBasedConfig.tagDestPlaceholder = drop_placeholder_tag;\n\t\t\tif (swimlaneId) {\n\t\t\t\tpropsBasedConfig.yScrollParent = '.sn-board';\n\t\t\t}\n\t\t\tif (customScrollOptions && customScrollOptions.enableScroll)\n\t\t\t\tpropsBasedConfig.yScrollParent =\n\t\t\t\t\t'.sn-lane .simplebar-content-wrapper';\n\n\t\t\treturn propsBasedConfig;\n\t\t},\n\t},\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rtl = require('./rtl.js');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function () {\n    return _interopRequireDefault(_rtl).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst BEHAVIOR_NAME = 'rtl';\n\n/**\n * This behavior helps style Now Design System components in right-to-left (RTL) layouts.\n * It sets the component host's `dir` attribute based on the `document.dir` of\n * its parent application. If `document.dir` is not explicitly defined, it will\n * set the component host's `dir` attribute to `'ltr'` by default.\n *\n * After installation import the behavior at the top of your component JS file\n * and register it in your component behaviors list:\n *\n * ```js\n * import rtlBehavior from '@servicenow/behavior-rtl';\n *\n * createCustomElement('sn-example', {\n *   // ...\n *   behaviors: [{behavior: rtlBehavior}]\n * });\n * ```\n *\n * For more information about styling RTL components, see the\n * [Design System internationalization guide](https://emotive.servicenow.com/develop/resources/i18n).\n *\n * @seismicBehavior rtlBehavior\n * @summary Sets the component host's `dir` attribute to support right-to-left layouts\n */\nexports.default = {\n  name: BEHAVIOR_NAME,\n  properties: {\n    dir: {\n      get default() {\n        return document.dir || 'ltr';\n      },\n      reflect: true,\n      schema: { type: 'string' }\n    }\n  }\n};","import { createCustomElement } from '@servicenow/ui-core';\nimport styles from './sn-lane-header.scss';\nimport If from '../shared/if';\nimport { t } from 'sn-translate';\nimport { getStyles } from '../../shared/utils';\n\nexport default createCustomElement('sn-lane-header', {\n\tview({ properties }, { dispatch }) {\n\t\tconst {\n\t\t\tid,\n\t\t\tcards,\n\t\t\tdraggable,\n\t\t\tlane,\n\t\t\ttagLaneHeader,\n\t\t\tlaneIndex, // for a11y\n\t\t\tlanesCount,\n\t\t} = properties;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`sn-lane-header ${draggable ? 'draggable' : ''}`}\n\t\t\t\taria-owns={`lane_header_${id} ${cards\n\t\t\t\t\t.map((c) => c.id)\n\t\t\t\t\t.join(' ')} lane_footer_${id}`}\n\t\t\t\tdraggable={draggable}\n\t\t\t\taria-label={t(\n\t\t\t\t\t'Lane Header, {0} out of {1}: {2}',\n\t\t\t\t\tlaneIndex + 1,\n\t\t\t\t\tlanesCount,\n\t\t\t\t\tlane.title\n\t\t\t\t)}\n\t\t\t\trole=\"columnheader\"\n\t\t\t\tstyle={getStyles(lane, 'sn-lane-header')}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"lane-header-container\"\n\t\t\t\t\tid={`lane_header_${id}`}\n\t\t\t\t\tdraggable={draggable}\n\t\t\t\t>\n\t\t\t\t\t<If test={tagLaneHeader}>\n\t\t\t\t\t\t{/*dot required to resolve tag name*/}\n\t\t\t\t\t\t<properties.tagLaneHeader data={lane} {...lane} />\n\t\t\t\t\t</If>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tid: { default: '', reflect: true },\n\t\tlane: { default: {} },\n\t\tcards: { default: [] },\n\t\ttagLaneHeader: { default: '' },\n\t\tdraggable: { default: true },\n\t\tlaneIndex: { default: '' },\n\t\tlanesCount: { default: '' },\n\t\tswimlanes: { default: '' },\n\t\tcustomScrollOptions: { default: '' },\n\t},\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./sn-lane-header.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sn-lane-header{display:flex}.sn-lane-header.draggable{cursor:grab}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./now-visual-board.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".board-container{position:relative;display:flex;width:100%;height:100%}.board-container .sn-board{position:relative;overflow:auto;width:100%}.board-container .sn-board .main-container{position:relative;height:100%;width:100%}.board-container .sn-board .lanes-header{display:flex;flex:1 1 auto;position:sticky;position:-webkit-sticky;top:0;z-index:20}.board-container .sn-board .lanes-header .lanes-header-container{display:flex}.board-container .sn-board .lanes-container{display:flex;height:100%}.board-container .sn-board .swimlanes-container{position:relative}.board-container .sn-board .swimlanes-container .swimlanes{position:absolute;top:0}\", \"\"]);\n\n// exports\n","import {\n\tACTION_PREFIX,\n\tCARD_MOVED,\n\tLANE_MOVED,\n\tSWIMLANE_MOVED,\n\tCARD_SORT_END,\n\tLANE_SORT_END,\n\tSWIMLANE_SORT_END,\n} from '../constants/actions';\nimport { closestDeep } from '@devsnc/library-vtb-commons';\nimport { removeVLanePlaceholders } from '../components/sn-lane/dragHelper';\nimport { expandSwimlanes } from '../behaviors/swimlane-collapse/collapse';\n\n// Listen to events dispatch from interactjs based sortable library, and dispatch board-specific events\nexport default {\n\t[CARD_SORT_END]: ({ action, dispatch }) => {\n\t\tconst {\n\t\t\telement,\n\t\t\tsourceParent,\n\t\t\tsourceIndex,\n\t\t\tdestinationParent,\n\t\t\tdestinationIndex,\n\t\t} = action.payload;\n\n\t\tconst toLaneEl = closestDeep(destinationParent, 'sn-lane');\n\t\tconst fromLaneEl = closestDeep(sourceParent, 'sn-lane');\n\n\t\t//TODO : Change lane id to plain sys_id, instead of lane_sysid and remove below\n\t\tconst toLaneId = toLaneEl ? toLaneEl.id.split('_')[1] : null;\n\t\tconst fromLaneId = fromLaneEl ? fromLaneEl.id.split('_')[1] : null;\n\n\t\tconst cardMovePayload = {\n\t\t\tid: element.id,\n\t\t\tfromLane: fromLaneId,\n\t\t\tfromPosition: sourceIndex,\n\t\t\ttoLane: toLaneId,\n\t\t\ttoPosition: destinationIndex,\n\t\t\tfromSwimlane: fromLaneEl.swimlaneId,\n\t\t\ttoSwimlane: toLaneEl.swimlaneId,\n\t\t};\n\n\t\tdispatch(ACTION_PREFIX + CARD_MOVED, cardMovePayload);\n\t},\n\t[LANE_SORT_END]: ({ action, dispatch }) => {\n\t\tremoveVLanePlaceholders();\n\t\tconst { element, sourceIndex, destinationIndex } = action.payload;\n\t\tdispatch(ACTION_PREFIX + LANE_MOVED, {\n\t\t\tid: element.id,\n\t\t\tfromPosition: sourceIndex,\n\t\t\ttoPosition: destinationIndex,\n\t\t});\n\t},\n\t[SWIMLANE_SORT_END]: ({ action, dispatch }) => {\n\t\tconst { element, sourceIndex, sourceParent, destinationIndex } = action.payload;\n\t\texpandSwimlanes(sourceParent);\n\t\tdispatch(ACTION_PREFIX + SWIMLANE_MOVED, {\n\t\t\tid: element.id,\n\t\t\tfromPosition: sourceIndex,\n\t\t\ttoPosition: destinationIndex,\n\t\t});\n\t},\n};\n","import {\n\tOPEN_CARD_MOVE_MODAL,\n\tOPEN_LANE_MOVE_MODAL,\n\tOPEN_SWIMLANE_MOVE_MODAL,\n} from '../constants/actions';\n\nexport default {\n\t[OPEN_CARD_MOVE_MODAL]: ({ action: { payload }, updateState }) => {\n\t\tupdateState({\n\t\t\ta11yOptions: {\n\t\t\t\tcardId: payload.id,\n\t\t\t\taction: 'CARD_MOVE',\n\t\t\t},\n\t\t});\n\t},\n\t[OPEN_LANE_MOVE_MODAL]: ({ action: { payload }, updateState }) => {\n\t\tupdateState({\n\t\t\ta11yOptions: {\n\t\t\t\tlaneId: payload.id,\n\t\t\t\taction: 'LANE_MOVE',\n\t\t\t},\n\t\t});\n\t},\n\t[OPEN_SWIMLANE_MOVE_MODAL]: ({ action: { payload }, updateState }) => {\n\t\tupdateState({\n\t\t\ta11yOptions: {\n\t\t\t\tlaneId: payload.id,\n\t\t\t\taction: 'SWIM_LANE_MOVE',\n\t\t\t},\n\t\t});\n\t},\n};\n","import { actionTypes } from '@servicenow/ui-core';\nimport { getComponentsByTagNames } from '@devsnc/library-uxf';\nimport { getTagsToImport } from '../shared/utils';\nimport without from 'lodash/without';\nimport { TAG_PROPERTIES } from '../constants/constants';\n\nexport default {\n\t['IMPORT_UXF_TAGS']: ({ updateState, action }) => {\n\t\tconst {\n\t\t\tpayload: { tags },\n\t\t} = action;\n\t\tupdateState(({ state }) => {\n\t\t\tconst importedTags = state.importedTags || [];\n\t\t\tconst newTags = without(tags, ...importedTags);\n\t\t\tif (newTags.length) {\n\t\t\t\t// We don't have to update anything in success case, as the tags are already pushed into importedtags\n\t\t\t\tgetComponentsByTagNames(newTags).catch((err) => {\n\t\t\t\t\t// reset to inital importedTags before call\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: 'importedTags',\n\t\t\t\t\t\tvalue: importedTags,\n\t\t\t\t\t\toperation: 'set',\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Component fetching from UXF registry failed',\n\t\t\t\t\t\terr\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tpath: 'importedTags',\n\t\t\t\tvalue: [...importedTags, ...newTags],\n\t\t\t\toperation: 'set',\n\t\t\t};\n\t\t});\n\t},\n\t[actionTypes.COMPONENT_BOOTSTRAPPED]: ({ properties, dispatch }) => {\n\t\tconst { loadTagsFromUxf } = properties;\n\t\tif (loadTagsFromUxf) {\n\t\t\tconst tags = getTagsToImport(properties);\n\t\t\tdispatch('IMPORT_UXF_TAGS', { tags });\n\t\t}\n\t},\n\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: ({\n\t\taction,\n\t\tproperties,\n\t\tdispatch,\n\t}) => {\n\t\tconst { loadTagsFromUxf } = properties;\n\t\tconst {\n\t\t\tpayload: { name: propChanged },\n\t\t} = action;\n\t\tif (loadTagsFromUxf && TAG_PROPERTIES.includes(propChanged)) {\n\t\t\tconst tags = getTagsToImport(properties);\n\t\t\tdispatch('IMPORT_UXF_TAGS', { tags });\n\t\t}\n\t},\n};\n","module.exports = __TECTONIC__$devsnc_library_uxf;","module.exports = __TECTONIC__lodash_4_17_20[\"without\"];","import { visualNavigation } from '@devsnc/library-vtb-commons';\nimport {\n\tBOARD_ARROW_NAVIGABLE_ELEMENTS,\n\tgetNavigableElementsByDirection,\n} from './visual-nav-override';\nimport get from 'lodash/get';\n\nexport const boardNavigationBehavior = {\n\tbehavior: visualNavigation,\n\toptions: {\n\t\tname: 'BoardNav',\n\t\telements: BOARD_ARROW_NAVIGABLE_ELEMENTS,\n\t\t// To Do : Need to handle corner scenarios in visual-nav-overrides.js\n\t\ttargetElements: getNavigableElementsByDirection(\n\t\t\tBOARD_ARROW_NAVIGABLE_ELEMENTS\n\t\t),\n\t\tcanTabToElements: false,\n\t\tinitDelay: 100,\n\t\tdynamicConfig: (coeffects) => {\n\t\t\t// This will be merged with the static config\n\t\t\tconst config = {};\n\t\t\tconst { properties } = coeffects;\n\t\t\tconst elements = get(properties, 'arrowNavigableElements');\n\t\t\tconst makeElementsTabbable = get(\n\t\t\t\tproperties,\n\t\t\t\t'makeElementsTabbable',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\t// Consumers of board component can choose if they want the arrow nav behavior\n\t\t\tconst enable = get(properties, 'useArrowNavigation');\n\t\t\tif (!enable) config.disable = true;\n\n\t\t\tif (elements) {\n\t\t\t\t// elements to focus on might change based on the props (VTB vs Playbook)\n\t\t\t\tconfig.elements = elements;\n\t\t\t\tconfig.targetElements = getNavigableElementsByDirection(\n\t\t\t\t\telements\n\t\t\t\t);\n\t\t\t\tconfig.canTabToElements = makeElementsTabbable;\n\t\t\t}\n\n\t\t\treturn config;\n\t\t},\n\t},\n};\n","import {\n\tclosestDeep,\n\tquerySelectorAllDeep,\n\tquerySelectorDeep,\n\tDIRECTIONS\n} from '@devsnc/library-vtb-commons';\n\nexport const BOARD_ARROW_NAVIGABLE_ELEMENTS =\n\t'sn-card-wrapper,.sn-lane-header,.lane-footer-container,sn-swimlane-header';\n// Note: Using SN_CARD_WRAPPER instead of 'div.card-wrapper' unlike header and footer because we previousSibling\n// and nextSibling won't work, since .card-wrapper is the only element in its parent\n\n/**\n * Use of lastFocusedLaneItemId variable is to store the last focused lane element's ID, more specifically the last\n * focused lane header or the ID of the lane of last focused card or lane footer. The lastFocusedLaneItemId is used to\n * predict the correct lane/lane-header to which the focus should go when navigating from a swimlane header.\n * For instance, from lane-header with index 3 if we press Down once, focus moves to the first swimlane header and from\n * here if we press Down again, the focus should move to the lane with index 3 in first swimlane and vice versa.\n * This is where lastFocusedLaneItemId comes to use, to match the lane id.\n */\nlet lastFocusedLaneItemId;\n\nconst LANE_FOOTER_CONTAINER = '.lane-footer-container';\nconst LANE_HEADER = '.lane-header';\nconst SN_SWIMLANE_HEADER = 'sn-swimlane-header';\nconst SN_LANE = 'sn-lane';\nconst SN_LANE_HEADER = 'sn-lane-header';\nconst SN_CARD_WRAPPER = 'sn-card-wrapper';\nconst SN_SWIMLANE = 'sn-swimlane';\nconst NOW_VISUAL_BOARD = 'now-visual-board';\nconst FOOTER_CONTAINER = '.footer-container';\n\n/**\n * This is to customize the behavior of 'visual-navigation' module to suit the board component's needs.\n * Few customizations we need are:\n * 1. When pressing Down on a card wrapper, the next card should get focused, even if the lane footer is visually closer\n * 2. When pressing Up on a card wrapper, the previous card should get focused, even if the lane header is visually closer\n * 3. When pressing Right/Left, the immediately next and previous lane's elements get more priority than lanes that can\n * be farther away\n */\n// TODO: Clean up this garbage code\nexport const getNavigableElementsByDirection = (\n\telementsSelector = BOARD_ARROW_NAVIGABLE_ELEMENTS\n) => {\n\treturn (activeElement, direction) => {\n\t\tconst board = closestDeep(activeElement, NOW_VISUAL_BOARD);\n\t\tconst swimlaneHeaders = querySelectorAllDeep(\n\t\t\tSN_SWIMLANE_HEADER,\n\t\t\tboard,\n\t\t\tfalse\n\t\t);\n\n\t\t// If swimlanes are present, its a 2D board.\n\t\tif (swimlaneHeaders.length) {\n\t\t\treturn getNavigableElementsByDirectionIn2DBoard(\n\t\t\t\tactiveElement,\n\t\t\t\tdirection,\n\t\t\t\tswimlaneHeaders,\n\t\t\t\telementsSelector,\n\t\t\t\tboard\n\t\t\t);\n\t\t} else {\n\t\t\treturn getNavigableElementsByDirectionIn1DBoard(\n\t\t\t\tactiveElement,\n\t\t\t\tdirection,\n\t\t\t\telementsSelector,\n\t\t\t\tboard\n\t\t\t);\n\t\t}\n\t};\n};\n\nconst getSwimlaneHeader = (activeElement, swimlaneHeaders) => {\n\tif (closestDeep(activeElement, SN_LANE)) {\n\t\tconst swimlane = closestDeep(activeElement, SN_SWIMLANE);\n\t\treturn querySelectorDeep(SN_SWIMLANE_HEADER, swimlane);\n\t} else if (closestDeep(activeElement, SN_SWIMLANE_HEADER)) {\n\t\treturn closestDeep(activeElement, SN_SWIMLANE_HEADER);\n\t} else if (closestDeep(activeElement, SN_LANE_HEADER)) {\n\t\treturn swimlaneHeaders[0];\n\t}\n};\n\nconst getNextSwimlaneHeader = (currentSwimlaneHeader) => {\n\tconst swimlane = closestDeep(currentSwimlaneHeader, SN_SWIMLANE);\n\tif (swimlane.nextSibling) {\n\t\treturn querySelectorDeep(SN_SWIMLANE_HEADER, swimlane.nextSibling);\n\t}\n\treturn null;\n};\n\nconst getPreviousSwimlaneHeader = (currentSwimlaneHeader) => {\n\tconst swimlane = closestDeep(currentSwimlaneHeader, SN_SWIMLANE);\n\tif (swimlane.previousSibling) {\n\t\treturn querySelectorDeep(SN_SWIMLANE_HEADER, swimlane.previousSibling);\n\t}\n\treturn null;\n};\n\nconst setLastFocusedLaneItemId = (activeElement) => {\n\tif (closestDeep(activeElement, SN_LANE_HEADER)) {\n\t\tconst currentLaneHeader = closestDeep(activeElement, SN_LANE_HEADER);\n\t\tlastFocusedLaneItemId = currentLaneHeader.id;\n\t} else if (closestDeep(activeElement, SN_LANE)) {\n\t\tconst currentLane = closestDeep(activeElement, SN_LANE);\n\t\tlastFocusedLaneItemId = currentLane.lane.id;\n\t}\n};\n\nconst swimlaneHeaderArrowDown = (\n\tfocusableLane,\n\tnextSwimlaneHeader,\n\telementsSelector\n) => {\n\tconst focusableElementsinLane = querySelectorAllDeep(\n\t\telementsSelector,\n\t\tfocusableLane,\n\t\tfalse\n\t);\n\t// If lane has navigable elements then focus on last elem in lane else focus on the nextSwimlaneHeader.\n\tif (focusableElementsinLane.length) {\n\t\treturn [focusableElementsinLane[0]];\n\t} else {\n\t\treturn querySelectorAllDeep(\n\t\t\telementsSelector,\n\t\t\tnextSwimlaneHeader,\n\t\t\tfalse\n\t\t);\n\t}\n};\n\nconst swimlaneHeaderArrowUp = (\n\tfocusableLane,\n\tpreviousSwimlaneHeaderSibling,\n\telementsSelector\n) => {\n\tconst focusableElementsInLane = querySelectorAllDeep(\n\t\telementsSelector,\n\t\tfocusableLane,\n\t\tfalse\n\t);\n\t// If lane has navigable elements then focus on last elem in lane else focus on the previousSwimlaneHeader\n\tif (focusableElementsInLane.length) {\n\t\treturn [focusableElementsInLane[focusableElementsInLane.length - 1]];\n\t} else {\n\t\treturn querySelectorAllDeep(\n\t\t\telementsSelector,\n\t\t\tpreviousSwimlaneHeaderSibling,\n\t\t\tfalse\n\t\t);\n\t}\n};\n\nconst horizontalNavIn2DBoard = (activeElement, elementsSelector, direction) => {\n\tif (closestDeep(activeElement, SN_LANE)) {\n\t\tconst currentLane = closestDeep(activeElement, SN_LANE);\n\t\tconst nextFocusableLane =\n\t\t\tdirection === DIRECTIONS.RIGHT\n\t\t\t\t? currentLane.nextSibling\n\t\t\t\t: currentLane.previousSibling;\n\t\tif (nextFocusableLane)\n\t\t\treturn querySelectorAllDeep(\n\t\t\t\telementsSelector,\n\t\t\t\tnextFocusableLane,\n\t\t\t\tfalse\n\t\t\t);\n\n\t\treturn [];\n\t} else if (closestDeep(activeElement, SN_LANE_HEADER)) {\n\t\tconst currentLaneHeader = closestDeep(activeElement, SN_LANE_HEADER);\n\t\tconst nextFocusableLaneHeader =\n\t\t\tdirection === DIRECTIONS.RIGHT\n\t\t\t\t? currentLaneHeader.nextSibling\n\t\t\t\t: currentLaneHeader.previousSibling;\n\t\tif (nextFocusableLaneHeader)\n\t\t\treturn querySelectorAllDeep(\n\t\t\t\telementsSelector,\n\t\t\t\tnextFocusableLaneHeader,\n\t\t\t\tfalse\n\t\t\t);\n\n\t\treturn [];\n\t} else if (closestDeep(activeElement, SN_SWIMLANE_HEADER)) {\n\t\treturn [];\n\t}\n};\n\nconst focusLaneFooter = (lane, elementsSelector) => {\n\tconst footerContainer = querySelectorDeep(LANE_FOOTER_CONTAINER, lane);\n\tif (footerContainer) {\n\t\tconst elToFocus = querySelectorDeep(elementsSelector, footerContainer);\n\t\tif (elToFocus )return [elToFocus];\n\t}\n\treturn [];\n};\n\n/**\n * This is to customize the behavior of 'visual-navigation' module to suit the 2D board component's needs.\n * Few customizations we need are:\n * 1. When pressing Down on a card wrapper, the next card should get focused, even if the lane footer is visually closer\n * 2. When pressing Up on a card wrapper, the previous card should get focused, even if the lane header is visually closer\n * 3. When pressing Right/Left, the immediately next and previous lane's elements get more priority than lanes that can\n * be farther away\n * 4. When on a lane header, pressing Down button should take you to the first swimlane header.\n * 5. When on a swimlane header, pressing Down arrow should take you to next swimlane header if the current swimlane\n * header is collapsed. If expanded, the focus should be on the first element of the lane with the same lane-id as that\n * of the last focused lane header or last focused lane.\n * 6. Same goes for when UP arrow is pressed on a swimlane header just that the focus goes upward.\n */\nconst getNavigableElementsByDirectionIn2DBoard = (\n\tactiveElement,\n\tdirection,\n\tswimlaneHeaders,\n\telementsSelector,\n\tboard\n) => {\n\tconst laneHeaders = querySelectorAllDeep(SN_LANE_HEADER, board, false);\n\n\tlet swimlaneHeader, laneHeader, lanes, lane;\n\t// Just pre populating the swimlaneHeader for further use.\n\tswimlaneHeader = getSwimlaneHeader(activeElement, swimlaneHeaders);\n\n\tswitch (direction) {\n\t\tcase DIRECTIONS.DOWN:\n\t\t\tif (closestDeep(activeElement, SN_LANE_HEADER)) {\n\t\t\t\t// Next element will certainly be the first swimlaneHeader if the activeElement is a lane header\n\t\t\t\tsetLastFocusedLaneItemId(activeElement);\n\t\t\t\treturn {\n\t\t\t\t\tignoreDirection: true,\n\t\t\t\t\telement: querySelectorDeep(\n\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\tswimlaneHeader\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t} else if (closestDeep(activeElement, SN_SWIMLANE_HEADER)) {\n\t\t\t\tconst nextSwimlaneHeader = getNextSwimlaneHeader(\n\t\t\t\t\tswimlaneHeader\n\t\t\t\t);\n\t\t\t\tif (swimlaneHeader.collapsed) {\n\t\t\t\t\t// If the swimlane is collapsed, focus should go onto the next swimlaneHeader.\n\t\t\t\t\treturn nextSwimlaneHeader\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\t\t\tnextSwimlaneHeader\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: [];\n\t\t\t\t} else {\n\t\t\t\t\tconst swimlane = closestDeep(activeElement, SN_SWIMLANE);\n\t\t\t\t\tlanes = querySelectorAllDeep(SN_LANE, swimlane, false);\n\t\t\t\t\t// If lastFocusedLaneItemId is not null then focus on the lane matching the ID else focus on the\n\t\t\t\t\t// first lane.\n\t\t\t\t\tif (lastFocusedLaneItemId) {\n\t\t\t\t\t\tlane = lanes.find(\n\t\t\t\t\t\t\t(lane) => lane.lane.id === lastFocusedLaneItemId\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn swimlaneHeaderArrowDown(\n\t\t\t\t\t\t\tlane,\n\t\t\t\t\t\t\tnextSwimlaneHeader,\n\t\t\t\t\t\t\telementsSelector\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn swimlaneHeaderArrowDown(\n\t\t\t\t\t\t\tlanes[0],\n\t\t\t\t\t\t\tnextSwimlaneHeader,\n\t\t\t\t\t\t\telementsSelector\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (closestDeep(activeElement, SN_LANE)) {\n\t\t\t\tlane = closestDeep(activeElement, SN_LANE);\n\t\t\t\tif (\n\t\t\t\t\tactiveElement.matches(LANE_FOOTER_CONTAINER) ||\n\t\t\t\t\tclosestDeep(activeElement, LANE_FOOTER_CONTAINER)\n\t\t\t\t) {\n\t\t\t\t\t// Since lane footer is last focusable element in a lane, next element should be either a\n\t\t\t\t\t// swimlaneHeader or a null depending on whether the current swimlane is last in index.\n\t\t\t\t\tsetLastFocusedLaneItemId(activeElement);\n\t\t\t\t\tconst nextSwimlaneHeader = getNextSwimlaneHeader(\n\t\t\t\t\t\tswimlaneHeader\n\t\t\t\t\t);\n\t\t\t\t\treturn nextSwimlaneHeader\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\t\t\tnextSwimlaneHeader\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: [];\n\t\t\t\t} else if (closestDeep(activeElement, SN_CARD_WRAPPER)) {\n\t\t\t\t\t// Return the next card wrapper or the lane footer.\n\t\t\t\t\tconst cardWrapper = closestDeep(\n\t\t\t\t\t\tactiveElement,\n\t\t\t\t\t\tSN_CARD_WRAPPER\n\t\t\t\t\t);\n\t\t\t\t\tconst nextCardWrapper = cardWrapper.nextSibling;\n\t\t\t\t\tif (nextCardWrapper) {\n\t\t\t\t\t\tconst nextCard = querySelectorDeep(\n\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\tnextCardWrapper\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (nextCard) return [nextCard];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// reached the last card probably, now focus on the  footer\n\t\t\t\t\t\tconst footerContainer = querySelectorDeep(\n\t\t\t\t\t\t\tLANE_FOOTER_CONTAINER,\n\t\t\t\t\t\t\tlane\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (footerContainer) {\n\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\t\t\tfooterContainer\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DIRECTIONS.UP:\n\t\t\tif (closestDeep(activeElement, SN_SWIMLANE_HEADER)) {\n\t\t\t\tif (swimlaneHeader === swimlaneHeaders[0]) {\n\t\t\t\t\t// If current swimlane is the first in index, then the element above is certainly a lane header.\n\t\t\t\t\t// If lastFocusedLaneItemId is not null then focus on the laneHeader matching lastFocusedLaneItemId\n\t\t\t\t\t// else focus on first lane header.\n\t\t\t\t\tif (lastFocusedLaneItemId) {\n\t\t\t\t\t\tlaneHeader = laneHeaders.find(\n\t\t\t\t\t\t\t(header) => header.id === lastFocusedLaneItemId\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tquerySelectorDeep(elementsSelector, laneHeader),\n\t\t\t\t\t\t];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tquerySelectorDeep(elementsSelector, laneHeaders[0]),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst previousSwimlaneHeaderSibling = getPreviousSwimlaneHeader(\n\t\t\t\t\t\tswimlaneHeader\n\t\t\t\t\t);\n\t\t\t\t\tif (previousSwimlaneHeaderSibling.collapsed) {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\t\tpreviousSwimlaneHeaderSibling\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst swimlane = closestDeep(\n\t\t\t\t\t\t\tpreviousSwimlaneHeaderSibling,\n\t\t\t\t\t\t\tSN_SWIMLANE\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlanes = querySelectorAllDeep(SN_LANE, swimlane, false);\n\t\t\t\t\t\t// If lastFocusedLaneItemId is not null then focus on the lane matching the ID else focus on the\n\t\t\t\t\t\t// first lane in the previousSwimlane.\n\t\t\t\t\t\tif (lastFocusedLaneItemId) {\n\t\t\t\t\t\t\tlane = lanes.find(\n\t\t\t\t\t\t\t\t(laneEl) =>\n\t\t\t\t\t\t\t\t\tlaneEl.lane.id === lastFocusedLaneItemId\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn swimlaneHeaderArrowUp(\n\t\t\t\t\t\t\t\tlane,\n\t\t\t\t\t\t\t\tpreviousSwimlaneHeaderSibling,\n\t\t\t\t\t\t\t\telementsSelector\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn swimlaneHeaderArrowUp(\n\t\t\t\t\t\t\t\tlanes[0],\n\t\t\t\t\t\t\t\tpreviousSwimlaneHeaderSibling,\n\t\t\t\t\t\t\t\telementsSelector\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tactiveElement.matches(LANE_FOOTER_CONTAINER) ||\n\t\t\t\tclosestDeep(activeElement, LANE_FOOTER_CONTAINER)\n\t\t\t) {\n\t\t\t\t// Focus on the last card in the lane, else on swimlaneHeader\n\t\t\t\tlane = closestDeep(activeElement, SN_LANE);\n\t\t\t\tconst focusableElementsInLane = querySelectorAllDeep(\n\t\t\t\t\telementsSelector,\n\t\t\t\t\tlane,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tif (focusableElementsInLane.length > 1) {\n\t\t\t\t\treturn focusableElementsInLane;\n\t\t\t\t} else {\n\t\t\t\t\tsetLastFocusedLaneItemId(activeElement);\n\t\t\t\t\treturn [\n\t\t\t\t\t\tquerySelectorDeep(elementsSelector, swimlaneHeader),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t} else if (closestDeep(activeElement, SN_CARD_WRAPPER)) {\n\t\t\t\tsetLastFocusedLaneItemId(activeElement);\n\t\t\t\tconst cardWrapper = closestDeep(activeElement, SN_CARD_WRAPPER);\n\t\t\t\tif (cardWrapper.previousSibling) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\tcardWrapper.previousSibling\n\t\t\t\t\t\t),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn [querySelectorDeep(elementsSelector, swimlaneHeader)];\n\t\t\t} else if (closestDeep(activeElement, SN_LANE_HEADER)) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DIRECTIONS.RIGHT:\n\t\tcase DIRECTIONS.LEFT:\n\t\t\treturn horizontalNavIn2DBoard(\n\t\t\t\tactiveElement,\n\t\t\t\telementsSelector,\n\t\t\t\tdirection\n\t\t\t);\n\t}\n\t// IDK if nothing works, return everything :3 ?\n\treturn querySelectorAllDeep(elementsSelector, board, false);\n};\n\nconst getNavigableElementsByDirectionIn1DBoard = (\n\tactiveElement,\n\tdirection,\n\telementsSelector,\n\tboard\n) => {\n\tconst laneHeaders = querySelectorAllDeep(SN_LANE_HEADER, board, false);\n\tconst lanes = querySelectorAllDeep(SN_LANE, board, false);\n\tlet laneHeader = closestDeep(activeElement, SN_LANE_HEADER);\n\tconst lane =\n\t\tclosestDeep(activeElement, SN_LANE) ||\n\t\tlanes.filter((lane) => lane.id === 'lane_' + laneHeader.id)[0];\n\n\tswitch (direction) {\n\t\tcase DIRECTIONS.RIGHT: {\n\t\t\t// Pick the right lane and return all cards from Ωzzzit\n\t\t\tlet nextElem = null;\n\t\t\tif (laneHeader) {\n\t\t\t\tnextElem = laneHeader.nextSibling;\n\t\t\t} else {\n\t\t\t\tnextElem = lane.nextSibling;\n\t\t\t}\n\t\t\tif (nextElem) {\n\t\t\t\treturn querySelectorAllDeep(elementsSelector, nextElem, false);\n\t\t\t}\n\t\t\t// const nextLane = lane.nextSibling; // TODO: Few cases to be considered here\n\t\t\t// if (nextLane) {\n\t\t\t// \t// TODO: Consider if there are no elements in next lane, what to do?\n\t\t\t// \treturn querySelectorAllDeep(elementsSelector, nextLane);\n\t\t\t// }\n\t\t\treturn [];\n\t\t}\n\t\tcase DIRECTIONS.LEFT: {\n\t\t\t// Pick the left lane and return all cards from it\n\t\t\tlet prevElem = null;\n\t\t\tif (laneHeader) {\n\t\t\t\tprevElem = laneHeader.previousSibling;\n\t\t\t} else {\n\t\t\t\tprevElem = lane.previousSibling;\n\t\t\t}\n\t\t\tif (prevElem) {\n\t\t\t\treturn querySelectorAllDeep(elementsSelector, prevElem, false);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t\tcase DIRECTIONS.DOWN: {\n\t\t\t// First focus on the next card, and if bottom is reached, then focus on the lane footer\n\t\t\tif (\n\t\t\t\tactiveElement.matches(LANE_FOOTER_CONTAINER) ||\n\t\t\t\tclosestDeep(activeElement, LANE_FOOTER_CONTAINER)\n\t\t\t) {\n\t\t\t\treturn []; // can't go down from lane footer\n\t\t\t}\n\t\t\tif (activeElement.matches(SN_CARD_WRAPPER)) {\n\t\t\t\tif (activeElement.nextSibling) {\n\t\t\t\t\treturn [activeElement.nextSibling];\n\t\t\t\t}\n\t\t\t\t// If no more cards, focus on lane footer\n\t\t\t\treturn focusLaneFooter(lane, elementsSelector);\n\t\t\t} else if (closestDeep(activeElement, SN_CARD_WRAPPER)) {\n\t\t\t\t// If we are focussed on an element somewhere inside the card wrapper\n\t\t\t\tconst cardWrapper = closestDeep(activeElement, SN_CARD_WRAPPER);\n\t\t\t\tconst nextCardWrapper = cardWrapper.nextSibling;\n\t\t\t\tif (nextCardWrapper) {\n\t\t\t\t\tconst nextCard = querySelectorDeep(\n\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\tnextCardWrapper\n\t\t\t\t\t);\n\t\t\t\t\tif (nextCard) return [nextCard];\n\t\t\t\t} else {\n\t\t\t\t\t// reached the last card probably, now focus on the  footer\n\t\t\t\t\treturn focusLaneFooter(lane, elementsSelector);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tactiveElement.matches(LANE_HEADER) ||\n\t\t\t\tclosestDeep(activeElement, SN_LANE_HEADER)\n\t\t\t) {\n\t\t\t\t// Focus on the first card in the lane, otherwise on the lane footer\n\t\t\t\tconst navigableElemsInLane = querySelectorAllDeep(\n\t\t\t\t\telementsSelector,\n\t\t\t\t\tlane,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tif (navigableElemsInLane.length) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: navigableElemsInLane[0],\n\t\t\t\t\t\tignoreDirection: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn querySelectorAllDeep(elementsSelector, lane, false);\n\t\t}\n\t\tcase DIRECTIONS.UP: {\n\t\t\t// First focus on the previous card, and if top is reached, then focus on the lane header\n\t\t\tif (\n\t\t\t\tactiveElement.matches(LANE_HEADER) ||\n\t\t\t\tclosestDeep(activeElement, SN_LANE_HEADER)\n\t\t\t) {\n\t\t\t\treturn []; // can't go up from lane header\n\t\t\t}\n\t\t\tif (activeElement.matches(SN_CARD_WRAPPER)) {\n\t\t\t\tif (activeElement.previousSibling) {\n\t\t\t\t\treturn [activeElement.previousSibling];\n\t\t\t\t}\n\t\t\t\t// If no more cards, focus on lane header\n\t\t\t\tlaneHeader = laneHeaders.find(\n\t\t\t\t\t(header) => header.id === lane.lane.id\n\t\t\t\t);\n\t\t\t\treturn [querySelectorDeep(elementsSelector, laneHeader)];\n\t\t\t} else if (closestDeep(activeElement, SN_CARD_WRAPPER)) {\n\t\t\t\tconst cardWrapper = closestDeep(activeElement, SN_CARD_WRAPPER);\n\t\t\t\tconst previousCardWrapper = cardWrapper.previousSibling;\n\t\t\t\tif (previousCardWrapper) {\n\t\t\t\t\tconst previousCard = querySelectorDeep(\n\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\tpreviousCardWrapper\n\t\t\t\t\t);\n\t\t\t\t\tif (previousCard) return [previousCard];\n\t\t\t\t\treturn [querySelectorDeep(elementsSelector, lane)];\n\t\t\t\t} else {\n\t\t\t\t\t// Reached the first card, now focus on the lane header\n\t\t\t\t\tconst headerContainer = laneHeaders.filter(\n\t\t\t\t\t\t(header) => header.id === lane.lane.id\n\t\t\t\t\t)[0];\n\t\t\t\t\tif (headerContainer) {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\t\theaderContainer\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\treturn [querySelectorDeep(elementsSelector, lane)];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tactiveElement.matches(LANE_FOOTER_CONTAINER) ||\n\t\t\t\tclosestDeep(activeElement, LANE_FOOTER_CONTAINER)\n\t\t\t) {\n\t\t\t\t// Focus on the first card in the lane, otherwise on the lane footer\n\t\t\t\tconst navigableElemsInLane = querySelectorAllDeep(\n\t\t\t\t\telementsSelector,\n\t\t\t\t\tlane,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tif (navigableElemsInLane.length > 1) {\n\t\t\t\t\treturn navigableElemsInLane;\n\t\t\t\t} else {\n\t\t\t\t\tconst headerContainer = laneHeaders.filter(\n\t\t\t\t\t\t(header) => header.id === lane.lane.id\n\t\t\t\t\t)[0];\n\t\t\t\t\tif (headerContainer) {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tquerySelectorDeep(\n\t\t\t\t\t\t\t\telementsSelector,\n\t\t\t\t\t\t\t\theaderContainer\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn querySelectorAllDeep(elementsSelector, lane, false);\n\t\t}\n\t}\n};\n","import { nowSortable } from '@devsnc/library-vtb-commons';\nimport {\n\taddVLanePlaceholders,\n\tremoveVLanePlaceholders,\n} from '../../components/sn-lane/dragHelper';\nimport { closestDeep, querySelectorDeep } from '@devsnc/library-vtb-commons';\nimport '../../components/lane-clone/lane-clone';\n\nexport default {\n\tbehavior: nowSortable,\n\toptions: {\n\t\titems: 'sn-lane-header',\n\t\tdropzone: '.lanes-header-container',\n\t\tactionPrefix: 'LANE_',\n\t\txScrollParent: '.sn-board',\n\t\tyScrollParent: 'body',\n\t\tcloneAppendTo: '.board-container',\n\t\tlistOrder: 'horizontal',\n\t\trestrictTo: '.sn-board',\n\t\tkeyboardSupport: false,\n\t\tlockAxis: 'x',\n\t\titemsFilter: (item) => item.draggable,\n\t\tcursorChecker: () => '',\n\t\tclone: (el) => {\n\t\t\tconst boardEl = closestDeep(el, 'now-visual-board');\n\t\t\tconst clone = document.createElement('lane-clone');\n\t\t\tclone.props = boardEl.getProperties();\n\t\t\tclone.props.id = el.id;\n\t\t\tclone.props.boardEl = boardEl;\n\t\t\tclone.props.height = boardEl.getBoundingClientRect().height;\n\t\t\treturn clone;\n\t\t},\n\t\tcondition: (host) => {\n\t\t\t// Don't add sortable behavior if cloneMode is true\n\t\t\treturn !host.cloneMode;\n\t\t},\n\t\tdynamicConfig: (el) => {\n\t\t\tconst consumerConfig = {};\n\t\t\tconst props = el.getProperties();\n\t\t\tconst { laneDragPlaceholderTag, laneDropPlaceholderTag } = props;\n\t\t\tif (laneDragPlaceholderTag)\n\t\t\t\tconsumerConfig.tagSourcePlaceholder = laneDragPlaceholderTag;\n\t\t\tif (laneDropPlaceholderTag)\n\t\t\t\tconsumerConfig.tagDestPlaceholder = laneDropPlaceholderTag;\n\t\t\treturn consumerConfig;\n\t\t},\n\t\tonDestPlaceholderInsert: (\n\t\t\ttargetElement,\n\t\t\tsrcPlaceholder,\n\t\t\tdestPlaceholder,\n\t\t\tnewPosition\n\t\t) => {\n\t\t\tconst boardEl = closestDeep(targetElement, 'now-visual-board');\n\t\t\tconst snBoardElem = querySelectorDeep('.sn-board', boardEl);\n\t\t\tconst { laneIndex } = targetElement.getProperties();\n\t\t\tremoveVLanePlaceholders(snBoardElem);\n\n\t\t\tif (newPosition < 0 || newPosition === laneIndex) return;\n\n\t\t\tconst newPlaceholderPos =\n\t\t\t\tlaneIndex > newPosition ? newPosition - 1 : newPosition;\n\t\t\tconst { width: srcEleWidth } = srcPlaceholder.getProperties();\n\t\t\taddVLanePlaceholders(newPlaceholderPos, snBoardElem, srcEleWidth);\n\t\t},\n\t},\n};\n","import { createCustomElement, actionTypes } from '@servicenow/ui-core';\nimport If from '../shared/if';\nimport styles from './lane-clone.scss';\nimport {\n\tquerySelectorDeep,\n\tquerySelectorAllDeep,\n\tisClientRectIntersecting\n} from '@devsnc/library-vtb-commons';\nimport tiltBehaviour from '../../behaviors/tilt/tilt';\n\n/**\n * Copy lane scroll value on the clone for 2D board.\n * */\nconst copyLaneScrollOnCloneFor2D = (clone, scrollHeight) => {\n\t// Get content till scroll position\n\tlet scrollElem = querySelectorDeep('.sn-board', clone);\n\tif (scrollElem) scrollElem.scrollTop = scrollHeight;\n};\n\n/**\n * Copy board scroll value on the clone for 1D board.\n * */\nconst copyLaneScrollOnCloneFor1D = (clone, scrollHeight) => {\n\t// Get scroll element.\n\tlet scrollElem = querySelectorDeep('.sn-lane', clone);\n\tif (scrollElem) scrollElem.scrollTop = scrollHeight;\n};\n\n/**\n * Sets each swimlane container height in clone.\n * */\nconst setSwimLaneContainerHeightInClone = (clone, el) => {\n\tlet snBoardElem = querySelectorDeep('.sn-board', el);\n\tlet swimlaneContainers = querySelectorAllDeep(\n\t\t'.swimlane-body',\n\t\tsnBoardElem,\n\t\tfalse\n\t);\n\n\tlet swimlaneContainersInClone = querySelectorAllDeep(\n\t\t'.swimlane-body',\n\t\tclone,\n\t\tfalse\n\t);\n\n\tlet swimlaneContainerHeight = [];\n\tif (swimlaneContainersInClone.length > 0) {\n\t\t// Read element offset height of each visible swimlane dom element in user Viewport.\n\t\tswimlaneContainers.forEach((element) => {\n\t\t\tswimlaneContainerHeight.push(element.offsetHeight);\n\t\t});\n\n\t\t// Apply swimlane height from dom on to clone swimlane dom element.\n\t\tswimlaneContainers.forEach((elem, index) => {\n\t\t\tswimlaneContainersInClone[index].style.height =\n\t\t\t\tswimlaneContainerHeight[index] + 'px';\n\t\t});\n\t}\n};\n\n/**\n * Return Swimlane dom elements in user Viewport.\n * */\nconst getSwimlaneContainerInViewport = (boardEl) => {\n\tlet swimlaneContainersInViewport = [];\n\tlet snBoardElem = querySelectorDeep('.sn-board', boardEl);\n\tlet swimlaneContainers = querySelectorAllDeep(\n\t\t'.swimlane-body',\n\t\tsnBoardElem,\n\t\tfalse\n\t);\n\tconst boardRect = boardEl.getBoundingClientRect();\n\tswimlaneContainers.forEach((element) => {\n\t\tvar swimLaneRect = element.getBoundingClientRect();\n\t\tif (isClientRectIntersecting(swimLaneRect, boardRect))\n\t\t\tswimlaneContainersInViewport.push(element);\n\t});\n\n\treturn swimlaneContainersInViewport;\n};\n\n/**\n * Return cards array from swimlane dom element in user Viewport.\n * */\nconst getCardsInSwimlaneViewport = (laneId, swimlaneContainers) => {\n\tlet cardsInViewport = [];\n\tswimlaneContainers.forEach((element) => {\n\t\tcardsInViewport = cardsInViewport.concat(\n\t\t\tgetCardsInDraggedLane(laneId, element)\n\t\t);\n\t});\n\treturn cardsInViewport;\n};\n\n/**\n * Return scrolling required on clone for 1D board.\n * */\nconst getScrollHeightFor1DBoard = (elem, laneId, card) => {\n\tlet lanes = querySelectorAllDeep('sn-lane', elem, false);\n\tlet dragLane = lanes.find((lane) => lane.id.includes(laneId));\n\tlet dragLaneRect = dragLane.getBoundingClientRect();\n\tlet scrollingRequired = '';\n\n\tconst cardContainer = querySelectorDeep(`[id=\"${card.id}\"]`, dragLane);\n\tconst cardRect = cardContainer.getBoundingClientRect();\n\n\tif (isClientRectIntersecting(cardRect, dragLaneRect)) {\n\t\tscrollingRequired = dragLaneRect.top - cardRect.top;\n\t}\n\n\treturn scrollingRequired;\n};\n\n/**\n * Return scrolling required on clone for 2D board.\n * */\nconst getScrollHeightFor2DBoard = (scrollContainer) =>\n\tscrollContainer.scrollTop;\n\n/**\n * Return cards array from lane dom element in user Viewport.\n * */\nconst getCardsInDraggedLane = (laneId, elem) => {\n\tlet cardsInViewport = [];\n\n\tlet lanes = querySelectorAllDeep('sn-lane', elem, false);\n\tlet dragLane = lanes.find((lane) => lane.id.includes(laneId));\n\tlet cardContainers = querySelectorAllDeep(\n\t\t'sn-card-wrapper',\n\t\tdragLane,\n\t\tfalse\n\t);\n\tlet props = dragLane.getProperties();\n\tlet dragLaneRect = dragLane.getBoundingClientRect();\n\tconst { cards } = props;\n\tcardContainers.forEach((elem, index) => {\n\t\tvar cardRect = elem.getBoundingClientRect();\n\t\tif (isClientRectIntersecting(cardRect, dragLaneRect))\n\t\t\tcardsInViewport.push(cards[index]);\n\t});\n\treturn cardsInViewport;\n};\n\nexport default createCustomElement('lane-clone', {\n\tview(state) {\n\t\tconst {\n\t\t\tprops: {\n\t\t\t\tid,\n\t\t\t\tlaneHeaderTag,\n\t\t\t\tlaneFooterTag,\n\t\t\t\tcardConfigOverride,\n\t\t\t\tlaneConfigOverride,\n\t\t\t\tswimlanes,\n\t\t\t\tswimlaneHeaderCloneTag,\n\t\t\t\tlanes,\n\t\t\t\tcardTag,\n\t\t\t\theight,\n\t\t\t\tstyles,\n\t\t\t},\n\t\t} = state.properties;\n\t\tconst { cardsInSwimLaneViewport, cardsInLaneViewPort } = state;\n\t\tconst dragLanes = lanes.filter((lane) => lane.id === id);\n\t\tconst isSwimlaneBoard = swimlanes ? swimlanes.length > 0 : false;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"lane-clone\"\n\t\t\t\tstyle={{\n\t\t\t\t\theight: `${height}px`,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<If test={isSwimlaneBoard}>\n\t\t\t\t\t<now-visual-board\n\t\t\t\t\t\tcards={cardsInSwimLaneViewport}\n\t\t\t\t\t\tswimlanes={swimlanes}\n\t\t\t\t\t\tcard-tag={cardTag}\n\t\t\t\t\t\tlanes={dragLanes}\n\t\t\t\t\t\tlane-header-tag={laneHeaderTag}\n\t\t\t\t\t\tcard-config-override={cardConfigOverride}\n\t\t\t\t\t\tlane-config-override={laneConfigOverride}\n\t\t\t\t\t\tswimlane-header-tag={swimlaneHeaderCloneTag}\n\t\t\t\t\t\tclone-mode={true}\n\t\t\t\t\t\tstyles={styles}\n\t\t\t\t\t/>\n\t\t\t\t</If>\n\t\t\t\t<If test={!isSwimlaneBoard}>\n\t\t\t\t\t<now-visual-board\n\t\t\t\t\t\tcards={cardsInLaneViewPort}\n\t\t\t\t\t\tcardTag={cardTag}\n\t\t\t\t\t\tlanes={dragLanes}\n\t\t\t\t\t\tlane-header-tag={laneHeaderTag}\n\t\t\t\t\t\tlane-footer-tag={laneFooterTag}\n\t\t\t\t\t\tcard-config-override={cardConfigOverride}\n\t\t\t\t\t\tlane-config-override={laneConfigOverride}\n\t\t\t\t\t\tclone-mode={true}\n\t\t\t\t\t\tstyles={styles}\n\t\t\t\t\t/>\n\t\t\t\t</If>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tprops: { default: null },\n\t\thorizontalDragDirection: { default: '' },\n\t},\n\tinitialState: {\n\t\tswimlanesInViewport: [],\n\t\tcardsInSwimLaneViewport: [],\n\t\tcardsInLaneViewPort: [],\n\t\tscrollHeight: '',\n\t},\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: tiltBehaviour,\n\t\t[actionTypes.COMPONENT_CONNECTED]: ({ host, updateState }) => {\n\t\t\ttiltBehaviour({ host });\n\t\t\tconst { props } = host.getProperties();\n\t\t\tconst { id, boardEl, swimlanes } = props;\n\t\t\tconst isSwimlaneBoard = swimlanes ? swimlanes.length > 0 : false;\n\n\t\t\tif (isSwimlaneBoard) {\n\t\t\t\t// Get Swimlane container from user Viewport on current board.\n\t\t\t\tconst swimlaneContainers = getSwimlaneContainerInViewport(\n\t\t\t\t\tboardEl\n\t\t\t\t);\n\n\t\t\t\t// Get cards from swimlane container which are in user vieport on current board.\n\t\t\t\tconst getCardsInSwimlane = getCardsInSwimlaneViewport(\n\t\t\t\t\tid,\n\t\t\t\t\tswimlaneContainers\n\t\t\t\t);\n\t\t\t\tlet scrollContainer = querySelectorDeep('.sn-board', boardEl);\n\t\t\t\tconst scrollHeight = getScrollHeightFor2DBoard(scrollContainer);\n\n\t\t\t\tupdateState({\n\t\t\t\t\tswimlanesInViewport: swimlaneContainers,\n\t\t\t\t\tcardsInSwimLaneViewport: getCardsInSwimlane,\n\t\t\t\t\tscrollHeight: scrollHeight,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Get cards from lane which is being dragged.\n\t\t\t\tconst cardsInLane = getCardsInDraggedLane(id, boardEl);\n\t\t\t\tlet scrollingRequired = '';\n\t\t\t\tupdateState({\n\t\t\t\t\tcardsInLaneViewPort: cardsInLane,\n\t\t\t\t});\n\t\t\t\tif (cardsInLane.length > 0) {\n\t\t\t\t\tscrollingRequired = getScrollHeightFor1DBoard(\n\t\t\t\t\t\tboardEl,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcardsInLane[0]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tupdateState({\n\t\t\t\t\tscrollHeight: scrollingRequired,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[actionTypes.COMPONENT_RENDERED]: ({ host, state }) => {\n\t\t\tconst { props } = host.getProperties();\n\t\t\tconst { swimlanes, boardEl } = props;\n\t\t\tconst isSwimlaneBoard = swimlanes ? swimlanes.length > 0 : false;\n\t\t\tconst { scrollHeight } = state;\n\n\t\t\tif (isSwimlaneBoard) {\n\t\t\t\t// Get scroll container for current board.\n\t\t\t\tlet scrollContainer = querySelectorDeep('.sn-board', boardEl);\n\n\t\t\t\t// Set Swimlane container height for each lane in swimlane in clone.\n\t\t\t\tsetSwimLaneContainerHeightInClone(host, scrollContainer);\n\n\t\t\t\t// Copy board scroll height on clone element.\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcopyLaneScrollOnCloneFor2D(host, scrollHeight);\n\t\t\t\t}, 100);\n\t\t\t} else {\n\t\t\t\tconst { scrollHeight } = state;\n\t\t\t\t// Copy lane scroll height on clone element.\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcopyLaneScrollOnCloneFor1D(host, scrollHeight);\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t},\n\t},\n\tstyles,\n});\n","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./lane-clone.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".lane-clone{box-shadow:0 0 10px #999}.lane-clone.horizontal-dir-right{transform:rotate(3deg)}.lane-clone.horizontal-dir-left{transform:rotate(-3deg)}\", \"\"]);\n\n// exports\n","import { querySelectorDeep } from '@devsnc/library-vtb-commons';\n\nexport default function ({ host }) {\n\tconst props = host.getProperties();\n\tconst { horizontalDragDirection } = props;\n\tconst laneCloneDiv = querySelectorDeep('.lane-clone', host);\n\tif (laneCloneDiv && horizontalDragDirection) {\n\t\tif (!laneCloneDiv.classList.contains(horizontalDragDirection))\n\t\t\tlaneCloneDiv.classList.add(horizontalDragDirection);\n\n\t\tif (horizontalDragDirection === 'horizontal-dir-right') {\n\t\t\tif (laneCloneDiv.classList.contains('horizontal-dir-left'))\n\t\t\t\tlaneCloneDiv.classList.remove('horizontal-dir-left');\n\t\t}\n\n\t\tif (horizontalDragDirection === 'horizontal-dir-left') {\n\t\t\tif (laneCloneDiv.classList.contains('horizontal-dir-right'))\n\t\t\t\tlaneCloneDiv.classList.remove('horizontal-dir-right');\n\t\t}\n\t}\n}\n","import { nowSortable } from '@devsnc/library-vtb-commons';\nimport { isEqual } from 'lodash';\nimport { closestDeep } from '@devsnc/library-vtb-commons';\n\nconst SL_FIRT_LANE_SCROLL_BUFFER_AREA = 25;\n\nexport default {\n\tbehavior: nowSortable,\n\toptions: {\n\t\titems: 'sn-swimlane',\n\t\tdropzone: '.swimlanes',\n\t\tactionPrefix: 'SWIMLANE_',\n\t\tallowFrom: '.sn-swimlane-header',\n\t\tcloneAppendTo: '.board-container',\n\t\txScrollParent: '.sn-board',\n\t\tyScrollParent: '.sn-board',\n\t\tlistOrder: 'vertical',\n\t\tlockAxis: 'y',\n\t\tkeyboardSupport: false,\n\t\tcursorChecker: () => '',\n\t\tclone: (el) => {\n\t\t\tconst properties = el.getProperties();\n\t\t\tconst cloneTag =\n\t\t\t\tproperties.tagSwimlaneHeader || 'sn-swimlane-header';\n\t\t\tlet cloneEl = document.createElement(cloneTag);\n\t\t\tfor (let prop in properties) cloneEl[prop] = properties[prop];\n\t\t\tcloneEl.data = properties.swimlane;\n\t\t\tcloneEl.collapsed = true;\n\t\t\tcloneEl.clone = true;\n\t\t\tcloneEl.style.width = `${el.getBoundingClientRect().width}px`;\n\t\t\treturn cloneEl;\n\t\t},\n\t\tshouldUpdate: (newProps, oldProps) => {\n\t\t\treturn !isEqual(newProps, oldProps); // see \"card-sort.js\" for an explanation of this\n\t\t},\n\t\tonSrcPlaceholderInsert: (dragElem, srcPlaceholder) => {\n\t\t\tsrcPlaceholder.style.top = dragElem.style.top;\n\t\t\tsrcPlaceholder.style.position = 'absolute';\n\t\t},\n\t\tonDestPlaceholderInsert: (dragElem, srcPlaceholder) => {\n\t\t\t// Expectation : source placeholder and destination placeholder\n\t\t\t// should be of same height as collapsed swimlane height.\n\t\t\t// Also, srcPlaceholder.height cannot be used as it can be full swimlane height if it is dragged before collapse\n\t\t\tconst {\n\t\t\t\theight: collapsedSlHeight,\n\t\t\t} = srcPlaceholder.getBoundingClientRect();\n\t\t\t// if srcPlaceholder is not yet rendered (height zero), we do not need any css adjustments\n\t\t\tif (collapsedSlHeight === 0) return;\n\n\t\t\t// Get all swimlanes and calculate the first el top w.r.t source placeholder top\n\t\t\tconst slContainerEl = closestDeep(dragElem, '.swimlanes');\n\t\t\tconst swimlaneElements = [].slice.call(slContainerEl.children); // including placeholders\n\t\t\tconst dragElIndex = swimlaneElements.indexOf(dragElem);\n\t\t\tconst placeholderTop = parseInt(srcPlaceholder.style.top) || 0;\n\t\t\tlet firstlaneTop = placeholderTop - dragElIndex * collapsedSlHeight;\n\t\t\tif (firstlaneTop < 0) {\n\t\t\t\tfirstlaneTop +=\n\t\t\t\t\tcollapsedSlHeight + SL_FIRT_LANE_SCROLL_BUFFER_AREA;\n\t\t\t}\n\n\t\t\t// Update 'top' of all swimlane elements including src and dest placeholders\n\t\t\tswimlaneElements.splice(dragElIndex, 1);\n\t\t\tswimlaneElements.forEach((sl) => {\n\t\t\t\tsl.style.top = `${firstlaneTop}px`;\n\t\t\t\tsl.style.position = 'absolute';\n\t\t\t\tfirstlaneTop += collapsedSlHeight;\n\t\t\t});\n\t\t},\n\t\tcondition: (host) => {\n\t\t\t// Don't add sortable behavior if cloneMode is true\n\t\t\treturn !host.cloneMode;\n\t\t},\n\t\titemsFilter: (el) => el.getProperties().draggable,\n\t\tdynamicConfig: (el) => {\n\t\t\tconst consumerConfig = {};\n\t\t\tconst props = el.getProperties();\n\t\t\tconst {\n\t\t\t\tswimlaneDragPlaceholderTag,\n\t\t\t\tswimlaneDropPlaceholderTag,\n\t\t\t} = props;\n\t\t\tif (swimlaneDragPlaceholderTag)\n\t\t\t\tconsumerConfig.tagSourcePlaceholder = swimlaneDragPlaceholderTag;\n\t\t\tif (swimlaneDropPlaceholderTag)\n\t\t\t\tconsumerConfig.tagDestPlaceholder = swimlaneDropPlaceholderTag;\n\t\t\treturn consumerConfig;\n\t\t},\n\t},\n};\n"],"sourceRoot":""}