{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_table_builder/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/commons/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/commons/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-provider/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-structure-data/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_icon\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_ui_effect_http\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/alerts/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__uuid_3_4_0\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/transaction-model/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-save/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/filter-model/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/transaction-model/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/user-data/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/fieldTypes/fieldType.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/alerts/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-initializer/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-initializer/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/record-watcher/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_loader\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/focusUtility.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-provider/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_input\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/table-icon/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_library_enhanced_utils_19_8_1\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-structure-data/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-save/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_select\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/add-new-grid-item/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/commons/additional-info-map.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/user-data/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/record-watcher/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_toggle\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_popover\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/commons/bulk-request.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_label_value\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_highlighted_value\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_tooltip\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-popover-content/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_checkbox\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/sn-table-builder.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-viewer/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-viewer/sn-tb-viewer.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-viewer/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field-row-view/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field-row-view/sn-tb-field-row-view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field-row-view/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/grid-model.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/user-data/user-data.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/user-data/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/fieldTypes/fieldTypeFactory.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/fieldTypes/integerType.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/fieldTypes/booleanType.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-model/fieldTypes/controlDelType.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-structure-data/table-structure-data.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-structure-data/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-structure-data/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/transaction-model/transaction-model.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/transaction-model/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/transaction-model/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-initializer/table-initializer.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-initializer/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-initializer/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/record-watcher/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/record-watcher/record-watcher.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/record-watcher/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_ui_effect_amb\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/grid-body-cell/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/grid-body-cell/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/sn-tb-field.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/sn-tb-reference.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_typeahead\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-record-list/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-record-list/sn-tb-record-list.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-record-list/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_record_list_connected\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-record-list/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-record-list/constants.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__sn_http_request_18_0_1\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/events.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/styles.scss?9b96","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-reference/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/alerts/alerts.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/alerts/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/alerts/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-save/table-save.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-save/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/table-save/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-provider/sn-tb-provider.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-provider/styles.scss?e15d","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-provider/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/filter-model/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/filter-model/filter-model.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/filter-model/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/sn-tb-type-edit.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/sn-tb-input.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/styles.scss?4d9c","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-input/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/sn-tb-choice.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/styles.scss?4a5f","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-choice/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/styles.scss?1d16","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-type-edit/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/sn-tb-textarea.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_textarea\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/styles.scss?0f52","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-textarea/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/sn-tb-select.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/styles.scss?c635","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-select/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/styles.scss?cb42","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-popover-content/sn-tb-popover-content.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/grid-header-cell/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/grid-header-cell/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/grid-navigation.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/events.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/behaviors/grid-navigation/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/pagination-control/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_pagination_control\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/sn-tb-grid.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/styles/main.scss?e255","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/styles/main.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-grid/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/sn-tb-header.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/sn-tb-properties.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_tabs\"","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_collapse\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/styles.scss?d59c","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-properties/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/sn-tb-confirm-delete.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_progress_bar\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/styles.scss?1c59","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm-delete/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm/sn-tb-confirm.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-confirm/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/styles.scss?b6f0","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-header/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/partials/top-section/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field-row-view/styles.scss?97e7","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field-row-view/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-field-row-view/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/index.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/sn-tb-welcome.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/view.js","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_heading\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/utils.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/actions.js","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/styles.scss?acb3","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-welcome/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-viewer/styles.scss?f08b","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-tb-viewer/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/external \"__TECTONIC__$servicenow_now_alert\"","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/styles.scss?4637","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/styles.scss","webpack://__TECTONIC__$devsnc_sn_table_builder/./src/main/plugins/com.devsnc_sn_table_builder/ui.html/scripts/components/sn-table-builder/actions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","BORDER_RADIUS_CORNERS","EVENT_KEY","ESC","ESCAPE","ENTER","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","SPACE","PAGE_UP","PAGE_DOWN","HOME","END","TAB","TB_PERSPECTIVES","VIEW_FIELD_ROW","TABLES","SYS_DB_OBJECT","DICTIONARY","SYS_CHOICE","PAGE_SIZES","WAIT_UNTIL_TIMEOUT_DEFAULT","WAIT_UNTIL_INTERVAL_DEFAULT","ERROR_ALERT","STATUS","ICON","INFO_ALERT","FIELD_TYPES","INTEGER","STRING","GUID","BOOLEAN","DATE_TIME","_CONTROL_DELETE","INTERNAL_TYPES","JOURNAL_INPUT","REFERENCE","CHOICE","TABLE_COLUMNS","INTERNAL_TYPE","MAX_LENGTH","DEFAULT_VALUE","ELEMENT","COLUMN_LABEL","__TECTONIC__sn_translate","__TECTONIC__$servicenow_ui_core","isFunction","toString","isObject","findNextFocusTarget","createGlobalListener","eventType","callbacks","runCallbacks","event","keys","forEach","id","add","callback","length","window","addEventListener","remove","removeEventListener","getBorderRadiusClasses","borderRadius","hasBorder","classNames","side","getBorderClasses","includes","formatNumberWithCommas","num","parts","split","replace","AppEngineStudioAPI","constructor","this","api","frameElement","appEngineStudioBuilderAPI","openAppEngineStudioTab","args","closeCurrentTab","updateTabState","hasUnsavedChanges","close","obj","path","defValue","Array","isArray","match","reduce","prevObj","inRange","rangeStart","rangeEnd","shadowQuerySelectorAll","root","document","selector","shadowRoot","nodes","querySelectorAll","from","updateStateWithoutRender","data","updateState","propName","operation","shouldRender","within","body","current","getActiveElement","wrap","shiftKey","delta","tabbableNodes","findTabbableNodes","currentIndex","indexOf","handleTabPress","host","preventDefault","focusTarget","focus","resolveInfoForTypes","type","scalarType","ADDITIONAL_INFO","sys_glide_object","image","FALLBACK_IMAGE_MAP","icon","description","waitUntil","condition","timeout","timeoutMsg","checkInterval","Promise","resolve","reject","started","Date","timeElapsedSince","now","checkElapsedTime","clearInterval","interval","setInterval","race","ms","setTimeout","then","conditionResult","catch","err","removeSpecialCharacters","toLowerCase","isUnsavedRecord","identifier","startsWith","getTableUrlForPlatform","sysId","transactionScope","uuid","v4","isEmptyObject","getEventPath","composedPath","BEHAVIOR_NAME","SORT_ORDER_DESC","GRID_CONSTANTS","PAGE_SIZE","FIELDS_NEEDING_VALIDATION","SORT_ORDER_ASC","DEFAULT_SORT_ORDER","SORT_ORDERS","ASC","DESC","SORT_ASC_ID","SORT_DESC_ID","BUTTON_DELETE_CONTROL","BUTTON_REFERENCE_OPENER","API_PATH","FIELD_VALIDATION_API_PATH","ACTION_TYPES","GRID_MODEL__FETCH_GRID_DATA_INITIATED","GRID_MODEL__FETCH_GRID_DATA_STARTED","GRID_MODEL__FETCH_GRID_DATA_SUCCEEDED","GRID_MODEL__FETCH_GRID_DATA_FAILED","GRID_MODEL__TRANSFORM_GRID_MODEL","GRID_MODEL__NEW_ROW_BTN_CLICKED","GRID_MODEL__UPDATE_CELL_MODEL","GRID_MODEL__CELL_VALIDATION_STARTED","GRID_MODEL__CELL_VALIDATION_COMPLETED","GRID_MODEL__UPDATE_DERIVED_FIELD","GRID_MODEL__UPDATE_CELL_MODEL_BATCH","GRID_MODEL__GRID_UPDATE_SORT","GRID_MODEL__VALIDATE_FIELD_INITIATED","GRID_MODEL__VALIDATE_FIELD_STARTED","GRID_MODEL__VALIDATE_FIELD_SUCCEEDED","GRID_MODEL__VALIDATE_FIELD_FAILED","GRID_MODEL__SYNC_GRID_MODEL_WITH_TRANSACTION","GRID_MODEL__SET_FOCUS_RETAINABLE_CELL","GRID_MODEL__RETAIN_FOCUS_TO_GRID_CELL","GRID_MODEL__DELETE_CONTROL_CLICKED","GRID_MODEL__DELETE_ROW_FROM_MODEL","FILTER_GRID","REFRESH_GRID","REFERENCE_OPENER_CLICKED","OPEN_REFERENCE_TABLE","FETCH_TABLE_DETAILS","FETCH_TABLE_DETAILS_STARTED","FETCH_TABLE_DETAILS_SUCCEEDED","SHOW_GRID_LOADER","HIDE_GRID_LOADER","SN_TB_FIELD__VALUE_CHANGED","SN_TB_FIELD__VALUE_UNCHANGED","NOW_TOGGLE__CHECKED_SET","NOW_PAGINATION_CONTROL__SELECTED_PAGE_SET","NOW_PAGINATION_CONTROL__SELECTED_PAGE_SIZE_SET","NOW_DROPDOWN__ITEM_CLICKED","NOW_BUTTON_ICONIC__CLICKED","IS_GRID_DATA_FETCHING","IS_GRID_DATA_ERROR","IS_GRID_DATA_FETCHED","IS_GRID_MODEL_READY","GRID_COLUMNS","GRID_DATA","GRID_ROWS","GRID_CURRENT_PAGE","GRID_PAGE_SIZE","GRID_FILTER_QUERY","GRID_RECORD_COUNT","CHOICE_TYPES","POPOVER_POSITION_TARGET","NEW_ROW_ADDED","ROW_DELETED","GRID_LOADER","DERIVED_FIELDS","column_label","field","getValue","RESOLVE_FIELD_VALUE","element","useSourceMap","list","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","push","gridModel","BASE","TABLE_BUILDER__BLOCK_UI_EVENTS","TABLE_BUILDER__SHOW_MODAL","TABLE_BUILDER__HIDE_MODAL","NOW_MODAL__OPENED_SET","POPOVER_PANEL_TAG","FIELD_META","MULTI_LINE_LENGTH","VALUE","SN_TB_FIELD__KEYDOWN","SN_TB_FIELD__OUTSIDE_CLICK","SN_TB_FIELD__FINISH_EDITING","SN_TB_FIELD__CLOSE_OFF","SN_TB_FIELD__SET_INVALID","INTERNAL_TYPE_CHANGED","FOOTER_PRIMARY_BUTTON_CLICKED","TB_PROVIDER_ID","TB_PROVIDER_PROPERTIES","tableStructureData","TBS_DATA_META","TBS_DATA_IS_FETCHING","TBS_DATA_IS_ERROR","TBS_DATA_COLUMNS","IS_TBS_DATA_FETCHED","IS_TABLE_IN_READ_ONLY","SHOW_WELCOME_SCREEN","SN_TB_REFERENCE__FETCH_RESULTS_INITIATED","SN_TB_REFERENCE__FETCH_RESULTS_LEGACY","SN_TB_REFERENCE__FETCH_RESULTS_STANDARD","SN_TB_REFERENCE__FETCH_RESULTS_TABLE","SN_TB_REFERENCE__FETCH_RESULTS_STARTED","SN_TB_REFERENCE__FETCH_RESULTS_LEGACY_SUCCEEDED","SN_TB_REFERENCE__FETCH_RESULTS_STANDARD_SUCCEEDED","SN_TB_REFERENCE__FETCH_RESULTS_TABLE_SUCCEEDED","SN_TB_REFERENCE__FETCH_RESULTS_FAILED","SN_TB_REFERENCE__VALUE_SET","SN_TB_REFERENCE__SET_INVALID","SN_TB_REFERENCE__CLOSE_OFF","CHECK_VALID","SHOW_MESSAGES","NOTIFY_VALIDITY","REFIT_RESULTS_PANEL","NOW_POPOVER__CONTENT_HIDDEN","NOW_POPOVER__CONTENT_VISIBLE","NOW_TYPEAHEAD__VALUE_SET","NOW_TYPEAHEAD__SELECTED_ITEM_SET","NOW_TYPEAHEAD__INTERACTION_FINISHED","DEFAULT_PANEL_LABEL","FAILED_SEARCH","UI_REF_LIST_API","TABLE_LIST_API","VARIANTS","STANDARD","LEGACY","TABLE","referenceQuery","TABLE_RESULT_OPTIONS","LIMIT","ORDER_BY","__TECTONIC__$servicenow_now_icon","__TECTONIC__$servicenow_ui_effect_http","__TECTONIC__$servicenow_now_button","ELEMENT_LIST_TO_KEEP_ROW_FOCUS","GRID_NAVIGATION__UPDATE_TABBABLES","GRID_NAVIGATION__ALLOW_CURRENT_TABBABLE","GRID_NAVIGATION__FOCUS_ENTER_CELL","GRID_NAVIGATION__FOCUS_EXIT_CELL","GRID_NAVIGATION__MOVE_FOCUS","GRID_NAVIGATION__RETAIN_CELL_FOCUS","GRID_NAVIGATION__FOCUS_NEW_RECORD","GRID_NAVIGATION__TRAP_CELL_WIDGET","NOW_DROPDOWN__OPENED_SET","CLEAR_TRAP_CELL","alerts","ALERTS","NOW_INPUT__INPUT","FINISHED_EDIT","VALUE_SET","MESSAGES","INVALID","STATUS_CRITICAL","STATUS_INFO_ICON","NUMERIC_MIN_LIMIT","NUMERIC_MAX_LIMIT","__TECTONIC__uuid_3_4_0","generateColumnDefs","columns","tableInGrid","hostTable","orderByColumn","orderByIsDescending","isTableInReadOnly","column","colType","FieldTypeFactory","getInstance","isSorted","sortOrder","label","textAlign","accessor","internalType","primitiveType","mandatory","table","styles","getCellModel","gridRows","gridColumns","cellIdentity","rowIndex","columnIndex","columnDef","rowData","setCellData","updateProperties","row","rowObj","setCellDataBatch","batch","matches","filter","j","getFieldModel","cellModel","getRowModel","getRowIdentifier","addControlsAsColumns","getTablesInGrid","perspective","tableMetaData","getEmptyObjectCopy","objectStructure","fieldInfo","canWrite","displayValue","rowDataObj","prop","additionalRowData","getColumnIndex","derivedField","findIndex","mergeWithGridTransactions","records","gridTransactions","mergedRecords","record","gridTransaction","action","inputs","TRANSACTION_ACTIONS","GRID_ROW_MODIFIED","recordObj","GRID_ROW_DELETED","GRID_ROW_ADDED","getColumnLabel","find","getFieldLabel","getFieldValueFromRecord","fieldName","getTableUrlForTableBuilder","isReferenceUpdated","recordSysId","isNewRecord","txn","reference","TRANSACTION_MODEL__UI_TRANSACTION_LOG","TRANSACTION_MODEL__UI_TRANSACTION_ADD","TRANSACTION_MODEL__UI_TRANSACTION_UPDATE","TRANSACTION_MODEL__UI_TRANSACTION_UPDATE_BATCH","TRANSACTION_MODEL__UI_TRANSACTION_PRUNE","TRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK","TRANSACTION_MODEL__UI_TRANSACTION_NOTIFY_STUDIO","TRANSACTION_MODEL__UI_TRANSACTIONS_REFURBISH","TRANSACTION_MODEL__UI_TRANSACTION_DELETE","IS_TRANSACTION_MODEL_DIRTY","GRID_TRANSACTIONS","CHOICE_TRANSACTIONS","MANDATORY_FIELDS","TABLE_SAVE__SAVE_INITIATED","TABLE_SAVE__SAVE_PROCESS","TABLE_SAVE__SAVE_COMPLETED","TB_SAVE_IS_SAVE_IN_PROGRESS","TB_SAVE_IS_SAVE_ERROR","TB_SAVE_SAVE_ERRORS","TB_SAVE_SAVE_RESULT","BASE_UPDATE_API","METHOD_POST","METHOD_PUT","DIRECTION_UP","DIRECTION_DOWN","CHOICE_SEQ_INTERVAL","CHOICE_LABEL","CHOICE_VALUE","NEW_CHOICE_INPUT","VARIANT_EDITABLE","VARIANT_VIEW","CHOICES","CHOICE_TYPE","NOW_INPUT__VALUE_SET","NOW_INPUT__INVALID_SET","NOW_SELECT__SELECTED_ITEM_SET","ADD_CHOICE","REORDER_CHOICE","DELETE_CHOICE","CHOICE_SET_CHANGED","SCROLL_BOTTOM_CHOICE_LIST","GET_API_PATH","BATCH_API_PATH","PROPERTY_INFO_MESSAGES","is_extendable","auto_number","super_class","prefix","number","maximum_digits","accessible_from","href","target","access_control","AUTO_NUMBER_DEFAULTS","NUMBER","MAXIMUM_DIGITS","PREFIX_MAX_LENGTH","MAXIMUM_DIGITS_UPPER_LIMIT","BASE_NUMBER_MAX_LENGTH","BASE_NUMBER_UPPER_LIMIT","TRANSFORM_FIELDS","VALIDATION_FIELDS","TABS","general_info","access","VALIDATION_MESSAGES","status","APPLICATION_ACCESS_CONTROLS","TABLE_PROPERTIES__MODAL_CLOSED","TABLE_PROPERTIES__SET_AUTO_NUMBER_DEFAULTS","TABLE_PROPERTIES__SET_AUTO_NUMBER_PREVIEW","TABLE_PROPERTIES__VALIDATE_FORM","NOW_MODAL_OPENED_SET","NOW_TABS__SELECTED_ITEM_SET","NOW_CHECKBOX__CHECKED_SET","NOW_SELECT_SELECTED_ITEM_SET","TABLE_PROPERTIES__FETCH_INITIATED","TABLE_PROPERTIES__FETCH_STARTED","TABLE_PROPERTIES__FETCH_SUCCEEDED","TABLE_PROPERTIES__FETCH_FAILED","TABLE_PROPERTIES__UPDATE_REQUESTED","TABLE_PROPERTIES__UPDATE_INITIATED","TABLE_PROPERTIES__UPDATE_STARTED","TABLE_PROPERTIES__UPDATE_SUCCEEDED","TABLE_PROPERTIES__UPDATE_FAILED","AUTO_NUMBER__INSERT_INITIATED","SHOW_NON_EXTENDED","ENABLE_NON_EXTENDED_FILTER","NON_EXTENDED_FILTER_VALUE_SET","FILTER_NON_EXTENDED","transactionModel","__TECTONIC__$servicenow_now_modal","USER_DATA__UPDATE_PREF","USER_DATA__PREF_UPDATE_STARTED","USER_DATA__PREF_UPDATE_SUCCEEDED","USER_DATA__PREF_UPDATE_FAILED","USER_DATA__PREF_UPDATE_ERROR","FieldType","entry","cellData","TB_ALERTS__ADD_ALERTS","TB_ALERTS__CLEAR_ALERTS","TB_ALERTS__SHOW_SESSION_ALERTS","TB_ALERTS__SESSION_ALERTS_REQUESTED","TB_ALERTS__SESSION_ALERTS_SUCCEEDED","NOW_ALERT_LIST__ITEMS_SET","tableInitializer","TB_SYS_ID","TB_PERSPECTIVE","TB_IS_INPUT_READY","TB_IS_IN_AES","TB_TRANSACTION_SCOPE","TB_NAMESPACE","TB_ROUTES","TABLE_INITIALIZER__ROUTE_MATCH_FOUND","TABLE_INITIALIZER__ROUTE_MATCH_NOT_FOUND","TABLE_INITIALIZER__INIT","DEFAULT_SCOPE","OPERATIONS","DELETE","RECORD_WATCHER__DO_SUBSCRIBE","RECORD_WATCHER__MESSAGE_RECEIVED","RECORD_WATCHER__RECORD_DELETED","__TECTONIC__$servicenow_now_loader","focusTrap","Map","defaultConfig","moveFocusInsideTrap","firstElement","lastElement","TABBABLES_SELECTOR","findFirstTabbableElement","TRAP_CELL_WIDGET_TAGS","findTabbableElement","findLastTabbableElement","findFirst","tabbies","reverse","index","result","undefined","tabby","possibleResult","isTabbable","node","disabled","offsetParent","getComputedStyle","visibility","tagName","getTabIndex","findActiveElement","activeElement","elementHasActiveElement","contains","tabIndex","parseInt","getAttribute","isNaN","contentEditable","deactivateFocusTrap","tabbyTrapEntry","lastKeydown","firstKeydown","firstTabby","lastTabby","delete","activateFocusTrap","config","evt","set","assignProvider","TB_SAVE_SAVE_ERROR","TB_SAVE_IS_SAVE_ERRORS","SN_TB_TYPE_EDIT__SET_DEPENDENT","SN_TB_TYPE_EDIT__FINISHED_EDIT","SN_TB_TYPE_EDIT__VALUES_SET","SN_TB_TYPE_EDIT__CLOSE_OFF","SN_TB_TYPE_EDIT__SET_DEFAULT_MAX_LENGTH","DEFAULT_MAX_LENGTH","DEPENDENT_WHITE_LIST","string","choice","TYPE_NUMBER","__TECTONIC__$servicenow_now_input","NONE_OPTION_ID","NONE_OPTION_LABEL","SELECT_DROPDOWN_LIST_IDENTIFIER","ITEMS","DEFAULT_OPTION","TbIcon","ndsIcon","className","size","src","aria-hidden","on-error","e","currentTarget","style","__TECTONIC__$servicenow_library_enhanced_utils_19_8_1","TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_INITIATED","TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_STARTED","TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_SUCCEEDED","TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_FAILED","TABLE_STRUCTURE_DATA__TABLE_META_DATA_CHANGED","tableSave","__TECTONIC__$servicenow_now_select","REFIT_EDIT_POPOVER","EDIT_POPOVER_ID","SN_TB_HEADER__DELETE_CLICKED","SN_TB_HEADER__DELETE_RECORDS_CLICKED","SN_TB_HEADER__ADVANCED_CLICKED","SN_TB_HEADER__PREVIEW_CLICKED","TABLE_DELETE_VALIDATION_INITIATED","TABLE_DELETE_VALIDATION_STARTED","TABLE_DELETE_VALIDATION_SUCCEEDED","TABLE_DELETE_VALIDATION_FAILED","SN_TB_HEADER__EDIT_FORM_CLICKED","SN_TB_HEADER__REFRESH_FIELDS_CLICKED","SN_TB_HEADER__REFRESH_FIELDS_INITIATED","DELETE_ACTION_ID","ADVANCE_ACTION_ID","DELETE_RECORDS_ACTION_ID","EDIT_FORM_ACTION_ID","REFRESH_FIELDS_ACTION_ID","TABLE_DELETE_VALIDATION_API_PATH","NOW_MODAL_FOOTER_ACTION_CLICKED","UPDATE_WELCOME_PREFERENCE","BUTTON_NEXT","BUTTON_PREVIOUS","BUTTON_GET_STARTED","WELCOME_SCREEN_PREFERENCE_KEY","SCREENS_INFO","footerButtons","AddNewGridItem","dispatch","actionName","bare","orientation","role","aria-label","tabindex","class","on-click","on-keydown","audio","boolean","calendar_date_time","color","conditions","condition_string","currency","currency2","data_structure","decimal","document_id","domain_id","due_date","field_name","file_attachment","float","glide_date","glide_date_time","glide_duration","glide_list","glide_time","glide_utc_time","html","insert_timestamp","integer","ip_addr","journal","journal_input","journal_list","longint","nds_icon","password","password2","percent_complete","phone_number_e164","price","script","script_plain","simple_name_values","string_full_utf8","table_name","translated_html","translated_text","url","user_image","video","wiki_text","workflow","date","datetime","time","userData","__TECTONIC__$servicenow_ui_effect_graphql","rwHandle","recordWatcher","__TECTONIC__$servicenow_now_toggle","__TECTONIC__$servicenow_now_popover","bulkRequest","async","requestsConfig","requests","requestor","allResponses","allSettled","failedConfigsIndx","responses","reProcessed","allResponse","acc","curr","resp","reason","response","processFailedByUnServiced","BULK_REQUEST__STARTED","BULK_REQUEST__COMPLETED","snHttp","snHttpFactory","xsrfToken","g_ck","batching","promises","all","method","options","request","__TECTONIC__$servicenow_now_label_value","__TECTONIC__$servicenow_now_highlighted_value","__TECTONIC__$servicenow_now_tooltip","NOW_TEXTAREA__INPUT","decideControl","getControlTypeAndProps","isNestedPanel","parentPanel","nowPopover","getRootNode","createBatch","dependentValues","batchItem","isDynamicEditContent","shouldUpdateTabbales","oldValue","fieldMeta","flag","getEditableComponent","state","properties","triggerValidate","controlType","props","isValid","messages","Control","controlProps","checked","parse","getToggleControl","tableName","getTbTypeEditControl","getTbReferenceControl","variant","allowEmptyValue","placeholder","invalid","autofocus","getNumericControl","items","choices","selectedItem","getChoiceControl","maxlength","Number","getTextareaControl","getStringControl","isReferenceControl","fieldMetaOverride","tableMetadata","overrideProps","isNumberControl","isChoiceControl","deleted","referenceInfo","fieldLabel","showReferencePicker","shouldShowReferencePicker","waitUntilPopoverLayerEvents","meta","popover","nodeName","popoverId","getComponentId","Boolean","___NDS_LAYER_EVENTS___","le","overridePopoverEvents","console","warn","layerEvents","events","getSize","complexWidget","isComplexWidget","initializeState","previousValue","previousDisplayValue","__TECTONIC__$servicenow_now_dropdown","gridNavigation","getState","behaviors","getCellFromGrid","grid","currentFocus","cell","setNewFocus","getTableCellFromEvent","newFocus","shouldFocus","toggleRowFocusClass","currentCell","cellNode","addIndexAndFocus","setTrapCell","removeTabIndex","classList","tabbables","getTabbables","addRowFocusClass","refreshNavTabbables","newCell","rowNum","rows","removeRowFocusClass","currentRowNum","newRowNum","generateTabbables","newGrid","cells","querySelector","k","getNodePosition","rowNode","parentElement","children","closest","__TECTONIC__$servicenow_now_checkbox","getAutoNumberPreview","maxDigits","numberValue","numberValueLen","padEnd","isScopeRestricted","getAutoNumberDefaults","tableLabel","autoNumberDefaults","substr","toUpperCase","auto_number_preview","populateAutoNumberFields","transformBaseNumberField","validateMandatoryField","validateBaseNumberField","validationMessages","validateMaximumDigitsField","getModalFooterButtons","isFormValid","isSubmitting","clickActionType","isAccessControlDisabled","isTableReadOnly","scopeRestricted","read_access","setAccessForPrivateScope","setAccessForPublicScope","CONFIRM_DELETE__DELETE_REQUESTED","CONFIRM_DELETE__DELETE_INITIATED","CONFIRM_DELETE__DELETE_SUCCEEDED","CONFIRM_DELETE__DELETE_FAILED","CONFIRM_DELETE__DELETE_FINISHED","CONFIRM_DELETE__DELETE_FIELD_DATA_CHECK","CONFIRM_DELETE__DELETE_FIELD_DATA_CHECK_FAILED","CONFIRM_DELETE__CAN_DELETE_FIELD","CONFIRM_DELETE__CANNOT_DELETE_FIELD","DELETE_RECORDS_INITIATED","DELETE_RECORDS_SUCCEEDED","DELETE_RECORDS_FAILED","STATUS_CODE_TO_ALLOW_FIELD_DELETION","getMoreActions","canDelete","moreActions","getPreviewUrl","getFormDesignerUrl","createCustomElement","renderer","snabbdom","initialState","blockUIEvents","ModalComponent","default","schema","enum","view","actionHandlers","component-id","manageItems","renderAlertList","isInputReady","showWelcomeScreen","Fragment","renderWelcomeScreen","isTableStructureFetched","isGridDataFetched","isGridModelReady","isGridDataError","isGridDataFetching","gridCurrentPage","gridLoader","showNonExtended","enableNonExtendedFilter","renderLoader","th","GridHeaderCell","td","GridBodyCell","gridBorderRadius","addNewFieldBorderRadius","TopSection","ariaTitle","PaginationControl","total","gridRecordCount","selectedPageSize","gridPageSize","selectedPage","pageSizes","focusRetainableCell","prevPageConfig","limit","offset","selectable","gridDataFetchInitiated","createHttpEffect","pathParams","queryParams","startActionType","successActionType","errorActionType","validateFieldInitiated","dataParam","gridCellValidationStarted","coeffects","payload","TB_ACTION_TYPES","shouldBlock","isLoading","gridCellValidationCompleted","errors","validationData","isEditable","popoverPositionTarget","errorInfo","hasError","TRS_ACTION_TYPES","updateDerivedField","derivedFieldValue","colIndex","derivedCellIdentity","syncGridModelWithTransactions","transactions","transformedRows","onControlButtonClicked","button","fetchTableDetails","deleteControlClicked","internal_type","fieldType","actualTableName","isDataCheckRequired","template","isTable","needUserConfirmationInput","showDeleteSuccessInfo","deleteRowFromGridModel","sysIdToRemove","resultantGridRows","_","pageSize","count","choiceTypes","tableColumns","gridData","transformedColumns","updateTransactions","effect","validationInput","recordId","resolvedValue","sysparm_transaction_scope","modifier","delay","emptyRowObj","origin","direction","query","preferences","TUD_ACTION_TYPES","onUpdateSuccess","currentSortOrder","nextSortOrder","message","title","search_query","isInAppEngineStudio","subtitle","open","details","sys_id","TEST_GRID_MODEL","log","userPrefUpdateEffect","createGraphQLEffect","variableList","IntegerType","BooleanType","ControlDelType","minWidth","tbsFetchInitiated","tbsFetchStarted","tbsFetchSucceeded","isReadOnly","isRunningScopeDifferent","preferenceData","shouldShowNonExtendedFilter","FILTER_ACTION_TYPES","tbsFetchFailed","error","ALERT_ACTION_TYPES","detail","isBaseClass","isSoloClass","uiTransactionUpdateBatch","transactionAction","updatedTrx","isNewField","transaction","createTransaction","fieldModel","updatedTransaction","updateTransactionNewField","updateTransaction","newGridTransactions","assign","uiTransactionPrune","uiTransactionDirtyCheck","doesTransactionsAvailable","uiTransactionNotifyStudio","isInAES","isDirty","uiTransactionsRefurbish","GRID_MODEL_ACTIONS","uiTransactionDelete","resultantGridTransactions","TEST_TRANSACTION","input","getTransactionScope","updates","isInsideAES","TBS_ACTION_TYPES","location","pathname","matchedRoute","findMatchedRoute","routeParams","extractURLParams","RW_ACTION_TYPES","tbSysId","isDeleted","createPatternMatchRegExp","patternString","wildcardRegExp","regexpString","test","RegExp","pattern","patternPaths","urlPaths","params","patternSegment","charAt","basePath","routes","pathName","route","isAppEngineStudio","urlSearch","URLSearchParams","search","has","buildAmbQuery","subscribe","createAmbSubscriptionEffect","messageReceivedActionType","__TECTONIC__$servicenow_ui_effect_amb","renderControls","computedContext","context","hidePadding","tooltipContent","configAria","append-to-payload","renderDeleteControl","renderUnsavedRowIndicator","renderLockControl","renderReadonlyCell","isControl","canCellWritable","canCellEditable","tabbable","shouldAddTabbableClass","on-mouseover","offsetWidth","scrollWidth","click","getBodyCellAttributes","renderCellIcon","typeValue","choiceType","renderAdditionalInfo","renderReferenceOpener","getBodyCellUI","canRowWritable","renderRowControl","switch","renderToggleComponent","manage-opened","opened","hide-tail","positions","positionTarget","constrain","minHeight","append-to-meta","slot","getFieldMeta","renderEditableCell","isCellWritable","isCellEditable","isControlType","registerControlCellEvents","attrs","parentNode","manageRowFocus","trClassList","cellWriteStatus","cellEditStatus","hasDependent","disableFooter","required","renderEditableComponent","renderFooter","panelLabel","isSelected","isSetAfterInteractionFinished","isFetching","isPanelOpen","computed","isDependent","eventHandlers","hide-padding","GRID_NAV_ACTION_TYPES","TB_FIELD_ACTIONS","renderSearchIcon","__TECTONIC__$servicenow_now_typeahead","header-label","chars","record-sys-id","__TECTONIC__$servicenow_now_record_list_connected","NOW_RECORD_LIST_CONNECTED__ROW_CLICKED","TB_ACTIONS","stopPropagation","COMPONENT_DOM_READY","COMPONENT_PROPERTY_CHANGED","actionTypes","doValidation","getPayloadByVariant","getActionByVariant","shouldDispatch","buildRequests","processBulkResponses","referenceResults","makeOptions","processRefResponse","processTablesResponse","isValidValue","checkIsValidValue","valueSetAndClosed","refit","getErrorContent","getTableSearchQuery","order_by","referenceList","sublabel","associateInfos","getRefListUrl","totalCount","len","sysparm_fields","sysparm_reference_field","sysparm_referring_table","sysparm_referring_record_id","sysparm_reference_key","sysparm_transient_search_value","sysparm_transient_search_fields","sysparm_limit","every","refResponse","headers","metadata","reference_key","display_value","processLegacyRefResponse","additionalInfo","refData","GlideLayout_Query","referenceDataRetriever","matchesCount","referenceDataList","referenceData","__TECTONIC__sn_http_request_18_0_1","relatedTarget","focusout","propAlerts","normalizeAlerts","noAlerts","processNotifications","alert","notifications","text","checkMandatoryFields","TRANSACTION_ACTION_TYPES","header","ALERTS_ACTIONS","requestsModel","buildRequestsModel","choiceRequestModel","buildChoiceRequestModel","BULK_ACTIONS","getAllRequests","choiceResponses","allValid","invalidReferenceRecords","validateSavedReferenceValues","referenceRequestModel","buildReferenceRequestModel","isAllSucceeded","failures","processResponses","GRID_ACTIONS","getFieldsForUpdate","isInputValid","getFieldsForInsert","generateGraphQLVariableArgs","variableArguments","getUpdateRequestAPI","fields","getCreateRequestAPI","getDeleteRequestAPI","buildRequestDataForModification","buildRequestDataForCreation","attr","buildChoiceRequestData","sequence","buildGqlRequestDataForModification","requestConfigs","requestConfig","choiceObj","buildGraphqlRequestConfig","model","hasInvalidReference","requestPayload","reqModel","mandatoryFields","inputsObj","columnName","fieldObj","COMPONENT_DISCONNECTED","filterModel","appended","category","GM_ACTIONS","showDependent","isAllValid","validate","timestamp","max_length","renderDependent","helperContent","onUpdate","vnode","inputElm","elm","manageInvalid","hook-update","trimmedValue","fieldValue","isInValid","validateValue","trim","val","getDisplayValue","toLocaleString","newChoice","shouldEnableAddBtn","deletedChoices","renderEditableComp","step","data-testId","validChoiceCount","position","config-aria","renderChoices","choiceCountRef","hook-insert","hook-destroy","target-ref","renderViewComp","deleteChoice","removeChoice","addChoice","updatedChoices","generateSequences","focusChoiceInput","reorderChoices","reorder","currPos","onInputValueSet","updateChoice","initializeChoices","isInvalid","isAnyChoiceItemInvalid","some","finalChoices","choiceList","scrollTo","top","scrollHeight","behavior","validChoices","choiceOptions","choiceIndex","getChoiceIndex","reorderedArray","targetArray","fromIndex","toIndex","temp","swap","remainingChoices","deletedChoice","TB_REF_ACTIONS","updateDependentValues","TB_INPUT_ACTIONS","TB_CHOICE_ACTIONS","shouldShowDependent","deriveDependentValues","currCellIdentity","getValueFromModel","getInfoMessage","resize","__TECTONIC__$servicenow_now_textarea","globalKeydownListener","KeyboardEvent","retainFocus","globalClickListener","COMPONENT_BOOTSTRAPPED","COMPONENT_TREE_RENDERED","onKeyDown","isSameNode","fieldComponentValueChanged","eventPath","firstRenderOnConnect","TB_GRID_ACTIONS","panel","forceUpdate","shouldRefreshTabbales","dependentUpdateBatch","clearReference","clearMaxlength","GRID_MODEL_ACTION_TYPES","TB_TYPE_EDIT_ACTIONS","TB_SELECT_ACTIONS","TB_TEXTAREA_ACTIONS","sortName","doUpdateGridSort","sortChoices","getColumnHeaderMoreOptionsDateField","getColumnHeaderMoreOptions","aria-sort","renderSortIndicator","on-focus","GRID_NAV_ACTIONS","on-blur","selectedItems","select","hideCaret","hideLabel","trigger","trapCell","trapCellWidget","focusInInteractiveWidget","focusRetainerElm","newRowAdded","rowDeleted","doDispatchMoveFocus","keydownHandler","clickHandler","cellObj","focusOutHandler","sourceElement","focusHandler","propertyName","gridTabbables","focusCell","focusNode","localState","newRowFocus","newCellFocus","removeAttribute","newRowStart","scrollIntoView","paginationProperties","__TECTONIC__$servicenow_now_pagination_control","editPopover","headerCell","bodyCell","getCellContent","headerContext","hidden","renderHeader","columnDefs","cellContext","renderBody","fnOrValue","showTableProperties","disableSave","isTransactionModelDirty","isTableSaveInProgress","targetRef","previousElementSibling","renderReadOnlyInfo","TB_SAVE_ACTIONS","renderTableProperties","modalOpen","isError","tabs","selectedTab","fieldValidationMsgs","tableProperties","renderInfoIcon","infoMsg","padding","renderGeneralInfo","generalInfo","isAdvancedExpanded","aria-readonly","extends_table_label","controls","iconStart","expanded","align","renderAutoNumberPreview","max","renderAutoNumberFields","renderModalBody","tab","accessInfo","create_access","update_access","delete_access","renderAccess","footer-actions","__TECTONIC__$servicenow_now_tabs","__TECTONIC__$servicenow_now_collapse","onNDSComponentValueChanged","tbpFetchInitiated","tbpFetchStarted","tbpFetchSucceeded","accessControls","ws_access","tbpFetchFailed","tbpUpdateInitiated","tbpUpdateStarted","tbpUpdateSucceeded","tbpUpdateFailed","onIconicButtonClicked","extends_table_sys_id","onSelectItemSet","sys_number_sysId","rest_requests","exclude_response_headers","sysNumberReq","batch_request_id","enforce_order","isDeleting","userInput","isRecord","onDeleteSuccess","userInputValid","shouldShowDeleteSuccessInfo","headerLabel","getModalHeaderLabel","footerActions","confirmText","pathType","progressbar","renderInfoText","renderUserConfirmationInput","__TECTONIC__$servicenow_now_progress_bar","deleteAppFileEffect","deleteFieldTableData","deleteRecordsInitiated","sysparm_query","sysparm_count","GM_ACTION_TYPES","TM_ACTION_TYPES","ALERT_ACTIONS","stats","primaryText","secondaryText","primaryHandler","secondayHandler","secondaryHandler","tableDeleteValidationInitiated","TBP_ACTION_TYPES","isExtended","extendedTables","tables","screenNumber","screens","renderIcons","noOfScreens","icons","level","__TECTONIC__$servicenow_now_heading","footerActionClicked","footerAction","modalClosed","updateWelcomePreference","__TECTONIC__$servicenow_now_alert"],"mappings":"qDACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,8C,8ECAoBC,EAAxBA,sBAAwB,CACpC,WACA,YACA,cACA,gBAGwBC,EAAZA,UAAY,CACxBC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,SAAU,UACVC,YAAa,aACbC,WAAY,YACZC,WAAY,YACZC,MAAO,IACPC,QAAS,SACTC,UAAW,WACXC,KAAM,OACNC,IAAK,MACLC,IAAK,OAIyBC,EAAlBA,gBAAkB,CAC9BC,eAAgB,kBAGKC,EAATA,OAAS,CACrBC,cAAe,gBACfC,WAAY,iBACZC,WAAY,cAGaC,EAAbA,WAAa,CAAC,GAAI,GAAI,GAAI,IAEGC,EAA7BA,2BAA6B,IACCC,EAA9BA,4BAA8B,IAEhBC,EAAdA,YAAc,CAC1BC,OAAQ,WACRC,KAAM,8BAGmBC,EAAbA,WAAa,CACzBF,OAAQ,OACRC,KAAM,uBAIoBE,EAAdA,YAAc,CAC1BC,QAAS,UACTC,OAAQ,SACRC,KAAM,OACNC,QAAS,UACTC,UAAW,kBACXC,gBAAiB,mBAIYC,EAAjBA,eAAiB,CAC7BL,OAAQ,SACRM,cAAe,gBACfC,UAAW,YACXC,OAAQ,UAIoBC,EAAhBA,cAAgB,CAC5BF,UAAW,YACXC,OAAQ,SACRE,cAAe,gBACfC,WAAY,aACZC,cAAe,gBACfC,QAAS,UACTC,aAAc,iB,cC3Ef9E,EAAOD,QAAUgF,0B,cCAjB/E,EAAOD,QAAUiF,iC,4YCiBDC,WAAT,SAAoB/D,GAC1B,MAAiD,sBAA1CP,OAAOkB,UAAUqD,SAAS9E,KAAKc,I,EAOvBiE,SAAT,SAAkBjE,GACxB,MAAiD,oBAA1CP,OAAOkB,UAAUqD,SAAS9E,KAAKc,I,EAgJvBkE,sB,EA8FAC,qBAAT,SAA8BC,GACpC,MAAMC,EAAY,GACZC,EAAeC,GACpB9E,OAAO+E,KAAKH,GAAWI,QAAQC,IAC9BL,EAAUK,GAAIH,KAGhB,MAAO,CACNI,IAAID,EAAIE,GAC+B,IAAlCnF,OAAO+E,KAAKH,GAAWQ,QAC1BC,OAAOC,iBAAiBX,EAAWE,GAAc,GAElDD,EAAUK,GAAME,GAEjBI,OAAON,UACCL,EAAUK,GAEqB,IAAlCjF,OAAO+E,KAAKH,GAAWQ,QAC1BC,OAAOG,oBAAoBb,EAAWE,GAAc,MA1RxD,I,EAAA,Q,oCACA,QAIA,OAKA,OACA,QAuBsCY,EAAzBA,uBAAyB,CAACC,EAAe,GAAIC,GAAY,KACrE,IAAIC,EAAa,GACjB,OAAKD,GAELD,EAAaV,QAAQa,IACpBD,EAAY,WAAUC,IAAU,IAE1BD,GALgBA,GAaQE,EAAnBA,iBAAmB,CAACJ,EAAe,GAAIC,GAAY,KAC/D,IAAIC,EAAa,GACjB,OAAKD,GAEDD,EAAaK,SAAS,aAAeL,EAAaK,SAAS,eAC9DH,EAAW,eAAgB,GAE3BF,EAAaK,SAAS,cACtBL,EAAaK,SAAS,kBAEtBH,EAAW,iBAAkB,GAE7BF,EAAaK,SAAS,aACtBL,EAAaK,SAAS,iBAEtBH,EAAW,gBAAiB,GAE5BF,EAAaK,SAAS,gBACtBL,EAAaK,SAAS,kBAEtBH,EAAW,kBAAmB,GACxBA,GAnBgBA,GA4BcI,EAAzBA,uBAAyBC,IACrC,IAAKA,EAAK,MAAO,GAEjB,MAAMC,EAAQD,EAAI1B,WAAW4B,MAAM,KAKnC,OAHCD,EAAM,GAAGE,QAAQ,wBAAyB,MACzCF,EAAM,GAAK,IAAMA,EAAM,GAAK,K,EASlBG,mBAAN,MACNC,cACCC,KAAKC,IAGDnB,OAAOoB,aAAaC,0BAGzBC,uBAAuBC,GACtBL,KAAKC,IAAIG,uBAAuBC,GAGjCC,kBACKN,KAAKC,KACRD,KAAKC,IAAIM,eAAe,CAAEC,mBAAmB,IAC7CR,KAAKC,IAAIK,mBAETxB,OAAO2B,QAITF,eAAeF,GACdL,KAAKC,KAAOD,KAAKC,IAAIM,eAAeF,KAWnBzG,EAANA,IAAM,CAAC8G,EAAKC,EAAMC,KAC9B,IAAKD,EAAM,OAEX,OADkBE,MAAMC,QAAQH,GAAQA,EAAOA,EAAKI,MAAM,gBAE/CC,OAAO,CAACC,EAAS3G,IAAQ2G,GAAWA,EAAQ3G,GAAMoG,IAC5DE,GALK,MAYMM,EAAUA,EAAVA,QAAU,CAACxB,EAAKyB,EAAYC,EAAW,IAClDD,EAAazB,GAAOA,EAAM0B,GAC1BA,EAAW1B,GAAOA,EAAMyB,EAKYE,EAAzBA,uBAAyB,CAACC,EAAOC,SAAUC,KACvD,IAAKA,EAAU,MAAO,GAElBF,EAAKG,aAAYH,EAAOA,EAAKG,YACjC,MAAMC,EAAQJ,EAAKK,iBAAiBH,GACpC,OAAOX,MAAMe,KAAKF,IAGqBG,EAA3BA,yBAA2B,CAACC,EAAMC,KAC9CtI,OAAO+E,KAAKsD,GAAMrD,QAAQuD,IACzBD,EAAY,CACXE,UAAW,MACXtB,KAAMqB,EACNhI,MAAO8H,EAAKE,GACZE,cAAc,OAUV,SAAShE,GAAoB,OACnCiE,EAASZ,SAASa,KADiB,QAEnCC,GAAU,IAAAC,oBAFyB,KAGnCC,GAAO,EAH4B,SAInCC,GAAW,IAEX,IAAKL,EAAQ,OAAO,KAEpB,MAAMM,EAAQD,GAAY,EAAI,EACxBE,GAAgB,IAAAC,mBAAkBR,GAClCS,EAAeF,EAAcG,QAAQR,GAE3C,IADmBnB,EAAQ0B,EAAeH,EAAO,EAAGC,EAAc7D,UAChD0D,EAAM,OAAO,KAhBhC,IAAa/H,EAAGrB,EAoBf,OADauJ,GAnBDlI,EAkBUoI,EAAeH,EAlBtBtJ,EAkB6BuJ,EAAc7D,QAjBjDrE,EAAIrB,EAAKA,GAAKA,KAmBR,KAGc2J,EAAjBA,eAAiB,CAACvE,EAAOwE,KACrC,GAAIxE,EAAMjE,MAAQW,YAAUa,IAAK,OAEjCyC,EAAMyE,iBACN,MAAMC,EAAc/E,EAAoB,CACvCiE,OAAQY,EACRP,SAAUjE,EAAMiE,WAGbS,GAAaA,EAAYC,SAQKC,EAAtBA,oBAAsB,CAACC,EAAMC,IACrCC,kBAAgBC,iBAAiBH,GAC7BE,kBAAgBC,iBAAiBH,GAGlC,CACNI,MACU,KAATJ,EACG,GACAC,GAAcC,kBAAgBG,mBAAmBJ,GACrDK,KAAM,GACNC,aAAa,IAAA1J,GAAE,iBAIJ,EAAA2J,UAAuC,CACnDC,GAECC,UAAUxH,6BACVyH,aAAc,wCAAuCD,OACrDE,gBAAgBzH,iCAGV,IAAI0H,QAAQ,CAACC,EAASC,KAC5B,MAAMC,EAAU,IAAIC,KACdC,EAAmBF,GAAWC,KAAKE,MAAQH,EAG3CI,EAAmB,KACpBF,EAAiBF,IAAYN,IAChCW,cAAcC,GACdP,EAAOJ,KAGHW,EAAWC,YAAY,KAC5B,IACCV,QAAQW,KAAK,CACZf,KAXUgB,EAYLf,EAAUQ,EAAiBF,GAXlC,IAAIH,QAAQ,CAACC,EAASC,IAAWW,WAAWX,EAAQU,OAajDE,KAAKC,IACDA,GACHP,cAAcC,GACdR,EAAQc,IAERR,MAGDS,MAAM,KACNT,MAED,MAAOU,GACRV,IA1BWK,OA4BVb,KA2BkCmB,EAA1BA,wBAA0BnL,GAC/BA,EACLoL,cACAvF,QAAQ,cAAe,KACvBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,KACfA,QAAQ,KAAM,IACdA,QAAQ,KAAM,IAGcwF,EAAlBA,gBAAkBC,GAAcA,EAAWC,WAAW,MAE7BC,EAAzBA,uBAAyB,CAACC,EAAOC,IAErC,4BAA2BD,iEAAqEA,uCADnFE,UAAKC,KAAP,2CACuKF,yBAG9JG,EAAhBA,cAAgBnF,GAAOA,IAAQjH,OAAO+E,KAAKkC,GAAK7B,OAEjCiH,EAAfA,aAAevH,GAC3BA,EAAMwH,aAAexH,EAAMwH,eAAiBxH,EAAMoC,M,uqBCnTnD,WAEO,MAAMqF,EAAgBA,EAAhBA,cAAgB,aAQhBC,GANiBC,EAAjBA,eAAiB,CAC7BC,UAAW,IAG6BC,EAA5BA,0BAA4B,CAAC,WACZC,EAAjBA,eAAiB,MACCJ,EAAlBA,gBAAkB,QACGK,EAArBA,mBAAqBL,EACPM,EAAdA,YAAc,CAC1BC,IAAK,YACLC,KAAM,cAEoBC,EAAdA,YAAc,cACCC,EAAfA,aAAe,eAESC,EAAxBA,sBAAwB,wBACEC,EAA1BA,wBAA0B,0BAE1BC,WACZ,2DACYC,4BACZ,oDAG2BC,EAAfA,aAAe,CAC3BC,sCAA0CjB,EAAF,6BACxCkB,oCAAwClB,EAAF,2BACtCmB,sCAA0CnB,EAAF,6BACxCoB,mCAAuCpB,EAAF,0BAErCqB,iCAAqCrB,EAAF,wBACnCsB,gCAAoCtB,EAAF,uBAClCuB,8BAAkCvB,EAAF,8BAChCwB,oCAAwCxB,EAAF,2BACtCyB,sCAA0CzB,EAAF,6BACxC0B,iCAAqC1B,EAAF,wBACnC2B,oCAAwC3B,EAAF,2BACtC4B,6BAAiC5B,EAAF,oBAC/B6B,qCAAyC7B,EAAF,4BACvC8B,mCAAuC9B,EAAF,0BACrC+B,qCAAyC/B,EAAF,4BACvCgC,kCAAsChC,EAAF,yBACpCiC,6CAAiDjC,EAAF,oCAC/CkC,sCAA0ClC,EAAF,6BACxCmC,sCAA0CnC,EAAF,gBACxCoC,mCAAuCpC,EAAF,0BACrCqC,kCAAsCrC,EAAF,yBACpCsC,YAAgBtC,EAAF,eACduC,aAAiBvC,EAAF,gBAGfwC,yBAA6BxC,EAAF,4BAC3ByC,qBAAyBzC,EAAF,wBACvB0C,oBAAwB1C,EAAF,uBACtB2C,4BAAgC3C,EAAF,+BAC9B4C,8BAAkC5C,EAAF,iCAChC6C,iBAAqB7C,EAAF,oBACnB8C,iBAAqB9C,EAAF,oBAEnB+C,2BAA4B,4BAC5BC,6BAA8B,8BAC9BC,wBAAyB,yBACzBC,0CACC,2CACDC,+CACC,gDACDC,2BAA4B,4BAC5BC,2BAA4B,6BAIQC,EAAxBA,sBAAwB,qBACHC,EAArBA,mBAAqB,kBACEC,EAAvBA,qBAAuB,oBACDC,EAAtBA,oBAAsB,mBACPC,EAAfA,aAAe,cACHC,EAAZA,UAAY,WACAC,EAAZA,UAAY,WACQC,EAApBA,kBAAoB,kBACHC,EAAjBA,eAAiB,eACGC,EAApBA,kBAAoB,kBACAC,EAApBA,kBAAoB,kBACLC,EAAfA,aAAe,cACWC,EAA1BA,wBAA0B,wBACVC,EAAhBA,cAAgB,cACFC,EAAdA,YAAc,aACAC,EAAdA,YAAc,aAEGC,EAAjBA,eAAiB,CAC7BC,aAAc,CACbC,MAAO,UACPC,SAAUzQ,IAAS,IAAAmL,yBAAwBnL,KAIV0Q,EAAtBA,oBAAsB,CAClCC,QAAS,CACRF,SAAUzQ,IAAS,IAAAmL,yBAAwBnL,M,6BChG7ClB,EAAOD,QAAU,SAAS+R,GACzB,IAAIC,EAAO,GAwCX,OArCAA,EAAK7M,SAAW,WACf,OAAOgC,KAAK8K,KAAI,SAAUC,GACzB,IAAIC,EAsCP,SAAgCD,EAAMH,GACrC,IAAII,EAAUD,EAAK,IAAM,GACrBE,EAAaF,EAAK,GACtB,IAAKE,EACJ,OAAOD,EAGR,GAAIJ,GAAgC,mBAATM,KAAqB,CAC/C,IAAIC,GAYaC,EAZaH,EAiBxB,mEAHMC,KAAKG,SAASC,mBAAmBC,KAAKC,UAAUJ,MAGtC,OAhBlBK,EAAaR,EAAWS,QAAQZ,KAAI,SAAUa,GACjD,MAAO,iBAAmBV,EAAWW,WAAaD,EAAS,SAG5D,MAAO,CAACX,GAASa,OAAOJ,GAAYI,OAAO,CAACV,IAAgBW,KAAK,MAOnE,IAAmBV,EAJlB,MAAO,CAACJ,GAASc,KAAK,MAtDNC,CAAuBhB,EAAMH,GAC3C,OAAGG,EAAK,GACA,UAAYA,EAAK,GAAK,IAAMC,EAAU,IAEtCA,KAENc,KAAK,KAITjB,EAAK9R,EAAI,SAASE,EAAS+S,GACJ,iBAAZ/S,IACTA,EAAU,CAAC,CAAC,KAAMA,EAAS,MAE5B,IADA,IAAIgT,EAAyB,GACrBlT,EAAI,EAAGA,EAAIiH,KAAKnB,OAAQ9F,IAAK,CACpC,IAAI2F,EAAKsB,KAAKjH,GAAG,GACA,iBAAP2F,IACTuN,EAAuBvN,IAAM,GAE/B,IAAI3F,EAAI,EAAGA,EAAIE,EAAQ4F,OAAQ9F,IAAK,CACnC,IAAIgS,EAAO9R,EAAQF,GAKG,iBAAZgS,EAAK,IAAoBkB,EAAuBlB,EAAK,MAC3DiB,IAAejB,EAAK,GACtBA,EAAK,GAAKiB,EACDA,IACTjB,EAAK,GAAK,IAAMA,EAAK,GAAK,UAAYiB,EAAa,KAEpDnB,EAAKqB,KAAKnB,MAINF,I,uKC7CP7D,gB,uFACAsC,yB,sFACAE,wB,qFACAC,uB,oFACAF,sB,8EACAG,gB,2EACAE,a,mFACAC,qB,gFACAC,kB,mFACAE,qB,+EACAG,iB,6EACAC,e,qFAEQ+B,c,8ECdF,MAAMC,EAAOA,EAAPA,KAAO,gBAEQpF,EAAfA,aAAe,CAC3BqF,+BAAmCD,EAAF,mBACjCE,0BAA8BF,EAAF,cAC5BG,0BAA8BH,EAAF,cAC5BI,sBAAuB,yB,8ECNSC,EAApBA,kBAAoB,oBAEPC,EAAbA,WAAa,YACOC,EAApBA,kBAAoB,IAGZC,EAARA,MAAQ,QANd,MAQDR,EAAO,cAEepF,EAAfA,aAAe,CAC3B6F,qBAAyBT,EAAF,WACvBU,2BAA+BV,EAAF,iBAC7BrD,2BAA+BqD,EAAF,iBAC7BpD,6BAAiCoD,EAAF,mBAC/BW,4BAAgCX,EAAF,kBAC9BY,uBAA2BZ,EAAF,aACzBa,yBAA6Bb,EAAF,eAC3Bc,sBAA0Bd,EAAF,yBACxBe,8BAAkCf,EAAF,mC,2NCjBxBgB,kB,wFAAgBC,0BAFzB,Q,mKCASC,sB,0FAERtG,gB,+EACAuG,iB,sFACAC,wB,mFACAC,qB,kFACAC,oB,qFACAC,uB,uFACAC,yB,qFACAC,wB,gOCRD,WADA,MAAMzB,EAAO,kBAGepF,EAAfA,aAAe,CAC3B8G,yCAA6C1B,EAAF,2BAC3C2B,sCAA0C3B,EAAF,wBACxC4B,wCAA4C5B,EAAF,0BAC1C6B,qCAAyC7B,EAAF,uBACvC8B,uCAA2C9B,EAAF,yBACzC+B,gDAAoD/B,EAAF,kCAClDgC,kDAAsDhC,EAAF,oCACpDiC,+CAAmDjC,EAAF,iCACjDkC,sCAA0ClC,EAAF,wBACxCmC,2BAA+BnC,EAAF,aAC7BoC,6BAAiCpC,EAAF,eAC/BqC,2BAA+BrC,EAAF,aAC7BsC,YAAgBtC,EAAF,eACduC,cAAkBvC,EAAF,iBAChBwC,gBAAoBxC,EAAF,mBAClByC,oBAAwBzC,EAAF,uBACtB0C,4BAA6B,6BAC7BC,6BAA8B,8BAC9BC,yBAA0B,0BAC1BC,iCAAkC,kCAClCC,oCAAqC,sCAGHC,EAAtBA,qBAAsB,IAAAlV,GAAE,gBACRmV,EAAhBA,eAAgB,IAAAnV,GAAE,2BAEAoV,EAAlBA,gBAAkB,uCACDC,EAAjBA,eAAiB,iDAENC,EAAXA,SAAW,CACvBC,SAAU,qBACVC,OAAQ,mBACRC,MAAO,mBAGsBC,EAAjBA,eAAkB,iZAiBKC,EAAvBA,qBAAuB,CACnCC,MAAO,GACPC,SAAU,U,cC1DXhX,EAAOD,QAAUkX,kC,cCAjBjX,EAAOD,QAAUmX,wC,cCAjBlX,EAAOD,QAAUoX,oC,8ECAV,MAAMjK,EAAgBA,EAAhBA,cAAgB,kBAEiBkK,EAAjCA,+BAAiC,CAAC,wBAEnBlJ,EAAfA,aAAe,CAC3BmJ,kCAAsCnK,EAAF,oBACpCoK,wCAA4CpK,EAAF,0BAC1CqK,kCAAsCrK,EAAF,oBACpCsK,iCAAqCtK,EAAF,mBACnCuK,4BAAgCvK,EAAF,cAC9BwK,mCAAuCxK,EAAF,qBACrCyK,kCAAsCzK,EAAF,oBACpC0K,kCAAsC1K,EAAF,oBACpC2K,yBAA0B,0BAC1BC,gBAAoB5K,EAAF,qB,oKCdV6K,U,0FAEA7J,gB,wEAAc8J,W,8ECFvB,MAAM1E,EAAO,cAEepF,EAAfA,aAAe,CAC3B+J,iBAAkB,kBAClBC,cAAkB5E,EAAF,iBAChBsC,YAAgBtC,EAAF,eACduC,cAAkBvC,EAAF,iBAChBwC,gBAAoBxC,EAAF,mBAClB6E,UAAc7E,EAAF,cAIW8E,EAAXA,SAAW,WACDC,EAAVA,QAAU,UACFvE,EAARA,MAAQ,QAEUwE,EAAlBA,gBAAkB,WACCC,EAAnBA,iBAAmB,sBAECC,EAApBA,kBAAoB,EACAC,EAApBA,kBAAoB,Y,cCpBjCzY,EAAOD,QAAU2Y,wB,6kBCAjB,QACA,OACA,Q,oCACA,OACA,QACA,OAOkCC,EAArBA,mBAAqB,CACjCC,EACAC,EACAC,EACAC,EACAC,EACAC,IAEOL,EAAQ5G,IAAIkH,IAClB,MAAMC,EAAUC,mBAAiBC,YAAYH,GAEvCI,EAAWP,IAAkBI,EAAQ3Y,OACrC+Y,EAAYD,EACfN,EACC7L,kBACAI,iBACD,KAEH,MAAO,CACN/M,KAAM2Y,EAAQ3Y,OACdgZ,MAAOL,EAAQK,QACfC,UAAWN,EAAQM,YACnBC,SAAUP,EAAQO,WAClBC,aAAcT,EAAOS,aACrBC,cAAeV,EAAOU,cACtBhP,KAAMsO,EAAOtO,KACbF,MAAOwO,EAAOxO,MACdmP,UAAWX,EAAOW,UAClBC,MAAOjB,EACPC,YACAG,oBACAK,WACAC,YACAQ,YAAaZ,EAAQY,SAArB,CAA+BN,UAAWN,EAAQM,iBAezBO,EAAfA,aAAe,EAC3BC,WACAC,cACAC,cAAgBC,WAAUC,mBAE1B,MAAMC,EAAYJ,EAAYG,GAE9B,OADkBJ,EAASG,GAAUG,QAAQD,EAAU9Z,OAe7Bga,EAAdA,YAAc,EAC1BC,mBACAR,WACAC,cACAC,cAAgBC,WAAUC,eAC1BrR,WAEA,MAAMsR,EAAYJ,EAAYG,GAW9BI,EAAiB,CAChBR,SAXmBA,EAASjI,IAAI,CAAC0I,EAAKza,KACtC,IAAI0a,EAASA,EAATA,GAAcD,GAOlB,OANIza,IAAMma,IACTO,EAAOJ,QAAQD,EAAU9Z,MAAzB,KACIma,EAAOJ,QAAQD,EAAU9Z,MACzBwI,IAGE2R,OAoBuBC,EAAnBA,iBAAmB,EAC/BH,mBACAR,WACAC,cACAW,YAwBAJ,EAAiB,CAChBR,SAvBmBA,EAASjI,IAAI,CAAC0I,EAAKza,KACtC,IAAI0a,EAASA,EAATA,GAAcD,GAClB,MAAMI,EAAUD,EAAME,OAAO9I,GAAQA,EAAKkI,aAAaC,WAAana,GAEpE,GAAI6a,EAAQ/U,OAAQ,CACnB,IAAK,IAAIiV,EAAI,EAAGA,EAAIF,EAAQ/U,OAAQiV,IAAK,CACxC,MACCb,cAAc,YAAEE,GADX,KAELrR,GACG8R,EAAQE,GACNV,EAAYJ,EAAYG,GAE9BM,EAAOJ,QAAQD,EAAU9Z,MAAzB,KACIma,EAAOJ,QAAQD,EAAU9Z,MACzBwI,GAGL,OAAO2R,EAER,OAAOA,OAmBoBM,EAAhBA,cAAgB,EAC5BhB,WACAC,cACAC,cAAgBC,WAAUC,mBAE1B,MAAMC,EAAYJ,EAAYG,GACxBa,EAAYjB,EAASG,GAAUG,QAAQD,EAAU9Z,MACvD,MAAO,CAAE,CAAC8Z,EAAU9Z,MAAO0a,IAWDC,EAAdA,YAAc,EAAGlB,WAAUE,cAAgBC,eACvDH,EAASG,GAUsBgB,EAAnBA,iBAAmB,EAAGnB,WAAUE,cAAgBC,eAC5DH,EAASG,GAAUzN,MAGgB0O,EAAvBA,qBAAuBzC,GAClB,CAChB,CACCY,MAAO,SACPhZ,KAAM,kBACNmZ,aAAc,kBACdC,cAAe,kBACfhP,KAAM,kBAGQmI,OAAO6F,GASO0C,EAAlBA,gBAAkB,CAACC,EAAaC,IACxCD,IAAgBtY,kBAAgBC,eAC5B,CACN2V,YAAa1V,SAAOE,WACpByV,UAAW0C,EAAchb,MAGnB,CACNqY,YAAa2C,EAAchb,KAC3BsY,UAAW0C,EAAchb,MAIMib,EAArBA,mBAAqB,CAACvB,EAAasB,KAC/C,IAAIE,EAAkB,GAClBC,EAAY,CACfC,UAAU,EACVC,aAAcL,EAAchb,KAC5BU,MAAOsa,EAAchb,MAElBsb,EAAa,GACbC,EAAO,GACX,IAAKA,KAAQ7B,EACZ4B,EAAW5B,EAAY6B,GAAMvb,MAAQ,CACpCU,MAAO,GACP2a,aAAc,GACdD,UAAU1B,EAAY6B,GAAMvb,KAAKiM,WAAW,SAG9C,IAAIuP,EAAoB,CAAExb,KAAMmb,GAMhC,OALAD,EAAA,kBAAuCM,EACvCN,EAAA,WAA+B,EAC/BA,EAAA,UAA8B,EAC9BA,EAAA,QAA6BI,EAC7BJ,EAAA,MAA4B,KAAI7O,UAAKC,KAC9B4O,GAGsBO,EAAjBA,eAAiB,CAAC/B,EAAagC,IACpChC,EAAYiC,UAAUjD,GACrBA,EAAO1Y,OAAS0b,GAIgBE,EAA5BA,0BAA4B,CAACC,EAASC,KAClD,IAAK3b,OAAO+E,KAAK4W,GAAkBvW,OAAQ,OAAOsW,EAGlD,IAAIE,EAAgBF,EAClBtB,OAAOyB,KAAW,IAAAjQ,iBAAgBiQ,EAAO7P,QACzCqF,IAAIwK,IACJ,MAAMC,EAAkBH,EAAiBE,EAAO7P,OAChD,IAAK8P,EAAiB,OAAOD,EAE7B,MAAM,OAAEE,EAAF,OAAUC,GAAWF,EAC3B,OAAQC,GACP,KAAKE,sBAAoBC,kBAAmB,CAC3C,MAAMC,EAAYA,EAAZA,GAAiBN,GAKvB,OAJAM,EAAUvC,QAAV,KACIuC,EAAUvC,QACVoC,GAEGG,EAER,KAAKF,sBAAoBG,qBAY5B,OANApc,OAAO+E,KAAK4W,GAAkB3W,QAAQgH,IACrC,MAAM,OAAE+P,EAAF,OAAUC,GAAWL,EAAiB3P,GACxC+P,IAAWE,sBAAoBI,gBAClCT,EAAcnJ,KAAd,KAAwBuJ,MAGnBJ,GAGsBU,EAAjBA,eAAiB,CAACzc,EAAM0Z,KACpC,MAAMjS,EAAQiS,EAAYgD,KAAKjL,GAAQA,EAAKzR,OAASA,GACrD,OAAIyH,EAAcA,EAAMuR,MACjB,IAGqB2D,EAAhBA,cAAgB,CAAC3D,EAAOhZ,IAC7BgZ,GAAShZ,EAAQ,GAAEgZ,KAAShZ,KAAUgZ,GAAgB,GASvB4D,EAA1BA,wBAA0B,CAACZ,EAAQa,EAAWnc,EAAQ,UAClEsb,EAAOjC,QAAQ8C,GAAWnc,GAEeoc,EAA7BA,2BAA6B,CAAC3Q,EAAOC,IAEzC,8BAA6BD,qEACuBA,iCAFvCE,UAAKC,KAAP,mDAIWF,iCAIG2Q,EAArBA,mBAAqB,CAACtD,EAAUG,EAAUkC,KACtD,MAAMkB,EAAcvD,EAASG,GAAUzN,MACjC8Q,GAAc,IAAAlR,iBAAgBiR,GAC9BE,EAAMpB,EAAiBkB,GAC7B,OACCE,IACCD,EAAcC,EAAIf,OAAOpC,QAAQoD,UAAYD,EAAIf,OAAOgB,a,8ECtUpD,MAAMzQ,EAAgBA,EAAhBA,cAAgB,oBAEDgB,EAAfA,aAAe,CAC3B0P,sCAA0C1Q,EAAF,sBACxC2Q,sCAA0C3Q,EAAF,sBACxC4Q,yCAA6C5Q,EAAF,yBAC3C6Q,+CAAmD7Q,EAAF,+BACjD8Q,wCAA4C9Q,EAAF,wBAC1C+Q,8CAAkD/Q,EAAF,8BAChDgR,gDAAoDhR,EAAF,gCAClDiR,6CAAiDjR,EAAF,6BAC/CkR,yCAA6ClR,EAAF,0BAGT0P,EAAtBA,oBAAsB,CAClCI,eAAgB,iBAChBH,kBAAmB,oBACnBE,iBAAkB,oBAIuBsB,EAA7BA,2BAA6B,0BACTC,EAApBA,kBAAoB,mBACEC,EAAtBA,oBAAsB,sB,sRCvBnC,WAEO,MAAMrR,EAAgBA,EAAhBA,cAAgB,aAEGsR,EAAnBA,iBAAmB,CAC/B/Z,gBAAcK,aACdL,gBAAcI,QACdJ,gBAAcC,eAGawJ,EAAfA,aAAe,CAC3BuQ,2BAA+BvR,EAAF,kBAC7BwR,yBAA6BxR,EAAF,gBAC3ByR,2BAA+BzR,EAAF,mBAIa0R,EAA9BA,4BAA8B,wBACNC,EAAxBA,sBAAwB,mBACFC,EAAtBA,oBAAsB,kBACAC,EAAtBA,oBAAsB,kBAGJC,EAAlBA,gBAAkB,iBAGJC,EAAdA,YAAc,OACDC,EAAbA,WAAa,O,8EC3B1B,MAAM5L,EAAO,eAEe6L,EAAfA,aAAe,KACEC,EAAjBA,eAAiB,OACKC,EAAtBA,oBAAsB,GAEPC,EAAfA,aAAe,QACAC,EAAfA,aAAe,QACIC,EAAnBA,iBAAmB,iBAEAC,EAAnBA,iBAAmB,WACJC,EAAfA,aAAe,OAGLC,EAAVA,QAAU,UACIC,EAAdA,YAAc,aAEC1R,EAAfA,aAAe,CAC3B+J,iBAAkB,kBAClB4H,qBAAsB,sBACtBC,uBAAwB,wBACxBC,8BAA+B,+BAC/BC,WAAe1M,EAAF,cACb2M,eAAmB3M,EAAF,kBACjB4M,cAAkB5M,EAAF,iBAChB6M,mBAAuB7M,EAAF,sBACrBsC,YAAgBtC,EAAF,eACdwC,gBAAoBxC,EAAF,mBAClB4E,cAAkB5E,EAAF,iBAChB6E,UAAc7E,EAAF,aACZ8M,0BAA8B9M,EAAF,+B,0YC9B7B,OACA,OACA,OAE4B+M,EAAfA,aAAe,oDACEC,EAAjBA,eAAiB,oBAEQC,EAAzBA,uBAAyB,CACrC/G,OAAO,IAAArY,GAAE,yDACTX,MAAM,IAAAW,GAAE,+DACRqf,eAAe,IAAArf,GAAE,2CACjBsf,aAAa,IAAAtf,GAAE,sBACfuf,aAAa,IAAAvf,GAAE,yCACfwf,QAAQ,IAAAxf,GACP,2EAEDyf,QAAQ,IAAAzf,GAAE,kEACV0f,gBAAgB,IAAA1f,GACf,0GAED2f,iBACC,+BACE,IAAA3f,GACC,mHAEF,+BACC,IAAAA,GACC,8FAEF,+BACA,wBACC4f,KAAK,4HACLC,OAAO,WAEN,IAAA7f,GAAE,0CAIN8f,gBACC,+BACE,IAAA9f,GACC,gIAEF,+BACC,IAAAA,GACC,gKAEF,+BACA,wBACC4f,KAAK,qKACLC,OAAO,WAEN,IAAA7f,GAAE,oDAM6B+f,EAAvBA,qBAAuB,CACnCC,OAAQ,IACRC,eAAgB,GAEgBC,EAApBA,kBAAoB,GACSC,EAA7BA,2BAA6B,GACJC,EAAzBA,uBAAyB,GA5D/B,MA6DMC,EAA0BA,EAA1BA,wBAA0B,WA0BjClO,GAzB0BmO,EAAnBA,iBAAmB,CAAC,UACAC,EAApBA,kBAAoB,CAChC,QACA,cACA,SACA,SACA,kBAGmBC,EAAPA,KAAO,CACnBC,aAAc,CAAEhc,GAAI,eAAgB4T,OAAO,IAAArY,GAAE,wBAC7C0gB,OAAQ,CAAEjc,GAAI,SAAU4T,OAAO,IAAArY,GAAE,YAGC2gB,EAAtBA,oBAAsB,CAClClB,OAAQ,CACPmB,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,KAClBsO,SAAS,IAAA/Q,GACR,4BACA,IAAAwF,wBAAuB6a,MAKb,oBAE8BQ,EAA9BA,4BAA8B,CAC1C,gBACA,cACA,gBACA,gBACA,aAG2B9T,EAAfA,aAAe,CAC3B+T,+BAAmC3O,EAAF,gBACjC4O,2CAA+C5O,EAAF,4BAC7C6O,0CAA8C7O,EAAF,2BAC5C8O,gCAAoC9O,EAAF,iBAElC+O,qBAAsB,uBACtBC,4BAA6B,6BAC7BzC,qBAAsB,sBACtBC,uBAAwB,wBACxByC,0BAA2B,2BAC3BhS,2BAA4B,4BAC5BiS,6BAA8B,+BAE9BC,kCAAsCnP,EAAF,mBACpCoP,gCAAoCpP,EAAF,iBAClCqP,kCAAsCrP,EAAF,mBACpCsP,+BAAmCtP,EAAF,gBAEjCuP,mCAAuCvP,EAAF,oBACrCwP,mCAAuCxP,EAAF,oBACrCyP,iCAAqCzP,EAAF,kBACnC0P,mCAAuC1P,EAAF,oBACrC2P,gCAAoC3P,EAAF,iBAClC4P,8BAAkC5P,EAAF,kC,8EC7H1B,MAAMpG,EAAgBA,EAAhBA,cAAgB,eAGIiW,EAApBA,kBAAoB,kBACSC,EAA7BA,2BAA6B,0BAEdlV,EAAfA,aAAe,CAC3BmV,8BAAkCnW,EAAF,iCAChCkW,2BAA+BlW,EAAF,8BAC7BqV,0BAA2B,4BAGOe,EAAtBA,oBAAsB,uB,mKCZ1BC,oB,0FAERrV,gB,qFACA0O,uB,mFACA0B,qB,4FACAD,+B,cCLDre,EAAOD,QAAUyjB,mC,8ECAV,MAAMtW,EAAgBA,EAAhBA,cAAgB,YAEDgB,EAAfA,aAAe,CAC3BuV,uBAA2BvW,EAAF,eACzBwW,+BAAmCxW,EAAF,uBACjCyW,iCAAqCzW,EAAF,yBACnC0W,8BAAkC1W,EAAF,sBAChC2W,6BAAiC3W,EAAF,uB,gFCPnB4W,UAAN,MACN7c,YAAYiS,GACXhS,KAAKgS,OAASA,EAGf1Y,OACC,OAAO0G,KAAKgS,OAAO1Y,KAGpBgZ,QACC,OAAOtS,KAAKgS,OAAOM,MAGpBC,YACC,MAAO,QAGRC,WACC,MAAO,CAACqK,EAAOzJ,KACd,MAAM0J,EAAWD,EAAMxJ,QAAQD,EAAU9Z,MACzC,OAAOwjB,EAAWA,EAASnI,aAAe,IAI5C9B,SACC,MAAO,M,8ECzBF,MAAM7M,EAAgBA,EAAhBA,cAAgB,YAEDgB,EAAfA,aAAe,CAC3B+V,sBAA0B/W,EAAF,cACxBgX,wBAA4BhX,EAAF,gBAC1BiX,+BAAmCjX,EAAF,uBACjCkX,oCAAwClX,EAAF,4BACtCmX,oCAAwCnX,EAAF,4BACtCoX,0BAA2B,4BAINtM,EAATA,OAAS,SAGEhK,EAAXA,SAAW,iC,mKCffuW,oB,uFAERC,a,gFACAC,kB,8EACAvW,gB,mFACAwW,qB,8EACAC,gB,sFACAC,yB,8ECPM,MAAM1X,EAAgBA,EAAhBA,cAAgB,oBAGJsX,EAAZA,UAAY,QACKC,EAAjBA,eAAiB,cACGC,EAApBA,kBAAoB,eACGE,EAAvBA,qBAAuB,mBACRD,EAAfA,aAAe,sBAGfE,eACkC,oBACtBC,EAAZA,UAAY,CAAC,CAAEjd,KAAM,qBAGNqG,EAAfA,aAAe,CAC3B6W,qCAAyC7X,EAAF,qBACvC8X,yCAA6C9X,EAAF,yBAC3C+X,wBAA4B/X,EAAF,SAGEgY,EAAhBA,cAAgB,U,8ECrBtB,MAAMhY,EAAgBA,EAAhBA,cAAgB,iBAEHiY,EAAbA,WAAa,CACzBC,OAAQ,UAGmBlX,EAAfA,aAAe,CAC3BmX,6BAAiCnY,EAAF,gBAC/BoY,iCAAqCpY,EAAF,oBACnCqY,+BAAmCrY,EAAF,oB,cCTlClN,EAAOD,QAAUylB,oC,sPCAjB,MAAMC,EAAY,IAAIC,IAEhBC,EAAgB,CACrBC,qBAAqB,EACrBC,aAAc,KACdC,YAAa,MAIDC,EAAqBA,EAArBA,mBAAqB,CACjC,QACA,UACA,SACA,aACC/S,OAGWgT,GAFwBC,EAAxBA,sBAAwB,CAAC,gBAEzB,EAAAD,yBAAgF,CAC5Fxd,EAAOC,WAEAyd,GAAoB,EAAM1d,IAGrB2d,EAAA,EAAAA,wBAA+E,CAC3F3d,EAAOC,WAEAyd,GAAoB,EAAO1d,GAGtB0d,EAAA,EAAAA,oBAA2E,CACvFE,GAAY,EACZ5d,EAAOC,YAEP,IAAKD,EAAM,OAAO,EAEdA,EAAKG,aAAYH,EAAOA,EAAKG,YAEjC,IAAI0d,EAAU,IAAI7d,EAAKK,iBAAiBkd,IACnCK,IAAWC,EAAUA,EAAQC,WAElC,IAAIC,EAAQ,EACRC,OAASC,EAGb,MAAQD,GAAUD,EAAQF,EAAQtgB,QAAQ,CACzC,MAAM2gB,EAAQL,EAAQE,KAChBI,EAAiBD,EAAM/d,WAC1Bud,EAAoBE,EAAWM,EAAM/d,YACrC+d,EACCC,GAAkBC,EAAWD,KAChCH,EAASG,GAEX,OAAOH,GAGKI,EAAA,EAAAA,WAAkEC,KACzEA,KACDA,EAAKC,WACiB,OAAtBD,EAAKE,eAEiC,WAAtCC,iBAAiBH,GAAMI,cACN,UAAjBJ,EAAKK,SAAqC,WAAdL,EAAKvc,QACV,IAAvB6c,EAAYN,OAKJO,EAAA,EAAAA,kBAAwF,CACpG5e,EAAOC,YAEP,MAAM4e,EAAgB7e,EAAK6e,cAC3B,OAAIA,GAAiBA,EAAc1e,YAC3Bye,EAAkBC,EAAc1e,aAEjC0e,GAGKC,EAAA,EAAAA,wBAA8F,CAC1GT,EACAre,EAAOC,YAEP,MAAM4e,EAAgB7e,EAAK6e,cAC3B,QAAKA,MAEDR,GAAQQ,IAAiBR,EAAKU,SAASF,OAEvCA,EAAc1e,YACV2e,EAAwBT,EAAMQ,EAAc1e,cAKxCwe,EAAcA,EAAdA,YAAcN,IAC1B,MAAMW,EAAWC,SAASZ,EAAKa,aAAa,YAAa,IACzD,OAAKC,MAAMH,GACqB,SAAzBX,EAAKe,gBAA6B,EAAIf,EAAKW,SADrBA,GAIjBK,EAAsBA,EAAtBA,oBAAsBjiB,IAClC,MAAMkiB,EAAiBrC,EAAU3kB,IAAI8E,GAErC,IAAKkiB,EAAgB,OAAO,EAE5B,MAAM,YAAEC,EAAF,aAAeC,EAAf,WAA6BC,EAA7B,UAAyCC,GAAcJ,EAI7D,OAHAG,EAAW9hB,oBAAoB,UAAW6hB,GAC1CE,EAAU/hB,oBAAoB,UAAW4hB,GAElCtC,EAAU0C,OAAOviB,IAGQwiB,EAApBA,kBAAoB,CAACxiB,EAAIihB,EAAMwB,EAAS,MACpDR,EAAoBjiB,GACpByiB,OAAc1C,EAAkB0C,GAChC,MAAM,oBAAEzC,EAAF,aAAuBC,EAAvB,YAAqCC,GAAgBuC,EACrDJ,EACLpC,GACiDG,EAChDa,GAEIqB,EACLpC,GACiDK,EAChDU,GAGEjB,IAAwB0B,EAAwBT,IACnDoB,EAAW7d,QAGZ,MAAM4d,EAAeM,IACpB,MAAM,IAAE9mB,EAAF,SAAOkI,GAAa4e,EACd,QAAR9mB,GAAiBkI,IACpB4e,EAAIpe,iBACJge,EAAU9d,UAKN2d,EAAcO,IACnB,MAAM,IAAE9mB,EAAF,SAAOkI,GAAa4e,EACd,QAAR9mB,GAAkBkI,IACrB4e,EAAIpe,iBACJ+d,EAAW7d,UAIb6d,EAAWhiB,iBAAiB,UAAW+hB,GACvCE,EAAUjiB,iBAAiB,UAAW8hB,GAEtC,MAAMD,EAAiB,CACtBO,SACAxB,OACAoB,aACAC,YACAF,eACAD,eAGD,OAAOtC,EAAU8C,IAAI3iB,EAAIkiB,K,+HC9J1B,YAOA,QASA,OAaA,QAIA,QACA,QAMA,OAIA,QAKO,MAAMxT,EAAiBA,EAAjBA,eAAiB,mBAExBkU,EAAiBhnB,GAAQ,IAAG8S,KAAkB9S,IAEd+S,EAAzBA,uBAAyB,CAErC,CAACiQ,aAAYgE,EAAehE,aAC5B,CAACC,kBAAiB+D,EAAe/D,kBACjC,CAACC,qBAAoB8D,EAAe9D,qBACpC,CAACE,wBAAuB4D,EAAe5D,wBACvC,CAACD,gBAAe6D,EAAe7D,gBAG/B,CAACjQ,wBAAuB8T,EAAe9T,wBACvC,CAACC,qBAAoB6T,EAAe7T,qBACpC,CAACE,uBAAsB2T,EAAe3T,uBACtC,CAACJ,iBAAgB+T,EAAe/T,iBAChC,CAACG,oBAAmB4T,EAAe5T,oBACnC,CAACE,yBAAwB0T,EAAe1T,yBACxC,CAACC,uBAAsByT,EAAezT,uBAGtC,CAACvE,yBAAwBgY,EAAehY,yBACxC,CAACG,uBAAsB6X,EAAe7X,uBACtC,CAACD,wBAAuB8X,EAAe9X,wBACvC,CAACD,sBAAqB+X,EAAe/X,sBACrC,CAACG,gBAAe4X,EAAe5X,gBAC/B,CAACE,aAAY0X,EAAe1X,aAC5B,CAACC,qBAAoByX,EAAezX,qBACpC,CAACI,gBAAeqX,EAAerX,gBAC/B,CAACH,kBAAiBwX,EAAexX,kBACjC,CAACE,qBAAoBsX,EAAetX,qBACpC,CAACG,iBAAgBmX,EAAenX,iBAChC,CAACC,eAAckX,EAAelX,eAC9B,CAACC,eAAciX,EAAejX,eAG9B,CAAC+M,qBAAoBkK,EAAelK,qBACpC,CAACD,8BAA6BmK,EAAenK,8BAG7C,CAACrG,UAASwQ,EAAexQ,UAGzB,CAAC+G,uBAAsByJ,EAAezJ,uBACtC,CAAC0J,sBAAqBD,EAAeC,sBACrC,CAACC,0BAAyBF,EAAeE,0BACzC,CAAC9J,+BAA8B4J,EAAe5J,+BAG9C,CAACuE,qBAAoBqF,EAAerF,qBACpC,CAACC,8BAA6BoF,EAAepF,gC,8JCpG9C,WACA,MAAM9P,EAAO,kBAEepF,EAAfA,aAAe,CAC3Bya,+BAAmCrV,EAAF,iBACjCsV,+BAAmCtV,EAAF,iBACjCuV,4BAAgCvV,EAAF,cAC9BwV,2BAA+BxV,EAAF,aAC7ByV,wCAA4CzV,EAAF,2BAGT0V,EAArBA,mBAAqB,GAKEC,EAAvBA,qBAAuB,CACnCC,OAAQ,CAACzkB,gBAAcE,YACvBgZ,UAAW,CAAClZ,gBAAcF,UAAWE,gBAAcE,YACnDwkB,OAAQ,CAAC1kB,gBAAcD,SAGG4kB,EAAdA,YAAc,U,cCtB3BppB,EAAOD,QAAUspB,mC,oMCAjB,WAI4Bnb,EAAfA,aAAe,CAC3BsU,6BAA8B,+BAC9BrK,UAAY,0BAJb,MAOamR,EAAiBA,EAAjBA,eAAiB,OACjBC,EAAoBA,EAApBA,mBAAoB,IAAApoB,GAAE,gBACtBqoB,kCACZ,mCAGoBC,EAARA,MAAQ,QAESC,EAAjBA,eAAiB,CAC7B9jB,GAAI0jB,EACJ9P,MAAO+P,I,8GCnBR,MAQsBI,EAATA,OAAS,EAAGC,UAASlf,QAAOJ,OAAO,SAC3Csf,GAAWlf,GAEb,0BAAKmf,UAAU,aACbD,GACA,+BAAUhf,KAAMgf,EAASE,KAAK,OAC3Bpf,GACH,0BACCqf,IAAM,oCAAkBrf,KAASJ,IACjC0f,cAAY,OACZC,WAAUC,IACLA,EAAEC,cAAcC,QACnBF,EAAEC,cAAcC,MAAMnD,WAAa,aAGnC,MAGO,M,cC1BfjnB,EAAOD,QAAUsqB,uD,8ECAV,MAAMnd,EAAgBA,EAAhBA,cAAgB,uBAEhBc,WACZ,gEAE2BE,EAAfA,aAAe,CAC3Boc,sDAA0Dpd,EAAF,mCACxDqd,oDAAwDrd,EAAF,iCACtDsd,sDAA0Dtd,EAAF,mCACxDud,mDAAuDvd,EAAF,gCACrDwd,8CAAkDxd,EAAF,4BAIbwH,EAAvBA,qBAAuB,2BACDG,EAAtBA,oBAAsB,0BACFF,EAApBA,kBAAoB,6BACJF,EAAhBA,cAAgB,gBACGG,EAAnBA,iBAAmB,eACKE,EAAxBA,sBAAwB,oBACFC,EAAtBA,oBAAsB,qB,oKCpB1B4V,a,0FAERzc,gB,wFACAwa,0B,6FACA9J,+B,oFACA6J,sB,qFACA1J,wB,cCND/e,EAAOD,QAAU6qB,oC,8ECEW1c,EAAfA,aAAe,CAC3B2c,mBAAqB,gCACrB7U,4BAA6B,6BAC7BC,6BAA8B,+BAGA6U,EAAlBA,gBAAkB,gB,8ECR/B,MAAMxX,EAAO,eAEepF,EAAfA,aAAe,CAC3BoC,2BAA4B,4BAC5Bya,6BAAiCzX,EAAF,kBAC/B0X,qCAAyC1X,EAAF,0BACvC2X,+BAAmC3X,EAAF,oBACjC4X,8BAAkC5X,EAAF,mBAChC6X,kCAAsC7X,EAAF,qCACpC8X,gCAAoC9X,EAAF,mCAClC+X,kCAAsC/X,EAAF,qCACpCgY,+BAAmChY,EAAF,kCACjCiY,gCAAoCjY,EAAF,qBAClCkY,qCAAyClY,EAAF,0BACvCmY,uCAA2CnY,EAAF,6BAGVoY,EAAnBA,iBAAmB,kBACCC,EAApBA,kBAAoB,uBACOC,EAA3BA,yBAA2B,oBACLC,EAAtBA,oBAAsB,eACKC,EAA3BA,yBAA2B,oBAE3BC,mCACZ,uD,wMCxBD,WAI4B7d,EAAfA,aAAe,CAC3B8d,gCAAiC,kCACjC3J,qBAAsB,uBACtB4J,0BAA4B,2CAL7B,MAQaC,EAAcA,EAAdA,aAAc,IAAA/qB,GAAE,QAChBgrB,EAAkBA,EAAlBA,iBAAkB,IAAAhrB,GAAE,YACpBirB,EAAqBA,EAArBA,oBAAqB,IAAAjrB,GAAE,eAEvBkrB,gCACZ,yCAE2BC,EAAfA,aAAe,CAC3B,CACC9S,OAAO,IAAArY,GAAE,sCACT0J,aAAa,IAAA1J,GACZ,uGAEDuJ,MAAO,mBACP6hB,cAAe,CAACL,IAEjB,CACC1S,OAAO,IAAArY,GAAE,qCACT0J,aAAa,IAAA1J,GACZ,gKAEDuJ,MAAO,mBACP6hB,cAAe,CAACL,EAAaC,IAE9B,CACC3S,OAAO,IAAArY,GAAE,kCACT0J,aAAa,IAAA1J,GACZ,yGAEDuJ,MAAO,mBACP6hB,cAAe,CAACL,EAAaC,IAE9B,CACC3S,OAAO,IAAArY,GAAE,kCACT0J,aAAa,IAAA1J,GACZ,oKAEDuJ,MAAO,mBACP6hB,cAAe,CAACH,EAAoBD,M,4RChDtC,MACA,WACA,OAE8BK,EAAjBA,eAAiB,EAC7BC,WACAC,aACAlT,QACAmT,QAAO,EACPC,cAAc,aACdvmB,eAAe,GACfyjB,OAAO,KACP7Q,uBAEIA,EAA0B,MAG7B,0BACC4T,KAAK,SACLC,aAAYtT,EACZuT,SAAS,IACTC,MAAA,GACC,eAAe,EACf,UAAWL,EACX,CAAE,MAAKC,IAAgB,EACvB,CAAE,IAAG9C,IAAS,IACX,IAAA1jB,wBAAuBC,GAAesmB,IACtC,IAAAlmB,kBAAiBJ,GAAesmB,IAEpCM,WAAU,IAAMR,EAASC,GACzBQ,aAAYhD,IACPA,EAAE1oB,MAAQW,YAAUG,OAAOmqB,EAASC,MAGzC,+BAAU9hB,KAAK,YAAYkf,KAAK,QAChC,oCAAStQ,EAAT,O,uGCzBH,WAE+BhP,EAAlBA,gBAAkB,CAC9BC,iBAAkB,CACjB0iB,MAAO,CACNviB,KAAM,yBACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,oBAEhBisB,QAAS,CACRxiB,KAAM,GACNF,MAAO,aACPG,aAAa,IAAA1J,GAAE,sBAEhBksB,mBAAoB,CACnBziB,KAAM,yBACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,wBAEhBgoB,OAAQ,CACPve,KAAM,8BACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,oCAEhBmsB,MAAO,CACN1iB,KAAM,kBACNF,MAAO,GACPG,aAAa,IAAA1J,GACZ,wDAGFosB,WAAY,CACX3iB,KAAM,GACNF,MAAO,aACPG,aAAa,IAAA1J,GAAE,wBAEhBqsB,iBAAkB,CACjB5iB,KAAM,GACNF,MAAO,oBACPG,aAAa,IAAA1J,GAAE,2CAEhBssB,SAAU,CACT7iB,KAAM,GACNF,MAAO,mBACPG,aAAa,IAAA1J,GACZ,iEAGFusB,UAAW,CACV9iB,KAAM,GACNF,MAAO,sBACPG,aAAa,IAAA1J,GAAE,sDAEhBwsB,eAAgB,CACf/iB,KAAM,yBACNF,MAAO,GACPG,aAAa,IAAA1J,GACZ,wDAGFysB,QAAS,CACRhjB,KAAM,GACNF,MAAO,UACPG,aAAa,IAAA1J,GACZ,oEAGF0sB,YAAa,CACZjjB,KAAM,GACNF,MAAO,cACPG,aAAa,IAAA1J,GAAE,yCAEhB2sB,UAAW,CACVljB,KAAM,GACNF,MAAO,YACPG,aAAa,IAAA1J,GAAE,mCAEhB4sB,SAAU,CACTnjB,KAAM,GACNF,MAAO,WACPG,aAAa,IAAA1J,GAAE,2CAEhB6sB,WAAY,CACXpjB,KAAM,GACNF,MAAO,YACPG,aAAa,IAAA1J,GAAE,2CAEhB8sB,gBAAiB,CAChBrjB,KAAM,GACNF,MAAO,mBACPG,aAAa,IAAA1J,GAAE,iCAEhB+sB,MAAO,CACNtjB,KAAM,GACNF,MAAO,wBACPG,aAAa,IAAA1J,GACZ,sEAGFgtB,WAAY,CACXvjB,KAAM,GACNF,MAAO,eACPG,aAAa,IAAA1J,GAAE,6BAEhBitB,gBAAiB,CAChBxjB,KAAM,yBACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,wBAEhBktB,eAAgB,CACfzjB,KAAM,cACNF,MAAO,GACPG,aAAa,IAAA1J,GACZ,wDAGFmtB,WAAY,CACX1jB,KAAM,YACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,kCAEhBotB,WAAY,CACX3jB,KAAM,GACNF,MAAO,OACPG,aAAa,IAAA1J,GAAE,oBAEhBqtB,eAAgB,CACf5jB,KAAM,GACNF,MAAO,WACPG,aAAa,IAAA1J,GAAE,2BAEhBstB,KAAM,CACL7jB,KAAM,GACNF,MAAO,OACPG,aAAa,IAAA1J,GAAE,mCAEhByJ,KAAM,CACLA,KAAM,GACNF,MAAO,eACPG,aAAa,IAAA1J,GAAE,+BAEhButB,iBAAkB,CACjB9jB,KAAM,GACNF,MAAO,OACPG,aAAa,IAAA1J,GAAE,oBAEhBwtB,QAAS,CACR/jB,KAAM,GACNF,MAAO,UACPG,aAAa,IAAA1J,GAAE,8CAEhBytB,QAAS,CACRhkB,KAAM,GACNF,MAAO,aACPG,aAAa,IAAA1J,GAAE,yBAEhB0tB,QAAS,CACRjkB,KAAM,GACNF,MAAO,UACPG,aAAa,IAAA1J,GACZ,wDAGF2tB,cAAe,CACdlkB,KAAM,GACNF,MAAO,gBACPG,aAAa,IAAA1J,GAAE,yCAEhB4tB,aAAc,CACbnkB,KAAM,GACNF,MAAO,eACPG,aAAa,IAAA1J,GACZ,wDAGF6tB,QAAS,CACRpkB,KAAM,GACNF,MAAO,OACPG,aAAa,IAAA1J,GAAE,kBAEhB8tB,SAAU,CACTrkB,KAAM,GACNF,MAAO,SACPG,aAAa,IAAA1J,GAAE,wBAEhB+tB,SAAU,CACTtkB,KAAM,cACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,qCAEhBguB,UAAW,CACVvkB,KAAM,GACNF,MAAO,iBACPG,aAAa,IAAA1J,GAAE,qCAEhBiuB,iBAAkB,CACjBxkB,KAAM,GACNF,MAAO,mBACPG,aAAa,IAAA1J,GAAE,mBAEhBkuB,kBAAmB,CAClBzkB,KAAM,gBACNF,MAAO,GACPG,aAAa,IAAA1J,GACZ,mEAGFmuB,MAAO,CACN1kB,KAAM,GACNF,MAAO,QACPG,aAAa,IAAA1J,GACZ,uEAGFwc,UAAW,CACV/S,KAAM,GACNF,MAAO,YACPG,aAAa,IAAA1J,GAAE,6CAEhBouB,OAAQ,CACP3kB,KAAM,GACNF,MAAO,SACPG,aAAa,IAAA1J,GACZ,iEAGFquB,aAAc,CACb5kB,KAAM,GACNF,MAAO,eACPG,aAAa,IAAA1J,GAAE,0BAEhBsuB,mBAAoB,CACnB7kB,KAAM,GACNF,MAAO,kBACPG,aAAa,IAAA1J,GACZ,2DAGF+nB,OAAQ,CACPte,KAAM,GACNF,MAAO,SACPG,YAAa,+BAEd6kB,iBAAkB,CACjB9kB,KAAM,GACNF,MAAO,eACPG,YAAa,kDAEd8kB,WAAY,CACX/kB,KAAM,GACNF,MAAO,aACPG,aAAa,IAAA1J,GAAE,mDAEhByuB,gBAAiB,CAChBhlB,KAAM,GACNF,MAAO,kBACPG,aAAa,IAAA1J,GACZ,4EAGF0uB,gBAAiB,CAChBjlB,KAAM,GACNF,MAAO,kBACPG,aAAa,IAAA1J,GACZ,6EAGF2uB,IAAK,CACJllB,KAAM,eACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,0BAEhB4uB,WAAY,CACXnlB,KAAM,gBACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,+BAEhB6uB,MAAO,CACNplB,KAAM,gBACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,qBAEhB8uB,UAAW,CACVrlB,KAAM,GACNF,MAAO,OACPG,aAAa,IAAA1J,GAAE,oDAEhB+uB,SAAU,CACTtlB,KAAM,mBACNF,MAAO,GACPG,aAAa,IAAA1J,GAAE,qDAGjBwJ,mBAAoB,CACnByiB,QAAS,aACT+C,KAAM,eACNC,SAAU,oBACVxC,QAAS,UACTM,MAAO,wBACPjqB,KAAM,cACN0qB,QAAS,UACTK,QAAS,OACT9F,OAAQ,SACRmH,KAAM,U,mKCzTCC,Y,0FACApiB,iB,cCDTlO,EAAOD,QAAUwwB,2C,wKCARriB,gB,uFACAsiB,Y,sFACAC,kB,cCFTzwB,EAAOD,QAAU2wB,oC,cCAjB1wB,EAAOD,QAAU4wB,qC,yMCERziB,gB,0EAAcuI,YAFvB,Q,oSCqDsBma,YAAfC,eAA2BC,GACjC,MAAMC,EAAWD,EAAe9e,IAAIgf,GAC9BC,QAAqBC,EAAWH,IAChC,kBACLI,EACAC,UAAWC,SAmBbR,eAAyCS,EAAaR,GACrD,MAAMK,EAAoBG,EAAYppB,OAAO,CAACqpB,EAAKC,EAAMjL,KAN7BkL,MAQ3B,MAPe,cADYA,EAOFD,GANrBzP,QAAyD,MAAhC0P,EAAKC,OAAOC,SAAS5P,QAMlBwP,EAAIne,KAAKmT,GAClCgL,GACL,IAEGR,EADgBI,EAAkBnf,IAAIC,GAAQ6e,EAAe7e,IACpCD,IAAIgf,GAC7BI,QAAkBF,EAAWH,GAEnC,MAAO,CACNI,oBACAC,aA7BSQ,CAA0BX,EAAcH,GAE9CK,EAAkBprB,QAErBorB,EAAkBxrB,QAAQ,CAACsM,EAAMsU,KAChC0K,EAAahf,GAAQof,EAAY9K,KAInC,OAAO0K,GApER,aAI4B/iB,EAAfA,aAAe,CAC3B2jB,sBAAwB,uBACxBC,wBAA0B,0BAJ3B,MAWaC,EAASA,EAATA,QAAS,IAAAC,eAAc,CACnCC,UAAWjsB,OAAOksB,KAClBC,UAAU,IAOEjB,EAAaA,EAAbA,WAAakB,GACS,mBAAvBjnB,QAAQ+lB,WACX/lB,QAAQ+lB,WAAWkB,GACpBjnB,QAAQknB,IACdD,EAASpgB,IAAIjQ,GACZoJ,QAAQC,QAAQrJ,GAAGkK,KAClB/K,IAASA,CACR6gB,OAAQ,YACR7gB,UAEDwwB,IAAUA,CACT3P,OAAQ,WACR2P,cAOCV,EAAY3I,IACjB,MAAM,IAAEyH,EAAF,OAAOwC,EAAS,OAAsBjK,EAAZkK,E,uHAAhC,CAA4ClK,EAA5C,kBACA,OAAO0J,EAAOS,QAAQ1C,EAAKwC,EAApB,KACHC,M,8LC1CIrkB,gBAFT,Q,cCAAlO,EAAOD,QAAU0yB,yC,cCAjBzyB,EAAOD,QAAU2yB,+C,cCAjB1yB,EAAOD,QAAU4yB,qC,8ECAjB,MAAMrf,EAAO,iBAEepF,EAAfA,aAAe,CAC3B0kB,oBAAqB,qBACrB1a,cAAkB5E,EAAF,iBAChB6E,UAAc7E,EAAF,e,sZC4CGuf,gB,EAiEAC,yB,EAkRAC,cAAT,SAAuBlhB,EAASmhB,GACtC,IAAKnhB,IAAYmhB,GAAenhB,EAAQqV,UAAYvT,oBACnD,OAAO,EAGR,IAAInL,EAAOqJ,EAAQohB,WACnB,KAAuC,QAA/BzqB,EAAOA,EAAK0qB,gBAAyB,CAC5C,IAAK1qB,EAAKyB,KAAM,OAAO,EACvB,GAAI+oB,EAAYzL,SAAS/e,EAAKyB,MAAO,OAAO,EAC5CzB,EAAOA,EAAKyB,O,EAIEkpB,YAAT,SAAqBC,GAC3B,IACInhB,EADA4I,EAAQ,GAEZ,IAAK5I,KAAQmhB,EAAiB,CAC7B,MAAM,MAAElyB,EAAF,aAAS2a,EAAT,aAAuB1B,GAAiBiZ,EAAgBnhB,GACxDohB,EAAY,CACjBrqB,KAAM,CAAE9H,QAAO2a,gBACf1B,gBAEDU,EAAMzH,KAAKigB,GAEZ,OAAOxY,G,EAkBQyY,uB,EAIAC,qBAAT,SACNC,EACAtyB,GACA,UAAEuyB,EAAF,gBAAaL,IAEb,IAAIM,GAAO,EAGVF,IAAanvB,iBAAeE,WAC5BrD,IAAUmD,iBAAeE,YAEzBmvB,GAAO,IAKND,EAAUpW,YAAchZ,iBAAeE,aACrCivB,IAAatyB,IACfsyB,GAAYtyB,GACZkyB,GAAmBA,EAAgBzV,aAEpC+V,GAAO,GAER,OAAOA,GAzcR,YACA,OAKA,QACA,OAMA,OAMA,QACA,OACA,QACA,QAEoCC,EAAvBA,qBAAuBC,IACnC,MACCC,YAAY,KAAEvpB,EAAF,UAAQmpB,GADf,WAELI,EAFK,gBAGLC,GACGF,EAIJ,GAFqCN,EAAqBG,GAExB,CAEjC,MAAM,YAAEM,EAAF,MAAeC,GAAUlB,EAC9BW,EACAI,GAED,OAAOhB,EAAckB,EAAd,GAA6BD,mBAAoBE,IAEzD,OAAOnB,EAAcvoB,EAAd,GAAsBwpB,mBAAoBD,KAQ3C,SAAShB,EAAcvoB,EAAM0pB,GACnC,MAAM,aACLnY,EADK,QAELoY,EAFK,SAGLC,EAHK,MAILhzB,EAJK,UAKLuyB,EALK,gBAMLK,GACGE,EAEJ,OAAQ1pB,GACP,KAAKxG,cAAYI,QAChB,OA6MH,UAA0B,MAAEhD,IAC3B,MAAO,CACNizB,QAAS,aACTC,aAAc,CACbC,QAAS5hB,KAAK6hB,MAAMpzB,KAjNbqzB,CAAiB,CAAErzB,MAAO2a,IAClC,KAAK/X,cAAYG,KAChB,OAAIwvB,EAAUpW,YAAc5Y,gBAAcC,cAoN7C,UAA8B,MAC7BxD,EAD6B,aAE7B2a,EAF6B,UAG7B4X,EAH6B,gBAI7BK,IAEA,MAAO,CACNK,QAAS,kBACTC,aAAc,CACblzB,QACA2a,eACArb,KAAMizB,EAAUpW,UAChBA,UAAWoW,EAAUpW,UACrBmX,UAAWf,EAAUe,UACrBhX,YAAaiW,EAAUjW,YACvBrD,aAAcsZ,EAAUtZ,aACxB2Z,oBAnOQW,CAAqB,CAC3BvzB,QACA2a,eACA4X,YACAK,oBAEOL,EAAUpW,YAAc5Y,gBAAcF,UACvCmwB,EAAsB,CAC5BxzB,QACA2a,eACA4X,YACAkB,QAASle,WAASG,MAClBge,iBAAiB,EACjBC,aAAa,IAAA1zB,GAAE,qBAGTuzB,EAAsB,CAC5BxzB,QACA2a,eACA4X,YACAkB,QAASle,WAASC,SAClBke,iBAAiB,EACjBC,YAAa,KAEhB,KAAK/wB,cAAYC,QAChB,OA+MH,UAA2B,MAAE7C,EAAF,QAAS+yB,EAAT,gBAAkBW,IAC5C,MAAO,CACNT,QAAS,cACTC,aAAc,CACbU,SAAUb,EACVc,WAAW,EACXzqB,KAAM,SACNuqB,aAAa,IAAA1zB,GAAE,8BACfD,QACA0zB,oBAxNOI,CAAkB,CACxB9zB,QACA+yB,UACAW,iBAAiB,IAEnB,KAAKvwB,iBAAeG,OACnB,OAmOH,UAA0B,MAAEtD,EAAF,UAASuyB,IAClC,MAAO,CACNU,QAAS,eACTC,aAAc,CACba,MAAOxB,EAAUyB,QACjBC,aAAcj0B,GAASooB,iBACvBsL,gBAAiBnB,EAAUmB,gBAC3BG,WAAW,IA1OJK,CAAiB,CAAEl0B,QAAOuyB,cAClC,KAAKpvB,iBAAeC,cACnB,OAqNH,UAA4B,MAAEpD,EAAF,QAAS+yB,EAAT,UAAkBR,IAC7C,MAAO,CACNU,QAAS,iBACTC,aAAc,CACbU,SAAUb,EACVc,WAAW,EACX7zB,QACAm0B,UAAWC,OAAO7B,EAAU4B,aA5NrBE,CAAmB,CACzBr0B,MAAO2a,EACPoY,UACAR,cAEF,KAAK3vB,cAAYE,OACjB,QACC,OA6FH,UAA0B,MACzB9C,EADyB,QAEzB+yB,EAFyB,SAGzBC,EAHyB,gBAIzBU,EAJyB,UAKzBnB,IAEA,MAAO,CACNU,QAAS,cACTC,aAAc,CACbF,WACAY,SAAUb,EACVc,WAAW,EACXzqB,KAAM,OACNpJ,QACA0zB,kBACAS,UACC5B,EAAU4B,WAAa7c,oBACpB8c,OAAO7B,EAAU4B,gBACjB5O,IAhHG+O,CAAiB,CACvBt0B,MAAO2a,EACPoY,UACAC,WACAU,iBAAiB,EACjBnB,eAKG,SAASX,EAAuBW,EAAWO,GAEjD,MAAMra,GAAe,IAAAyD,yBACpBqW,EAAUjX,OACV/X,gBAAcC,eAGf,GA+ND,SAA4BiV,GAE3B,OAAIA,IAAiBtV,iBAAeE,UAjOhCkxB,CAAmB9b,GAAe,CAErC,MAKM+b,EAAoB,CACzBrY,WANsB,IAAAD,yBACtBqW,EAAUjX,OACV/X,gBAAcI,SAKd2vB,UAHiBR,EAAM2B,cAAcn1B,KAIrCgd,aAAc,GAEToY,EAAgBA,EAAhBA,GACF5B,EADE,CAELP,eAAgBO,EAAMP,UAAciC,KAErC,MAAO,CAAE3B,YAAajwB,cAAYG,KAAM+vB,MAAO4B,GAGhD,GAuMD,SAAyBjc,GACxB,OAAIA,IAAiB7V,cAAYC,QAxM7B8xB,CAAgBlc,GACnB,MAAO,CAAEoa,YAAajwB,cAAYC,QAASiwB,SAG5C,GA8LwBpa,EA5LtBD,GACA,IAAAyD,yBAAwBqW,EAAUjX,OAAQ/X,gBAAcE,YA4LtDiV,IAAkB9V,cAAYE,OA1LhC,CACD,MAAM0xB,EAAoB,CACzBL,WAAW,IAAAjY,yBACVqW,EAAUjX,OACV/X,gBAAcE,aAGVixB,EAAgBA,EAAhBA,GACF5B,EADE,CAELP,eAAgBO,EAAMP,UAAciC,KAGrC,OAAIA,EAAkBL,UAAYxhB,oBAC1B,CACNkgB,YAAa1vB,iBAAeC,cAC5B0vB,MAAO4B,GAGF,CACN7B,YAAajwB,cAAYE,OACzBgwB,MAAO4B,GAqKV,IAAyBhc,EAjKxB,GAiLD,SAAyBD,GAExB,OAAIA,IAAiBtV,iBAAeG,OAnLhCsxB,CAAgBnc,GAAe,CAClC,MAKM+b,EAAoB,CACzBR,SANoB,IAAA9X,yBACpBqW,EAAUjX,OACV/X,gBAAcC,cACdkP,cAGsBshB,QACpBna,OAAO9I,IAASA,EAAK8jB,SACrB/jB,IAAIC,GACJ,KAAYA,EAAZ,CAAkBrM,GAAIqM,EAAK/Q,SAE7B0zB,iBAAiB,GAEZgB,EAAgBA,EAAhBA,GACF5B,EADE,CAELP,eAAgBO,EAAMP,UAAciC,KAErC,MAAO,CAAE3B,YAAa1vB,iBAAeG,OAAQwvB,MAAO4B,GAGrD,MAAO,CAAE7B,YAAajwB,cAAYE,OAAQgwB,SA2B3C,SAASU,GAAsB,MAC9BxzB,EAD8B,aAE9B2a,EAF8B,UAG9B4X,EAH8B,QAI9BkB,EAJ8B,gBAK9BC,EAL8B,YAM9BC,IAEA,MAAMmB,EAAgB,CACrBC,WAAYxC,EAAUjX,OAAOjC,QAAQ9I,aAAavQ,MAClDmc,UAAWoW,EAAUpW,UACrBmX,UAAWf,EAAUe,UACrBhX,YAAaiW,EAAUjX,OAAO7P,MAC9BwN,aAAcsZ,EAAUtZ,cAEzB,MAAO,CACNga,QAAS,kBACTC,aAAc,CACblzB,QACA2a,eACArb,KAAMizB,EAAUpW,UAChBA,UAAWoW,EAAUpW,UACrBmX,UAAWf,EAAUe,UACrBhX,YAAaiW,EAAUjW,YACvBmX,UACAC,kBACAoB,gBACAE,oBAAqBC,EACpBxB,EACAqB,GAEDnB,gBAKI,MAAMsB,EAA4BA,EAA5BA,0BAA4B,CAACxB,EAASqB,IAC9CrB,IAAYle,WAASC,YAGrB,IAAAnK,iBAAgBypB,EAAcxY,aA+F5B,MAAM4Y,EAA8BA,EAA9BA,4BAA8BvF,UAC1C,MAAM,MAAEprB,GAAUiX,EAAO2Z,KACnBC,EAAU7wB,EAAMoC,KAAKqV,KAAK2J,GAA0B,gBAAlBA,EAAK0P,UACvCC,EAAYF,EAAUA,EAAQG,iBAAmB,KAIvD,OAAO,IAAA3rB,WAHW,IACjB4rB,QAAQ1wB,OAAO2wB,uBAAuBzZ,KAAK0Z,GAAMA,EAAGhxB,KAAO4wB,IAEhC,CAAEtrB,cAAe,OAGT2rB,EAAxBA,sBAAwBhG,OAAS5mB,OAAMyS,SAAQ+P,eAC3D,UACO2J,EAA4B1Z,GACjC,MAAOwN,GACR4M,QAAQC,KAAK,qCAGdC,cAAYnxB,IAAI,CACfD,GAAI8W,EAAO2Z,KAAKzwB,GAChBqxB,OAAQ,CAAC,WACTnxB,SAAUL,KACT,IAAAuE,gBAAevE,EAAOwE,GACtBwiB,EAASve,eAAa6F,qBAAsB,CAAEtO,cAqC1ByxB,EAAVA,QAAUC,GACfA,EAAgB,QAAU,SAD3B,MAIMC,EAAkBA,EAAlBA,gBAAkB,CAACl2B,EAAOmc,IAErCA,IAAc5Y,gBAAcC,eAC5BxD,IAAUmD,iBAAeG,OAQpB,SAAS8uB,EAAqBG,GACpC,OAAOA,EAAUpW,YAAc5Y,gBAAcG,cA6BfyyB,EAAlBA,gBAAkB,EAAGxD,aAAY5qB,kBAC7C,MAAM,MAAE/H,EAAF,aAAS2a,EAAT,UAAuB4X,GAAcI,GAC3C,IAAA9qB,0BACC,CACC7H,QACA2a,eACAyb,cAAep2B,EACfq2B,qBAAsB1b,GAEvB5S,GAEDA,EAAY,CACXkuB,cAAeC,EAAgBl2B,EAAOuyB,EAAUpW,e,6BCxdlD,Q,cCAArd,EAAOD,QAAUy3B,sC,wKCARtpB,gB,sFACAupB,mB,oVCDT,YACA,OAMA,QAEO,MAAMC,EAAWA,EAAXA,SAAW9D,GAASA,EAAM+D,UAAUzqB,iBAEpC0qB,EAAkBA,EAAlBA,gBAAkB,EAAGC,OAAMC,mBACvC,MAAM,IAAEpd,EAAF,KAAOqd,GAASD,EACtB,OAAO,IAAAh3B,KAAI+2B,EAAO,QAAOnd,YAAcqd,UAAStR,IAWpCuR,GARwBC,EAAxBA,sBAAwBxyB,IACvB,IAAAuH,cAAavH,GACRyX,KAAK2J,GACf,CAAC,KAAM,MAAMngB,SAASmgB,EAAK0P,WAKTyB,EAAdA,YAAc,EAC1BH,OACAC,eACAI,WACAjvB,cACAkvB,eAAc,MAGVL,EAAapd,MAAQwd,EAASxd,KACjC0d,EAAoBP,EAAMC,EAAapd,IAAKwd,EAASxd,KAGtD,MAAM2d,EAAcT,EAAgB,CAAEC,OAAMC,iBAExCO,EAAYC,SAAUD,EAAYC,SAAS9Q,UAAY,EAElDsQ,EAAajR,OAAMiR,EAAajR,KAAKW,UAAY,IAE1D,IAAAze,0BACC,CACC,CAAE,aAAYmE,gCAA+BgrB,GAE9CjvB,GAGDsvB,EAAiBL,EAASrR,KAAMsR,KAGpBI,EAAmBA,EAAnBA,iBAAmB,CAAC1R,EAAMsR,GAAc,KAC/CtR,IAELA,EAAKW,SAAW,EACZ2Q,IACHtR,EAAKzc,QAGL4B,WAAW,IAAM6a,EAAKzc,YAYXouB,GARiBC,EAAjBA,eAAiB,CAAC7E,EAAO3qB,KACrC,MAAM,KAAE4uB,EAAF,aAAQC,GAAiBJ,EAAS9D,GAClCmE,EAAOH,EAAgB,CAAEC,OAAMC,iBACrCC,EAAKlR,KAAK6R,UAAUxyB,OAAO,UAC3B6xB,EAAKY,UAAUhzB,QAAQkhB,GAASA,EAAKW,UAAY,GACjDgR,EAAYvvB,OAAawd,IAGC+R,EAAdA,YAAc,CAACvvB,EAAa8uB,MACxC,IAAAhvB,0BACC,CACC,CAAE,aAAYmE,4BAA2B6qB,GAE1C9uB,KAIW2vB,EAAeA,EAAfA,aAAe,CAACpwB,EAAME,EAAW,eAEzCF,EAAKG,aAAYH,EAAOA,EAAKG,YACjC,MAAMC,EAAQJ,EAAKK,iBAAiBH,GACpC,OAAOX,MAAMe,KAAKF,IAoBNiwB,GAjBsBC,EAAtBA,oBAAsB,EAClCjB,OACAC,eACA7uB,cACAwjB,WACAyL,eAEA,GAAIA,EAAU,CACb,MAAMa,EAAUnB,EAAgB,CAAEC,OAAMC,aAAcI,IACtDA,EAASrR,KAAOkS,EAAQlS,KAExBmR,EAAY,CAAEH,OAAMC,eAAcI,WAAUjvB,gBAG7CwjB,EAASve,eAAamJ,oCAGSwhB,EAAnBA,iBAAmB,CAAChB,EAAMmB,KACtC,MAAMte,EAAMmd,EAAKoB,KAAKD,GAElBte,GAAKA,EAAImM,KAAK6R,UAAU7yB,IAAI,cAGpBqzB,EAAsBA,EAAtBA,oBAAsB,CAACrB,EAAMmB,KACzC,MAAMte,EAAMmd,EAAKoB,KAAKD,GAElBte,GAAKA,EAAImM,KAAK6R,UAAUxyB,OAAO,aAGvBkyB,EAAsBA,EAAtBA,oBAAsB,CAACP,EAAMsB,EAAeC,KACxDF,EAAoBrB,EAAMsB,GAC1BN,EAAiBhB,EAAMuB,IAGSC,EAApBA,kBAAoBpvB,IAChC,IAAKA,EAAM,OAEX,MAAMqvB,EAAU,CAAEL,KAAM,IAClBA,GAAO,IAAA1wB,wBAAuB0B,EAAM,MAE1C,IAAK,IAAIhK,EAAI,EAAGA,EAAIg5B,EAAKlzB,OAAQ9F,IAAK,CACrC,MAAMya,EAAM,CACXmM,KAAMoS,EAAKh5B,GACXs5B,MAAO,IAGFA,GAAQ,IAAAhxB,wBAAuB0wB,EAAKh5B,GAAI,SAC9C,IAAK,IAAI+a,EAAI,EAAGA,EAAIue,EAAMxzB,OAAQiV,IAAK,CACtC,IAAI6L,EAAO0S,EAAMve,GACb2d,EAAYC,EAAa/R,GACzByR,EAAW,KAGf,GACsB,IAArBK,EAAU5yB,QACV4yB,EAAU,GAAGD,UAAUnR,SAAS,wBAE3BoR,EAAU,GAAG7R,WACjBwR,EAAWzR,EAEXA,EAAO8R,EAAU,GAAGhwB,WACjBgwB,EAAU,GAAGhwB,WAAW6wB,cACxBzT,sBAEA4S,EAAU,IAEdA,EAAY,QAEZ,IAAK,IAAIc,EAAI,EAAGA,EAAId,EAAU5yB,OAAQ0zB,IACrCd,EAAUc,GAAGjS,UAAY,EAE3B,MAAMuQ,EAAO,CAAElR,OAAM8R,aACjBL,IAAUP,EAAKO,SAAWA,GAC9B5d,EAAI6e,MAAMnmB,KAAK2kB,GAGhBuB,EAAQL,KAAK7lB,KAAKsH,GAEnB,OAAO4e,GAGK,EAAAI,gBAA2C7S,IACvD,MAAM8S,EAAU9S,EAAK+S,cAEf7B,EAAO,IADI4B,EAAQE,UACE9vB,QAAQ8c,GAInC,MAAO,CAAEnM,IADG,IAFMif,EAAQG,QAAQ,SACNjxB,iBAAiB,OAClBkB,QAAQ4vB,GACrB5B,U,6BChLf,Q,cCAA/3B,EAAOD,QAAUg6B,sC,6iBCAjB,OACA,QAoBO,MAAMC,EAAuBA,EAAvBA,qBAAuB,EAAGrZ,SAAQC,SAAQC,qBACtD,MAAMoZ,EAAY3E,OAAOzU,GACnBqZ,EAActZ,EAAO1b,WAAW6B,QAAQ,UAAW,IACnDozB,EAAiBD,EAAYn0B,OAEnC,OACC4a,EAAOyZ,OAAOzZ,EAAO5a,OAASk0B,EAAYE,EAAgB,KAC1DD,GAoHWG,GA3GwBC,EAAxBA,sBAAwBC,IACpC,MAAMC,EAAqB,CAC1B7Z,OAAQ4Z,EAAWE,OAAO,EAAG,GAAGC,cAChC9Z,OAAQM,uBAAqBC,OAC7BN,eAAgBK,uBAAqBE,gBAGtC,YACIoZ,EADJ,CAECG,oBAAqBX,EAAqBQ,MAKJI,EAA3BA,yBAA2B,EAAGp6B,OAAMU,QAAOurB,eACvD,OAAQjsB,GACP,IAAK,cACAU,GACHurB,EACCve,eAAagU,4CAEf,MACD,IAAK,SACL,IAAK,SACL,IAAK,iBACJuK,EAASve,eAAaiU,6CAMe0Y,EAA3BA,yBAA2B,CAAC35B,EAAO+H,KAC/C,MAAM2X,EAAS0U,OAAOp0B,EAAM6F,QAAQ,UAAW,KAO/C,OALAkC,EAAY,CACXpB,KAAM,qCACN3G,MAAO0f,EACPzX,UAAW,QAELyX,GAI8Bka,EAAzBA,uBAAyB55B,KAAUA,EAGT65B,EAA1BA,wBAA0B,CAAC75B,EAAO+H,KAC9C,IAAK/H,EAAO,OAAO,EAEnB,MACM+yB,IADSqB,OAAOp0B,EAAMgE,WAAW6B,QAAQ,UAAW,KACjCya,2BAEzB,GAAIvY,EAAa,CAChB,IAAI+xB,EAAqB,GACpB/G,IACJ+G,EAAqB,CAAClZ,sBAAoBlB,SAE3C3X,EAAY,CACXpB,KAAM,6BACN3G,MAAO85B,EACP7xB,UAAW,QAIb,OAAO8qB,GAIkCgH,EAA7BA,2BAA6B/5B,IACpCA,GACEo0B,OAAOp0B,IAAUogB,6BAIY4Z,EAAxBA,sBAAwB,CAACC,EAAaC,IAC3C,CACN,CACCzG,QAAS,UACTnb,OAAO,IAAArY,GAAE,QACT2lB,SAAUsU,IAAiBD,EAC3BE,gBAAiBntB,eAAa2U,oCAE/B,CACC8R,QAAS,YACTnb,OAAO,IAAArY,GAAE,UACTk6B,gBAAiBntB,eAAamU,uBAMMiZ,EAA1BA,wBAA0B,CACtCC,EACAC,EACAva,EACAwa,IAEuB,gBAAnBxa,EACIsa,GAAmBlB,EAAkBmB,GAG3CD,IACCE,GACDpB,EAAkBmB,GAIYnB,EAApBA,kBAAoBn5B,GACf,WAAVA,GAIgCw6B,EAA3BA,yBAA2BzyB,IACvC,IAAK,IAAIhJ,EAAI,EAAGA,EAAI+hB,8BAA4Bjc,OAAQ9F,IACvDgJ,EAAY,CACXpB,KAAO,8BAA6Bma,8BAA4B/hB,GAChEiB,OAAO,EACPiI,UAAW,SAMyBwyB,EAA1BA,wBAA0B1yB,IACtCA,EAAY,CACXpB,KAAO,yCACP3G,OAAO,EACPiI,UAAW,QAGZF,EAAY,CACXpB,KAAO,uCACP3G,OAAO,EACPiI,UAAW,U,8EC1Kb,MAAMmK,EAAO,iBAEepF,EAAfA,aAAe,CAC3B2R,qBAAsB,sBACtBnM,sBAAuB,uBACvBkoB,iCAAqCtoB,EAAF,oBACnCuoB,iCAAqCvoB,EAAF,oBACnCwoB,iCAAqCxoB,EAAF,oBACnCyoB,8BAAkCzoB,EAAF,iBAChC0oB,gCAAoC1oB,EAAF,mBAClC2oB,wCAA4C3oB,EAAF,2BAC1C4oB,+CAAmD5oB,EAAF,kCACjD6oB,iCAAqC7oB,EAAF,oBACnC8oB,oCAAwC9oB,EAAF,uBACtC+oB,yBAA6B/oB,EAAF,4BAC3BgpB,yBAA6BhpB,EAAF,4BAC3BipB,sBAA0BjpB,EAAF,0BAG0BkpB,EAAtCA,oCAAsC,K,2ICnBnD,I,EAAA,Q,oCACA,QAMA,OAE8BC,EAAjBA,eAAiB,CAACC,EAAWzjB,KACzC,MAAM0jB,EAAc,CACnB,CACC/2B,GAAI+lB,oBACJnS,OAAO,IAAArY,GAAE,mBAuBX,OAnBK8X,GACJ0jB,EAAYvpB,KAAK,CAChBxN,GAAIimB,sBACJrS,OAAO,IAAArY,GAAE,oBAGXw7B,EAAYvpB,KAAK,CAChBxN,GAAIkmB,2BACJtS,OAAO,IAAArY,GAAE,oBAGL8X,GACJ0jB,EAAYvpB,KAAK,CAChBxN,GAAI8lB,mBACJlS,OAAO,IAAArY,GAAE,gBACT2lB,UAAW4V,IAINC,GAGqBC,EAAhBA,cAAgBp8B,GAEpB,IAAGA,kCADUqM,UAAKC,KAAP,qCAIc+vB,EAArBA,mBAAqBr8B,GACzB,6CAA4CA,+B,8DC7CrD,O,6BCAA,O,6BCAA,W,IACA,M,IACA,O,IACA,QACA,SACA,OACA,Q,oDAEA,IAAAs8B,qBAAoB,mBAAoB,CACvCC,SAAU,CAAEzyB,KAAM0yB,WAClBC,aAAc,CACbC,eAAe,EACfC,eAAgB,MAEjBtJ,WAAY,CACXlnB,MAAO,CACNywB,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRiR,YAAa,CACZ6hB,QAASn6B,kBAAgBC,eACzBm6B,OAAQ,CACP/yB,KAAM,SACNgzB,KAAM,CAACr6B,kBAAgBC,kBAGzB0J,iBAAkB,CACjBwwB,QAAS,UAEVrlB,OAAQ,CACPqlB,QAAS7oB,yBAAuBwD,SAGlCwlB,eACAxjB,iBACAyjB,mC,8FCrCD,MACA,MACA,OACA,Y,UAOe5J,IACd,MAAM,cACLsJ,EADK,eAELC,EACAtJ,YAAY,MAAElnB,EAAF,YAAS4O,EAAT,OAAsBxD,EAAtB,iBAA8BnL,IACvCgnB,EAEJ,OACC,0BACC5G,MAAO,CACN,oBAAoB,EACpB,mBAAoBkQ,KAGrB,qCACCO,eAAcnpB,iBACd3H,MAAOA,EACP4O,YAAaA,EACb3O,iBAAkBA,GAvBEmL,IAClBA,GAAWA,EAAOhS,QAChB,qCAAgB23B,aAAA,EAAYzI,MAAOld,IADJ,KAwBlC4lB,CAAgB5lB,GAEhBolB,GAAiB,mBAACA,EAAD,MAAqB,MAEvC,yCACA,4C,6BCnCJ,O,6BCAA,W,IACA,M,IACA,O,IACA,QACA,Q,oDAEA,IAAAL,qBAAoB,eAAgB,CACnCC,SAAU,CACTzyB,KAAM0yB,WAEPnJ,WAAY,CACX+J,aAAc,CACbR,QAAS7oB,yBAAuBqpB,cAEjCC,kBAAmB,CAClBT,QAAS7oB,yBAAuBspB,oBAGlCN,eACAxjB,oB,8FClBD,MACA,O,UAOe6Z,IACd,MACCC,YAAY,aAAE+J,EAAF,kBAAgBC,IACzBjK,EAEJ,OAAKgK,GAGJ,mBAAC,EAAAE,SAAD,KAb0BD,IACtBA,GACE,yCADwB,KAa5BE,CAAoBF,IACrB,iDALwB,O,6BCd3B,O,6BCAA,W,IACA,M,IACA,O,IACA,QACA,SACA,QACA,O,oDAEA,IAAAf,qBAAoB,uBAAwB,CAC3CC,SAAU,CACTzyB,KAAM0yB,WAEPnJ,WAAY,CACXlnB,MAAO,CACNywB,QAAS7oB,yBAAuB5H,OAEjC4O,YAAa,CACZ6hB,QAAS7oB,yBAAuBgH,aAEjC3O,iBAAkB,CACjBwwB,QAAS7oB,yBAAuB3H,kBAEjCoxB,wBAAyB,CACxBZ,QAAS7oB,yBAAuBypB,yBAEjCC,kBAAmB,CAClBb,QAAS7oB,yBAAuB0pB,mBAEjCC,iBAAkB,CACjBd,QAAS7oB,yBAAuB2pB,kBAEjCC,gBAAiB,CAChBf,QAAS7oB,yBAAuB4pB,iBAEjCC,mBAAoB,CACnBhB,QAAS7oB,yBAAuB6pB,oBAEjCC,gBAAiB,CAChBjB,QAAS7oB,yBAAuB8pB,iBAEjCpkB,SAAU,CACTmjB,QAAS7oB,yBAAuB0F,UAEjCC,YAAa,CACZkjB,QAAS7oB,yBAAuB2F,aAEjC,CAAC3I,eAAc,CACd6rB,QAAS7oB,yBAAuB+pB,YAEjCC,gBAAiB,CAChBnB,QAAS7oB,yBAAuBgqB,iBAEjCC,wBAAyB,CACxBpB,QAAS7oB,yBAAuBiqB,yBAEjCvlB,kBAAmB,CAClBmkB,QAAS7oB,yBAAuB0E,kBAChCokB,OAAQ,CACP/yB,KAAM,aAITizB,eACAxjB,iBACAyjB,mC,8FChED,QACA,OACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,MACA,YACA,SACA,OACA,OAEA,MAAMiB,EAAe,CAACL,EAAoBE,IACpCF,GAAuBE,GAG3B,0BAAKzU,UAAU,yBACd,iCAAYrQ,MAAM,aAAasQ,KAAK,QAJS,KAS1C5X,EAAU,CACfwsB,GAAIC,iBACJC,GAAIC,gBAECC,EAAmB,CAAC,WAAY,aAChCC,EAA0B,CAAC,cAAe,gB,UAEjC,CAACnL,GAASnH,eACxB,MACCoH,YAAY,iBACXqK,EADW,gBAEXC,EAFW,mBAGXC,EAHW,gBAIXC,EAJW,SAKXpkB,EALW,YAMXC,EACA,CAAC3I,eAAc+sB,EAPJ,gBAQXC,EARW,wBASXC,EATW,kBAUXvlB,IAEE2a,EAEJ,OAAIuK,EAAwB,KAEvBD,GAGJ,0BAAKrU,UAAU,iBACd,mBAAC,EAAAmV,WAAD,CACCvS,SAAUA,EACV8R,gBAAiBA,EACjBC,wBAAyBA,EACzBJ,mBAAoBA,EACpBnlB,kBAAmBA,KAEpB,0BAAK4Q,UAAU,wBACb4U,EAAaL,EAAoBE,IAClC,iCACCt1B,KAAMiR,EACNrB,QAASsB,EACThI,QAASA,EACT+sB,WAAW,IAAA99B,GAAE,gBACbkF,aAAcy4B,KAEf,mBAAC,EAAAtS,eAAD,CACCC,SAAUA,EACVC,WAAYxe,eAAaM,gCACzBgL,OAAO,IAAArY,GAAE,iBACTwrB,MAAM,EACNC,YAAY,aACZvmB,aAAc04B,EACd9lB,kBAAmBA,MAGrB,mBAAC,EAAAimB,kBAAD,CACCC,MAAO5qB,yBAAuB6qB,gBAC9BC,iBAAkB9qB,yBAAuB+qB,aACzCC,aAAclB,EAAkB,EAChCmB,UAAWj8B,gBAlCgBk7B,EAAaL,K,iGClD5C,WAoBA,QAEyB/qB,EAAZA,UAAY,CACxB7S,KAAM0M,gBACN+vB,aAAc,CACbwC,oBAAqB,KACrBC,eAAgB,CACfC,MAAO,KACPC,OAAQ,OAGV/L,WAAY,CACX,CAACrjB,yBAAwB,CACxB4sB,SAAS,EACTyC,YAAY,GAEb,CAACpvB,sBAAqB,CACrB2sB,SAAS,EACTyC,YAAY,GAEb,CAACnvB,wBAAuB,CACvB0sB,SAAS,EACTyC,YAAY,GAEb,CAAClvB,uBAAsB,CACtBysB,SAAS,EACTyC,YAAY,GAEb,CAACjvB,gBAAe,CACfwsB,QAAS,GACTyC,YAAY,GAEb,CAAChvB,aAAY,GACb,CAACC,aAAY,CACZssB,QAAS,GACTyC,YAAY,GAEb,CAAC9uB,qBAAoB,CACpBqsB,QAAS,EACTyC,YAAY,GAEb,CAAC7uB,kBAAiB,CACjBosB,QAAShwB,iBAAeC,UACxBwyB,YAAY,GAEb,CAAC5uB,qBAAoB,CACpBmsB,QAAS,GACTyC,YAAY,GAEb,CAAC3uB,qBAAoB,CACpB2uB,YAAY,GAEb,CAAC1uB,gBAAe,CACf0uB,YAAY,GAEb,CAACzuB,2BAA0B,CAC1ByuB,YAAY,GAEb,CAACxuB,iBAAgB,CAChB+rB,QAAS,CACRjjB,aAAc,IAEf0lB,YAAY,GAEb,CAACvuB,eAAc,CACd8rB,QAAS,KACTyC,YAAY,GAEb,CAACtuB,eAAc,CACd6rB,SAAS,EACTyC,YAAY,IAGdrC,kC,odC7FD,QACA,OA8BA,OACA,QACA,QAeA,QAKA,QAKA,OACA,QAMA,OAKA,OAEA,MAAMsC,GAAyB,IAAAC,kBAAiB/xB,WAAU,CACzDgyB,WAAY,CAAC,QAAS,eACtBC,YAAa,CAAC,4BAA6B,SAAU,QAAS,SAC9DplB,OAAO,EACPqlB,gBAAiBhyB,eAAaE,oCAC9B+xB,kBAAmBjyB,eAAaG,sCAChC+xB,gBAAiBlyB,eAAaI,qCAmJzB+xB,GAAyB,IAAAN,kBAAiB9xB,4BAA2B,CAC1EqkB,OAAQ,OACR0N,WAAY,CAAC,SACbC,YAAa,CAAC,6BACdK,UAAW,OACXzlB,OAAO,EACPqlB,gBAAiBhyB,eAAac,mCAC9BmxB,kBAAmBjyB,eAAae,qCAChCmxB,gBAAiBlyB,eAAagB,oCA6HlBqxB,EAA4BA,EAA5BA,0BAA4BC,IACxC,MACC9jB,QACC+jB,SAAS,aAAEtmB,IAEZ0Z,YAAc,CAAC/iB,aAAYmJ,EAAU,CAACrJ,gBAAesJ,GAJhD,iBAKLO,EALK,SAMLgS,GACG+T,EAEJ/T,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,KAGd,IAAAnmB,aAAY,CACXC,mBACAR,WACAC,cACAC,eACAnR,KAAM,CAAE43B,WAAW,MAIRC,EAA8BA,EAA9BA,4BAA8BL,IAC1C,MACC9jB,QACC+jB,SAAS,aAAEtmB,EAAF,KAAgBnR,EAAhB,OAAsB83B,EAAS,KAEzCjN,YAAc,CAAC/iB,aAAYmJ,EAAU,CAACrJ,gBAAesJ,GAJhD,iBAKLO,EALK,SAMLgS,GACG+T,EAEJ,IAAIO,EACAD,EAAO/6B,QACVg7B,EAAiB,CAAEC,YAAY,EAAM/M,SAAS,EAAOC,SAAU4M,GAC/DrU,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,MAGdI,EAAiB,CAChBC,YAAY,EACZ/M,SAAS,EACTC,SAAU,GACV+M,2BAAuBxa,GAExBgG,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,KAGfI,EAAeH,WAAY,EAG3B,IAAIM,EAAY,GACZl4B,EAAK9H,QAAOggC,EAAY,CAAEC,UAAU,KAExC,IAAA3mB,aAAY,CACXC,mBACAR,WACAC,cACAC,eACAnR,UAAWA,EAAS+3B,EAAmBG,KAGnCJ,EAAO/6B,SACX0mB,EAAS2U,eAAiBxjB,sCAAuC,CAChElB,OAAQE,sBAAoBC,kBAC5B1C,iBAEDsS,EAASve,eAAamB,yCA0IXgyB,EAAqBA,EAArBA,mBAAqB,EAAG3kB,SAAQmX,aAAYpH,eACxD,MAAMvS,EAAc2Z,EAAWjjB,iBACzB,UAAEyM,EAAF,aAAalD,EAAb,MAA2BjZ,GAAUwb,EAAO+jB,QAClD,IAAIa,EAAoB9vB,iBAAe6L,GAAW1L,SAASzQ,GACvDgb,EAAe1K,iBAAe6L,GAAW3L,MACzC6vB,GAAW,IAAAtlB,gBAAe/B,EAAagC,GACvCslB,EAAsB,CACzBpnB,SAAUD,EAAaC,SACvBC,YAAaknB,GAEd9U,EAASve,eAAaO,8BAA+B,CACpD0L,aAAcqnB,EACdx4B,KAAM,CACL9H,MAAOogC,EACPzlB,aAAcylB,EACdH,UAAU,KAGZ1U,EAAS2U,eAAiBxjB,sCAAuC,CAChElB,OAAQE,sBAAoBC,kBAC5B1C,aAAcqnB,KAIHC,EAAgCA,EAAhCA,8BAAgC,EAC5C5N,aACApZ,uBAEA,MACC,CAAC3J,aAAYmJ,EACb,CAACqE,qBAAoBojB,GAClB7N,EAEE8N,GAAkB,IAAAvlB,2BAA0BnC,EAAUynB,GAE5DjnB,EAAiB,CAAE,CAAC3J,aAAY6wB,KAGpBC,EAAyBA,EAAzBA,uBAAyB,EAAGnV,WAAU/P,aAClD,MAAM,OAAEmlB,EAAF,aAAU1nB,GAAiBuC,EAAO+jB,QAExC,OAAQoB,GACP,KAAK/zB,wBACJ2e,EAASve,eAAaoB,mCAAoC,CACzD6K,iBAED,MACD,KAAKpM,0BACJ0e,EAASve,eAAawB,yBAA0B,CAAEyK,mBA4C/C2nB,GAAoB,IAAA/B,kBACxB,iDACD,CACCzN,OAAQ,MACR2N,YAAa,CAAC,4BAA6B,gBAC3CE,kBAAmBjyB,eAAa4B,8BAChCswB,gBAAiBlyB,eAAa8B,iBAC9B6K,OAAO,IAwCIknB,EAAuBA,EAAvBA,qBAAuB,EAAGtV,WAAUoH,aAAYnX,aAC5D,MACCvC,cAAc,SAAEC,IACbsC,EAAO+jB,SACL,SACLxmB,EACA0b,eAAe,KAAEn1B,GAFZ,iBAGL8b,EAHK,YAILf,EAJK,MAKL5O,GACGknB,GAEHlnB,MAAO6Q,EACPjD,SACC9I,cAAgBoK,aAAcoa,GAC9BpkB,SAAW3Q,MAAOmc,GAClB2kB,eAAiB9gC,MAAO+gC,KAEtBhoB,EAASG,GACPic,EAAO,CACZ6L,gBAAiB1hC,EACjB+a,cACAiC,cACAH,YACA8kB,oBAAqBF,IAAcn+B,cAAYI,UAK5C,IAAAqI,iBAAgBiR,KAAiBlB,EAAiBkB,GACrDiP,EAASve,eAAaqB,kCAAmC,CACxDiO,gBAGDiP,EAASiU,eAAgBltB,0BAA2B,CACnD4uB,SAAU,KACT,2CACCC,SAAS,EACT7hC,MAAM,IAAA2c,eAAc8Y,EAAY5Y,GAChCilB,2BAA2B,EAC3B9N,UAAWrxB,SAAOE,WAClBsJ,MAAOA,EACP41B,uBAAuB,EACvBlM,KAAMA,OAOEmM,EAAyBA,EAAzBA,uBAAyB,EACrC3O,aACApZ,mBACAiC,aAEA,MAAQc,YAAailB,GAAkB/lB,EAAO+jB,QACxCxmB,EAAW4Z,EAAW/iB,aACtB4xB,EAAoBzoB,EAASc,OAClC,CAAC4nB,EAAG1iC,IAAMga,EAASha,GAAG0M,QAAU81B,GAEjChoB,EAAiB,CAChB,CAAC3J,aAAY4xB,EACb,CAACpxB,eAAc/F,KAAKE,SAIQ+xB,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAaC,uCAAwC2xB,EACtD,CAAC5xB,eAAaE,qCAnrBc,EAAGqM,uBAC/BA,EAAiB,CAChB,CAACjK,0BAAwB,EACzB,CAACE,yBAAuB,KAirBzB,CAACxC,eAAaG,uCA7qBgB,EAAGqO,SAAQjC,mBAAkBxR,kBAC3D,MACCw3B,SAAS,OAAEja,IACR9J,EACEijB,EAAQrK,OAAO9O,EAAOoc,UACtBhD,EAAStK,OAAO9O,EAAOoZ,QAE7BnlB,EAAiB,CAChB,CAAC5J,aAAY2V,EACb,CAACtV,qBAAoBsV,EAAOqc,MAC5B,CAAC7xB,kBAAiB2uB,EAClB,CAAC5uB,qBAAoB6uB,EACrB,CAACzuB,gBAAeqV,EAAOsc,YACvB,CAACtyB,0BAAwB,EACzB,CAACE,yBAAuB,EACxB,CAACD,uBAAqB,KAGvB,IAAA1H,0BACC,CACC,CAAE,aAAYmE,kCAAiC,CAAEyyB,QAAOC,WAEzD32B,IAwpBD,CAACiF,eAAaI,oCAppBa,EAAGmM,uBAC9BA,EAAiB,CAChB,CAAChK,uBAAqB,EACtB,CAACD,0BAAwB,EACzB,CAACE,yBAAuB,KAkpBzB,CAACxC,eAAaK,kCA9oBY,EAAGslB,aAAYpZ,uBACzC,MACC,CAAC7F,oBAAmBmuB,EACpB,CAAClyB,aAAYmyB,EACb,CAACve,kBAAiBlJ,EAClB,CAAC+C,qBAAoBhC,EACrB,CAAC7H,iBAAgB+G,EACjB,CAAC1G,yBAAwBmE,GACtB4a,GAGE,cAAE9a,EAAF,oBAAiBC,GAAwBgqB,GACzC,UAAElqB,EAAF,YAAaD,IAAgB,IAAAyC,iBAClCC,EACAC,GAEKynB,GAAqB,IAAAtqB,qBAC1B,IAAA0C,sBAAqB0nB,GACrBlqB,EACAC,EACAC,EACAC,EACAC,GAEK0oB,GAAkB,IAAAvlB,2BACvB4mB,EAAS3mB,QACTC,GAGD7B,EAAiB,CAChB,CAAC7J,gBAAeqyB,EAChB,CAACnyB,aAAY6wB,EACb,CAAChxB,wBAAsB,EACvB,CAACE,kBAAY4V,KA8mBd,CAACvY,eAAaO,+BArlBS+xB,IACvB,MACC9jB,QACC+jB,SAAS,aAAEtmB,EAAF,KAAgBnR,IAE1B6qB,YAAc,CAAC/iB,aAAYmJ,EAAU,CAACrJ,gBAAesJ,GAJhD,iBAKLO,GACG+lB,GACJ,IAAAhmB,aAAY,CACXC,mBACAR,WACAC,cACAC,eACAnR,UAykBD,CAACkF,eAAaW,qCArkBc2xB,IAC5B,MACC9jB,QACC+jB,SAAS,MAAE5lB,EAAF,mBAASqoB,IAEnBrP,YAAc,CAAC/iB,aAAYmJ,EAAU,CAACrJ,gBAAesJ,GAJhD,iBAKLO,EALK,SAMLgS,GACG+T,GAEJ,IAAA5lB,kBAAiB,CAChBH,mBACAR,WACAC,cACAW,UAGGqoB,GACHzW,EACC2U,eAAiBrjB,+CACjB,CACCrB,OAAQE,sBAAoBC,kBAC5BhC,WAgjBH,CAAC3M,eAAa+B,4BAA6B,CAC1CkzB,OAhe2B3C,IAC5B,MACC9jB,QACC+jB,SAAS,aAAEtmB,EAAF,KAAgBnR,IAE1B6qB,YACC,CAAC/iB,aAAYmJ,EACb,CAACrJ,gBAAesJ,EAChB,CAACzF,iBAAgB+G,EACjB,CAACoJ,wBAAuBhY,GARpB,SAUL6f,GACG+T,EAEJ,IAAInjB,EAAYnD,EAAYC,EAAaE,aAAa7Z,KAWtD,GATCgR,iBAAe6L,KACf,IAAA9Q,iBAAgB0N,EAASE,EAAaC,UAAUzN,QAEhD8f,EAASve,eAAaU,iCAAkC,CACvDyO,YACAlD,eACAjZ,MAAO8H,EAAK6S,eAGVvO,4BAA0B5G,SAAS2W,GAAY,CAClD,MAAMvD,EAAQ0B,EAAchb,KAAK0E,WAC3Bk+B,EAAkB,GAClBC,GAAW,IAAAjoB,kBAAiB,CAAEjB,eAAcF,aAElD,GAAIrI,sBAAoByL,GAAY,CACnC,MAAMimB,EAAgB1xB,sBAAoByL,GAAW1L,SACpD3I,EAAK9H,OAEN8H,EAAK9H,MAAQoiC,EACbt6B,EAAK6S,aAAeynB,EAErBF,EAAgB/lB,GAAarU,EAAK6S,aAClCunB,EAAA,MAA2BC,EAC3B5W,EACCve,eAAaa,qCACb,CACC+K,QACA9Q,KAAMo6B,EACNG,0BAA2B32B,GAE5B,CACCuN,eACAnR,cAIFyjB,EAASve,eAAaS,sCAAuC,CAC5DwL,eACAnR,UA2aDw6B,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,KAEtC,CAACv1B,eAAaM,iCAAkC,CAC/C20B,OAjnB0B3C,IAC3B,MACC3M,YACC,CAAC/iB,aAAYmJ,EACb,CAACrJ,gBAAesJ,EAChB,CAACzF,iBAAgB+G,GAJb,iBAMLf,GACG+lB,EACJ,IAAIkD,GAAc,IAAAjoB,oBAAmBvB,EAAasB,GAClDf,EAAiB,CAChB,CAAC3J,aAAY,IAAImJ,EAAUypB,GAC3B,CAACryB,iBAAgB,CAChB8I,aAAc,CACbE,YAAa,EACbD,SAAUH,EAASlU,OAAS,OAmmB9By9B,SAAU,CAAEhjC,KAAM,WAAYm/B,MAAO,MAEtC,CAACzxB,eAAaiC,yBAA0B,EAAGuM,SAAQ+P,eAClD,MAAM,MAAEvrB,EAAF,aAASiZ,EAAT,OAAuBwpB,GAAWjnB,EAAO+jB,QAE/C,GAAe,SAAXkD,EAAmB,OAEvB,MAAM36B,EAAO,CAAE6S,aAAc3a,EAAOA,SACpCurB,EAASve,eAAa+B,2BAA4B,CACjDjH,OACAmR,kBAGF,CAACjM,eAAakB,uCAAwC,EACrDsN,SACAzT,kBAEA,MAAM,KAAE4d,GAASnK,EAAO+jB,SACxB,IAAA13B,0BACC,CACC,CAAE,aAAYmE,uCAAsC2Z,GAErD5d,IAGF,CAACiF,eAAamB,uCAAwC,EACrDukB,QACA3qB,kBAEA,MAAM,oBAAEw2B,GAAwB7L,EAAM+D,UAAUzqB,iBAC5CuyB,IACHA,EAAoBr1B,SACpB,IAAArB,0BACC,CACC,CAAE,aAAYmE,uCAAsC,MAErDjE,KAIH,CAACiF,eAAagC,8BA1YgBswB,IAC9B,MACC9jB,QACC+jB,SAAS,aAAEtmB,EAAF,KAAgBnR,IAE1B6qB,YAAc,CAAC/iB,aAAYmJ,EAAU,CAACrJ,gBAAesJ,GAJhD,iBAKLO,EALK,SAMLgS,GACG+T,EAEJ/T,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,IAEd,MAAM3c,EAAWA,EAAXA,CACLgd,YAAY,EACZC,2BAAuBxa,GACpBzd,IAEJ,IAAAwR,aAAY,CACXC,mBACAR,WACAC,cACAC,eACAnR,KAAMgb,IAEPyI,EAASve,eAAamB,wCAkXtB,CAACnB,eAAaQ,qCAAsC6xB,EACpD,CAACryB,eAAaS,uCAAwCkyB,EACtD,CAAC3yB,eAAaU,kCAAmCyyB,EACjD,CAACnzB,eAAaY,8BAhTQ,EAAG4N,SAAQ+P,WAAUoH,iBAC3C,MAAM,OAAE3a,EAAF,UAAU0qB,GAAclnB,EAAO+jB,SAEpC,CAACjc,aAAY7X,EACb,CAAC8X,kBAAiBlJ,EAClB,CAACqJ,wBAAuB2e,EACxB,CAACtyB,qBAAoB4yB,GAClBhQ,EAOEiQ,EAAc,CACnB,CACCtjC,KAAO,oCACPU,MAAO0iC,GAER,CACCpjC,KAAO,0BACPU,MAAOgY,IAYTuT,EACCsX,eAAiBtgB,uBACjB,CAAEqgB,eACF,CAAEE,gBAXqB,KACvBvX,EAASve,eAAaC,sCAAuC,CAC5DxB,QACA4O,cACAgoB,4BACAM,cAoRF,CAAC31B,eAAakC,2CApXK,EAAGsM,SAAQ+P,WAAUoH,aAAYD,YACpD,MAAMjnB,EAAQknB,EAAWrP,aACnBjJ,EAAcsY,EAAWpP,kBACzB7X,EAAmBinB,EAAWjP,wBAC9B+a,EAAQ9L,EAAW7iB,kBACnB6yB,EAAQhQ,EAAW5iB,sBACnB,MAAE/P,GAAUwb,EAAO+jB,SAGnB,eAAEf,GAAmB9L,EAAM+D,UAAUzqB,iBACvCwyB,EAAeE,SAAW1+B,EAAQ,GAAKw+B,EAAeC,QAAUA,GAGpElT,EAASve,eAAaC,sCAAuC,CAC5DxB,QACA4O,cACAgoB,0BAA2B32B,EAC3BgzB,OAAQ1+B,EAAQ,EAChBy+B,QACAkE,WAkWD,CAAC31B,eAAamC,gDA9VS,EAAGqM,SAAQ+P,WAAUhS,mBAAkBmZ,YAC9D,MAAM,MAAE1yB,GAAUwb,EAAO+jB,QACnBqD,EAAc,CACnB,CACCtjC,KAAM,yBACNU,WAKI,eAAEw+B,GAAmB9L,EAAM+D,UAAUzqB,iBACvCwyB,EAAeC,QAAUz+B,IAE7BuZ,EAAiB,CAChB,CAACzJ,kBAAiB9P,IAGnBurB,EAASsX,eAAiBtgB,uBAAwB,CAAEqgB,kBA8UpD,CAAC51B,eAAaoC,4BA3UiB,EAAGoM,SAAQ+P,eAC1C,MACCxa,MAAM,GAAErM,GADH,OAELsT,GACGwD,EAAO+jB,QAEX,OAAQ76B,GACP,KAAKgI,cACL,KAAKC,eAAc,CAClB,MAAM,iBAAEo2B,GAAqBvnB,EAAO+jB,QAC9ByD,EACLt+B,IAAOgI,cAAcL,iBAAiBJ,kBACvC,GAAI+2B,IAAkBD,EAAkB,OAExCxX,EAASve,eAAaY,6BAA8B,CACnDoK,SACA0qB,UAAWM,IAEZ,SA2TF,CAACh2B,eAAaa,sCAAuCsxB,EACrD,CAACnyB,eAAac,oCAxlBcwxB,IAC5B,MACC9jB,QACC2Z,MAAM,aAAElc,IAFJ,SAILsS,GACG+T,EAEJ/T,EAASve,eAAaQ,oCAAqC,CAC1DyL,kBAglBD,CAACjM,eAAae,sCA5kBgBuxB,IAC9B,MACC9jB,QACC+jB,SAAS,OAAEja,GACX6P,MAAM,aAAElc,EAAF,KAAgBnR,IAHlB,SAKLyjB,GACG+T,EACJ,GAAIha,EAAOyN,QACVxH,EAASve,eAAaS,sCAAuC,CAC5DwL,eACAnR,aAEK,CACN,IAAI83B,EAAS,CACZ,CACC/e,OAAQre,cAAYC,OACpBuO,QAASsU,EAAO2d,QAChBv5B,KAAMlH,cAAYE,OAGpB6oB,EAASve,eAAaS,sCAAuC,CAC5DwL,eACAnR,OACA83B,aAqjBF,CAAC5yB,eAAagB,mCAhjBasxB,IAC3B,MACC9jB,QACC+jB,SAAS,QAAE0D,GACX9N,MAAM,aAAElc,EAAF,KAAgBnR,IAHlB,SAKLyjB,GACG+T,EACJ,IAAIM,EAAS,CACZ,CACC/e,OAAQre,cAAYC,OACpBuO,QAASiyB,EACTv5B,KAAMlH,cAAYE,OAGpB6oB,EAASve,eAAaS,sCAAuC,CAC5DwL,eACAnR,OACA83B,YA+hBD,CAAC5yB,eAAaiB,8CAA+CsyB,EAC7D,CAACvzB,eAAaqC,4BAA6BqxB,EAC3C,CAAC1zB,eAAaoB,oCAAqCyyB,EAGnD,CAAC7zB,eAAawB,0BAhOgB,EAAG+c,WAAUoH,aAAYnX,aACvD,MAAM,aAAEvC,GAAiBuC,EAAO+jB,SAE/B,CAAC3vB,aAAYmJ,EACb,CAACrJ,gBAAesJ,EAChB,CAAC0K,wBAAuBhY,EACxB,CAAC0R,qBAAoBhC,GAClBuX,EAEE3Y,GAAY,IAAAlB,cAAa,CAAEC,WAAUC,cAAaC,kBAClD,UAAEsZ,EAAW5X,aAAcuoB,GAAUlpB,GAMlB,IAAAqC,oBACxBtD,EACAE,EAAaC,SACbkC,IAIAmQ,EAASve,eAAa6B,kBACtB0c,EAASve,eAAa0B,oBAAqB,CAC1Cy0B,aAAe,QAAOnpB,EAAUha,MAChCqiC,0BAA2B32B,KAG5B6f,EAASve,eAAayB,qBAAsB,CAC3ChD,MAAO8mB,EAAU9mB,MACjBy3B,QACAx3B,sBAiMF,CAACsB,eAAayB,sBAhKY,EAAG+M,SAAQmX,iBACrC,MAAQ,CAAClP,gBAAe2f,GAAwBzQ,GAC1C,MAAElnB,EAAF,iBAASC,EAAT,MAA2Bw3B,GAAU1nB,EAAO+jB,QAC5C3Q,GAAM,IAAAxS,4BAA2B3Q,EAAOC,GACxC23B,GAAW,IAAApjC,GAAE,SACbyE,EAAQ+G,EAAF,OAER23B,GACH,IAAIt9B,sBAAqBM,uBAAuB,CAC/C88B,QACAG,WACAzU,MACAlqB,OAGDI,OAAOw+B,KAAK1U,EAAKlqB,IAkJlB,CAACsI,eAAa0B,qBAAsBkyB,EACpC,CAAC5zB,eAAa4B,+BAnLoB,EAAG4M,SAAQ+P,WAAUoH,iBACvD,MACC4M,SAAS,OAAEja,IACR9J,GACI,CAACkI,wBAAuBhY,GAAqBinB,EAGrD,GADApH,EAASve,eAAa8B,kBAClBwW,EAAOzgB,OAAQ,CAClB,MAAM0+B,EAAUje,EAAO,GACvBiG,EAASve,eAAayB,qBAAsB,CAC3ChD,MAAO83B,EAAQC,OACfN,MAAOK,EAAQjrB,MACf5M,uBAwKF,CAACsB,eAAa6B,kBAAmB,EAAG0K,uBACnCA,EAAiB,CAChB,CAAClJ,gBAAc,KAGjB,CAACrD,eAAa8B,kBAAmB,EAAGyK,uBACnCA,EAAiB,CAChB,CAAClJ,gBAAc,KAGjB,CAACrD,eAAauB,cAAe,EAAGokB,aAAYpH,eAC3C,MACC,CAACjI,aAAY7X,EACb,CAAC8X,kBAAiBlJ,EAClB,CAACqJ,wBAAuB2e,EACxB,CAACtyB,qBAAoB4yB,GAClBhQ,EACJpH,EAASve,eAAaC,sCAAuC,CAC5DxB,QACA4O,cACAgoB,4BACAM,WAGF,CAAC31B,eAAasB,aAAc,EAC3BkN,SACAmX,aACApZ,mBACAgS,eAEA,MACCgU,SAAS,MAAEoD,IACRnnB,GAEH,CAAC8H,aAAY7X,EACb,CAAC8X,kBAAiBlJ,EAClB,CAACqJ,wBAAuB2e,GACrB1P,EAEJpH,EAASve,eAAaC,sCAAuC,CAC5DxB,QACA4O,cACAgoB,4BACAM,UAEDppB,EAAiB,CAAE,CAACxJ,qBAAoB4yB,KAGzC,CAAC31B,eAAaqB,mCAAoCizB,EAElDmC,gBAAiB,EAAG9Q,YAAc5Z,gBACjC6c,QAAQ8N,IAAI3qB,M,gGCn4Bd,YACA,QAEwBqW,EAAXA,SAAW,CACvB9vB,KAAM0M,gBACNswB,kC,sGCLD,YACA,QACA,OAEA,MAaMqH,GAAuB,IAAAC,qBAbA,iOAayC,CACrEC,aAAc,CAAC,eACf7E,gBAAiBhyB,eAAawV,+BAC9Byc,kBAAmBjyB,eAAayV,iCAChCyc,gBAAiBlyB,eAAa0V,gCAgBD4Z,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAauV,wBAAyBohB,EACvC,CAAC32B,eAAawV,gCAfe,KAC7BoT,QAAQ8N,IAAI,mCAeZ,CAAC12B,eAAayV,kCAZiB,EAAGjH,aAClC,MAAM,gBAAEsnB,GAAoBtnB,EAAO2Z,KAC/B2N,IAAmB,IAAA/+B,YAAW++B,IAAkBA,KAWpD,CAAC91B,eAAa0V,+BARc,KAC5BkT,QAAQ8N,IAAI,oC,wGClCb,YACA,QACA,QACA,OACA,Q,EAEaxrB,iBAAN,MACN,mBAAmBF,GAClB,OAAQA,EAAOU,eACd,KAAK9V,cAAYC,QAChB,OAAO,IAAIihC,cAAY9rB,GACxB,KAAKpV,cAAYI,QAChB,OAAO,IAAI+gC,cAAY/rB,GACxB,KAAKpV,cAAYM,gBAChB,OAAO,IAAI8gC,iBAAehsB,GAC3B,QACC,OAAO,IAAI4K,YAAU5K,O,mGChBzB,YAEO,MAAM8rB,UAAoBlhB,YAChCrK,YACC,MAAO,O,EAFIurB,e,mGCFb,YAEO,MAAMC,UAAoBnhB,YAChCrK,YACC,MAAO,U,EAFIwrB,e,sGCFb,YAEO,MAAMC,UAAuBphB,YACnCrK,YACC,MAAO,SAGRM,SACC,MAAO,CACNorB,SAAU,S,EAPAD,kB,0GCFb,YACA,QAWkC1wB,EAArBA,mBAAqB,CACjChU,KAAM0M,gBACN2mB,WAAY,CACX,CAACnf,wBAAuB,CACvB0oB,SAAS,EACTyC,YAAY,GAEb,CAAClrB,qBAAoB,CACpByoB,SAAS,EACTyC,YAAY,GAEb,CAAChrB,uBAAsB,CACtBuoB,SAAS,EACTyC,YAAY,GAEb,CAACprB,iBAAgB,CAChB2oB,QAAS,GACTyC,YAAY,GAEb,CAACjrB,oBAAmB,CACnBwoB,QAAS,GACTyC,YAAY,GAEb,CAAC/qB,yBAAwB,CACxBsoB,SAAS,EACTyC,YAAY,GAEb,CAAC9qB,uBAAsB,CACtBqoB,SAAS,EACTC,OAAQ,CAAE/yB,KAAM,WAChBu1B,YAAY,IAGdrC,kC,yVC7CD,QACA,QAWA,QACA,QACA,OACA,OACA,QAEO,MAAM4H,EAAoBA,EAApBA,mBAAoB,IAAArF,kBAAiB/xB,WAAU,CAC3DgyB,WAAY,CAAC,QAAS,eACtBC,YAAa,CAAC,6BACdplB,OAAO,EACPqlB,gBACChyB,eAAaqc,oDACd4V,kBACCjyB,eAAasc,sDACd4V,gBACClyB,eAAauc,qDAGF4a,EAAkBA,EAAlBA,gBAAkB,EAAG5qB,uBACjCA,EAAiB,CAChB,CAAC/F,yBAAuB,EACxB,CAACG,wBAAsB,KAIZywB,EAAoBA,EAApBA,kBAAoB,EAAG5oB,SAAQjC,mBAAkBgS,eAC7D,MACCgU,SAAS,OAAEja,IACR9J,EAEE6oB,GAAa,IAAAtsB,mBAClBuN,EAAOmP,cAAc6P,wBACrBhf,EAAOmP,cAAc/Z,UAGhBiiB,EAAoBrX,EAAOif,eAAe5H,kBAEhDpjB,EAAiB,CAChB,CAAChG,iBAAgB+R,EAAOmP,cACxB,CAAC/gB,oBAAmB4R,EAAO5N,QAC3B,CAAClE,yBAAuB,EACxB,CAACG,wBAAsB,EACvB,CAACC,yBAAwBywB,EACzB,CAACxwB,uBAAsB8oB,KAGpB,IAAA6H,6BAA4Blf,EAAOmP,gBACtClJ,EAASkZ,eAAoBviB,2BAA4B,CACxDliB,OAAO,KAIG0kC,EAAiBA,EAAjBA,eAAiB,EAAGnrB,mBAAkBiC,SAAQ+P,eAC1D,MACCgU,SACCz3B,MAAM,MAAE68B,KAENnpB,EACJjC,EAAiB,CAChB,CAAC9F,sBAAoB,EACrB,CAACD,yBAAuB,EACxB,CAACG,wBAAsB,KAIpB,IAAA1P,UAAS0gC,IACZpZ,EAASqZ,eAAmB7hB,sBAAuB,CAClDlM,OAAQ,CACP,CACC7F,QAAU,GAAE2zB,EAAM1B,YAAY0B,EAAME,SACpChkB,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,UAkBO45B,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAaoc,uDAAwD8a,EACtE,CAACl3B,eAAaqc,qDAAsD8a,EACpE,CAACn3B,eAAasc,uDAAwD8a,EACtE,CAACp3B,eAAauc,oDAAqDmb,EACnE,CAAC13B,eAAawc,+CAjBY,EAAGhO,SAAQmX,aAAYpZ,uBACjD,MAAQ,CAAChG,iBAAgBkhB,GAAkB9B,GACrC,MAAEra,GAAUkD,EAAO+jB,QAEzBhmB,EAAiB,CAChB,CAAChG,iBAAD,KACIkhB,EADJ,CAECnc,e,8EC/F8BP,EAApBA,kBAAoB,CAACusB,EAAyB5pB,IAC1D4pB,IAA4B5pB,EAEc8pB,EAA9BA,4BAA8BlqB,KACxCA,EAAcwqB,aAAexqB,EAAcyqB,c,wGCL9C,YAMA,QAEgC1iB,EAAnBA,iBAAmB,CAC/B/iB,KAAM0M,gBACN2mB,WAAY,CACX,CAACvV,qBAAoB,CACpB8e,QAAS,GACTyC,YAAY,GAEb,CAACxhB,8BAA6B,CAC7B+e,SAAS,EACTyC,YAAY,GAeb,CAACthB,uBAAsB,CACtB6e,QAAS,GACTyC,YAAY,IAGdrC,kC,oaCrCD,QAMA,QAMA,OAKA,QAKA,QACA,OAEA,MAgIa0I,EAA2BA,EAA3BA,yBAA2B,EACvCzrB,mBACAoZ,aACAnX,SACA+P,eAEA,MACCgU,SAAW/jB,OAAQypB,EAAV,MAA6BtrB,IACnC6B,GAEH,CAAC4B,qBAAoBhC,EACrB,CAACxL,aAAYmJ,EACb,CAACrJ,gBAAesJ,GACb2Z,EAGJ,OAAQsS,GACP,KAAKvpB,sBAAoBC,kBAAmB,CAE3C,MAAMupB,EAAavrB,EAAM3S,OAAO,CAACqpB,EAAKC,KACrC,MAAM,aAAErX,GAAiBqX,EACnBhlB,GAAa,IAAA4O,kBAAiB,CACnCjB,eACAF,aAGKosB,GAAa,IAAA95B,iBAAgBC,GACnC,IAAI85B,EAAchqB,EAAiB9P,QAER,IAAhB85B,IACVA,GAAc,IAAAC,mBACbF,EACGzpB,sBAAoBI,eACpBJ,sBAAoBC,kBACvBwpB,GACG,IAAAlrB,aAAY,CAAEhB,eAAcF,aAC5B,KAKDsX,EAAI/kB,KACP85B,EAAc/U,EAAI/kB,IAGnB,MAAMg6B,GAAa,IAAAvrB,eAAc,CAChChB,WACAC,cACAC,iBAEKssB,EAAqBJ,GACxB,IAAAK,2BAA0BJ,EAAaE,IACvC,IAAAG,mBAAkBL,EAAaE,GAIlC,OAFAjV,EAAI/kB,GAAci6B,EAEXlV,GACL,IAEGqV,EAAsBjmC,OAAOkmC,OAClCvqB,EACA8pB,GAGD3rB,EAAiB,CAAE,CAAC6D,qBAAoBsoB,IACxC,OAKFna,EAASve,eAAa+P,gDAGV6oB,EAAqBA,EAArBA,mBAAqB,EAAGpqB,SAAQjC,mBAAkBgS,eAC9D,MACCgU,SAAS,KAAEn2B,IACRoS,EACJjC,EAAiB,CAAE,CAACnQ,GAAO,KAC3BmiB,EAASve,eAAa+P,gDAGV8oB,EAA0BA,EAA1BA,wBAA0B,EAAGtsB,mBAAkBgS,eAC3DhS,EAAiB,EAAGoZ,iBACZ,CACNhsB,KAAMwW,6BACNnd,OAAO,IAAA8lC,2BAA0BnT,EAAWvV,yBAG9CmO,EAAS,KAAM,CACdniB,KAAM4D,eAAagQ,oDAIR+oB,EAA4BA,EAA5BA,0BAA4B,EAAGpT,iBAC3C,MAAMqT,EAAUrT,EAAWlP,gBACrBwiB,EAAUtT,EAAWxV,8BAEvB6oB,IACH,IAAIlgC,sBAAqBS,eAAe,CAAEC,kBAAmBy/B,KAIlDC,EAA0BA,EAA1BA,wBAA0B,EACtC1qB,SACAjC,mBACAgS,eAEA,MACCgU,SAAS,aAAEiB,IACRhlB,EACJjC,EAAiB,CAChB,CAAC6D,qBAAoBojB,IAEtBjV,EAAS4a,eAAmBl4B,+CAGhBm4B,EAAsBA,EAAtBA,oBAAsB,EAClCzT,aACAnX,SACA+P,WACAhS,uBAEA,MAAM6B,EAAmBuX,EAAWvV,qBAEpC,GAA6C,IAAzC3d,OAAO+E,KAAK4W,GAAkBvW,OAAc,OAAO,KAEvD,MAAMwhC,EAA4BA,EAA5BA,GAAiCjrB,IACjC,YAAEkB,GAAgBd,EAAO+jB,eACxB8G,EAA0B/pB,GACjC/C,EAAiB,CAChB,CAAC6D,qBAAoBipB,IAGtB9a,EAASve,eAAa+P,gDAGOuf,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAa0P,uCAzQU,EAAGlB,SAAQ+P,WAAUoH,iBAC7C,MACC4M,SAAW/jB,OAAQypB,EAAV,aAA6BhsB,GADjC,QAELsmB,GACG/jB,EAEJ,OAAQypB,GACP,KAAKvpB,sBAAoBI,eACxByP,EACCve,eAAa2P,sCACb4iB,GAED,MAED,KAAK7jB,sBAAoBC,kBAAmB,CAC3C,MAAQ,CAAC/L,aAAYmJ,GAAa4Z,EAC5BrnB,GAAa,IAAA4O,kBAAiB,CACnCjB,eACAF,cAEG,IAAA1N,iBAAgBC,GACnBigB,EAASve,eAAa2P,sCAAuC,CAC5DnB,OAAQE,sBAAoBI,eAC5B7C,iBAGDsS,EACCve,eAAa4P,yCACb2iB,GAEF,MAED,KAAK7jB,sBAAoBG,iBACxB0P,EACCve,eAAakQ,yCACbqiB,GAOHhU,EAASve,eAAa+P,gDAgOtB,CAAC/P,eAAa2P,uCA7NU,EAAGpD,mBAAkBoZ,aAAYnX,aACzD,MACC+jB,SAAW/jB,OAAQypB,EAAV,aAA6BhsB,IACnCuC,GAEH,CAAC4B,qBAAoBhC,EACrB,CAACxL,aAAYmJ,EACb,CAACrJ,gBAAesJ,GACb2Z,EAEJ,OAAQsS,GACP,KAAKvpB,sBAAoBI,eAAgB,CACxC,MAAMxQ,GAAa,IAAA4O,kBAAiB,CACnCjB,eACAF,aAED,IAAIqsB,EAAchqB,EAAiB9P,QAER,IAAhB85B,IACVA,GAAc,IAAAC,mBACbJ,GACA,IAAAhrB,aAAY,CAAEhB,eAAcF,eAG9B,MAAMwsB,GAAqB,IAAAC,2BAC1BJ,GACA,IAAArrB,eAAc,CACbhB,WACAC,cACAC,kBAGIysB,EAAsBA,EAAtBA,GACFtqB,EADE,CAEL,CAAC9P,GAAai6B,IAEfhsB,EAAiB,CAAE,CAAC6D,qBAAoBsoB,IACxC,SAyLF,CAAC14B,eAAa4P,0CApLa,EAAGrD,mBAAkBoZ,aAAYnX,aAC5D,MACC+jB,SAAW/jB,OAAQypB,EAAV,aAA6BhsB,IACnCuC,GAEH,CAAC4B,qBAAoBhC,EACrB,CAACxL,aAAYmJ,EACb,CAACrJ,gBAAesJ,GACb2Z,EAEJ,OAAQsS,GACP,KAAKvpB,sBAAoBC,kBAAmB,CAC3C,MAAMrQ,GAAa,IAAA4O,kBAAiB,CACnCjB,eACAF,aAED,IAAIqsB,EAAchqB,EAAiB9P,QAER,IAAhB85B,IACVA,GAAc,IAAAC,mBAAkBJ,EAAmB,KAEpD,MAAMM,GAAqB,IAAAE,mBAC1BL,GACA,IAAArrB,eAAc,CACbhB,WACAC,cACAC,kBAGIysB,EAAsBA,EAAtBA,GACFtqB,EADE,CAEL,CAAC9P,GAAai6B,IAEfhsB,EAAiB,CAAE,CAAC6D,qBAAoBsoB,IACxC,SAmJF,CAAC14B,eAAa6P,gDAAiDmoB,EAC/D,CAACh4B,eAAa8P,yCAA0C8oB,EACxD,CAAC54B,eAAa+P,+CAAgD,CAC7DklB,OAAQ4D,EACRvD,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,KAEtC,CAACv1B,eAAagQ,iDAAkD+oB,EAChE,CAAC/4B,eAAaiQ,8CAA+CipB,EAC7D,CAACl5B,eAAakQ,0CAA2CkpB,EAEzDE,iBAAkB,EAAG3T,YAAcvX,wBAElCwa,QAAQ8N,IAAItoB,M,sPC5SmBiqB,EAApBA,kBAAoB,CAAC7pB,EAAQC,KAAT,CAChCD,SACAC,YACIA,KAS4BgqB,EAApBA,kBAAoB,CAACL,EAAa3pB,IAAd,KAC7B2pB,EAD6B,CAEhC3pB,YACI2pB,EAAY3pB,OACZA,KAIoC+pB,EAA5BA,0BAA4B,CAACJ,EAAa3pB,IAAd,KACrC2pB,EADqC,CAExC3pB,YACI2pB,EAAY3pB,OADhB,CAECpC,aACI+rB,EAAY3pB,OAAOpC,QACnBoC,OAKmCqqB,EAA5BA,0BAA4BS,GAAS9mC,OAAO+E,KAAK+hC,GAAO1hC,Q,wGCpCrE,YACA,QASA,OAEgCwe,EAAnBA,iBAAmB,CAC/B/jB,KAAM0M,gBACN2mB,WAAY,CACX,CAACrP,aAAY,CACZ4Y,QAAS,GACTyC,YAAY,GAEb,CAACpb,kBAAiB,CACjB2Y,QAASn6B,kBAAgBC,eACzB28B,YAAY,GAEb,CAACnb,qBAAoB,CACpB0Y,SAAS,EACTyC,YAAY,GAEb,CAACjb,wBAAuB,CACvBwY,QAASlY,gBACT2a,YAAY,GAEb,CAAClb,gBAAe,CACfyY,SAAS,EACTyC,YAAY,IAGdrC,kC,4RCpCD,QAUA,QACA,QAMA,QACA,OACA,OAqE8BA,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAa+W,yBApEO,EAAGwH,WAAUoH,aAAYpZ,uBAC9C,MAAM9N,EAAQknB,EAAWrP,aACnBjJ,EAAcsY,EAAWpP,kBACzB7X,GAAmB,IAAA86B,qBACxB7T,EAAWjP,yBAEN+iB,EAAU,CACf,CAAChjB,iBAAe,IAAAijB,eAChB,CAAChjB,wBAAuBhY,GAGzB,GAAID,EACH8N,KAAmB,CAACiK,sBAAoB,GAASijB,IACjDlb,EACCob,eAAiBvd,sDACjB,CACC3d,QACA4O,cACAgoB,0BAA2B32B,QAGvB,CACN,MAAM/E,EAAO7B,OAAO8hC,SAASC,SACvBC,GAAe,IAAAC,kBAAiBpjB,eAAcC,YAAWjd,GAC/D,GAAImgC,GAAgBA,EAAangC,KAAM,CACtC,MAAMqgC,GAAc,IAAAC,kBACnBtgC,EACC,GAAEgd,iBAAemjB,EAAangC,QAEhC4S,KAAmB,CAACiK,sBAAoB,GAASijB,IACjDlb,EAASve,eAAa6W,qCAAsC,CAC3DmjB,qBAGDzb,EAASve,eAAa8W,4CAmCxB,CAAC9W,eAAa6W,sCA9BS,EACvB0H,WACAoH,aACApZ,mBACAiC,aAEA,MAAMnB,EAAcsY,EAAWpP,kBACzB7X,EAAmBinB,EAAWjP,yBAEnC6b,SAAS,YAAEyH,IACRxrB,EACE/P,EAAQu7B,EAAYv7B,MAC1B8N,EAAiB,CAAE,CAAC+J,aAAY7X,IAChC8f,EACCob,eAAiBvd,sDACjB,CACC3d,QACA4O,cACAgoB,0BAA2B32B,KAG7B,IAAA4jB,UAASrtB,SAAOC,cAAgB,UAASuJ,GAAS,EAAM8f,IAUxD,CAACve,eAAa8W,0CAPY,OAQ1B,CAACojB,eAAgB7iB,gCAAiC,EACjDkH,WACA/P,SACAmX,iBAEA,MAAMwU,EAAUxU,EAAWrP,cACrB,OAAEkgB,GAAWhoB,EAAO+jB,QAEtB4H,IAAY3D,GACfjY,EAASiU,eAAgBltB,0BAA2B,CACnD4uB,SAAU,KACT,2CACCC,SAAS,EACT7hC,KAAMqzB,EAAW8B,cAAcnc,MAC/B8uB,WAAW,EACX/F,uBAAuB,S,sPC3GtB,SAASgG,EAAyBC,GACxC,MAAMC,EAAiB,MACvB,IAAIC,EAAeF,EAAczhC,QAAQ,QAAS,QAIlD,OAHI0hC,EAAeE,KAAKH,KACvBE,EAAeA,EAAa3hC,QAAQ0hC,EAAgB,OAE9C,IAAIG,OAAUF,EAAF,K,EANJH,2B,EASAJ,iBAAT,SAA0BrY,EAAK+Y,GACrC,GAAmB,iBAAR/Y,GAAuC,iBAAZ+Y,EACrC,MAAO,GAGR,MAAMC,EAAeD,EAAQ/hC,MAAM,KAC7BiiC,EAAWjZ,EAAIhpB,MAAM,KAE3B,OAAOgiC,EAAa5gC,OAAO,CAAC8gC,EAAQC,EAAgB1iB,KACnD,GAAiC,MAA7B0iB,EAAeC,OAAO,GACzB,OAAOF,EAGR,MAAM9/B,EAAW+/B,EAAexO,OAAO,GACvC,YACIuO,EADJ,CAEC,CAAC9/B,GAAW6/B,EAASxiB,MAEpB,K,EAGY0hB,iBAAT,SAA0BkB,EAAUC,EAAQC,GAClD,OAAOD,EAAOlsB,KAAKosB,GACIf,EACpB,GAAEY,IAAWG,EAAMzhC,QAEA8gC,KAAKU,KAIDzB,EAAdA,YAAc,IAItB5hC,OAAOoB,cACRpB,OAAOoB,aAAaC,2BACpBrB,OAAOoB,aAAaC,0BAClBkiC,oBACF,EAI+B7B,EAAtBA,oBAAsB96B,IAClC,MAAM48B,EAAY,IAAIC,gBAAgBzjC,OAAO8hC,SAAS4B,QACtD,OAAOF,EAAUG,IAAI,6BAClBH,EAAU1oC,IAAI,6BACd8L,I,gHCvDJ,YAGO,MAAMg9B,EAAgBA,EAAhBA,cAAgB/F,GAASzxB,KAAKyxB,GAAO98B,QAAQ,KAAM,KAExCypB,EAAXA,SAAW,CAAC1W,EAAO+pB,EAAOgG,EAAWpd,KACjD,MAAM1R,EAAS6uB,EAAc/F,GAC7BpX,EAASve,eAAamX,6BAA8B,CACnDvL,QACAiB,SACA8uB,gB,qGCVF,YACA,SAE6BpZ,EAAhBA,cAAgB,CAC5BjwB,KAAM0M,gBACNswB,kC,sGCLD,aACA,QAEA,MAAM/M,GAAgB,IAAAqZ,6BACrB,6BACA,CACCC,0BAA2B77B,eAAaoX,mCAIZkY,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAamX,8BAA+BoL,EAC7C,CAACviB,eAAaoX,kCAAmC,EAAG5I,SAAQ+P,eAC3D,MAAM,KAAEzjB,GAAS0T,EAAO+jB,QACpBz3B,EAAKG,YAAcgc,aAAWC,QACjCqH,EAASve,eAAaqX,+BAAgC,CACrDmf,OAAQ17B,EAAK07B,Y,cChBjB1kC,EAAOD,QAAUiqC,uC,0RCCjB,OAKA,SASA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,WACA,QACA,QAEA,OAIA,QAEA,MAwCMC,EAAiB,CAACC,EAAiBC,KAEvC,0BAAKtgB,UAAU,iBACd,0BAAKA,UAAU,sBA3CU,GAAG1P,gBAAgBgwB,KAC9C,MAAM,UAAE7vB,EAAF,MAAayJ,GAAUomB,GACvB,UAAEzN,GAAc3Y,EAEtB,OACC,wCACC8F,UAAU,+CACVjf,KAAM0P,EAAU1P,KAChBkf,KAAK,KACLsgB,aAAa,EACbzV,QAAQ,WACR0V,gBAAgB,IAAAlpC,GAAE,cAClBwrB,MAAM,EACN7F,UAAW4V,EACX4N,WAAY,CAAE,cAAc,IAAAnpC,GAAE,eAC9BopC,oBAAmB,CAClBpwB,eACA0nB,OAAQ/zB,yBAETif,SAAS,QAyBPyd,CAAoBN,EAAiBC,GApBR,GAAGpmB,YACpC,MAAM,MAAEpX,GAAUoX,EAElB,OAAI,IAAAxX,iBAAgBI,IAElB,+BACCkd,UAAU,wBACVjf,KAAK,cACLkf,KAAK,KACLsgB,aAAa,IAIT,MAQHK,CAA0BN,KAMzBO,EAAoB,CAACR,EAAiBC,KAC3C,MAAM,MAAEpmB,EAAF,UAASzJ,GAAc6vB,EACvBE,EACL/vB,EAAUxB,YAAciL,EAAM/H,kBAAkBxb,KAAKU,OAClD,IAAAC,GAAE,4BACF,IAAAA,GAAE,8DAEN,OACC,0BAAK0oB,UAAU,iBACd,0BAAKA,UAAU,uBACd,wCACCA,UAAU,gCACVjf,KAAK,eACLkf,KAAK,KACLsgB,aAAa,EACbzV,QAAQ,WACR0V,eAAgBA,EAChB1d,MAAM,EACN7F,UAAU,EACVwjB,WAAY,CAAE,cAAc,IAAAnpC,GAAE,qBAC9B4rB,SAAS,UAwIR4d,EAAqB,CAACT,EAAiBC,KAC5C,MAAM,UAAE7vB,EAAF,MAAayJ,EAAb,SAAoB0I,GAAa0d,EACjCjpC,EAAQoZ,EAAUZ,SAASqK,EAAOzJ,IAClC,aACLH,EADK,UAELywB,EAFK,gBAGLC,EAHK,gBAILC,EAJK,cAKLlxB,GACGswB,EAEJ,OACC,mBAAC,EAAApM,SAAD,MACC,4BACC9Q,MAAO,CACN,gBAAgB,EAChB,oBAAoB,EACpB+d,UAAU,IAAAC,wBACTpxB,EACAgxB,EACAC,IAGFI,eAAc,EAAGjqB,aAEZA,EAAOkqB,YAAclqB,EAAOmqB,cAC/BnqB,EAAOojB,MAAQljC,IAGjBgsB,aAAYhD,IACPA,EAAE1oB,MAAQW,YAAUG,OAAO4nB,EAAEC,cAAcihB,WAE5C,IAAAC,uBACH5e,EACAtS,EACA0wB,EACAC,EACAF,IAvFkB,GAAGtwB,YAAWyJ,YACpC,GAAIzJ,EAAU9Z,OAASiE,gBAAcC,cAAe,OAAO,KAE3D,MAAQxD,MAAOoJ,EAAT,WAAeC,EAAa,IAAOwZ,EAAMxJ,QAAQynB,eACjD,KAAEp3B,EAAF,MAAQF,IAAU,IAAAL,qBAAoBC,EAAMC,GAClD,OAAO,mBAAC,EAAAof,OAAD,CAAQC,QAAShf,EAAMF,MAAOA,KAqFjC4gC,CAAenB,IAChB,0BAAKtgB,UAAU,iCACb3oB,EAAQ,IApFe,GAAGoZ,YAAWyJ,YAC1C,MAAMwnB,EAAYxnB,EAAMxJ,QAAQD,EAAU9Z,MAAMU,MAEhD,GACCoZ,EAAU9Z,OAASiE,gBAAcC,eACjC6mC,IAAclnC,iBAAeG,OAE7B,OAAO,KAER,MAAM,UAAEivB,GAAc1P,EAAMxJ,QAAQynB,cACpC,OACC,mCACCnY,UAAU,kBACV8K,QAASjV,eACTwV,QAASzB,EAAUyB,QACnBsW,WAAY/X,EAAU+X,cAuEpBC,CAAqBtB,IAlEI,GAAG7vB,YAAWyJ,SAAS5J,KACpD,MAAMjZ,EAAQoZ,EAAUZ,SAASqK,EAAOzJ,GACxC,GAAIA,EAAU9Z,OAASiE,gBAAcF,WAAcrD,EAEnD,OACC,wCACC2oB,UAAU,6BACVjf,KAAK,0BACLkf,KAAK,KACLsgB,aAAa,EACbzd,MAAM,EACNgI,QAAQ,WACR0V,gBAAgB,IAAAlpC,GAAE,wBAClBmpC,WAAY,CAAE,cAAc,IAAAnpC,GAAE,yBAC9BopC,oBAAmB,CAClBpwB,eACA0nB,OAAQ9zB,8BAoDR29B,CAAsBvB,EAAShwB,KAK7BwxB,EAAgB,CAACzB,EAAiBC,KACvC,MAAM,UAAE7vB,GAAc6vB,GAChB,gBAAEW,GAAoBZ,EAG5B,OAAI5vB,EAAUV,gBAAkB9V,cAAYM,gBAzLpB,EAAC8lC,EAAiBC,KAC1C,MAAM,MACLpmB,EACAzJ,WAAW,kBAAErB,IACVkxB,EAEJ,GAAIlxB,EAAmB,OAAOyxB,EAAkBR,EAAiBC,GAEjE,MAAQvuB,SAAUgwB,GAAmB7nB,EAErC,OAAI6nB,EAAuB3B,EAAeC,EAAiBC,GAC/CO,EAAkBR,EAAiBC,IA+KvC0B,CAAiB3B,EAAiBC,GAGtC7vB,EAAUV,gBAAkB9V,cAAYI,QA/Kf,EAACgmC,EAAiB1wB,KAC/C,MAAM,aAAEW,EAAF,gBAAgB0wB,EAAhB,UAAiC3vB,GAAcgvB,EAErD,OACC,0BAAKrgB,UAAU,iBACd,0BAAKA,UAAU,uBACd,iCACCA,UAAU,gCACVC,KAAK,KACLuK,UACCnZ,EAAUha,OAAQuR,KAAK6hB,MAAMpZ,EAAUha,OAExC4lB,UAAW+jB,EACXN,oBAAmB,CAClBpwB,eACAwpB,OAAQ,QAET2G,WAAY,CACXwB,OAAQ,CACP,cAAc,IAAA3qC,GAAEqY,KAGlBuT,SAAS,UA0JLgf,CAAsB7B,EAAiB5vB,EAAUd,OAGpDsxB,EAtJqB,EAACZ,EAAiBC,KAC5C,MAAM,aAAEhwB,EAAF,UAAgBe,EAAhB,cAA2BtB,GAAkBswB,EAEnD,OACC,mBAAC,EAAApM,SAAD,MACC,kCACCkO,iBAAA,EACAC,QAAQ,EACRC,aAAA,EACAC,UAAW,CACV,CAAEnrB,OAAQ,YAAa9O,QAAS,aAChC,CAAE8O,OAAQ,eAAgB9O,QAAS,iBAEpCk6B,eAAgBlxB,EAAU+lB,sBAC1BoL,UAAW,CAAElH,SAAU,SAAUmH,UAAW,UAC5CC,iBAAgBzhB,oBAEhB,4CAAuB0hB,KAAK,YAC3B,kCACC5L,UAAW1lB,EAAU0lB,UACrB3M,QAAS/Y,EAAU+Y,QACnBC,SAAUhZ,EAAUgZ,SACpB5pB,KAAMsP,EACN1Y,MAAOga,EAAUha,MACjB2a,aAAcX,EAAUW,aACxBkZ,WAAW,EACXwV,oBAAmB,CAAEpwB,gBACrBsZ,WAAW,IAAAgZ,cAAatC,EAAShwB,OAInCwwB,EAAmBT,EAAiBC,KA0HhCuC,CAAmBxC,EAAiBC,GAHdQ,EAAmBT,EAAiBC,IAkBtCtL,EAAfA,aAAesL,IAC3B,MAAM,UAAE7vB,EAAF,MAAayJ,EAAb,SAAoB3J,EAApB,YAA8BC,GAAgB8vB,EAC9CvwB,EAAgBU,EAAUV,cAC1BsB,EAAY6I,EAAMxJ,QAAQD,EAAU9Z,MACpC2gC,IAAWjmB,GAAYA,EAAUimB,SACjC0J,GAAkB,IAAA8B,gBAAe,CAAE5oB,QAAOzJ,cAC1CwwB,GAAkB,IAAA8B,gBAAe,CAAE7oB,QAAOzJ,cAC1CH,EAAe,CAAEC,WAAUC,eAC3BuwB,GAAY,IAAAiC,eAAcjzB,GAE1BswB,EAAkB,CACvBW,kBACAC,kBACA3wB,eACAywB,YACA1vB,YACAtB,iBAED,OACC,yBAAIwQ,MAAO9P,EAAUP,OAAQgT,SAAS,OACrC,4BACCC,MAAO,CACN,gBAAgB,EAChBmU,SAAUA,KAEP,IAAA2L,2BAA0BlC,IAE7Be,EAAczB,EAAiBC,O,oPC5VpC,WACA,QACA,OAMqCkB,EAAxBA,sBAAwB,CACpC5e,EACAtS,EACA0wB,EACAC,EACAF,KAEA,IAAImC,EAAQ,GACZ,OAAInC,GAEAC,IAAoBC,IACvBiC,EAAM,YAAc7iB,IACnBuC,EAASve,eAAaO,8BAA+B,CACpD0L,eACAnR,KAAM,CACLg4B,YAAY,EACZC,sBACC/W,EAAEC,cAAc2P,QAAQ,OACxB5P,EAAEC,cAAc6iB,YAChB9iB,EAAEC,mBAXe4iB,GARhB,MA4BME,EAAiBA,EAAjBA,eAAiB,EAAGjsB,aAChC,MAAMksB,EAAclsB,EAAO8Y,QAAQ,MAAMpB,UACpCwU,EAAY3lB,SAAS,cACrB2lB,EAAYhnC,OAAO,cADiBgnC,EAAYrnC,IAAI,eAoD7CgnC,GAhDeJ,EAAfA,aAAe,EAAG1oB,QAAOzJ,aAAaH,KAAvB,CAC3B8b,WAAY3b,EAAUd,MACtB6D,UAAW/C,EAAU9Z,KACrBg0B,UAAWla,EAAUR,MACrB0D,YAAauG,EAAMpX,MACnB6P,OAAQuH,EACR5J,iBAGwC2yB,EAA5BA,0BAA4BlC,IACxC,IAAImC,EAAQ,GAKZ,OAJInC,IACHmC,EAAM,iBAAmB7iB,GAAK+iB,EAAe/iB,GAC7C6iB,EAAM,iBAAmB7iB,GAAK+iB,EAAe/iB,IAEvC6iB,GAGsBJ,EAAjBA,eAAiB,EAAG5oB,QAAOzJ,gBACvC,MAAM,kBAAErB,EAAF,KAAqBzY,GAAS8Z,EAC9B0J,EAAWD,EAAMxJ,QAAQ/Z,GACzB2sC,IAAkBnpB,GAAWA,EAASpI,SACtCivB,GAAkB5xB,GAA4Bk0B,EAGpD,IAAKtC,EAAiB,OAAOA,EAO7B,QAJqB,IAAAztB,yBACpB2G,EACAtf,gBAAcC,iBAGGL,iBAAeE,WAChC+V,EAAU9Z,OAASiE,gBAAcF,YAK3BsmC,GAG8BG,EAAzBA,uBAAyB,CACrCpxB,EACAgxB,EACAC,IACIjxB,IAAkB9V,cAAYI,UAAY0mC,GAAaC,EAE/BgC,EAAhBA,cAAgBjzB,GAC5BA,EAAcnN,WAAW,cAEImgC,EAAjBA,eAAiB,EAAG7oB,QAAOzJ,gBACvC,GAAIuyB,EAAcvyB,EAAUV,eAAgB,OAAO,EACnD,MAAM,kBAAEX,EAAF,KAAqBzY,GAAS8Z,EAC9B0J,EAAWD,EAAMxJ,QAAQ/Z,GACzB4sC,IAAiBppB,GAAWA,EAASgd,WAE3C,OADwB/nB,GAA4Bm0B,I,6LChG5Cl/B,gBAFT,Q,6BCAA,W,IACA,M,IACA,Q,IACA,QACA,SACA,Q,oDAEA,IAAA4uB,qBAAoB,cAAe,CAClCC,SAAU,CAAEzyB,KAAM0yB,WAClBC,aAAc,CACb/7B,WAAOulB,EACP5K,kBAAc4K,EACd6Q,mBAAe7Q,EACf8Q,0BAAsB9Q,EACtBqO,SAAS,EACTuY,cAAc,EACdja,gBAAiB,GACjB+D,eAAe,EACfmW,eAAe,EACfxZ,gBAAiB,CAAExpB,KAAM,KAE1BupB,WAAY,CACX+M,UAAW,CAAExD,SAAS,EAAOC,OAAQ,CAAE/yB,KAAM,YAC7C2pB,QAAS,CAAEmJ,SAAS,EAAMC,OAAQ,CAAE/yB,KAAM,YAC1C4pB,SAAU,CAAEkJ,QAAS,GAAIC,OAAQ,CAAE/yB,KAAM,UACzCA,KAAM,CAAEijC,UAAU,EAAMlQ,OAAQ,CAAE/yB,KAAM,WACxCpJ,MAAO,CAAEqsC,UAAU,EAAMlQ,OAAQ,CAAE/yB,KAAM,WACzCuR,aAAc,CACb0xB,UAAU,EACVlQ,OAAQ,CAAE/yB,KAAM,WAEjByqB,UAAW,CAAEqI,SAAS,EAAOC,OAAQ,CAAE/yB,KAAM,YAK7CmpB,UAAW,CACV2J,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjBqrB,cAAe,CACdyH,QAAS7oB,yBAAuBohB,eAEjCzb,YAAa,CACZkjB,QAAS7oB,yBAAuB2F,cAGlCqjB,eACAxjB,iBACAyjB,mC,8FCjDD,MACA,MACA,MACA,WACA,MACA,OACA,MACA,OACA,OACA,YACA,O,UAkCe,CAAC5J,GAASnH,eACxB,MACCoH,YAAY,UAAE+M,GADT,cAELzJ,GACGvD,EAEJ,OACC,0BAAK/J,UAAU,qBACd,0BAAKA,UAAY,wBAAsB,IAAAqN,SAAQC,KAC9C,0BAAKtN,UAAU,cAzCa+J,KAC/B,MAAM,QAAEO,EAAF,aAAWC,IAAiB,IAAAT,sBAAqBC,GACvD,OAAO,mBAACO,EAAYC,IAwCfoZ,CAAwB5Z,IArCTgN,IACfA,GACE,sCADgB,KAsCnBnC,CAAamC,IAlCG,EAAChN,EAAOnH,KAC5B,MAAM,cAAE0K,EAAF,cAAiBmW,GAAkB1Z,EAEzC,OAAKuD,GAGJ,0BAAKtN,UAAU,oBACd,iCACCA,UAAU,cACVrQ,OAAO,IAAArY,GAAE,QACT2oB,KAAK,KACL6K,QAAQ,UACR7N,SAAUwmB,EACVrgB,WAAU,KACJqgB,GACJ7gB,EAASve,eAAamG,mCAZA,MAiCxBo5B,CAAa7Z,EAAOnH,M,6BC1DxB,W,IACA,M,IACA,QACA,SACA,S,IACA,QACA,QACA,Q,oDAMA,IAAAqQ,qBAAoB,kBAAmB,CACtCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,CACbyQ,WAAYr3B,sBACZyE,QAAS,GACTga,SAAS,EACT5zB,MAAO,GACP2a,aAAc,GACdqY,SAAU,GACVyZ,YAAY,EACZC,+BAA+B,EAC/BC,YAAY,EACZC,aAAa,GAEdja,WAAY,CACXoB,MAAO,CACN8Y,WAAWL,WAAYl0B,EAAOsB,QAAS+e,KAC/B,CAAC,CAAEj0B,GAAI,qBAAsB4T,QAAOqgB,cAG7C34B,MAAO,CACNk8B,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjBuR,aAAc,CACbuhB,QAAS,IAEV5I,UAAW,CACV4I,QAAS,IAEV/f,UAAW,CACV+f,QAAS,IAEV5f,YAAa,CACZ4f,QAAS,IAEVxwB,iBAAkB,CACjBwwB,QAAS7oB,yBAAuB3H,kBAEjC+nB,QAAS,CACRyI,QAAS3mB,WAASC,SAClB2mB,OAAQ,CACP/yB,KAAM,SACNgzB,KAAM,CAAC7mB,WAASC,SAAUD,WAASE,OAAQF,WAASG,SAGtDge,gBAAiB,CAChBwI,SAAS,GAGVrI,UAAW,CACVqI,SAAS,GAEV5jB,MAAO,CACN4jB,QAAS,IAEVtJ,gBAAiB,CAChBsJ,QAAS,IAEV4Q,YAAa,CACZ5Q,SAAS,GAEVmQ,SAAU,CACTnQ,SAAS,GAEVlH,oBAAqB,CACpBkH,SAAS,EACTC,OAAQ,CAAE/yB,KAAM,YAEjB0rB,cAAe,CACdoH,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjBuqB,YAAa,CACZuI,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,YAGlBizB,eACAxjB,iBACAyjB,gCACAyQ,iC,8FChGD,OACA,MACA,MACA,OACA,WACA,OACA,Q,UA0Ce,CAACra,GAASnH,eACxB,MACCoH,YAAY,MACXoB,EADW,aAEXpZ,EAFW,UAGXwB,EAHW,UAIX0X,EAJW,MAKXvb,EALW,SAMX+zB,EANW,cAOXvX,EAPW,oBAQXE,EARW,YASXrB,GAVI,QAYLC,EAZK,SAaLZ,EAbK,YAcL4Z,EAdK,MAeL5sC,GACG0yB,EAEJ,OACC,oCACCpa,MAAOA,EACPub,UAAWA,EACXv0B,KAAM6c,EACN4X,MAAOA,EACPH,QAASA,EACTZ,SAAU4Z,EAAc,GAAK5Z,EAC7BhzB,MAAO2a,EACPsZ,aAAcj0B,EACdqsC,SAAUA,EACV1Y,YAAaA,GAEZqB,EAxEqB,GAAGzJ,WAAUuJ,oBAGpC,wCACCnM,UAAU,gBACV2iB,KAAK,MACL5hC,KAAK,2BACL+pB,QAAQ,WACRhI,MAAA,EACAuhB,gBAAA,EACAjhB,WAAU,KACTR,EAASiU,eAAgBltB,0BAA2B,CACnD4uB,SAAU,KACT,wCACC5oB,MAAOwc,EAAcC,WACrBvkB,MAAOskB,EAAc3Y,UACrBvD,MAAOkc,EAAcxB,UACrBhX,YAAawY,EAAcxY,YAC3B+sB,oBAAmB,CAClBpwB,aAAc6b,EAAc7b,kBAKhCsS,EACC0hB,eAAsBz2B,mCACtB,IAED+U,EAAS2hB,eAAiBl+B,6BAA8B,CACvDiK,aAAc6b,EAAc7b,kBA4C3Bk0B,CAAiB,CACjB5hB,WACAuJ,mBAtCE,+BAAUprB,KAAK,uBAAuBkf,KAAK,KAAK0iB,KAAK,W,cC7C7DxsC,EAAOD,QAAUuuC,uC,6BCAjB,Q,6BCAA,W,IACA,M,IACA,QACA,S,oDAEA,IAAAxR,qBAAoB,oBAAqB,CACxCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,GACdpJ,WAAY,CACXra,MAAO,CACN4jB,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRkT,YAAa,CACZ4f,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRoH,MAAO,CACN0rB,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRwP,MAAO,CACNsjB,QAAS,GACTC,OAAQ,CACP/yB,KAAM,YAITizB,eACAC,mC,8FCrCD,MACA,OACA,W,UAEe5J,IACd,MACCC,YAAY,MAAEra,EAAF,YAASgE,EAAT,MAAsB9L,EAAtB,MAA6BoI,IACtC8Z,EAEJ,OACC,0BAAK/J,UAAU,sBACd,gCAAWoiB,QAAA,EAAOD,iBAAA,EAAcliB,KAAK,KAAKykB,gBAAc,IAAAptC,GAAEqY,KACzD,0DACCg1B,MAAM,KACNC,gBAAejxB,EACf9L,MAAOA,EACPoI,MAAOA,Q,cChBZ9Z,EAAOD,QAAU2uC,mD,sGCAjB,aACA,OACA,OAE8BlR,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAaygC,wCAAyC,CACtDxL,OAAQ,EAAGzmB,SAAQ+P,eAClB,MAAM,IAAE/R,GAAQgC,EAAO+jB,QACjBz3B,EAAO,CACZ9H,MAAOwZ,EAAIgqB,OAAOxjC,MAClB2a,aAAcnB,EAAImB,aAAa3a,OAEhCurB,EAAS4a,eAAmBp3B,2BAA4B,CAAEjH,SAC1DyjB,EAASmiB,eAAWn7B,4BAErBo7B,iBAAiB,K,8ECfS3gC,EAAfA,aAAe,CAC3BygC,uCACC,0C,sGCFF,YAEA,SAWA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QAEA,MAAM,oBAAEG,EAAF,2BAAuBC,GAA+BC,cAE9BxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGjb,aAAY5qB,cAAawjB,eAClD,MAAM,MAAEvrB,EAAF,aAAS2a,EAAT,YAAuBmyB,GAAgBna,EACvC7qB,EAAO,CAAE9H,QAAO2a,iBAEtB,IAAA9S,0BAAyBC,EAAMC,GAE3B+kC,KAEH,IAAAjlC,0BACC,CACC+rB,SAAS5zB,GAEV+H,GAGDwjB,EAASve,eAAa4H,mBAGxB,CAACi5B,GAA6B,EAAGryB,SAAQ+P,WAAUoH,iBAClD,MAAM,YAAEma,GAAgBna,GAEvB4M,SAAS,KAAEjgC,IACRkc,EAGS,oBAATlc,GAA8BwtC,IAAa,IAAAiB,cAAaxiB,IAG7D,CAACve,eAAa8H,6BAA8B,CAC3CmtB,OAAQ,EAAGzmB,SAAQzT,kBACQ,sBAAtByT,EAAO+jB,QAAQ76B,IAClBqD,EAAY,CACXykC,WAAYr3B,sBACZy3B,aAAa,KAGhBe,iBAAiB,GAElB,CAAC3gC,eAAa+H,8BAA+B,CAC5CktB,OAAQ,EAAGzmB,SAAQ+P,WAAUxjB,kBACF,sBAAtByT,EAAO+jB,QAAQ76B,KAClBqD,EAAY,CACX6kC,aAAa,EACbF,+BAA+B,IAEhCnhB,EAASve,eAAa8G,4CAGxB65B,iBAAiB,GAGlB,CAAC3gC,eAAa8G,0CAA2C,CACxDmuB,OAAQ,EAAG1W,WAAUoH,aAAYD,OAAS/X,aAAc3a,OACvD,MAAM,QACLyzB,EACAH,UAAW1a,EACXuD,UAAW3L,EACX8L,YAAa7Q,EAJR,iBAKLC,GACGinB,EACJpH,EAASve,eAAakH,wCAEtBqX,EAAS,EAAGmH,YACX,MAAM6M,GAAU,IAAAyO,qBAAoB,CACnCva,UACA7a,QACApI,QACA/E,QACAzL,QACA0L,qBAKD,MAAO,CACNtC,MAHY,IAAA6kC,oBAAmBxa,GAI/B8L,UACA2O,gBAAiBxb,EAAMia,eAI1BgB,iBAAiB,GAElB,CAAC3gC,eAAagH,0CAA0C,IAAA4vB,qBACvDjuB,iBACA,CACCkuB,aAAc,CAAC,QAAS,QAAS,QAAS,UAC1C7E,gBACChyB,eAAakH,uCACd+qB,kBACCjyB,eAAaoH,kDACd8qB,gBAAiBlyB,eAAasH,wCAGhC,CAACtH,eAAaiH,uCAAuC,IAAA4qB,kBACpDvpB,iBACA,CACCypB,YAAa,CACZ,4BACA,QACA,eACA,YAEDplB,OAAO,EACPqlB,gBACChyB,eAAakH,uCACd+qB,kBACCjyB,eAAaqH,+CACd6qB,gBAAiBlyB,eAAasH,wCAGhC,CAACtH,eAAa+G,uCAAwC,CACrDkuB,OAAQtS,OACPgD,aACAD,OAAS/X,aAAc3a,GACvBurB,eAEA,MAAMsE,GAAW,IAAAse,eAAcxb,EAAY3yB,GACrC+vB,QAAqB,IAAAL,aAC1BG,EACAtE,EACA,cAEKjG,GAAS,IAAA8oB,sBAAqBre,GAEhCzK,EAAOqf,MACVpZ,EAASve,eAAasH,uCAEtBiX,EACCve,eAAamH,gDACb,CACCmR,YAIJqoB,iBAAiB,GAElB,CAAC3gC,eAAakH,wCAAyC,CACtD+tB,OAAQ,EAAGl6B,kBACVA,EAAY,CACXykC,WAAYr3B,sBACZyE,QAAS,GACT+yB,YAAY,KAGdgB,iBAAiB,GAGlB,CAAC3gC,eAAamH,iDAAkD,CAC/D8tB,OAAQ,EACPzmB,SACAzT,cACAwjB,WACAoH,YAAcc,eAEd,MACC8L,SACCja,QAAQ,iBAAE+oB,KAER7yB,GACE,WAAEgxB,EAAF,QAAc5yB,IAAY,IAAA00B,aAC/BD,EACA5a,GAGD1rB,EAAY,CAAEykC,aAAY5yB,UAAS+yB,YAAY,IAC/CphB,EAASve,eAAa6H,sBAEvB84B,iBAAiB,GAElB,CAAC3gC,eAAaoH,mDAAoD,CACjE6tB,OAAQ,EAAGzmB,SAAQzT,cAAa4qB,aAAYpH,eAC3C,MACCgU,SAAS,KAAEz3B,IACR0T,GACE,UAAE8X,EAAF,UAAanX,EAAb,QAAwBsX,GAAYd,EACpC0b,GAAmB,IAAAE,oBACxBzmC,EACAwrB,EACAnX,IAEK,WAAEqwB,EAAF,QAAc5yB,IAAY,IAAA00B,aAC/BD,EACA5a,GAGD1rB,EAAY,CAAEykC,aAAY5yB,UAAS+yB,YAAY,IAC/CphB,EAASve,eAAa6H,sBAEvB84B,iBAAiB,GAElB,CAAC3gC,eAAaqH,gDAAiD,CAC9D4tB,OAAQ,EAAGzmB,SAAQzT,cAAa4qB,aAAYpH,eAC3C,MACCgU,SAAS,OAAEja,IACR9J,GAEE,QAAEiY,GAAYd,EACd0b,GAAmB,IAAAG,uBAAsBlpB,IACzC,WAAEknB,EAAF,QAAc5yB,IAAY,IAAA00B,aAC/BD,EACA5a,GAGD1rB,EAAY,CAAEykC,aAAY5yB,UAAS+yB,YAAY,IAC/CphB,EAASve,eAAa6H,sBAEvB84B,iBAAiB,GAElB,CAAC3gC,eAAasH,uCAAwC,CACrD2tB,OAAQ,EAAGl6B,kBACVA,EAAY,CACXykC,WAAYp3B,gBACZwE,QAAS,GACT+yB,YAAY,KAGdgB,iBAAiB,GAGlB,CAAC3gC,eAAagI,0BAA2B,CACxCitB,OAAQ,EAAGzmB,SAAQzT,cAAawjB,WAAUoH,iBACzC,MACC4M,SAAWv/B,MAAO2a,IACfa,EACE1T,EAAO,CAAE6S,iBACT,gBAAE+Y,EAAiBvX,UAAW7c,GAASqzB,GAE7C,IAAA9qB,0BAAyBC,EAAMC,GAC/BwjB,EAASve,eAAa8G,0CAGlB4f,IACkB,KAAjB/Y,GACH4Q,EAASve,eAAawH,6BAA8B,CACnDxU,OAAO,EACPV,SAEDisB,EAASve,eAAauH,2BAA4B,CACjDvU,MAAO,GACP2a,aAAc,GACdrb,UAED,IAAAuI,0BAAyB,CAAE7H,MAAO,IAAM+H,IAKxCwjB,EAAS,EAAGmH,YACJ,CACNtpB,KAAM4D,eAAawH,6BACnB+qB,QAAS,CACRv/B,OAAO,EACPV,QAED4uC,gBAAiBxb,EAAM+Z,gBAM5BnK,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,KACrCoL,iBAAiB,GAElB,CAAC3gC,eAAaiI,kCAAmC,CAChDgtB,OAAQ,EAAGvP,QAAOC,aAAYnX,SAAQ+P,WAAUxjB,kBAC/C,MACCw3B,SAAS,KACRjgC,EADQ,MAERU,EACA+Q,MAAQuH,MAAOqC,KAEba,GACE,QAAE5B,EAAF,8BAAW8yB,GAAkCha,GAC7C,aAAE+b,IAAiB,IAAAC,mBACxB1uC,EACA4Z,EACA+Y,EAAWe,iBAGR+a,GACH1mC,EAAY,CAAE0kC,YAAY,EAAMzsC,UAChCurB,EAASve,eAAawH,6BAA8B,CACnDxU,OAAO,EACPV,SAEDisB,EAASve,eAAauH,2BAA4B,CACjDvU,QACA2a,eACArb,SAEGotC,GACHnhB,EAASve,eAAayH,2BAA4B,CACjDk6B,mBAAmB,MAGrB5mC,EAAY,CAAE0kC,YAAY,EAAOzsC,MAAO,KACxCurB,EAASve,eAAawH,6BAA8B,CACnDxU,OAAO,EACPV,WAIHquC,iBAAiB,GAElB,CAAC3gC,eAAakI,qCAAsC,CACnD+sB,OAAQ,EAAGl5B,OAAMyS,SAAQmX,aAAY5qB,cAAawjB,eACjD,MACCgU,SAAS,MAAEv/B,EAAF,aAASi0B,IACfzY,EASJ,GAAIyY,QAA8D,CACjElsB,EAAY,CAAE2kC,+BAA+B,IAG7C,MAAM,gBAAEhZ,GAAoBf,IAGR,IAAAvM,yBAAwBrd,IAExB2qB,GAA6B,KAAV1zB,GACtCurB,EAASve,eAAayH,2BAA4B,CACjDk6B,mBAAmB,MAIvBhB,iBAAiB,GAGlB,CAAC3gC,eAAawH,8BAA+B,EAAGgH,SAAQ+P,eACvD,MACCgU,SAAS,MAAEv/B,IACRwb,GACJ,IAAAuyB,cAAaxiB,EAAUvrB,IAExB,CAACgN,eAAayH,4BAA6B,EAAG8W,eAC7CA,EAAS2hB,eAAiBl6B,yBAE3B,CAAChG,eAAa0H,aAAc,CAC3ButB,OAAQ,EAAGzmB,SAAQkX,QAAOC,aAAY5qB,kBAErC,MAAM,QAAE6R,GAAY8Y,GACd,gBAAEgB,GAAoBf,EAGtB3yB,EACLwb,EAAO+jB,SAAW/jB,EAAO+jB,QAAQv/B,MAC9Bwb,EAAO+jB,QAAQv/B,MACf0yB,EAAM1yB,OACJ,aAAEyuC,IAAiB,IAAAC,mBACxB1uC,EACA4Z,EACA8Z,IAGD,IAAA7rB,0BACC,CACC+rB,SAAU6a,GAEX1mC,IAGF4lC,iBAAiB,GAElB,CAAC3gC,eAAa2H,eAAgB,CAC7BstB,OAAQ,EACPvP,OAASkB,WACTjB,YAAce,mBACd3rB,kBAEA,MAAMiJ,EAAU0iB,GACb,IAAAzzB,GACA,uFAEA,IAAAA,GACA,mEAYH8H,EAAY,CAAEirB,SAVGY,EACd,CACA,CACC/S,OAAQre,cAAYC,OACpBuO,UACAtH,KAAMlH,cAAYE,OAGnB,MAIJirC,iBAAiB,GAElB,CAAC3gC,eAAa4H,iBAAkB,CAC/BqtB,OAAQ,EAAGvP,OAASkB,WAAWrI,eAC9BA,EAAS2hB,eAAiBj6B,yBAA0B,CACnDjT,MAAO4zB,KAGT+Z,iBAAiB,GAElB,CAAC3gC,eAAa6H,qBAAsB,CACnCotB,OAAQ,EAAGl5B,WACV,MAAMqsB,EAAUrsB,EAAKtB,WACnB6wB,cAAc,iBACd7wB,WAAW6wB,cAAc,eAEvBlD,GAAoC,mBAAlBA,EAAQwZ,OAAsBxZ,EAAQwZ,SAE7DtM,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,IACrCoL,iBAAiB,K,8XCrTHkB,gBAAT,SAAyBnb,GAC/B,OAAOA,GACJ,IAAAzzB,GACA,uFAEA,IAAAA,GAAE,oE,EAGU8tC,aAAT,SAAsBxiB,EAAUqI,GACtCrI,EACCve,eAAa0H,YACbkf,EAAU,CAAE5zB,MAAO4zB,QAAYrO,GAEhCgG,EAASve,eAAa2H,eACtB4W,EAASve,eAAa4H,kB,EAGPq5B,mBAAT,SAA4Bxa,GAClC,OAAIA,IAAYle,WAASE,OACjBzI,eAAa+G,sCACjB0f,IAAYle,WAASG,MACjB1I,eAAaiH,qCACdjH,eAAagH,yC,EAGLg6B,oBAAT,UAA6B,QACnCva,EADmC,MAEnC7a,EAFmC,MAGnCpI,EAHmC,MAInC/E,EAJmC,MAKnCzL,EALmC,iBAMnC0L,IAEA,OAAI+nB,IAAYle,WAASG,MACjB,CACN2sB,0BAA2B32B,EAC3B+yB,MAAOz+B,EAGW,GAAfA,EAAM6E,OAAc+Q,uBAAqBC,MACzCD,uBAAqBC,MACxBstB,aAAc2L,EAAoB9uC,GAClC+uC,SAAUn5B,uBAAqBE,UAE1B,CACN8C,QACApI,QACAgzB,OAAQ/3B,EACR6hC,MAAOttC,GAAgB,O,EAITwuC,sBAAT,SAA+B39B,GAYrC,MAAO,CAAEm+B,cAXan+B,EAAKC,IAAIC,IAEtB,CACNrM,GAAIqM,EAAKzR,KACTgZ,MAAOvH,EAAKuH,MACZ22B,SAAUl+B,EAAKzR,KACfmM,MAAOsF,EAAKyyB,Y,EAQAsL,sBAvMhB,WACA,QACA,QAEA,OAEO,MAAMI,EAAiBA,EAAjBA,eAAiBr+B,GACtBA,EAAKC,IAAIC,GACf,KACIA,EADJ,CAECk+B,SACE3lC,kBAAgBC,iBAAiBwH,EAAKrM,KACtC4E,kBAAgBC,iBAAiBwH,EAAKrM,IAAIiF,cAC3C,IAAA1J,GAAE,mBAqBOkvC,GAhBcb,EAAdA,YAAc,EAAGc,aAAa,EAAGJ,iBAAiBvb,KAC9D,MAAM4b,EAAML,EAAcnqC,OAC1B,GAAIwqC,EAAK,CASR,MAAO,CAAE7C,WAPR/Y,IAAYle,WAASG,OAClB,IAAAzV,GAAE,gBAAiBovC,IACnB,IAAApvC,GAAE,uBAAwBovC,EAAKD,GAKdx1B,QAHpB6Z,IAAYle,WAASE,OAClBy5B,EAAeF,GACfA,GAGL,MAAO,CAAExC,YAAY,IAAAvsC,GAAE,oBAAqB2Z,QAAS,KAGzBu1B,EAAhBA,cAAgB7b,GACrBje,kBAAgBxP,QAAQ,aAAcytB,IAGjB6a,EAAhBA,cAAgB,CAACxb,EAAY3yB,EAAQ,MACjD,MAAM,iBAAE0L,EAAF,UAAoB4nB,EAApB,UAA+BnX,EAA/B,YAA0CG,GAAgBqW,EAChE,MAAO,CACN,CACC/D,IAAKugB,EAAc,oBACnBrH,OAAQ,CACPzF,0BAA2B32B,EAC3B4jC,eAAgB,QAChBC,wBAAyBpzB,EACzBqzB,wBAAyBlc,EACzBmc,4BAA6BnzB,EAC7BozB,sBAAuB,OACvBC,+BAAgC3vC,EAChC4vC,gCAAiC,QACjCC,cAAe,QAMiBzB,EAAvBA,qBAAuBle,IACnC,IAAIme,EAAmB,CAAEW,cAAe,IAEpCrK,GAAQ,EAQZ,OANAA,GAASzU,EAAU4f,MAAM/+B,GACD,cAAhBA,EAAK8P,QAGR8jB,IAAO0J,EASb,SAAkC0B,GACjC,MAAMX,EACLW,EAAY/vC,MAAMgwC,QAAQ,kBAC1BD,EAAY/vC,MAAMgwC,QAAQ,iBACrB70B,EAAU40B,EAAY/vC,MAAM8H,KAAKwd,OAAOnK,QAC9C,IAAI6zB,EAAgB,GACR7zB,EAAQtW,QAAUsW,EAAQ,GAAGA,QAAQtW,SAGhDmqC,EAAgB7zB,EAAQ,GAAGA,QAAQrK,IAAIC,IAC/B,CACNrM,GAAIqM,EAAKk/B,SAASC,cAAclwC,MAChCsY,MAAOvH,EAAKk/B,SAASE,kBAKxB,MAAO,CACNnB,gBACAI,cA5B8BgB,CAAyBlgB,EAAU,KAE3D,CACNme,mBACAgC,eAXoB,GAYpB1L,UA2B+B+J,EAApBA,kBAAoB,CAAC1uC,EAAO6Q,EAAM6iB,KAC9C,GAAIA,GAA6B,KAAV1zB,EAAc,MAAO,CAAEyuC,cAAc,GAC5D,MAAM1nC,EAAQ8J,EAAKgJ,OAAO9I,GAAQA,EAAKrM,KAAO1E,GACxCyuC,IAAe1nC,EAAMlC,OAC3B,MAAO,CAAE4pC,eAAc9zB,aAAc8zB,EAAe1nC,EAAM,GAAGuR,MAAQ,KAGpCi2B,EAArBA,mBAAqB,CAACjpB,EAAQ1M,EAAOpI,KACjD,MAAM8/B,EAAUhrB,EAAOirB,kBAAkBC,uBACzC,MAAO,CACNpB,WAAYkB,EAAQG,aACpBzB,cAAesB,EAAQI,kBACpBJ,EAAQI,kBAAkB5/B,IAAIC,IAC9B,MAAMjJ,EAAO,CACZpD,GAAIqM,EAAKtF,MACT6M,MAAOvH,EAAK4/B,cAAc,GAAG3wC,OAY9B,OAVI+Q,EAAK4/B,cAAc9rC,OAAS,IAC/BiD,EAAKmnC,SAAWl+B,EAAK4/B,cAAc,GAAG3wC,OAGtC4Y,IAAU3W,SAAOE,YACjBqO,IAAUjN,gBAAcF,YAGxByE,EAAKpD,GAAKqM,EAAK4/B,cAAc,GAAG3wC,OAE1B8H,IAEP,KAuEE,SAASgnC,EAAoB9uC,EAAQ,IAC3C,MAAQ,iBAAgBA,sBAA0BA,M,cCxMnDlB,EAAOD,QAAU+xC,oC,qGCAjB,YAE6B7D,EAAhBA,cAAgB,CAC5B,CACChX,OAAQ,CAAC,YACTkM,OAAQ,EAAGzmB,SAAQ+P,eAClB,MACC4J,MAAM,MAAE5wB,IACLiX,GAQqB,OAAxBjX,EAAMssC,eACLtsC,EAAMssC,eAEL,kBADDtsC,EAAMssC,cAAc7qB,QAAQ5a,gBAG7BmgB,EAAS,EAAGmH,QAAOC,iBACX,CACNvpB,KAAM4D,eAAayH,2BACnB8qB,QAAS,CAAEjgC,KAAMqzB,EAAWxW,UAAW20B,UAAU,GACjD5C,gBAAiBxb,EAAMkB,e,gBCxBrB,IAAItO,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,0bAA6b,M,8FCLtd,YACA,SAEsB8X,EAATA,OAAS,CACrBvX,KAAM0M,gBACN2mB,WAAY,CACX,CAAC7b,UAAS,CACTolB,QAAS,GACTyC,YAAY,IAGdrC,kC,sGCXD,YACA,SACA,QAE8BA,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAa+V,uBAAwB,EACrCvH,SACAmX,aACApZ,uBAEA,MACCgmB,SAAS,OAAE1oB,IACR2E,EACEu1B,EAAape,EAAW7b,UAE9ByC,EAAiB,CAChB,CAACzC,UAASi6B,EAAWl/B,QAAO,IAAAm/B,iBAAgBn6B,OAG9C,CAAC7J,eAAagW,yBAA0B,EAAGzJ,uBAC1CA,EAAiB,CAAE,CAACzC,UAAS,MAE9B,CAAC9J,eAAaoW,2BAA4B,EACzC5H,SACAjC,uBAEA,MACCgmB,SAAS,MAAEv/B,IACRwb,EAEJjC,EAAiB,CAAE,CAACzC,UAAS9W,KAE9B,CAACgN,eAAakW,sCAAsC,IAAA2b,kBACnD/xB,WACA,CACC6M,OAAO,EACPolB,YAAa,CAAC,6BACdE,kBAAmBjyB,eAAamW,sCAGlC,CAACnW,eAAamW,qCAAsC,EACnD3H,SACA+P,eAEA,MACCgU,SAAS,OAAEja,GACX6P,MAAM,SAAE8b,IACLz1B,EACA8J,EAAOzgB,SAAWosC,GACrB1lB,EAASve,eAAa+V,sBAAuB,CAC5ClM,QAAQ,IAAAq6B,sBAAqB5rB,Q,wSClDjC,Q,oCAE+B0rB,EAAlBA,gBAAkBn6B,GAC9BA,EAAO/F,IAAIqgC,GAASA,EAATA,CACVzsC,GAAIiH,UAAKC,KACTiV,OAAQ,OACRnX,KAAM,sBACN8R,OAAQ,CAAEpS,KAAM,YACb+nC,IAG+BD,EAAvBA,qBAAuBE,GACnCA,EACEv3B,OAAO9I,IAE0C,IAA1C,CAAC,QAAS,QAAQlI,QAAQkI,EAAK3H,OAEtC0H,IAAIC,IAAQA,CACZ8P,OAAsB,UAAd9P,EAAK3H,KAAmB,WAAa,OAC7C4H,QAASD,EAAKsgC,KACd3nC,KACe,UAAdqH,EAAK3H,KACF,6BACA,0B,iGCvBP,YAOA,SAEyBqgB,EAAZA,UAAY,CACxBnqB,KAAM0M,gBACN2mB,WAAY,CACX,CAAC9U,uBAAsB,CACtBqe,QAAS,GACTyC,YAAY,GAEb,CAAC/gB,uBAAsB,CACtBse,QAAS,GACTyC,YAAY,GAEb,CAAChhB,yBAAwB,CACxBue,SAAS,EACTyC,YAAY,GAEb,CAACjhB,+BAA8B,CAC9Bwe,SAAS,EACTyC,YAAY,IAGdrC,kC,sGC7BD,WACA,QAMA,SASA,QAIA,QACA,QAIA,OACA,QACA,QACA,OAE8BA,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAauQ,4BAA6B,EAC1ChE,mBACAgS,eAEAhS,EAAiB,CAChB,CAACmE,gCAA8B,IAEhC6N,EAASve,eAAawQ,2BAEvB,CAACxQ,eAAawQ,0BAA2BmS,OACxCpE,WACAoH,aACApZ,uBAEA,MAAM,SAAE0mB,EAAF,iBAAY5d,IAAqB,IAAAivB,sBACtC3e,EAAWvV,sBAEZ,GAAI6iB,EAAU,CACb1U,EACCgmB,eAAyBt0B,6CACzB,CACCujB,aAAcne,IAGhB9I,EAAiB,CAChB,CAACmE,gCAA8B,IAEhC,MAGM1M,GAHe,IAAA/Q,GACnB,yFAGI4gB,EAASre,cAAYC,OACrBiH,EAAOlH,cAAYE,KACnB8uC,GAAS,IAAAvxC,GAAE,+BAIjB,YAHAsrB,EAASkmB,eAAe1uB,sBAAuB,CAC9ClM,OAAQ,CAAC,CAAE7F,UAAS6P,SAAQnX,OAAM8nC,aAKpC,MAAMhR,EAAe7N,EAAWvV,qBAC1B1R,EAAmBinB,EAAWjP,wBAC9B4P,EAAYX,EAAWpf,iBAAejU,KAEtCoyC,GAAgB,IAAAC,oBACrBnR,EACA90B,EACA4nB,GAIKse,GAAqB,IAAAC,yBAC1BrR,EACA90B,GAGD,IAAKgmC,EAAc7sC,SAAW+sC,EAAmB/sC,OAIhD,YAHA0U,EAAiB,CAChB,CAACmE,gCAA8B,IAMjC6N,EACCkmB,eAAevuB,oCACf,CAAEmf,0BAA2B32B,GAC7B,CAAEulC,UAAU,IAIb1lB,EAASumB,eAAanhB,sBAAuB,CAAEjsB,GAAI,eAGnD,MAAMwrB,QAAkB,IAAAR,cAAY,IAAAqiB,gBAAeL,IAC7CM,QAAwB,IAAAtiB,cAC7B,IAAAqiB,gBAAeH,KAIV,SACLK,EADK,wBAELC,IACG,IAAAC,8BAA6BjiB,GACjC,IAAK+hB,EAAU,CACd,MAAMG,GAAwB,IAAAC,4BAC7BH,EACAxmC,SAEK,IAAAgkB,cAAY,IAAAqiB,gBAAeK,IAIlC7mB,EAASumB,eAAalhB,wBAAyB,CAAElsB,GAAI,eAErD,MAAM,eAAE4tC,EAAF,SAAkBC,IAAa,IAAAC,kBACpCtiB,EAAUre,OAAOmgC,IAQlBz4B,EANgB,CACf,CAACmE,gCAA8B,EAC/B,CAACE,uBAAsB20B,EACvB,CAAC50B,0BAAyB20B,IAK3B/mB,EAASkmB,eAAezuB,yBACxBuI,EAASve,eAAayQ,2BAA4B,CACjD80B,WACAD,oBAGF,CAACR,eAAanhB,uBAAwB,EAAGnV,SAAQjC,uBACtB,eAAtBiC,EAAO+jB,QAAQ76B,IAClB6U,EAAiB,CAChB,CAACmE,gCAA8B,EAC/B,CAACC,0BAAwB,EACzB,CAACC,uBAAsB,MAG1B,CAAC5Q,eAAayQ,4BAA6B,EAC1CjC,SACA+P,WACAoH,iBAEA,MACC4M,SAAS,eAAE+S,EAAF,SAAkBC,IACxB/2B,EACE9P,EAAmBinB,EAAWjP,wBAGpC,IAAK4uB,EAAgB,CACpB,MAAMthC,GAAU,IAAA/Q,GAAE,mCAAoCsyC,GAChD1xB,EAASre,cAAYC,OACrBiH,EAAOlH,cAAYE,KACzB6oB,EAASkmB,eAAe1uB,sBAAuB,CAC9ClM,OAAQ,CAAC,CAAE7F,UAAS6P,SAAQnX,WAK9B6hB,EAASkmB,eAAevuB,oCAAqC,CAC5Dmf,0BAA2B32B,IAI5B6f,EACCgmB,eAAyBz0B,wCACzB,CAAE1T,KAAMgU,sBAITmO,EAASknB,eAAalkC,iB,stBCvLxB,QACA,QACA,OACA,OAEO,MAAMmkC,EAAqBA,EAArBA,mBAAqBj3B,GAAUhc,OAAO+E,KAAKiX,GAAQ3J,KAAK,KAExD6gC,EAAeA,EAAfA,aAAepM,IAC1BA,EAAMh7B,WAAW,OAASg7B,EAAMh7B,WAAW,QAEhCqnC,EAAqBA,EAArBA,mBAAqBn3B,GACjChc,OAAO+E,KAAKiX,GAAQ5B,OAAO84B,GAAc7gC,KAAK,KAElC+gC,EAA8BA,EAA9BA,4BAA8B,CAAC/qC,EAAMgrC,EAAoB,KACrErzC,OAAO+E,KAAKsD,GAAMd,OAAO,CAACqpB,EAAKC,IAEtB,GAAED,KAAOC,OAAUxoB,EAAKwoB,MAC9BwiB,GAESC,EAAsBA,EAAtBA,oBAAsB,CAClCruC,EACAgH,EACAsnC,EAAS,SACT1f,EAAYrxB,SAAOE,aAElB,GAAE2b,qBAAmBwV,KAAa5uB,+BAAgCgH,oBAAmCsnC,IAE1FC,EAAsBA,EAAtBA,oBAAsB,CAClCvnC,EACAsnC,EAAS,SACT1f,EAAYrxB,SAAOE,aAElB,GAAE2b,qBAAmBwV,+BAAuC5nB,oBAAmCsnC,IAEpFE,EAAsBA,EAAtBA,oBAAsB,CAClCxuC,EACAgH,EACA4nB,EAAYrxB,SAAOE,aAElB,GAAE2b,qBAAmBwV,KAAa5uB,+BAAgCgH,IAEvDynC,EAAkCA,EAAlCA,gCAAkC13B,GAC9Chc,OAAO+E,KAAKiX,GAAQzU,OAAO,CAACqpB,EAAKC,KAChCD,EAAIC,GAAQ7U,EAAO6U,GAAMtwB,MAClBqwB,GACL,IAES+iB,EAA8BA,EAA9BA,4BAA8B,CAAC33B,EAAQ6X,KACnD,MAAMxrB,EAAO,GACb,IAAK,IAAIurC,KAAQ53B,EACZA,EAAO43B,GAAM34B,UAAYi4B,EAAaU,KACzCvrC,EAAKurC,GAAQ53B,EAAO43B,GAAMrzC,OAI5B,OADA8H,EAAA,KAAewrB,EACRxrB,GAGKwrC,EAAyBA,EAAzBA,uBAAyBrrB,IAC9B,CACN3P,MAAO2P,EAAO3P,MACdtY,MAAOioB,EAAOjoB,MACduzC,SAAUtrB,EAAOsrB,WAwENC,GApE0B3B,EAA1BA,wBAA0B,CAACrR,EAAc90B,KACrD,IAAImkB,EAAW,GAgEf,OA/DApwB,OAAO+E,KAAKg8B,GAAc/7B,QAAQC,IACjC,MAAM8X,EAAMgkB,EAAa97B,IACnB,OAAE8W,GAAWgB,EACbf,EACLD,IAAWE,sBAAoBI,eAC5BU,EAAIf,OAAOpC,QACXmD,EAAIf,OAGR,IACEA,EAAOqlB,eACRrlB,EAAOqlB,cAAc9gC,QAAUmD,iBAAeG,OAE9C,OAED,MAAMivB,EAAY9W,EAAOqlB,cAAcvO,WACjC,QAAEyB,EAAF,KAAW10B,GAASizB,EAC1B,IAAI5hB,EAAU8K,EAAO9K,QAAU8K,EAAO9K,QAAQ3Q,MAAQuyB,EAAU5hB,QAE5D8iC,EAAiB,GACrBzf,EAAQvvB,QAAQwjB,IACf,MAAMyrB,EAAgB,GAChBjoC,EAAQwc,EAAOxc,MACf8Q,GAAc,IAAAlR,iBAAgB4c,EAAOxc,OAE3C,IAAI8Q,IAAe0L,EAAO4M,QAA1B,CAEA,IAAKtY,GAAe0L,EAAO4M,QAE1B6e,EAActiB,OAAS,SACvBsiB,EAAc9kB,IAAMskB,EACnBznC,EACAC,EACAzJ,SAAOG,iBAEF,GAAKma,GAUL,GAAIA,EAAa,CAEvBm3B,EAActiB,OAAS,OACvBsiB,EAAc9kB,IAAMqkB,EACnBvnC,EACA,SACAzJ,SAAOG,YAER,MAAMuxC,EAAYL,EAAuBrrB,GACzC0rB,EAAUr0C,KAAOA,EACjBq0C,EAAUhjC,QAAUA,EACpB+iC,EAAc5rC,KAAO6rC,QAnBrBD,EAActiB,OAAS,MACvBsiB,EAAc9kB,IAAMmkB,EACnBtnC,EACAC,EACA,SACAzJ,SAAOG,YAERsxC,EAAc5rC,KAAOwrC,EAAuBrrB,GAc7CwrB,EAAevhC,KAAK,CAAExN,GAAI+G,EAAOioC,qBAGlC7jB,EAAWA,EAAShe,OAAO4hC,KAErB5jB,GAG0C2jB,EAArCA,mCAAqC,CAAC/3B,EAAQnb,KAC1D,MAAMwH,EAAOqrC,EAAgC13B,GAGvCq3B,EAAoBD,EACzB/qC,EACC,YAAWxH,MAGb,OAAOiR,KAAKC,UAAU,CACrBmxB,MAAQ,4DAEG1gC,SAAOE,eAAe2wC,kIAUtBc,EAA4BA,EAA5BA,0BAA4B,EACxCtzC,MACAmb,SACA/P,uBAEA,MAAMgoC,EAAgB,CACtBA,OAAuB,QAOvB,OANAA,EAAc9kB,IAAO,8CAA6CljB,EAClEgoC,EAAc1D,QAAU,CAAE,eAAgB,oBAG1C0D,EAAc5rC,KAAO0rC,EAAmC/3B,EAAQnb,GAEzD,CAAEoE,GAAIpE,EAAKozC,kBAIe/B,EAArBA,mBAAqB,CAACkC,EAAOnoC,EAAkB4nB,IACpD7zB,OAAO+E,KAAKqvC,GAAO/iC,IAAIxQ,IAC7B,MAAMkc,EAAMq3B,EAAMvzC,IACZ,OAAEkb,GAAWgB,EACnB,IAAIf,EACHD,IAAWE,sBAAoBI,eAC5BU,EAAIf,OAAOpC,QACXmD,EAAIf,OAcR,GAVCA,EAAOqlB,eACPrlB,EAAOqlB,cAAc9gC,QAAUmD,iBAAeG,SAE9CmY,EAAOwM,OAAS,CACfvN,UAAU,EACV1a,MAAOyb,EAAOqlB,cAAcvO,UAAU+X,aAMvC9uB,IAAWE,sBAAoBC,mBAC/BF,EAAOgB,WACoB,KAA3BhB,EAAOgB,UAAUzc,MAEjB,OAAO4zC,EAA0B,CAChCtzC,MACAmb,SACA/P,qBAIF,MAAMgoC,EAAgB,GAkBtB,OAjBIl4B,IAAWE,sBAAoBC,mBAClC+3B,EAActiB,OAAS,MACvBsiB,EAAc9kB,IAAMmkB,EACnBzyC,EACAoL,EACAgnC,EAAmBj3B,IAEpBi4B,EAAc5rC,KAAOqrC,EAAgC13B,IAC3CD,IAAWE,sBAAoBI,iBACzC43B,EAActiB,OAAS,OACvBsiB,EAAc9kB,IAAMqkB,EACnBvnC,EACAknC,EAAmBn3B,GAAU,WAE9Bi4B,EAAc5rC,KAAOsrC,EAA4B33B,EAAQ6X,IAGnD,CACN5uB,GAAIpE,EACJozC,mBAKyCvB,EAA/BA,6BAA+BjiB,IAC3C,IAAI4jB,GAAsB,EACtB5B,EAA0B,GAyB9B,OAvBAhiB,EAAUzrB,QAAQgsB,IACjB,GAAwB,cAApBA,EAAS5P,OAAwB,OAAO,EAE5C,MAAM,KAAE/Y,EAAF,OAAQqf,GAAWsJ,EAASzwB,MAC5BslB,EAASxd,EAAKwd,OACdyuB,EAAiBxiC,KAAK6hB,MAAMjM,EAAOrf,MAGxCisC,EAAet3B,WACfs3B,EAAet3B,YAAc6I,EAAO7I,UAAUzc,QAE9C8zC,GAAsB,EACtB5B,EAAwBhgC,KAAK,CAC5BsxB,OAAQle,EAAOke,OACf/nB,OAAQ,CACPgB,UAAW,CACVzc,MAAO+zC,EAAet3B,iBAOpB,CACNw1B,UAAW6B,EACX5B,4BAIwCG,EAA7BA,2BAA6B,CACzCH,EACAxmC,IAEOwmC,EAAwBphC,IAAIwK,GAC3Bs4B,EAA0B,CAChCtzC,IAAKgb,EAAOkoB,OACZ/nB,OAAQH,EAAOG,OACf/P,sBAK2BqmC,EAAjBA,eAAiBiC,GAC7BA,EAASljC,IAAI+iC,GAASA,EAAMH,eAGGlB,EAAnBA,iBAAmBtiB,IAC/B,MAAMoiB,EAAiBpiB,EAAU4f,MAAMvf,GAAwB,cAAhBA,EAAK1P,QAqBpD,MAAO,CACNyxB,iBACAC,SAtBeD,EAEb,EADApiB,EAAUrW,OAAO0W,GAAwB,aAAhBA,EAAK1P,QAAuBhc,SAyBrBysC,EAAvBA,qBAAuB,CACnC9Q,EACAyT,EAAkB32B,sBAElB,IAAI2iB,GAAW,EACf,MAAM5d,EAAmB5iB,OAAO+E,KAAKg8B,GAAcx5B,OAClD,CAACse,EAAQ7Z,KACR,MAAM+Q,EAAMgkB,EAAa/0B,IACnB,OAAE+P,GAAWgB,EACnB,IAAIf,EACHD,IAAWE,sBAAoBI,eAC5BU,EAAIf,OAAOpC,QACXmD,EAAIf,OAER,MAAMy4B,EAAYz0C,OAAO+E,KAAKiX,GAAQzU,OAAO,CAACqpB,EAAK8jB,KAClD,MAAMC,EAAW34B,EAAO04B,GAWxB,OATCF,EAAgBzuC,SAAS2uC,IAsCT,KArCKC,EAqCfp0C,OAnCNigC,GAAW,EACX5P,EAAI8jB,GAAJ,KACIC,EADJ,CAECnU,cAEK5P,EAAI8jB,GAAcC,EAClB/jB,GACL,IAgBH,OAdI7U,IAAWE,sBAAoBI,eAClCwJ,EAAO7Z,GAAP,KACI+Q,EADJ,CAECf,YACIe,EAAIf,OADR,CAECpC,QAAS66B,MAIX5uB,EAAO7Z,GAAP,KACI+Q,EADJ,CAECf,OAAQy4B,IAGH5uB,GAER,IAGD,MAAO,CACN2a,WACA5d,sB,oDCvWF,O,IAEA,OACA,Q,WAIA,M,IACA,O,IACA,O,IACA,O,IACA,O,IACA,QACA,Q,WACA,QAEA,O,mDAEA,MAAM,oBAAEurB,EAAF,uBAAuByG,GAA2BvG,eAExD,IAAAlS,qBAAoB,iBAAkB,CACrCC,SAAU,CAAEzyB,KAAM0yB,WAClBjjB,iBACAwjB,KAAM,KAAM,gCACZ5F,UAAW,CACVnjB,UACA+P,UACAlR,UACAkQ,UACAxL,UACA4S,UACA8F,UACAH,UACAklB,WAEDhY,eAAgB,CACf,CAACsR,GAAsB,EAAGriB,eACzBA,EAASve,eAAa+W,0BAEvB,CAACswB,GAAyB,EAAG9oB,WAAUoH,iBACtC,MAAMlnB,EAAQknB,EAAWrP,cACzB,IAAAgM,UAASrtB,SAAOC,cAAgB,UAASuJ,GAAS,EAAO8f,Q,gBCxCpD,IAAIjG,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,wDAAyD,M,oKCLzEu1C,gB,mGCAT,YAKA,SAE2BA,EAAdA,YAAc,CAC1Bh1C,KAAM0M,gBACN2mB,WAAY,CACX,CAAC1Q,qBAAoB,CACpBia,SAAS,EACTyC,YAAY,GAEb,CAACzc,8BAA6B,CAC7Bga,SAAS,EACTyC,YAAY,IAGdrC,kC,sGCnBD,YAMA,OACA,QAE8BA,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAaqU,2BAA4B,EACzC7F,SACAjC,mBACAgS,eAEA,MACCgU,SAAS,MAAEv/B,GACXm1B,MAAQof,UAAU,SAAEC,GAAa,KAC9Bh5B,EAEAg5B,IAAapyB,wBAEjBmJ,EAASve,eAAamV,8BAA+B,CAAEniB,UACvDuZ,EAAiB,CAAE,CAAC0I,qBAAoBjiB,MAEzC,CAACgN,eAAamV,+BAAgC,EAC7C3G,SACA+P,WACAoH,iBAEA,MACC4M,SAAS,MAAEv/B,IACRwb,GACI,CAACjI,iBAAgB+G,GAAkBqY,EAErCgQ,EAAQ3iC,EAAS,QAAOsa,EAAchb,KAAS,GACrDisB,EAASkpB,eAAWnmC,YAAa,CAAEq0B,WAEpC,CAAC31B,eAAakV,4BAA6B,EAC1C1G,SACAjC,uBAEA,MACCgmB,SAAS,MAAEv/B,IACRwb,EAEJjC,EAAiB,CAAE,CAAC2I,8BAA6BliB,O,8LC5C1CgN,gBAFT,Q,6BCAA,W,IACA,M,IACA,QACA,S,IACA,QACA,QACA,O,oDAEA,IAAA4uB,qBAAoB,kBAAmB,CACtCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,CACbsO,UAAW,CAAErqC,MAAO,GAAI2a,aAAc,IACtC+5B,eAAe,EACfxiB,gBAAiB,GACjByiB,YAAY,EACZC,SAAU,CAAEC,UAAWxqC,KAAKE,QAE7BooB,WAAY,CACX3yB,MAAO,CACNk8B,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjBuR,aAAc,CACbuhB,QAAS,IAEV5I,UAAW,CACV4I,QAAS,kBAEV/f,UAAW,CACV+f,QAAS34B,gBAAcC,eAExB8Y,YAAa,CACZ4f,QAAS,IAEVnjB,SAAU,CACTmjB,QAAS7oB,yBAAuB0F,UAEjCC,YAAa,CACZkjB,QAAS7oB,yBAAuB2F,aAEjCC,aAAc,CACbijB,QAAS,IAEVtJ,gBAAiB,CAChBsJ,QAAS,KAGXG,eACAxjB,iBACAyjB,mC,8FCnDD,QACA,MACA,OACA,WACA,O,UAyDe5J,IACd,MACCC,YAAY,UAAEW,EAAF,UAAanX,EAAb,YAAwBG,EAAxB,gBAAqCsW,GACjDyX,WAAW,MAAErqC,EAAF,aAAS2a,GAFf,gBAGLuX,EAHK,cAILwiB,GACGhiB,EAEJ,OACC,0BAAK/J,UAAU,oBACd,sCACC3oB,MAAOA,EACP2a,aAAcA,EACd2Y,UAAWA,EACXnX,UAAWA,EACXG,YAAaA,EACbmX,QAASle,WAASE,OAClBke,aAAa,IAAA1zB,GAAE,qBAEfy0C,EA1EoB,EAAC10C,EAAOkyB,EAAiBU,KAChD,OAAQ5yB,GACP,KAAKmD,iBAAeL,OACnB,OAAIovB,EAAgB4iB,YAElB,kCACCnsB,UAAU,kBACVmkB,aAAA,EACA1jC,KAAK,SACL9J,KAAK,aACLq0B,aAAa,IAAA1zB,GAAE,8BACfD,MAAOkyB,EAAgB4iB,WAAW90C,MAClCsY,MAAO4Z,EAAgB4iB,WAAWx8B,MAClCub,WAAW,EACXH,iBAAiB,EACjB2Y,UAAA,IAGS,KACb,KAAKlpC,iBAAeE,UACnB,OAAI6uB,EAAgBzV,WAElB,sCACCkM,UAAU,kBACVrQ,MAAO4Z,EAAgBzV,UAAUnE,MACjCtY,MAAOkyB,EAAgBzV,UAAUzc,MACjC2a,aAAcuX,EAAgBzV,UAAU9B,aACxC2Y,UAAWpB,EAAgBzV,UAAU6W,UACrCnX,UAAW+V,EAAgBzV,UAAUN,UACrCG,YAAa4V,EAAgBzV,UAAUH,YACvCmX,QAASle,WAASG,MAClBme,WAAW,EACXjB,gBAAiBA,EACjBka,aAAA,EACApZ,iBAAiB,EACjB2Y,UAAA,EACA1Y,aAAa,IAAA1zB,GAAE,qBAGN,KACb,KAAKkD,iBAAeG,OACnB,OAAI4uB,EAAgBjK,QAElB,mCACCU,UAAU,kBACV2hB,WAAYpY,EAAgBjK,OAAOqiB,WACnCtW,QAAS9B,EAAgBjK,OAAO+L,UAGvB,KACb,QACC,OAAO,OAwBJ+gB,CAAgB/0C,EAAOkyB,EAAiBU,GACxC,Q,6BClFN,W,IACA,M,IACA,QACA,S,IACA,QACA,Q,oDAKA,IAAAgJ,qBAAoB,cAAe,CAClCC,SAAU,CACTzyB,KAAM0yB,WAEPO,eACAxjB,iBACAkjB,aAAc,CACb/7B,MAAO,GACP4zB,SAAS,EACTZ,SAAU,IAEXL,WAAY,CACXvpB,KAAM,CACL8yB,QAAS,QAEV5jB,MAAO,CACN4jB,QAAS,IAEVl8B,MAAO,CACNk8B,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjBuqB,YAAa,CACZuI,QAAS,IAEV,CAAChlB,YAAW,CACXglB,QAAS,IAEV4Q,YAAa,CACZ5Q,SAAS,GAEV58B,KAAM,CACL48B,QAAS,IAEV8Y,cAAe,CACd9Y,aAAS3W,GAEV,CAACpO,WAAU,CACV+kB,SAAS,GAEVrI,UAAW,CACVqI,SAAS,GAEVxI,gBAAiB,CAChBwI,SAAS,GAEVmQ,SAAU,CACTnQ,SAAS,GAEV/H,UAAW,CACV+H,aAAS3W,EACT4W,OAAQ,CAAE/yB,KAAM,YAGlBkzB,mC,8FChED,MAEA,MAAM2Y,EAAWC,IAGhB,MAAMC,EAAWD,EAAME,IAAI3tC,WAAW6wB,cAAc,SAChD6c,GAAUA,EAASjsC,S,UAGTwpB,IACd,MAAM,MACL1yB,EADK,SAELgzB,EAFK,QAGLY,EACAjB,YAAY,MACXra,EADW,YAEXqb,EAFW,YAGXmZ,EAHW,KAIX1jC,EAJW,KAKX9J,EALW,cAMX01C,EANW,UAOXnhB,EAPW,SAQXwY,EARW,UASXlY,IAEEzB,EAEJ,OACC,gCACC5G,MAAO,CAAE,kBAAmBghB,GAC5B1jC,KAAMA,EACN9J,KAAMA,EACNU,MAAOA,EACPsY,MAAOA,EACPqb,YAAaA,EACbX,SAAUA,EACVqiB,eAAA,EACAlhB,UAAWA,EACXP,QAASA,EACTohB,cAAeA,EACfnhB,UAAWA,EACXwY,SAAUA,EACViJ,cAAaL,M,sGC1ChB,YAOA,OACA,OACA,OACA,SACA,OACA,OAEA,MAAM,oBAAErH,EAAF,2BAAuBC,GAA+BC,cAE9BxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGjb,aAAY5qB,cAAawjB,eAClD,MAAM,MAAEvrB,EAAF,YAAS8sC,EAAT,UAAsB3Y,EAAtB,KAAiC70B,GAASqzB,EAE1C4iB,EACLphB,GAAa7c,oBAAoBtX,EAAMu5B,OAAO,EAAGpF,GAAan0B,EAE/D+H,EAAY,CAAE/H,MAAOu1C,IAEjBv1C,IAAUu1C,GACbhqB,EAASve,eAAaiK,UAAW,CAChCjX,MAAOu1C,EACP56B,aAAc46B,EACdj2C,SAIEwtC,IACHvhB,EAASve,eAAa0H,aACtB6W,EAASve,eAAa4H,iBACtB2W,EAASve,eAAagK,iBAGxB,CAAC62B,GAA6B,EAAGryB,SAAQzT,kBAExC,MACCw3B,SAAS,KAAEjgC,EAAF,MAAQU,IACdwb,EAEAlc,IAAS4X,YAAY5X,IAAS6X,WAAW7X,IAASsT,SACrD7K,EAAY,CAAE,CAACzI,GAAOU,KAExB,CAACgN,eAAa+J,kBAAmB,CAChCkrB,OAAQ,EAAGzmB,SAAQ+P,WAAUxjB,kBAC5B,MACCw3B,SAAWiW,WAAYx1C,IACpBwb,GAEJ,IAAA3T,0BAAyB,CAAE7H,SAAS+H,GAEpCwjB,EAASve,eAAa0H,aACtB6W,EAASve,eAAa2H,eACtB4W,EAASve,eAAa4H,iBACtB2W,EAASve,eAAagK,gBAEvB22B,iBAAiB,GAElB,CAAC3gC,eAAa0H,aAAc,CAC3ButB,OAAQ,EAAGvP,QAAOC,aAAY5qB,kBAC7B,MAAM,MAAE/H,GAAU0yB,GACZ,KAAEtpB,EAAF,gBAAQsqB,GAAoBf,EAC5B8iB,IAAa,IAAAC,eAClB11C,EAAM21C,OACNvsC,EACAsqB,IAGD,IAAA7rB,0BACC,CACC+rB,QAAS6hB,GAEV1tC,IAGF4lC,iBAAiB,GAElB,CAAC3gC,eAAa2H,eAAgB,CAC7BstB,OAAQ,EAAGvP,OAASkB,WAAWjB,YAAcvpB,QAAQrB,kBACpD,MAAMiJ,EACI,WAAT5H,GACG,IAAAnJ,GAAE,wCACF,IAAAA,GAAE,4BAYN8H,EAAY,CAAEirB,SAVGY,EACd,CACA,CACC/S,OAAQre,cAAYC,OACpBuO,UACAtH,KAAMlH,cAAYE,OAGnB,MAIJirC,iBAAiB,GAElB,CAAC3gC,eAAa4H,iBAAkB,CAC/BqtB,OAAQ,EAAGvP,OAASkB,WAAWrI,eAC9BA,EAAS2hB,eAAiBj6B,yBAA0B,CACnDjT,MAAO4zB,KAGT+Z,iBAAiB,GAElB,CAAC3gC,eAAagK,eAAgB,CAC7BirB,OAAQ,EAAG1W,eACVA,EAAS,EAAGmH,QAAOC,iBAClB,MAAM,MAAE3yB,GAAU0yB,GACZ,KAAEpzB,EAAF,KAAQ8J,GAASupB,EAEjBijB,GAAM,IAAAnlC,UAASzQ,EAAOoJ,GACtBuR,GAAe,IAAAk7B,iBAAgBD,EAAKxsC,GAE1C,MAAO,CACNA,KAAM4D,eAAaiK,UACnBsoB,QAAS,CAAEv/B,MAAO41C,EAAKj7B,eAAcrb,YAIxCquC,iBAAiB,K,gFC5HH+H,cAAT,SAAuB11C,EAAOoJ,EAAMsqB,GAC1C,SAAIA,GAA6B,KAAV1zB,KACT,SAAToJ,GAA4B,WAATA,GAAgC,KAAVpJ,KAEpC,WAAToJ,KACCpJ,GAASsX,qBACTtX,EAAQuX,sBACP,GAAEvX,GAAQwF,SAAS,Q,EAMPiL,SAAT,SAAkBzQ,EAAOoJ,GAC/B,IAAIwsC,EAAM51C,EAAM21C,OAChB,MAAY,KAARC,GAAuB,WAATxsC,EAA0BgrB,OAAOwhB,GAC5CA,G,EAGQC,gBAAT,SAAyB71C,EAAOoJ,GACtC,MAAgB,WAATA,EAAoBpJ,EAAM81C,eAAe,SAAW91C,GAtB5D,a,gBCCQ,IAAIslB,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,4UAA+U,M,6BCLxW,Q,6BCAA,W,IACA,M,IACA,Q,IACA,QACA,SACA,QACA,OACA,Q,oDAEA,IAAA68B,qBAAoB,eAAgB,CACnCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,CACb/H,QAAS,GACTsW,WAAY,GACZyL,UAAW,GACXC,oBAAoB,EACpBC,eAAgB,GAChBriB,SAAS,GAEVjB,WAAY,CACXc,QAAS,CACRyI,QAAS3d,mBACT4d,OAAQ,CACP/yB,KAAM,WAGR9J,KAAM,CACL48B,QAAS/4B,iBAAeG,QAEzB,CAACmb,WAAU,CACVyd,QAAS,GACTC,OAAQ,CACP/yB,KAAM,UAGR,CAACsV,eAAc,CACdwd,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRw4B,YAAa,CACZ1F,QAAS7oB,yBAAuBuuB,cAGlCvF,eACAxjB,iBACAyjB,mC,8FChDD,MACA,MACA,MACA,MACA,MACA,MACA,MACA,WACA,QASA,OAEA,MA4FM4Z,EAAqB,CAACxjB,EAAOnH,KAClC,MAAM,QACLyI,EADK,WAELsW,EAFK,UAGLyL,EAHK,mBAILC,EACArjB,YAAY,YAAEiP,IACXlP,EAEJ,OACC,0BAAK/J,UAAU,2BACd,iCACCA,UAAU,cACV6f,OAAO,OACPwM,cAAc,4CACdjhB,MAAO6N,EACPtpB,OAAO,IAAArY,GAAE,eACTosC,UAAU,EACVpY,aAAcqW,KAGf,0BAAK3hB,UAAU,iBACd,gCACCqsB,eAAe,IAAA/0C,GAAE,oBACjBqY,OAAO,IAAArY,GAAE,WACT+yB,SAAU,GACVW,aAAa,IAAA1zB,GAAE,+BACfk2C,KAAK,MACL/sC,KAAK,OACLpJ,MAAO+1C,EACPz2C,KAAMgf,mBACN0N,aAAYhD,IAEVA,EAAE1oB,MAAQW,YAAUG,OACC,KAArB20C,EAAUJ,QAEVpqB,EAASve,eAAa8R,gBAGzB,iCACCs3B,cAAY,MACZ99B,OAAO,IAAArY,GAAE,OACT2oB,KAAK,KACL6K,QAAQ,UACR7N,UAAWowB,EACXjqB,WAAU,KACLiqB,GACHzqB,EAASve,eAAa8R,iBAI1B,0BAAK6J,UAAU,eA/II,EAACqL,EAASzI,KAC/B,MAAM8qB,EAAmBriB,EAAQnvB,OAEjC,OAAOmvB,EAAQljB,IAAI,EAAGwH,QAAOtY,QAAOyL,SAAS4Z,KAC5C,MAAMyS,EAASzS,EAAQ,EACvB,OACC,0BAAKsD,UAAU,gBACd,2BAAMA,UAAU,eAAemP,IAC/B,0BAAKnP,UAAU,qBACd,wCACCA,UAAc1K,eAAF,OACZvU,KAAK,gBACL+pB,QAAQ,WACRhI,MAAM,EACNyd,aAAa,EACbtgB,KAAK,KACLwgB,WAAY,CACXzI,OAAQ,CACP,cAAc,IAAA1gC,GAAE,oBAGlBkpC,gBAAgB,IAAAlpC,GAAE,kBAClB2lB,SAAqB,IAAXkS,EACV/L,WAAU,KACM,IAAX+L,GACHvM,EAASve,eAAa+R,eAAgB,CACrC2jB,UAAWzkB,eACXxS,QACA6qC,SAAUjxB,QAId,wCACCsD,UAAczK,iBAAF,OACZxU,KAAK,kBACL+pB,QAAQ,WACRhI,MAAM,EACNyd,aAAa,EACbtgB,KAAK,KACLwgB,WAAY,CACXzI,OAAQ,CACP,cAAc,IAAA1gC,GAAE,sBAGlBkpC,gBAAgB,IAAAlpC,GAAE,oBAClB2lB,SAAUkS,IAAWue,EACrBtqB,WAAU,KACL+L,IAAWue,GACd9qB,EAASve,eAAa+R,eAAgB,CACrC2jB,UAAWxkB,iBACXzS,QACA6qC,SAAUjxB,SAKf,gCACC/M,OAAO,IAAArY,GAAE,SACTosC,UAAU,EACVjjC,KAAK,OACLpJ,MAAOsY,EACPhZ,KAAM8e,eACNirB,oBAAmB,CAAEiN,SAAUjxB,GAC/BkxB,cAAa,CAAE,cAAc,IAAAt2C,GAAE,aAEhC,gCACCqY,OAAO,IAAArY,GAAE,SACTosC,UAAU,EACVjjC,KAAK,OACLpJ,MAAOA,EACPV,KAAM+e,eACNgrB,oBAAmB,CAAEiN,SAAUjxB,GAC/BkxB,cAAa,CAAE,cAAc,IAAAt2C,GAAE,aAEhC,wCACC0oB,UAAU,gBACV8K,QAAQ,WACRhI,MAAA,EACAyd,aAAa,EACbx/B,KAAK,gBACLqiB,WAAU,KACTR,EAASve,eAAagS,cAAe,CAAEvT,WAExC8qC,cAAa,CACZ5V,OAAQ,CAAE,cAAc,IAAA1gC,GAAE,yBA4D3Bu2C,CAAcxiB,EAASzI,M,UA0Cb,CAACmH,GAASnH,WAAUxjB,kBAClC,MAAM,QAAE0rB,GAAYf,EAAMC,WAE1B,OAAOc,IAAYlV,mBAChB23B,EAAmBxjB,EAAOnH,GAxCP,EAACmH,EAAO3qB,KAC9B,MAAM,QAAEisB,EAAF,eAAWyiB,GAAmB/jB,EAC9ByW,EAAiBnV,EACrBljB,IAAI,CAACmX,EAAQ5C,KAAU,IAAAplB,GAAG,GAAEolB,EAAQ,KAAK4C,EAAO3P,UAChDxG,KAAK,MACDwG,GAAQ,IAAArY,GAAE,cAAe+zB,EAAQnvB,QAGvC,OACC,mBAAC,EAAA+3B,SAAD,MACC,4CACCtkB,MAAOA,EACP8T,MAAM,OACNqH,QAAQ,WACRyP,MAAOiG,EACPuN,cAAa,EAAGtB,UACfrtC,EAAY,CACX0uC,eAAgBrB,KAGlBuB,eAAc,IACb5uC,EAAY,CACX0uC,eAAgB,UAInB,kCACCzlC,QAASm4B,EACT5G,MAAO,IACP79B,GAAG,cACHkyC,aAAYH,MAWZI,CAAenkB,EAAO3qB,K,gBClNlB,IAAIud,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,wmNAA2mN,M,oKCLpoN,I,EAAA,QASA,OACA,SAQA,Q,oCACA,OACA,OAKA,MAAM,oBAAE6uC,EAAF,2BAAuBC,GAA+BC,cAE/CgJ,EAAeA,EAAfA,aAAe,EAAGpkB,QAAO3qB,cAAayT,SAAQ+P,eAC1D,MACCgU,SAAS,MAAE9zB,IACR+P,GACE,QAAEwY,GAAYtB,GACpB,IAAAqkB,cAAa/iB,EAASvoB,EAAO1D,GAC7BwjB,EAASve,eAAaiS,qBAGV+3B,EAAYA,EAAZA,UAAY,EAAGjuC,OAAM2pB,QAAO3qB,cAAawjB,eACrD,MAAM,QAAEyI,GAAYtB,EACdqjB,EAAYrjB,EAAMqjB,UAAUJ,OAQ5BsB,EAAiB,IAAIjjB,EANZ,CACduf,UAAW,EACX9nC,MAAQ,KAAIE,UAAKC,KACjB0M,MAAOy9B,EACP/1C,OAAO,IAAAmL,yBAAwB4qC,KAGhChuC,EAAY,CACXisB,SAAS,IAAAkjB,mBAAkBD,GAC3BlB,UAAW,GACXC,oBAAoB,IAErBzqB,EAASve,eAAaiS,oBACtBsM,EAASve,eAAakS,4BAGtB,IAAAi4B,kBAAiBpuC,IAGLquC,EAAiBA,EAAjBA,eAAiB,EAC7BruC,OACAyS,SACAkX,QACA3qB,cACAwjB,eAEA,MACCgU,SAAS,UAAEmD,EAAF,MAAaj3B,EAAb,SAAoB6qC,IAC1B96B,GACE,QAAEwY,GAAYtB,GACpB,IAAA2kB,SAAQrjB,EAAS0O,EAAWj3B,EAAO1D,GACnCwjB,EAASve,eAAaiS,oBAGtB,MAAMq4B,EAAUhB,GAAY5T,IAAcxkB,iBAAiB,GAAK,GAC7CnV,EAAKtB,WAAW6wB,cACjC,0BACAgf,EAAU,yBACa5U,SAEdx5B,SAGCquC,EAAkBA,EAAlBA,gBAAkB,EAAG/7B,SAAQkX,QAAO3qB,cAAawjB,eAC7D,MAAM,KAAEjsB,EAAF,SAAQg3C,GAAa96B,EAAO+jB,QAC5Bv/B,EAAQwb,EAAO+jB,QAAQv/B,MAAM21C,QAC7B,QAAE3hB,GAAYtB,EAEpB,OAAQpzB,GACP,KAAK+e,eACL,KAAKD,gBACJ,IAAAo5B,cAAaxjB,EAASsiB,EAAU,CAAEh3C,OAAMU,SAAS+H,GACjDwjB,EAASve,eAAaiS,sBAOKqd,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGjb,aAAY5qB,cAAawjB,eAClD,MAAM,QAAEyI,EAAF,WAAWsW,GAAe3X,GAChC,IAAA8kB,mBAAkBzjB,EAASsW,EAAYviC,GACvCwjB,EAASve,eAAa0H,aACtB6W,EAASve,eAAa4H,kBAEvB,CAACi5B,GAA6B,CAC7B5L,OAAQ,EAAGtP,aAAYnX,SAAQzT,kBAC9B,MACCw3B,SAAS,KAAEjgC,EAAF,MAAQU,IACdwb,EAEJ,GAAI,CAACiD,UAASC,eAAalZ,SAASlG,GAAO,CAC1C,IAAI,QAAE00B,EAAF,WAAWsW,GAAe3X,EAC1BrzB,IAASmf,UAASuV,EAAUh0B,EACvBV,IAASof,gBAAa4rB,EAAatqC,IAE5C,IAAAy3C,mBAAkBzjB,EAASsW,EAAYviC,KAIzCu6B,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,KAEtC,CAACv1B,eAAa6R,+BAAgC,CAC7CojB,OAAQ,EAAGzmB,SAAQzT,cAAawjB,eAC/B,MAAM,MAAEvrB,GAAUwb,EAAO+jB,SACzB,IAAA13B,0BACC,CACCyiC,WAAYtqC,GAEb+H,GAEDwjB,EAASve,eAAaiS,qBAEvB0uB,iBAAiB,GAElB,CAAC3gC,eAAa+J,kBAAmB,CAChCkrB,OAAQ,EAAGzmB,SAAQzT,kBAClB,MAAM,KAAEzI,EAAF,WAAQk2C,GAAeh6B,EAAO+jB,QAEhCjgC,IAASgf,oBACZvW,EAAY,CACXguC,UAAWP,EACXQ,mBAA0C,KAAtBR,EAAWG,UAIlChI,iBAAiB,GAElB,CAAC3gC,eAAa4R,wBAAyB,CACtCqjB,OAAQ,EAAGvP,QAAOlX,SAAQ+P,WAAUxjB,kBACnC,MAAM,QAAEisB,GAAYtB,GACd,KAAEpzB,EAAF,MAAQU,EAAR,WAAew1C,EAAf,SAA2Bc,GAAa96B,EAAO+jB,QAEjDv/B,KACH,IAAAw3C,cACCxjB,EACAsiB,EACA,CAAEh3C,OAAMU,MAAOw1C,GACfztC,GAEDwjB,EAASve,eAAaiS,sBAGxB0uB,iBAAiB,GAElB,CAAC3gC,eAAa2R,sBAAuB,CACpCsjB,OAAQsV,EACR5J,iBAAiB,GAElB,CAAC3gC,eAAagS,eAAgB83B,EAC9B,CAAC9pC,eAAa8R,YAAak4B,EAC3B,CAAChqC,eAAa+R,gBAAiBq4B,EAC/B,CAACpqC,eAAaiS,oBAAqB,EAAGsM,eACrCA,EAASve,eAAa0H,aACtB6W,EAASve,eAAa4H,iBACtB2W,EAASve,eAAagK,gBAEvB,CAAChK,eAAa0H,aAAc,CAC3ButB,OAAQ,EAAGvP,QAAO3qB,kBACjB,MAAM,WAAEuiC,EAAF,QAActW,GAAYtB,EAChC,IAAIglB,GAAY,EAEhB,MAAMC,EAAyB3jB,EAAQ4jB,KAAK3vB,GACnB,KAAjBA,EAAO3P,OAAiC,KAAjB2P,EAAOjoB,OAEnB,KAAfsqC,GAAsBtW,EAAQnvB,SAAU8yC,IAC3CD,GAAY,IAEb,IAAA7vC,0BACC,CACC+rB,QAAS8jB,GAEV3vC,IAGF4lC,iBAAiB,GAElB,CAAC3gC,eAAa4H,iBAAkB,CAC/BqtB,OAAQ,EAAGvP,OAASkB,WAAWrI,eAC9BA,EAAS2hB,eAAiBj6B,yBAA0B,CACnDjT,MAAO4zB,KAGT+Z,iBAAiB,GAElB,CAAC3gC,eAAagK,eAAgB,CAC7BirB,OAAQ,EAAG1W,eACVA,EAAS,EAAGmH,QAAOC,iBAClB,MAAM,WAAE2X,EAAF,QAActW,EAAd,eAAuBiiB,GAAmBvjB,EAC1CmlB,EAAe7jB,EAAQniB,OAAOokC,IAC9B,KAAE32C,GAASqzB,EAEjB,MAAO,CACNvpB,KAAM4D,eAAaiK,UACnBsoB,QAAS,CAAE+K,aAAYtW,QAAS6jB,EAAcv4C,YAIjDquC,iBAAiB,GAElB,CAAC3gC,eAAakS,2BAA4B,CACzC+iB,OAAQ,EAAGl5B,WACV,MAAM+uC,EAAa/uC,EAAKtB,WAAW6wB,cAAc,gBACjDwf,EAAWC,SAAS,CACnBC,IAAKF,EAAWG,aAChBC,SAAU,YAIZ5V,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,O,iSC9NvBkV,kBAAT,SAA2BzjB,EAASsW,EAAYviC,GACtD,MAAMowC,EAAenkB,EACnBna,OAAOoO,IAAWA,EAAO4M,SACzB/jB,IAAImX,GACgB,KAApBA,EAAOsrB,SAAP,KAA8BtrB,EAA9B,CAAsCsrB,SAAU,IAAhD,KAA2DtrB,IAEvDguB,EAAiBjiB,EAAQna,OAAOoO,GAAUA,EAAO4M,SACvD9sB,EAAY,CACXisB,QAASmkB,EACT7N,aACA2L,oB,EAIcuB,aAAT,SAAsBxjB,EAASsiB,GAAU,KAAEh3C,EAAF,MAAQU,GAAS+H,GAChE,MAAMkvC,EAAiBjjB,EAAQljB,IAAI,CAACmX,EAAQ5C,KAC3C,MAAMsuB,EAAYA,EAAZA,GAAiB1rB,GAMvB,OALI5C,IAAUixB,IACb3C,EAAUr0C,GAAQU,EACdV,IAAS8e,iBACZu1B,EAAUt1B,iBAAgB,IAAAlT,yBAAwBnL,KAE7C2zC,IAGR5rC,EAAY,CAAEisB,QAASijB,K,EAmBRI,QAAT,SAAiBrjB,EAAS0O,EAAWj3B,EAAO1D,GAClD,MAAMqwC,EAAgB,IAAIpkB,GACpBqkB,EASP,SAAwBrkB,EAASvoB,GAChC,OAAOuoB,EAAQ/Y,UAAUgN,GAAUA,EAAOxc,QAAUA,GAVhC6sC,CAAeF,EAAe3sC,GAC5C8sC,EAYP,SAAcC,EAAaC,EAAWC,GACrC,IAAIC,EAAOH,EAAYC,GAKvB,OAHAD,EAAYC,GAAaD,EAAYE,GACrCF,EAAYE,GAAWC,EAEhBH,EAlBgBI,CACtBR,EACAC,EACAA,GAAe3V,IAAczkB,gBAAgB,EAAI,IAElDlW,EAAY,CAAEisB,QAASkjB,EAAkBqB,M,EAgB1BrB,oBA5EhB,YAMA,OA8B4BH,EAAfA,aAAe,CAAC/iB,EAASvoB,EAAO1D,KAC5C,MAAM8wC,EAAmB7kB,EAAQna,OAAOoO,GAAUA,EAAOxc,QAAUA,GAC7DqtC,EAAgB9kB,EAAQhY,KAAKiM,GAAUA,EAAOxc,QAAUA,GAC9DqtC,EAAcjkB,SAAU,EAExB9sB,EAAY,CACXisB,QAASkjB,EAAkB2B,KAG5B9wC,EAAY,CACXpB,KAAM,iBACNsB,UAAW,OACXjI,MAAO84C,KA4BF,SAAS5B,EAAkBljB,GACjC,OAAOA,EAAQljB,IAAI,CAACmX,EAAQ5C,IAAT,KACf4C,EADe,CAElBsrB,UAAWluB,EAAQ,GAAKlH,yBAIMg5B,EAAnBA,iBAAmBpuC,IAC/BA,EAAKtB,WACH6wB,cAAc,2BACd7wB,WAAW6wB,cAAc,SACzBpvB,U,sGCvFH,WACA,SAKA,QACA,OACA,QACA,QACA,QACA,OAEA,MAAM,oBAAE0kC,GAAwBE,cAEFxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGjb,aAAYpH,WAAUxjB,kBAC/C,MAAM,MAAE/H,EAAF,aAAS2a,GAAiBgY,EAEhC5qB,EAAY,CAAEsiC,UAAW,CAAErqC,QAAO2a,kBAClC4Q,EAASve,eAAaya,+BAAgC,CAAEznB,WAGzD,CAAC+4C,eAAetkC,4BAA6B,EAAG+G,SAAQ+P,eACvD/P,EAAOxS,iBACP,MAAQu2B,SAAS,kBAAEoP,GAAsB,IAAOnzB,EAE5CmzB,GACHpjB,EAASve,eAAa4a,6BAExB,CAACmxB,eAAexkC,4BAA6B,CAC5C0tB,OAAQ,EAAGl6B,cAAayT,SAAQ+P,WAAUmH,YACzC,MACC6M,SAAS,MAAEv/B,EAAF,KAASV,EAAT,aAAeqb,IACrBa,GACE,gBAAE0W,GAAoBQ,EAExBpzB,IAASiE,gBAAcC,eAC1BuE,EAAY,CAAEsiC,UAAW,CAAErqC,QAAOV,OAAMqb,kBACxC4Q,EAASve,eAAaya,+BAAgC,CACrDznB,UAEDurB,EAAS2hB,eAAiBh6B,sBAAuB,CAAElT,WACzCV,IAAS6D,iBAAeE,YAClC,IAAA21C,uBACC15C,EACA,CAAEU,QAAO2a,gBACTuX,EACAnqB,GAIFwjB,EAASve,eAAa0a,iCAEvBimB,iBAAiB,GAElB,CAACoL,eAAevkC,8BAA+B,EAC9CgH,SACAkX,QACA3qB,kBAEA,MACCw3B,SAAS,MAAEv/B,EAAF,KAASV,IACfkc,GACE,gBAAE0W,GAAoBQ,EAExB1yB,GAASV,IAASiE,gBAAcC,iBACnC,IAAAw1C,uBACC15C,EACA,CAAEU,MAAO,GAAI2a,aAAc,IAC3BuX,EACAnqB,GAEDA,EAAY,CAAE2sC,eAAe,MAI/B,CAACuE,eAAiBhiC,WAAY,CAC7BgrB,OAAQ,EAAGzmB,SAAQ+P,WAAUxjB,cAAa2qB,YACzC,MACC6M,SAAS,MAAEv/B,EAAF,aAAS2a,EAAT,KAAuBrb,IAC7Bkc,GACE,gBAAE0W,GAAoBQ,GAE5B,IAAAsmB,uBACC15C,EACA,CAAEU,QAAO2a,gBACTuX,EACAnqB,GAGDwjB,EAASve,eAAa0a,iCAEvBimB,iBAAiB,GAGlB,CAACuL,eAAkBjiC,WAAY,CAC9BgrB,OAAQ,EAAGvP,QAAOlX,SAAQ+P,WAAUxjB,kBACnC,MACCw3B,SAAS,WAAE+K,EAAF,QAActW,EAAd,KAAuB10B,IAC7Bkc,GACE,gBAAE0W,GAAoBQ,EAEtB5qB,EAAO,CAAEwiC,aAAYtW,YAE3B,IAAAglB,uBACC15C,EACA,CAAEU,MAAO8H,EAAM6S,aAAc7S,GAC7BoqB,EACAnqB,GAEDwjB,EAASve,eAAa0a,iCAEvBimB,iBAAiB,GAElB,CAAC3gC,eAAaya,gCAAiC,EAC9CjM,SACAzT,cACA4qB,aACApH,eAEA,MACCgU,SAAS,MAAEv/B,IACRwb,GACE,SACLzC,EADK,YAELC,EAFK,aAGLC,EAHK,YAILqD,EAJK,UAKLgX,GACGX,EACE7qB,EAAO,CACZ4sC,eAAe,IAAAyE,qBAAoBn5C,IAGhC8H,EAAK4sC,gBACR5sC,EAAKoqB,iBAAkB,IAAAknB,uBACtBp5C,EACA+Y,EACAC,EACAC,EACA,CAAEqD,cAAagX,eAIjBvrB,EAAYD,GAIR9H,IAAUmD,iBAAeE,WAC5BkoB,EAASve,eAAa6a,0CAExB,CAAC7a,eAAa0a,gCAAiC,EAAG6D,eACjDA,EAAS,EAAGmH,YACX,MAAM,UAAE2X,EAAF,gBAAanY,EAAb,cAA8BwiB,GAAkBhiB,EACtD,MAAO,CACNtpB,KAAM4D,eAAa2a,4BACnB4X,QAAS,CACR8K,YACAnY,kBACAia,aAAcuI,OAKlB,CAAC1nC,eAAa4a,4BAA6B,EAAG2D,eAC7CA,EAAS,KACD,CACNniB,KAAM8jC,eAAiBl6B,2BAI1B,CAAChG,eAAa6a,yCAA0C,EACvD9f,cACA2qB,YAEA,MAAM,gBAAER,GAAoBQ,GAE5B,IAAAsmB,uBACCz1C,gBAAcE,WACd,CAAEzD,MAAO,GAAI2a,aAAc,MAC3BuX,EACAnqB,M,6SCvGaixC,sBAAT,SACN15C,EACAwI,EACAoqB,EACAnqB,GAEAA,EAAY,CACXmqB,qBACIA,EADJ,CAEC,CAAC5yB,GAAD,KACI4yB,EAAgB5yB,GAChBwI,QA1FP,YACA,QAKA,OAEmCqxC,EAAtBA,oBAAsBn5C,IACoB,IAAtDP,OAAO+E,KAAKujB,wBAAsBlf,QAAQ7I,GAENo5C,EAAxBA,sBAAwB,CACpCp5C,EACA+Y,EACAC,EACAC,EACAsZ,KAEA,IAAIL,EAAkB,GA2CtB,OA1CmBnK,uBAAqB/nB,GAE7BgH,OAAO,CAACqpB,EAAKC,KACvB,GAAIA,IAASntB,iBAAeG,OAUrB,CACN,MAAMgV,GAAQ,IAAAyD,gBAAeuU,EAAMtX,IAElC66B,OAAO,MAAE7zC,EAAF,aAAS2a,GAChB1B,aAAcogC,GA4BlB,SAA2BlF,EAAYp7B,EAAUC,EAAaC,GAC7D,MAAME,GAAc,IAAA4B,gBAAe/B,EAAam7B,GAE1CkF,EAAmB,CAAEngC,SADVD,EAAaC,SACOC,eAErC,MAAO,CACN06B,OAAO,IAAA/6B,cAAa,CACnBC,WACAC,cACAC,aAAcogC,IAEfpgC,aAAcogC,GAtCTC,CAAkBhpB,EAAMvX,EAAUC,EAAaC,GAC7C6Z,EAAQ,CACb9yB,QACA2a,eACArC,QACAW,aAAcogC,GAef,OAZI/oB,IAAS/sB,gBAAcE,YAA8B,KAAhBqvB,EAAM9yB,QAC9C8yB,EAAM9yB,MAAQ8nB,sBAGXwI,IAASntB,iBAAeE,YAC3ByvB,EAAM3W,UAAYmU,EAClBwC,EAAMQ,UAAYf,EAAUe,UAC5BR,EAAMxW,YAAciW,EAAUjW,aAG/B+T,EAAIC,GAAQwC,EAELzC,EAnC4B,CACnC,MAAMrW,GAAY,IAAAlB,cAAa,CAC9BC,WACAC,cACAC,iBAEDoX,EAAIC,GAAJ,KACItW,EAAUuY,UADd,CAECtZ,mBA6BAiZ,GAEIA,I,gBC5DA,IAAI5M,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,mWAAsW,M,6BCL/X,Q,6BCAA,W,IACA,MACA,S,IACA,Q,IACA,Q,oDAEA,IAAA68B,qBAAoB,iBAAkB,CACrCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,CACb/7B,MAAO,GACP4zB,SAAS,GAEVyI,eACAxjB,iBACA8Z,WAAY,CACXra,MAAO,CACN4jB,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjBpJ,MAAO,CACNk8B,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjB9J,KAAM,CACL48B,QAAS,GACTC,OAAQ,CAAE/yB,KAAM,WAEjByqB,UAAW,CACVqI,SAAS,EACTC,OAAQ,CAAE/yB,KAAM,YAEjB+qB,UAAW,CACV+H,QAAS,EACTC,OAAQ,CAAE/yB,KAAM,YAGlBkzB,mC,sGCtCD,WACA,QACA,OAEA,MAAM,oBAAEsR,GAAwBE,cAEFxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGjb,aAAY5qB,cAAawjB,eAClD,MAAM,MAAEvrB,EAAF,UAASm0B,EAAT,KAAoB70B,GAASqzB,EAC7B4iB,EAAev1C,EAAMu5B,OAAO,EAAGpF,GAErCpsB,EAAY,CAAE/H,MAAOu1C,IAEjBphB,EAAYn0B,EAAM6E,QACrB0mB,EAASve,eAAaiK,UAAW,CAChCjX,MAAOu1C,EACP56B,aAAc46B,EACdj2C,UAKH,CAAC0N,eAAa0kB,qBAAsB,CACnCuQ,OAAQ,EAAGzmB,SAAQ+P,WAAUxjB,kBAC5B,MACCw3B,SAAWiW,WAAYx1C,IACpBwb,GAEJ,IAAA3T,0BAAyB,CAAE7H,SAAS+H,GACpCwjB,EAASve,eAAagK,gBAEvB22B,iBAAiB,GAGlB,CAAC3gC,eAAagK,eAAgB,CAC7BirB,OAAQ,EAAG1W,eACVA,EAAS,EAAGmH,QAAOC,iBAClB,MAAM,MAAE3yB,GAAU0yB,GACZ,KAAEpzB,GAASqzB,EAEjB,MAAO,CACNvpB,KAAM4D,eAAaiK,UACnBsoB,QAAS,CAAEv/B,QAAO2a,aAAc3a,EAAOV,YAI1CquC,iBAAiB,K,8FC9CnB,OACA,a,UAEejb,IACd,MAAM,MACL1yB,EADK,QAEL4zB,EACAjB,YAAY,MAAEra,EAAF,UAASub,EAAT,KAAoBv0B,EAApB,UAA0B60B,IACnCzB,EAEJ,OACC,mCACCpa,MAAOA,EACPtY,MAAOA,EACPm0B,UAAWA,EACXnB,UAAU,IAAAumB,gBAAeplB,GACzB70B,KAAMA,EACNs0B,QAASA,EACTC,UAAWA,EACX2lB,OAAO,e,cCnBV16C,EAAOD,QAAU46C,sC,gFCGDF,eAAT,SAAwBplB,GAC9B,MAAO,CACN,CACCtT,OAAQle,aAAWF,OACnBuO,SAAS,IAAA/Q,GAAE,sBAAuBk0B,GAClCzqB,KAAM/G,aAAWD,QARpB,WACA,Q,gBCAQ,IAAI4iB,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,+UAAkV,M,6BCL3W,Q,6BCAA,W,IACA,M,IACA,Q,IACA,QACA,S,oDAEA,IAAA68B,qBAAoB,eAAgB,CACnCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,CACbhI,MAAO,GACPE,aAAc,IAEftB,WAAY,CACXoB,MAAO,CACNmI,QAAS,GACTC,OAAQ,CACP/yB,KAAM,UAGR6qB,aAAc,CACbiI,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRyqB,UAAW,CACVqI,SAAS,EACTC,OAAQ,CACP/yB,KAAM,YAGRsqB,gBAAiB,CAChBwI,SAAS,EACTC,OAAQ,CACP/yB,KAAM,aAITizB,eACAxjB,iBACAyjB,mC,8FC1CD,M,UAEe5J,IACd,MACCC,YAAY,aAAEsB,EAAF,UAAgBJ,GADvB,MAELE,GACGrB,EACJ,OACC,iCACC/J,UAAU,iBACVkL,UAAWA,EACXE,MAAOA,EACPE,aAAcA,M,gBCXT,IAAI3O,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,sxLAAyxL,M,8HCLlzL,WACA,QAMA,OAKA,OACA,OACA,SAEO,MAAM26C,EAAwBA,EAAxBA,uBAAwB,IAAAv1C,sBAAqB,YAEpD,oBACLypC,EADK,uBAELyG,EAFK,2BAGLxG,GACGC,cAE0BxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGpyB,SAAQmX,aAAY5qB,cAAawjB,gBAC1D,IAAA4K,iBAAgB,CAAExD,aAAY5qB,gBAG9B,MAAMrD,EAAK8W,EAAO2Z,KAAKzwB,GACvBg1C,EAAsB/0C,IAAID,EAAIH,IAC7B,KAAMA,aAAiBo1C,eAAgB,OACvC,GAAIp1C,EAAMjE,MAAQW,YAAUG,MAAO,QAEtB,IAAA0K,cAAavH,GACWyX,KACpC2J,GACCA,EAAK6R,WACL7R,EAAK6R,UAAUnR,SAASiC,qCAKzBiD,EAAS2hB,eAAiBn6B,4BAA6B,CACtD6mC,aAAa,OAIjB,CAACvF,GAAyB,EAAG74B,aAC5B,MAAM9W,EAAK8W,EAAO2Z,KAAKzwB,GACvBg1C,EAAsB10C,OAAON,IAE9B,CAACsI,eAAasU,8BAA+B,CAC5C2gB,OAAQ,EAAGzmB,SAAQ+P,WAAUxjB,kBAC5B,MACCw3B,SAAS,KAAExuB,IACRyK,GAEJ,IAAA3T,0BAAyB,CAAEosB,aAAcljB,EAAKrM,IAAMqD,GAEpD,IAAI/H,EAAQ+Q,EAAKrM,GACbiW,EAAe5J,EAAKuH,MAEpBvH,EAAKrM,KAAO0jB,mBACfpoB,EAAQ,GACR2a,EAAe,IAGhB4Q,EAASve,eAAaiK,UAAW,CAChCjX,QACA2a,kBAGFgzB,iBAAiB,GAElB,CAACE,GAA6B,EAAGryB,SAAQmX,aAAY5qB,kBACpD,MACCw3B,SAAS,KAAEjgC,IACRkc,EAEAlc,IAASipB,UAAO,IAAA4N,iBAAgB,CAAExD,aAAY5qB,mB,uGChFpD,YAE+BouB,EAAlBA,gBAAkB,EAAGxD,aAAY5qB,kBAC7C,MAAM,MAAEgsB,EAAF,aAASE,EAAT,gBAAuBP,GAAoBf,EAEjD5qB,EAAY,CACXgsB,MAAOL,EAAkB,CAAClL,kBAAgB3W,OAAOkiB,GAASA,EAC1DE,mB,gBCNM,IAAI3O,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,05BAA65B,M,wICLt7B,WACA,OACA,OAKA,QACA,OAKA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QAQA,QAEO,MAAM86C,EAAsBA,EAAtBA,qBAAsB,IAAA11C,sBAAqB,UAElD,oBACLypC,EADK,uBAELkM,EAFK,uBAGLzF,EAHK,2BAILxG,EAJK,wBAKLkM,GACGjM,cAESkM,EAAYA,EAAZA,UAAY,EACxBx+B,SACAkX,OAAS1yB,QAAOo2B,gBAAeC,wBAC/B1D,aACApH,WACAxiB,OACAhB,kBAEA,MAAM,MAAExD,GAAUiX,EAAO+jB,QAGzB,IAAIx2B,EAAKkxC,WAAW11C,EAAMssC,eAE1B,OAAQtsC,EAAMjE,KACb,KAAKW,YAAUC,IACf,KAAKD,YAAUE,OAEboqB,EAASve,eAAagC,6BADnBonB,IAAkBp2B,EAC+B,GAEA,CACnD8H,KAAM,CACLirB,SAAS,EACT/yB,MAAOo2B,EACPzb,aAAc0b,EACdrD,SAAU,MAIbzH,EACC0hB,eAAsBz2B,mCACtB,IAED,MAED,KAAKvV,YAAUG,MAAO,CAErB,GAAImD,EAAMiE,SAAU,OAEpB,MAAM,UAAE2T,GAAcwW,EAAWJ,UACjC,IAAI,IAAA2D,iBAAgBl2B,EAAOmc,GAAY,OAEvCoP,EAASve,eAAa+F,4BAA6B,CAClD6mC,aAAa,IAEd7xC,EAAY,CACX6qB,gBAAiB,CAAExpB,KAAM7E,EAAMjE,OAEhC,SAuBG45C,EAA6B,EAAG1+B,SAAQzT,kBAC7C,MACCw3B,SAAS,MAAEv/B,EAAF,aAAS2a,IACfa,EAEE1T,EAAO,CAAE9H,QAAO2a,iBACtB,IAAA9S,0BAAyBC,EAAMC,IAGFu0B,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsBzX,kBACvB,CAAC2jB,GAAyB,CACzB7X,OAAQ,EAAGl5B,OAAMyS,SAAQ+P,gBACxB,IAAAoK,uBAAsB,CAAE5sB,OAAMyS,SAAQ+P,aAGtC,MAAM7mB,EAAK8W,EAAO2Z,KAAKzwB,GACvBm1C,EAAoBl1C,IAAID,EAAIH,IAC3BgnB,EAASve,eAAa8F,2BAA4B,CACjDvO,QACA41C,WAAW,IAAAruC,cAAavH,QAI3B+9B,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,KAEtC,CAAC8R,GAAyB,EAAG74B,aAC5B,MAAM9W,EAAK8W,EAAO2Z,KAAKzwB,GACvBoxB,cAAY9wB,OAAON,GACnBm1C,EAAoB70C,OAAON,IAE5B,CAACq1C,GAA0B,EAAGrnB,QAAOlX,SAAQ+P,eAC5C,MACC4J,MAAM,qBAAEilB,IACL5+B,GACE,aAAE2wB,EAAF,cAAgBlW,GAAkBvD,GAGpCyZ,GAAgBlW,KAEdmkB,GACJ7uB,EAAS8uB,eAAgB1wB,sBAG5B,CAACkkB,GAA6B,EAAGryB,SAAQmX,aAAY5qB,kBACpD,MACCw3B,SAAS,KAAEjgC,IACRkc,EAGAlc,IAASsT,UAAO,IAAAujB,iBAAgB,CAAExD,aAAY5qB,iBAEnD,CAACiF,eAAa6F,sBAAuBmnC,EACrC,CAAChtC,eAAa8F,4BAvEK,EAAG0I,SAAQzS,OAAMwiB,WAAUxjB,kBAC9C,MAAM,MAAExD,EAAF,UAAS41C,GAAc3+B,EAAO+jB,QAE9B+a,EAAQvxC,EAAK6vB,QAAQnmB,qBACN0nC,EAAUvC,KAC9BjnC,GACCA,IAAY5H,GACZ4H,IAAY2pC,IACZ,IAAAzoB,eAAclhB,EAAS2pC,MAIzB/uB,EAASve,eAAa+F,4BAA6B,IACnDwY,EAAS0hB,eAAsBr2B,iBAC/B7O,EAAY,CAAE6qB,gBAAiB,CAAExpB,KAAM7E,EAAMjE,SA0D7C,CAAC0M,eAAa+F,6BAA8B,EAC3C2f,QACAlX,SACA+P,WACAoH,iBAEA,MAAM,QACLiB,EADK,aAELuY,EAFK,cAGLlW,EAHK,gBAIL/D,EAJK,MAKLlyB,EALK,aAML2a,GACG+X,EACE5qB,EAAO,CAAE9H,QAAO2a,iBACd3a,MAAOsyB,EAAT,QAAmBS,EAAnB,UAA4BR,GAAcI,GAC1C,YAAEinB,GAAc,GAAUp+B,EAAO+jB,QACvC,IAAIgb,GAAc,EAClB,MAAM5gC,EAAQ,GACd,IAAI6gC,GAAwB,EAG5B,GAAI5mB,EACHrI,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,QAFf,CAWA,GANW1M,GACVxH,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,IAIX0M,EACH,GAAIlW,EAEHnuB,EAAKyqB,UAAYL,EAAgBjK,OAAOjoB,MACxC8H,EAAKyqB,UAAUjzB,KACd4yB,EAAgBjK,OAAO3oB,MACvBqzB,EAAW8B,cAAcn1B,KAC1BwI,EAAKyqB,UAAU5hB,QACdgiB,EAAWJ,UAAUjX,OAAOjC,QAAQ1I,QAAQ3Q,MAC7Cu6C,GAAc,MACR,CACN,MAAME,GAAuB,IAAAxoB,aAAYC,GACzCvY,EAAMzH,QAAQuoC,GAKhB,GACCnoB,IAAanvB,iBAAeE,WAC5ByE,EAAK9H,QAAUmD,iBAAeE,UAC7B,CACD,MACCkvB,WACCtZ,cAAc,SAAEC,KAEdyZ,GACE,YAAE3Z,GAAgB2Z,EAOlB+nB,EAAiB,CACtB5yC,KAAM,CAAE9H,MAAO,GAAI2a,aAAc,IACjC1B,aAHoB,CAAEC,WAAUC,aAJb,IAAA4B,gBACnB/B,EACAzV,gBAAcF,aAYf,GAHAsW,EAAMzH,KAAKwoC,GAGP5yC,EAAK9H,QAAUmD,iBAAeL,OAAQ,CAEzC,MAAM63C,EAAiB,CACtB7yC,KAAM,CAAE9H,MAAO,GAAI2a,aAAc,IACjC1B,aAAc,CACbC,WACAC,aAAa,IAAA4B,gBACZ/B,EACAzV,gBAAcE,cAKjBkW,EAAMzH,KAAKyoC,IAKThhC,EAAM9U,QACT0mB,EACCqvB,eAAwBjtC,oCACxB,CACCgM,QACAqoB,oBAAoB,IAKvBwY,GAAwB,IAAAnoB,sBAAqBC,EAAUxqB,EAAK9H,MAAO,CAClEuyB,YACAL,oBAGGsoB,GACHjvB,EAAS0hB,eAAsB92B,mCAG5Bmc,GAAYxqB,EAAK9H,OAASu6C,EAC7BhvB,EAASve,eAAa+B,2BAA4B,CAAEjH,SAC5CirB,GACRxH,EAASve,eAAagC,6BAA8B,IAGjD4qC,GACHruB,EACC0hB,eAAsBz2B,mCACtB,MAMH,CAACxJ,eAAagG,wBAAyB,CACtCivB,OAAQ,EAAG1W,eACVA,EAAS,KACD,CACNniB,KAAM4D,eAAa+F,4BACnBwsB,QAAS,OAIZ+C,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,KAEtC,CAACv1B,eAAaiG,0BAA2B,EACxCyf,QACAlX,SACAzT,cACAwjB,eAEA,MAAQvrB,MAAO4zB,GAAYpY,EAAO+jB,SAC5B,cAAEtJ,GAAkBvD,GAC1B,IAAA7qB,0BAAyB,CAAE+rB,WAAW7rB,GAElC6rB,GACHrI,EAASiU,eAAgBntB,+BAAgC,CACxDotB,aAAa,IAGXxJ,GACHluB,EAAY,CACXqkC,cAAexY,KAMlB,CAACmlB,eAAexkC,4BAA6B2lC,EAC7C,CAACW,eAAqBlzB,6BAA8B,EACnDnM,SACAzT,kBAEA,MACCw3B,SAAS,aAAE4M,EAAF,UAAgB9B,EAAhB,gBAA2BnY,IACjC1W,EAEA2wB,IACH,IAAAtkC,0BACC,CAAEqqB,kBAAiBia,gBACnBpkC,IAIF,IAAAF,0BACC,CACC7H,MAAOqqC,EAAUrqC,MACjB2a,aAAc0vB,EAAU1vB,aACxBwxB,gBAEDpkC,IAGF,CAACkxC,eAAiBhiC,WAAYijC,EAC9B,CAACY,eAAkB7jC,WAAYijC,EAC/B,CAACltC,eAAakG,uBAAwB,EACrCsI,SACAmX,aACA5qB,cACAwjB,eAEA,MAAM,MAAEvrB,GAAUwb,EAAO+jB,SACnB,UAAEhN,GAAcI,EACtB5qB,EAAY,CACXkuB,eAAe,IAAAC,iBAAgBl2B,EAAOuyB,EAAUpW,aAGjDoP,EAAS8uB,eAAgB1wB,qBAE1B,CAAC3c,eAAamG,+BAAgC,EAAGoY,eAChDA,EAASve,eAAa+F,4BAA6B,CAClD6mC,aAAa,KAGf,CAACmB,eAAoB9jC,WAAYijC,I,oFClXlC,EAHA,KAGAte,qBAAoB,wBAAyB,CAC5CC,SAAU,CAAEzyB,KAAM0yB,WAClBO,KAAM,KAAM,mC,sHCLb,OACA,QACA,SAIA,MACA,WAOA,OACA,QACA,OACA,QAiC8BoB,EAAjBA,eAAiBwL,IAC7B,MAAM,UAAE7vB,EAAF,SAAamS,GAAa0d,GAE/B3pC,KAAM0Y,EADD,SAELI,EAFK,UAGLC,EAHK,aAILI,EAJK,cAKLC,GACGU,GACE,KAAE1P,EAAF,MAAQF,IAAU,IAAAL,qBAAoBsP,EAAcC,GACpDsiC,EAAWzuC,cAAY8L,GAE7B,GAAIe,EAAUV,cAAcnN,WAAW,aACtC,OACC,yBACCsgB,SAAS,KACT3C,MAAO9P,EAAUP,OACjB8P,UAAU,wBAIb,MAAMqa,EAAgB5qB,EACnBC,IAAcpM,kBACbI,iBACAJ,kBACDK,qBAEG2uC,EAAmB,KACxB1vB,EAAS4a,eAAmBv4B,6BAA8B,CACzDoK,SACA0qB,UAAWM,KAIb,IAAIkY,EAKJ,OAHCA,EADG9hC,EAAUX,eAAiB7V,cAAYK,WAC5B,IAAAk4C,wCACM,IAAAC,+BAGpB,yBAAIC,YAAWjjC,EAAW4iC,EAAW,OAAQnvB,SAAS,OACrD,0BAAKlD,UAAU,wBACd,0BACCgD,KAAK,SACLhD,UAAU,wBACVua,MAAO9qB,GAAW,IAAAnY,GAAE,sBAAuB+6C,GAAY,KACvDjvB,WAAU,KACTkvB,KAEDjvB,aAAYhD,IACPA,EAAE1oB,MAAQW,YAAUG,OAAO65C,OAGhC,mBAAC,EAAAxyB,OAAD,CAAQC,QAAShf,EAAMF,MAAOA,KAC9B,0BACCsiB,MAAO,CACN,wBAAwB,EACxB,eAAgBxO,mBAAiB9X,SAChC4T,EAAU9Z,SAIZ,0BAAKqpB,UAAU,iCACbvP,EAAUd,QA/EehZ,EAiFD8Z,EAAU9Z,KAhFrCge,mBAAiB9X,SAASlG,IAE5B,+BAAUqpB,UAAU,aAAajf,KAAK,gBAAgBkf,KAAK,OAEtD,OApBoB,EAACxQ,EAAUC,IACjCD,GAEJ,+BACCuQ,UAAU,YACVjf,KACC2O,IAAcpM,kBACX,qBACA,mBAEJ2c,KAAK,OATe,KAiGjB0yB,CAAoBljC,EAAUC,KAEhC,mCACCsQ,UAAU,6BACV4yB,WAAUvyB,GACTuC,EACCiwB,eAAiB9kC,kCACjB,CAAE0+B,IAAKpsB,EAAElJ,SAGX27B,UAAS,IACRlwB,EACCiwB,eAAiB9kC,mCAGnBqd,MAAOmnB,EACPQ,cAAe,GACfhyC,KAAK,qBACLkf,KAAK,KACL6K,QAAQ,YACRhI,MAAA,EACAkwB,OAAO,OACPC,WAAW,EACXC,WAAW,EACXzS,WAAY,CACX0S,QAAS,CAAE,cAAc,IAAA77C,GAAE,kBAE5BopC,oBAAmB,CAAErxB,SAAQ+qB,iBAAkB1qB,OA9GnB/Y,Q,wJClCjC,WACA,OAK0C87C,EAA7BA,2BAA6B,IAAM,CAC/C,CACC12C,GAAIgI,cACJ4L,OAAO,IAAArY,GAAE,gBAEV,CACCyE,GAAIiI,eACJ2L,OAAO,IAAArY,GAAE,iBAIwCk7C,EAAtCA,oCAAsC,IAAM,CACxD,CACCz2C,GAAIgI,cACJ4L,OAAO,IAAArY,GAAE,0BAEV,CACCyE,GAAIiI,eACJ2L,OAAO,IAAArY,GAAE,4B,sGCxBX,YACA,SACA,SACA,QACA,OAE8Bs2B,EAAjBA,eAAiB,CAC7Bj3B,KAAM0M,gBACN+vB,aAAc,CACbnF,aAAc,CACbpd,IAAK,EACLqd,KAAM,EACNlR,UAAMJ,GAEPoR,KAAM,CAAEoB,KAAM,IACdgkB,cAAUx2B,EACVy2B,oBAAgBz2B,EAChB02B,0BAA0B,EAC1BC,kBAAkB,GAEnBvpB,WAAY,CACX,CAACxiB,iBAAgB,CAChB+rB,QAAS7oB,yBAAuB8oC,aAEjC,CAAC/rC,eAAc,CACd8rB,QAAS7oB,yBAAuB+oC,aAGlCrP,8BACAzQ,kC,4LC7BD,WACA,QAWA,QACA,QACA,OAEA,MAAM,4BACL/lB,EADK,kCAELF,EAFK,iCAGLC,GACGtJ,eAESqvC,EAAsBA,EAAtBA,oBAAsB,CAAC9wB,EAAUjrB,IAC7CirB,EAAShV,EAA6B,CAAEjW,QAE5Bg8C,EAAiBA,EAAjBA,eAAiB,EAAG9gC,SAAQkX,QAAOnH,eAC/C,MAAM,MAAEhnB,GAAUiX,EAAO+jB,SACnB,SAAEwc,EAAF,KAAYplB,EAAZ,aAAkBC,EAAlB,yBAAgCqlB,IAA6B,IAAAzlB,UAClE9D,GAED,GAAIupB,EAA0B,OAC9B,MAAMplB,GAAO,IAAAH,iBAAgB,CAAEC,OAAMC,iBACrC,IAAI5tB,GAAiB,EAErB,OAAQzE,EAAMjE,KACb,KAAKW,YAAUI,SACf,KAAKJ,YAAUM,WACf,KAAKN,YAAUO,WACf,KAAKP,YAAUK,YACf,KAAKL,YAAUW,KACf,KAAKX,YAAUY,IACf,KAAKZ,YAAUS,QACf,KAAKT,YAAUU,UACTo6C,GAAUM,EAAoB9wB,EAAUhnB,EAAMjE,KACnD,MACD,KAAKW,YAAUQ,MACf,KAAKR,YAAUG,MACT26C,GAAYllB,EAAKlR,OAASiR,EAAajR,KAOrC3c,GAAiB,GANvBuiB,EAASlV,GAERwgB,EAAKO,UACLP,EAAKO,SAASkB,cAAc,2BAE5BtvB,GAAiB,IAEnB,MACD,KAAK/H,YAAUC,IACf,KAAKD,YAAUE,OACV46C,EAAUxwB,EAASjV,GAClBtN,GAAiB,EACtB,MACD,QACCA,GAAiB,EAIfA,GAAgBzE,EAAMyE,iBAC1BzE,EAAMopC,mBAGM4O,EAAeA,EAAfA,aAAe,EAAG/gC,SAAQkX,QAAO3qB,kBAC7C,MAAM,MAAExD,GAAUiX,EAAO+jB,QACnB54B,GAAO,IAAAmF,cAAavH,GACpBohB,GAAO,IAAAoR,uBAAsBxyB,GAEnC,IAAKohB,EAAM,OAEX,MAAM,IAAEnM,EAAF,KAAOqd,IAAS,IAAA2B,iBAAgB7S,IAEhC,aAAEiR,IAAiB,IAAAJ,UAAS9D,GAC5BsE,EAAW,CAAExd,MAAKqd,OAAMlR,SACxB,KAAEgR,IAAS,IAAAH,UAAS9D,GAG1B,GAAI/M,EAAK2S,cAAc,yBAA0B,CAChD,MAAMkkB,GAAU,IAAA9lB,iBAAgB,CAAEC,OAAMC,aAAcI,IAClDwlB,GAAWA,EAAQ72B,OAAShf,EAAK,KACpC61C,EAAQ72B,KAAKzc,QACbszC,EAAQ72B,KAAKukB,SAIf,MAAMjT,EAActR,KAAS,IAAAO,sBAC7B,IAAA4Q,aAAY,CAAEH,OAAMC,eAAcI,WAAUjvB,cAAakvB,gBAGrDA,IAAa,IAAAK,aAAYvvB,OAAawd,IAG9Bk3B,EAAkBA,EAAlBA,gBAAkB,EAAGjhC,SAAQkX,QAAO3qB,kBAEhD,MACCxD,OAAO,cAAEssC,IACNr1B,EAAO+jB,QAGX,IACEsR,IACA36B,iCAA+B1Q,SAASqrC,EAAc7qB,SACtD,CACD,MAAM,KAAE2Q,EAAF,aAAQC,IAAiB,IAAAJ,UAAS9D,IACxC,IAAAsF,qBAAoBrB,EAAMC,EAAapd,KAQvCq3B,GACAA,EAAc6L,eAEb,sBADD7L,EAAc6L,cAAc12B,QAAQ5a,gBAKrC,IAAAmsB,gBAAe7E,EAAO3qB,IAGV40C,EAAeA,EAAfA,aAAe,EAAGjqB,YAE9B,MAAM,KAAEiE,EAAF,aAAQC,IAAiB,IAAAJ,UAAS9D,IAClC,SAAE0E,EAAF,KAAYzR,IAAS,IAAA+Q,iBAAgB,CAAEC,OAAMC,kBAEnD,IAAAe,kBAAiBhB,EAAMC,EAAapd,KAEhC4d,GAAYA,EAASkB,cAAc,2BACtC3S,EAAKzc,QAGL4B,WAAW,IAAM6a,EAAKzc,WAIK6jC,EAAhBA,cAAgB,CAC5B,CACChX,OAAQ,CAAC,WACTkM,OAAQqa,GAET,CACCvmB,OAAQ,CAAC,SACTkM,OAAQsa,GAET,CACCxmB,OAAQ,CAAC,YACTkM,OAAQwa,GAET,CACC1mB,OAAQ,CAAC,SACTkM,OAAQ0a,K,8QC/JV,OACA,QACA,OACA,QAWA,QAMA,OACA,OAMA,MAAM,oBAAE/O,EAAF,2BAAuBC,GAA+BC,cAqM9BxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAAsB,EAAGriB,eACzBA,EAASve,eAAamJ,oCAEvB,CAAC03B,GAA6B,EAC7B9kC,OACA2pB,QACAlX,SACAzT,cACAwjB,eAEA,MACCjsB,KAAMs9C,EACN58C,OAAO,aAAEiZ,IACNuC,EAAO+jB,SAEL,KAAE5I,EAAF,aAAQC,EAAR,eAAsBolB,IAAmB,IAAAxlB,UAAS9D,GAExD,GAAqB,YAAjBkqB,EAA4B,CAI/B,IAD0B,IAAAx2B,yBAAwBrd,GAC3B,CACtB,IAAIiuB,EAAWJ,EACf,GAAIolB,EAAgB,CACnB,MAAMr2B,EAAOq2B,EAAepjB,QAAQ,SACpC5B,GAAW,IAAAwB,iBAAgB7S,IAG5B,IAAAiS,qBAAoB,CACnBjB,OACAC,eACA7uB,cACAwjB,WACAyL,kBAGD,IAAAY,qBAAoB,CACnBjB,OACAC,eACA7uB,cACAwjB,cAGF,IAAA+L,aAAYvvB,OAAawd,QACfq3B,IAAiBzsC,iBAC3Bob,EAASve,eAAamJ,mCACtBoV,EAASve,eAAayJ,kCAAmC,CACxDwC,kBAES2jC,IAAiBxsC,gBAC3B,IAAAwnB,qBAAoB,CACnBjB,OACAC,eACA7uB,cACAwjB,WACAyL,SAAU,CAAExd,IAAK,EAAGqd,KAAM,MAI7B,CAAC7pB,eAAa2J,0BA5FkB,EAAG+b,QAAO3qB,cAAayT,aACvD,MAAM,MAAExb,GAAUwb,EAAO+jB,SACnB,MAAEh7B,GAAUiX,EAAO2Z,KACnBxuB,GAAO,IAAAmF,cAAavH,GACpBohB,GAAO,IAAAoR,uBAAsBxyB,GACnC,IAAI23C,EAAmBv1C,EAAK,GACxBs1C,GAA2B,EAE/B,GAAIj8C,EAEHi8C,GAA2B,EAG3BC,EAAmBv1C,EAAK,GAGxBgf,EAAK6R,UAAU7yB,IAAI,qBACb,CACN,MAAM,iBAAEu3C,IAAqB,IAAA1lB,UAAS9D,GAClCwpB,GAAkBA,EAAiBhzC,QACvCyc,EAAK6R,UAAUxyB,OAAO,kBAGvB,IAAA6C,0BACC,CACC,CAAE,aAAYmE,4CAA2CiwC,EACzD,CAAE,aAAYjwC,oCAAmCkwC,GAElDn0C,IAiED,CAACiF,eAAa0J,mCAAoC,EACjD8E,SACAzT,kBAEA,MAAM,IAAEqtC,GAAQ55B,EAAO+jB,SACvB,IAAA13B,0BACC,CACC,CAAE,aAAYmE,kCAAiCopC,GAEhDrtC,IAGF,CAACiF,eAAamJ,mCAAoC,CACjD8rB,OA7QsB,EAAG1W,WAAUxjB,cAAagB,WACjD,MAAM8zC,GAAgB,IAAA1kB,mBAAkBpvB,GACnC8zC,KAEL,IAAAh1C,0BACC,CACC,CAAE,aAAYmE,wBAAuB6wC,GAEtC90C,GAGDwjB,EAASve,eAAaoJ,2CAoQrBksB,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,MAEtC,CAACv1B,eAAaoJ,yCAnQc,EAAGoF,SAAQkX,QAAO3qB,kBAC9C,MAAM,KAAE4uB,EAAF,aAAQC,IAAiB,IAAAJ,UAAS9D,IAEvC6M,SAAS,MAAEla,EAAQ,IAChB7J,EACEshC,GAAY,IAAApmB,iBAAgB,CAAEC,OAAMC,iBAEpCmmB,EAAYD,GAAaA,EAAUn3B,KACpCo3B,IAELA,EAAUz2B,SAAWjB,GACrB,IAAAxd,0BACC,CACC,CAAE,aAAYmE,gCAAd,KACI4qB,EADJ,CAECjR,KAAMo3B,KAGRh1C,KAkPD,CAACiF,eAAauJ,6BA9OG,EAAGiF,SAAQkX,QAAO3qB,kBACnC,MAAMi1C,GAAa,IAAAxmB,UAAS9D,IACtB,KAAEiE,EAAF,aAAQC,EAAR,eAAsBolB,GAAmBgB,GACzC,IAAE18C,GAAQkb,EAAO+jB,QACjBvI,EAAWA,EAAXA,GAAgBJ,GAEtB,OAAQt2B,GACP,KAAKW,YAAUI,SACf,KAAKJ,YAAUM,WAAY,CAC1B,GACCy6C,GACAj3B,wBAAsBvf,SAASw2C,EAAeh2B,SAE9C,OAED,MAAMi3B,EACL38C,IAAQW,YAAUM,WACfq1B,EAAapd,IAAM,EACnBod,EAAapd,IAAM,EACvB,GAAIyjC,EAAc,GAAKA,EAActmB,EAAKoB,KAAKlzB,OAAS,EAAG,OAE3DmyB,EAASxd,IAAMyjC,EACf,MAED,KAAKh8C,YAAUO,WACf,KAAKP,YAAUK,YAAa,CAC3B,MAAM47C,EACL58C,IAAQW,YAAUK,YACfs1B,EAAaC,KAAO,EACpBD,EAAaC,KAAO,EACxB,GACCqmB,EAAe,GACfA,EAAevmB,EAAKoB,KAAKnB,EAAapd,KAAK6e,MAAMxzB,OAAS,EAE1D,OAEDmyB,EAASH,KAAOqmB,EAChB,MAED,KAAKj8C,YAAUS,QACds1B,EAASxd,IAAM,EACf,MAED,KAAKvY,YAAUU,UACdq1B,EAASxd,IAAMmd,EAAKoB,KAAKlzB,OAAS,EAClC,MAED,KAAK5D,YAAUW,KACdo1B,EAASH,KAAO,EAChB,MAED,KAAK51B,YAAUY,IACdm1B,EAASH,KAAOF,EAAKoB,KAAKnB,EAAapd,KAAK6e,MAAMxzB,OAAS,EAC3D,MAED,QACC,OAIF,MAAMgzB,GAAU,IAAAnB,iBAAgB,CAAEC,OAAMC,aAAcI,IAClDa,EAAQT,WAAUS,EAAQT,SAAS9Q,SAAW,GAElD0Q,EAASrR,KAAOkS,EAAQlS,KACnBiR,EAAajR,OAAMiR,EAAajR,KAAOkS,EAAQlS,OAEpD,IAAAmR,aAAY,CAAEH,OAAMC,eAAcI,WAAUjvB,iBA6K5C,CAACiF,eAAaqJ,mCA1KQ,EAAGqc,QAAO3qB,kBAChC,MAAM,KAAE4uB,EAAF,aAAQC,IAAiB,IAAAJ,UAAS9D,GAClCmE,GAAO,IAAAH,iBAAgB,CAAEC,OAAMC,iBAErC,GAAKC,EAAKY,WAAcZ,EAAKY,UAAU5yB,OAAvC,CAKA,GAFAgyB,EAAKY,UAAU,GAAGvuB,QAEY,IAA1B2tB,EAAKY,UAAU5yB,OAGlB,OAFAgyB,EAAKY,UAAU,GAAGyS,aAClB,IAAA5S,aAAYvvB,EAAa8uB,GAI1BA,EAAKlR,KAAK6R,UAAU7yB,IAAI,UACxBkyB,EAAKY,UAAUhzB,QAAQkhB,IACjBA,EAAKle,WAEHke,EAAKw3B,gBAAgB,YAD3Bx3B,EAAKW,SAAW,KAKlB,IAAAY,mBAAkB,WAAY2P,EAAKlR,KAAM,CACxChB,aAAckS,EAAKY,UAAU,GAC7B7S,YAAaiS,EAAKY,UAAUZ,EAAKY,UAAU5yB,OAAS,MAGrD,IAAAyyB,aAAYvvB,EAAa8uB,KA+IzB,CAAC7pB,eAAasJ,kCA5IO,EAAGoc,QAAO3qB,kBAC/B,MAAM,KAAE4uB,EAAF,aAAQC,IAAiB,IAAAJ,UAAS9D,GAClCmE,GAAO,IAAAH,iBAAgB,CAAEC,OAAMC,iBAEhCC,EAAKY,WAAcZ,EAAKY,UAAU5yB,SAEvCgyB,EAAKlR,KAAK6R,UAAUxyB,OAAO,UAC3B6xB,EAAKY,UAAUhzB,QAAQkhB,GAASA,EAAKW,UAAY,IAEjD,IAAAK,qBAAoB,YAGpBkQ,EAAKlR,KAAKzc,SAEV,IAAAouB,aAAYvvB,OAAawd,KA+HzB,CAACvY,eAAawJ,oCA5HS,EAAGkc,QAAO3qB,cAAawjB,eAC9C,MACCqL,cAAc,KAAEjR,IACb+M,EAAM+D,UAAUzqB,kBACpB,IAAAsrB,aAAYvvB,OAAawd,GACzBgG,EAAS4a,eAAmBj4B,sCAAuC,CAClEyX,UAuHD,CAAC3Y,eAAayJ,mCAAoC,EAAG1N,OAAMyS,aAC1D,MAAM,aAAEvC,GAAiBuC,EAAO+jB,QAC1B6d,EAAcr0C,EAAKtB,WAAW6wB,cAClC,0CACArf,EAAaC,0BACID,EAAaE,YAAc,MAE9CikC,EAAYC,iBACZD,EAAY9kB,cAAc,aAAa4R,SAExC,CAACl9B,eAAa4J,iBAAkB,EAAG8b,QAAO3qB,mBACzC,IAAAwvB,gBAAe7E,EAAO3qB,M,yHC9TxB,OAEiCi2B,EAApBA,kBAAoB,EAChCC,QACAE,mBACAE,eACAC,gBAEA,MAAMgf,EAAuB,CAC5Brf,QACAE,mBACAE,eACAC,aAED,OAAO,4CAA4Bgf,K,cCdpCx+C,EAAOD,QAAU0+C,gD,6BCAjB,Q,6BCAA,W,IACA,M,IACA,Q,IACA,QACA,O,IACA,OACA,S,oDAaA,IAAA3hB,qBAAoB,aAAc,CACjCC,SAAU,CACTzyB,KAAM0yB,WAEPO,eACAN,aAAc,CACbyhB,YAAa,MAEd7qB,WAAY,CACXjb,QAAS,CACRykB,OAAQ,CACP/yB,KAAM,SAEP8yB,QAAS,IAEVp0B,KAAM,CACLq0B,OAAQ,CACP/yB,KAAM,SAEP8yB,QAAS,IAEVlrB,QAAS,CACRmrB,OAAQ,CACP/yB,KAAM,WAGR20B,UAAW,CACV7B,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRjE,aAAc,CACbg3B,OAAQ,CACP/yB,KAAM,QACN2qB,MAAO,CACN3qB,KAAM,SACNgzB,KAAMp7B,0BAGRk7B,QAAS,KAGXzF,UAAW,CAACF,WACZ+F,gCACAzjB,oB,oQChED,SACA,OACA,QAEA,MAOM4kC,EAAaxU,IAClB,MAAM,UAAE7vB,GAAc6vB,EACtB,OACC,yBAAIoS,YAAU,OAAOxvB,SAAS,OAC7B,0BAAKlD,UAAU,wBACd,0BAAKA,UAAU,0BACd,0BAAKA,UAAU,iCACbvP,EAAUd,OAdgBhZ,EAeD8Z,EAAU9Z,KAdrCge,mBAAiB9X,SAASlG,IACtB,+BAAUoK,KAAK,gBAAgBkf,KAAK,OACrC,UAHyBtpB,OAwB3Bo+C,EAAWzU,IAChB,MAAM,UAAE7vB,GAAc6vB,EACtB,OACC,yBACC/f,MAAO,CACN3Q,UAAWa,EAAUb,WAEtBsT,SAAS,OAET,0BAAKlD,UAAU,uBAAsB,IAAAg1B,gBAAe1U,M,UA2CxC,CAACvW,GAASnH,eACxB,MAAQoH,WAAYG,GAAUJ,GACxB,KAAE5qB,EAAF,QAAQ4P,GAAYob,EAGpB9hB,EAAUA,EAAVA,CACLwsB,GAAIigB,EACJ/f,GAAIggB,GACD5qB,EAAM9hB,SAGV,OACC,0BACC8a,MAAA,GACC,cAAc,IACX,IAAA5mB,wBAAuB4tB,EAAM3tB,iBAGjC,0BAAKwjB,UAAU,iBACd,4BACCA,UAAU,YACVgD,KAAK,OACLC,aAAYkH,EAAMiL,WA5DF,EAACrmB,EAAS1G,EAAS4sC,KAEtC,iCACC,6BACElmC,EAAQ5G,IAAIsI,IACZ,IAAIA,EAAUykC,OACd,OAAO,IAAAptC,UAASO,EAAQwsB,GAAjB,KACHogB,EADG,CAENxkC,mBAsDA0kC,CAAapmC,EAAS1G,EAAS,CAC/B8hB,QACAvH,WACAwyB,WAAYrmC,IAjDC,EAAC5P,EAAM4P,EAAS1G,EAASgtC,KAE1C,gCACEl2C,EAAKgJ,IAAI,CAAC+R,EAAO3J,KACjB,6BACExB,EAAQ5G,IAAI,CAACsI,EAAWD,KACxB,IAAIC,EAAUykC,OAEd,OAAO,IAAAptC,UAASO,EAAQ0sB,GAAjB,KACHsgB,EADG,CAENn7B,QACA1J,cACAD,WACAE,oBAsCD6kC,CAAWn2C,EAAM4P,EAAS1G,EAAS,CACnC8hB,QACAJ,QACAnH,WACAwyB,WAAYrmC,S,iHCjHlB,WAEwBjH,EAAXA,SAAW,CAACytC,EAAWjV,EAAU,MAC7C,GAAKiV,EAEL,OAAI,IAAAn6C,YAAWm6C,GAAmBA,EAAUjV,GACrCiV,GAGsBP,EAAjBA,eAAiB1U,IAC7B,MAAM,UAAE7vB,EAAF,MAAayJ,GAAUomB,EAE7B,OAAI7vB,EAAUZ,WAAY,IAAAzU,YAAWqV,EAAUZ,UACvCY,EAAUZ,SAASqK,EAAOzJ,GAE3ByJ,EAAMzJ,EAAU5I,S,gBCdhB,IAAI8U,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA8E,IAKjGqT,KAAK,CAACpT,EAAOC,EAAI,ywOAA8wO,M,sGCLvyO,YACA,OAE8Bu9B,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAa+H,8BAA+B,CAC5CktB,OAAQ,EAAGzmB,SAAQzT,kBAClB,MACCotB,MAAM,SAAEof,IACL/4B,EAEJ,GAAI+4B,GAAYA,IAAa3qB,kBAAiB,CAC7C,MAAMwL,EAAU5Z,EAAO+jB,QAAQvuB,QAAQ,GAAG0nB,eAC1C,IAAA7wB,0BAAyB,CAAE21C,YAAapoB,GAAWrtB,KAGrD4lC,iBAAiB,GAElB,CAAC3gC,eAAa8H,6BAA8B,CAC3CmtB,OAAQ,EAAGzmB,SAAQzT,kBAClB,MACCotB,MAAM,SAAEof,IACL/4B,EAEA+4B,GAAYA,IAAa3qB,oBAC5B,IAAA/hB,0BAAyB,CAAE21C,YAAa,MAAQz1C,IAElD4lC,iBAAiB,GAElB,CAAC3gC,eAAa2c,oBAAqB,EAAG+I,YACrC,MAAM,YAAE8qB,GAAgB9qB,EACpB8qB,GAA4C,mBAAtBA,EAAY5O,OACrC4O,EAAY5O,W,6BC/Bf,W,IACA,M,IACA,Q,IACA,QACA,SACA,Q,oDAEA,IAAAhT,qBAAoB,eAAgB,CACnCC,SAAU,CAAEzyB,KAAM0yB,WAClBC,aAAc,CACboiB,qBAAqB,GAEtBxrB,WAAY,CACXyrB,YAAa,CACZvR,UAAS,WAAEla,IACV,MAAM,wBACL0rB,EADK,sBAELC,GACG3rB,EACJ,OAAQ0rB,GAA2BC,IAGrC7pB,cAAe,CACdyH,QAAS7oB,yBAAuBohB,eAEjCqI,wBAAyB,CACxBZ,QAAS7oB,yBAAuBypB,yBAEjCwhB,sBAAuB,CACtBpiB,QAAS7oB,yBAAuBirC,uBAEjCD,wBAAyB,CACxBniB,QAAS7oB,yBAAuBgrC,yBAEjCjb,oBAAqB,CACpBlH,QAAS7oB,yBAAuB+vB,qBAEjC13B,iBAAkB,CACjBwwB,QAAS7oB,yBAAuB3H,kBAEjCD,MAAO,CACNywB,QAAS7oB,yBAAuB5H,OAEjCsM,kBAAmB,CAClBmkB,QAAS7oB,yBAAuB0E,kBAChCokB,OAAQ,CACP/yB,KAAM,aAITizB,eACAxjB,iBACAyjB,mC,8FCpDD,MACA,MACA,MACA,MACA,MACA,WACA,OACA,OACA,OACA,YACA,QACA,QACA,Q,UA2Ce,CAAC5J,GAAS3qB,cAAawjB,eACrC,MACCkJ,eAAe,MAAEnc,EAAF,UAASkjB,GADnB,sBAEL8iB,EAFK,wBAGLxhB,EAHK,YAILshB,EAJK,kBAKLrmC,GACG2a,EAAMC,YACJ,oBAAEwrB,GAAwBzrB,EAEhC,OAAKoK,GAGJ,0BAAKnU,UAAU,iBACd,0BAAKA,UAAU,uBACd,mBAAC,EAAAF,OAAD,CAAQjf,MAAM,oBACd,yBAAImf,UAAU,gBAAgBrQ,GAtCPP,IACrBA,GAGJ,mBAAC,EAAA6kB,SAAD,MACC,4CACCjU,UAAU,iBACVrQ,OAAO,IAAArY,GAAE,aACTmsB,MAAM,OACNqH,QAAQ,cAET,kCACCziB,SAAS,IAAA/Q,GAAE,gDACXsiC,MAAO,IACPmU,cAAa,EAAGtB,UACfA,EAAImJ,UAAYnJ,EAAIoJ,2BAdO,KAsC3BC,CAAmB1mC,KAErB,0BAAK4Q,UAAU,yBACd,iCACCytB,cAAY,aACZ99B,OAAO,IAAArY,GAAE,cACT2oB,KAAK,KACL6K,QAAQ,YACR1H,WAAU,KACThkB,EAAY,CACXo2C,qBAAqB,QAIxB,iCACC7lC,OAAO,IAAArY,GAAE,WACT2oB,KAAK,KACL6K,QAAQ,YACR2iB,cAAY,UACZrqB,WAAU,KACTR,EAASve,eAAagd,kCAGtBjS,EAcE,MAbH,iCACCq+B,cAAY,OACZ99B,OAAO,IAAArY,GAAE,QACT2oB,KAAK,KACL6K,QAAQ,UACR7N,SAAUw4B,EACVryB,WAAU,KACJqyB,GACJ7yB,EACCmzB,eAAgBnhC,gCAKrB,mCACC6rB,WAAY,CAAE,cAAc,IAAAnpC,GAAE,iBAC9B8zB,OAAO,IAAAwH,gBAAeC,EAAWzjB,GACjCrO,KAAK,qBACLiqB,YAAY,GACZwV,eAAe,GACfvgB,KAAK,KACL6K,QAAQ,WACRkoB,OAAO,OACPloB,QAAQ,cAER,+BACC6X,KAAK,kBACL5hC,KAAK,kBACLkf,KAAK,SA7GmBu1B,IACxBA,GAEE,4CAF0B,KAiH9BQ,CAAsBR,GACLG,GAzGnB,0BAAK31B,UAAU,sBACd,0BAAKA,UAAU,oBACd,iCAAYrQ,OAAO,IAAArY,GAAE,UAAW2oB,KAAK,SALZ,MA2CS,O,8LCjE7B5b,gBACT,Q,6BCDA,W,IACA,M,IACA,Q,IACA,QACA,QACA,SACA,Q,IACA,O,oDAEA,IAAA4uB,qBAAoB,mBAAoB,CACvCC,SAAU,CAAEzyB,KAAM0yB,WAClBC,aAAc,CACb6iB,WAAW,EACXlf,WAAW,EACXmf,SAAS,EACT3kB,cAAc,EACdD,aAAa,EACb6kB,KAAMr+B,OACNs+B,YAAa,eACbC,oBAAqB,GACrBC,gBAAiB,GACjBpoC,OAAQ,IAET8b,WAAY,CACXlnB,MAAO,CACNywB,QAAS7oB,yBAAuB5H,OAEjCgpB,cAAe,CACdyH,QAAS7oB,yBAAuBohB,eAEjC/oB,iBAAkB,CACjBwwB,QAAS7oB,yBAAuB3H,kBAEjCqM,kBAAmB,CAClBmkB,QAAS7oB,yBAAuB0E,kBAChCokB,OAAQ,CACP/yB,KAAM,aAITizB,eACAxjB,iBACA4d,UAAW,CAAC5f,WACZylB,mC,8FC1CD,MACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,WACA,QAOA,QACA,OACA,OAEA,MA+GM4iB,EAAiBC,IAErB,kCAAax2B,UAAU,kBACtB,wCACCjf,KAAK,sBACL4hC,KAAK,UACLiL,cAAa,CACZ,cAAc,IAAAt2C,GAAE,qBAEjB2oB,KAAK,KACL6K,QAAQ,WACRuZ,gBAAA,KAED,4CAAuB1B,KAAK,YAC3B,0BAAKpiB,MAAO,CAAEk2B,QAAS,YAAcD,KA+EnCE,EAAoB,EAAG3sB,QAAOnH,WAAUxjB,kBAC7C,MAAM,YACLg3C,EADK,oBAELC,EACAC,iBAAiB,YAAEK,GACnB3sB,YAAY,kBAAE5a,IACX2a,GACE,mBAAE6sB,GAAuBD,EAE/B,MAAoB,iBAAhBP,EAAuC,MAG1C,0BAAKp2B,UAAU,iBACd,0BAAKA,UAAU,+BACd,gCACCA,UAAU,eACVrpB,KAAK,QACLgZ,OAAO,IAAArY,GAAE,eACT+0C,cAAe31B,yBAAuB/G,MACtCtY,MAAOs/C,EAAYhnC,MACnB+wB,oBAAmB,CAAEmL,SAAU,eAC/B5uB,SAAU7N,EACVs0B,UAAA,KAED,gCACC1jB,UAAU,eACVrpB,KAAK,OACLgZ,OAAO,IAAArY,GAAE,cACT+0C,cAAe31B,yBAAuB/f,KACtCU,MAAOs/C,EAAYhgD,KACnB+pC,oBAAmB,CAAEmL,SAAU,eAC/BgL,gBAAc,OACd55B,UAAA,KAGD05B,EAAYG,qBACZ,0BAAK92B,UAAU,aACd,gCACCA,UAAU,eACVrpB,KAAK,cACLgZ,OAAO,IAAArY,GAAE,iBACT+0C,cAAe31B,yBAAuBG,YACtCxf,MAAOs/C,EAAYG,oBACnBpW,oBAAmB,CAAEmL,SAAU,eAC/BgL,gBAAc,OACd55B,UAAA,IAEA,wCACClc,KAAK,0BACLkf,KAAK,KACLsgB,aAAa,EACbzd,MAAM,EACNgI,QAAQ,WACR6X,KAAK,MACLnC,gBAAgB,IAAAlpC,GAAE,wBAClBmpC,WAAY,CACX,cAAc,IAAAnpC,GAAE,yBAEjBopC,oBAAmB,CAClB1I,OAAQ9zB,+BAKT,MACJ,2CACC8b,UAAU,mBACV+2B,SAAS,0BAET,sCACC/2B,UAAU,eACVrQ,OAAO,IAAArY,GAAE,YACT0/C,UACCJ,EACG,qBACA,sBAEJ9rB,QAAQ,YACR7K,KAAK,KACLwgB,WAAY,CAAE,cAAc,IAAAnpC,GAAE,qBAC9B8rB,WAAU,KACThkB,EAAY,CACXpB,KACC,iDACD3G,OAAQu/C,EACRt3C,UAAW,QAEZsjB,EAASve,eAAakU,sCAIzB,mCACCxc,GAAG,wBACHk7C,SAAUL,IAEV,0BAAK52B,UAAU,2BACd,0BAAKA,UAAU,+BACd,mCACCrpB,KAAK,gBACLgZ,OAAO,IAAArY,GAAE,mBACTkzB,QAASmsB,EAAYhgC,cACrB+pB,oBAAmB,CAAEmL,SAAU,eAC/B5uB,SAAU7N,IAEVmnC,EAAe7/B,yBAAuBC,kBAGzC,0BAAKqJ,UAAU,2BACd,0BAAKA,UAAU,+BACd,mCACCrpB,KAAK,cACLgZ,OAAO,IAAArY,GAAE,qBACTkzB,QAASmsB,EAAY//B,YACrB8pB,oBAAmB,CAAEmL,SAAU,eAC/B5uB,SAAU7N,IAEVmnC,EAAe7/B,yBAAuBE,cA7Lb+/B,KAC/B,MAAM,YAAE//B,GAAgB+/B,EACxB,OAAK//B,GAGJ,0BAAKoJ,UAAU,iBACd,8CACCoL,MAAO,CACN,CACCzb,OAAO,IAAArY,GAAE,yBACTD,MAAO,CACNoJ,KAAM,SACNpJ,MAAOs/C,EAAY7lB,uBAItBomB,MAAM,gBAdgB,MA6LpBC,CAAwBR,IAzKC,EAC9BA,EACAN,EACAjnC,KAEA,MAAM,YAAEwH,GAAgB+/B,EACxB,OAAK//B,GAGJ,mBAAC,EAAAqd,SAAD,MACC,0BAAKjU,UAAU,+BACd,gCACCA,UAAU,eACVrpB,KAAK,SACLgZ,OAAO,IAAArY,GAAE,UACTk0B,UAAWhU,oBACX60B,cAAe31B,yBAAuBI,OACtCzf,MAAOs/C,EAAY7/B,OACnB4pB,oBAAmB,CAAEmL,SAAU,eAC/BnI,UAAA,EACAzY,SAAU0rB,EAAY7/B,OACtBmG,SAAU7N,KAEX,gCACC4Q,UAAU,eACVrpB,KAAK,SACL60B,UAAW9T,yBACX/H,OAAO,IAAArY,GAAE,mBACT+yB,SAAUgsB,EAAA,OACVhK,cAAe31B,yBAAuBK,OACtC1f,OAAO,IAAAyF,wBAAuB65C,EAAY5/B,QAC1C2pB,oBAAmB,CAAEmL,SAAU,eAC/BnI,UAAA,EACAzmB,SAAU7N,KAEX,gCACC4Q,UAAU,eACVvf,KAAK,SACL9J,KAAK,iBACLygD,IAAK3/B,6BACL9H,OAAO,IAAArY,GAAE,oBACT+0C,cAAe31B,yBAAuBM,eACtC3f,MAAOs/C,EAAY3/B,eACnB0pB,oBAAmB,CAAEmL,SAAU,eAC/B5uB,SAAU7N,MAtCW,MAqKrBioC,CACAV,EACAN,EACAjnC,MAOCkoC,EAAkB,EAAGvtB,QAAOnH,WAAUxjB,kBAC3C,MAAM,KAAE+2C,EAAF,YAAQC,EAAR,UAAqBrf,GAAchN,GACnC,OAAE7b,GAAW6b,EAAMC,WAEzB,OAAI+M,GAjVJ,iCAAYpnB,MAAM,aAAasQ,KAAK,QAmVnC,0BAAKD,UAAU,oBACb9R,EAAOhS,QACP,qCAAgB23B,aAAA,EAAYzI,MAAOld,IAChC,MACJ,+BACCkd,MAAOt0B,OAAO+E,KAAKs6C,GAAMhuC,IAAIovC,GACrBpB,EAAKoB,OAGd,0BAAKv3B,UAAU,eACb02B,EAAkB,CAAE3sB,QAAOnH,WAAUxjB,gBA1VrB,GAAG2qB,QAAOqsB,kBAC9B,MACCE,iBAAiB,WAAEkB,GACnBxtB,YAAY,kBAAE5a,IACX2a,EACJ,MAAoB,WAAhBqsB,EAAiC,MAGpC,0BAAKp2B,UAAU,gBACd,0BAAKA,UAAU,0BACd,iCACC6f,OAAO,OACP5iB,SAAU7N,EACVi9B,cAAe31B,yBAAuBO,gBACtCmU,MAAO,CACN,CAAErvB,GAAI,SAAU4T,OAAO,IAAArY,GAAE,2BACzB,CACCyE,GAAI,kBACJ4T,OAAO,IAAArY,GAAE,iCAGXqY,OAAO,IAAArY,GAAE,mBACTX,KAAK,SACL0zB,SAAU,GACViB,aAAcksB,EAAWvgC,gBACzBtgB,KAAK,kBACL+pC,oBAAmB,CAClBmL,SAAU,aACVl1C,KAAM,sBAGR,0BAAKqpB,UAAU,gCACd,0BAAKA,UAAU,qCACd,6CACCrQ,OAAO,IAAArY,GAAE,iCAETi/C,EAAe7/B,yBAAuBU,kBAExC,0BAAK4I,UAAU,0BACd,0BAAKA,UAAU,mBACd,6CAAwBrQ,OAAO,IAAArY,GAAE,WACjC,mCACCX,KAAK,cACL6zB,QAASgtB,EAAW5lB,YACpB3U,UAAU,IAAAwU,yBACTriB,EACAooC,EAAWvgC,gBACX,cACAugC,EAAW5lB,aAEZ8O,oBAAmB,CAAEmL,SAAU,cAC/BpL,WAAY,CAAE,cAAc,IAAAnpC,GAAE,aAGhC,0BAAK0oB,UAAU,mBACd,6CAAwBrQ,OAAO,IAAArY,GAAE,aACjC,mCACCX,KAAK,gBACL6zB,QAASgtB,EAAWC,cACpBx6B,UAAU,IAAAwU,yBACTriB,EACAooC,EAAWvgC,gBACX,gBACAugC,EAAW5lB,aAEZ8O,oBAAmB,CAAEmL,SAAU,cAC/BpL,WAAY,CAAE,cAAc,IAAAnpC,GAAE,eAGhC,0BAAK0oB,UAAU,mBACd,6CAAwBrQ,OAAO,IAAArY,GAAE,aACjC,mCACCX,KAAK,gBACL6zB,QAASgtB,EAAWE,cACpBz6B,UAAU,IAAAwU,yBACTriB,EACAooC,EAAWvgC,gBACX,gBACAugC,EAAW5lB,aAEZ8O,oBAAmB,CAAEmL,SAAU,cAC/BpL,WAAY,CAAE,cAAc,IAAAnpC,GAAE,eAGhC,0BAAK0oB,UAAU,mBACd,6CAAwBrQ,OAAO,IAAArY,GAAE,aACjC,mCACCX,KAAK,gBACL6zB,QAASgtB,EAAWG,cACpB16B,UAAU,IAAAwU,yBACTriB,EACAooC,EAAWvgC,gBACX,gBACAugC,EAAW5lB,aAEZ8O,oBAAmB,CAAEmL,SAAU,cAC/BpL,WAAY,CAAE,cAAc,IAAAnpC,GAAE,kBAMnC,0BAAK0oB,UAAU,+BAqPb43B,CAAa,CAAE7tB,QAAOqsB,mB,UAMZ,CAACrsB,GAASnH,WAAUxjB,kBAClC,MAAM,UACL62C,EADK,aAEL1kB,EAFK,YAGLD,EACAtH,YAAY,kBAAE5a,IACX2a,EAEJ,OACC,0BAAK/J,UAAU,qBACd,gCACCoiB,OAAQ6T,EACR9T,iBAAA,EACAliB,KAAK,KACLykB,gBAAc,IAAAptC,GAAE,oBAChBugD,iBACCzoC,EACG,IACA,IAAAiiB,uBAAsBC,EAAaC,IAGtC+lB,EAAgB,CAAEvtB,QAAOnH,WAAUxjB,oB,cCnZxCjJ,EAAOD,QAAU4hD,kC,cCAjB3hD,EAAOD,QAAU6hD,sC,gBCCT,IAAIp7B,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,u1CAA01C,M,odCLn3C,QACA,OACA,OACA,Q,oCACA,QAOA,QAWA,QACA,QACA,OACA,OACA,OACA,OAEA,MAAM,oBAAE6uC,GAAwBE,cAyB1B6S,EAA6B,EAAGnlC,SAAQ+P,WAAUxjB,kBACvD,MAAM,KAAEzI,EAAF,SAAQk1C,GAAah5B,EAAO+jB,QAClC,IAAI,MAAEv/B,GAAUwb,EAAO+jB,QAGvBv/B,EAAyB,iBAAVA,EAAqBA,EAAM21C,OAAS31C,EAE9CugB,mBAAiB/a,SAASlG,IAO9B,IAAAq6B,0BAAyB35B,EAAO+H,GANhCA,EAAY,CACXpB,KAAO,mBAAkB6tC,KAAYl1C,IACrCU,QACAiI,UAAW,SAOb,IAAAyxB,0BAAyB,CAAEp6B,OAAMU,QAAOurB,aAEpC/K,oBAAkBhb,SAASlG,IAC9BisB,EAASve,eAAakU,kCA4BX0/B,EAAoBA,EAApBA,mBAAoB,IAAA/hB,kBAAiB1f,eAAc,CAC/D2f,WAAY,CAAC,SACbC,YAAa,CAAC,6BACdplB,OAAO,EACPqlB,gBAAiBhyB,eAAawU,gCAC9Byd,kBAAmBjyB,eAAayU,kCAChCyd,gBAAiBlyB,eAAa0U,iCAGlBm/B,EAAkBA,EAAlBA,gBAAkB,EAAG94C,kBACjCA,EAAY,CACX23B,WAAW,KAIAohB,EAAoBA,EAApBA,kBAAoB,EAChCtlC,SACAzT,cACA4qB,aACApH,eAEA,MACCgU,SAAS,OAAEja,IACR9J,GACE,KAAElc,EAAF,MAAQgZ,GAAUqa,EAAW8B,cAgBnC1sB,EAAY,CACX23B,WAAW,EACXzF,aAAa,EACbglB,gBAAiB,CAAEK,YAlBAA,EAAdA,GACFh6B,EAAOg6B,YADL,CAELhgD,OACAgZ,QACAinC,oBAAoB,IAcYY,WAZdA,EAAbA,GACF76B,EAAOy7B,eADL,CAELxmB,YAAahpB,KAAK6hB,MAAM9N,EAAOy7B,eAAexmB,aAC9C6lB,cAAe7uC,KAAK6hB,MAAM9N,EAAOy7B,eAAeX,eAChDC,cAAe9uC,KAAK6hB,MAAM9N,EAAOy7B,eAAeV,eAChDC,cAAe/uC,KAAK6hB,MAAM9N,EAAOy7B,eAAeT,eAChDU,UAAWzvC,KAAK6hB,MAAM9N,EAAOy7B,eAAeC,gBAQ7Cz1B,EAASve,eAAaiU,4CAGVggC,EAAiBA,EAAjBA,eAAiB,EAAG11B,WAAUxjB,cAAayT,aACvD,MACC+jB,SACCz3B,MAAM,MAAE68B,KAENnpB,EACJzT,EAAY,CACX23B,WAAW,EACXkf,WAAW,IAEZrzB,EAASve,eAAa+T,iCAElB,IAAA9c,UAAS0gC,IACZpZ,EAASqZ,eAAmB7hB,sBAAuB,CAClDlM,OAAQ,CACP,CACC7F,QAAU,GAAE2zB,EAAM1B,YAAY0B,EAAME,SACpChkB,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,UA4KVw+C,EAAqBA,EAArBA,oBAAqB,IAAAriB,kBAAiBzf,iBAAgB,CAClEgS,OAAQ,OACR2N,YAAa,CAAC,6BACdC,gBAAiBhyB,eAAa6U,iCAC9Bod,kBAAmBjyB,eAAa8U,mCAChCod,gBAAiBlyB,eAAa+U,gCAC9BpI,OAAO,IAGKwnC,EAAmBA,EAAnBA,iBAAmB,EAAGp5C,kBAClCA,EAAY,CACXmyB,cAAc,KAIHknB,EAAqBA,EAArBA,mBAAqB,EACjC1uB,QACAC,aACApH,WACAxjB,kBAEA,MAAM,MAAEuQ,GAAUoa,EAAMusB,gBAAgBK,aAClC,iBAAE5zC,GAAqBinB,EAE7B5qB,EAAY,CACXmyB,cAAc,EACd0kB,WAAW,IAEZrzB,EAASob,eAAiBnd,8CAA+C,CACxElR,UAEDiT,EAASve,eAAa+T,gCACtBwK,EAASqZ,eAAmB7hB,sBAAuB,CAClDlM,OAAQ,CACP,CACC7F,SAAS,IAAA/Q,GAAE,sCACX4gB,OAAQ,OACRnX,KAAM,0BAKT6hB,EAASqZ,eAAmB1hB,oCAAqC,CAChEmf,0BAA2B32B,KAIhB21C,EAAkBA,EAAlBA,gBAAkB,EAAG91B,WAAUxjB,cAAa4qB,iBACxD,MAAM,iBAAEjnB,GAAqBinB,EAC7B5qB,EAAY,CACX82C,SAAS,EACT3kB,cAAc,IAGf3O,EAASqZ,eAAmB7hB,sBAAuB,CAClDlM,OAAQ,CACP,CACC7F,SAAS,IAAA/Q,GAAE,0CACX4gB,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,SAKrB6oB,EAASqZ,eAAmB1hB,oCAAqC,CAChEmf,0BAA2B32B,KAIhB41C,EAAwBA,EAAxBA,sBAAwBhiB,IACpC,MAAM,OAAE9jB,EAAF,SAAU+P,EAAV,MAAoBmH,EAApB,WAA2BC,GAAe2M,GAE/C2f,iBACCK,aAAa,qBAAEiC,EAAF,oBAAwB9B,KAEnC/sB,GACE,iBAAEhnB,GAAqBinB,GAE5B4M,SAAS,OAAEoB,IACRnlB,EACAmlB,IAAW9zB,2BACd0e,EAASqvB,eAAwBnsC,qBAAsB,CACtDhD,MAAO81C,EACPre,MAAOuc,EACP/zC,sBAIU81C,EAAkBA,EAAlBA,gBAAkBliB,IAC9B,MAAM,OAAE9jB,EAAF,YAAUzT,GAAgBu3B,GAE/BC,SAAS,MAAEv/B,EAAF,SAASw0C,EAAT,KAAmBl1C,IACzBkc,EAEY,cAAZg5B,IACHzsC,EAAY,CACXpB,KAAO,mBAAkB6tC,KAAYl1C,IACrCU,QACAiI,UAAW,QAEC,mBAATjI,GACH,IAAAw6B,0BAAyBzyB,IAEzB,IAAA0yB,yBAAwB1yB,KAKGu0B,EAAjBA,eAAiB,CAC7B,CAACsR,GAnawB,EAAGjb,aAAYpH,eACxC,MAAM,MAAE9f,EAAF,iBAASC,GAAqBinB,EACpCpH,EAASve,eAAauU,kCAAmC,CACxD9V,QACA42B,0BAA2B32B,KAga5B,CAACsB,eAAauU,mCAAoCq/B,EAClD,CAAC5zC,eAAawU,iCAAkCq/B,EAChD,CAAC7zC,eAAayU,mCAAoCq/B,EAClD,CAAC9zC,eAAa0U,gCAAiCu/B,EAE/C,CAACj0C,eAAamU,sBAAuB,CACpC8gB,OAtNuB,EAAG1W,WAAUxjB,kBACrCA,EAAY,CAAE62C,WAAW,IACzBrzB,EAASve,eAAa+T,iCAqNrB4sB,iBAAiB,GAElB,CAAC3gC,eAAaoU,6BAA8B,CAC3C6gB,OAtasB,EACvBvP,QACAlX,QACC+jB,SAAWv/B,UAEZ+H,kBAEA,MAAM,KAAE+2C,GAASpsB,EAGjB3qB,EAAY,CACXg3C,YAHmBD,EAAK9+C,GAAO0E,MA+Z/BipC,iBAAiB,GAElB,CAAC3gC,eAAa2R,sBAAuB,CACpCsjB,OAAQ0e,EACRhT,iBAAiB,GAElB,CAAC3gC,eAAa4R,wBAAyB,CACtCqjB,OAnP0B,EAAGzmB,SAAQzT,kBACtC,MAAQ/H,MAAO4zB,EAAT,KAAkBt0B,EAAlB,WAAwBk2C,EAAxB,SAAoChB,GAAah5B,EAAO+jB,QACzD3L,IAGL7rB,EAAY,CACXpB,KAAO,mBAAkB6tC,KAAYl1C,IACrCU,MAAOw1C,EACPvtC,UAAW,QAIZF,EAAY,CACXkyB,aAAa,MAuOb0T,iBAAiB,GAElB,CAAC3gC,eAAaqU,2BAA4B,CACzC4gB,OAAQ0e,EACRhT,iBAAiB,GAElB,CAAC3gC,eAAaqC,4BAA6B,CAC1C4yB,OAAQqf,EACR3T,iBAAiB,GAElB,CAAC3gC,eAAasU,8BAA+B,CAC5C2gB,OAAQuf,EACR7T,iBAAiB,GAGlB,CAAC3gC,eAAa2U,oCA7OY,EAAG4J,WAAUmH,QAAOC,iBAC9C,MAAM,MACLra,EADK,cAELgH,EAFK,iBAGLmiC,EAHK,OAILhiC,EAJK,eAKLE,EALK,OAMLD,EANK,YAOLH,GACGmT,EAAMusB,gBAAgBK,aACpB,gBACL1/B,EADK,YAEL2a,EAFK,cAGL6lB,EAHK,cAILC,EAJK,cAKLC,EALK,UAMLU,GACGtuB,EAAMusB,gBAAgBkB,YACpB,MACL10C,EADK,iBAELC,EACA+oB,eAAiBn1B,KAAMg0B,IACpBX,EAEJ,IAAI+uB,EAAgB,CACnB,CACCh9C,GAAIiH,UAAKC,KACTwlB,OAAQ,MACR4e,QAAS,GACT2R,0BAA0B,EAC1B/yB,IAAM,gCAA+BnjB,+BAAmCC,IACxEtD,KAAMmJ,KAAKC,UAAU,CACpB8G,QACAgH,gBACAqB,OAAQf,EACR2a,cACA6lB,gBACAC,gBACAC,gBACAU,gBAKCY,EAAe,CAClBl9C,GAAIiH,UAAKC,KACTokC,QAAS,GACT5e,OAAQ,MACRxC,IAAM,6BAA4B6yB,+BAA8C/1C,IAChFtD,KAAMmJ,KAAKC,UAAU,CACpBiO,SACAE,iBACAD,YAIEH,GACEkiC,IAEJG,EAAaxwB,OAAS,OACtBwwB,EAAahzB,IAAO,uDAAsDljB,EAC1Ek2C,EAAax5C,KAAOmJ,KAAKC,UAAU,CAClCiO,SACAE,iBACAD,SACA80B,SAAUlhB,KAGZouB,EAAcxvC,KAAK0vC,IACTH,IAEVG,EAAaxwB,OAAS,MACtBwwB,EAAax5C,KAAOmJ,KAAKC,UAAU,CAAEiO,OAAQ,KAC7CiiC,EAAcxvC,KAAK0vC,IAIpBr2B,EACCqZ,eAAmB1hB,oCACnB,CAAEmf,0BAA2B32B,GAC7B,CAAEulC,UAAU,IAGb1lB,EAASve,eAAa4U,mCAAoC,CACzD9Z,KAAM,CACL+5C,iBAAkBl2C,UAAKC,KACvBk2C,eAAe,EACfJ,iBAEDrf,0BAA2B32B,KAqJ5B,CAACsB,eAAa4U,oCAAqCs/B,EACnD,CAACl0C,eAAa6U,kCAAmCs/B,EACjD,CAACn0C,eAAa8U,oCAAqCs/B,EACnD,CAACp0C,eAAa+U,iCAAkCs/B,EAEhD,CAACr0C,eAAagU,4CA5Te,EAAG0R,QAAO3qB,kBACvC,MACCk3C,iBACCK,aAAa,MAAEhnC,KAEboa,EACE4G,GAAqB,IAAAF,uBAAsB9gB,GAEjDvQ,EAAY,CACXk3C,qBACIvsB,EAAMusB,gBADV,CAECK,iBACI5sB,EAAMusB,gBAAgBK,YACtBhmB,KAGL0lB,yBACItsB,EAAMssB,oBADV,CAECt/B,OAAQ,QA2SV,CAAC1S,eAAaiU,2CAtSc,EAAGyR,QAAO3qB,kBACtC,MACCk3C,iBACCK,aAAa,OAAE7/B,EAAF,OAAUC,EAAV,eAAkBC,KAE7B+S,EAGJ,KACE,IAAAkH,wBAAuBna,MACvB,IAAAoa,yBAAwBna,MACxB,IAAAqa,4BAA2Bpa,GAE5B,OAAO,EAQR5X,EAAY,CACXpB,KAAO,kDACP3G,OARyB,IAAA84B,sBAAqB,CAC9CrZ,SACAC,SACAC,mBAMA1X,UAAW,SA+QZ,CAAC+E,eAAakU,iCA/ZM,EAAGwR,QAAO3qB,kBAC9B,IAAIkyB,GAAc,EAGlB,MACCglB,iBACCK,aAAa,MAAEhnC,EAAF,OAASmH,EAAT,OAAiBC,EAAjB,eAAyBC,EAAzB,YAAyCJ,KAEpDmT,GAGF,IAAAkH,wBAAuBthB,MACvBiH,IACE,IAAAqa,wBAAuBna,KACvB,IAAAoa,yBAAwBna,EAAQ3X,KAChC,IAAAgyB,4BAA2Bpa,MAE9Bsa,GAAc,GAGflyB,EAAY,CACXkyB,mB,6BCnGF,Q,6BCAA,W,IACA,M,IACA,Q,IACA,QACA,SACA,Q,oDAEA,IAAA2B,qBAAoB,uBAAwB,CAC3CC,SAAU,CAAEzyB,KAAM0yB,WAClBC,aAAc,CACbgmB,YAAY,EACZC,UAAW,IAEZrvB,WAAY,CACXwO,QAAS,CAAEjF,SAAS,GACpB+lB,SAAU,CAAE/lB,SAAS,GACrB58B,KAAM,CACL48B,QAAS,GACTC,OAAQ,CACP/yB,KAAM,WAGRkqB,UAAW,CAAE4I,QAAS,IACtBzwB,MAAO,CAAEywB,QAAS,IAClBxwB,iBAAkB,CAAEwwB,QAAS7oB,yBAAuB3H,kBACpD4O,cAAe,CAAE4hB,QAAS7oB,yBAAuBohB,eACjD2M,0BAA2B,CAAElF,SAAS,GACtCgmB,gBAAiB,CAChBhmB,QAAS,QAEVkL,UAAW,CAAElL,SAAS,GACtBmF,sBAAuB,CAAEnF,SAAS,GAClC/G,KAAM,CACLgH,OAAQ,CACP/yB,KAAM,SACNupB,WAAY,CACXqO,gBAAiB,CAAE9E,QAAS,IAC5B7hB,YAAa,CAAE6hB,QAAS,IACxB5f,YAAa,CAAE4f,QAAS,IACxB/f,UAAW,CAAE+f,QAAS,IACtB+E,oBAAqB,CAAE/E,SAAS,OAKpCG,eACAxjB,iBACAyjB,mC,8FC/CD,MACA,MACA,OACA,WACA,S,UAgFe5J,IACd,MAAM,WAAEqvB,EAAF,UAAcC,GAActvB,GAC5B,QACLyO,EADK,UAELiG,EAFK,sBAGL/F,EAHK,KAIL/hC,EAJK,0BAKL8hC,EALK,SAML6gB,GACGvvB,EAAMC,WACJwvB,EAA6C,WAA5BH,EAAUxoB,cAC3B4oB,EAA8Bhb,GAAa/F,EAEjD,OACC,gCACC0J,QAAA,EACAD,iBAAA,EACAliB,KAAK,KACLy5B,aAAa,IAAAC,qBACZF,EACAjhB,EACA8gB,EACAF,GAEDQ,eAAe,IAAAvoB,uBACdooB,EACAhhB,EACA+gB,EACAJ,EACAE,GAED5Y,oBAAmB,CAAElI,UAAS8gB,aA7GV,EACtBG,EACAjhB,EACA7hC,EACA8hC,EACA6gB,EACAF,KAEA,IAAIS,EAAc,GAwBlB,OAvBKrhB,GAAY8gB,IAChBO,EAAcljD,GACX,IAAAW,GACA,8GACAX,IAEA,IAAAW,GACA,wGAIAmiD,EACHI,GAAc,IAAAviD,GAAE,+CAAgDX,GACxD6hC,EACRqhB,GAAc,IAAAviD,GACb,kHACAX,GAEO2iD,IACRO,GAAc,IAAAviD,GACb,8DACAX,IAEE2iD,GAAYF,GAEd,uCACCU,SAAS,UACT75B,KAAK,KACLwgB,WAAY,CACXsZ,YAAa,CACZ,cAAc,IAAAziD,GAAE,kCAOpB,0BAAK0oB,UAAU,gBACb65B,GACCJ,GAA+BhhB,GAC9B,IAAAnhC,GAAE,uBAAwB,UAC1B,OA6DF0iD,CACAP,EACAjhB,EACA7hC,EACA8hC,EACA6gB,EACAF,GA9DgC,EACnCK,EACAhhB,EACA4gB,EACA7gB,EACA8gB,EACAF,IAEIK,IAAgChhB,GAChC6gB,GAAYF,EADsD,MAGrE,0BAAKp5B,UAAU,eACd,gCACCvf,KAAK,OACL9J,KAAK,YACLq0B,YAAa,SACb3zB,MAAOgiD,EACPnuB,WAAA,KA+CA+uB,CACAR,EACAhhB,EACA4gB,EACA7gB,EACA8gB,EACAF,M,cCnIJjjD,EAAOD,QAAUgkD,0C,mICAjB,WACA,QACA,OAEqC7oB,EAAxBA,sBAAwB,CACpCooB,EACAhhB,EACA+gB,EACAJ,EACAE,IAEIA,GAAYF,EAAmB,KAC/BK,EACI,CACN,CACC19C,GAAI,UACJkkB,KAAM,KACNtQ,OAAO,IAAArY,GAAE,QACTwzB,QAAS,UACT0G,gBAAiBntB,eAAa8tB,kCAI1B,CACN,CACCp2B,GAAI,UACJkkB,KAAM,KACN6K,QAAS,mBACTnb,OAAO,IAAArY,GAAE,UACT2lB,SACEwb,IAA8B+gB,GAAmBJ,EACnD5nB,gBAAiBntB,eAAa0tB,kCAE/B,CACCh2B,GAAI,YACJkkB,KAAM,KACN6K,QAAS,WACTnb,OAAO,IAAArY,GAAE,UACTk6B,gBAAiBqF,eAAgBjtB,4BAKD+vC,EAAtBA,oBAAsB,CAClCF,EACAjhB,EACA8gB,EACAF,IAEIK,GACI,IAAAniD,GAAE,+BACCkhC,GACH,IAAAlhC,GAAE,+CACCgiD,GAAYF,GACf,IAAA9hD,GAAE,6BACCgiD,GACH,IAAAhiD,GAAE,iDAEH,IAAAA,GAAE,gD,gBCzDF,IAAIqlB,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,uQAA0Q,M,sGCLnS,YACA,QACA,OACA,QAIA,OACA,QACA,OACA,OACA,OAEA,MAsEM+jD,GAAsB,IAAAjkB,kBAC3B,mCACA,CACCzN,OAAQ,SACR0N,WAAY,CAAC,YAAa,SAC1BC,YAAa,CAAC,6BACdE,kBAAmBjyB,eAAa4tB,iCAChCsE,gBAAiBlyB,eAAa6tB,8BAC9BlhB,OAAO,IA+FHopC,GAAuB,IAAAlkB,kBAC5B,kCACA,CACCzN,OAAQ,MACR0N,WAAY,CAAC,mBACbC,YAAa,CACZ,4BACA,gBACA,iBAEDE,kBAAmBjyB,eAAaiuB,iCAChCiE,gBACClyB,eAAaguB,+CACdrhB,OAAO,IA+CHqpC,GAAyB,IAAAnkB,kBAC9B,kDACA,CACCzN,OAAQ,OACR0N,WAAY,CAAC,SACbC,YAAa,CAAC,6BACdE,kBAAmBjyB,eAAaouB,yBAChC8D,gBAAiBlyB,eAAaquB,sBAC9B1hB,OAAO,IAkDqB2iB,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAa2R,sBApSS,EAAGnD,SAAQzT,kBAClCyT,EAAOmyB,kBAEP,MAAM,MAAE3tC,GAAUwb,EAAO+jB,QACzBx3B,EAAY,CACXi6C,UAAWhiD,KAgSZ,CAACgN,eAAawF,uBAAwB,EACrCgJ,SACAmX,aACApH,eAEA/P,EAAOmyB,kBACP,MAAM,UAAEvG,EAAF,WAAa2a,EAAb,SAAyBE,GAAatvB,EAEtCsvB,GAAYF,IACjBx2B,EAASiU,eAAgBjtB,2BAErB60B,IAAW,IAAIthC,sBAAqBQ,oBAG1C,CAAC0G,eAAa0tB,kCA1SS4E,IACvB,MAAM,WAAE3M,EAAF,YAAc5qB,EAAd,SAA2BwjB,GAAa+T,GACxC,UACLhM,EADK,iBAEL5nB,EAFK,QAGLy1B,EAHK,MAIL11B,EAJK,SAKLw2C,EACA3nC,eAAe,KAAEhb,IACdqzB,EAEJ,GAAIwO,EAEHp5B,EAAY,CAAEg6C,YAAY,IAC1Bx2B,EAASve,eAAa2tB,iCAAkC,CACvDlvB,QACA6nB,YACA+O,0BAA2B32B,SAEtB,GAAIu2C,EAEVl6C,EAAY,CAAEg6C,YAAY,IAC1Bx2B,EAASve,eAAamuB,yBAA0B,CAC/CviB,MAAOtZ,EACP+iC,0BAA2B32B,QAEtB,CAEN,MAAM,KAAEypB,GAASxC,GACX,gBACLqO,EADK,YAEL1kB,EAFK,UAGLH,EAHK,oBAIL8kB,GACG9L,EAEJptB,EAAY,CAAEg6C,YAAY,KACtB,IAAA12C,iBAAgBiR,GAEnBiP,EAASve,eAAa4tB,kCAGjBqG,EAQJ1V,EAASve,eAAa+tB,wCAAyC,CAC9DiG,kBACAqB,0BAA2B32B,EAC3Bu3C,cAAkB9mC,EAAF,aAChB+mC,eAAe,IAVhB33B,EAASve,eAAa2tB,iCAAkC,CACvDlvB,MAAO6Q,EACPgX,YACA+O,0BAA2B32B,MA4P/B,CAACsB,eAAa2tB,kCAAmCmoB,EACjD,CAAC91C,eAAa4tB,kCAnOgB,EAC9BjI,aACApH,WACAxjB,cACAwR,uBAEA,MAAM,gBACL2oC,EADK,sBAEL7gB,EAFK,QAGLF,EAHK,KAIL7hC,GACGqzB,EAQJ,GANA5qB,EAAY,CAAEg6C,YAAY,IAC1BxoC,EAAiB,CAAE6tB,WAAW,IAEzB/F,GACJ9V,EAASiU,eAAgBjtB,4BAErB4uB,EAAS,CACb,MACChM,MAAM,YAAE7Y,IACLqW,EAUJ,GARApH,EAAS43B,eAAgB90C,kCAAmC,CAC3DiO,gBAEDiP,EAAS63B,eAAgB1mC,sCAAuC,CAC/DlB,OAAQE,sBAAoBG,iBAC5BS,kBAGI,IAAAjR,iBAAgBiR,GAAc,CAClC,MAAMtL,EAAU1R,GACb,IAAAW,GACA,iEACAX,IAEA,IAAAW,GAAE,2DAELsrB,EAAS83B,eAActgC,sBAAuB,CAC7ClM,OAAQ,CACP,CACC7F,UACA6P,OAAQle,aAAWF,OACnBiH,KAAM/G,aAAWD,SAKpB6oB,EAAS43B,eAAgB50C,eAG3B2zC,KA+KA,CAACl1C,eAAa6tB,+BA5Ka,EAC3BlI,YAAcrzB,QACdisB,WACAxjB,kBAEAA,EAAY,CAAEg6C,YAAY,IAC1Bx2B,EAASiU,eAAgBjtB,2BAEzB,MAAMvB,GAAU,IAAA/Q,GAAE,gDAAiDX,GAEnEisB,EAAS83B,eAActgC,sBAAuB,CAC7ClM,OAAQ,CACP,CACC7F,UACA6P,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,UA8JrB,CAACsK,eAAa+tB,yCAA0CgoB,EACxD,CAAC/1C,eAAaguB,gDAzJyB,EAAGxf,SAAQ+P,WAAUoH,iBAC5D,MAAM,OAAE9R,GAAWrF,EAAO+jB,SACpB,UAAEjM,EAAF,iBAAa5nB,EAAb,KAA+BypB,GAASxC,GACtCrW,YAAa7Q,GAAU0pB,EAE3BtU,IAAWya,sCACd/P,EAASve,eAAa2tB,iCAAkC,CACvDlvB,QACA6nB,YACA+O,0BAA2B32B,IAExB6f,EAASve,eAAa6tB,gCA+I3B,CAAC7tB,eAAaiuB,kCA3HQ,EAAGzf,SAAQ+P,WAAUoH,iBAC3C,MAAM,OAAErN,GAAW9J,EAAO+jB,SACpB,UAAEjM,EAAF,iBAAa5nB,EAAb,KAA+BypB,GAASxC,GACtCrW,YAAa7Q,GAAU0pB,EAE3B7P,EAAOg+B,MAAM3hB,MAAQ,EACxBpW,EAASve,eAAakuB,qCAEtB3P,EAASve,eAAa2tB,iCAAkC,CACvDlvB,QACA6nB,YACA+O,0BAA2B32B,KAiH7B,CAACsB,eAAakuB,qCA5GW,EAAG3P,WAAUoH,aAAY5qB,kBAClD,MAAM,KAAEzI,GAASqzB,EACjB5qB,EAAY,CAAEg6C,YAAY,IAC1Bx2B,EAASiU,eAAgBjtB,2BAEzB,MAAMi/B,GAAS,IAAAvxC,GAAE,wBACX+Q,EAAU1R,GACb,IAAAW,GACA,mMACAX,IAEA,IAAAW,GACA,6LAGHsrB,EAAS83B,eAActgC,sBAAuB,CAC7ClM,OAAQ,CACP,CACC26B,SACAxgC,UACA6P,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,UAyFrB,CAACsK,eAAa8tB,iCAA6D,EAC1EvP,eAEAA,EAASiU,eAAgBjtB,4BACzB,IAAIzM,sBAAqBQ,mBAE1B,CAAC0G,eAAamuB,0BAA2B6nB,EACzC,CAACh2C,eAAaouB,0BA9EgB,EAC9B7hB,mBACAxR,cACAwjB,eAEAxjB,EAAY,CAAEg6C,YAAY,IAE1BxoC,EAAiB,CAAE6tB,WAAW,IAE9B7b,EAASiU,eAAgBjtB,2BAEzB,MAAM0wB,GAAU,IAAAhjC,GAAE,6BAClBsrB,EAAS83B,eAActgC,sBAAuB,CAC7ClM,OAAQ,CACP,CACC7F,QAASiyB,EACTpiB,OAAQle,aAAWF,OACnBiH,KAAM/G,aAAWD,UA8DpB,CAACsK,eAAaquB,uBAxDaiE,IAC3B,MACC9jB,QACC+jB,SAAS,QAAE0D,IAFP,SAIL1X,EAJK,YAKLxjB,GACGu3B,EAEJv3B,EAAY,CAAEg6C,YAAY,IAC1Bx2B,EAASiU,eAAgBjtB,2BAEzBgZ,EAAS83B,eAActgC,sBAAuB,CAC7ClM,OAAQ,CACP,CACC7F,QAASiyB,EACTpiB,OAAQre,cAAYC,OACpBiH,KAAMlH,cAAYE,Y,6BC1StB,Q,mFCAA,OAEA,OACA,SACA,OAEA,IAAAk5B,qBAAoB,gBAAiB,CACpCC,SAAU,CAAEzyB,KAAM0yB,WAClBnJ,WAAY,CACX0vB,YAAa,CACZnmB,SAAS,IAAAj8B,GAAE,gBACXk8B,OAAQ,CAAE/yB,KAAM,WAEjB4H,QAAS,CACRkrB,SAAS,IAAAj8B,GAAE,uBACXk8B,OAAQ,CAAE/yB,KAAM,WAEjBwf,KAAM,CACLsT,QAAS,KACTC,OAAQ,CAAE/yB,KAAM,WAEjBm6C,YAAa,CACZrnB,SAAS,IAAAj8B,GAAE,MACXk8B,OAAQ,CAAE/yB,KAAM,WAEjBo6C,cAAe,CACdtnB,SAAS,IAAAj8B,GAAE,UACXk8B,OAAQ,CAAE/yB,KAAM,WAEjBq6C,eAAgB,CAAEvnB,QAAS,MAC3BwnB,gBAAiB,CAAExnB,QAAS,OAE7BG,KAAM,EAAG1J,iBACR,MAAM,YACL4wB,EADK,cAELC,EAFK,YAGLnB,EAHK,QAILrxC,EAJK,KAKL4X,GACG+J,EACJ,OACC,gCACCoY,QAAA,EACAD,iBAAA,EACAliB,KAAMA,EACNy5B,YAAaA,EACbE,cAAe,CACd,CACC79C,GAAI,UACJ+uB,QAAS,UACTnb,MAAOirC,GAER,CACC7+C,GAAI,YACJ+uB,QAAS,WACTnb,MAAOkrC,KAIRxyC,IAIJsrB,mC,sGC/DD,WAE8BA,EAAjBA,eAAiB,CAC7B,kCAAqC,CACpC2F,OAAQ,EAAGzmB,SAAQmX,aAAYpH,eAC9B,MACC/P,QAAQ,GAAE9W,IACP8W,EAAO+jB,SACL,eAAEkkB,EAAiB,UAAa9wB,GAChC,iBACLgxB,EAAmB,MAClBp4B,EAASiU,eAAgBjtB,8BAEvBogB,EAEO,YAAPjuB,EAAkB++C,IACN,cAAP/+C,GAAoBi/C,KAE9BhW,iBAAiB,K,gBCjBX,IAAIroB,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,qqCAA0qC,M,sHCLnsC,OACA,QASA,QACA,OACA,OACA,QAIA,OAIA,OACA,QACA,QACA,QAEA,MAIM6kD,GAAiC,IAAA/kB,kBACtChU,mCACA,CACCiU,WAAY,CAAC,SACbC,YAAa,CAAC,6BACdplB,OAAO,EACPqlB,gBAAiBhyB,eAAakd,gCAC9B+U,kBAAmBjyB,eAAamd,kCAChC+U,gBAAiBlyB,eAAaod,iCA4EFkS,EAAjBA,eAAiB,CAC7B,CAACunB,eAAiB9iC,gCAzFS,EAAGhZ,kBAC9BA,EAAY,CAAEo2C,qBAAqB,KAyFnC,CAACnxC,eAAaoC,4BAA6B,EAAGoM,SAAQ+P,eACrD,MACCgU,SACCxuB,MAAM,GAAErM,KAEN8W,EACJ,OAAQ9W,GACP,KAAK+lB,oBACJc,EAASve,eAAa+c,gCACtB,MAED,KAAKS,mBACJe,EAASve,eAAa6c,8BACtB,MAED,KAAKa,2BACJa,EAASve,eAAa8c,sCACtB,MAED,KAAKa,sBACJY,EAASve,eAAaqd,iCACtB,MAED,KAAKO,2BACJW,EAASve,eAAasd,wCAOzB,CAACtd,eAAa+c,gCAAkG,EAC/G4I,iBAEA,MAAM,oBACLyQ,EADK,iBAEL13B,EAFK,MAGLD,EACAgpB,eAAiBnc,MAAO4qB,IACrBvQ,EACE0Q,GAAW,IAAApjC,GAAE,oBACb2uB,GAAM,IAAApjB,wBAAuBC,EAAOC,GACpChH,EAAM,WAAU+G,QAClB23B,GACH,IAAIt9B,sBAAqBM,uBAAuB,CAC/C88B,QACAG,WACAzU,MACAlqB,OAGDI,OAAOw+B,KAAK1U,EAAKlqB,IAGnB,CAACsI,eAAa6c,8BAA+B,EAAG8I,aAAYpH,eAC3D,MAAM,MAAE9f,EAAF,cAASgpB,EAAT,iBAAwB/oB,GAAqBinB,EAEnDpH,EACCve,eAAaid,kCACb,CACCrR,MAAO6b,EAAcn1B,KACrB+iC,0BAA2B32B,GAE5B,CAAE+oB,gBAAehpB,WAGnB,CAACuB,eAAagd,+BAAiG,EAC9G2I,iBAEA,MAAM,oBACLyQ,EADK,MAEL33B,EACAgpB,eAAiBnc,MAAO4qB,EAAT,KAAgB5jC,IAC5BqzB,EACE0Q,GAAW,IAAApjC,GAAE,gBAAiBijC,GAC9BtU,GAAM,IAAA8M,eAAcp8B,GACpBoF,EAAM,WAAU+G,QAClB23B,GACH,IAAIt9B,sBAAqBM,uBAAuB,CAC/C88B,QACAG,WACAzU,MACAlqB,OAGDI,OAAOw+B,KAAK1U,EAAKlqB,IAGnB,CAACsI,eAAa8c,sCAAuC,EACpD6I,aACApH,eAEA,MAAM,MAAE9f,EAAF,cAASgpB,GAAkB9B,EAEjCpH,EACCiU,eAAgBltB,0BACU,CACzB4uB,SAAU,KACT,2CACCC,SAAS,EACT8gB,UAAU,EACV3iD,KAAMm1B,EAAcnc,MACpB8oB,2BAA2B,EAC3B9N,UAAWrxB,SAAOC,cAClBuJ,MAAOA,EACP41B,uBAAuB,OAM5B,CAACr0B,eAAaid,mCAAoC25B,EAClD,CAAC52C,eAAakd,iCA1LsB,EAAGqB,eACvCA,EAASknB,eAAa5jC,mBA0LtB,CAAC7B,eAAamd,mCAvLwBmV,IACtC,MACC9jB,QACC+jB,SAAS,OAAEja,GACX6P,MAAM,cAAEV,EAAF,MAAiBhpB,IAHnB,SAKL8f,GACG+T,EAEJ,GAAKha,EAAOw+B,WAgBL,CACN,MAAMC,EAAiBz+B,EAAO0+B,OAC9B,IAAIhzC,EAEHA,EADG+yC,EAAel/C,OAAS,GACjB,IAAA5E,GACR,yEACDw0B,EAAcn1B,OAGL,IAAAW,GACR,qEACDw0B,EAAcn1B,KACdykD,GAIF,MAAMljC,EAASre,cAAYC,OACrBiH,EAAOlH,cAAYE,KACzB6oB,EAASkmB,eAAe1uB,sBAAuB,CAC9ClM,OAAQ,CAAC,CAAE7F,UAAS6P,SAAQnX,gBAlC7B6hB,EACCiU,eAAgBltB,0BACU,CACzB4uB,SAAU,KACT,2CACCC,SAAS,EACT7hC,KAAMm1B,EAAcnc,MACpB8oB,2BAA2B,EAC3B9N,UAAWrxB,SAAOC,cAClBuJ,MAAOA,EACP41B,uBAAuB,MA4B5B9V,EAASknB,eAAa3jC,mBAwItB,CAAC9B,eAAaod,gCArIqBkV,IACnC,MACC9jB,QACC+jB,SAAS,OAAEja,IAFP,SAILiG,GACG+T,EAEEtuB,EAAUsU,EAAO2d,QACjBpiB,EAASre,cAAYC,OACrBiH,EAAOlH,cAAYE,KACzB6oB,EAASkmB,eAAe1uB,sBAAuB,CAC9ClM,OAAQ,CAAC,CAAE7F,UAAS6P,SAAQnX,WAE7B6hB,EAASknB,eAAa3jC,mBAyHtB,CAAC9B,eAAaqd,iCAAmG,EAChHsI,iBAEA,MAAM,oBACLyQ,EADK,MAEL33B,EACAgpB,eAAiBnc,MAAO4qB,EAAT,KAAgB5jC,IAC5BqzB,EACE0Q,GAAW,IAAApjC,GAAE,kBAAmBijC,GAChCtU,GAAM,IAAA+M,oBAAmBr8B,GACzBoF,EAAM,aAAY+G,QACpB23B,GACH,IAAIt9B,sBAAqBM,uBAAuB,CAC/C88B,QACAG,WACAzU,MACAlqB,OAGDI,OAAOw+B,KAAK1U,EAAKlqB,IAGnB,CAACsI,eAAasd,sCAAuC,EACpDqI,aACApH,eAEA,MAAM,wBAAE8yB,GAA4B1rB,EAEhC0rB,EACH9yB,EACCiU,eAAgBltB,0BACU,CACzB4uB,SAAU,KACT,oCACCmhB,aAAa,IAAApiD,GAAE,kCACf+Q,SAAS,IAAA/Q,GACR,iDAEDsjD,aAAa,IAAAtjD,GAAE,gBACfujD,eAAe,IAAAvjD,GAAE,oBACjBwjD,eAAgB,IACfl4B,EACCve,eAAaud,4CAQnBgB,EAASve,eAAaud,yCAGxB,CAACvd,eAAaud,wCAAyC,EAAGgB,eACzDA,EAASiU,eAAgBjtB,2BACzBgZ,EAAS7P,eAAoBoB,wCAAyC,CACrE1T,KAAMgU,sBAEPmO,EAASknB,eAAalkC,iB,kHClSxB,OACA,QACA,OACA,QACA,MAE0BuvB,EAAbA,WAAa,EACzBvS,WACA8R,kBACAC,0BACAJ,qBACAnlB,wBAGC,0BAAK4Q,UAAU,mBACd,0BAAKA,UAAU,kBACd,wBAAGA,UAAU,UAAS,IAAA1oB,GAAE,kBACxB,mBAAC,EAAAqrB,eAAD,CACCC,SAAUA,EACVC,WAAYxe,eAAaM,gCACzBgL,OAAO,IAAArY,GAAE,iBACTwrB,MAAM,EACNC,YAAY,aACZvmB,aAAc,GACd4S,kBAAmBA,MAGrB,0BAAK4Q,UAAU,mBACb2U,GACA,mCACCh+B,KAAK,oBACLgZ,OAAO,IAAArY,GAAE,kCACTkzB,QAASkK,EACTzX,SAAUsX,EACVmO,iBAAgB,CAAEmJ,SAAUpyB,yBAE1B,Q,gBCnCA,IAAIkD,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,02FAA+2F,M,sGCLx4F,WACA,OAIA,QAEA,MAAM,2BAAE8uC,EAAF,oBAA8BD,GAAwBE,cA+B9BxR,EAAjBA,eAAiB,CAC7B,CAACsR,GAX4B,EAAGriB,WAAUoH,iBAC1C,MAAM,MAAElnB,EAAF,YAAS4O,EAAT,iBAAsB3O,GAAqBinB,EAEjDpH,EAASqvB,eAAwB3tC,sCAAuC,CACvExB,QACA4O,cACAgoB,0BAA2B32B,KAM5B,CAACmiC,GAA6B,CAE7BvL,SAAU,CAAEhjC,KAAM,WAAYijC,MAAO,IACrCN,OAlC8B3C,IAC/B,MACC3M,YAAY,wBAAEmK,EAAF,kBAA2BC,GACvCvhB,QACC+jB,SAAWjgC,KAAMs9C,IAHb,SAKLrxB,GACG+T,EAGH,CAAC3rB,sBAAqBnE,wBAAsBhK,SAASo3C,IACrD9f,GACAC,GAGAxR,EAASqvB,eAAwBvtC,sC,6BCxBnC,Q,6BCAA,W,IACA,M,IACA,QACA,SACA,Q,IACA,Q,oDAEA,IAAAuuB,qBAAoB,gBAAiB,CACpCC,SAAU,CACTzyB,KAAM0yB,WAEPC,aAAc,CACb6iB,WAAW,EACXqF,aAAc,EACdC,QAAS94B,gBAEViR,eACAxjB,iBACAyjB,mC,8FClBD,MACA,MACA,OACA,YACA,OACA,SAEA,MAiBM6nB,EAAc,CAACF,EAAcG,KAClC,IAAIC,EAAQ,GAEZ,IAAK,IAAItlD,EAAI,EAAGA,EAAIqlD,EAAarlD,IAC5BA,IAAMklD,EACTI,EAAMnyC,MAAK,+BAAUxI,KAAK,iBAAiBkf,KAAK,QAC5Cy7B,EAAMnyC,MAAK,+BAAUxI,KAAK,cAAckf,KAAK,QAGnD,OAAOy7B,G,UAGO3xB,IACd,MAAM,aAAEuxB,EAAF,UAAgBrF,EAAhB,QAA2BsF,GAAYxxB,EAE7C,OACC,0BAAK/J,UAAU,kBACd,gCACCC,KAAK,KACLy5B,aAAa,IAAApiD,GAAE,gBACfsiD,eAAe,IAAAvoB,uBAAsBiqB,EAAcC,GACnDnZ,OAAQ6T,GAtCY,EAACqF,EAAcC,KACtC,MAAMp8C,EAAOo8C,EAAQD,GAErB,OACC,0BAAKt7B,UAAU,eACd,kCAAarQ,MAAOxQ,EAAKwQ,MAAOgsC,MAAM,IAAI7wB,QAAQ,mBAClD,0BAAK9K,UAAU,cACbw7B,EAAYF,EAAcC,EAAQr/C,UAEpC,0BAAK8jB,UAAU,UACd,mBAAC,EAAAF,OAAD,CAAQjf,MAAO1B,EAAK0B,MAAOJ,KAAK,UAEjC,0BAAKuf,UAAU,qBAAqB7gB,EAAK6B,eA4BvCs2C,CAAgBgE,EAAcC,O,cC/CnCplD,EAAOD,QAAU0lD,qC,6GCAjB,YAEqCvqB,EAAxBA,sBAAwB,CAACiqB,EAAcC,KACnD,MAAM74B,EAAgB64B,EAAQD,GAAc54B,cAE5C,OAA6B,IAAzBA,EAAcxmB,OACV,CACN,CACCH,GAAK,GAAE2mB,EACPoI,QAAS,UACTnb,MAAQ,GAAE+S,EACVzF,UAAU,EACVuU,gBAAiBntB,eAAa8d,kCAI1B,CACN,CACCpmB,GAAK,GAAE2mB,EAAc,GACrBoI,QAAS,UACTnb,MAAQ,GAAE+S,EAAc,GACxBzF,UAAU,EACVuU,gBAAiBntB,eAAa8d,iCAE/B,CACCpmB,GAAK,GAAE2mB,EAAc,GACrBoI,QAAS,WACTnb,MAAQ,GAAE+S,EAAc,GACxBzF,UAAU,EACVuU,gBAAiBntB,eAAa8d,oC,oKC7BjC,YAOA,QAEO,MAAM05B,EAAsBA,EAAtBA,oBAAsB,EAClC9xB,QACAlX,SACAzT,cACAwjB,eAEA,MAAM,MAAEjT,GAAUkD,EAAO+jB,QAAQklB,cAC3B,aAAER,GAAiBvxB,EAEzB,OAAQpa,GACP,KAAK0S,cACJjjB,EAAY,CAAEk8C,aAAcA,EAAe,IAC3C,MACD,KAAKh5B,kBACJljB,EAAY,CAAEk8C,aAAcA,EAAe,IAC3C,MACD,KAAK/4B,qBACJnjB,EAAY,CAAE62C,WAAW,IACzBrzB,EAASve,eAAa+d,0BAA2B,CAAE/qB,OAAO,MAOhD0kD,EAAcA,EAAdA,YAAc,EAAG38C,cAAawjB,eAC1CxjB,EAAY,CAAE62C,WAAW,IACzBrzB,EAASve,eAAa+d,0BAA2B,CAAE/qB,OAAO,KAG9C2kD,EAA0BA,EAA1BA,wBAA0B,EAAGp5B,WAAU/P,aACnD,MAAM,MAAExb,GAAUwb,EAAO+jB,QACnBqD,EAAc,CACnBtjC,KAAM6rB,gCACNnrB,SAGDurB,EAASsX,eAAiBtgB,uBAAwB,CAAEqgB,iBAGvBtG,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAa8d,iCAAkC05B,EAChD,CAACx3C,eAAamU,sBAAuBujC,EACrC,CAAC13C,eAAa+d,2BAA4B45B,I,gBCnDnC,IAAIr/B,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,w1LAA21L,M,gBCJ52L,IAAIumB,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,8RAAiS,M,cCL1TD,EAAOD,QAAU+lD,mC,gBCCT,IAAIt/B,EAAS,EAAQ,KAGjBxmB,EAAOD,QADW,iBAAXymB,EACUA,EAEAA,EAAOthB,Y,iBCN1BlF,EAAOD,QAAU,EAAQ,EAAR,EAA2E,IAK9FqT,KAAK,CAACpT,EAAOC,EAAI,wcAA2c,M,sGCLpe,WAqB8Bu9B,EAAjBA,eAAiB,CAC7B,CAACtvB,eAAaqF,gCApBO,EAAGmJ,SAAQzT,kBAChC,MAAQw3B,SAAS,YAAEE,GAAc,GAAS,IAAOjkB,EACjDzT,EAAY,CACXi0B,cAAeyD,KAkBhB,CAACzyB,eAAasF,2BAdG,EAAGkJ,QAAU+jB,WAAWx3B,kBACzCA,EAAY,CACXk0B,eAAgBsD,EAAQ2B,YAazB,CAACl0B,eAAauF,2BATG,EAAGxK,kBACpBA,EAAY,CACXk0B,eAAgB,QAQjB,CAACjvB,eAAawF,uBAAwB,EAAGgJ,SAAQ+P,eAChD,MAAM,QAAEgU,GAAY/jB,EACf+jB,EAAQv/B,OAAOurB,EAASve,eAAauF","file":"sn-table-builder.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 72);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","export const BORDER_RADIUS_CORNERS = [\n\t'top-left',\n\t'top-right',\n\t'bottom-left',\n\t'bottom-right'\n];\n\nexport const EVENT_KEY = {\n\tESC: 'Esc',\n\tESCAPE: 'Escape',\n\tENTER: 'Enter',\n\tARROW_UP: 'ArrowUp',\n\tARROW_RIGHT: 'ArrowRight',\n\tARROW_DOWN: 'ArrowDown',\n\tARROW_LEFT: 'ArrowLeft',\n\tSPACE: ' ',\n\tPAGE_UP: 'PageUp',\n\tPAGE_DOWN: 'PageDown',\n\tHOME: 'Home',\n\tEND: 'End',\n\tTAB: 'Tab'\n};\n\n// Perspectives that table builder support\nexport const TB_PERSPECTIVES = {\n\tVIEW_FIELD_ROW: 'view-field-row'\n};\n\nexport const TABLES = {\n\tSYS_DB_OBJECT: 'sys_db_object',\n\tDICTIONARY: 'sys_dictionary',\n\tSYS_CHOICE: 'sys_choice'\n};\n\nexport const PAGE_SIZES = [10, 15, 20, 50];\n\nexport const WAIT_UNTIL_TIMEOUT_DEFAULT = 5000;\nexport const WAIT_UNTIL_INTERVAL_DEFAULT = 500;\n\nexport const ERROR_ALERT = {\n\tSTATUS: 'critical',\n\tICON: 'circle-exclamation-outline'\n};\n\nexport const INFO_ALERT = {\n\tSTATUS: 'info',\n\tICON: 'info-circle-outline'\n};\n\n// Primitive types\nexport const FIELD_TYPES = {\n\tINTEGER: 'integer',\n\tSTRING: 'string',\n\tGUID: 'GUID',\n\tBOOLEAN: 'boolean',\n\tDATE_TIME: 'glide_date_time',\n\t_CONTROL_DELETE: '_control_delete'\n};\n\n// Internal types\nexport const INTERNAL_TYPES = {\n\tSTRING: 'string',\n\tJOURNAL_INPUT: 'journal_input',\n\tREFERENCE: 'reference',\n\tCHOICE: 'choice'\n};\n\n// Table Columns\nexport const TABLE_COLUMNS = {\n\tREFERENCE: 'reference',\n\tCHOICE: 'choice',\n\tINTERNAL_TYPE: 'internal_type',\n\tMAX_LENGTH: 'max_length',\n\tDEFAULT_VALUE: 'default_value',\n\tELEMENT: 'element',\n\tCOLUMN_LABEL: 'column_label'\n};\n","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_ui_core;","import uuid from 'uuid';\nimport {\n\tfindTabbableNodes,\n\tgetActiveElement\n} from '@servicenow/library-enhanced-utils';\nimport {\n\tEVENT_KEY,\n\tWAIT_UNTIL_TIMEOUT_DEFAULT,\n\tWAIT_UNTIL_INTERVAL_DEFAULT\n} from './constants';\nimport { t } from 'sn-translate';\nimport { ADDITIONAL_INFO } from './additional-info-map';\n\n/**\n * @param {*} value\n * @returns {boolean} Returns `true` if value is a function\n */\nexport function isFunction(value) {\n\treturn Object.prototype.toString.call(value) === '[object Function]';\n}\n\n/**\n * @param {*} value\n * @returns {boolean} Returns `true` if value is an object\n */\nexport function isObject(value) {\n\treturn Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * @param {Array} borderRadius The array of strings to specify which side border radius should come\n * @param {boolean} hasBorder\n * @returns {Object} Returns new object with list of border radius class names\n */\nexport const getBorderRadiusClasses = (borderRadius = [], hasBorder = true) => {\n\tlet classNames = {};\n\tif (!hasBorder) return classNames;\n\n\tborderRadius.forEach(side => {\n\t\tclassNames[`-radius-${side}`] = true;\n\t});\n\treturn classNames;\n};\n\n/**\n * @param {Array} borderRadius The array of strings to specify which side border radius should come\n * @param {boolean} hasBorder\n * @returns {Object} Returns new object with list of border class names\n */\nexport const getBorderClasses = (borderRadius = [], hasBorder = true) => {\n\tlet classNames = {};\n\tif (!hasBorder) return classNames;\n\n\tif (borderRadius.includes('top-left') && borderRadius.includes('top-right'))\n\t\tclassNames['-align-top'] = true;\n\tif (\n\t\tborderRadius.includes('top-right') &&\n\t\tborderRadius.includes('bottom-right')\n\t)\n\t\tclassNames['-align-right'] = true;\n\tif (\n\t\tborderRadius.includes('top-left') &&\n\t\tborderRadius.includes('bottom-left')\n\t)\n\t\tclassNames['-align-left'] = true;\n\tif (\n\t\tborderRadius.includes('bottom-left') &&\n\t\tborderRadius.includes('bottom-right')\n\t)\n\t\tclassNames['-align-bottom'] = true;\n\treturn classNames;\n};\n\n/**\n * Format given number with commas\n * Ex: 1234567 -> 1,234,567\n * @param {number} num\n * @returns {string}\n */\nexport const formatNumberWithCommas = num => {\n\tif (!num) return '';\n\n\tconst parts = num.toString().split('.');\n\tconst returnStr =\n\t\tparts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') +\n\t\t(parts[1] ? '.' + parts[1] : '');\n\n\treturn returnStr;\n};\n\n/**\n * wrapper class to access appEngineStudioBuilderAPI\n * exposes same methods provided by AES\n */\nexport class AppEngineStudioAPI {\n\tconstructor() {\n\t\tthis.api =\n\t\t\tprocess.env.NODE_ENV === 'development'\n\t\t\t\t? window.appEngineStudioBuilderAPI\n\t\t\t\t: window.frameElement.appEngineStudioBuilderAPI;\n\t}\n\n\topenAppEngineStudioTab(args) {\n\t\tthis.api.openAppEngineStudioTab(args);\n\t}\n\n\tcloseCurrentTab() {\n\t\tif (this.api) {\n\t\t\tthis.api.updateTabState({ hasUnsavedChanges: false });\n\t\t\tthis.api.closeCurrentTab();\n\t\t} else {\n\t\t\twindow.close();\n\t\t}\n\t}\n\n\tupdateTabState(args) {\n\t\tthis.api && this.api.updateTabState(args);\n\t}\n}\n\n/**\n * Polyfill for the lodash get method\n * @param {Object} obj\n * @param {string|Array} path\n * @param {*} defValue\n * @returns {*}\n */\nexport const get = (obj, path, defValue) => {\n\tif (!path) return undefined;\n\tconst pathArray = Array.isArray(path) ? path : path.match(/([^[.\\]])+/g);\n\treturn (\n\t\tpathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj) ||\n\t\tdefValue\n\t);\n};\n\n/**\n * Polyfill for lodash inRange\n */\nexport const inRange = (num, rangeStart, rangeEnd = 0) =>\n\t(rangeStart < num && num < rangeEnd) ||\n\t(rangeEnd < num && num < rangeStart);\n\n/**\n * Recursively query (with in shadow root also) using css selector\n */\nexport const shadowQuerySelectorAll = (root = document, selector) => {\n\tif (!selector) return [];\n\n\tif (root.shadowRoot) root = root.shadowRoot;\n\tconst nodes = root.querySelectorAll(selector);\n\treturn Array.from(nodes);\n};\n\nexport const updateStateWithoutRender = (data, updateState) => {\n\tObject.keys(data).forEach(propName => {\n\t\tupdateState({\n\t\t\toperation: 'set',\n\t\t\tpath: propName,\n\t\t\tvalue: data[propName],\n\t\t\tshouldRender: false\n\t\t});\n\t});\n};\n\n// JS `%` doesn't work with negative numbers\nfunction mod(n, m) {\n\treturn ((n % m) + m) % m;\n}\n\nexport function findNextFocusTarget({\n\twithin = document.body,\n\tcurrent = getActiveElement(),\n\twrap = true,\n\tshiftKey = false\n}) {\n\tif (!within) return null;\n\n\tconst delta = shiftKey ? -1 : 1;\n\tconst tabbableNodes = findTabbableNodes(within);\n\tconst currentIndex = tabbableNodes.indexOf(current);\n\tconst needsWrap = !inRange(currentIndex + delta, 0, tabbableNodes.length);\n\tif (needsWrap && !wrap) return null;\n\n\tconst nextIndex = mod(currentIndex + delta, tabbableNodes.length);\n\tconst next = tabbableNodes[nextIndex];\n\treturn next || null;\n}\n\nexport const handleTabPress = (event, host) => {\n\tif (event.key !== EVENT_KEY.TAB) return;\n\n\tevent.preventDefault();\n\tconst focusTarget = findNextFocusTarget({\n\t\twithin: host,\n\t\tshiftKey: event.shiftKey\n\t});\n\t/*istanbul ignore else*/\n\tif (focusTarget) focusTarget.focus();\n};\n\n/**\n * resolves using additional-info-map\n * @param {string} type\n * @param {string} scalarType\n */\nexport const resolveInfoForTypes = (type, scalarType) => {\n\tif (ADDITIONAL_INFO.sys_glide_object[type])\n\t\treturn ADDITIONAL_INFO.sys_glide_object[type];\n\n\t//fallback\n\treturn {\n\t\timage:\n\t\t\ttype === ''\n\t\t\t\t? ''\n\t\t\t\t: scalarType && ADDITIONAL_INFO.FALLBACK_IMAGE_MAP[scalarType],\n\t\ticon: '',\n\t\tdescription: t('A field type')\n\t};\n};\n\nexport const waitUntil = /* istanbul ignore next */ (\n\tcondition,\n\t{\n\t\ttimeout = WAIT_UNTIL_TIMEOUT_DEFAULT,\n\t\ttimeoutMsg = `Failed to wait until condition after ${timeout} ms`,\n\t\tcheckInterval = WAIT_UNTIL_INTERVAL_DEFAULT\n\t}\n) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst started = new Date();\n\t\tconst timeElapsedSince = started => Date.now() - started;\n\t\tconst wait = ms =>\n\t\t\tnew Promise((resolve, reject) => setTimeout(reject, ms));\n\t\tconst checkElapsedTime = () => {\n\t\t\tif (timeElapsedSince(started) >= timeout) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\treject(timeoutMsg);\n\t\t\t}\n\t\t};\n\t\tconst interval = setInterval(() => {\n\t\t\ttry {\n\t\t\t\tPromise.race([\n\t\t\t\t\tcondition(),\n\t\t\t\t\twait(timeout - timeElapsedSince(started))\n\t\t\t\t])\n\t\t\t\t\t.then(conditionResult => {\n\t\t\t\t\t\tif (conditionResult) {\n\t\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\t\tresolve(conditionResult);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcheckElapsedTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tcheckElapsedTime();\n\t\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tcheckElapsedTime();\n\t\t\t}\n\t\t}, checkInterval);\n\t});\n};\n\nexport function createGlobalListener(eventType) {\n\tconst callbacks = {};\n\tconst runCallbacks = event =>\n\t\tObject.keys(callbacks).forEach(id => {\n\t\t\tcallbacks[id](event);\n\t\t});\n\n\treturn {\n\t\tadd(id, callback) {\n\t\t\tif (Object.keys(callbacks).length === 0)\n\t\t\t\twindow.addEventListener(eventType, runCallbacks, true);\n\n\t\t\tcallbacks[id] = callback;\n\t\t},\n\t\tremove(id) {\n\t\t\tdelete callbacks[id];\n\n\t\t\tif (Object.keys(callbacks).length === 0)\n\t\t\t\twindow.removeEventListener(eventType, runCallbacks, true);\n\t\t}\n\t};\n}\n\nexport const removeSpecialCharacters = value => {\n\treturn value\n\t\t.toLowerCase()\n\t\t.replace(/[^a-z0-9_]/g, '_') // remove any non-alphanumeric chars\n\t\t.replace(/^\\d+/, '_') // remove leading numeral\n\t\t.replace(/_+/g, '_') // squash any repeating underscores\n\t\t.replace(/_$/, '') // remove leading _\n\t\t.replace(/^_/, ''); // remove trailing _\n};\n\nexport const isUnsavedRecord = identifier => identifier.startsWith('-1');\n\nexport const getTableUrlForPlatform = (sysId, transactionScope) => {\n\tconst stackName = `${uuid.v4()}_bottomless`;\n\treturn `/sys_db_object.do?sys_id=${sysId}&sysparm_view=&sysparm_referring_url=sys_db_object.do?sys_id=${sysId}&sysparm_view=&sysparm_nameofstack=${stackName}&sysparm_transaction_scope=${transactionScope}&sysparm_nofocus=true`;\n};\n\nexport const isEmptyObject = obj => obj && !Object.keys(obj).length;\n\nexport const getEventPath = event =>\n\tevent.composedPath ? event.composedPath() : event.path;\n","import { removeSpecialCharacters } from '../../commons/utils';\n\nexport const BEHAVIOR_NAME = 'GRID_MODEL';\n\nexport const GRID_CONSTANTS = {\n\tPAGE_SIZE: 20\n};\n\nexport const FIELDS_NEEDING_VALIDATION = ['element'];\nexport const SORT_ORDER_ASC = 'ASC';\nexport const SORT_ORDER_DESC = 'DESC';\nexport const DEFAULT_SORT_ORDER = SORT_ORDER_DESC;\nexport const SORT_ORDERS = {\n\tASC: 'ascending',\n\tDESC: 'descending'\n};\nexport const SORT_ASC_ID = 'SORT_ASC_ID';\nexport const SORT_DESC_ID = 'SORT_DESC_ID';\n\nexport const BUTTON_DELETE_CONTROL = 'button_delete_control';\nexport const BUTTON_REFERENCE_OPENER = 'button_reference_opener';\n\nexport const API_PATH =\n\t'/api/sn_table_builder/app/table_data/:sysId/:perspective';\nexport const FIELD_VALIDATION_API_PATH =\n\t'/api/sn_table_builder/app/field_validation/:table';\n\n// Behavior actions\nexport const ACTION_TYPES = {\n\tGRID_MODEL__FETCH_GRID_DATA_INITIATED: `${BEHAVIOR_NAME}#FETCH_GRID_DATA_INITIATED`,\n\tGRID_MODEL__FETCH_GRID_DATA_STARTED: `${BEHAVIOR_NAME}#FETCH_GRID_DATA_STARTED`,\n\tGRID_MODEL__FETCH_GRID_DATA_SUCCEEDED: `${BEHAVIOR_NAME}#FETCH_GRID_DATA_SUCCEEDED`,\n\tGRID_MODEL__FETCH_GRID_DATA_FAILED: `${BEHAVIOR_NAME}#FETCH_GRID_DATA_FAILED`,\n\n\tGRID_MODEL__TRANSFORM_GRID_MODEL: `${BEHAVIOR_NAME}#TRANSFORM_GRID_MODEL`,\n\tGRID_MODEL__NEW_ROW_BTN_CLICKED: `${BEHAVIOR_NAME}#NEW_ROW_BTN_CLICKED`,\n\tGRID_MODEL__UPDATE_CELL_MODEL: `${BEHAVIOR_NAME}#UPDATE_CELL_MODEL_EDITABLE`,\n\tGRID_MODEL__CELL_VALIDATION_STARTED: `${BEHAVIOR_NAME}#CELL_VALIDATION_STARTED`,\n\tGRID_MODEL__CELL_VALIDATION_COMPLETED: `${BEHAVIOR_NAME}#CELL_VALIDATION_COMPLETED`,\n\tGRID_MODEL__UPDATE_DERIVED_FIELD: `${BEHAVIOR_NAME}#UPDATE_DERIVED_FIELD`,\n\tGRID_MODEL__UPDATE_CELL_MODEL_BATCH: `${BEHAVIOR_NAME}#UPDATE_CELL_MODEL_BATCH`,\n\tGRID_MODEL__GRID_UPDATE_SORT: `${BEHAVIOR_NAME}#GRID_UPDATE_SORT`,\n\tGRID_MODEL__VALIDATE_FIELD_INITIATED: `${BEHAVIOR_NAME}#VALIDATE_FIELD_INITIATED`,\n\tGRID_MODEL__VALIDATE_FIELD_STARTED: `${BEHAVIOR_NAME}#VALIDATE_FIELD_STARTED`,\n\tGRID_MODEL__VALIDATE_FIELD_SUCCEEDED: `${BEHAVIOR_NAME}#VALIDATE_FIELD_SUCCEEDED`,\n\tGRID_MODEL__VALIDATE_FIELD_FAILED: `${BEHAVIOR_NAME}#VALIDATE_FIELD_FAILED`,\n\tGRID_MODEL__SYNC_GRID_MODEL_WITH_TRANSACTION: `${BEHAVIOR_NAME}#SYNC_GRID_MODEL_WITH_TRANSACTION`,\n\tGRID_MODEL__SET_FOCUS_RETAINABLE_CELL: `${BEHAVIOR_NAME}#SET_FOCUS_RETAINABLE_CELL`,\n\tGRID_MODEL__RETAIN_FOCUS_TO_GRID_CELL: `${BEHAVIOR_NAME}#RETAIN_FOCUS`,\n\tGRID_MODEL__DELETE_CONTROL_CLICKED: `${BEHAVIOR_NAME}#DELETE_CONTROL_CLICKED`,\n\tGRID_MODEL__DELETE_ROW_FROM_MODEL: `${BEHAVIOR_NAME}#DELETE_ROW_FROM_MODEL`,\n\tFILTER_GRID: `${BEHAVIOR_NAME}#FILTER_GRID`,\n\tREFRESH_GRID: `${BEHAVIOR_NAME}#REFRESH_GRID`,\n\n\t// actions types related to open reference table\n\tREFERENCE_OPENER_CLICKED: `${BEHAVIOR_NAME}#REFERENCE_OPENER_CLICKED`,\n\tOPEN_REFERENCE_TABLE: `${BEHAVIOR_NAME}#OPEN_REFERENCE_TABLE`,\n\tFETCH_TABLE_DETAILS: `${BEHAVIOR_NAME}#FETCH_TABLE_DETAILS`,\n\tFETCH_TABLE_DETAILS_STARTED: `${BEHAVIOR_NAME}#FETCH_TABLE_DETAILS_STARTED`,\n\tFETCH_TABLE_DETAILS_SUCCEEDED: `${BEHAVIOR_NAME}#FETCH_TABLE_DETAILS_SUCCEEDED`,\n\tSHOW_GRID_LOADER: `${BEHAVIOR_NAME}#SHOW_GRID_LOADER`,\n\tHIDE_GRID_LOADER: `${BEHAVIOR_NAME}#HIDE_GRID_LOADER`,\n\n\tSN_TB_FIELD__VALUE_CHANGED: 'SN_TB_FIELD#VALUE_CHANGED',\n\tSN_TB_FIELD__VALUE_UNCHANGED: 'SN_TB_FIELD#VALUE_UNCHANGED',\n\tNOW_TOGGLE__CHECKED_SET: 'NOW_TOGGLE#CHECKED_SET',\n\tNOW_PAGINATION_CONTROL__SELECTED_PAGE_SET:\n\t\t'NOW_PAGINATION_CONTROL#SELECTED_PAGE_SET',\n\tNOW_PAGINATION_CONTROL__SELECTED_PAGE_SIZE_SET:\n\t\t'NOW_PAGINATION_CONTROL#SELECTED_PAGE_SIZE_SET',\n\tNOW_DROPDOWN__ITEM_CLICKED: 'NOW_DROPDOWN#ITEM_CLICKED',\n\tNOW_BUTTON_ICONIC__CLICKED: 'NOW_BUTTON_ICONIC#CLICKED'\n};\n\n// Behavior properties\nexport const IS_GRID_DATA_FETCHING = 'isGridDataFetching';\nexport const IS_GRID_DATA_ERROR = 'isGridDataError';\nexport const IS_GRID_DATA_FETCHED = 'isGridDataFetched';\nexport const IS_GRID_MODEL_READY = 'isGridModelReady';\nexport const GRID_COLUMNS = 'gridColumns';\nexport const GRID_DATA = 'gridData';\nexport const GRID_ROWS = 'gridRows';\nexport const GRID_CURRENT_PAGE = 'gridCurrentPage';\nexport const GRID_PAGE_SIZE = 'gridPageSize';\nexport const GRID_FILTER_QUERY = 'gridFilterQuery';\nexport const GRID_RECORD_COUNT = 'gridRecordCount';\nexport const CHOICE_TYPES = 'choiceTypes';\nexport const POPOVER_POSITION_TARGET = 'popoverPositionTarget';\nexport const NEW_ROW_ADDED = 'newRowAdded';\nexport const ROW_DELETED = 'rowDeleted';\nexport const GRID_LOADER = 'gridLoader';\n\nexport const DERIVED_FIELDS = {\n\tcolumn_label: {\n\t\tfield: 'element',\n\t\tgetValue: value => removeSpecialCharacters(value)\n\t}\n};\n\nexport const RESOLVE_FIELD_VALUE = {\n\telement: {\n\t\tgetValue: value => removeSpecialCharacters(value)\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","export {\n\tACTION_TYPES,\n\tIS_GRID_DATA_FETCHING,\n\tIS_GRID_DATA_FETCHED,\n\tIS_GRID_MODEL_READY,\n\tIS_GRID_DATA_ERROR,\n\tGRID_COLUMNS,\n\tGRID_ROWS,\n\tGRID_CURRENT_PAGE,\n\tGRID_PAGE_SIZE,\n\tGRID_RECORD_COUNT,\n\tNEW_ROW_ADDED,\n\tROW_DELETED\n} from './constants';\nexport { gridModel as default } from './grid-model';\n","export const BASE = 'TABLE_BUILDER';\n\nexport const ACTION_TYPES = {\n\tTABLE_BUILDER__BLOCK_UI_EVENTS: `${BASE}#BLOCK_UI_EVENTS`,\n\tTABLE_BUILDER__SHOW_MODAL: `${BASE}#SHOW_MODAL`,\n\tTABLE_BUILDER__HIDE_MODAL: `${BASE}#HIDE_MODAL`,\n\tNOW_MODAL__OPENED_SET: 'NOW_MODAL#OPENED_SET'\n};\n","export const POPOVER_PANEL_TAG = 'NOW-POPOVER-PANEL';\n\nexport const FIELD_META = 'fieldMeta';\nexport const MULTI_LINE_LENGTH = 255;\n\n// prop\nexport const VALUE = 'value';\n\nconst BASE = 'SN_TB_FIELD';\n\nexport const ACTION_TYPES = {\n\tSN_TB_FIELD__KEYDOWN: `${BASE}#KEYDOWN`,\n\tSN_TB_FIELD__OUTSIDE_CLICK: `${BASE}#OUTSIDE_CLICK`,\n\tSN_TB_FIELD__VALUE_CHANGED: `${BASE}#VALUE_CHANGED`,\n\tSN_TB_FIELD__VALUE_UNCHANGED: `${BASE}#VALUE_UNCHANGED`,\n\tSN_TB_FIELD__FINISH_EDITING: `${BASE}#FINISH_EDITING`,\n\tSN_TB_FIELD__CLOSE_OFF: `${BASE}#CLOSE_OFF`,\n\tSN_TB_FIELD__SET_INVALID: `${BASE}#SET_INVALID`,\n\tINTERNAL_TYPE_CHANGED: `${BASE}#INTERNAL_TYPE_CHANGED`,\n\tFOOTER_PRIMARY_BUTTON_CLICKED: `${BASE}#FOOTER_PRIMARY_BUTTON_CLICKED`\n};\n","import './sn-tb-provider';\n\nexport { TB_PROVIDER_ID, TB_PROVIDER_PROPERTIES } from './constants';\n","export { tableStructureData as default } from './table-structure-data';\nexport {\n\tACTION_TYPES,\n\tTBS_DATA_META,\n\tTBS_DATA_IS_FETCHING,\n\tTBS_DATA_IS_ERROR,\n\tTBS_DATA_COLUMNS,\n\tIS_TBS_DATA_FETCHED,\n\tIS_TABLE_IN_READ_ONLY,\n\tSHOW_WELCOME_SCREEN\n} from './constants';\n","const BASE = 'SN_TB_REFERENCE';\nimport { t } from 'sn-translate';\n\nexport const ACTION_TYPES = {\n\tSN_TB_REFERENCE__FETCH_RESULTS_INITIATED: `${BASE}#FETCH_RESULTS_INITIATED`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_LEGACY: `${BASE}#FETCH_RESULTS_LEGACY`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_STANDARD: `${BASE}#FETCH_RESULTS_STANDARD`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_TABLE: `${BASE}#FETCH_RESULTS_TABLE`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_STARTED: `${BASE}#FETCH_RESULTS_STARTED`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_LEGACY_SUCCEEDED: `${BASE}#FETCH_RESULTS_LEGACY_SUCCEEDED`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_STANDARD_SUCCEEDED: `${BASE}#FETCH_RESULTS_STANDARD_SUCCEEDED`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_TABLE_SUCCEEDED: `${BASE}#FETCH_RESULTS_TABLE_SUCCEEDED`,\n\tSN_TB_REFERENCE__FETCH_RESULTS_FAILED: `${BASE}#FETCH_RESULTS_FAILED`,\n\tSN_TB_REFERENCE__VALUE_SET: `${BASE}#VALUE_SET`,\n\tSN_TB_REFERENCE__SET_INVALID: `${BASE}#SET_INVALID`,\n\tSN_TB_REFERENCE__CLOSE_OFF: `${BASE}#CLOSE_OFF`,\n\tCHECK_VALID: `${BASE}#CHECK_VALID`,\n\tSHOW_MESSAGES: `${BASE}#SHOW_MESSAGES`,\n\tNOTIFY_VALIDITY: `${BASE}#NOTIFY_VALIDITY`,\n\tREFIT_RESULTS_PANEL: `${BASE}#REFIT_RESULTS_PANEL`,\n\tNOW_POPOVER__CONTENT_HIDDEN: 'NOW_POPOVER#CONTENT_HIDDEN',\n\tNOW_POPOVER__CONTENT_VISIBLE: 'NOW_POPOVER#CONTENT_VISIBLE',\n\tNOW_TYPEAHEAD__VALUE_SET: 'NOW_TYPEAHEAD#VALUE_SET',\n\tNOW_TYPEAHEAD__SELECTED_ITEM_SET: 'NOW_TYPEAHEAD#SELECTED_ITEM_SET',\n\tNOW_TYPEAHEAD__INTERACTION_FINISHED: 'NOW_TYPEAHEAD#INTERACTION_FINISHED'\n};\n\nexport const DEFAULT_PANEL_LABEL = t('Searching...');\nexport const FAILED_SEARCH = t('Failed to fetch results');\n\nexport const UI_REF_LIST_API = '/api/now/ui/table/:tableName/records';\nexport const TABLE_LIST_API = '/api/sn_app_eng_studio/generic/template-tables';\n\nexport const VARIANTS = {\n\tSTANDARD: 'standard-reference', // sys_id based reference\n\tLEGACY: 'legacy-reference', // uses now/ui/table api for reference\n\tTABLE: 'table-reference' // uses generic table api created in AES\n};\n\nexport const referenceQuery = `\n\tquery ($table: String!, $field: String!, $sys_id: String, $chars: String!) {\n\t\tGlideLayout_Query {\n\t  \t\treferenceDataRetriever(tableName: $table, fieldName: $field, sysId: $sys_id, chars: $chars) {\n\t\t\t\tmatchesCount\n\t\t\t\treferenceDataList {\n\t\t  \t\t\tsysId\n\t\t  \t\t\treferenceData {\n\t\t\t\t\t\tkey\n\t\t\t\t\t\tvalue\n\t\t  \t\t\t}\n\t\t\t\t}\n\t  \t\t}\n\t\t}\n  \t}  \n`;\n\nexport const TABLE_RESULT_OPTIONS = {\n\tLIMIT: 20,\n\tORDER_BY: 'label'\n};\n","module.exports = __TECTONIC__$servicenow_now_icon;","module.exports = __TECTONIC__$servicenow_ui_effect_http;","module.exports = __TECTONIC__$servicenow_now_button;","export const BEHAVIOR_NAME = 'GRID_NAVIGATION';\n\nexport const ELEMENT_LIST_TO_KEEP_ROW_FOCUS = ['SN-TB-CONFIRM-DELETE'];\n\nexport const ACTION_TYPES = {\n\tGRID_NAVIGATION__UPDATE_TABBABLES: `${BEHAVIOR_NAME}#UPDATE_TABBABLES`,\n\tGRID_NAVIGATION__ALLOW_CURRENT_TABBABLE: `${BEHAVIOR_NAME}#ALLOW_CURRENT_TABBABLE`,\n\tGRID_NAVIGATION__FOCUS_ENTER_CELL: `${BEHAVIOR_NAME}#FOCUS_ENTER_CELL`,\n\tGRID_NAVIGATION__FOCUS_EXIT_CELL: `${BEHAVIOR_NAME}#FOCUS_EXIT_CELL`,\n\tGRID_NAVIGATION__MOVE_FOCUS: `${BEHAVIOR_NAME}#MOVE_FOCUS`,\n\tGRID_NAVIGATION__RETAIN_CELL_FOCUS: `${BEHAVIOR_NAME}#RETAIN_CELL_FOCUS`,\n\tGRID_NAVIGATION__FOCUS_NEW_RECORD: `${BEHAVIOR_NAME}#FOCUS_NEW_RECORD`,\n\tGRID_NAVIGATION__TRAP_CELL_WIDGET: `${BEHAVIOR_NAME}#TRAP_CELL_WIDGET`,\n\tNOW_DROPDOWN__OPENED_SET: 'NOW_DROPDOWN#OPENED_SET',\n\tCLEAR_TRAP_CELL: `${BEHAVIOR_NAME}#CLEAR_TRAP_CELL`\n};\n","export { alerts as default } from './alerts';\n\nexport { ACTION_TYPES, ALERTS } from './constants';\n","const BASE = 'SN_TB_INPUT';\n\nexport const ACTION_TYPES = {\n\tNOW_INPUT__INPUT: 'NOW_INPUT#INPUT',\n\tFINISHED_EDIT: `${BASE}#FINISHED_EDIT`,\n\tCHECK_VALID: `${BASE}#CHECK_VALID`,\n\tSHOW_MESSAGES: `${BASE}#SHOW_MESSAGES`,\n\tNOTIFY_VALIDITY: `${BASE}#NOTIFY_VALIDITY`,\n\tVALUE_SET: `${BASE}#VALUE_SET`\n};\n\n// props\nexport const MESSAGES = 'messages';\nexport const INVALID = 'invalid';\nexport const VALUE = 'value';\n\nexport const STATUS_CRITICAL = 'critical';\nexport const STATUS_INFO_ICON = 'info-circle-outline';\n\nexport const NUMERIC_MIN_LIMIT = 0;\nexport const NUMERIC_MAX_LIMIT = 2147483647;\n","module.exports = __TECTONIC__uuid_3_4_0;","import { FieldTypeFactory } from './fieldTypes/fieldTypeFactory';\nimport { TB_PERSPECTIVES, TABLES } from '../../commons/constants';\nimport uuid from 'uuid';\nimport { SORT_ORDER_DESC, SORT_ORDER_ASC } from './constants';\nimport { TRANSACTION_ACTIONS } from '../transaction-model/constants';\nimport { isUnsavedRecord } from '../../commons/utils';\n\n/**\n * @param {Array} columns\n * @param {String} table of which column belongs\n * @returns {Array} Returns array of column definitions\n */\nexport const generateColumnDefs = (\n\tcolumns,\n\ttableInGrid,\n\thostTable,\n\torderByColumn,\n\torderByIsDescending,\n\tisTableInReadOnly\n) => {\n\treturn columns.map(column => {\n\t\tconst colType = FieldTypeFactory.getInstance(column);\n\n\t\tconst isSorted = orderByColumn === colType.name();\n\t\tconst sortOrder = isSorted\n\t\t\t? orderByIsDescending\n\t\t\t\t? SORT_ORDER_DESC\n\t\t\t\t: SORT_ORDER_ASC\n\t\t\t: null;\n\n\t\treturn {\n\t\t\tname: colType.name(),\n\t\t\tlabel: colType.label(),\n\t\t\ttextAlign: colType.textAlign(),\n\t\t\taccessor: colType.accessor(),\n\t\t\tinternalType: column.internalType,\n\t\t\tprimitiveType: column.primitiveType,\n\t\t\ticon: column.icon,\n\t\t\timage: column.image,\n\t\t\tmandatory: column.mandatory,\n\t\t\ttable: tableInGrid,\n\t\t\thostTable,\n\t\t\tisTableInReadOnly,\n\t\t\tisSorted,\n\t\t\tsortOrder,\n\t\t\tstyles: { ...colType.styles(), textAlign: colType.textAlign() }\n\t\t};\n\t});\n};\n\n/**\n * Returns cellModel object from rows and columns using rowIndex and columnIndex\n * @param {Object} obj\n * @param {Array} obj.gridRows\n * @param {Array} obj.gridColumns\n * @param {Object} obj.cellIdentity\n * @param {number} obj.cellIdentity.rowIndex\n * @param {number} obj.cellIdentity.columnIndex\n * @returns {Object}\n */\nexport const getCellModel = ({\n\tgridRows,\n\tgridColumns,\n\tcellIdentity: { rowIndex, columnIndex }\n}) => {\n\tconst columnDef = gridColumns[columnIndex];\n\tconst cellModel = gridRows[rowIndex].rowData[columnDef.name];\n\treturn cellModel;\n};\n\n/**\n * Set cell data of corresponding cell in gridRows and update in property\n * @param {Object} obj\n * @param {Array} obj.gridRows\n * @param {Array} obj.gridColumns\n * @param {Object} obj.cellIdentity\n * @param {number} obj.cellIdentity.rowIndex\n * @param {number} obj.cellIdentity.columnIndex\n * @param {Function} updateProperties\n * @param {Object} data data to add to the existing cell model\n */\nexport const setCellData = ({\n\tupdateProperties,\n\tgridRows,\n\tgridColumns,\n\tcellIdentity: { rowIndex, columnIndex },\n\tdata\n}) => {\n\tconst columnDef = gridColumns[columnIndex];\n\tconst newGridRows = gridRows.map((row, i) => {\n\t\tlet rowObj = { ...row };\n\t\tif (i === rowIndex)\n\t\t\trowObj.rowData[columnDef.name] = {\n\t\t\t\t...rowObj.rowData[columnDef.name],\n\t\t\t\t...data\n\t\t\t};\n\n\t\treturn rowObj;\n\t});\n\tupdateProperties({\n\t\tgridRows: newGridRows\n\t});\n};\n\n/**\n * Set multiple cell data of corresponding cell in gridRows and update in property\n * accepts array of data and cellIdentity\n * @param {Object} obj\n * @param {Array} obj.gridRows\n * @param {Array} obj.gridColumns\n * @param {Array.<Object>} obj.batch\n * @param {Object} obj.batch[].cellIdentity\n * @param {number} obj.batch[].cellIdentity.rowIndex\n * @param {number} obj.batch[].cellIdentity.columnIndex\n * @param {Object} obj.batch[].data\n * @param {Function} updateProperties\n */\nexport const setCellDataBatch = ({\n\tupdateProperties,\n\tgridRows,\n\tgridColumns,\n\tbatch\n}) => {\n\tconst newGridRows = gridRows.map((row, i) => {\n\t\tlet rowObj = { ...row };\n\t\tconst matches = batch.filter(item => item.cellIdentity.rowIndex === i);\n\n\t\tif (matches.length) {\n\t\t\tfor (let j = 0; j < matches.length; j++) {\n\t\t\t\tconst {\n\t\t\t\t\tcellIdentity: { columnIndex },\n\t\t\t\t\tdata\n\t\t\t\t} = matches[j];\n\t\t\t\tconst columnDef = gridColumns[columnIndex];\n\n\t\t\t\trowObj.rowData[columnDef.name] = {\n\t\t\t\t\t...rowObj.rowData[columnDef.name],\n\t\t\t\t\t...data\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn rowObj;\n\t\t}\n\t\treturn rowObj;\n\t});\n\n\tupdateProperties({\n\t\tgridRows: newGridRows\n\t});\n};\n\n/**\n * Returns fieldModel object from rows and columns using rowIndex and columnIndex\n * Ex: { column_label: {value: 'abc' } }\n * @param {Object} obj\n * @param {Array} obj.gridRows\n * @param {Array} obj.gridColumns\n * @param {Object} obj.cellIdentity\n * @param {number} obj.cellIdentity.rowIndex\n * @param {number} obj.cellIdentity.columnIndex\n * @returns {Object}\n */\nexport const getFieldModel = ({\n\tgridRows,\n\tgridColumns,\n\tcellIdentity: { rowIndex, columnIndex }\n}) => {\n\tconst columnDef = gridColumns[columnIndex];\n\tconst cellModel = gridRows[rowIndex].rowData[columnDef.name];\n\treturn { [columnDef.name]: cellModel };\n};\n\n/**\n * Returns RowModel object from rows using rowIndex\n * @param {Object} obj\n * @param {Array} obj.gridRows\n * @param {Object} obj.cellIdentity\n * @param {number} obj.cellIdentity.rowIndex\n * @returns {Object}\n */\nexport const getRowModel = ({ gridRows, cellIdentity: { rowIndex } }) =>\n\tgridRows[rowIndex];\n\n/**\n * Returns rowIdentifier (Ex: sysId) for a rows using rowIndex\n * @param {Object} obj\n * @param {Array} obj.gridRows\n * @param {Object} obj.cellIdentity\n * @param {number} obj.cellIdentity.rowIndex\n * @returns {Object}\n */\nexport const getRowIdentifier = ({ gridRows, cellIdentity: { rowIndex } }) =>\n\tgridRows[rowIndex].sysId;\n\n// TODO: use when delete control story come. add this transform tableColumns in gridTransform\nexport const addControlsAsColumns = columns => {\n\tconst CONTROLS = [\n\t\t{\n\t\t\tlabel: 'Delete',\n\t\t\tname: '_control_delete',\n\t\t\tinternalType: '_control_delete',\n\t\t\tprimitiveType: '_control_delete',\n\t\t\ticon: 'trash-outline'\n\t\t}\n\t];\n\treturn CONTROLS.concat(columns);\n};\n\n/**\n * returns hostTable and table in grid\n * for FRV both are different\n * @param {string} perspective\n * @param {object} tableMetaData\n */\nexport const getTablesInGrid = (perspective, tableMetaData) => {\n\tif (perspective === TB_PERSPECTIVES.VIEW_FIELD_ROW)\n\t\treturn {\n\t\t\ttableInGrid: TABLES.DICTIONARY,\n\t\t\thostTable: tableMetaData.name\n\t\t};\n\telse\n\t\treturn {\n\t\t\ttableInGrid: tableMetaData.name,\n\t\t\thostTable: tableMetaData.name\n\t\t};\n};\n\nexport const getEmptyObjectCopy = (gridColumns, tableMetaData) => {\n\tlet objectStructure = {};\n\tlet fieldInfo = {\n\t\tcanWrite: false,\n\t\tdisplayValue: tableMetaData.name,\n\t\tvalue: tableMetaData.name\n\t};\n\tlet rowDataObj = {};\n\tlet prop = {};\n\tfor (prop in gridColumns) {\n\t\trowDataObj[gridColumns[prop].name] = {\n\t\t\tvalue: '',\n\t\t\tdisplayValue: '',\n\t\t\tcanWrite: gridColumns[prop].name.startsWith('sys_') ? false : true\n\t\t};\n\t}\n\tlet additionalRowData = { name: fieldInfo };\n\tobjectStructure['additionalRowData'] = additionalRowData;\n\tobjectStructure['canDelete'] = true;\n\tobjectStructure['canWrite'] = true;\n\tobjectStructure['rowData'] = rowDataObj;\n\tobjectStructure['sysId'] = `-1${uuid.v4()}`;\n\treturn objectStructure;\n};\n\nexport const getColumnIndex = (gridColumns, derivedField) => {\n\treturn gridColumns.findIndex(column => {\n\t\treturn column.name === derivedField;\n\t});\n};\n\nexport const mergeWithGridTransactions = (records, gridTransactions) => {\n\tif (!Object.keys(gridTransactions).length) return records;\n\n\t// merge updated & deleted transactions\n\tlet mergedRecords = records\n\t\t.filter(record => !isUnsavedRecord(record.sysId))\n\t\t.map(record => {\n\t\t\tconst gridTransaction = gridTransactions[record.sysId];\n\t\t\tif (!gridTransaction) return record;\n\n\t\t\tconst { action, inputs } = gridTransaction;\n\t\t\tswitch (action) {\n\t\t\t\tcase TRANSACTION_ACTIONS.GRID_ROW_MODIFIED: {\n\t\t\t\t\tconst recordObj = { ...record };\n\t\t\t\t\trecordObj.rowData = {\n\t\t\t\t\t\t...recordObj.rowData,\n\t\t\t\t\t\t...inputs\n\t\t\t\t\t};\n\t\t\t\t\treturn recordObj;\n\t\t\t\t}\n\t\t\t\tcase TRANSACTION_ACTIONS.GRID_ROW_DELETED:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t// add new records at the end of the aray\n\tObject.keys(gridTransactions).forEach(sysId => {\n\t\tconst { action, inputs } = gridTransactions[sysId];\n\t\tif (action === TRANSACTION_ACTIONS.GRID_ROW_ADDED)\n\t\t\tmergedRecords.push({ ...inputs });\n\t});\n\n\treturn mergedRecords;\n};\n\nexport const getColumnLabel = (name, gridColumns) => {\n\tconst match = gridColumns.find(item => item.name === name);\n\tif (match) return match.label;\n\treturn '';\n};\n\nexport const getFieldLabel = (label, name) => {\n\treturn label && name ? `${label}[${name}]` : label ? label : '';\n};\n\n/**\n * Note: Re-visit if personalize columns implemented\n * @param {object} record - record a.k.a entry in grid model\n * @param {string} fieldName\n * @param {string} value - value to be extracted defaults to value\n */\nexport const getFieldValueFromRecord = (record, fieldName, value = 'value') =>\n\trecord.rowData[fieldName][value];\n\nexport const getTableUrlForTableBuilder = (sysId, transactionScope) => {\n\tconst stackName = `${uuid.v4()}_bottomless`;\n\treturn `/now/tablebuilder/table/id/${sysId}?\n\t\t\tsysparm_referring_url=now%2Ftablebuilder%2Ftable%2Fid%2F${sysId}&\n\t\t\tsysparm_nameofstack=${stackName}&\n\t\t\tsysparm_transaction_scope=${transactionScope}&\n\t\t\tsysparm_nofocus=true`;\n};\n\nexport const isReferenceUpdated = (gridRows, rowIndex, gridTransactions) => {\n\tconst recordSysId = gridRows[rowIndex].sysId;\n\tconst isNewRecord = isUnsavedRecord(recordSysId);\n\tconst txn = gridTransactions[recordSysId];\n\treturn (\n\t\ttxn &&\n\t\t(isNewRecord ? txn.inputs.rowData.reference : txn.inputs.reference)\n\t);\n};\n","export const BEHAVIOR_NAME = 'TRANSACTION_MODEL';\n\nexport const ACTION_TYPES = {\n\tTRANSACTION_MODEL__UI_TRANSACTION_LOG: `${BEHAVIOR_NAME}#UI_TRANSACTION_LOG`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_ADD: `${BEHAVIOR_NAME}#UI_TRANSACTION_ADD`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_UPDATE: `${BEHAVIOR_NAME}#UI_TRANSACTION_UPDATE`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_UPDATE_BATCH: `${BEHAVIOR_NAME}#UI_TRANSACTION_UPDATE_BATCH`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_PRUNE: `${BEHAVIOR_NAME}#UI_TRANSACTION_PRUNE`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK: `${BEHAVIOR_NAME}#UI_TRANSACTION_DIRTY_CHECK`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_NOTIFY_STUDIO: `${BEHAVIOR_NAME}#UI_TRANSACTION_NOTIFY_STUDIO`,\n\tTRANSACTION_MODEL__UI_TRANSACTIONS_REFURBISH: `${BEHAVIOR_NAME}#UI_TRANSACTIONS_REFURBISH`,\n\tTRANSACTION_MODEL__UI_TRANSACTION_DELETE: `${BEHAVIOR_NAME}#UI_TRANSACTION_DELETE`\n};\n\nexport const TRANSACTION_ACTIONS = {\n\tGRID_ROW_ADDED: 'GRID_ROW_ADDED',\n\tGRID_ROW_MODIFIED: 'GRID_ROW_MODIFIED',\n\tGRID_ROW_DELETED: 'GRID_ROW_DELETED'\n};\n\n// behavior props\nexport const IS_TRANSACTION_MODEL_DIRTY = 'isTransactionModelDirty';\nexport const GRID_TRANSACTIONS = 'gridTransactions';\nexport const CHOICE_TRANSACTIONS = 'choiceTransactions';\n","import { TABLE_COLUMNS } from '../../commons/constants';\n\nexport const BEHAVIOR_NAME = 'TABLE_SAVE';\n\nexport const MANDATORY_FIELDS = [\n\tTABLE_COLUMNS.COLUMN_LABEL,\n\tTABLE_COLUMNS.ELEMENT,\n\tTABLE_COLUMNS.INTERNAL_TYPE\n];\n\nexport const ACTION_TYPES = {\n\tTABLE_SAVE__SAVE_INITIATED: `${BEHAVIOR_NAME}#SAVE_INITIATED`,\n\tTABLE_SAVE__SAVE_PROCESS: `${BEHAVIOR_NAME}#SAVE_PROCESS`,\n\tTABLE_SAVE__SAVE_COMPLETED: `${BEHAVIOR_NAME}#SAVE_COMPLETED`\n};\n\n// behavior props\nexport const TB_SAVE_IS_SAVE_IN_PROGRESS = 'isTableSaveInProgress';\nexport const TB_SAVE_IS_SAVE_ERROR = 'isTableSaveError';\nexport const TB_SAVE_SAVE_ERRORS = 'tableSaveErrors';\nexport const TB_SAVE_SAVE_RESULT = 'tableSaveResult';\n\n// API paths\nexport const BASE_UPDATE_API = '/api/now/table';\n\n// API methods\nexport const METHOD_POST = 'post';\nexport const METHOD_PUT = 'put';\n","const BASE = 'SN_TB_CHOICE';\n\nexport const DIRECTION_UP = 'UP';\nexport const DIRECTION_DOWN = 'DOWN';\nexport const CHOICE_SEQ_INTERVAL = 10;\n\nexport const CHOICE_LABEL = 'label';\nexport const CHOICE_VALUE = 'value';\nexport const NEW_CHOICE_INPUT = 'newChoiceInput';\n\nexport const VARIANT_EDITABLE = 'editable';\nexport const VARIANT_VIEW = 'view';\n\n// properties\nexport const CHOICES = 'choices';\nexport const CHOICE_TYPE = 'choiceType';\n\nexport const ACTION_TYPES = {\n\tNOW_INPUT__INPUT: 'NOW_INPUT#INPUT',\n\tNOW_INPUT__VALUE_SET: 'NOW_INPUT#VALUE_SET',\n\tNOW_INPUT__INVALID_SET: 'NOW_INPUT#INVALID_SET',\n\tNOW_SELECT__SELECTED_ITEM_SET: 'NOW_SELECT#SELECTED_ITEM_SET',\n\tADD_CHOICE: `${BASE}#ADD_CHOICE`,\n\tREORDER_CHOICE: `${BASE}#REORDER_CHOICE`,\n\tDELETE_CHOICE: `${BASE}#DELETE_CHOICE`,\n\tCHOICE_SET_CHANGED: `${BASE}#CHOICE_SET_CHANGED`,\n\tCHECK_VALID: `${BASE}#CHECK_VALID`,\n\tNOTIFY_VALIDITY: `${BASE}#NOTIFY_VALIDITY`,\n\tFINISHED_EDIT: `${BASE}#FINISHED_EDIT`,\n\tVALUE_SET: `${BASE}#VALUE_SET`,\n\tSCROLL_BOTTOM_CHOICE_LIST: `${BASE}#SCROLL_BOTTOM_CHOICE_LIST`\n};\n","import { t } from 'sn-translate';\nimport { formatNumberWithCommas } from '../../commons/utils';\nimport { ERROR_ALERT } from '../../commons/constants';\n\nexport const GET_API_PATH = '/api/sn_table_builder/app/table_properties/:sysId';\nexport const BATCH_API_PATH = '/api/now/v1/batch';\n\nexport const PROPERTY_INFO_MESSAGES = {\n\tlabel: t('The display name for this table that can be localized'),\n\tname: t('The internal name of the table that cannot later be changed'),\n\tis_extendable: t('Allow other tables to extend this table'),\n\tauto_number: t('Define auto number'),\n\tsuper_class: t('Table this table inherits fields from'),\n\tprefix: t(\n\t\t'Characters added to the beginning of the number to differentiate tables'\n\t),\n\tnumber: t('Starting number for any counter based on this numbering scheme'),\n\tmaximum_digits: t(\n\t\t'Number of digits for the number, zero (0) padded from the left.  Set value to zero (0) for no padding.'\n\t),\n\taccessible_from: (\n\t\t<div>\n\t\t\t{t(\n\t\t\t\t`Select whether you want this table accessible from only your application scope or from all application scopes.`\n\t\t\t)}\n\t\t\t<br />\n\t\t\t{t(\n\t\t\t\t`Choosing the latter will allow access controls to this table from all application scopes.`\n\t\t\t)}\n\t\t\t<br />\n\t\t\t<a\n\t\t\t\thref='https://docs.servicenow.com/bundle/quebec-application-development/page/build/applications/concept/c_ApplicationScope.html'\n\t\t\t\ttarget='_blank'\n\t\t\t>\n\t\t\t\t{t('Learn more about application scopes.')}\n\t\t\t</a>\n\t\t</div>\n\t),\n\taccess_control: (\n\t\t<div>\n\t\t\t{t(\n\t\t\t\t`Determine permissions for this table. These permissions controls the access to table records via scripts from other scopes.`\n\t\t\t)}\n\t\t\t<br />\n\t\t\t{t(\n\t\t\t\t`It will apply to all users given permission to access your chosen application scope. You can modify application roles in Security within App Engine Studio.`\n\t\t\t)}\n\t\t\t<br />\n\t\t\t<a\n\t\t\t\thref='https://developer.servicenow.com/dev.do#!/learn/learning-plans/quebec/new_to_servicenow/app_store_learnv2_securingapps_quebec_application_access_database_settings'\n\t\t\t\ttarget='_blank'\n\t\t\t>\n\t\t\t\t{t('Learn more about application access controls.')}\n\t\t\t</a>\n\t\t</div>\n\t)\n};\n\nexport const AUTO_NUMBER_DEFAULTS = {\n\tNUMBER: 1000,\n\tMAXIMUM_DIGITS: 7\n};\nexport const PREFIX_MAX_LENGTH = 40;\nexport const MAXIMUM_DIGITS_UPPER_LIMIT = 15;\nexport const BASE_NUMBER_MAX_LENGTH = 14;\nexport const BASE_NUMBER_UPPER_LIMIT = 2147483647;\nexport const TRANSFORM_FIELDS = ['number'];\nexport const VALIDATION_FIELDS = [\n\t'label',\n\t'auto_number',\n\t'prefix',\n\t'number',\n\t'maximum_digits'\n];\n\nexport const TABS = {\n\tgeneral_info: { id: 'general_info', label: t('General Information') },\n\taccess: { id: 'access', label: t('Access') }\n};\n\nexport const VALIDATION_MESSAGES = {\n\tnumber: {\n\t\tstatus: ERROR_ALERT.STATUS,\n\t\ticon: ERROR_ALERT.ICON,\n\t\tcontent: t(\n\t\t\t'Max value allowed is {0}',\n\t\t\tformatNumberWithCommas(BASE_NUMBER_UPPER_LIMIT)\n\t\t)\n\t}\n};\n\nconst BASE = 'TABLE_PROPERTIES';\n\nexport const APPLICATION_ACCESS_CONTROLS = [\n\t'create_access',\n\t'read_access',\n\t'update_access',\n\t'delete_access',\n\t'ws_access'\n];\n\nexport const ACTION_TYPES = {\n\tTABLE_PROPERTIES__MODAL_CLOSED: `${BASE}#MODAL_CLODED`,\n\tTABLE_PROPERTIES__SET_AUTO_NUMBER_DEFAULTS: `${BASE}#SET_AUTO_NUMBER_DEFAULTS`,\n\tTABLE_PROPERTIES__SET_AUTO_NUMBER_PREVIEW: `${BASE}#SET_AUTO_NUMBER_PREVIEW`,\n\tTABLE_PROPERTIES__VALIDATE_FORM: `${BASE}#VALIDATE_FORM`,\n\n\tNOW_MODAL_OPENED_SET: 'NOW_MODAL#OPENED_SET',\n\tNOW_TABS__SELECTED_ITEM_SET: 'NOW_TABS#SELECTED_ITEM_SET',\n\tNOW_INPUT__VALUE_SET: 'NOW_INPUT#VALUE_SET',\n\tNOW_INPUT__INVALID_SET: 'NOW_INPUT#INVALID_SET',\n\tNOW_CHECKBOX__CHECKED_SET: 'NOW_CHECKBOX#CHECKED_SET',\n\tNOW_BUTTON_ICONIC__CLICKED: 'NOW_BUTTON_ICONIC#CLICKED',\n\tNOW_SELECT_SELECTED_ITEM_SET: 'NOW_SELECT#SELECTED_ITEM_SET',\n\n\tTABLE_PROPERTIES__FETCH_INITIATED: `${BASE}#FETCH_INITIATED`,\n\tTABLE_PROPERTIES__FETCH_STARTED: `${BASE}#FETCH_STARTED`,\n\tTABLE_PROPERTIES__FETCH_SUCCEEDED: `${BASE}#FETCH_SUCCEEDED`,\n\tTABLE_PROPERTIES__FETCH_FAILED: `${BASE}#FETCH_FAILED`,\n\n\tTABLE_PROPERTIES__UPDATE_REQUESTED: `${BASE}#UPDATE_REQUESTED`,\n\tTABLE_PROPERTIES__UPDATE_INITIATED: `${BASE}#UPDATE_INITIATED`,\n\tTABLE_PROPERTIES__UPDATE_STARTED: `${BASE}#UPDATE_STARTED`,\n\tTABLE_PROPERTIES__UPDATE_SUCCEEDED: `${BASE}#UPDATE_SUCCEEDED`,\n\tTABLE_PROPERTIES__UPDATE_FAILED: `${BASE}#UPDATE_FAILED`,\n\tAUTO_NUMBER__INSERT_INITIATED: `${BASE}#AUTO_NUMBER_INSERT_INITIATED`\n};\n","export const BEHAVIOR_NAME = 'FILTER_MODEL';\n\n// behavior props\nexport const SHOW_NON_EXTENDED = 'showNonExtended';\nexport const ENABLE_NON_EXTENDED_FILTER = 'enableNonExtendedFilter';\n\nexport const ACTION_TYPES = {\n\tNON_EXTENDED_FILTER_VALUE_SET: `${BEHAVIOR_NAME}#NON_EXTENDED_FILTER_VALUE_SET`,\n\tENABLE_NON_EXTENDED_FILTER: `${BEHAVIOR_NAME}#ENABLE_NON_EXTENDED_FILTER`,\n\tNOW_CHECKBOX__CHECKED_SET: 'NOW_CHECKBOX#CHECKED_SET'\n};\n\nexport const FILTER_NON_EXTENDED = 'filter-non-extended';\n","export { transactionModel as default } from './transaction-model';\nexport {\n\tACTION_TYPES,\n\tTRANSACTION_ACTIONS,\n\tGRID_TRANSACTIONS,\n\tIS_TRANSACTION_MODEL_DIRTY\n} from './constants';\n","module.exports = __TECTONIC__$servicenow_now_modal;","export const BEHAVIOR_NAME = 'USER_DATA';\n\nexport const ACTION_TYPES = {\n\tUSER_DATA__UPDATE_PREF: `${BEHAVIOR_NAME}#UPDATE_PREF`,\n\tUSER_DATA__PREF_UPDATE_STARTED: `${BEHAVIOR_NAME}#PREF_UPDATE_STARTED`,\n\tUSER_DATA__PREF_UPDATE_SUCCEEDED: `${BEHAVIOR_NAME}#PREF_UPDATE_SUCCEEDED`,\n\tUSER_DATA__PREF_UPDATE_FAILED: `${BEHAVIOR_NAME}#PREF_UPDATE_FAILED`,\n\tUSER_DATA__PREF_UPDATE_ERROR: `${BEHAVIOR_NAME}#PREF_UPDATE_ERROR`\n};\n","export class FieldType {\n\tconstructor(column) {\n\t\tthis.column = column;\n\t}\n\n\tname() {\n\t\treturn this.column.name;\n\t}\n\n\tlabel() {\n\t\treturn this.column.label;\n\t}\n\n\ttextAlign() {\n\t\treturn 'start';\n\t}\n\n\taccessor() {\n\t\treturn (entry, columnDef) => {\n\t\t\tconst cellData = entry.rowData[columnDef.name];\n\t\t\treturn cellData ? cellData.displayValue : '';\n\t\t};\n\t}\n\n\tstyles() {\n\t\treturn {};\n\t}\n}\n","export const BEHAVIOR_NAME = 'TB_ALERTS';\n\nexport const ACTION_TYPES = {\n\tTB_ALERTS__ADD_ALERTS: `${BEHAVIOR_NAME}#ADD_ALERTS`,\n\tTB_ALERTS__CLEAR_ALERTS: `${BEHAVIOR_NAME}#CLEAR_ALERTS`,\n\tTB_ALERTS__SHOW_SESSION_ALERTS: `${BEHAVIOR_NAME}#SHOW_SESSION_ALERTS`,\n\tTB_ALERTS__SESSION_ALERTS_REQUESTED: `${BEHAVIOR_NAME}#SESSION_ALERTS_REQUESTED`,\n\tTB_ALERTS__SESSION_ALERTS_SUCCEEDED: `${BEHAVIOR_NAME}#SESSION_ALERTS_SUCCEEDED`,\n\tNOW_ALERT_LIST__ITEMS_SET: 'NOW_ALERT_LIST#ITEMS_SET'\n};\n\n// behavior props\nexport const ALERTS = 'alerts';\n\n// API path\nexport const API_PATH = '/api/now/session/notification';\n","export { tableInitializer as default } from './table-initializer';\nexport {\n\tTB_SYS_ID,\n\tTB_PERSPECTIVE,\n\tACTION_TYPES,\n\tTB_IS_INPUT_READY,\n\tTB_IS_IN_AES,\n\tTB_TRANSACTION_SCOPE\n} from './constants';\n","export const BEHAVIOR_NAME = 'TABLE_INITIALIZER';\n\n// BEHAVIOR_PROPS\nexport const TB_SYS_ID = 'sysId';\nexport const TB_PERSPECTIVE = 'perspective';\nexport const TB_IS_INPUT_READY = 'isInputReady';\nexport const TB_TRANSACTION_SCOPE = 'transactionScope';\nexport const TB_IS_IN_AES = 'isInAppEngineStudio';\n\n// URL_PARTS\nexport const TB_NAMESPACE =\n\tprocess.env.NODE_ENV === 'development' ? '' : '/now/tablebuilder';\nexport const TB_ROUTES = [{ path: '/table/id/:sysId' }];\n\n// BEHAVIOR_ACTIONS\nexport const ACTION_TYPES = {\n\tTABLE_INITIALIZER__ROUTE_MATCH_FOUND: `${BEHAVIOR_NAME}#ROUTE_MATCH_FOUND`,\n\tTABLE_INITIALIZER__ROUTE_MATCH_NOT_FOUND: `${BEHAVIOR_NAME}#ROUTE_MATCH_NOT_FOUND`,\n\tTABLE_INITIALIZER__INIT: `${BEHAVIOR_NAME}#INIT`\n};\n\nexport const DEFAULT_SCOPE = 'global';\n","export const BEHAVIOR_NAME = 'RECORD_WATCHER';\n\nexport const OPERATIONS = {\n\tDELETE: 'delete'\n};\n\nexport const ACTION_TYPES = {\n\tRECORD_WATCHER__DO_SUBSCRIBE: `${BEHAVIOR_NAME}#DO_SUBSCRIBE`,\n\tRECORD_WATCHER__MESSAGE_RECEIVED: `${BEHAVIOR_NAME}#MESSAGE_RECEIVED`,\n\tRECORD_WATCHER__RECORD_DELETED: `${BEHAVIOR_NAME}#RECORD_DELETED`\n};\n","module.exports = __TECTONIC__$servicenow_now_loader;","const focusTrap = new Map();\n\nconst defaultConfig = {\n\tmoveFocusInsideTrap: true,\n\tfirstElement: null,\n\tlastElement: null\n};\n\n// TODO: Will add more tabbable selectors progressively\nexport const TABBABLES_SELECTOR = [\n\t'input',\n\t'a[href]',\n\t'button',\n\t'.tabbable'\n].join();\nexport const TRAP_CELL_WIDGET_TAGS = ['NOW-DROPDOWN'];\n\nexport const findFirstTabbableElement = /* istanbul ignore next: not being used as of now */ (\n\troot = document\n) => {\n\treturn findTabbableElement(true, root);\n};\n\nexport const findLastTabbableElement = /* istanbul ignore next: not being used as of now */ (\n\troot = document\n) => {\n\treturn findTabbableElement(false, root);\n};\n\nexport const findTabbableElement = /* istanbul ignore next: not being used as of now */ (\n\tfindFirst = true,\n\troot = document\n) => {\n\tif (!root) return false;\n\n\tif (root.shadowRoot) root = root.shadowRoot;\n\n\tlet tabbies = [...root.querySelectorAll(TABBABLES_SELECTOR)];\n\tif (!findFirst) tabbies = tabbies.reverse();\n\n\tlet index = 0;\n\tlet result = undefined;\n\n\t// TODO: Maybe change code style here\n\twhile (!result && index < tabbies.length) {\n\t\tconst tabby = tabbies[index++];\n\t\tconst possibleResult = tabby.shadowRoot\n\t\t\t? findTabbableElement(findFirst, tabby.shadowRoot)\n\t\t\t: tabby;\n\t\tif (possibleResult && isTabbable(possibleResult))\n\t\t\tresult = possibleResult;\n\t}\n\treturn result;\n};\n\nexport const isTabbable = /* istanbul ignore next: not being used as of now */ node => {\n\tif (!node) return false;\n\tif (node.disabled) return false;\n\tif (node.offsetParent === null) return false;\n\n\tif (getComputedStyle(node).visibility === 'hidden') return false;\n\tif (node.tagName === 'INPUT' && node.type === 'hidden') return false;\n\tif (getTabIndex(node) === -1) return false;\n\n\treturn true;\n};\n\nexport const findActiveElement = /* istanbul ignore next: can't get activeElement in unit testing */ (\n\troot = document\n) => {\n\tconst activeElement = root.activeElement;\n\tif (activeElement && activeElement.shadowRoot) {\n\t\treturn findActiveElement(activeElement.shadowRoot) || activeElement;\n\t}\n\treturn activeElement;\n};\n\nexport const elementHasActiveElement = /* istanbul ignore next: can't get activeElement in unit testing */ (\n\tnode,\n\troot = document\n) => {\n\tconst activeElement = root.activeElement;\n\tif (!activeElement) return false;\n\n\tif (node == activeElement || node.contains(activeElement)) return true;\n\n\tif (activeElement.shadowRoot)\n\t\treturn elementHasActiveElement(node, activeElement.shadowRoot);\n\n\treturn false;\n};\n\nexport const getTabIndex = node => {\n\tconst tabIndex = parseInt(node.getAttribute('tabindex'), 10);\n\tif (!isNaN(tabIndex)) return tabIndex;\n\treturn node.contentEditable === 'true' ? 0 : node.tabIndex;\n};\n\nexport const deactivateFocusTrap = id => {\n\tconst tabbyTrapEntry = focusTrap.get(id);\n\n\tif (!tabbyTrapEntry) return false;\n\n\tconst { lastKeydown, firstKeydown, firstTabby, lastTabby } = tabbyTrapEntry;\n\tfirstTabby.removeEventListener('keydown', firstKeydown);\n\tlastTabby.removeEventListener('keydown', lastKeydown);\n\n\treturn focusTrap.delete(id);\n};\n\nexport const activateFocusTrap = (id, node, config = {}) => {\n\tdeactivateFocusTrap(id);\n\tconfig = { ...defaultConfig, ...config };\n\tconst { moveFocusInsideTrap, firstElement, lastElement } = config;\n\tconst firstTabby =\n\t\tfirstElement ||\n\t\t/* istanbul ignore next: this won't be called */ findFirstTabbableElement(\n\t\t\tnode\n\t\t);\n\tconst lastTabby =\n\t\tlastElement ||\n\t\t/* istanbul ignore next: this won't be called */ findLastTabbableElement(\n\t\t\tnode\n\t\t);\n\n\tif (moveFocusInsideTrap && !elementHasActiveElement(node))\n\t\tfirstTabby.focus();\n\n\t/*istanbul ignore next:  this callback cannot be invoked in unit test */\n\tconst firstKeydown = evt => {\n\t\tconst { key, shiftKey } = evt;\n\t\tif (key === 'Tab' && shiftKey) {\n\t\t\tevt.preventDefault();\n\t\t\tlastTabby.focus();\n\t\t}\n\t};\n\n\t/*istanbul ignore next:  this callback cannot be invoked in unit test */\n\tconst lastKeydown = evt => {\n\t\tconst { key, shiftKey } = evt;\n\t\tif (key === 'Tab' && !shiftKey) {\n\t\t\tevt.preventDefault();\n\t\t\tfirstTabby.focus();\n\t\t}\n\t};\n\n\tfirstTabby.addEventListener('keydown', firstKeydown);\n\tlastTabby.addEventListener('keydown', lastKeydown);\n\n\tconst tabbyTrapEntry = {\n\t\tconfig,\n\t\tnode,\n\t\tfirstTabby,\n\t\tlastTabby,\n\t\tfirstKeydown,\n\t\tlastKeydown\n\t};\n\n\treturn focusTrap.set(id, tabbyTrapEntry);\n};\n","import {\n\tTB_SYS_ID,\n\tTB_PERSPECTIVE,\n\tTB_IS_INPUT_READY,\n\tTB_TRANSACTION_SCOPE,\n\tTB_IS_IN_AES\n} from '../../behaviors/table-initializer';\nimport {\n\tTBS_DATA_COLUMNS,\n\tTBS_DATA_IS_ERROR,\n\tTBS_DATA_IS_FETCHING,\n\tIS_TBS_DATA_FETCHED,\n\tTBS_DATA_META,\n\tIS_TABLE_IN_READ_ONLY,\n\tSHOW_WELCOME_SCREEN\n} from '../../behaviors/table-structure-data';\nimport {\n\tGRID_COLUMNS,\n\tGRID_ROWS,\n\tGRID_CURRENT_PAGE,\n\tGRID_PAGE_SIZE,\n\tGRID_RECORD_COUNT,\n\tIS_GRID_DATA_FETCHING,\n\tIS_GRID_MODEL_READY,\n\tIS_GRID_DATA_FETCHED,\n\tIS_GRID_DATA_ERROR,\n\tNEW_ROW_ADDED,\n\tROW_DELETED\n} from '../../behaviors/grid-model';\nimport {\n\tGRID_TRANSACTIONS,\n\tIS_TRANSACTION_MODEL_DIRTY\n} from '../../behaviors/transaction-model';\nimport { ALERTS } from '../../behaviors/alerts';\nimport {\n\tTB_SAVE_IS_SAVE_ERRORS,\n\tTB_SAVE_IS_SAVE_IN_PROGRESS,\n\tTB_SAVE_SAVE_ERROR,\n\tTB_SAVE_SAVE_RESULT\n} from '../../behaviors/table-save';\nimport {\n\tCHOICE_TYPES,\n\tGRID_LOADER\n} from '../../behaviors/grid-model/constants';\nimport {\n\tSHOW_NON_EXTENDED,\n\tENABLE_NON_EXTENDED_FILTER\n} from '../../behaviors/filter-model/constants';\n\nexport const TB_PROVIDER_ID = 'TB_PROVIDER_ROOT';\n\nconst assignProvider = key => `@${TB_PROVIDER_ID}/${key}`;\n\nexport const TB_PROVIDER_PROPERTIES = {\n\t// table-initializer behavior properties\n\t[TB_SYS_ID]: assignProvider(TB_SYS_ID),\n\t[TB_PERSPECTIVE]: assignProvider(TB_PERSPECTIVE),\n\t[TB_IS_INPUT_READY]: assignProvider(TB_IS_INPUT_READY),\n\t[TB_TRANSACTION_SCOPE]: assignProvider(TB_TRANSACTION_SCOPE),\n\t[TB_IS_IN_AES]: assignProvider(TB_IS_IN_AES),\n\n\t// table-structure-data behavior properties\n\t[TBS_DATA_IS_FETCHING]: assignProvider(TBS_DATA_IS_FETCHING),\n\t[TBS_DATA_IS_ERROR]: assignProvider(TBS_DATA_IS_ERROR),\n\t[IS_TBS_DATA_FETCHED]: assignProvider(IS_TBS_DATA_FETCHED),\n\t[TBS_DATA_META]: assignProvider(TBS_DATA_META),\n\t[TBS_DATA_COLUMNS]: assignProvider(TBS_DATA_COLUMNS),\n\t[IS_TABLE_IN_READ_ONLY]: assignProvider(IS_TABLE_IN_READ_ONLY),\n\t[SHOW_WELCOME_SCREEN]: assignProvider(SHOW_WELCOME_SCREEN),\n\n\t// grid-model behavior properties\n\t[IS_GRID_DATA_FETCHING]: assignProvider(IS_GRID_DATA_FETCHING),\n\t[IS_GRID_MODEL_READY]: assignProvider(IS_GRID_MODEL_READY),\n\t[IS_GRID_DATA_FETCHED]: assignProvider(IS_GRID_DATA_FETCHED),\n\t[IS_GRID_DATA_ERROR]: assignProvider(IS_GRID_DATA_ERROR),\n\t[GRID_COLUMNS]: assignProvider(GRID_COLUMNS),\n\t[GRID_ROWS]: assignProvider(GRID_ROWS),\n\t[GRID_CURRENT_PAGE]: assignProvider(GRID_CURRENT_PAGE),\n\t[CHOICE_TYPES]: assignProvider(CHOICE_TYPES),\n\t[GRID_PAGE_SIZE]: assignProvider(GRID_PAGE_SIZE),\n\t[GRID_RECORD_COUNT]: assignProvider(GRID_RECORD_COUNT),\n\t[NEW_ROW_ADDED]: assignProvider(NEW_ROW_ADDED),\n\t[ROW_DELETED]: assignProvider(ROW_DELETED),\n\t[GRID_LOADER]: assignProvider(GRID_LOADER),\n\n\t// transaction-model properties\n\t[GRID_TRANSACTIONS]: assignProvider(GRID_TRANSACTIONS),\n\t[IS_TRANSACTION_MODEL_DIRTY]: assignProvider(IS_TRANSACTION_MODEL_DIRTY),\n\n\t// alerts properties\n\t[ALERTS]: assignProvider(ALERTS),\n\n\t// table-save properties\n\t[TB_SAVE_SAVE_RESULT]: assignProvider(TB_SAVE_SAVE_RESULT),\n\t[TB_SAVE_SAVE_ERROR]: assignProvider(TB_SAVE_SAVE_ERROR),\n\t[TB_SAVE_IS_SAVE_ERRORS]: assignProvider(TB_SAVE_IS_SAVE_ERRORS),\n\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: assignProvider(TB_SAVE_IS_SAVE_IN_PROGRESS),\n\n\t// filter-model\n\t[SHOW_NON_EXTENDED]: assignProvider(SHOW_NON_EXTENDED),\n\t[ENABLE_NON_EXTENDED_FILTER]: assignProvider(ENABLE_NON_EXTENDED_FILTER)\n};\n","import { TABLE_COLUMNS } from '../../commons/constants';\nconst BASE = 'SN_TB_TYPE_EDIT';\n\nexport const ACTION_TYPES = {\n\tSN_TB_TYPE_EDIT__SET_DEPENDENT: `${BASE}#SET_DEPENDENT`,\n\tSN_TB_TYPE_EDIT__FINISHED_EDIT: `${BASE}#FINISHED_EDIT`,\n\tSN_TB_TYPE_EDIT__VALUES_SET: `${BASE}#VALUES_SET`,\n\tSN_TB_TYPE_EDIT__CLOSE_OFF: `${BASE}#CLOSE_OFF`,\n\tSN_TB_TYPE_EDIT__SET_DEFAULT_MAX_LENGTH: `${BASE}#SET_DEFAULT_MAX_LENGTH`\n};\n\nexport const DEFAULT_MAX_LENGTH = 40;\n\n/**\n * map of type to the dependent fields\n */\nexport const DEPENDENT_WHITE_LIST = {\n\tstring: [TABLE_COLUMNS.MAX_LENGTH],\n\treference: [TABLE_COLUMNS.REFERENCE, TABLE_COLUMNS.MAX_LENGTH],\n\tchoice: [TABLE_COLUMNS.CHOICE]\n};\n\nexport const TYPE_NUMBER = 'number';\n","module.exports = __TECTONIC__$servicenow_now_input;","import { t } from 'sn-translate';\n\nconst BASE = 'SN_TB_SELECT';\n\nexport const ACTION_TYPES = {\n\tNOW_SELECT_SELECTED_ITEM_SET: 'NOW_SELECT#SELECTED_ITEM_SET',\n\tVALUE_SET: `${BASE}#VALUE_SET`\n};\n\nexport const NONE_OPTION_ID = 'none';\nexport const NONE_OPTION_LABEL = t('-- Select --');\nexport const SELECT_DROPDOWN_LIST_IDENTIFIER =\n\t'now-dropdown-list-item-container';\n\n// prop\nexport const ITEMS = 'items';\n\nexport const DEFAULT_OPTION = {\n\tid: NONE_OPTION_ID,\n\tlabel: NONE_OPTION_LABEL\n};\n","import '@servicenow/now-icon';\n\nconst IMG_BASE_PATH = '/images/@devsnc/sn-table-builder/';\n\n/**\n * ndsIcon or image. (stored in assets - served via platform)\n * images are assumed to be svg.\n */\nexport const TbIcon = ({ ndsIcon, image, type = 'svg' }) => {\n\tif (ndsIcon || image) {\n\t\treturn (\n\t\t\t<div className='cell-icon'>\n\t\t\t\t{ndsIcon ? (\n\t\t\t\t\t<now-icon icon={ndsIcon} size='md' />\n\t\t\t\t) : image ? (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`${IMG_BASE_PATH}${image}.${type}`}\n\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\ton-error={e => {\n\t\t\t\t\t\t\tif (e.currentTarget.style)\n\t\t\t\t\t\t\t\te.currentTarget.style.visibility = 'hidden'; // hide showing broken image, rare case\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t} else return null;\n};\n","module.exports = __TECTONIC__$servicenow_library_enhanced_utils_19_8_1;","export const BEHAVIOR_NAME = 'TABLE_STRUCTURE_DATA';\n\nexport const API_PATH =\n\t'/api/sn_table_builder/app/table_structure/:sysId/:perspective';\n\nexport const ACTION_TYPES = {\n\tTABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_INITIATED: `${BEHAVIOR_NAME}#FETCH_TABLE_STRUCTURE_INITIATED`,\n\tTABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_STARTED: `${BEHAVIOR_NAME}#FETCH_TABLE_STRUCTURE_STARTED`,\n\tTABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_SUCCEEDED: `${BEHAVIOR_NAME}#FETCH_TABLE_STRUCTURE_SUCCEEDED`,\n\tTABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_FAILED: `${BEHAVIOR_NAME}#FETCH_TABLE_STRUCTURE_FAILED`,\n\tTABLE_STRUCTURE_DATA__TABLE_META_DATA_CHANGED: `${BEHAVIOR_NAME}#TABLE_META_DATA_CHANGED`\n};\n\n// BEHAVIOR_PROPS\nexport const TBS_DATA_IS_FETCHING = 'isTableStructureFetching';\nexport const IS_TBS_DATA_FETCHED = 'isTableStructureFetched';\nexport const TBS_DATA_IS_ERROR = 'isTableStructureFetchError';\nexport const TBS_DATA_META = 'tableMetadata';\nexport const TBS_DATA_COLUMNS = 'tableColumns';\nexport const IS_TABLE_IN_READ_ONLY = 'isTableInReadOnly';\nexport const SHOW_WELCOME_SCREEN = 'showWelcomeScreen';\n","export { tableSave as default } from './table-save';\nexport {\n\tACTION_TYPES,\n\tTB_SAVE_IS_SAVE_ERRORS,\n\tTB_SAVE_IS_SAVE_IN_PROGRESS,\n\tTB_SAVE_SAVE_ERROR,\n\tTB_SAVE_SAVE_RESULT\n} from './constants';\n","module.exports = __TECTONIC__$servicenow_now_select;","const BASE = 'SN_TB_GRID';\n\nexport const ACTION_TYPES = {\n\tREFIT_EDIT_POPOVER: `${BASE}#REFIT_EDIT_POPOVER`,\n\tNOW_POPOVER__CONTENT_HIDDEN: 'NOW_POPOVER#CONTENT_HIDDEN',\n\tNOW_POPOVER__CONTENT_VISIBLE: 'NOW_POPOVER#CONTENT_VISIBLE'\n};\n\nexport const EDIT_POPOVER_ID = 'edit-popover';\n","const BASE = 'SN_TB_HEADER';\n\nexport const ACTION_TYPES = {\n\tNOW_DROPDOWN__ITEM_CLICKED: 'NOW_DROPDOWN#ITEM_CLICKED',\n\tSN_TB_HEADER__DELETE_CLICKED: `${BASE}#DELETE_CLICKED`,\n\tSN_TB_HEADER__DELETE_RECORDS_CLICKED: `${BASE}#DELETE_RECORDS_CLICKED`,\n\tSN_TB_HEADER__ADVANCED_CLICKED: `${BASE}#ADVANCED_CLICKED`,\n\tSN_TB_HEADER__PREVIEW_CLICKED: `${BASE}#PREVIEW_CLICKED`,\n\tTABLE_DELETE_VALIDATION_INITIATED: `${BASE}#TABLE_DELETE_VALIDATION_INITIATED`,\n\tTABLE_DELETE_VALIDATION_STARTED: `${BASE}#TABLE_DELETE_VALIDATION_STARTED`,\n\tTABLE_DELETE_VALIDATION_SUCCEEDED: `${BASE}#TABLE_DELETE_VALIDATION_SUCCEEDED`,\n\tTABLE_DELETE_VALIDATION_FAILED: `${BASE}#TABLE_DELETE_VALIDATION_FAILED`,\n\tSN_TB_HEADER__EDIT_FORM_CLICKED: `${BASE}#EDIT_FORM_CLICKED`,\n\tSN_TB_HEADER__REFRESH_FIELDS_CLICKED: `${BASE}#REFRESH_FIELDS_CLICKED`,\n\tSN_TB_HEADER__REFRESH_FIELDS_INITIATED: `${BASE}#REFRESH_FIELDS_INITIATED`\n};\n\nexport const DELETE_ACTION_ID = 'TB_DELETE_TABLE';\nexport const ADVANCE_ACTION_ID = 'TB_ADVANCE_ACTION_ID';\nexport const DELETE_RECORDS_ACTION_ID = 'TB_DELETE_RECORDS';\nexport const EDIT_FORM_ACTION_ID = 'TB_EDIT_FORM';\nexport const REFRESH_FIELDS_ACTION_ID = 'TB_REFRESH_FIELDS';\n\nexport const TABLE_DELETE_VALIDATION_API_PATH =\n\t'/api/sn_table_builder/app/getTableExtensions/:table';\n","import { t } from 'sn-translate';\n\nconst BASE = 'SN_TB_WELCOME';\n\nexport const ACTION_TYPES = {\n\tNOW_MODAL_FOOTER_ACTION_CLICKED: 'NOW_MODAL#FOOTER_ACTION_CLICKED',\n\tNOW_MODAL_OPENED_SET: 'NOW_MODAL#OPENED_SET',\n\tUPDATE_WELCOME_PREFERENCE: `${BASE}#UPDATE_WELCOME_PREFERENCE`\n};\n\nexport const BUTTON_NEXT = t('Next');\nexport const BUTTON_PREVIOUS = t('Previous');\nexport const BUTTON_GET_STARTED = t('Get started');\n\nexport const WELCOME_SCREEN_PREFERENCE_KEY =\n\t'table_builder.dont.show.welcome.screen';\n\nexport const SCREENS_INFO = [\n\t{\n\t\tlabel: t('Reimagining how you work with data'),\n\t\tdescription: t(\n\t\t\t\"Welcome to Table Builder! We've created a simpler way to work with data and tables inside your app.\"\n\t\t),\n\t\timage: 'welcome-screen-1',\n\t\tfooterButtons: [BUTTON_NEXT]\n\t},\n\t{\n\t\tlabel: t('Add and edit fields in your table'),\n\t\tdescription: t(\n\t\t\t'To keep you focused, we created an experience that helps you work in the context of what you want to edit. You can easily add and edit fields in your table.'\n\t\t),\n\t\timage: 'welcome-screen-2',\n\t\tfooterButtons: [BUTTON_NEXT, BUTTON_PREVIOUS]\n\t},\n\t{\n\t\tlabel: t('Avoid recreating the same data'),\n\t\tdescription: t(\n\t\t\t\"Now, you can reference tables that you've already created and have this data right where you need it.\"\n\t\t),\n\t\timage: 'welcome-screen-3',\n\t\tfooterButtons: [BUTTON_NEXT, BUTTON_PREVIOUS]\n\t},\n\t{\n\t\tlabel: t('Access advanced configurations'),\n\t\tdescription: t(\n\t\t\t'Still need the classic view of your table? You can navigate to the classic platform while you work to see your data and any advanced capabilities of your table.'\n\t\t),\n\t\timage: 'welcome-screen-4',\n\t\tfooterButtons: [BUTTON_GET_STARTED, BUTTON_PREVIOUS]\n\t}\n];\n","import '@servicenow/now-icon';\nimport { getBorderRadiusClasses, getBorderClasses } from '../../commons/utils';\nimport { EVENT_KEY } from '../../commons/constants';\n\nexport const AddNewGridItem = ({\n\tdispatch,\n\tactionName,\n\tlabel,\n\tbare = false,\n\torientation = 'horizontal',\n\tborderRadius = [],\n\tsize = 'md',\n\tisTableInReadOnly\n}) => {\n\tif (isTableInReadOnly) return null;\n\n\treturn (\n\t\t<div\n\t\t\trole='button'\n\t\t\taria-label={label}\n\t\t\ttabindex='0'\n\t\t\tclass={{\n\t\t\t\t'add-new-btn': true,\n\t\t\t\t'is-bare': bare,\n\t\t\t\t[`is-${orientation}`]: true,\n\t\t\t\t[`-${size}`]: true,\n\t\t\t\t...getBorderRadiusClasses(borderRadius, !bare),\n\t\t\t\t...getBorderClasses(borderRadius, !bare)\n\t\t\t}}\n\t\t\ton-click={() => dispatch(actionName)}\n\t\t\ton-keydown={e => {\n\t\t\t\tif (e.key === EVENT_KEY.ENTER) dispatch(actionName);\n\t\t\t}}\n\t\t>\n\t\t\t<now-icon icon='plus-fill' size='sm'></now-icon>\n\t\t\t<label> {label} </label>\n\t\t</div>\n\t);\n};\n","/**\n * Additional info like icons/description mapping for table builder objects\n * These mapping would have new fields very rarely, check at end of release\n *\n * sys_glide_object - visible - true\n * icon - nds icon\n * image - give the name of image present src/assets\n * Either of icon or image has to be populated\n */\n\nimport { t } from 'sn-translate';\n\nexport const ADDITIONAL_INFO = {\n\tsys_glide_object: {\n\t\taudio: {\n\t\t\ticon: 'document-audio-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('MP3 or OGG file')\n\t\t},\n\t\tboolean: {\n\t\t\ticon: '',\n\t\t\timage: 'true-false',\n\t\t\tdescription: t('A binary variable')\n\t\t},\n\t\tcalendar_date_time: {\n\t\t\ticon: 'calendar-clock-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('Day and time of day')\n\t\t},\n\t\tchoice: {\n\t\t\ticon: 'circle-chevron-down-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('List of options that you define')\n\t\t},\n\t\tcolor: {\n\t\t\ticon: 'palette-outline',\n\t\t\timage: '',\n\t\t\tdescription: t(\n\t\t\t\t'CSS color declaration, like \"red\" or \"forest green\"'\n\t\t\t)\n\t\t},\n\t\tconditions: {\n\t\t\ticon: '',\n\t\t\timage: 'conditions',\n\t\t\tdescription: t('A condition builder')\n\t\t},\n\t\tcondition_string: {\n\t\t\ticon: '',\n\t\t\timage: 'conditions-string',\n\t\t\tdescription: t('A plain JavaScript condition statement')\n\t\t},\n\t\tcurrency: {\n\t\t\ticon: '',\n\t\t\timage: 'currency-outline',\n\t\t\tdescription: t(\n\t\t\t\t'Number with four digits after the decimal point, like 1.2345'\n\t\t\t)\n\t\t},\n\t\tcurrency2: {\n\t\t\ticon: '',\n\t\t\timage: 'currency-fx-outline',\n\t\t\tdescription: t('Advanced alternative to the \"Currency\" field type')\n\t\t},\n\t\tdata_structure: {\n\t\t\ticon: 'tree-view-long-outline',\n\t\t\timage: '',\n\t\t\tdescription: t(\n\t\t\t\t'String, Boolean, integer, decimal, object, or array'\n\t\t\t)\n\t\t},\n\t\tdecimal: {\n\t\t\ticon: '',\n\t\t\timage: 'decimal',\n\t\t\tdescription: t(\n\t\t\t\t'Number with up to two digits after the decimal point, like 1.23'\n\t\t\t)\n\t\t},\n\t\tdocument_id: {\n\t\t\ticon: '',\n\t\t\timage: 'document-id',\n\t\t\tdescription: t('Reference to any record on any table')\n\t\t},\n\t\tdomain_id: {\n\t\t\ticon: '',\n\t\t\timage: 'domain-id',\n\t\t\tdescription: t('Reference to the system domain')\n\t\t},\n\t\tdue_date: {\n\t\t\ticon: '',\n\t\t\timage: 'due-date',\n\t\t\tdescription: t('A deadline, specified by date and time')\n\t\t},\n\t\tfield_name: {\n\t\t\ticon: '',\n\t\t\timage: 'fieldname',\n\t\t\tdescription: t('Name of a field from a specified table')\n\t\t},\n\t\tfile_attachment: {\n\t\t\ticon: '',\n\t\t\timage: 'file-attachament',\n\t\t\tdescription: t('All file types are supported')\n\t\t},\n\t\tfloat: {\n\t\t\ticon: '',\n\t\t\timage: 'floating-point-number',\n\t\t\tdescription: t(\n\t\t\t\t'Number with up to seven digits after the decimal point, like 1.23'\n\t\t\t)\n\t\t},\n\t\tglide_date: {\n\t\t\ticon: '',\n\t\t\timage: 'date-outline',\n\t\t\tdescription: t('Day in YYYY-MM-DD format')\n\t\t},\n\t\tglide_date_time: {\n\t\t\ticon: 'calendar-clock-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('Day and time of day')\n\t\t},\n\t\tglide_duration: {\n\t\t\ticon: 'change-fill',\n\t\t\timage: '',\n\t\t\tdescription: t(\n\t\t\t\t'Length of time in days, hours, minutes, and seconds'\n\t\t\t)\n\t\t},\n\t\tglide_list: {\n\t\t\ticon: 'list-fill',\n\t\t\timage: '',\n\t\t\tdescription: t('Reference to multiple records')\n\t\t},\n\t\tglide_time: {\n\t\t\ticon: '',\n\t\t\timage: 'time',\n\t\t\tdescription: t('A specific time')\n\t\t},\n\t\tglide_utc_time: {\n\t\t\ticon: '',\n\t\t\timage: 'time-utc',\n\t\t\tdescription: t('A specific time in UTC')\n\t\t},\n\t\thtml: {\n\t\t\ticon: '',\n\t\t\timage: 'html',\n\t\t\tdescription: t('Text that you can edit in HTML')\n\t\t},\n\t\ticon: {\n\t\t\ticon: '',\n\t\t\timage: 'icon-outline',\n\t\t\tdescription: t('Small representative image')\n\t\t},\n\t\tinsert_timestamp: {\n\t\t\ticon: '',\n\t\t\timage: 'time',\n\t\t\tdescription: t('A specific time')\n\t\t},\n\t\tinteger: {\n\t\t\ticon: '',\n\t\t\timage: 'integer',\n\t\t\tdescription: t('Number with zero decimal points, like 123')\n\t\t},\n\t\tip_addr: {\n\t\t\ticon: '',\n\t\t\timage: 'ip-address',\n\t\t\tdescription: t('IPv4 or IPv6 address')\n\t\t},\n\t\tjournal: {\n\t\t\ticon: '',\n\t\t\timage: 'journal',\n\t\t\tdescription: t(\n\t\t\t\t'Text entries that display the author and time stamp'\n\t\t\t)\n\t\t},\n\t\tjournal_input: {\n\t\t\ticon: '',\n\t\t\timage: 'journal-input',\n\t\t\tdescription: t('Text input to update a Journal field')\n\t\t},\n\t\tjournal_list: {\n\t\t\ticon: '',\n\t\t\timage: 'journal-list',\n\t\t\tdescription: t(\n\t\t\t\t'Text entries that display the author and time stamp'\n\t\t\t)\n\t\t},\n\t\tlongint: {\n\t\t\ticon: '',\n\t\t\timage: 'long',\n\t\t\tdescription: t('A long number')\n\t\t},\n\t\tnds_icon: {\n\t\t\ticon: '',\n\t\t\timage: 'string',\n\t\t\tdescription: t('Now Experience icon')\n\t\t},\n\t\tpassword: {\n\t\t\ticon: 'key-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('Password with one-way encryption')\n\t\t},\n\t\tpassword2: {\n\t\t\ticon: '',\n\t\t\timage: 'password-2-way',\n\t\t\tdescription: t('Password with two-way encryption')\n\t\t},\n\t\tpercent_complete: {\n\t\t\ticon: '',\n\t\t\timage: 'percent-complete',\n\t\t\tdescription: t('A progress bar')\n\t\t},\n\t\tphone_number_e164: {\n\t\t\ticon: 'phone-outline',\n\t\t\timage: '',\n\t\t\tdescription: t(\n\t\t\t\t'Includes country code and subscriber number, like +14155552671'\n\t\t\t)\n\t\t},\n\t\tprice: {\n\t\t\ticon: '',\n\t\t\timage: 'price',\n\t\t\tdescription: t(\n\t\t\t\t'Currency field that enables control over conversations and display'\n\t\t\t)\n\t\t},\n\t\treference: {\n\t\t\ticon: '',\n\t\t\timage: 'reference',\n\t\t\tdescription: t('Data from another table that you specify')\n\t\t},\n\t\tscript: {\n\t\t\ticon: '',\n\t\t\timage: 'script',\n\t\t\tdescription: t(\n\t\t\t\t'JavaScript code input, with a list of fields and server APIs'\n\t\t\t)\n\t\t},\n\t\tscript_plain: {\n\t\t\ticon: '',\n\t\t\timage: 'script-plain',\n\t\t\tdescription: t('JavaScript code input')\n\t\t},\n\t\tsimple_name_values: {\n\t\t\ticon: '',\n\t\t\timage: 'name-value-pair',\n\t\t\tdescription: t(\n\t\t\t\t'Key for accessing a text value using its assigned name'\n\t\t\t)\n\t\t},\n\t\tstring: {\n\t\t\ticon: '',\n\t\t\timage: 'string',\n\t\t\tdescription: 'A single line of plain text'\n\t\t},\n\t\tstring_full_utf8: {\n\t\t\ticon: '',\n\t\t\timage: 'string-utf-8',\n\t\t\tdescription: 'Text that can contain UTF-8 character encoding'\n\t\t},\n\t\ttable_name: {\n\t\t\ticon: '',\n\t\t\timage: 'table-name',\n\t\t\tdescription: t('A table, referenced by entering the table name')\n\t\t},\n\t\ttranslated_html: {\n\t\t\ticon: '',\n\t\t\timage: 'translated-html',\n\t\t\tdescription: t(\n\t\t\t\t\"HTML text that is translated automatically based on the user's language\"\n\t\t\t)\n\t\t},\n\t\ttranslated_text: {\n\t\t\ticon: '',\n\t\t\timage: 'translated-text',\n\t\t\tdescription: t(\n\t\t\t\t\"Plain text that is translated automatically based on the user's language\"\n\t\t\t)\n\t\t},\n\t\turl: {\n\t\t\ticon: 'link-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('Link to a web address')\n\t\t},\n\t\tuser_image: {\n\t\t\ticon: 'image-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('GIF, JPG, PNG, or BMP file')\n\t\t},\n\t\tvideo: {\n\t\t\ticon: 'video-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('MP4 or WEBM file')\n\t\t},\n\t\twiki_text: {\n\t\t\ticon: '',\n\t\t\timage: 'wiki',\n\t\t\tdescription: t('Text input field with built-in Wiki text editor')\n\t\t},\n\t\tworkflow: {\n\t\t\ticon: 'workflow-outline',\n\t\t\timage: '',\n\t\t\tdescription: t('Choice list that displays a stage in a workflow')\n\t\t}\n\t},\n\tFALLBACK_IMAGE_MAP: {\n\t\tboolean: 'true-false',\n\t\tdate: 'date-outline',\n\t\tdatetime: 'date-time-outline',\n\t\tdecimal: 'decimal',\n\t\tfloat: 'floating-point-number',\n\t\tGUID: 'document-id',\n\t\tinteger: 'integer',\n\t\tlongint: 'long',\n\t\tstring: 'string',\n\t\ttime: 'time'\n\t}\n};\n","export { userData as default } from './user-data';\nexport { ACTION_TYPES } from './constants';\n","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","export { ACTION_TYPES } from './constants';\nexport { rwHandle } from './utils';\nexport { recordWatcher as default } from './record-watcher';\n","module.exports = __TECTONIC__$servicenow_now_toggle;","module.exports = __TECTONIC__$servicenow_now_popover;","import './sn-tb-reference';\n\nexport { ACTION_TYPES, VARIANTS } from './constants';\n","import { snHttpFactory } from 'sn-http-request';\n\nconst BASE = 'BULK_REQUEST';\n\nexport const ACTION_TYPES = {\n\tBULK_REQUEST__STARTED: `${BASE}#STARTED`,\n\tBULK_REQUEST__COMPLETED: `${BASE}#COMPLETED`\n};\n\n/**\n * core snHttp (createHttpRequest internally uses this)\n * We need to send/process bulk requests without having an action/effect for each request.\n */\nexport const snHttp = snHttpFactory({\n\txsrfToken: window.g_ck,\n\tbatching: false\n});\n\n/**\n * settles when all promises finish (either resolve/reject)\n * @param {Array} promises\n */\nexport const allSettled = promises => {\n\tif (typeof Promise.allSettled === 'function')\n\t\treturn Promise.allSettled(promises);\n\treturn Promise.all(\n\t\tpromises.map(p =>\n\t\t\tPromise.resolve(p).then(\n\t\t\t\tvalue => ({\n\t\t\t\t\tstatus: 'fulfilled',\n\t\t\t\t\tvalue\n\t\t\t\t}),\n\t\t\t\treason => ({\n\t\t\t\t\tstatus: 'rejected',\n\t\t\t\t\treason\n\t\t\t\t})\n\t\t\t)\n\t\t)\n\t);\n};\n\nconst requestor = config => {\n\tconst { url, method = 'GET', ...options } = config;\n\treturn snHttp.request(url, method, {\n\t\t...options\n\t});\n};\n\n/**\n * Takes array request config and return promise which resolves on all request settled\n * requestConfig should follow https://code.devsnc.com/dev/sn-http-request#request-config\n * @param {Array.<Object>} requestsConfig\n */\nexport async function bulkRequest(requestsConfig) {\n\tconst requests = requestsConfig.map(requestor);\n\tconst allResponses = await allSettled(requests);\n\tconst {\n\t\tfailedConfigsIndx,\n\t\tresponses: reProcessed\n\t} = await processFailedByUnServiced(allResponses, requestsConfig);\n\n\tif (failedConfigsIndx.length) {\n\t\t// replace failed with re-processed\n\t\tfailedConfigsIndx.forEach((item, index) => {\n\t\t\tallResponses[item] = reProcessed[index];\n\t\t});\n\t}\n\n\treturn allResponses;\n}\n\n// might failed to due to transaction timeout\nconst isFailedByUnServiced = resp =>\n\tresp.status === 'rejected' && resp.reason.response.status === 503;\n\n// Reprocess failed requests.\n// Get the original request config and process.\nasync function processFailedByUnServiced(allResponse, requestsConfig) {\n\tconst failedConfigsIndx = allResponse.reduce((acc, curr, index) => {\n\t\tif (isFailedByUnServiced(curr)) acc.push(index);\n\t\treturn acc;\n\t}, []);\n\tconst failedConfigs = failedConfigsIndx.map(item => requestsConfig[item]);\n\tconst requests = failedConfigs.map(requestor);\n\tconst responses = await allSettled(requests);\n\n\treturn {\n\t\tfailedConfigsIndx,\n\t\tresponses\n\t};\n}\n","import './sn-tb-input';\n\nexport { ACTION_TYPES } from './constants';\n","module.exports = __TECTONIC__$servicenow_now_label_value;","module.exports = __TECTONIC__$servicenow_now_highlighted_value;","module.exports = __TECTONIC__$servicenow_now_tooltip;","const BASE = 'SN_TB_TEXTAREA';\n\nexport const ACTION_TYPES = {\n\tNOW_TEXTAREA__INPUT: 'NOW_TEXTAREA#INPUT',\n\tFINISHED_EDIT: `${BASE}#FINISHED_EDIT`,\n\tVALUE_SET: `${BASE}#VALUE_SET`\n};\n","import { layerEvents } from '@servicenow/library-enhanced-utils';\nimport {\n\tFIELD_TYPES,\n\tINTERNAL_TYPES,\n\tTABLE_COLUMNS\n} from '../../commons/constants';\nimport { VARIANTS } from '../sn-tb-reference/constants';\nimport {\n\twaitUntil,\n\thandleTabPress,\n\tupdateStateWithoutRender,\n\tisUnsavedRecord\n} from '../../commons/utils';\nimport {\n\tACTION_TYPES,\n\tPOPOVER_PANEL_TAG,\n\tMULTI_LINE_LENGTH,\n\tFIELD_META\n} from './constants';\nimport { getFieldValueFromRecord } from '../../behaviors/grid-model/utils';\nimport { t } from 'sn-translate';\nimport { NONE_OPTION_ID } from '../sn-tb-select/constants';\nimport { NUMERIC_MIN_LIMIT } from '../sn-tb-input/constants';\n\nexport const getEditableComponent = state => {\n\tconst {\n\t\tproperties: { type, fieldMeta },\n\t\tproperties,\n\t\ttriggerValidate\n\t} = state;\n\n\tconst shouldShowDynamicEditContent = isDynamicEditContent(fieldMeta);\n\n\tif (shouldShowDynamicEditContent) {\n\t\t// decide control type based on fieldMeta\n\t\tconst { controlType, props } = getControlTypeAndProps(\n\t\t\tfieldMeta,\n\t\t\tproperties\n\t\t);\n\t\treturn decideControl(controlType, { triggerValidate, ...props });\n\t}\n\treturn decideControl(type, { triggerValidate, ...properties });\n};\n\n/**\n * field type to component mapping\n * @param {string} type\n * @param {object} props\n */\nexport function decideControl(type, props) {\n\tconst {\n\t\tdisplayValue,\n\t\tisValid,\n\t\tmessages,\n\t\tvalue,\n\t\tfieldMeta,\n\t\ttriggerValidate\n\t} = props;\n\n\tswitch (type) {\n\t\tcase FIELD_TYPES.BOOLEAN:\n\t\t\treturn getToggleControl({ value: displayValue });\n\t\tcase FIELD_TYPES.GUID:\n\t\t\tif (fieldMeta.fieldName === TABLE_COLUMNS.INTERNAL_TYPE)\n\t\t\t\treturn getTbTypeEditControl({\n\t\t\t\t\tvalue,\n\t\t\t\t\tdisplayValue,\n\t\t\t\t\tfieldMeta,\n\t\t\t\t\ttriggerValidate\n\t\t\t\t});\n\t\t\telse if (fieldMeta.fieldName === TABLE_COLUMNS.REFERENCE)\n\t\t\t\treturn getTbReferenceControl({\n\t\t\t\t\tvalue,\n\t\t\t\t\tdisplayValue,\n\t\t\t\t\tfieldMeta,\n\t\t\t\t\tvariant: VARIANTS.TABLE,\n\t\t\t\t\tallowEmptyValue: true,\n\t\t\t\t\tplaceholder: t('Start typing...')\n\t\t\t\t});\n\t\t\telse\n\t\t\t\treturn getTbReferenceControl({\n\t\t\t\t\tvalue,\n\t\t\t\t\tdisplayValue,\n\t\t\t\t\tfieldMeta,\n\t\t\t\t\tvariant: VARIANTS.STANDARD,\n\t\t\t\t\tallowEmptyValue: true,\n\t\t\t\t\tplaceholder: ''\n\t\t\t\t});\n\t\tcase FIELD_TYPES.INTEGER:\n\t\t\treturn getNumericControl({\n\t\t\t\tvalue,\n\t\t\t\tisValid,\n\t\t\t\tallowEmptyValue: true\n\t\t\t});\n\t\tcase INTERNAL_TYPES.CHOICE:\n\t\t\treturn getChoiceControl({ value, fieldMeta });\n\t\tcase INTERNAL_TYPES.JOURNAL_INPUT:\n\t\t\treturn getTextareaControl({\n\t\t\t\tvalue: displayValue,\n\t\t\t\tisValid,\n\t\t\t\tfieldMeta\n\t\t\t});\n\t\tcase FIELD_TYPES.STRING:\n\t\tdefault:\n\t\t\treturn getStringControl({\n\t\t\t\tvalue: displayValue,\n\t\t\t\tisValid,\n\t\t\t\tmessages,\n\t\t\t\tallowEmptyValue: true,\n\t\t\t\tfieldMeta\n\t\t\t});\n\t}\n}\n\nexport function getControlTypeAndProps(fieldMeta, props) {\n\t// Note: for default_value column, if we support more type add conditions\n\tconst internalType = getFieldValueFromRecord(\n\t\tfieldMeta.record,\n\t\tTABLE_COLUMNS.INTERNAL_TYPE\n\t);\n\n\tif (isReferenceControl(internalType)) {\n\t\t// reference field will current record field name\n\t\tconst referenceField = getFieldValueFromRecord(\n\t\t\tfieldMeta.record,\n\t\t\tTABLE_COLUMNS.ELEMENT\n\t\t);\n\t\tconst hostTable = props.tableMetadata.name;\n\t\tconst fieldMetaOverride = {\n\t\t\tfieldName: referenceField,\n\t\t\ttableName: hostTable,\n\t\t\trecordSysId: -1\n\t\t};\n\t\tconst overrideProps = {\n\t\t\t...props,\n\t\t\tfieldMeta: { ...props.fieldMeta, ...fieldMetaOverride }\n\t\t};\n\t\treturn { controlType: FIELD_TYPES.GUID, props: overrideProps };\n\t}\n\n\tif (isNumberControl(internalType)) {\n\t\treturn { controlType: FIELD_TYPES.INTEGER, props };\n\t}\n\n\tif (\n\t\tisStringControl(\n\t\t\tinternalType,\n\t\t\tgetFieldValueFromRecord(fieldMeta.record, TABLE_COLUMNS.MAX_LENGTH)\n\t\t)\n\t) {\n\t\tconst fieldMetaOverride = {\n\t\t\tmaxlength: getFieldValueFromRecord(\n\t\t\t\tfieldMeta.record,\n\t\t\t\tTABLE_COLUMNS.MAX_LENGTH\n\t\t\t)\n\t\t};\n\t\tconst overrideProps = {\n\t\t\t...props,\n\t\t\tfieldMeta: { ...props.fieldMeta, ...fieldMetaOverride }\n\t\t};\n\n\t\tif (fieldMetaOverride.maxlength > MULTI_LINE_LENGTH) {\n\t\t\treturn {\n\t\t\t\tcontrolType: INTERNAL_TYPES.JOURNAL_INPUT,\n\t\t\t\tprops: overrideProps\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tcontrolType: FIELD_TYPES.STRING,\n\t\t\tprops: overrideProps\n\t\t};\n\t}\n\n\tif (isChoiceControl(internalType)) {\n\t\tconst rowFieldMeta = getFieldValueFromRecord(\n\t\t\tfieldMeta.record,\n\t\t\tTABLE_COLUMNS.INTERNAL_TYPE,\n\t\t\tFIELD_META\n\t\t);\n\t\tconst fieldMetaOverride = {\n\t\t\tchoices: rowFieldMeta.choices\n\t\t\t\t.filter(item => !item.deleted) // check deleted as there might be client side edits\n\t\t\t\t.map(item => {\n\t\t\t\t\treturn { ...item, id: item.value }; // to match with now-select items\n\t\t\t\t}),\n\t\t\tallowEmptyValue: true\n\t\t};\n\t\tconst overrideProps = {\n\t\t\t...props,\n\t\t\tfieldMeta: { ...props.fieldMeta, ...fieldMetaOverride }\n\t\t};\n\t\treturn { controlType: INTERNAL_TYPES.CHOICE, props: overrideProps };\n\t}\n\n\treturn { controlType: FIELD_TYPES.STRING, props };\n}\n\nfunction getStringControl({\n\tvalue,\n\tisValid,\n\tmessages,\n\tallowEmptyValue,\n\tfieldMeta\n}) {\n\treturn {\n\t\tControl: 'sn-tb-input',\n\t\tcontrolProps: {\n\t\t\tmessages,\n\t\t\tinvalid: !isValid,\n\t\t\tautofocus: true,\n\t\t\ttype: 'text',\n\t\t\tvalue,\n\t\t\tallowEmptyValue,\n\t\t\tmaxlength:\n\t\t\t\tfieldMeta.maxlength >= NUMERIC_MIN_LIMIT\n\t\t\t\t\t? Number(fieldMeta.maxlength)\n\t\t\t\t\t: undefined\n\t\t}\n\t};\n}\n\nfunction getTbReferenceControl({\n\tvalue,\n\tdisplayValue,\n\tfieldMeta,\n\tvariant,\n\tallowEmptyValue,\n\tplaceholder\n}) {\n\tconst referenceInfo = {\n\t\tfieldLabel: fieldMeta.record.rowData.column_label.value,\n\t\tfieldName: fieldMeta.fieldName,\n\t\ttableName: fieldMeta.tableName,\n\t\trecordSysId: fieldMeta.record.sysId,\n\t\tcellIdentity: fieldMeta.cellIdentity\n\t};\n\treturn {\n\t\tControl: 'sn-tb-reference',\n\t\tcontrolProps: {\n\t\t\tvalue,\n\t\t\tdisplayValue,\n\t\t\tname: fieldMeta.fieldName,\n\t\t\tfieldName: fieldMeta.fieldName,\n\t\t\ttableName: fieldMeta.tableName,\n\t\t\trecordSysId: fieldMeta.recordSysId,\n\t\t\tvariant,\n\t\t\tallowEmptyValue,\n\t\t\treferenceInfo,\n\t\t\tshowReferencePicker: shouldShowReferencePicker(\n\t\t\t\tvariant,\n\t\t\t\treferenceInfo\n\t\t\t),\n\t\t\tplaceholder\n\t\t}\n\t};\n}\n\nexport const shouldShowReferencePicker = (variant, referenceInfo) => {\n\tif (variant !== VARIANTS.STANDARD) return false;\n\n\t// unsaved field don't have field sysId. So we can't show reference list\n\tif (isUnsavedRecord(referenceInfo.recordSysId)) return false;\n\n\treturn true;\n};\n\nfunction getToggleControl({ value }) {\n\treturn {\n\t\tControl: 'now-toggle',\n\t\tcontrolProps: {\n\t\t\tchecked: JSON.parse(value)\n\t\t}\n\t};\n}\n\nfunction getTbTypeEditControl({\n\tvalue,\n\tdisplayValue,\n\tfieldMeta,\n\ttriggerValidate\n}) {\n\treturn {\n\t\tControl: 'sn-tb-type-edit',\n\t\tcontrolProps: {\n\t\t\tvalue,\n\t\t\tdisplayValue,\n\t\t\tname: fieldMeta.fieldName,\n\t\t\tfieldName: fieldMeta.fieldName,\n\t\t\ttableName: fieldMeta.tableName,\n\t\t\trecordSysId: fieldMeta.recordSysId,\n\t\t\tcellIdentity: fieldMeta.cellIdentity,\n\t\t\ttriggerValidate\n\t\t}\n\t};\n}\n\nfunction getNumericControl({ value, isValid, allowEmptyValue }) {\n\treturn {\n\t\tControl: 'sn-tb-input',\n\t\tcontrolProps: {\n\t\t\tinvalid: !isValid,\n\t\t\tautofocus: true,\n\t\t\ttype: 'number',\n\t\t\tplaceholder: t('Please enter integer value'),\n\t\t\tvalue,\n\t\t\tallowEmptyValue\n\t\t}\n\t};\n}\n\nfunction getTextareaControl({ value, isValid, fieldMeta }) {\n\treturn {\n\t\tControl: 'sn-tb-textarea',\n\t\tcontrolProps: {\n\t\t\tinvalid: !isValid,\n\t\t\tautofocus: true,\n\t\t\tvalue,\n\t\t\tmaxlength: Number(fieldMeta.maxlength)\n\t\t}\n\t};\n}\n\nfunction getChoiceControl({ value, fieldMeta }) {\n\treturn {\n\t\tControl: 'sn-tb-select',\n\t\tcontrolProps: {\n\t\t\titems: fieldMeta.choices,\n\t\t\tselectedItem: value || NONE_OPTION_ID,\n\t\t\tallowEmptyValue: fieldMeta.allowEmptyValue,\n\t\t\tautofocus: true\n\t\t}\n\t};\n}\n\nfunction isStringControl(primitiveType) {\n\tif (primitiveType === FIELD_TYPES.STRING) return true;\n\treturn false;\n}\n\nfunction isNumberControl(internalType) {\n\tif (internalType === FIELD_TYPES.INTEGER) return true;\n\treturn false;\n}\n\nfunction isReferenceControl(internalType) {\n\t// Note: choice suggestion might come here\n\tif (internalType === INTERNAL_TYPES.REFERENCE) return true;\n\treturn false;\n}\n\nfunction isChoiceControl(internalType) {\n\t// Note: choice suggestion might come here\n\tif (internalType === INTERNAL_TYPES.CHOICE) return true;\n\treturn false;\n}\n\nexport const waitUntilPopoverLayerEvents = async action => {\n\tconst { event } = action.meta;\n\tconst popover = event.path.find(node => node.nodeName === 'NOW-POPOVER');\n\tconst popoverId = popover ? popover.getComponentId() : null;\n\tconst condition = () =>\n\t\tBoolean(window.___NDS_LAYER_EVENTS___.find(le => le.id === popoverId));\n\n\treturn waitUntil(condition, { checkInterval: 100 });\n};\n\nexport const overridePopoverEvents = async ({ host, action, dispatch }) => {\n\ttry {\n\t\tawait waitUntilPopoverLayerEvents(action);\n\t} catch (e) {\n\t\tconsole.warn('Unable to override popover events');\n\t}\n\n\tlayerEvents.add({\n\t\tid: action.meta.id,\n\t\tevents: ['keydown'],\n\t\tcallback: event => {\n\t\t\thandleTabPress(event, host);\n\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__KEYDOWN, { event });\n\t\t}\n\t});\n};\n\n// Taken from design-system: https://code.devsnc.com/dev/design-system/blob/master/components/popover/src/utils/dom.js\n// We also need to guard against events coming from a nested popover panel\n// Eg: when we have a <now-select> in the content of a outer popover.\n// These panels are hoisted independently, so the outer panel is not in the composedPath of the inner panel.\n/* istanbul ignore next */\nexport function isNestedPanel(element, parentPanel) {\n\tif (!element || !parentPanel || element.tagName !== POPOVER_PANEL_TAG) {\n\t\treturn false;\n\t}\n\n\tlet root = element.nowPopover;\n\twhile ((root = root.getRootNode()) !== null) {\n\t\tif (!root.host) return false;\n\t\tif (parentPanel.contains(root.host)) return true;\n\t\troot = root.host;\n\t}\n}\n\nexport function createBatch(dependentValues) {\n\tlet batch = [];\n\tlet item;\n\tfor (item in dependentValues) {\n\t\tconst { value, displayValue, cellIdentity } = dependentValues[item];\n\t\tconst batchItem = {\n\t\t\tdata: { value, displayValue },\n\t\t\tcellIdentity\n\t\t};\n\t\tbatch.push(batchItem);\n\t}\n\treturn batch;\n}\n\nexport const getSize = complexWidget => {\n\treturn complexWidget ? 'large' : 'medium';\n};\n\nexport const isComplexWidget = (value, fieldName) => {\n\treturn (\n\t\tfieldName === TABLE_COLUMNS.INTERNAL_TYPE &&\n\t\tvalue === INTERNAL_TYPES.CHOICE\n\t);\n};\n\n/**\n * Decide Should show dynamic content in same column\n * Ex: Default value in FRV\n */\nexport function isDynamicEditContent(fieldMeta) {\n\treturn fieldMeta.fieldName === TABLE_COLUMNS.DEFAULT_VALUE;\n}\n\nexport function shouldUpdateTabbales(\n\toldValue,\n\tvalue,\n\t{ fieldMeta, dependentValues }\n) {\n\tlet flag = false;\n\tif (\n\t\t// change from reference to other OR other reference\n\t\toldValue === INTERNAL_TYPES.REFERENCE ||\n\t\tvalue === INTERNAL_TYPES.REFERENCE\n\t)\n\t\tflag = true;\n\n\t// For reference column, if either previous or current value is empty, then tabbables should be updated\n\t// If only dependent reference is updated when reference column value is empty\n\tif (\n\t\t(fieldMeta.fieldName === INTERNAL_TYPES.REFERENCE &&\n\t\t\t(!oldValue || !value) &&\n\t\t\toldValue != value) ||\n\t\t(dependentValues && dependentValues.reference)\n\t)\n\t\tflag = true;\n\n\treturn flag;\n}\n\nexport const initializeState = ({ properties, updateState }) => {\n\tconst { value, displayValue, fieldMeta } = properties;\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\tvalue,\n\t\t\tdisplayValue,\n\t\t\tpreviousValue: value,\n\t\t\tpreviousDisplayValue: displayValue\n\t\t},\n\t\tupdateState\n\t);\n\tupdateState({\n\t\tcomplexWidget: isComplexWidget(value, fieldMeta.fieldName)\n\t});\n};\n","import './sn-tb-popover-content';\n","module.exports = __TECTONIC__$servicenow_now_dropdown;","export { ACTION_TYPES } from './constants';\nexport { gridNavigation as default } from './grid-navigation';\n","import { BEHAVIOR_NAME, ACTION_TYPES } from './constants';\nimport {\n\tget,\n\tupdateStateWithoutRender,\n\tgetEventPath,\n\tshadowQuerySelectorAll\n} from '../../commons/utils';\nimport { TABBABLES_SELECTOR } from './focusUtility';\n\nexport const getState = state => state.behaviors[BEHAVIOR_NAME];\n\nexport const getCellFromGrid = ({ grid, currentFocus }) => {\n\tconst { row, cell } = currentFocus;\n\treturn get(grid, `rows[${row}].cells[${cell}]`, undefined);\n};\n\nexport const getTableCellFromEvent = event => {\n\tconst path = getEventPath(event);\n\tconst node = path.find(node => {\n\t\treturn ['TH', 'TD'].includes(node.nodeName);\n\t});\n\treturn node;\n};\n\nexport const setNewFocus = ({\n\tgrid,\n\tcurrentFocus,\n\tnewFocus,\n\tupdateState,\n\tshouldFocus = true\n}) => {\n\t// add 'is-focus' class to new row\n\tif (currentFocus.row !== newFocus.row)\n\t\ttoggleRowFocusClass(grid, currentFocus.row, newFocus.row);\n\n\t// Remove tabIndex from previous node\n\tconst currentCell = getCellFromGrid({ grid, currentFocus });\n\t// when focus moves away from direct interactable widget\n\tif (currentCell.cellNode) currentCell.cellNode.tabIndex = -1;\n\t// when focus moves away from normal cell\n\telse if (currentFocus.node) currentFocus.node.tabIndex = -1;\n\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.currentFocus`]: newFocus\n\t\t},\n\t\tupdateState\n\t);\n\n\taddIndexAndFocus(newFocus.node, shouldFocus);\n};\n\nexport const addIndexAndFocus = (node, shouldFocus = true) => {\n\tif (!node) return;\n\n\tnode.tabIndex = 0;\n\tif (shouldFocus) {\n\t\tnode.focus();\n\n\t\t// In safari, sometimes node is not getting focused.\n\t\tsetTimeout(() => node.focus());\n\t}\n};\n\nexport const removeTabIndex = (state, updateState) => {\n\tconst { grid, currentFocus } = getState(state);\n\tconst cell = getCellFromGrid({ grid, currentFocus });\n\tcell.node.classList.remove('active');\n\tcell.tabbables.forEach(node => (node.tabIndex = -1));\n\tsetTrapCell(updateState, undefined);\n};\n\nexport const setTrapCell = (updateState, cell) => {\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.trapCell`]: cell\n\t\t},\n\t\tupdateState\n\t);\n};\n\nexport const getTabbables = (root, selector = '.tabbable') => {\n\t/* istanbul ignore next: can't test shadowRoot in unit tests  */\n\tif (root.shadowRoot) root = root.shadowRoot;\n\tconst nodes = root.querySelectorAll(selector);\n\treturn Array.from(nodes);\n};\n\nexport const refreshNavTabbables = ({\n\tgrid,\n\tcurrentFocus,\n\tupdateState,\n\tdispatch,\n\tnewFocus = undefined\n}) => {\n\tif (newFocus) {\n\t\tconst newCell = getCellFromGrid({ grid, currentFocus: newFocus });\n\t\tnewFocus.node = newCell.node;\n\n\t\tsetNewFocus({ grid, currentFocus, newFocus, updateState });\n\t}\n\n\tdispatch(ACTION_TYPES.GRID_NAVIGATION__UPDATE_TABBABLES);\n};\n\nexport const addRowFocusClass = (grid, rowNum) => {\n\tconst row = grid.rows[rowNum];\n\t/* istanbul ignore else  */\n\tif (row) row.node.classList.add('is-focus');\n};\n\nexport const removeRowFocusClass = (grid, rowNum) => {\n\tconst row = grid.rows[rowNum];\n\t/* istanbul ignore else  */\n\tif (row) row.node.classList.remove('is-focus');\n};\n\nexport const toggleRowFocusClass = (grid, currentRowNum, newRowNum) => {\n\tremoveRowFocusClass(grid, currentRowNum);\n\taddRowFocusClass(grid, newRowNum);\n};\n\nexport const generateTabbables = host => {\n\tif (!host) return;\n\n\tconst newGrid = { rows: [] };\n\tconst rows = shadowQuerySelectorAll(host, 'tr');\n\n\tfor (let i = 0; i < rows.length; i++) {\n\t\tconst row = {\n\t\t\tnode: rows[i],\n\t\t\tcells: []\n\t\t};\n\n\t\tconst cells = shadowQuerySelectorAll(rows[i], 'td,th');\n\t\tfor (let j = 0; j < cells.length; j++) {\n\t\t\tlet node = cells[j];\n\t\t\tlet tabbables = getTabbables(node);\n\t\t\tlet cellNode = null;\n\n\t\t\t// handle direct interactable elements\n\t\t\tif (\n\t\t\t\ttabbables.length === 1 &&\n\t\t\t\ttabbables[0].classList.contains('-direct-interactable')\n\t\t\t) {\n\t\t\t\tif (!tabbables[0].disabled) {\n\t\t\t\t\tcellNode = node;\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tnode = tabbables[0].shadowRoot\n\t\t\t\t\t\t? tabbables[0].shadowRoot.querySelector(\n\t\t\t\t\t\t\t\tTABBABLES_SELECTOR\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: tabbables[0];\n\t\t\t\t}\n\t\t\t\ttabbables = [];\n\t\t\t} else\n\t\t\t\tfor (let k = 0; k < tabbables.length; k++)\n\t\t\t\t\ttabbables[k].tabIndex = -1;\n\n\t\t\tconst cell = { node, tabbables };\n\t\t\tif (cellNode) cell.cellNode = cellNode;\n\t\t\trow.cells.push(cell);\n\t\t}\n\n\t\tnewGrid.rows.push(row);\n\t}\n\treturn newGrid;\n};\n\nexport const getNodePosition = /*istanbul ignore next*/ node => {\n\tconst rowNode = node.parentElement;\n\tconst rowCells = rowNode.children;\n\tconst cell = [...rowCells].indexOf(node);\n\tconst tableNode = rowNode.closest('table');\n\tconst tableRows = tableNode.querySelectorAll('tr');\n\tconst row = [...tableRows].indexOf(rowNode);\n\treturn { row, cell };\n};\n","import './sn-tb-header';\n","module.exports = __TECTONIC__$servicenow_now_checkbox;","import { t } from 'sn-translate';\nimport {\n\tACTION_TYPES,\n\tAUTO_NUMBER_DEFAULTS,\n\tBASE_NUMBER_UPPER_LIMIT,\n\tMAXIMUM_DIGITS_UPPER_LIMIT,\n\tVALIDATION_MESSAGES,\n\tAPPLICATION_ACCESS_CONTROLS\n} from './constants';\n\n/**\n * Returns auto-number preview\n * @param {Object} obj\n * @param {string} obj.prefix\n * @param {number|string} obj.number\n * @param {number|string} obj.maximum_digits\n * @returns {string}\n * @example\n * getAutoNumberPreview({prefix: 'INC', number: 2000, maximum_digits: 5})\n * // => INC02000\n */\nexport const getAutoNumberPreview = ({ prefix, number, maximum_digits }) => {\n\tconst maxDigits = Number(maximum_digits);\n\tconst numberValue = number.toString().replace(/[^0-9]/g, '');\n\tconst numberValueLen = numberValue.length;\n\n\treturn (\n\t\tprefix.padEnd(prefix.length + maxDigits - numberValueLen, '0') +\n\t\tnumberValue\n\t);\n};\n\n/**\n * Returns auto-number default values\n * @param {string} tableLabel\n * @returns {Object}\n */\nexport const getAutoNumberDefaults = tableLabel => {\n\tconst autoNumberDefaults = {\n\t\tprefix: tableLabel.substr(0, 3).toUpperCase(),\n\t\tnumber: AUTO_NUMBER_DEFAULTS.NUMBER,\n\t\tmaximum_digits: AUTO_NUMBER_DEFAULTS.MAXIMUM_DIGITS\n\t};\n\n\treturn {\n\t\t...autoNumberDefaults,\n\t\tauto_number_preview: getAutoNumberPreview(autoNumberDefaults)\n\t};\n};\n\n// It will populate auto number fields\nexport const populateAutoNumberFields = ({ name, value, dispatch }) => {\n\tswitch (name) {\n\t\tcase 'auto_number':\n\t\t\tif (value)\n\t\t\t\tdispatch(\n\t\t\t\t\tACTION_TYPES.TABLE_PROPERTIES__SET_AUTO_NUMBER_DEFAULTS\n\t\t\t\t);\n\t\t\tbreak;\n\t\tcase 'prefix':\n\t\tcase 'number':\n\t\tcase 'maximum_digits':\n\t\t\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__SET_AUTO_NUMBER_PREVIEW);\n\t\t\tbreak;\n\t}\n};\n\n// Transform base number value to allow only numbers\nexport const transformBaseNumberField = (value, updateState) => {\n\tconst number = Number(value.replace(/[^0-9]/g, ''));\n\n\tupdateState({\n\t\tpath: 'tableProperties.generalInfo.number',\n\t\tvalue: number,\n\t\toperation: 'set'\n\t});\n\treturn number;\n};\n\n// Validate mandatory check\nexport const validateMandatoryField = value => (value ? true : false);\n\n// Validate \"Starting number\" field value\nexport const validateBaseNumberField = (value, updateState) => {\n\tif (!value) return false;\n\n\tconst number = Number(value.toString().replace(/[^0-9]/g, ''));\n\tconst isValid = number > BASE_NUMBER_UPPER_LIMIT ? false : true;\n\n\tif (updateState) {\n\t\tlet validationMessages = [];\n\t\tif (!isValid) {\n\t\t\tvalidationMessages = [VALIDATION_MESSAGES.number];\n\t\t}\n\t\tupdateState({\n\t\t\tpath: 'fieldValidationMsgs.number',\n\t\t\tvalue: validationMessages,\n\t\t\toperation: 'set'\n\t\t});\n\t}\n\n\treturn isValid;\n};\n\n// Validate \"Number of digits\" field value\nexport const validateMaximumDigitsField = value => {\n\tif (!value) return true;\n\treturn Number(value) <= MAXIMUM_DIGITS_UPPER_LIMIT;\n};\n\n// Returns modal footer buttons based on form validity\nexport const getModalFooterButtons = (isFormValid, isSubmitting) => {\n\treturn [\n\t\t{\n\t\t\tvariant: 'primary',\n\t\t\tlabel: t('Save'),\n\t\t\tdisabled: isSubmitting || !isFormValid,\n\t\t\tclickActionType: ACTION_TYPES.TABLE_PROPERTIES__UPDATE_REQUESTED\n\t\t},\n\t\t{\n\t\t\tvariant: 'secondary',\n\t\t\tlabel: t('Cancel'),\n\t\t\tclickActionType: ACTION_TYPES.NOW_MODAL_OPENED_SET\n\t\t}\n\t];\n};\n\n//Return boolean value for checkbox disabled attribute\nexport const isAccessControlDisabled = (\n\tisTableReadOnly,\n\tscopeRestricted,\n\taccess_control,\n\tread_access\n) => {\n\tif (access_control === 'read_access') {\n\t\treturn isTableReadOnly || isScopeRestricted(scopeRestricted);\n\t} else\n\t\treturn (\n\t\t\tisTableReadOnly ||\n\t\t\t!read_access ||\n\t\t\tisScopeRestricted(scopeRestricted)\n\t\t);\n};\n\nexport const isScopeRestricted = value => {\n\treturn value !== 'public';\n};\n\n//Change Application Access Controls when Scope is changed to private\nexport const setAccessForPrivateScope = updateState => {\n\tfor (var i = 0; i < APPLICATION_ACCESS_CONTROLS.length; i++) {\n\t\tupdateState({\n\t\t\tpath: `tableProperties.accessInfo.${APPLICATION_ACCESS_CONTROLS[i]}`,\n\t\t\tvalue: false,\n\t\t\toperation: 'set'\n\t\t});\n\t}\n};\n\n//Change Application Access Controls when Scope is changed to public\nexport const setAccessForPublicScope = updateState => {\n\tupdateState({\n\t\tpath: `tableProperties.accessInfo.read_access`,\n\t\tvalue: true,\n\t\toperation: 'set'\n\t});\n\n\tupdateState({\n\t\tpath: `tableProperties.accessInfo.ws_access`,\n\t\tvalue: true,\n\t\toperation: 'set'\n\t});\n};\n","const BASE = 'CONFIRM_DELETE';\n\nexport const ACTION_TYPES = {\n\tNOW_INPUT__VALUE_SET: 'NOW_INPUT#VALUE_SET',\n\tNOW_MODAL__OPENED_SET: 'NOW_MODAL#OPENED_SET',\n\tCONFIRM_DELETE__DELETE_REQUESTED: `${BASE}#DELETE_REQUESTED`,\n\tCONFIRM_DELETE__DELETE_INITIATED: `${BASE}#DELETE_INITIATED`,\n\tCONFIRM_DELETE__DELETE_SUCCEEDED: `${BASE}#DELETE_SUCCEEDED`,\n\tCONFIRM_DELETE__DELETE_FAILED: `${BASE}#DELETE_FAILED`,\n\tCONFIRM_DELETE__DELETE_FINISHED: `${BASE}#DELETE_FINISHED`,\n\tCONFIRM_DELETE__DELETE_FIELD_DATA_CHECK: `${BASE}#DELETE_FIELD_DATA_CHECK`,\n\tCONFIRM_DELETE__DELETE_FIELD_DATA_CHECK_FAILED: `${BASE}#DELETE_FIELD_DATA_CHECK_FAILED`,\n\tCONFIRM_DELETE__CAN_DELETE_FIELD: `${BASE}#CAN_DELETE_FIELD`,\n\tCONFIRM_DELETE__CANNOT_DELETE_FIELD: `${BASE}#CANNOT_DELETE_FIELD`,\n\tDELETE_RECORDS_INITIATED: `${BASE}#DELETE_RECORDS_INITIATED`,\n\tDELETE_RECORDS_SUCCEEDED: `${BASE}#DELETE_RECORDS_SUCCEEDED`,\n\tDELETE_RECORDS_FAILED: `${BASE}#DELETE_RECORDS_FAILED`\n};\n\nexport const STATUS_CODE_TO_ALLOW_FIELD_DELETION = 403;\n","import uuid from 'uuid';\nimport {\n\tADVANCE_ACTION_ID,\n\tDELETE_ACTION_ID,\n\tEDIT_FORM_ACTION_ID,\n\tREFRESH_FIELDS_ACTION_ID\n} from './constants';\nimport { t } from 'sn-translate';\n\nexport const getMoreActions = (canDelete, isTableInReadOnly) => {\n\tconst moreActions = [\n\t\t{\n\t\t\tid: ADVANCE_ACTION_ID,\n\t\t\tlabel: t('Advanced View')\n\t\t}\n\t];\n\t/* istanbul ignore else */\n\tif (!isTableInReadOnly) {\n\t\tmoreActions.push({\n\t\t\tid: EDIT_FORM_ACTION_ID,\n\t\t\tlabel: t('Edit form view')\n\t\t});\n\t}\n\tmoreActions.push({\n\t\tid: REFRESH_FIELDS_ACTION_ID,\n\t\tlabel: t('Refresh fields')\n\t});\n\n\tif (!isTableInReadOnly) {\n\t\tmoreActions.push({\n\t\t\tid: DELETE_ACTION_ID,\n\t\t\tlabel: t('Delete table'),\n\t\t\tdisabled: !canDelete\n\t\t});\n\t}\n\n\treturn moreActions;\n};\n\nexport const getPreviewUrl = name => {\n\tconst stackName = `${uuid.v4()}_bottomless`;\n\treturn `/${name}_list.do?&sysparm_nameofstack=${stackName}&sysparm_nofocus=true`;\n};\n\nexport const getFormDesignerUrl = name => {\n\treturn `/$ng_fd.do?sysparm_attributes=startTable:\"${name}\"&startView=\"Default view\"`;\n};\n","import './components/sn-table-builder';\n","import './sn-table-builder';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\nimport { TB_PERSPECTIVES } from '../../commons/constants';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\n\ncreateCustomElement('sn-table-builder', {\n\trenderer: { type: snabbdom },\n\tinitialState: {\n\t\tblockUIEvents: false,\n\t\tModalComponent: null\n\t},\n\tproperties: {\n\t\tsysId: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tperspective: {\n\t\t\tdefault: TB_PERSPECTIVES.VIEW_FIELD_ROW,\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: [TB_PERSPECTIVES.VIEW_FIELD_ROW]\n\t\t\t}\n\t\t},\n\t\ttransactionScope: {\n\t\t\tdefault: 'global'\n\t\t},\n\t\talerts: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.alerts\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import '../sn-tb-viewer';\nimport '../sn-tb-header';\nimport '@servicenow/now-alert';\nimport { TB_PROVIDER_ID } from '../sn-tb-provider';\n\nconst renderAlertList = alerts => {\n\tif (!alerts || !alerts.length) return null;\n\treturn <now-alert-list manageItems items={alerts} />;\n};\n\nexport default state => {\n\tconst {\n\t\tblockUIEvents,\n\t\tModalComponent,\n\t\tproperties: { sysId, perspective, alerts, transactionScope }\n\t} = state;\n\n\treturn (\n\t\t<div\n\t\t\tclass={{\n\t\t\t\t'sn-table-builder': true,\n\t\t\t\t'-block-ui-events': blockUIEvents\n\t\t\t}}\n\t\t>\n\t\t\t<sn-tb-provider\n\t\t\t\tcomponent-id={TB_PROVIDER_ID}\n\t\t\t\tsysId={sysId}\n\t\t\t\tperspective={perspective}\n\t\t\t\ttransactionScope={transactionScope}\n\t\t\t>\n\t\t\t\t{renderAlertList(alerts)}\n\n\t\t\t\t{ModalComponent ? <ModalComponent /> : null}\n\n\t\t\t\t<sn-tb-header />\n\t\t\t\t<sn-tb-viewer />\n\t\t\t</sn-tb-provider>\n\t\t</div>\n\t);\n};\n","import './sn-tb-viewer';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\n\ncreateCustomElement('sn-tb-viewer', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tproperties: {\n\t\tisInputReady: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isInputReady\n\t\t},\n\t\tshowWelcomeScreen: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.showWelcomeScreen\n\t\t}\n\t},\n\tview,\n\tstyles\n});\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '../sn-tb-field-row-view';\nimport '../sn-tb-welcome';\n\nconst renderWelcomeScreen = showWelcomeScreen => {\n\tif (!showWelcomeScreen) return null;\n\treturn <sn-tb-welcome />;\n};\n\nexport default state => {\n\tconst {\n\t\tproperties: { isInputReady, showWelcomeScreen }\n\t} = state;\n\n\tif (!isInputReady) return null;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{renderWelcomeScreen(showWelcomeScreen)}\n\t\t\t<sn-tb-field-row-view />\n\t\t</Fragment>\n\t);\n};\n","import './sn-tb-field-row-view';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\nimport { GRID_LOADER } from '../../behaviors/grid-model/constants';\n\ncreateCustomElement('sn-tb-field-row-view', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tproperties: {\n\t\tsysId: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.sysId\n\t\t},\n\t\tperspective: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.perspective\n\t\t},\n\t\ttransactionScope: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.transactionScope\n\t\t},\n\t\tisTableStructureFetched: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTableStructureFetched\n\t\t},\n\t\tisGridDataFetched: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isGridDataFetched\n\t\t},\n\t\tisGridModelReady: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isGridModelReady\n\t\t},\n\t\tisGridDataError: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isGridDataError\n\t\t},\n\t\tisGridDataFetching: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isGridDataFetching\n\t\t},\n\t\tgridCurrentPage: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridCurrentPage\n\t\t},\n\t\tgridRows: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridRows\n\t\t},\n\t\tgridColumns: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridColumns\n\t\t},\n\t\t[GRID_LOADER]: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridLoader\n\t\t},\n\t\tshowNonExtended: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.showNonExtended\n\t\t},\n\t\tenableNonExtendedFilter: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.enableNonExtendedFilter\n\t\t},\n\t\tisTableInReadOnly: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTableInReadOnly,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import { AddNewGridItem } from '../../partials/add-new-grid-item/view';\nimport { ACTION_TYPES } from '../../behaviors/grid-model';\nimport { GridBodyCell } from '../../partials/grid-body-cell/view';\nimport { GridHeaderCell } from '../../partials/grid-header-cell/view';\nimport { PaginationControl } from '../../partials/pagination-control/view';\nimport { PAGE_SIZES } from '../../commons/constants';\nimport '@servicenow/now-button';\nimport '@servicenow/now-loader';\nimport '../sn-tb-grid';\nimport '../sn-tb-header';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\nimport { TopSection } from '../../partials/top-section/view';\nimport { t } from 'sn-translate';\nimport { GRID_LOADER } from '../../behaviors/grid-model/constants';\n\nconst renderLoader = (isGridDataFetching, gridLoader) => {\n\tif (!isGridDataFetching && !gridLoader) return null;\n\n\treturn (\n\t\t<div className='now-loader-container'>\n\t\t\t<now-loader label='Loading...' size='lg'></now-loader>\n\t\t</div>\n\t);\n};\n\nconst content = {\n\tth: GridHeaderCell,\n\ttd: GridBodyCell\n};\nconst gridBorderRadius = ['top-left', 'top-right'];\nconst addNewFieldBorderRadius = ['bottom-left', 'bottom-right'];\n\nexport default (state, { dispatch }) => {\n\tconst {\n\t\tproperties: {\n\t\t\tisGridModelReady,\n\t\t\tisGridDataError,\n\t\t\tisGridDataFetching,\n\t\t\tgridCurrentPage,\n\t\t\tgridRows,\n\t\t\tgridColumns,\n\t\t\t[GRID_LOADER]: gridLoader,\n\t\t\tshowNonExtended,\n\t\t\tenableNonExtendedFilter,\n\t\t\tisTableInReadOnly\n\t\t}\n\t} = state;\n\n\tif (isGridDataError) return null;\n\n\tif (!isGridModelReady) return renderLoader(isGridDataFetching);\n\n\treturn (\n\t\t<div className='grid-wrapper'>\n\t\t\t<TopSection\n\t\t\t\tdispatch={dispatch}\n\t\t\t\tshowNonExtended={showNonExtended}\n\t\t\t\tenableNonExtendedFilter={enableNonExtendedFilter}\n\t\t\t\tisGridDataFetching={isGridDataFetching}\n\t\t\t\tisTableInReadOnly={isTableInReadOnly}\n\t\t\t/>\n\t\t\t<div className='grid-wrapper-overlay'>\n\t\t\t\t{renderLoader(isGridDataFetching, gridLoader)}\n\t\t\t\t<sn-tb-grid\n\t\t\t\t\tdata={gridRows}\n\t\t\t\t\tcolumns={gridColumns}\n\t\t\t\t\tcontent={content}\n\t\t\t\t\tariaTitle={t('Table fields')}\n\t\t\t\t\tborderRadius={gridBorderRadius}\n\t\t\t\t/>\n\t\t\t\t<AddNewGridItem\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tactionName={ACTION_TYPES.GRID_MODEL__NEW_ROW_BTN_CLICKED}\n\t\t\t\t\tlabel={t('Add new field')}\n\t\t\t\t\tbare={false}\n\t\t\t\t\torientation='horizontal'\n\t\t\t\t\tborderRadius={addNewFieldBorderRadius}\n\t\t\t\t\tisTableInReadOnly={isTableInReadOnly}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<PaginationControl\n\t\t\t\ttotal={TB_PROVIDER_PROPERTIES.gridRecordCount}\n\t\t\t\tselectedPageSize={TB_PROVIDER_PROPERTIES.gridPageSize}\n\t\t\t\tselectedPage={gridCurrentPage - 1}\n\t\t\t\tpageSizes={PAGE_SIZES}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import {\n\tBEHAVIOR_NAME,\n\tGRID_CONSTANTS,\n\tGRID_COLUMNS,\n\tGRID_DATA,\n\tGRID_ROWS,\n\tGRID_CURRENT_PAGE,\n\tGRID_PAGE_SIZE,\n\tGRID_RECORD_COUNT,\n\tIS_GRID_DATA_FETCHING,\n\tIS_GRID_DATA_ERROR,\n\tIS_GRID_MODEL_READY,\n\tIS_GRID_DATA_FETCHED,\n\tPOPOVER_POSITION_TARGET,\n\tNEW_ROW_ADDED,\n\tROW_DELETED,\n\tCHOICE_TYPES,\n\tGRID_LOADER,\n\tGRID_FILTER_QUERY\n} from './constants';\nimport { actionHandlers } from './actions';\n\nexport const gridModel = {\n\tname: BEHAVIOR_NAME,\n\tinitialState: {\n\t\tfocusRetainableCell: null,\n\t\tprevPageConfig: {\n\t\t\tlimit: null,\n\t\t\toffset: null\n\t\t}\n\t},\n\tproperties: {\n\t\t[IS_GRID_DATA_FETCHING]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[IS_GRID_DATA_ERROR]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[IS_GRID_DATA_FETCHED]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[IS_GRID_MODEL_READY]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_COLUMNS]: {\n\t\t\tdefault: [],\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_DATA]: {},\n\t\t[GRID_ROWS]: {\n\t\t\tdefault: [],\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_CURRENT_PAGE]: {\n\t\t\tdefault: 1,\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_PAGE_SIZE]: {\n\t\t\tdefault: GRID_CONSTANTS.PAGE_SIZE,\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_FILTER_QUERY]: {\n\t\t\tdefault: '',\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_RECORD_COUNT]: {\n\t\t\tselectable: true\n\t\t},\n\t\t[CHOICE_TYPES]: {\n\t\t\tselectable: true\n\t\t},\n\t\t[POPOVER_POSITION_TARGET]: {\n\t\t\tselectable: true\n\t\t},\n\t\t[NEW_ROW_ADDED]: {\n\t\t\tdefault: {\n\t\t\t\tcellIdentity: {}\n\t\t\t},\n\t\t\tselectable: true\n\t\t},\n\t\t[ROW_DELETED]: {\n\t\t\tdefault: null,\n\t\t\tselectable: true\n\t\t},\n\t\t[GRID_LOADER]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport {\n\tBEHAVIOR_NAME,\n\tACTION_TYPES,\n\tAPI_PATH,\n\tFIELD_VALIDATION_API_PATH,\n\tIS_GRID_DATA_FETCHING,\n\tIS_GRID_DATA_FETCHED,\n\tGRID_COLUMNS,\n\tGRID_DATA,\n\tGRID_RECORD_COUNT,\n\tGRID_CURRENT_PAGE,\n\tGRID_ROWS,\n\tIS_GRID_MODEL_READY,\n\tIS_GRID_DATA_ERROR,\n\tGRID_PAGE_SIZE,\n\tNEW_ROW_ADDED,\n\tROW_DELETED,\n\tFIELDS_NEEDING_VALIDATION,\n\tDERIVED_FIELDS,\n\tRESOLVE_FIELD_VALUE,\n\tSORT_ASC_ID,\n\tSORT_DESC_ID,\n\tSORT_ORDER_DESC,\n\tSORT_ORDER_ASC,\n\tCHOICE_TYPES,\n\tBUTTON_DELETE_CONTROL,\n\tBUTTON_REFERENCE_OPENER,\n\tGRID_LOADER,\n\tGRID_FILTER_QUERY\n} from './constants';\nimport { TABLES, ERROR_ALERT, FIELD_TYPES } from '../../commons/constants';\nimport { ACTION_TYPES as TUD_ACTION_TYPES } from '../user-data';\nimport {\n\tgenerateColumnDefs,\n\tsetCellData,\n\tgetTablesInGrid,\n\tgetEmptyObjectCopy,\n\tgetRowIdentifier,\n\tgetColumnIndex,\n\tmergeWithGridTransactions,\n\tsetCellDataBatch,\n\taddControlsAsColumns,\n\tgetFieldLabel,\n\tgetCellModel,\n\tgetTableUrlForTableBuilder,\n\tisReferenceUpdated\n} from './utils';\nimport {\n\tTBS_DATA_COLUMNS,\n\tTBS_DATA_META,\n\tIS_TABLE_IN_READ_ONLY\n} from '../table-structure-data';\nimport {\n\tACTION_TYPES as TRS_ACTION_TYPES,\n\tTRANSACTION_ACTIONS,\n\tGRID_TRANSACTIONS\n} from '../transaction-model';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../../components/sn-table-builder/constants';\nimport {\n\tTB_IS_IN_AES,\n\tTB_SYS_ID,\n\tTB_PERSPECTIVE,\n\tTB_TRANSACTION_SCOPE\n} from '../table-initializer/constants';\nimport {\n\tupdateStateWithoutRender,\n\tisUnsavedRecord,\n\tAppEngineStudioAPI\n} from '../../commons/utils';\nimport { t } from 'sn-translate';\n\nconst gridDataFetchInitiated = createHttpEffect(API_PATH, {\n\tpathParams: ['sysId', 'perspective'],\n\tqueryParams: ['sysparm_transaction_scope', 'offset', 'limit', 'query'],\n\tbatch: false,\n\tstartActionType: ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_STARTED,\n\tsuccessActionType: ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_FAILED\n});\n\nconst gridDataFetchStarted = ({ updateProperties }) => {\n\tupdateProperties({\n\t\t[IS_GRID_DATA_FETCHING]: true,\n\t\t[IS_GRID_DATA_FETCHED]: false\n\t});\n};\n\nconst gridDataFetchSucceeded = ({ action, updateProperties, updateState }) => {\n\tconst {\n\t\tpayload: { result }\n\t} = action;\n\tconst limit = Number(result.pageSize);\n\tconst offset = Number(result.offset);\n\n\tupdateProperties({\n\t\t[GRID_DATA]: result,\n\t\t[GRID_RECORD_COUNT]: result.count,\n\t\t[GRID_PAGE_SIZE]: limit,\n\t\t[GRID_CURRENT_PAGE]: offset,\n\t\t[CHOICE_TYPES]: result.choiceTypes,\n\t\t[IS_GRID_DATA_FETCHING]: false,\n\t\t[IS_GRID_DATA_FETCHED]: true,\n\t\t[IS_GRID_DATA_ERROR]: false\n\t});\n\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.prevPageConfig`]: { limit, offset }\n\t\t},\n\t\tupdateState\n\t);\n};\n\nconst gridDataFetchFailed = ({ updateProperties }) => {\n\tupdateProperties({\n\t\t[IS_GRID_DATA_ERROR]: true,\n\t\t[IS_GRID_DATA_FETCHING]: false,\n\t\t[IS_GRID_DATA_FETCHED]: false\n\t});\n};\n\nconst transformGridModel = ({ properties, updateProperties }) => {\n\tconst {\n\t\t[TBS_DATA_COLUMNS]: tableColumns,\n\t\t[GRID_DATA]: gridData,\n\t\t[TB_PERSPECTIVE]: perspective,\n\t\t[GRID_TRANSACTIONS]: gridTransactions,\n\t\t[TBS_DATA_META]: tableMetaData,\n\t\t[IS_TABLE_IN_READ_ONLY]: isTableInReadOnly\n\t} = properties;\n\n\t// TODO: transform grid columns and grid data based on perspective\n\tconst { orderByColumn, orderByIsDescending } = gridData;\n\tconst { hostTable, tableInGrid } = getTablesInGrid(\n\t\tperspective,\n\t\ttableMetaData\n\t);\n\tconst transformedColumns = generateColumnDefs(\n\t\taddControlsAsColumns(tableColumns),\n\t\ttableInGrid,\n\t\thostTable,\n\t\torderByColumn,\n\t\torderByIsDescending,\n\t\tisTableInReadOnly\n\t);\n\tconst transformedRows = mergeWithGridTransactions(\n\t\tgridData.records,\n\t\tgridTransactions\n\t);\n\n\tupdateProperties({\n\t\t[GRID_COLUMNS]: transformedColumns,\n\t\t[GRID_ROWS]: transformedRows,\n\t\t[IS_GRID_MODEL_READY]: true,\n\t\t[GRID_DATA]: undefined\n\t});\n};\n\nconst addNewRowBtnClicked = coeffects => {\n\tconst {\n\t\tproperties: {\n\t\t\t[GRID_ROWS]: gridRows,\n\t\t\t[GRID_COLUMNS]: gridColumns,\n\t\t\t[TBS_DATA_META]: tableMetaData\n\t\t},\n\t\tupdateProperties\n\t} = coeffects;\n\tlet emptyRowObj = getEmptyObjectCopy(gridColumns, tableMetaData);\n\tupdateProperties({\n\t\t[GRID_ROWS]: [...gridRows, emptyRowObj],\n\t\t[NEW_ROW_ADDED]: {\n\t\t\tcellIdentity: {\n\t\t\t\tcolumnIndex: 1,\n\t\t\t\trowIndex: gridRows.length + 1\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst updateCellModel = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { cellIdentity, data }\n\t\t},\n\t\tproperties: { [GRID_ROWS]: gridRows, [GRID_COLUMNS]: gridColumns },\n\t\tupdateProperties\n\t} = coeffects;\n\tsetCellData({\n\t\tupdateProperties,\n\t\tgridRows,\n\t\tgridColumns,\n\t\tcellIdentity,\n\t\tdata\n\t});\n};\n\nconst updateCellModelBatch = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { batch, updateTransactions }\n\t\t},\n\t\tproperties: { [GRID_ROWS]: gridRows, [GRID_COLUMNS]: gridColumns },\n\t\tupdateProperties,\n\t\tdispatch\n\t} = coeffects;\n\n\tsetCellDataBatch({\n\t\tupdateProperties,\n\t\tgridRows,\n\t\tgridColumns,\n\t\tbatch\n\t});\n\n\tif (updateTransactions) {\n\t\tdispatch(\n\t\t\tTRS_ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_UPDATE_BATCH,\n\t\t\t{\n\t\t\t\taction: TRANSACTION_ACTIONS.GRID_ROW_MODIFIED,\n\t\t\t\tbatch\n\t\t\t}\n\t\t);\n\t}\n};\n\nconst validateFieldInitiated = createHttpEffect(FIELD_VALIDATION_API_PATH, {\n\tmethod: 'POST',\n\tpathParams: ['table'],\n\tqueryParams: ['sysparm_transaction_scope'],\n\tdataParam: 'data',\n\tbatch: false,\n\tstartActionType: ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_STARTED,\n\tsuccessActionType: ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_FAILED\n});\n\nconst validateFieldStarted = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tmeta: { cellIdentity }\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\n\tdispatch(ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_STARTED, {\n\t\tcellIdentity\n\t});\n};\n\nconst validateFieldSucceeded = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { result },\n\t\t\tmeta: { cellIdentity, data }\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\tif (result.isValid) {\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_COMPLETED, {\n\t\t\tcellIdentity,\n\t\t\tdata\n\t\t});\n\t} else {\n\t\tlet errors = [\n\t\t\t{\n\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\tcontent: result.message,\n\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t}\n\t\t];\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_COMPLETED, {\n\t\t\tcellIdentity,\n\t\t\tdata,\n\t\t\terrors\n\t\t});\n\t}\n};\n\nconst validateFieldFailed = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { message },\n\t\t\tmeta: { cellIdentity, data }\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\tlet errors = [\n\t\t{\n\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\tcontent: message,\n\t\t\ticon: ERROR_ALERT.ICON\n\t\t}\n\t];\n\tdispatch(ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_COMPLETED, {\n\t\tcellIdentity,\n\t\tdata,\n\t\terrors\n\t});\n};\n\nconst gridCellValueChanged = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { cellIdentity, data }\n\t\t},\n\t\tproperties: {\n\t\t\t[GRID_ROWS]: gridRows,\n\t\t\t[GRID_COLUMNS]: gridColumns,\n\t\t\t[TBS_DATA_META]: tableMetaData,\n\t\t\t[TB_TRANSACTION_SCOPE]: transactionScope\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\n\tlet fieldName = gridColumns[cellIdentity.columnIndex].name;\n\tif (\n\t\tDERIVED_FIELDS[fieldName] &&\n\t\tisUnsavedRecord(gridRows[cellIdentity.rowIndex].sysId)\n\t) {\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__UPDATE_DERIVED_FIELD, {\n\t\t\tfieldName,\n\t\t\tcellIdentity,\n\t\t\tvalue: data.displayValue\n\t\t});\n\t}\n\tif (FIELDS_NEEDING_VALIDATION.includes(fieldName)) {\n\t\tconst table = tableMetaData.name.toString();\n\t\tconst validationInput = {};\n\t\tconst recordId = getRowIdentifier({ cellIdentity, gridRows });\n\t\t/*istanbul ignore else : No else case to test*/\n\t\tif (RESOLVE_FIELD_VALUE[fieldName]) {\n\t\t\tconst resolvedValue = RESOLVE_FIELD_VALUE[fieldName].getValue(\n\t\t\t\tdata.value\n\t\t\t);\n\t\t\tdata.value = resolvedValue;\n\t\t\tdata.displayValue = resolvedValue;\n\t\t}\n\t\tvalidationInput[fieldName] = data.displayValue;\n\t\tvalidationInput['sysId'] = recordId;\n\t\tdispatch(\n\t\t\tACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_INITIATED,\n\t\t\t{\n\t\t\t\ttable,\n\t\t\t\tdata: validationInput,\n\t\t\t\tsysparm_transaction_scope: transactionScope\n\t\t\t},\n\t\t\t{\n\t\t\t\tcellIdentity,\n\t\t\t\tdata\n\t\t\t}\n\t\t);\n\t} else\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_COMPLETED, {\n\t\t\tcellIdentity,\n\t\t\tdata\n\t\t});\n};\n\nexport const gridCellValidationStarted = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { cellIdentity }\n\t\t},\n\t\tproperties: { [GRID_ROWS]: gridRows, [GRID_COLUMNS]: gridColumns },\n\t\tupdateProperties,\n\t\tdispatch\n\t} = coeffects;\n\n\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\tshouldBlock: true\n\t});\n\n\tsetCellData({\n\t\tupdateProperties,\n\t\tgridRows,\n\t\tgridColumns,\n\t\tcellIdentity,\n\t\tdata: { isLoading: true }\n\t});\n};\n\nexport const gridCellValidationCompleted = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { cellIdentity, data, errors = [] }\n\t\t},\n\t\tproperties: { [GRID_ROWS]: gridRows, [GRID_COLUMNS]: gridColumns },\n\t\tupdateProperties,\n\t\tdispatch\n\t} = coeffects;\n\n\tlet validationData;\n\tif (errors.length) {\n\t\tvalidationData = { isEditable: true, isValid: false, messages: errors };\n\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\t\tshouldBlock: true\n\t\t});\n\t} else {\n\t\tvalidationData = {\n\t\t\tisEditable: false,\n\t\t\tisValid: true,\n\t\t\tmessages: [],\n\t\t\tpopoverPositionTarget: undefined\n\t\t};\n\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\t\tshouldBlock: false\n\t\t});\n\t}\n\tvalidationData.isLoading = false;\n\n\t// if cell value is there, then set hasError false\n\tlet errorInfo = {};\n\tif (data.value) errorInfo = { hasError: false };\n\n\tsetCellData({\n\t\tupdateProperties,\n\t\tgridRows,\n\t\tgridColumns,\n\t\tcellIdentity,\n\t\tdata: { ...data, ...validationData, ...errorInfo }\n\t});\n\n\tif (!errors.length) {\n\t\tdispatch(TRS_ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_LOG, {\n\t\t\taction: TRANSACTION_ACTIONS.GRID_ROW_MODIFIED,\n\t\t\tcellIdentity\n\t\t});\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__RETAIN_FOCUS_TO_GRID_CELL);\n\t}\n};\n\nconst gridCellValueUnchanged = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { cellIdentity, data }\n\t\t},\n\t\tproperties: { [GRID_ROWS]: gridRows, [GRID_COLUMNS]: gridColumns },\n\t\tupdateProperties,\n\t\tdispatch\n\t} = coeffects;\n\n\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\tshouldBlock: false\n\t});\n\tconst cellData = {\n\t\tisEditable: false,\n\t\tpopoverPositionTarget: undefined,\n\t\t...data\n\t};\n\tsetCellData({\n\t\tupdateProperties,\n\t\tgridRows,\n\t\tgridColumns,\n\t\tcellIdentity,\n\t\tdata: cellData\n\t});\n\tdispatch(ACTION_TYPES.GRID_MODEL__RETAIN_FOCUS_TO_GRID_CELL);\n};\n\nconst pageChanged = ({ action, dispatch, properties, state }) => {\n\tconst sysId = properties[TB_SYS_ID];\n\tconst perspective = properties[TB_PERSPECTIVE];\n\tconst transactionScope = properties[TB_TRANSACTION_SCOPE];\n\tconst limit = properties[GRID_PAGE_SIZE];\n\tconst query = properties[GRID_FILTER_QUERY];\n\tconst { value } = action.payload;\n\n\t// if same page number (or) same page size is selected again, don't reload the grid\n\tconst { prevPageConfig } = state.behaviors[BEHAVIOR_NAME];\n\tif (prevPageConfig.offset === value + 1 && prevPageConfig.limit === limit)\n\t\treturn;\n\n\tdispatch(ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_INITIATED, {\n\t\tsysId,\n\t\tperspective,\n\t\tsysparm_transaction_scope: transactionScope,\n\t\toffset: value + 1,\n\t\tlimit,\n\t\tquery\n\t});\n};\n\nconst pageSizeChanged = ({ action, dispatch, updateProperties, state }) => {\n\tconst { value } = action.payload;\n\tconst preferences = [\n\t\t{\n\t\t\tname: 'table_builder.rowcount',\n\t\t\tvalue\n\t\t}\n\t];\n\n\t// if same page size is selected, don't update rowcount preference\n\tconst { prevPageConfig } = state.behaviors[BEHAVIOR_NAME];\n\tif (prevPageConfig.limit === value) return;\n\n\tupdateProperties({\n\t\t[GRID_PAGE_SIZE]: value\n\t});\n\n\tdispatch(TUD_ACTION_TYPES.USER_DATA__UPDATE_PREF, { preferences });\n};\n\nconst onDropdownValueSelected = ({ action, dispatch }) => {\n\tconst {\n\t\titem: { id },\n\t\tcolumn\n\t} = action.payload;\n\n\tswitch (id) {\n\t\tcase SORT_ASC_ID:\n\t\tcase SORT_DESC_ID: {\n\t\t\tconst { currentSortOrder } = action.payload;\n\t\t\tconst nextSortOrder =\n\t\t\t\tid === SORT_ASC_ID ? SORT_ORDER_ASC : SORT_ORDER_DESC;\n\t\t\tif (nextSortOrder === currentSortOrder) return;\n\n\t\t\tdispatch(ACTION_TYPES.GRID_MODEL__GRID_UPDATE_SORT, {\n\t\t\t\tcolumn,\n\t\t\t\tdirection: nextSortOrder\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nconst updateGridSort = ({ action, dispatch, properties }) => {\n\tconst { column, direction } = action.payload;\n\tconst {\n\t\t[TB_SYS_ID]: sysId,\n\t\t[TB_PERSPECTIVE]: perspective,\n\t\t[TB_TRANSACTION_SCOPE]: sysparm_transaction_scope,\n\t\t[GRID_FILTER_QUERY]: query\n\t} = properties;\n\n\t/**\n\t * TODO: table name for sorting should be based on prespective.\n\t * sys_dictionary - for FRV view\n\t * <actual_table_name> - for spread sheet view\n\t */\n\tconst preferences = [\n\t\t{\n\t\t\tname: `sys_dictionary.db.order.direction`,\n\t\t\tvalue: direction\n\t\t},\n\t\t{\n\t\t\tname: `sys_dictionary.db.order`,\n\t\t\tvalue: column\n\t\t}\n\t];\n\t/*istanbul ignore next:  this callback cannot be invoked in unit test */\n\tconst onUpdateSuccess = () => {\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_INITIATED, {\n\t\t\tsysId,\n\t\t\tperspective,\n\t\t\tsysparm_transaction_scope,\n\t\t\tquery\n\t\t});\n\t};\n\tdispatch(\n\t\tTUD_ACTION_TYPES.USER_DATA__UPDATE_PREF,\n\t\t{ preferences },\n\t\t{ onUpdateSuccess }\n\t);\n};\n\nexport const updateDerivedField = ({ action, properties, dispatch }) => {\n\tconst gridColumns = properties[GRID_COLUMNS];\n\tconst { fieldName, cellIdentity, value } = action.payload;\n\tlet derivedFieldValue = DERIVED_FIELDS[fieldName].getValue(value);\n\tlet derivedField = DERIVED_FIELDS[fieldName].field;\n\tlet colIndex = getColumnIndex(gridColumns, derivedField);\n\tlet derivedCellIdentity = {\n\t\trowIndex: cellIdentity.rowIndex,\n\t\tcolumnIndex: colIndex\n\t};\n\tdispatch(ACTION_TYPES.GRID_MODEL__UPDATE_CELL_MODEL, {\n\t\tcellIdentity: derivedCellIdentity,\n\t\tdata: {\n\t\t\tvalue: derivedFieldValue,\n\t\t\tdisplayValue: derivedFieldValue,\n\t\t\thasError: false\n\t\t}\n\t});\n\tdispatch(TRS_ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_LOG, {\n\t\taction: TRANSACTION_ACTIONS.GRID_ROW_MODIFIED,\n\t\tcellIdentity: derivedCellIdentity\n\t});\n};\n\nexport const syncGridModelWithTransactions = ({\n\tproperties,\n\tupdateProperties\n}) => {\n\tconst {\n\t\t[GRID_ROWS]: gridRows,\n\t\t[GRID_TRANSACTIONS]: transactions\n\t} = properties;\n\n\tconst transformedRows = mergeWithGridTransactions(gridRows, transactions);\n\n\tupdateProperties({ [GRID_ROWS]: transformedRows });\n};\n\nexport const onControlButtonClicked = ({ dispatch, action }) => {\n\tconst { button, cellIdentity } = action.payload;\n\n\tswitch (button) {\n\t\tcase BUTTON_DELETE_CONTROL:\n\t\t\tdispatch(ACTION_TYPES.GRID_MODEL__DELETE_CONTROL_CLICKED, {\n\t\t\t\tcellIdentity\n\t\t\t});\n\t\t\tbreak;\n\t\tcase BUTTON_REFERENCE_OPENER:\n\t\t\tdispatch(ACTION_TYPES.REFERENCE_OPENER_CLICKED, { cellIdentity });\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nconst referenceOpenerClicked = ({ dispatch, properties, action }) => {\n\tconst { cellIdentity } = action.payload;\n\tconst {\n\t\t[GRID_ROWS]: gridRows,\n\t\t[GRID_COLUMNS]: gridColumns,\n\t\t[TB_TRANSACTION_SCOPE]: transactionScope,\n\t\t[GRID_TRANSACTIONS]: gridTransactions\n\t} = properties;\n\n\tconst cellModel = getCellModel({ gridRows, gridColumns, cellIdentity });\n\tconst { fieldMeta, displayValue: title } = cellModel;\n\n\t// TODO: currently dependent values are updated directly in grid model without any validations etc.\n\t// So when we update dependent values as normal field values, we can reset reference fieldMeta and use that to decide whether reference is updated or not\n\n\t// check whether reference value is updated\n\tconst referenceUpdated = isReferenceUpdated(\n\t\tgridRows,\n\t\tcellIdentity.rowIndex,\n\t\tgridTransactions\n\t);\n\n\tif (referenceUpdated) {\n\t\tdispatch(ACTION_TYPES.SHOW_GRID_LOADER);\n\t\tdispatch(ACTION_TYPES.FETCH_TABLE_DETAILS, {\n\t\t\tsearch_query: `name=${cellModel.value}`,\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t});\n\t} else {\n\t\tdispatch(ACTION_TYPES.OPEN_REFERENCE_TABLE, {\n\t\t\tsysId: fieldMeta.sysId,\n\t\t\ttitle,\n\t\t\ttransactionScope\n\t\t});\n\t}\n};\n\nconst fetchTableDetails = createHttpEffect(\n\t`/api/sn_app_eng_studio/generic/template-tables`,\n\t{\n\t\tmethod: 'GET',\n\t\tqueryParams: ['sysparm_transaction_scope', 'search_query'],\n\t\tsuccessActionType: ACTION_TYPES.FETCH_TABLE_DETAILS_SUCCEEDED,\n\t\terrorActionType: ACTION_TYPES.HIDE_GRID_LOADER,\n\t\tbatch: false\n\t}\n);\n\nconst fetchTableDetailsSucceeded = ({ action, dispatch, properties }) => {\n\tconst {\n\t\tpayload: { result }\n\t} = action;\n\tconst { [TB_TRANSACTION_SCOPE]: transactionScope } = properties;\n\n\tdispatch(ACTION_TYPES.HIDE_GRID_LOADER);\n\tif (result.length) {\n\t\tconst details = result[0];\n\t\tdispatch(ACTION_TYPES.OPEN_REFERENCE_TABLE, {\n\t\t\tsysId: details.sys_id,\n\t\t\ttitle: details.label,\n\t\t\ttransactionScope\n\t\t});\n\t}\n};\n\nconst openReferenceTable = ({ action, properties }) => {\n\tconst { [TB_IS_IN_AES]: isInAppEngineStudio } = properties;\n\tconst { sysId, transactionScope, title } = action.payload;\n\tconst url = getTableUrlForTableBuilder(sysId, transactionScope);\n\tconst subtitle = t('Table');\n\tconst id = `${sysId}-tab`;\n\t/*istanbul ignore if*/\n\tif (isInAppEngineStudio) {\n\t\tnew AppEngineStudioAPI().openAppEngineStudioTab({\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\turl,\n\t\t\tid\n\t\t});\n\t} else {\n\t\twindow.open(url, id);\n\t}\n};\n\nexport const deleteControlClicked = ({ dispatch, properties, action }) => {\n\tconst {\n\t\tcellIdentity: { rowIndex }\n\t} = action.payload;\n\tconst {\n\t\tgridRows,\n\t\ttableMetadata: { name },\n\t\tgridTransactions,\n\t\tperspective,\n\t\tsysId\n\t} = properties;\n\tconst {\n\t\tsysId: recordSysId,\n\t\trowData: {\n\t\t\tcolumn_label: { displayValue: fieldLabel },\n\t\t\telement: { value: fieldName },\n\t\t\tinternal_type: { value: fieldType }\n\t\t}\n\t} = gridRows[rowIndex];\n\tconst meta = {\n\t\tactualTableName: name,\n\t\tperspective,\n\t\trecordSysId,\n\t\tfieldName,\n\t\tisDataCheckRequired: fieldType === FIELD_TYPES.BOOLEAN ? false : true\n\t};\n\n\t//newly created empty row deletion\n\t/*istanbul ignore else*/\n\tif (isUnsavedRecord(recordSysId) && !gridTransactions[recordSysId]) {\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__DELETE_ROW_FROM_MODEL, {\n\t\t\trecordSysId\n\t\t});\n\t} else {\n\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL, {\n\t\t\ttemplate: () => (\n\t\t\t\t<sn-tb-confirm-delete\n\t\t\t\t\tisTable={false}\n\t\t\t\t\tname={getFieldLabel(fieldLabel, fieldName)}\n\t\t\t\t\tneedUserConfirmationInput={false}\n\t\t\t\t\ttableName={TABLES.DICTIONARY}\n\t\t\t\t\tsysId={sysId}\n\t\t\t\t\tshowDeleteSuccessInfo={false}\n\t\t\t\t\tmeta={meta}\n\t\t\t\t/>\n\t\t\t)\n\t\t});\n\t}\n};\n\nexport const deleteRowFromGridModel = ({\n\tproperties,\n\tupdateProperties,\n\taction\n}) => {\n\tconst { recordSysId: sysIdToRemove } = action.payload;\n\tconst gridRows = properties[GRID_ROWS];\n\tconst resultantGridRows = gridRows.filter(\n\t\t(_, i) => gridRows[i].sysId !== sysIdToRemove\n\t);\n\tupdateProperties({\n\t\t[GRID_ROWS]: resultantGridRows,\n\t\t[ROW_DELETED]: Date.now()\n\t});\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_INITIATED]: gridDataFetchInitiated,\n\t[ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_STARTED]: gridDataFetchStarted,\n\t[ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_SUCCEEDED]: gridDataFetchSucceeded,\n\t[ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_FAILED]: gridDataFetchFailed,\n\n\t[ACTION_TYPES.GRID_MODEL__TRANSFORM_GRID_MODEL]: transformGridModel,\n\t[ACTION_TYPES.GRID_MODEL__UPDATE_CELL_MODEL]: updateCellModel,\n\t[ACTION_TYPES.GRID_MODEL__UPDATE_CELL_MODEL_BATCH]: updateCellModelBatch,\n\t[ACTION_TYPES.SN_TB_FIELD__VALUE_CHANGED]: {\n\t\teffect: gridCellValueChanged,\n\t\tmodifier: { name: 'debounce', delay: 50 }\n\t},\n\t[ACTION_TYPES.GRID_MODEL__NEW_ROW_BTN_CLICKED]: {\n\t\teffect: addNewRowBtnClicked,\n\t\tmodifier: { name: 'throttle', limit: 1000 }\n\t},\n\t[ACTION_TYPES.NOW_TOGGLE__CHECKED_SET]: ({ action, dispatch }) => {\n\t\tconst { value, cellIdentity, origin } = action.payload;\n\t\t// make sure this action should be from grid\n\t\tif (origin !== 'GRID') return;\n\n\t\tconst data = { displayValue: value, value };\n\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__VALUE_CHANGED, {\n\t\t\tdata,\n\t\t\tcellIdentity\n\t\t});\n\t},\n\t[ACTION_TYPES.GRID_MODEL__SET_FOCUS_RETAINABLE_CELL]: ({\n\t\taction,\n\t\tupdateState\n\t}) => {\n\t\tconst { node } = action.payload;\n\t\tupdateStateWithoutRender(\n\t\t\t{\n\t\t\t\t[`behaviors.${BEHAVIOR_NAME}.focusRetainableCell`]: node\n\t\t\t},\n\t\t\tupdateState\n\t\t);\n\t},\n\t[ACTION_TYPES.GRID_MODEL__RETAIN_FOCUS_TO_GRID_CELL]: ({\n\t\tstate,\n\t\tupdateState\n\t}) => {\n\t\tconst { focusRetainableCell } = state.behaviors[BEHAVIOR_NAME];\n\t\tif (focusRetainableCell) {\n\t\t\tfocusRetainableCell.focus();\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{\n\t\t\t\t\t[`behaviors.${BEHAVIOR_NAME}.focusRetainableCell`]: null\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t);\n\t\t}\n\t},\n\t[ACTION_TYPES.SN_TB_FIELD__VALUE_UNCHANGED]: gridCellValueUnchanged,\n\t[ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_STARTED]: gridCellValidationStarted,\n\t[ACTION_TYPES.GRID_MODEL__CELL_VALIDATION_COMPLETED]: gridCellValidationCompleted,\n\t[ACTION_TYPES.GRID_MODEL__UPDATE_DERIVED_FIELD]: updateDerivedField,\n\t[ACTION_TYPES.GRID_MODEL__GRID_UPDATE_SORT]: updateGridSort,\n\n\t[ACTION_TYPES.NOW_PAGINATION_CONTROL__SELECTED_PAGE_SET]: pageChanged,\n\t[ACTION_TYPES.NOW_PAGINATION_CONTROL__SELECTED_PAGE_SIZE_SET]: pageSizeChanged,\n\t[ACTION_TYPES.NOW_DROPDOWN__ITEM_CLICKED]: onDropdownValueSelected,\n\n\t[ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_INITIATED]: validateFieldInitiated,\n\t[ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_STARTED]: validateFieldStarted,\n\t[ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_SUCCEEDED]: validateFieldSucceeded,\n\t[ACTION_TYPES.GRID_MODEL__VALIDATE_FIELD_FAILED]: validateFieldFailed,\n\t[ACTION_TYPES.GRID_MODEL__SYNC_GRID_MODEL_WITH_TRANSACTION]: syncGridModelWithTransactions,\n\t[ACTION_TYPES.NOW_BUTTON_ICONIC__CLICKED]: onControlButtonClicked,\n\t[ACTION_TYPES.GRID_MODEL__DELETE_CONTROL_CLICKED]: deleteControlClicked,\n\n\t// actions related to open reference tables\n\t[ACTION_TYPES.REFERENCE_OPENER_CLICKED]: referenceOpenerClicked,\n\t[ACTION_TYPES.OPEN_REFERENCE_TABLE]: openReferenceTable,\n\t[ACTION_TYPES.FETCH_TABLE_DETAILS]: fetchTableDetails,\n\t[ACTION_TYPES.FETCH_TABLE_DETAILS_SUCCEEDED]: fetchTableDetailsSucceeded,\n\t[ACTION_TYPES.SHOW_GRID_LOADER]: ({ updateProperties }) => {\n\t\tupdateProperties({\n\t\t\t[GRID_LOADER]: true\n\t\t});\n\t},\n\t[ACTION_TYPES.HIDE_GRID_LOADER]: ({ updateProperties }) => {\n\t\tupdateProperties({\n\t\t\t[GRID_LOADER]: false\n\t\t});\n\t},\n\t[ACTION_TYPES.REFRESH_GRID]: ({ properties, dispatch }) => {\n\t\tconst {\n\t\t\t[TB_SYS_ID]: sysId,\n\t\t\t[TB_PERSPECTIVE]: perspective,\n\t\t\t[TB_TRANSACTION_SCOPE]: sysparm_transaction_scope,\n\t\t\t[GRID_FILTER_QUERY]: query\n\t\t} = properties;\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_INITIATED, {\n\t\t\tsysId,\n\t\t\tperspective,\n\t\t\tsysparm_transaction_scope,\n\t\t\tquery\n\t\t});\n\t},\n\t[ACTION_TYPES.FILTER_GRID]: ({\n\t\taction,\n\t\tproperties,\n\t\tupdateProperties,\n\t\tdispatch\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { query }\n\t\t} = action;\n\t\tconst {\n\t\t\t[TB_SYS_ID]: sysId,\n\t\t\t[TB_PERSPECTIVE]: perspective,\n\t\t\t[TB_TRANSACTION_SCOPE]: sysparm_transaction_scope\n\t\t} = properties;\n\n\t\tdispatch(ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_INITIATED, {\n\t\t\tsysId,\n\t\t\tperspective,\n\t\t\tsysparm_transaction_scope,\n\t\t\tquery\n\t\t});\n\t\tupdateProperties({ [GRID_FILTER_QUERY]: query });\n\t},\n\n\t[ACTION_TYPES.GRID_MODEL__DELETE_ROW_FROM_MODEL]: deleteRowFromGridModel,\n\t// TODO: remove this action; added for QA to test\n\tTEST_GRID_MODEL: ({ properties: { gridRows } }) => {\n\t\tconsole.log(gridRows);\n\t}\n};\n","import { BEHAVIOR_NAME } from './constants';\nimport { actionHandlers } from './actions';\n\nexport const userData = {\n\tname: BEHAVIOR_NAME,\n\tactionHandlers\n};\n","import { ACTION_TYPES } from './constants';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { isFunction } from '../../commons/utils';\n\nconst userPrefUpdateQuery = `\nmutation($preferences: [GlideDomain_PreferenceArgument!]!) {\n\tGlideDomain_Mutation {\t\n\t\tuser {\t\n\t\t\tsetPreferences(preferences: $preferences) {\t\n\t\t\t\tname\t\n\t\t\t\tvalue\t\n\t\t\t}\t\n\t\t}\t\n\t  }\n}\n`;\n\nconst userPrefUpdateEffect = createGraphQLEffect(userPrefUpdateQuery, {\n\tvariableList: ['preferences'],\n\tstartActionType: ACTION_TYPES.USER_DATA__PREF_UPDATE_STARTED,\n\tsuccessActionType: ACTION_TYPES.USER_DATA__PREF_UPDATE_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.USER_DATA__PREF_UPDATE_FAILED\n});\n\nconst userPrefUpdateStarted = () => {\n\tconsole.log('User preference update started');\n};\n\nconst userPrefUpdateSucceeded = ({ action }) => {\n\tconst { onUpdateSuccess } = action.meta;\n\tif (onUpdateSuccess && isFunction(onUpdateSuccess)) onUpdateSuccess();\n};\n\nconst userPrefUpdateFailed = () => {\n\tconsole.log('User preference update failed');\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.USER_DATA__UPDATE_PREF]: userPrefUpdateEffect,\n\t[ACTION_TYPES.USER_DATA__PREF_UPDATE_STARTED]: userPrefUpdateStarted,\n\t[ACTION_TYPES.USER_DATA__PREF_UPDATE_SUCCEEDED]: userPrefUpdateSucceeded,\n\t[ACTION_TYPES.USER_DATA__PREF_UPDATE_FAILED]: userPrefUpdateFailed\n};\n","import { IntegerType } from './integerType';\nimport { BooleanType } from './booleanType';\nimport { FieldType } from './fieldType';\nimport { FIELD_TYPES } from '../../../commons/constants';\nimport { ControlDelType } from './controlDelType';\n\nexport class FieldTypeFactory {\n\tstatic getInstance(column) {\n\t\tswitch (column.primitiveType) {\n\t\t\tcase FIELD_TYPES.INTEGER:\n\t\t\t\treturn new IntegerType(column);\n\t\t\tcase FIELD_TYPES.BOOLEAN:\n\t\t\t\treturn new BooleanType(column);\n\t\t\tcase FIELD_TYPES._CONTROL_DELETE:\n\t\t\t\treturn new ControlDelType(column);\n\t\t\tdefault:\n\t\t\t\treturn new FieldType(column);\n\t\t}\n\t}\n}\n","import { FieldType } from './fieldType';\n\nexport class IntegerType extends FieldType {\n\ttextAlign() {\n\t\treturn 'end';\n\t}\n}\n","import { FieldType } from './fieldType';\n\nexport class BooleanType extends FieldType {\n\ttextAlign() {\n\t\treturn 'center';\n\t}\n}\n","import { FieldType } from './fieldType';\n\nexport class ControlDelType extends FieldType {\n\ttextAlign() {\n\t\treturn 'center';\n\t}\n\n\tstyles() {\n\t\treturn {\n\t\t\tminWidth: 'auto'\n\t\t};\n\t}\n}\n","import { actionHandlers } from './actions';\nimport {\n\tBEHAVIOR_NAME,\n\tTBS_DATA_META,\n\tTBS_DATA_IS_FETCHING,\n\tIS_TBS_DATA_FETCHED,\n\tTBS_DATA_IS_ERROR,\n\tTBS_DATA_COLUMNS,\n\tIS_TABLE_IN_READ_ONLY,\n\tSHOW_WELCOME_SCREEN\n} from './constants';\n\nexport const tableStructureData = {\n\tname: BEHAVIOR_NAME,\n\tproperties: {\n\t\t[TBS_DATA_IS_FETCHING]: {\n\t\t\tdefault: true,\n\t\t\tselectable: true\n\t\t},\n\t\t[TBS_DATA_IS_ERROR]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[IS_TBS_DATA_FETCHED]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[TBS_DATA_META]: {\n\t\t\tdefault: {},\n\t\t\tselectable: true\n\t\t},\n\t\t[TBS_DATA_COLUMNS]: {\n\t\t\tdefault: [],\n\t\t\tselectable: true\n\t\t},\n\t\t[IS_TABLE_IN_READ_ONLY]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[SHOW_WELCOME_SCREEN]: {\n\t\t\tdefault: false,\n\t\t\tschema: { type: 'boolean' },\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport {\n\tACTION_TYPES,\n\tAPI_PATH,\n\tTBS_DATA_COLUMNS,\n\tTBS_DATA_IS_ERROR,\n\tTBS_DATA_IS_FETCHING,\n\tIS_TBS_DATA_FETCHED,\n\tTBS_DATA_META,\n\tIS_TABLE_IN_READ_ONLY,\n\tSHOW_WELCOME_SCREEN\n} from './constants';\nimport { ACTION_TYPES as ALERT_ACTION_TYPES } from '../alerts/constants';\nimport { ACTION_TYPES as FILTER_ACTION_TYPES } from '../filter-model/constants';\nimport { ERROR_ALERT } from '../../commons/constants';\nimport { isObject } from '../../commons/utils';\nimport { isTableInReadOnly, shouldShowNonExtendedFilter } from './utils';\n\nexport const tbsFetchInitiated = createHttpEffect(API_PATH, {\n\tpathParams: ['sysId', 'perspective'],\n\tqueryParams: ['sysparm_transaction_scope'],\n\tbatch: false,\n\tstartActionType:\n\t\tACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_STARTED,\n\tsuccessActionType:\n\t\tACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_SUCCEEDED,\n\terrorActionType:\n\t\tACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_FAILED\n});\n\nexport const tbsFetchStarted = ({ updateProperties }) => {\n\tupdateProperties({\n\t\t[TBS_DATA_IS_FETCHING]: true,\n\t\t[IS_TBS_DATA_FETCHED]: false\n\t});\n};\n\nexport const tbsFetchSucceeded = ({ action, updateProperties, dispatch }) => {\n\tconst {\n\t\tpayload: { result }\n\t} = action;\n\n\tconst isReadOnly = isTableInReadOnly(\n\t\tresult.tableMetadata.isRunningScopeDifferent,\n\t\tresult.tableMetadata.canWrite\n\t);\n\n\tconst showWelcomeScreen = result.preferenceData.showWelcomeScreen;\n\n\tupdateProperties({\n\t\t[TBS_DATA_META]: result.tableMetadata,\n\t\t[TBS_DATA_COLUMNS]: result.columns,\n\t\t[TBS_DATA_IS_FETCHING]: false,\n\t\t[IS_TBS_DATA_FETCHED]: true,\n\t\t[IS_TABLE_IN_READ_ONLY]: isReadOnly,\n\t\t[SHOW_WELCOME_SCREEN]: showWelcomeScreen\n\t});\n\n\tif (shouldShowNonExtendedFilter(result.tableMetadata))\n\t\tdispatch(FILTER_ACTION_TYPES.ENABLE_NON_EXTENDED_FILTER, {\n\t\t\tvalue: true\n\t\t});\n};\n\nexport const tbsFetchFailed = ({ updateProperties, action, dispatch }) => {\n\tconst {\n\t\tpayload: {\n\t\t\tdata: { error }\n\t\t}\n\t} = action;\n\tupdateProperties({\n\t\t[TBS_DATA_IS_ERROR]: true,\n\t\t[TBS_DATA_IS_FETCHING]: false,\n\t\t[IS_TBS_DATA_FETCHED]: false\n\t});\n\n\t/*istanbul ignore else : No else case to test*/\n\tif (isObject(error))\n\t\tdispatch(ALERT_ACTION_TYPES.TB_ALERTS__ADD_ALERTS, {\n\t\t\talerts: [\n\t\t\t\t{\n\t\t\t\t\tcontent: `${error.message}. ${error.detail}`,\n\t\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t\t}\n\t\t\t]\n\t\t});\n};\n\nconst tbsMetaDataChanged = ({ action, properties, updateProperties }) => {\n\tconst { [TBS_DATA_META]: tableMetadata } = properties;\n\tconst { label } = action.payload;\n\n\tupdateProperties({\n\t\t[TBS_DATA_META]: {\n\t\t\t...tableMetadata,\n\t\t\tlabel\n\t\t}\n\t});\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_INITIATED]: tbsFetchInitiated,\n\t[ACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_STARTED]: tbsFetchStarted,\n\t[ACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_SUCCEEDED]: tbsFetchSucceeded,\n\t[ACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_FAILED]: tbsFetchFailed,\n\t[ACTION_TYPES.TABLE_STRUCTURE_DATA__TABLE_META_DATA_CHANGED]: tbsMetaDataChanged\n};\n","// runningScope is different then table should be in read-only mode or user don't have write access\nexport const isTableInReadOnly = (isRunningScopeDifferent, canWrite) =>\n\tisRunningScopeDifferent || !canWrite;\n\nexport const shouldShowNonExtendedFilter = tableMetaData =>\n\t!(tableMetaData.isBaseClass || tableMetaData.isSoloClass);\n","import {\n\tBEHAVIOR_NAME,\n\tGRID_TRANSACTIONS,\n\tIS_TRANSACTION_MODEL_DIRTY,\n\tCHOICE_TRANSACTIONS\n} from './constants';\nimport { actionHandlers } from './actions';\n\nexport const transactionModel = {\n\tname: BEHAVIOR_NAME,\n\tproperties: {\n\t\t[GRID_TRANSACTIONS]: {\n\t\t\tdefault: {},\n\t\t\tselectable: true\n\t\t},\n\t\t[IS_TRANSACTION_MODEL_DIRTY]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t// TODO: store choice options as it is not part of grid model\n\t\t/**\n\t\t * {\n\t\t * <id>: {\n\t\t * action: CHOICE_OPTIONS,\n\t\t * inputs: {\n\t\t * choice_options: [\n\t\t * {value, displayValue, sequence}\n\t\t * ]\n\t\t * }\n\t\t * }\n\t\t * }\n\t\t */\n\t\t[CHOICE_TRANSACTIONS]: {\n\t\t\tdefault: {},\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import {\n\tACTION_TYPES,\n\tTRANSACTION_ACTIONS,\n\tGRID_TRANSACTIONS,\n\tIS_TRANSACTION_MODEL_DIRTY\n} from './constants';\nimport {\n\tcreateTransaction,\n\tupdateTransaction,\n\tupdateTransactionNewField,\n\tdoesTransactionsAvailable\n} from './utils';\nimport {\n\tGRID_COLUMNS,\n\tGRID_ROWS,\n\tACTION_TYPES as GRID_MODEL_ACTIONS\n} from '../grid-model';\nimport {\n\tgetRowIdentifier,\n\tgetRowModel,\n\tgetFieldModel\n} from '../grid-model/utils';\nimport { TB_IS_IN_AES } from '../table-initializer';\nimport { AppEngineStudioAPI, isUnsavedRecord } from '../../commons/utils';\n\nconst uiTransactionLog = ({ action, dispatch, properties }) => {\n\tconst {\n\t\tpayload: { action: transactionAction, cellIdentity },\n\t\tpayload\n\t} = action;\n\n\tswitch (transactionAction) {\n\t\tcase TRANSACTION_ACTIONS.GRID_ROW_ADDED: {\n\t\t\tdispatch(\n\t\t\t\tACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_ADD,\n\t\t\t\tpayload\n\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tcase TRANSACTION_ACTIONS.GRID_ROW_MODIFIED: {\n\t\t\tconst { [GRID_ROWS]: gridRows } = properties;\n\t\t\tconst identifier = getRowIdentifier({\n\t\t\t\tcellIdentity,\n\t\t\t\tgridRows\n\t\t\t});\n\t\t\tif (isUnsavedRecord(identifier))\n\t\t\t\tdispatch(ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_ADD, {\n\t\t\t\t\taction: TRANSACTION_ACTIONS.GRID_ROW_ADDED,\n\t\t\t\t\tcellIdentity\n\t\t\t\t});\n\t\t\telse\n\t\t\t\tdispatch(\n\t\t\t\t\tACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_UPDATE,\n\t\t\t\t\tpayload\n\t\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tcase TRANSACTION_ACTIONS.GRID_ROW_DELETED: {\n\t\t\tdispatch(\n\t\t\t\tACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DELETE,\n\t\t\t\tpayload\n\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tdispatch(ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK);\n};\n\nconst uiTransactionAdd = ({ updateProperties, properties, action }) => {\n\tconst {\n\t\tpayload: { action: transactionAction, cellIdentity }\n\t} = action;\n\tconst {\n\t\t[GRID_TRANSACTIONS]: gridTransactions,\n\t\t[GRID_ROWS]: gridRows,\n\t\t[GRID_COLUMNS]: gridColumns\n\t} = properties;\n\n\tswitch (transactionAction) {\n\t\tcase TRANSACTION_ACTIONS.GRID_ROW_ADDED: {\n\t\t\tconst identifier = getRowIdentifier({\n\t\t\t\tcellIdentity,\n\t\t\t\tgridRows\n\t\t\t});\n\t\t\tlet transaction = gridTransactions[identifier];\n\n\t\t\tif (typeof transaction === 'undefined')\n\t\t\t\ttransaction = createTransaction(\n\t\t\t\t\ttransactionAction,\n\t\t\t\t\tgetRowModel({ cellIdentity, gridRows })\n\t\t\t\t);\n\n\t\t\tconst updatedTransaction = updateTransactionNewField(\n\t\t\t\ttransaction,\n\t\t\t\tgetFieldModel({\n\t\t\t\t\tgridRows,\n\t\t\t\t\tgridColumns,\n\t\t\t\t\tcellIdentity\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst newGridTransactions = {\n\t\t\t\t...gridTransactions,\n\t\t\t\t[identifier]: updatedTransaction\n\t\t\t};\n\t\t\tupdateProperties({ [GRID_TRANSACTIONS]: newGridTransactions });\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nconst uiTransactionUpdate = ({ updateProperties, properties, action }) => {\n\tconst {\n\t\tpayload: { action: transactionAction, cellIdentity }\n\t} = action;\n\tconst {\n\t\t[GRID_TRANSACTIONS]: gridTransactions,\n\t\t[GRID_ROWS]: gridRows,\n\t\t[GRID_COLUMNS]: gridColumns\n\t} = properties;\n\n\tswitch (transactionAction) {\n\t\tcase TRANSACTION_ACTIONS.GRID_ROW_MODIFIED: {\n\t\t\tconst identifier = getRowIdentifier({\n\t\t\t\tcellIdentity,\n\t\t\t\tgridRows\n\t\t\t});\n\t\t\tlet transaction = gridTransactions[identifier];\n\n\t\t\tif (typeof transaction === 'undefined')\n\t\t\t\ttransaction = createTransaction(transactionAction, {});\n\n\t\t\tconst updatedTransaction = updateTransaction(\n\t\t\t\ttransaction,\n\t\t\t\tgetFieldModel({\n\t\t\t\t\tgridRows,\n\t\t\t\t\tgridColumns,\n\t\t\t\t\tcellIdentity\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst newGridTransactions = {\n\t\t\t\t...gridTransactions,\n\t\t\t\t[identifier]: updatedTransaction\n\t\t\t};\n\t\t\tupdateProperties({ [GRID_TRANSACTIONS]: newGridTransactions });\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nexport const uiTransactionUpdateBatch = ({\n\tupdateProperties,\n\tproperties,\n\taction,\n\tdispatch\n}) => {\n\tconst {\n\t\tpayload: { action: transactionAction, batch }\n\t} = action;\n\tconst {\n\t\t[GRID_TRANSACTIONS]: gridTransactions,\n\t\t[GRID_ROWS]: gridRows,\n\t\t[GRID_COLUMNS]: gridColumns\n\t} = properties;\n\n\t// supporting only grid_row_modified batch\n\tswitch (transactionAction) {\n\t\tcase TRANSACTION_ACTIONS.GRID_ROW_MODIFIED: {\n\t\t\t// build newer transactions\n\t\t\tconst updatedTrx = batch.reduce((acc, curr) => {\n\t\t\t\tconst { cellIdentity } = curr;\n\t\t\t\tconst identifier = getRowIdentifier({\n\t\t\t\t\tcellIdentity,\n\t\t\t\t\tgridRows\n\t\t\t\t});\n\n\t\t\t\tconst isNewField = isUnsavedRecord(identifier);\n\t\t\t\tlet transaction = gridTransactions[identifier];\n\n\t\t\t\tif (typeof transaction === 'undefined') {\n\t\t\t\t\ttransaction = createTransaction(\n\t\t\t\t\t\tisNewField\n\t\t\t\t\t\t\t? TRANSACTION_ACTIONS.GRID_ROW_ADDED\n\t\t\t\t\t\t\t: TRANSACTION_ACTIONS.GRID_ROW_MODIFIED,\n\t\t\t\t\t\tisNewField\n\t\t\t\t\t\t\t? getRowModel({ cellIdentity, gridRows })\n\t\t\t\t\t\t\t: {}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// already recorded transaction then take that transact\n\t\t\t\tif (acc[identifier]) {\n\t\t\t\t\ttransaction = acc[identifier];\n\t\t\t\t}\n\n\t\t\t\tconst fieldModel = getFieldModel({\n\t\t\t\t\tgridRows,\n\t\t\t\t\tgridColumns,\n\t\t\t\t\tcellIdentity\n\t\t\t\t});\n\t\t\t\tconst updatedTransaction = isNewField\n\t\t\t\t\t? updateTransactionNewField(transaction, fieldModel)\n\t\t\t\t\t: updateTransaction(transaction, fieldModel);\n\n\t\t\t\tacc[identifier] = updatedTransaction;\n\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\n\t\t\tconst newGridTransactions = Object.assign(\n\t\t\t\tgridTransactions,\n\t\t\t\tupdatedTrx\n\t\t\t);\n\n\t\t\tupdateProperties({ [GRID_TRANSACTIONS]: newGridTransactions });\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tdispatch(ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK);\n};\n\nexport const uiTransactionPrune = ({ action, updateProperties, dispatch }) => {\n\tconst {\n\t\tpayload: { type }\n\t} = action;\n\tupdateProperties({ [type]: {} });\n\tdispatch(ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK);\n};\n\nexport const uiTransactionDirtyCheck = ({ updateProperties, dispatch }) => {\n\tupdateProperties(({ properties }) => {\n\t\treturn {\n\t\t\tpath: IS_TRANSACTION_MODEL_DIRTY,\n\t\t\tvalue: doesTransactionsAvailable(properties[GRID_TRANSACTIONS])\n\t\t};\n\t});\n\tdispatch(() => ({\n\t\ttype: ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_NOTIFY_STUDIO\n\t}));\n};\n/* istanbul ignore next */\nexport const uiTransactionNotifyStudio = ({ properties }) => {\n\tconst isInAES = properties[TB_IS_IN_AES];\n\tconst isDirty = properties[IS_TRANSACTION_MODEL_DIRTY];\n\t/* istanbul ignore if */\n\tif (isInAES) {\n\t\tnew AppEngineStudioAPI().updateTabState({ hasUnsavedChanges: isDirty });\n\t}\n};\n\nexport const uiTransactionsRefurbish = ({\n\taction,\n\tupdateProperties,\n\tdispatch\n}) => {\n\tconst {\n\t\tpayload: { transactions }\n\t} = action;\n\tupdateProperties({\n\t\t[GRID_TRANSACTIONS]: transactions\n\t});\n\tdispatch(GRID_MODEL_ACTIONS.GRID_MODEL__SYNC_GRID_MODEL_WITH_TRANSACTION);\n};\n\nexport const uiTransactionDelete = ({\n\tproperties,\n\taction,\n\tdispatch,\n\tupdateProperties\n}) => {\n\tconst gridTransactions = properties[GRID_TRANSACTIONS];\n\n\tif (Object.keys(gridTransactions).length === 0) return null;\n\n\tconst resultantGridTransactions = { ...gridTransactions };\n\tconst { recordSysId } = action.payload;\n\tdelete resultantGridTransactions[recordSysId];\n\tupdateProperties({\n\t\t[GRID_TRANSACTIONS]: resultantGridTransactions\n\t});\n\n\tdispatch(ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK);\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_LOG]: uiTransactionLog,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_ADD]: uiTransactionAdd,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_UPDATE]: uiTransactionUpdate,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_UPDATE_BATCH]: uiTransactionUpdateBatch,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_PRUNE]: uiTransactionPrune,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DIRTY_CHECK]: {\n\t\teffect: uiTransactionDirtyCheck,\n\t\tmodifier: { name: 'debounce', delay: 20 } // batch multiple calls, if any\n\t},\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_NOTIFY_STUDIO]: uiTransactionNotifyStudio,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTIONS_REFURBISH]: uiTransactionsRefurbish,\n\t[ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_DELETE]: uiTransactionDelete,\n\t/// TODO - remove , added for QA to test\n\tTEST_TRANSACTION: ({ properties: { gridTransactions } }) => {\n\t\t/* istanbul ignore next */\n\t\tconsole.log(gridTransactions);\n\t}\n};\n","/**\n * create a transaction object\n * @param {string} action - defined action\n * @param {object} inputs - associated values for action\n */\nexport const createTransaction = (action, inputs) => ({\n\taction,\n\tinputs: {\n\t\t...inputs\n\t}\n});\n\n/**\n * update transaction with new inputs\n * @param {object} transaction - transaction object\n * @param {object} inputs - new values that adds/updates existing inputs\n */\nexport const updateTransaction = (transaction, inputs) => ({\n\t...transaction,\n\tinputs: {\n\t\t...transaction.inputs,\n\t\t...inputs\n\t}\n});\n\nexport const updateTransactionNewField = (transaction, inputs) => ({\n\t...transaction,\n\tinputs: {\n\t\t...transaction.inputs,\n\t\trowData: {\n\t\t\t...transaction.inputs.rowData,\n\t\t\t...inputs\n\t\t}\n\t}\n});\n\nexport const doesTransactionsAvailable = input => Object.keys(input).length;\n","import { actionHandlers } from './actions';\nimport {\n\tBEHAVIOR_NAME,\n\tTB_SYS_ID,\n\tTB_PERSPECTIVE,\n\tTB_IS_INPUT_READY,\n\tTB_TRANSACTION_SCOPE,\n\tTB_IS_IN_AES,\n\tDEFAULT_SCOPE\n} from './constants';\nimport { TB_PERSPECTIVES } from '../../commons/constants';\n\nexport const tableInitializer = {\n\tname: BEHAVIOR_NAME,\n\tproperties: {\n\t\t[TB_SYS_ID]: {\n\t\t\tdefault: '',\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_PERSPECTIVE]: {\n\t\t\tdefault: TB_PERSPECTIVES.VIEW_FIELD_ROW,\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_IS_INPUT_READY]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_TRANSACTION_SCOPE]: {\n\t\t\tdefault: DEFAULT_SCOPE,\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_IS_IN_AES]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import {\n\tACTION_TYPES,\n\tTB_IS_INPUT_READY,\n\tTB_NAMESPACE,\n\tTB_ROUTES,\n\tTB_SYS_ID,\n\tTB_PERSPECTIVE,\n\tTB_IS_IN_AES,\n\tTB_TRANSACTION_SCOPE\n} from './constants';\nimport { ACTION_TYPES as TBS_ACTION_TYPES } from '../table-structure-data';\nimport {\n\tfindMatchedRoute,\n\textractURLParams,\n\tisInsideAES,\n\tgetTransactionScope\n} from './utils';\nimport { rwHandle, ACTION_TYPES as RW_ACTION_TYPES } from '../record-watcher';\nimport { TABLES } from '../../commons/constants';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../../components/sn-table-builder/constants';\n\nconst initiateTable = ({ dispatch, properties, updateProperties }) => {\n\tconst sysId = properties[TB_SYS_ID];\n\tconst perspective = properties[TB_PERSPECTIVE];\n\tconst transactionScope = getTransactionScope(\n\t\tproperties[TB_TRANSACTION_SCOPE]\n\t);\n\tconst updates = {\n\t\t[TB_IS_IN_AES]: isInsideAES(),\n\t\t[TB_TRANSACTION_SCOPE]: transactionScope\n\t};\n\n\tif (sysId) {\n\t\tupdateProperties({ [TB_IS_INPUT_READY]: true, ...updates });\n\t\tdispatch(\n\t\t\tTBS_ACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_INITIATED,\n\t\t\t{\n\t\t\t\tsysId,\n\t\t\t\tperspective,\n\t\t\t\tsysparm_transaction_scope: transactionScope\n\t\t\t}\n\t\t);\n\t} else {\n\t\tconst path = window.location.pathname;\n\t\tconst matchedRoute = findMatchedRoute(TB_NAMESPACE, TB_ROUTES, path);\n\t\tif (matchedRoute && matchedRoute.path) {\n\t\t\tconst routeParams = extractURLParams(\n\t\t\t\tpath,\n\t\t\t\t`${TB_NAMESPACE}${matchedRoute.path}`\n\t\t\t);\n\t\t\tupdateProperties({ [TB_IS_INPUT_READY]: true, ...updates });\n\t\t\tdispatch(ACTION_TYPES.TABLE_INITIALIZER__ROUTE_MATCH_FOUND, {\n\t\t\t\trouteParams\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch(ACTION_TYPES.TABLE_INITIALIZER__ROUTE_MATCH_NOT_FOUND);\n\t\t}\n\t}\n};\n\nconst routeMatchFound = ({\n\tdispatch,\n\tproperties,\n\tupdateProperties,\n\taction\n}) => {\n\tconst perspective = properties[TB_PERSPECTIVE];\n\tconst transactionScope = properties[TB_TRANSACTION_SCOPE];\n\tconst {\n\t\tpayload: { routeParams }\n\t} = action;\n\tconst sysId = routeParams.sysId;\n\tupdateProperties({ [TB_SYS_ID]: sysId });\n\tdispatch(\n\t\tTBS_ACTION_TYPES.TABLE_STRUCTURE_DATA__FETCH_TABLE_STRUCTURE_INITIATED,\n\t\t{\n\t\t\tsysId,\n\t\t\tperspective,\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t}\n\t);\n\trwHandle(TABLES.SYS_DB_OBJECT, `sys_id=${sysId}`, true, dispatch);\n};\n\nconst routeMatchNotFound = () => {\n\t//TODO\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.TABLE_INITIALIZER__INIT]: initiateTable,\n\t[ACTION_TYPES.TABLE_INITIALIZER__ROUTE_MATCH_FOUND]: routeMatchFound,\n\t[ACTION_TYPES.TABLE_INITIALIZER__ROUTE_MATCH_NOT_FOUND]: routeMatchNotFound,\n\t[RW_ACTION_TYPES.RECORD_WATCHER__RECORD_DELETED]: ({\n\t\tdispatch,\n\t\taction,\n\t\tproperties\n\t}) => {\n\t\tconst tbSysId = properties[TB_SYS_ID];\n\t\tconst { sys_id } = action.payload;\n\n\t\tif (tbSysId === sys_id) {\n\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL, {\n\t\t\t\ttemplate: () => (\n\t\t\t\t\t<sn-tb-confirm-delete\n\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\tname={properties.tableMetadata.label}\n\t\t\t\t\t\tisDeleted={true}\n\t\t\t\t\t\tshowDeleteSuccessInfo={true}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\t}\n};\n","export function createPatternMatchRegExp(patternString) {\n\tconst wildcardRegExp = /\\*$/;\n\tlet regexpString = patternString.replace(/:\\w+/g, '\\\\w+');\n\tif (wildcardRegExp.test(patternString)) {\n\t\tregexpString = regexpString.replace(wildcardRegExp, '.*');\n\t}\n\treturn new RegExp(`${regexpString}$`);\n}\n\nexport function extractURLParams(url, pattern) {\n\tif (typeof url !== 'string' || typeof pattern !== 'string') {\n\t\treturn {};\n\t}\n\n\tconst patternPaths = pattern.split('/');\n\tconst urlPaths = url.split('/');\n\n\treturn patternPaths.reduce((params, patternSegment, index) => {\n\t\tif (patternSegment.charAt(0) !== ':') {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst propName = patternSegment.substr(1);\n\t\treturn {\n\t\t\t...params,\n\t\t\t[propName]: urlPaths[index]\n\t\t};\n\t}, {});\n}\n\nexport function findMatchedRoute(basePath, routes, pathName) {\n\treturn routes.find(route => {\n\t\tconst patternRegExp = createPatternMatchRegExp(\n\t\t\t`${basePath}${route.path}`\n\t\t);\n\t\treturn patternRegExp.test(pathName);\n\t});\n}\n\nexport const isInsideAES = () => {\n\treturn process.env.NODE_ENV === 'development'\n\t\t? window.appEngineStudioBuilderAPI &&\n\t\t\t\twindow.appEngineStudioBuilderAPI.isAppEngineStudio\n\t\t: (window.frameElement &&\n\t\t\t\twindow.frameElement.appEngineStudioBuilderAPI &&\n\t\t\t\twindow.frameElement.appEngineStudioBuilderAPI\n\t\t\t\t\t.isAppEngineStudio) ||\n\t\t\t\tfalse;\n};\n\n// should have been provided in the url search params. sysparm_transaction_scope or else take from property\nexport const getTransactionScope = transactionScope => {\n\tconst urlSearch = new URLSearchParams(window.location.search);\n\treturn urlSearch.has('sysparm_transaction_scope')\n\t\t? urlSearch.get('sysparm_transaction_scope')\n\t\t: transactionScope;\n};\n","import { ACTION_TYPES } from './constants';\n\n// build rw compatible query\nexport const buildAmbQuery = query => btoa(query).replace(/=/g, '-');\n\nexport const rwHandle = (table, query, subscribe, dispatch) => {\n\tconst filter = buildAmbQuery(query);\n\tdispatch(ACTION_TYPES.RECORD_WATCHER__DO_SUBSCRIBE, {\n\t\ttable,\n\t\tfilter,\n\t\tsubscribe\n\t});\n};\n","import { BEHAVIOR_NAME } from './constants';\nimport { actionHandlers } from './actions';\n\nexport const recordWatcher = {\n\tname: BEHAVIOR_NAME,\n\tactionHandlers\n};\n","import { createAmbSubscriptionEffect } from '@servicenow/ui-effect-amb';\nimport { ACTION_TYPES, OPERATIONS } from './constants';\n\nconst recordWatcher = createAmbSubscriptionEffect(\n\t'/rw/default/:table/:filter',\n\t{\n\t\tmessageReceivedActionType: ACTION_TYPES.RECORD_WATCHER__MESSAGE_RECEIVED\n\t}\n);\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.RECORD_WATCHER__DO_SUBSCRIBE]: recordWatcher,\n\t[ACTION_TYPES.RECORD_WATCHER__MESSAGE_RECEIVED]: ({ action, dispatch }) => {\n\t\tconst { data } = action.payload;\n\t\tif (data.operation === OPERATIONS.DELETE)\n\t\t\tdispatch(ACTION_TYPES.RECORD_WATCHER__RECORD_DELETED, {\n\t\t\t\tsys_id: data.sys_id\n\t\t\t});\n\t}\n};\n","module.exports = __TECTONIC__$servicenow_ui_effect_amb;","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport {\n\tFIELD_TYPES,\n\tTABLE_COLUMNS,\n\tINTERNAL_TYPES\n} from '../../commons/constants';\nimport {\n\tregisterControlCellEvents,\n\tgetFieldMeta,\n\tisCellWritable,\n\tisCellEditable,\n\tshouldAddTabbableClass,\n\tgetBodyCellAttributes,\n\tisControlType\n} from './utils';\nimport { t } from 'sn-translate';\nimport '@servicenow/now-button';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-popover';\nimport '../../components/sn-tb-field';\nimport '../../components/sn-tb-popover-content';\nimport { resolveInfoForTypes, isUnsavedRecord } from '../../commons/utils';\nimport { VARIANT_VIEW } from '../../components/sn-tb-choice/constants';\nimport { TbIcon } from '../../partials/table-icon/view';\nimport { EVENT_KEY } from '../../commons/constants';\nimport {\n\tBUTTON_DELETE_CONTROL,\n\tBUTTON_REFERENCE_OPENER\n} from '../../behaviors/grid-model/constants';\nimport { EDIT_POPOVER_ID } from '../../components/sn-tb-grid/constants';\n\nconst renderDeleteControl = ({ cellIdentity }, context) => {\n\tconst { columnDef, entry } = context;\n\tconst { canDelete } = entry;\n\n\treturn (\n\t\t<now-button-iconic\n\t\t\tclassName='delete-control tabbable -direct-interactable'\n\t\t\ticon={columnDef.icon}\n\t\t\tsize='md'\n\t\t\thidePadding={true}\n\t\t\tvariant='tertiary'\n\t\t\ttooltipContent={t('Delete row')}\n\t\t\tbare={true}\n\t\t\tdisabled={!canDelete}\n\t\t\tconfigAria={{ 'aria-label': t('Delete row') }}\n\t\t\tappend-to-payload={{\n\t\t\t\tcellIdentity,\n\t\t\t\tbutton: BUTTON_DELETE_CONTROL\n\t\t\t}}\n\t\t\ttabindex='-1'\n\t\t/>\n\t);\n};\n\nconst renderUnsavedRowIndicator = ({ entry }) => {\n\tconst { sysId } = entry;\n\n\tif (isUnsavedRecord(sysId)) {\n\t\treturn (\n\t\t\t<now-icon\n\t\t\t\tclassName='unsaved-row-indicator'\n\t\t\t\ticon='circle-fill'\n\t\t\t\tsize='sm'\n\t\t\t\thidePadding={true}\n\t\t\t/>\n\t\t);\n\t}\n\treturn null;\n};\n\nconst renderControls = (computedContext, context) => {\n\treturn (\n\t\t<div className='content-wrap'>\n\t\t\t<div className='tb-grid-cell-value'>\n\t\t\t\t{renderDeleteControl(computedContext, context)}\n\t\t\t\t{renderUnsavedRowIndicator(context)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderLockControl = (computedContext, context) => {\n\tconst { entry, columnDef } = context;\n\tconst tooltipContent =\n\t\tcolumnDef.hostTable === entry.additionalRowData.name.value\n\t\t\t? t('This is read only field')\n\t\t\t: t('This field is from extended table and you cannot modify it');\n\n\treturn (\n\t\t<div className='content-wrap'>\n\t\t\t<div className='tb-grid-cell-value'>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tclassName='tabbable -direct-interactable'\n\t\t\t\t\ticon='lock-outline'\n\t\t\t\t\tsize='md'\n\t\t\t\t\thidePadding={true}\n\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\ttooltipContent={tooltipContent}\n\t\t\t\t\tbare={true}\n\t\t\t\t\tdisabled={true}\n\t\t\t\t\tconfigAria={{ 'aria-label': t('Non-editable row') }}\n\t\t\t\t\ttabindex='-1'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderRowControl = (computedContext, context) => {\n\tconst {\n\t\tentry,\n\t\tcolumnDef: { isTableInReadOnly }\n\t} = context;\n\n\tif (isTableInReadOnly) return renderLockControl(computedContext, context);\n\n\tconst { canWrite: canRowWritable } = entry;\n\n\tif (canRowWritable) return renderControls(computedContext, context);\n\telse return renderLockControl(computedContext, context);\n};\n\nconst renderToggleComponent = (computedContext, label) => {\n\tconst { cellIdentity, canCellWritable, cellModel } = computedContext;\n\n\treturn (\n\t\t<div className='content-wrap'>\n\t\t\t<div className='tb-grid-cell-value'>\n\t\t\t\t<now-toggle\n\t\t\t\t\tclassName='tabbable -direct-interactable'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tchecked={\n\t\t\t\t\t\tcellModel.value ? JSON.parse(cellModel.value) : false\n\t\t\t\t\t}\n\t\t\t\t\tdisabled={!canCellWritable}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tcellIdentity,\n\t\t\t\t\t\torigin: 'GRID'\n\t\t\t\t\t}}\n\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\tswitch: {\n\t\t\t\t\t\t\t'aria-label': t(label)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\ttabindex='-1'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderEditableCell = (computedContext, context) => {\n\tconst { cellIdentity, cellModel, primitiveType } = computedContext;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-popover\n\t\t\t\tmanage-opened\n\t\t\t\topened={true}\n\t\t\t\thide-tail\n\t\t\t\tpositions={[\n\t\t\t\t\t{ target: 'top-start', content: 'top-start' },\n\t\t\t\t\t{ target: 'bottom-start', content: 'bottom-start' }\n\t\t\t\t]}\n\t\t\t\tpositionTarget={cellModel.popoverPositionTarget}\n\t\t\t\tconstrain={{ minWidth: 'target', minHeight: 'target' }}\n\t\t\t\tappend-to-meta={EDIT_POPOVER_ID}\n\t\t\t>\n\t\t\t\t<sn-tb-popover-content slot='content'>\n\t\t\t\t\t<sn-tb-field\n\t\t\t\t\t\tisLoading={cellModel.isLoading}\n\t\t\t\t\t\tisValid={cellModel.isValid}\n\t\t\t\t\t\tmessages={cellModel.messages}\n\t\t\t\t\t\ttype={primitiveType}\n\t\t\t\t\t\tvalue={cellModel.value}\n\t\t\t\t\t\tdisplayValue={cellModel.displayValue}\n\t\t\t\t\t\tautofocus={true}\n\t\t\t\t\t\tappend-to-payload={{ cellIdentity }}\n\t\t\t\t\t\tfieldMeta={getFieldMeta(context, cellIdentity)}\n\t\t\t\t\t/>\n\t\t\t\t</sn-tb-popover-content>\n\t\t\t</now-popover>\n\t\t\t{renderReadonlyCell(computedContext, context)}\n\t\t</Fragment>\n\t);\n};\n\nconst renderCellIcon = ({ columnDef, entry }) => {\n\tif (columnDef.name !== TABLE_COLUMNS.INTERNAL_TYPE) return null;\n\n\tconst { value: type, scalarType = '' } = entry.rowData.internal_type;\n\tconst { icon, image } = resolveInfoForTypes(type, scalarType);\n\treturn <TbIcon ndsIcon={icon} image={image} />;\n};\n\nconst renderAdditionalInfo = ({ columnDef, entry }) => {\n\tconst typeValue = entry.rowData[columnDef.name].value;\n\n\tif (\n\t\tcolumnDef.name !== TABLE_COLUMNS.INTERNAL_TYPE ||\n\t\ttypeValue !== INTERNAL_TYPES.CHOICE\n\t)\n\t\treturn null;\n\n\tconst { fieldMeta } = entry.rowData.internal_type;\n\treturn (\n\t\t<sn-tb-choice\n\t\t\tclassName='additional-info'\n\t\t\tvariant={VARIANT_VIEW}\n\t\t\tchoices={fieldMeta.choices}\n\t\t\tchoiceType={fieldMeta.choiceType}\n\t\t/>\n\t);\n};\n\nconst renderReferenceOpener = ({ columnDef, entry }, cellIdentity) => {\n\tconst value = columnDef.accessor(entry, columnDef);\n\tif (columnDef.name !== TABLE_COLUMNS.REFERENCE || !value) return;\n\n\treturn (\n\t\t<now-button-iconic\n\t\t\tclassName='tabbable -reference-opener'\n\t\t\ticon='open-link-right-outline'\n\t\t\tsize='md'\n\t\t\thidePadding={true}\n\t\t\tbare={true}\n\t\t\tvariant='tertiary'\n\t\t\ttooltipContent={t('Open reference table')}\n\t\t\tconfigAria={{ 'aria-label': t('Open reference table') }}\n\t\t\tappend-to-payload={{\n\t\t\t\tcellIdentity,\n\t\t\t\tbutton: BUTTON_REFERENCE_OPENER\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst renderReadonlyCell = (computedContext, context) => {\n\tconst { columnDef, entry, dispatch } = context;\n\tconst value = columnDef.accessor(entry, columnDef);\n\tconst {\n\t\tcellIdentity,\n\t\tisControl,\n\t\tcanCellWritable,\n\t\tcanCellEditable,\n\t\tprimitiveType\n\t} = computedContext;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div\n\t\t\t\tclass={{\n\t\t\t\t\t'content-wrap': true,\n\t\t\t\t\t'content-switcher': true,\n\t\t\t\t\ttabbable: shouldAddTabbableClass(\n\t\t\t\t\t\tprimitiveType,\n\t\t\t\t\t\tisControl,\n\t\t\t\t\t\tcanCellWritable\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t\ton-mouseover={({ target }) => {\n\t\t\t\t\t// To show tooltip only when text is truncated\n\t\t\t\t\tif (target.offsetWidth < target.scrollWidth) {\n\t\t\t\t\t\ttarget.title = value;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ton-keydown={e => {\n\t\t\t\t\tif (e.key === EVENT_KEY.ENTER) e.currentTarget.click();\n\t\t\t\t}}\n\t\t\t\t{...getBodyCellAttributes(\n\t\t\t\t\tdispatch,\n\t\t\t\t\tcellIdentity,\n\t\t\t\t\tcanCellWritable,\n\t\t\t\t\tcanCellEditable,\n\t\t\t\t\tisControl\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{renderCellIcon(context)}\n\t\t\t\t<div className='tb-grid-cell-value -truncated'>\n\t\t\t\t\t{value + ''}\n\t\t\t\t</div>\n\t\t\t\t{renderAdditionalInfo(context)}\n\t\t\t</div>\n\t\t\t{renderReferenceOpener(context, cellIdentity)}\n\t\t</Fragment>\n\t);\n};\n\nconst getBodyCellUI = (computedContext, context) => {\n\tconst { columnDef } = context;\n\tconst { canCellEditable } = computedContext;\n\n\t// render delete icon\n\tif (columnDef.primitiveType === FIELD_TYPES._CONTROL_DELETE)\n\t\treturn renderRowControl(computedContext, context);\n\n\t// render toggle control\n\tif (columnDef.primitiveType === FIELD_TYPES.BOOLEAN)\n\t\treturn renderToggleComponent(computedContext, columnDef.label);\n\n\t// render read only cell if cell type is not delete icon/toggle\n\tif (!canCellEditable) return renderReadonlyCell(computedContext, context);\n\n\t// render editable component in popover when cell becomes editable\n\treturn renderEditableCell(computedContext, context);\n};\n\n/**\n * @param {Object} context\n * @param {Object} context.props\n * @param {Object} context.state\n * @param {Function} context.dispatch\n * @param {Object} context.columnDef\n * @param {Array} context.columnDefs\n * @param {Object} context.entry\trow object\n * @param {Integer} context.columnIndex\n * @param {Integer} context.rowIndex\n * @returns {Object} returns JSX markup\n */\nexport const GridBodyCell = context => {\n\tconst { columnDef, entry, rowIndex, columnIndex } = context;\n\tconst primitiveType = columnDef.primitiveType;\n\tconst cellModel = entry.rowData[columnDef.name];\n\tconst hasError = cellModel ? cellModel.hasError : false;\n\tconst canCellWritable = isCellWritable({ entry, columnDef });\n\tconst canCellEditable = isCellEditable({ entry, columnDef });\n\tconst cellIdentity = { rowIndex, columnIndex };\n\tconst isControl = isControlType(primitiveType);\n\t// computedContext info is to avoid re-calc values from context. Future, Try to use computed most often\n\tconst computedContext = {\n\t\tcanCellWritable,\n\t\tcanCellEditable,\n\t\tcellIdentity,\n\t\tisControl,\n\t\tcellModel,\n\t\tprimitiveType\n\t};\n\treturn (\n\t\t<td style={columnDef.styles} tabindex='-1'>\n\t\t\t<div\n\t\t\t\tclass={{\n\t\t\t\t\t'tb-grid-cell': true,\n\t\t\t\t\thasError: hasError\n\t\t\t\t}}\n\t\t\t\t{...registerControlCellEvents(isControl)}\n\t\t\t>\n\t\t\t\t{getBodyCellUI(computedContext, context)}\n\t\t\t</div>\n\t\t</td>\n\t);\n};\n","import { ACTION_TYPES } from '../../behaviors/grid-model';\nimport { getFieldValueFromRecord } from '../../behaviors/grid-model/utils';\nimport {\n\tFIELD_TYPES,\n\tINTERNAL_TYPES,\n\tTABLE_COLUMNS\n} from '../../commons/constants';\n\nexport const getBodyCellAttributes = (\n\tdispatch,\n\tcellIdentity,\n\tcanCellWritable,\n\tcanCellEditable,\n\tisControl\n) => {\n\tlet attrs = {};\n\tif (isControl) return attrs;\n\n\tif (canCellWritable && !canCellEditable) {\n\t\tattrs['on-click'] = e => {\n\t\t\tdispatch(ACTION_TYPES.GRID_MODEL__UPDATE_CELL_MODEL, {\n\t\t\t\tcellIdentity,\n\t\t\t\tdata: {\n\t\t\t\t\tisEditable: true,\n\t\t\t\t\tpopoverPositionTarget:\n\t\t\t\t\t\te.currentTarget.closest('td') ||\n\t\t\t\t\t\te.currentTarget.parentNode ||\n\t\t\t\t\t\te.currentTarget\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\n\treturn attrs;\n};\n\nexport const manageRowFocus = ({ target }) => {\n\tconst trClassList = target.closest('tr').classList;\n\tif (!trClassList.contains('is-focused')) trClassList.add('is-focused');\n\telse trClassList.remove('is-focused');\n};\n\nexport const getFieldMeta = ({ entry, columnDef }, cellIdentity) => ({\n\tfieldLabel: columnDef.label,\n\tfieldName: columnDef.name,\n\ttableName: columnDef.table,\n\trecordSysId: entry.sysId,\n\trecord: entry,\n\tcellIdentity\n});\n\nexport const registerControlCellEvents = isControl => {\n\tlet attrs = {};\n\tif (isControl) {\n\t\tattrs['on-mouseenter'] = e => manageRowFocus(e);\n\t\tattrs['on-mouseleave'] = e => manageRowFocus(e);\n\t}\n\treturn attrs;\n};\n\nexport const isCellWritable = ({ entry, columnDef }) => {\n\tconst { isTableInReadOnly, name } = columnDef;\n\tconst cellData = entry.rowData[name];\n\tconst cellWriteStatus = cellData ? cellData.canWrite : false;\n\tconst canCellWritable = isTableInReadOnly ? false : cellWriteStatus;\n\n\t// if false then return early\n\tif (!canCellWritable) return canCellWritable;\n\n\t// special check, if row type is not reference then make reference column edit false\n\tconst internalType = getFieldValueFromRecord(\n\t\tentry,\n\t\tTABLE_COLUMNS.INTERNAL_TYPE\n\t);\n\tif (\n\t\tinternalType !== INTERNAL_TYPES.REFERENCE &&\n\t\tcolumnDef.name === TABLE_COLUMNS.REFERENCE\n\t) {\n\t\treturn false;\n\t}\n\n\treturn canCellWritable;\n};\n\nexport const shouldAddTabbableClass = (\n\tprimitiveType,\n\tisControl,\n\tcanCellWritable\n) => primitiveType !== FIELD_TYPES.BOOLEAN && !isControl && canCellWritable;\n\nexport const isControlType = primitiveType =>\n\tprimitiveType.startsWith('_control_');\n\nexport const isCellEditable = ({ entry, columnDef }) => {\n\tif (isControlType(columnDef.primitiveType)) return false;\n\tconst { isTableInReadOnly, name } = columnDef;\n\tconst cellData = entry.rowData[name];\n\tconst cellEditStatus = cellData ? cellData.isEditable : false;\n\tconst canCellEditable = isTableInReadOnly ? false : cellEditStatus;\n\treturn canCellEditable;\n};\n","import './sn-tb-field';\n\nexport { ACTION_TYPES } from './constants';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\n\ncreateCustomElement('sn-tb-field', {\n\trenderer: { type: snabbdom },\n\tinitialState: {\n\t\tvalue: undefined,\n\t\tdisplayValue: undefined,\n\t\tpreviousValue: undefined,\n\t\tpreviousDisplayValue: undefined,\n\t\tinvalid: false,\n\t\thasDependent: false,\n\t\tdependentValues: {},\n\t\tcomplexWidget: false,\n\t\tdisableFooter: false,\n\t\ttriggerValidate: { type: '' } // used to trigger validation for sub components on enter/esc. type holds event type\n\t},\n\tproperties: {\n\t\tisLoading: { default: false, schema: { type: 'boolean' } },\n\t\tisValid: { default: true, schema: { type: 'boolean' } },\n\t\tmessages: { default: [], schema: { type: 'array' } },\n\t\ttype: { required: true, schema: { type: 'string' } },\n\t\tvalue: { required: true, schema: { type: 'string' } },\n\t\tdisplayValue: {\n\t\t\trequired: true,\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tautofocus: { default: false, schema: { type: 'boolean' } },\n\t\t/**\n\t\t * Send additional meta required for fields\n\t\t * Ex: For reference recordSysId, tableName etc\n\t\t */\n\t\tfieldMeta: {\n\t\t\tdefault: {},\n\t\t\tschema: { type: 'object' }\n\t\t},\n\t\ttableMetadata: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.tableMetadata\n\t\t},\n\t\tgridColumns: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridColumns\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import '@servicenow/now-toggle';\nimport '@servicenow/now-loader';\nimport '@servicenow/now-button';\nimport { t } from 'sn-translate';\nimport '../sn-tb-reference';\nimport '../sn-tb-type-edit';\nimport '../sn-tb-input';\nimport '../sn-tb-textarea';\nimport '../sn-tb-select';\nimport { getEditableComponent, getSize } from './utils';\nimport { ACTION_TYPES } from './constants';\n\nconst renderEditableComponent = state => {\n\tconst { Control, controlProps } = getEditableComponent(state);\n\treturn <Control {...controlProps} />;\n};\n\nconst renderLoader = isLoading => {\n\tif (!isLoading) return null;\n\treturn <now-loader />;\n};\n\nconst renderFooter = (state, dispatch) => {\n\tconst { complexWidget, disableFooter } = state;\n\n\tif (!complexWidget) return null;\n\n\treturn (\n\t\t<div className='footer-controls'>\n\t\t\t<now-button\n\t\t\t\tclassName='footer-done'\n\t\t\t\tlabel={t('Done')}\n\t\t\t\tsize='md'\n\t\t\t\tvariant='primary'\n\t\t\t\tdisabled={disableFooter}\n\t\t\t\ton-click={() => {\n\t\t\t\t\tif (!disableFooter)\n\t\t\t\t\t\tdispatch(ACTION_TYPES.FOOTER_PRIMARY_BUTTON_CLICKED);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default (state, { dispatch }) => {\n\tconst {\n\t\tproperties: { isLoading },\n\t\tcomplexWidget\n\t} = state;\n\n\treturn (\n\t\t<div className='sn-field-wrapper'>\n\t\t\t<div className={`sn-field-container -${getSize(complexWidget)}`}>\n\t\t\t\t<div className='field-comp'>\n\t\t\t\t\t{renderEditableComponent(state)}\n\t\t\t\t</div>\n\t\t\t\t{renderLoader(isLoading)}\n\t\t\t</div>\n\t\t\t{renderFooter(state, dispatch)}\n\t\t</div>\n\t);\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport { actionHandlers } from './actions';\nimport { eventHandlers } from './events';\nimport styles from './styles.scss';\nimport { DEFAULT_PANEL_LABEL, VARIANTS } from './constants';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\n\n/**\n * @description wrapper for now-typeahead base component to work with platform reference fields.\n * Specially handles field type\n */\ncreateCustomElement('sn-tb-reference', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\tpanelLabel: DEFAULT_PANEL_LABEL,\n\t\tmatches: [],\n\t\tinvalid: false,\n\t\tvalue: '',\n\t\tdisplayValue: '', // used for search\n\t\tmessages: [],\n\t\tisSelected: false,\n\t\tisSetAfterInteractionFinished: false,\n\t\tisFetching: false,\n\t\tisPanelOpen: false\n\t},\n\tproperties: {\n\t\titems: {\n\t\t\tcomputed({ panelLabel: label, matches: children }) {\n\t\t\t\treturn [{ id: 'panel_result_label', label, children }];\n\t\t\t}\n\t\t},\n\t\tvalue: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tdisplayValue: {\n\t\t\tdefault: ''\n\t\t},\n\t\ttableName: {\n\t\t\tdefault: ''\n\t\t},\n\t\tfieldName: {\n\t\t\tdefault: ''\n\t\t},\n\t\trecordSysId: {\n\t\t\tdefault: ''\n\t\t},\n\t\ttransactionScope: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.transactionScope\n\t\t},\n\t\tvariant: {\n\t\t\tdefault: VARIANTS.STANDARD,\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: [VARIANTS.STANDARD, VARIANTS.LEGACY, VARIANTS.TABLE]\n\t\t\t}\n\t\t},\n\t\tallowEmptyValue: {\n\t\t\tdefault: true\n\t\t},\n\t\t// use following when this component used as sub component\n\t\tautofocus: {\n\t\t\tdefault: true\n\t\t},\n\t\tlabel: {\n\t\t\tdefault: ''\n\t\t},\n\t\ttriggerValidate: {\n\t\t\tdefault: {}\n\t\t},\n\t\tisDependent: {\n\t\t\tdefault: false\n\t\t},\n\t\trequired: {\n\t\t\tdefault: false\n\t\t},\n\t\tshowReferencePicker: {\n\t\t\tdefault: false,\n\t\t\tschema: { type: 'boolean' }\n\t\t},\n\t\treferenceInfo: {\n\t\t\tdefault: {},\n\t\t\tschema: { type: 'object' }\n\t\t},\n\t\tplaceholder: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers,\n\teventHandlers\n});\n","import '@servicenow/now-typeahead';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-button';\nimport '../sn-tb-record-list';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../sn-table-builder/constants';\nimport { ACTION_TYPES as TB_FIELD_ACTIONS } from '../sn-tb-field/constants';\nimport { ACTION_TYPES as GRID_NAV_ACTION_TYPES } from '../../behaviors/grid-navigation/constants';\n\nconst renderSearchIcon = ({ dispatch, referenceInfo }) => {\n\t// already saved fields\n\treturn (\n\t\t<now-button-iconic\n\t\t\tclassName='field-control'\n\t\t\tslot='end'\n\t\t\ticon='magnifying-glass-outline'\n\t\t\tvariant='tertiary'\n\t\t\tbare\n\t\t\thide-padding\n\t\t\ton-click={() => {\n\t\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL, {\n\t\t\t\t\ttemplate: () => (\n\t\t\t\t\t\t<sn-tb-record-list\n\t\t\t\t\t\t\tlabel={referenceInfo.fieldLabel}\n\t\t\t\t\t\t\tfield={referenceInfo.fieldName}\n\t\t\t\t\t\t\ttable={referenceInfo.tableName}\n\t\t\t\t\t\t\trecordSysId={referenceInfo.recordSysId}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tcellIdentity: referenceInfo.cellIdentity\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t\tdispatch(\n\t\t\t\t\tGRID_NAV_ACTION_TYPES.GRID_NAVIGATION__RETAIN_CELL_FOCUS,\n\t\t\t\t\t{}\n\t\t\t\t);\n\t\t\t\tdispatch(TB_FIELD_ACTIONS.SN_TB_FIELD__VALUE_UNCHANGED, {\n\t\t\t\t\tcellIdentity: referenceInfo.cellIdentity\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst renderArrowDownIcon = () => {\n\treturn <now-icon icon='chevron-down-outline' size='md' slot='end' />;\n};\n\nexport default (state, { dispatch }) => {\n\tconst {\n\t\tproperties: {\n\t\t\titems,\n\t\t\tdisplayValue,\n\t\t\tfieldName,\n\t\t\tautofocus,\n\t\t\tlabel,\n\t\t\trequired,\n\t\t\treferenceInfo,\n\t\t\tshowReferencePicker,\n\t\t\tplaceholder\n\t\t},\n\t\tinvalid,\n\t\tmessages,\n\t\tisPanelOpen,\n\t\tvalue\n\t} = state;\n\n\treturn (\n\t\t<now-typeahead\n\t\t\tlabel={label}\n\t\t\tautofocus={autofocus}\n\t\t\tname={fieldName}\n\t\t\titems={items}\n\t\t\tinvalid={invalid}\n\t\t\tmessages={isPanelOpen ? [] : messages}\n\t\t\tvalue={displayValue}\n\t\t\tselectedItem={value}\n\t\t\trequired={required}\n\t\t\tplaceholder={placeholder}\n\t\t>\n\t\t\t{showReferencePicker\n\t\t\t\t? renderSearchIcon({\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\treferenceInfo\n\t\t\t\t  })\n\t\t\t\t: renderArrowDownIcon()}\n\t\t</now-typeahead>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_typeahead;","import './sn-tb-record-list';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport { actionHandlers } from './actions';\n\ncreateCustomElement('sn-tb-record-list', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {},\n\tproperties: {\n\t\tlabel: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\trecordSysId: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tfield: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\ttable: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t},\n\tview,\n\tactionHandlers\n});\n","import '@servicenow/now-modal';\nimport '@servicenow/now-record-list-connected';\nimport { t } from 'sn-translate';\n\nexport default state => {\n\tconst {\n\t\tproperties: { label, recordSysId, field, table }\n\t} = state;\n\n\treturn (\n\t\t<div className='sn-tb-record-list'>\n\t\t\t<now-modal opened manage-opened size='lg' header-label={t(label)}>\n\t\t\t\t<now-record-list-connected-reference\n\t\t\t\t\tchars='**'\n\t\t\t\t\trecord-sys-id={recordSysId}\n\t\t\t\t\tfield={field}\n\t\t\t\t\ttable={table}\n\t\t\t\t/>\n\t\t\t</now-modal>\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_record_list_connected;","import { ACTION_TYPES } from './constants';\nimport { ACTION_TYPES as GRID_MODEL_ACTIONS } from '../../behaviors/grid-model/constants';\nimport { ACTION_TYPES as TB_ACTIONS } from '../sn-table-builder/constants';\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.NOW_RECORD_LIST_CONNECTED__ROW_CLICKED]: {\n\t\teffect: ({ action, dispatch }) => {\n\t\t\tconst { row } = action.payload;\n\t\t\tconst data = {\n\t\t\t\tvalue: row.sys_id.value,\n\t\t\t\tdisplayValue: row.displayValue.value\n\t\t\t};\n\t\t\tdispatch(GRID_MODEL_ACTIONS.SN_TB_FIELD__VALUE_CHANGED, { data });\n\t\t\tdispatch(TB_ACTIONS.TABLE_BUILDER__HIDE_MODAL);\n\t\t},\n\t\tstopPropagation: true\n\t}\n};\n","export const ACTION_TYPES = {\n\tNOW_RECORD_LIST_CONNECTED__ROW_CLICKED:\n\t\t'NOW_RECORD_LIST_CONNECTED#ROW_CLICKED'\n};\n","import { ACTION_TYPES, referenceQuery, TABLE_LIST_API } from './constants';\nimport { DEFAULT_PANEL_LABEL, FAILED_SEARCH } from './constants';\nimport {\n\tmakeOptions,\n\tbuildRequests,\n\tprocessBulkResponses,\n\tcheckIsValidValue,\n\tprocessRefResponse,\n\tdoValidation,\n\tgetActionByVariant,\n\tgetPayloadByVariant,\n\tprocessTablesResponse\n} from './utils';\nimport { bulkRequest } from '../../commons/bulk-request';\nimport { updateStateWithoutRender } from '../../commons/utils';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\nimport { ACTION_TYPES as TB_FIELD_ACTIONS } from '../sn-tb-field/constants';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { ERROR_ALERT } from '../../commons/constants';\nimport { elementHasActiveElement } from '../../behaviors/grid-navigation/focusUtility';\n\nconst { COMPONENT_DOM_READY, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ properties, updateState, dispatch }) => {\n\t\tconst { value, displayValue, isDependent } = properties;\n\t\tconst data = { value, displayValue };\n\n\t\tupdateStateWithoutRender(data, updateState);\n\n\t\tif (isDependent) {\n\t\t\t// since on DOM Ready, we don't have matches (i.e typeahead results), just check value is there or not\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{\n\t\t\t\t\tinvalid: value ? false : true\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t);\n\n\t\t\tdispatch(ACTION_TYPES.NOTIFY_VALIDITY);\n\t\t}\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({ action, dispatch, properties }) => {\n\t\tconst { isDependent } = properties;\n\t\tconst {\n\t\t\tpayload: { name }\n\t\t} = action;\n\n\t\t// only do if dependent\n\t\tif (name === 'triggerValidate' && isDependent) doValidation(dispatch);\n\t},\n\t// now-popvoer related actions\n\t[ACTION_TYPES.NOW_POPOVER__CONTENT_HIDDEN]: {\n\t\teffect: ({ action, updateState }) => {\n\t\t\tif (action.payload.id === 'now-dropdown-list')\n\t\t\t\tupdateState({\n\t\t\t\t\tpanelLabel: DEFAULT_PANEL_LABEL,\n\t\t\t\t\tisPanelOpen: false\n\t\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_POPOVER__CONTENT_VISIBLE]: {\n\t\teffect: ({ action, dispatch, updateState }) => {\n\t\t\tif (action.payload.id === 'now-dropdown-list') {\n\t\t\t\tupdateState({\n\t\t\t\t\tisPanelOpen: true,\n\t\t\t\t\tisSetAfterInteractionFinished: false\n\t\t\t\t}); // reset interaction finished if user comes back to picker\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_INITIATED);\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t// actions related to fetch typeahead data\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_INITIATED]: {\n\t\teffect: ({ dispatch, properties, state: { displayValue: value } }) => {\n\t\t\tconst {\n\t\t\t\tvariant,\n\t\t\t\ttableName: table,\n\t\t\t\tfieldName: field,\n\t\t\t\trecordSysId: sysId,\n\t\t\t\ttransactionScope\n\t\t\t} = properties;\n\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STARTED);\n\n\t\t\tdispatch(({ state }) => {\n\t\t\t\tconst payload = getPayloadByVariant({\n\t\t\t\t\tvariant,\n\t\t\t\t\ttable,\n\t\t\t\t\tfield,\n\t\t\t\t\tsysId,\n\t\t\t\t\tvalue,\n\t\t\t\t\ttransactionScope\n\t\t\t\t});\n\n\t\t\t\tconst type = getActionByVariant(variant);\n\n\t\t\t\treturn {\n\t\t\t\t\ttype,\n\t\t\t\t\tpayload,\n\t\t\t\t\tshouldDispatch: !state.isFetching\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STANDARD]: createGraphQLEffect(\n\t\treferenceQuery,\n\t\t{\n\t\t\tvariableList: ['table', 'field', 'chars', 'sys_id'],\n\t\t\tstartActionType:\n\t\t\t\tACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STARTED,\n\t\t\tsuccessActionType:\n\t\t\t\tACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STANDARD_SUCCEEDED,\n\t\t\terrorActionType: ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_FAILED\n\t\t}\n\t),\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_TABLE]: createHttpEffect(\n\t\tTABLE_LIST_API,\n\t\t{\n\t\t\tqueryParams: [\n\t\t\t\t'sysparm_transaction_scope',\n\t\t\t\t'limit',\n\t\t\t\t'search_query',\n\t\t\t\t'order_by'\n\t\t\t],\n\t\t\tbatch: false,\n\t\t\tstartActionType:\n\t\t\t\tACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STARTED,\n\t\t\tsuccessActionType:\n\t\t\t\tACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_TABLE_SUCCEEDED,\n\t\t\terrorActionType: ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_FAILED\n\t\t}\n\t),\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_LEGACY]: {\n\t\teffect: async ({\n\t\t\tproperties,\n\t\t\tstate: { displayValue: value },\n\t\t\tdispatch\n\t\t}) => {\n\t\t\tconst requests = buildRequests(properties, value);\n\t\t\tconst allResponses = await bulkRequest(\n\t\t\t\trequests,\n\t\t\t\tdispatch,\n\t\t\t\t'ref-search'\n\t\t\t);\n\t\t\tconst result = processBulkResponses(allResponses);\n\n\t\t\tif (result.error)\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_FAILED);\n\t\t\telse\n\t\t\t\tdispatch(\n\t\t\t\t\tACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_LEGACY_SUCCEEDED,\n\t\t\t\t\t{\n\t\t\t\t\t\tresult\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STARTED]: {\n\t\teffect: ({ updateState }) => {\n\t\t\tupdateState({\n\t\t\t\tpanelLabel: DEFAULT_PANEL_LABEL,\n\t\t\t\tmatches: [],\n\t\t\t\tisFetching: true\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_LEGACY_SUCCEEDED]: {\n\t\teffect: ({\n\t\t\taction,\n\t\t\tupdateState,\n\t\t\tdispatch,\n\t\t\tproperties: { variant }\n\t\t}) => {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tresult: { referenceResults }\n\t\t\t\t}\n\t\t\t} = action;\n\t\t\tconst { panelLabel, matches } = makeOptions(\n\t\t\t\treferenceResults,\n\t\t\t\tvariant\n\t\t\t);\n\n\t\t\tupdateState({ panelLabel, matches, isFetching: false });\n\t\t\tdispatch(ACTION_TYPES.REFIT_RESULTS_PANEL);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STANDARD_SUCCEEDED]: {\n\t\teffect: ({ action, updateState, properties, dispatch }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { data }\n\t\t\t} = action;\n\t\t\tconst { tableName, fieldName, variant } = properties;\n\t\t\tconst referenceResults = processRefResponse(\n\t\t\t\tdata,\n\t\t\t\ttableName,\n\t\t\t\tfieldName\n\t\t\t);\n\t\t\tconst { panelLabel, matches } = makeOptions(\n\t\t\t\treferenceResults,\n\t\t\t\tvariant\n\t\t\t);\n\n\t\t\tupdateState({ panelLabel, matches, isFetching: false });\n\t\t\tdispatch(ACTION_TYPES.REFIT_RESULTS_PANEL);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_TABLE_SUCCEEDED]: {\n\t\teffect: ({ action, updateState, properties, dispatch }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { result }\n\t\t\t} = action;\n\n\t\t\tconst { variant } = properties;\n\t\t\tconst referenceResults = processTablesResponse(result);\n\t\t\tconst { panelLabel, matches } = makeOptions(\n\t\t\t\treferenceResults,\n\t\t\t\tvariant\n\t\t\t);\n\n\t\t\tupdateState({ panelLabel, matches, isFetching: false });\n\t\t\tdispatch(ACTION_TYPES.REFIT_RESULTS_PANEL);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_FAILED]: {\n\t\teffect: ({ updateState }) => {\n\t\t\tupdateState({\n\t\t\t\tpanelLabel: FAILED_SEARCH,\n\t\t\t\tmatches: [],\n\t\t\t\tisFetching: false\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t// now-typeahead related actions\n\t[ACTION_TYPES.NOW_TYPEAHEAD__VALUE_SET]: {\n\t\teffect: ({ action, updateState, dispatch, properties }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { value: displayValue }\n\t\t\t} = action;\n\t\t\tconst data = { displayValue };\n\t\t\tconst { allowEmptyValue, fieldName: name } = properties;\n\n\t\t\tupdateStateWithoutRender(data, updateState);\n\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_INITIATED);\n\n\t\t\t// special case for empty\n\t\t\tif (allowEmptyValue) {\n\t\t\t\tif (displayValue === '') {\n\t\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__SET_INVALID, {\n\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\tname\n\t\t\t\t\t});\n\t\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__VALUE_SET, {\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\t\tname\n\t\t\t\t\t});\n\t\t\t\t\tupdateStateWithoutRender({ value: '' }, updateState);\n\t\t\t\t} else {\n\t\t\t\t\t// once emptied and valid value is not set, trigger invalid, so junk typed is shown as error\n\t\t\t\t\t// Note: we need dispatch helper here as now-typeahead dispatches SET_ITEM first and then VALUE_SET\n\t\t\t\t\t// when enter key is pressed and there is correct match (https://code.devsnc.com/dev/design-system/blob/master/components/typeahead/src/now-typeahead.js#L57)\n\t\t\t\t\tdispatch(({ state }) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: ACTION_TYPES.SN_TB_REFERENCE__SET_INVALID,\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tshouldDispatch: !state.isSelected\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmodifier: { name: 'debounce', delay: 400 },\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_TYPEAHEAD__SELECTED_ITEM_SET]: {\n\t\teffect: ({ state, properties, action, dispatch, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: {\n\t\t\t\t\tname,\n\t\t\t\t\tvalue,\n\t\t\t\t\titem: { label: displayValue }\n\t\t\t\t}\n\t\t\t} = action;\n\t\t\tconst { matches, isSetAfterInteractionFinished } = state;\n\t\t\tconst { isValidValue } = checkIsValidValue(\n\t\t\t\tvalue,\n\t\t\t\tmatches,\n\t\t\t\tproperties.allowEmptyValue\n\t\t\t);\n\n\t\t\tif (isValidValue) {\n\t\t\t\tupdateState({ isSelected: true, value });\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__SET_INVALID, {\n\t\t\t\t\tvalue: false,\n\t\t\t\t\tname\n\t\t\t\t});\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__VALUE_SET, {\n\t\t\t\t\tvalue,\n\t\t\t\t\tdisplayValue,\n\t\t\t\t\tname\n\t\t\t\t});\n\t\t\t\tif (isSetAfterInteractionFinished)\n\t\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__CLOSE_OFF, {\n\t\t\t\t\t\tvalueSetAndClosed: true\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateState({ isSelected: false, value: '' });\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__SET_INVALID, {\n\t\t\t\t\tvalue: true,\n\t\t\t\t\tname\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_TYPEAHEAD__INTERACTION_FINISHED]: {\n\t\teffect: ({ host, action, properties, updateState, dispatch }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { value, selectedItem }\n\t\t\t} = action;\n\t\t\t/**\n\t\t\t * Special case: User type the valid key (ex string) and focus out of the field then focus event triggers first\n\t\t\t * so popover will be open and valid. on-blur now-typeahead dispatches this action\n\t\t\t * set only when selectedItem is null otherwise blur will trigger and close the dependent field case\n\t\t\t * Todo: known minor issue - For dual fields when user open panel and close and went to dependent field, the selectedItem will empty and\n\t\t\t * triggers value-set. We might send selected item\n\t\t\t */\n\t\t\t// debugger;\n\t\t\tif (selectedItem === null || typeof selectedItem === 'undefined') {\n\t\t\t\tupdateState({ isSetAfterInteractionFinished: true });\n\n\t\t\t\t// if allowEmpty and value empty typeahead_selected_item_set wont trigger so close off from here\n\t\t\t\tconst { allowEmptyValue } = properties;\n\n\t\t\t\t// if focus goes to typeahead search icon (means still focus within the typeahead), then don't call CLOSE_OFF\n\t\t\t\tconst focusWithin = elementHasActiveElement(host);\n\n\t\t\t\tif (!focusWithin && allowEmptyValue && value === '')\n\t\t\t\t\tdispatch(ACTION_TYPES.SN_TB_REFERENCE__CLOSE_OFF, {\n\t\t\t\t\t\tvalueSetAndClosed: true\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t// other actions\n\t[ACTION_TYPES.SN_TB_REFERENCE__SET_INVALID]: ({ action, dispatch }) => {\n\t\tconst {\n\t\t\tpayload: { value }\n\t\t} = action;\n\t\tdoValidation(dispatch, value);\n\t},\n\t[ACTION_TYPES.SN_TB_REFERENCE__CLOSE_OFF]: ({ dispatch }) => {\n\t\tdispatch(TB_FIELD_ACTIONS.SN_TB_FIELD__CLOSE_OFF);\n\t},\n\t[ACTION_TYPES.CHECK_VALID]: {\n\t\teffect: ({ action, state, properties, updateState }) => {\n\t\t\t// only for one way trigger to set invalid, used in context of dependent field\n\t\t\tconst { matches } = state;\n\t\t\tconst { allowEmptyValue } = properties;\n\n\t\t\t// TODO: refactor sn-tb-reference actions to make consistent with other components\n\t\t\tconst value =\n\t\t\t\taction.payload && action.payload.value\n\t\t\t\t\t? action.payload.value\n\t\t\t\t\t: state.value;\n\t\t\tconst { isValidValue } = checkIsValidValue(\n\t\t\t\tvalue,\n\t\t\t\tmatches,\n\t\t\t\tallowEmptyValue\n\t\t\t);\n\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{\n\t\t\t\t\tinvalid: !isValidValue\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SHOW_MESSAGES]: {\n\t\teffect: ({\n\t\t\tstate: { invalid },\n\t\t\tproperties: { allowEmptyValue },\n\t\t\tupdateState\n\t\t}) => {\n\t\t\tconst content = allowEmptyValue\n\t\t\t\t? t(\n\t\t\t\t\t\t'Please select a value from the list of results in the dropdown, or clear the value'\n\t\t\t\t  )\n\t\t\t\t: t(\n\t\t\t\t\t\t'Please select a value from the list of results in the dropdown.'\n\t\t\t\t  );\n\t\t\tconst messages = invalid\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t\t\t\t}\n\t\t\t\t  ]\n\t\t\t\t: [];\n\n\t\t\tupdateState({ messages });\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOTIFY_VALIDITY]: {\n\t\teffect: ({ state: { invalid }, dispatch }) => {\n\t\t\tdispatch(TB_FIELD_ACTIONS.SN_TB_FIELD__SET_INVALID, {\n\t\t\t\tvalue: invalid\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.REFIT_RESULTS_PANEL]: {\n\t\teffect: ({ host }) => {\n\t\t\tconst popover = host.shadowRoot\n\t\t\t\t.querySelector('now-typeahead')\n\t\t\t\t.shadowRoot.querySelector('now-popover');\n\n\t\t\tif (popover && typeof popover.refit === 'function') popover.refit();\n\t\t},\n\t\tmodifier: { name: 'debounce', delay: 10 },\n\t\tstopPropagation: true\n\t}\n};\n","import { t } from 'sn-translate';\nimport { UI_REF_LIST_API, VARIANTS, TABLE_RESULT_OPTIONS } from './constants';\nimport { ADDITIONAL_INFO } from '../../commons/additional-info-map';\nimport { ACTION_TYPES } from './constants';\nimport { TABLE_COLUMNS, TABLES } from '../../commons/constants';\n\nexport const associateInfos = list => {\n\treturn list.map(item => {\n\t\treturn {\n\t\t\t...item,\n\t\t\tsublabel:\n\t\t\t\t(ADDITIONAL_INFO.sys_glide_object[item.id] &&\n\t\t\t\t\tADDITIONAL_INFO.sys_glide_object[item.id].description) ||\n\t\t\t\tt('A field type')\n\t\t};\n\t});\n};\n\nexport const makeOptions = ({ totalCount = 0, referenceList }, variant) => {\n\tconst len = referenceList.length;\n\tif (len) {\n\t\tconst panelLabel =\n\t\t\tvariant === VARIANTS.TABLE\n\t\t\t\t? t('Showing 1-{0}', len)\n\t\t\t\t: t('Showing 1-{0} of {1}', len, totalCount);\n\t\tconst matches =\n\t\t\tvariant === VARIANTS.LEGACY\n\t\t\t\t? associateInfos(referenceList)\n\t\t\t\t: referenceList;\n\t\treturn { panelLabel, matches };\n\t}\n\treturn { panelLabel: t('No Results Found'), matches: [] };\n};\n\nexport const getRefListUrl = tableName => {\n\treturn UI_REF_LIST_API.replace(':tableName', tableName);\n};\n\nexport const buildRequests = (properties, value = '') => {\n\tconst { transactionScope, tableName, fieldName, recordSysId } = properties;\n\treturn [\n\t\t{\n\t\t\turl: getRefListUrl('sys_glide_object'), // todo get dynamic\n\t\t\tparams: {\n\t\t\t\tsysparm_transaction_scope: transactionScope,\n\t\t\t\tsysparm_fields: 'label', // todo: dynamic\n\t\t\t\tsysparm_reference_field: fieldName,\n\t\t\t\tsysparm_referring_table: tableName,\n\t\t\t\tsysparm_referring_record_id: recordSysId,\n\t\t\t\tsysparm_reference_key: 'name', // todo: dynamic\n\t\t\t\tsysparm_transient_search_value: value,\n\t\t\t\tsysparm_transient_search_fields: 'label',\n\t\t\t\tsysparm_limit: 1000 // to get all internal types\n\t\t\t}\n\t\t}\n\t];\n};\n\nexport const processBulkResponses = responses => {\n\tlet referenceResults = { referenceList: [] };\n\tlet additionalInfo = {};\n\tlet error = false;\n\n\terror = !responses.every(item => {\n\t\treturn item.status === 'fulfilled';\n\t});\n\n\tif (!error) referenceResults = processLegacyRefResponse(responses[0]);\n\n\treturn {\n\t\treferenceResults,\n\t\tadditionalInfo,\n\t\terror\n\t};\n};\n\nfunction processLegacyRefResponse(refResponse) {\n\tconst totalCount =\n\t\trefResponse.value.headers['X-Total-Count'] ||\n\t\trefResponse.value.headers['x-total-count'];\n\tconst records = refResponse.value.data.result.records;\n\tlet referenceList = [];\n\tconst len = records.length && records[0].records.length;\n\n\tif (len) {\n\t\treferenceList = records[0].records.map(item => {\n\t\t\treturn {\n\t\t\t\tid: item.metadata.reference_key.value,\n\t\t\t\tlabel: item.metadata.display_value\n\t\t\t};\n\t\t});\n\t}\n\n\treturn {\n\t\treferenceList,\n\t\ttotalCount\n\t};\n}\n\nexport const checkIsValidValue = (value, list, allowEmptyValue) => {\n\tif (allowEmptyValue && value === '') return { isValidValue: true };\n\tconst match = list.filter(item => item.id === value);\n\tconst isValidValue = match.length ? true : false;\n\treturn { isValidValue, displayValue: isValidValue ? match[0].label : '' };\n};\n\nexport const processRefResponse = (result, table, field) => {\n\tconst refData = result.GlideLayout_Query.referenceDataRetriever;\n\treturn {\n\t\ttotalCount: refData.matchesCount,\n\t\treferenceList: refData.referenceDataList\n\t\t\t? refData.referenceDataList.map(item => {\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\tid: item.sysId,\n\t\t\t\t\t\tlabel: item.referenceData[0].value\n\t\t\t\t\t};\n\t\t\t\t\tif (item.referenceData.length > 1)\n\t\t\t\t\t\tdata.sublabel = item.referenceData[1].value;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttable === TABLES.DICTIONARY &&\n\t\t\t\t\t\tfield === TABLE_COLUMNS.REFERENCE\n\t\t\t\t\t)\n\t\t\t\t\t\t// As graphql API doesn't support custom reference key yet, added condition specific table reference\n\t\t\t\t\t\tdata.id = item.referenceData[1].value;\n\n\t\t\t\t\treturn data;\n\t\t\t  })\n\t\t\t: []\n\t};\n};\n\nexport function getErrorContent(allowEmptyValue) {\n\treturn allowEmptyValue\n\t\t? t(\n\t\t\t\t'Please select a value from the list of results in the dropdown, or clear the value'\n\t\t  )\n\t\t: t('Please select a value from the list of results in the dropdown.');\n}\n\nexport function doValidation(dispatch, invalid) {\n\tdispatch(\n\t\tACTION_TYPES.CHECK_VALID,\n\t\tinvalid ? { value: invalid } : undefined\n\t);\n\tdispatch(ACTION_TYPES.SHOW_MESSAGES);\n\tdispatch(ACTION_TYPES.NOTIFY_VALIDITY);\n}\n\nexport function getActionByVariant(variant) {\n\tif (variant === VARIANTS.LEGACY)\n\t\treturn ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_LEGACY;\n\tif (variant === VARIANTS.TABLE)\n\t\treturn ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_TABLE;\n\treturn ACTION_TYPES.SN_TB_REFERENCE__FETCH_RESULTS_STANDARD;\n}\n\nexport function getPayloadByVariant({\n\tvariant,\n\ttable,\n\tfield,\n\tsysId,\n\tvalue,\n\ttransactionScope\n}) {\n\tif (variant === VARIANTS.TABLE)\n\t\treturn {\n\t\t\tsysparm_transaction_scope: transactionScope,\n\t\t\tlimit: value\n\t\t\t\t? // Note: we need increase limit as user types so that the result will have table.\n\t\t\t\t  // This keeps few characters search fast and for long characters depth increased\n\t\t\t\t  value.length * 10 + TABLE_RESULT_OPTIONS.LIMIT\n\t\t\t\t: TABLE_RESULT_OPTIONS.LIMIT,\n\t\t\tsearch_query: getTableSearchQuery(value),\n\t\t\torder_by: TABLE_RESULT_OPTIONS.ORDER_BY\n\t\t};\n\treturn {\n\t\ttable,\n\t\tfield,\n\t\tsys_id: sysId,\n\t\tchars: value ? value : '**'\n\t};\n}\n\nexport function processTablesResponse(list) {\n\tconst referenceList = list.map(item => {\n\t\t{\n\t\t\treturn {\n\t\t\t\tid: item.name,\n\t\t\t\tlabel: item.label,\n\t\t\t\tsublabel: item.name,\n\t\t\t\tsysId: item.sys_id\n\t\t\t};\n\t\t}\n\t});\n\n\treturn { referenceList };\n}\n\nexport function getTableSearchQuery(value = '') {\n\treturn `nameSTARTSWITH${value}^ORlabelSTARTSWITH${value}`;\n}\n","module.exports = __TECTONIC__sn_http_request_18_0_1;","import { ACTION_TYPES } from './constants';\n\nexport const eventHandlers = [\n\t{\n\t\tevents: ['focusout'],\n\t\teffect: ({ action, dispatch }) => {\n\t\t\tconst {\n\t\t\t\tmeta: { event }\n\t\t\t} = action;\n\t\t\t/**\n\t\t\t * Special case to handle when user clicks outside the sn-tb-field when dropdown item is open, intimate sn-tb-field to close\n\t\t\t * We should not close if user clicks on dropdown item to select\n\t\t\t * - related target is null mean user clicked outside\n\t\t\t * - related target is seismic-host (as it will in popover) when dropdown item is clicked\n\t\t\t */\n\t\t\tif (\n\t\t\t\tevent.relatedTarget === null ||\n\t\t\t\t(event.relatedTarget &&\n\t\t\t\t\tevent.relatedTarget.tagName.toLowerCase() !==\n\t\t\t\t\t\t'seismic-hoist')\n\t\t\t) {\n\t\t\t\tdispatch(({ state, properties }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: ACTION_TYPES.SN_TB_REFERENCE__CLOSE_OFF,\n\t\t\t\t\t\tpayload: { name: properties.fieldName, focusout: true },\n\t\t\t\t\t\tshouldDispatch: !state.invalid\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n];\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{min-width:15.625rem;width:100%;display:inline-block}now-typeahead{width:100%;margin-block-start:.125rem;margin-block-end:.25rem}now-typeahead now-icon{margin:.125rem}.field-control{margin-inline-start:.25rem;margin-inline-end:.25rem}\", \"\"]);\n\n// exports\n","import { BEHAVIOR_NAME, ALERTS } from './constants';\nimport { actionHandlers } from './actions';\n\nexport const alerts = {\n\tname: BEHAVIOR_NAME,\n\tproperties: {\n\t\t[ALERTS]: {\n\t\t\tdefault: [],\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import { ACTION_TYPES, ALERTS, API_PATH } from './constants';\nimport { normalizeAlerts, processNotifications } from './utils';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.TB_ALERTS__ADD_ALERTS]: ({\n\t\taction,\n\t\tproperties,\n\t\tupdateProperties\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { alerts } // alerts must follow the props of now-alert\n\t\t} = action;\n\t\tconst propAlerts = properties[ALERTS];\n\n\t\tupdateProperties({\n\t\t\t[ALERTS]: propAlerts.concat(normalizeAlerts(alerts))\n\t\t});\n\t},\n\t[ACTION_TYPES.TB_ALERTS__CLEAR_ALERTS]: ({ updateProperties }) => {\n\t\tupdateProperties({ [ALERTS]: [] });\n\t},\n\t[ACTION_TYPES.NOW_ALERT_LIST__ITEMS_SET]: ({\n\t\taction,\n\t\tupdateProperties\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { value }\n\t\t} = action;\n\n\t\tupdateProperties({ [ALERTS]: value });\n\t},\n\t[ACTION_TYPES.TB_ALERTS__SESSION_ALERTS_REQUESTED]: createHttpEffect(\n\t\tAPI_PATH,\n\t\t{\n\t\t\tbatch: false,\n\t\t\tqueryParams: ['sysparm_transaction_scope'],\n\t\t\tsuccessActionType: ACTION_TYPES.TB_ALERTS__SESSION_ALERTS_SUCCEEDED\n\t\t}\n\t),\n\t[ACTION_TYPES.TB_ALERTS__SESSION_ALERTS_SUCCEEDED]: ({\n\t\taction,\n\t\tdispatch\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { result },\n\t\t\tmeta: { noAlerts }\n\t\t} = action;\n\t\tif (result.length && !noAlerts)\n\t\t\tdispatch(ACTION_TYPES.TB_ALERTS__ADD_ALERTS, {\n\t\t\t\talerts: processNotifications(result)\n\t\t\t});\n\t}\n};\n","import uuid from 'uuid';\n\nexport const normalizeAlerts = alerts =>\n\talerts.map(alert => ({\n\t\tid: uuid.v4(),\n\t\tstatus: 'info',\n\t\ticon: 'info-circle-outline',\n\t\taction: { type: 'dismiss' },\n\t\t...alert\n\t}));\n\nexport const processNotifications = notifications =>\n\tnotifications\n\t\t.filter(item => {\n\t\t\t// filter out non error/info notifications\n\t\t\treturn ['error', 'info'].indexOf(item.type) !== -1;\n\t\t})\n\t\t.map(item => ({\n\t\t\tstatus: item.type === 'error' ? 'critical' : 'info',\n\t\t\tcontent: item.text,\n\t\t\ticon:\n\t\t\t\titem.type === 'error'\n\t\t\t\t\t? 'circle-exclamation-outline'\n\t\t\t\t\t: 'info-circle-outline'\n\t\t}));\n","import {\n\tBEHAVIOR_NAME,\n\tTB_SAVE_IS_SAVE_ERROR,\n\tTB_SAVE_IS_SAVE_IN_PROGRESS,\n\tTB_SAVE_SAVE_ERRORS,\n\tTB_SAVE_SAVE_RESULT\n} from './constants';\nimport { actionHandlers } from './actions';\n\nexport const tableSave = {\n\tname: BEHAVIOR_NAME,\n\tproperties: {\n\t\t[TB_SAVE_SAVE_RESULT]: {\n\t\t\tdefault: {},\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_SAVE_SAVE_ERRORS]: {\n\t\t\tdefault: '',\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_SAVE_IS_SAVE_ERROR]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import { t } from 'sn-translate';\nimport {\n\tACTION_TYPES,\n\tTB_SAVE_IS_SAVE_IN_PROGRESS,\n\tTB_SAVE_IS_SAVE_ERROR,\n\tTB_SAVE_SAVE_ERRORS\n} from './constants';\nimport {\n\tprocessResponses,\n\tbuildRequestsModel,\n\tgetAllRequests,\n\tcheckMandatoryFields,\n\tbuildChoiceRequestModel,\n\tvalidateSavedReferenceValues,\n\tbuildReferenceRequestModel\n} from './utils';\nimport {\n\tbulkRequest,\n\tACTION_TYPES as BULK_ACTIONS\n} from '../../commons/bulk-request';\nimport { ACTION_TYPES as ALERTS_ACTIONS } from '../alerts';\nimport {\n\tGRID_TRANSACTIONS,\n\tACTION_TYPES as TRANSACTION_ACTION_TYPES\n} from '../transaction-model';\nimport { ACTION_TYPES as GRID_ACTIONS } from '../grid-model';\nimport { TB_TRANSACTION_SCOPE } from '../table-initializer';\nimport { TBS_DATA_META } from '../table-structure-data';\nimport { ERROR_ALERT } from '../../commons/constants';\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.TABLE_SAVE__SAVE_INITIATED]: ({\n\t\tupdateProperties,\n\t\tdispatch\n\t}) => {\n\t\tupdateProperties({\n\t\t\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: true\n\t\t});\n\t\tdispatch(ACTION_TYPES.TABLE_SAVE__SAVE_PROCESS);\n\t},\n\t[ACTION_TYPES.TABLE_SAVE__SAVE_PROCESS]: async ({\n\t\tdispatch,\n\t\tproperties,\n\t\tupdateProperties\n\t}) => {\n\t\tconst { hasError, transactionModel } = checkMandatoryFields(\n\t\t\tproperties[GRID_TRANSACTIONS]\n\t\t);\n\t\tif (hasError) {\n\t\t\tdispatch(\n\t\t\t\tTRANSACTION_ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTIONS_REFURBISH,\n\t\t\t\t{\n\t\t\t\t\ttransactions: transactionModel\n\t\t\t\t}\n\t\t\t);\n\t\t\tupdateProperties({\n\t\t\t\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: false\n\t\t\t});\n\t\t\tconst errorMessage = t(\n\t\t\t\t`You have some cells that are mandatory that need to be fulfilled  before you can save`\n\t\t\t);\n\t\t\tconst content = errorMessage;\n\t\t\tconst status = ERROR_ALERT.STATUS;\n\t\t\tconst icon = ERROR_ALERT.ICON;\n\t\t\tconst header = t('Unfulfilled mandatory cells');\n\t\t\tdispatch(ALERTS_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\t\t\talerts: [{ content, status, icon, header }]\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst transactions = properties[GRID_TRANSACTIONS];\n\t\tconst transactionScope = properties[TB_TRANSACTION_SCOPE];\n\t\tconst tableName = properties[TBS_DATA_META].name;\n\n\t\tconst requestsModel = buildRequestsModel(\n\t\t\ttransactions,\n\t\t\ttransactionScope,\n\t\t\ttableName\n\t\t);\n\n\t\t// prepare bulk request model for choices\n\t\tconst choiceRequestModel = buildChoiceRequestModel(\n\t\t\ttransactions,\n\t\t\ttransactionScope\n\t\t);\n\n\t\tif (!requestsModel.length && !choiceRequestModel.length) {\n\t\t\tupdateProperties({\n\t\t\t\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: false\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Before we do operation and get actual notifications get already presented session notifications, it clear the session notification and keep slate clean\n\t\tdispatch(\n\t\t\tALERTS_ACTIONS.TB_ALERTS__SESSION_ALERTS_REQUESTED,\n\t\t\t{ sysparm_transaction_scope: transactionScope },\n\t\t\t{ noAlerts: true }\n\t\t);\n\n\t\t// bulk request start\n\t\tdispatch(BULK_ACTIONS.BULK_REQUEST__STARTED, { id: 'table-save' });\n\n\t\t// make bulk requests\n\t\tconst responses = await bulkRequest(getAllRequests(requestsModel));\n\t\tconst choiceResponses = await bulkRequest(\n\t\t\tgetAllRequests(choiceRequestModel)\n\t\t);\n\n\t\t// check whether Table API sets incorrect reference value or not\n\t\tconst {\n\t\t\tallValid,\n\t\t\tinvalidReferenceRecords\n\t\t} = validateSavedReferenceValues(responses);\n\t\tif (!allValid) {\n\t\t\tconst referenceRequestModel = buildReferenceRequestModel(\n\t\t\t\tinvalidReferenceRecords,\n\t\t\t\ttransactionScope\n\t\t\t);\n\t\t\tawait bulkRequest(getAllRequests(referenceRequestModel));\n\t\t}\n\n\t\t// bulk request finish\n\t\tdispatch(BULK_ACTIONS.BULK_REQUEST__COMPLETED, { id: 'table-save' });\n\n\t\tconst { isAllSucceeded, failures } = processResponses(\n\t\t\tresponses.concat(choiceResponses)\n\t\t);\n\t\tconst updates = {\n\t\t\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: false,\n\t\t\t[TB_SAVE_SAVE_ERRORS]: failures,\n\t\t\t[TB_SAVE_IS_SAVE_ERROR]: !isAllSucceeded\n\t\t};\n\n\t\tupdateProperties(updates);\n\n\t\tdispatch(ALERTS_ACTIONS.TB_ALERTS__CLEAR_ALERTS);\n\t\tdispatch(ACTION_TYPES.TABLE_SAVE__SAVE_COMPLETED, {\n\t\t\tfailures,\n\t\t\tisAllSucceeded\n\t\t});\n\t},\n\t[BULK_ACTIONS.BULK_REQUEST__STARTED]: ({ action, updateProperties }) => {\n\t\tif (action.payload.id === 'table-save')\n\t\t\tupdateProperties({\n\t\t\t\t[TB_SAVE_IS_SAVE_IN_PROGRESS]: true,\n\t\t\t\t[TB_SAVE_IS_SAVE_ERROR]: false,\n\t\t\t\t[TB_SAVE_SAVE_ERRORS]: ''\n\t\t\t});\n\t},\n\t[ACTION_TYPES.TABLE_SAVE__SAVE_COMPLETED]: ({\n\t\taction,\n\t\tdispatch,\n\t\tproperties\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { isAllSucceeded, failures }\n\t\t} = action;\n\t\tconst transactionScope = properties[TB_TRANSACTION_SCOPE];\n\n\t\t// show only on failure\n\t\tif (!isAllSucceeded) {\n\t\t\tconst content = t('{0} record update(s) got failed.', failures);\n\t\t\tconst status = ERROR_ALERT.STATUS;\n\t\t\tconst icon = ERROR_ALERT.ICON;\n\t\t\tdispatch(ALERTS_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\t\t\talerts: [{ content, status, icon }]\n\t\t\t});\n\t\t}\n\n\t\t// request for session alerts\n\t\tdispatch(ALERTS_ACTIONS.TB_ALERTS__SESSION_ALERTS_REQUESTED, {\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t});\n\n\t\t// clear transactions\n\t\tdispatch(\n\t\t\tTRANSACTION_ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_PRUNE,\n\t\t\t{ type: GRID_TRANSACTIONS }\n\t\t);\n\n\t\t// refresh grid data\n\t\tdispatch(GRID_ACTIONS.REFRESH_GRID);\n\t}\n};\n","import { TRANSACTION_ACTIONS } from '../transaction-model';\nimport { BASE_UPDATE_API, MANDATORY_FIELDS } from './constants';\nimport { isUnsavedRecord } from '../../commons/utils';\nimport { TABLES, INTERNAL_TYPES } from '../../commons/constants';\n\nexport const getFieldsForUpdate = inputs => Object.keys(inputs).join(',');\n\nexport const isInputValid = input =>\n\t!input.startsWith('_') && !input.startsWith('sys_');\n\nexport const getFieldsForInsert = inputs =>\n\tObject.keys(inputs).filter(isInputValid).join(',');\n\nexport const generateGraphQLVariableArgs = (data, variableArguments = '') =>\n\tObject.keys(data).reduce((acc, curr) => {\n\t\t// sample args look like = reference:  \"x_my_table_build_0_test_table7\" element: \"test\"\n\t\treturn `${acc} ${curr}: \"${data[curr]}\"`;\n\t}, variableArguments);\n\nexport const getUpdateRequestAPI = (\n\tid,\n\ttransactionScope,\n\tfields = 'sys_id',\n\ttableName = TABLES.DICTIONARY\n) =>\n\t`${BASE_UPDATE_API}/${tableName}/${id}?sysparm_transaction_scope=${transactionScope}&sysparm_fields=${fields}`;\n\nexport const getCreateRequestAPI = (\n\ttransactionScope,\n\tfields = 'sys_id',\n\ttableName = TABLES.DICTIONARY\n) =>\n\t`${BASE_UPDATE_API}/${tableName}?sysparm_transaction_scope=${transactionScope}&sysparm_fields=${fields}`;\n\nexport const getDeleteRequestAPI = (\n\tid,\n\ttransactionScope,\n\ttableName = TABLES.DICTIONARY\n) =>\n\t`${BASE_UPDATE_API}/${tableName}/${id}?sysparm_transaction_scope=${transactionScope}`;\n\nexport const buildRequestDataForModification = inputs =>\n\tObject.keys(inputs).reduce((acc, curr) => {\n\t\tacc[curr] = inputs[curr].value;\n\t\treturn acc;\n\t}, {});\n\nexport const buildRequestDataForCreation = (inputs, tableName) => {\n\tconst data = {};\n\tfor (let attr in inputs) {\n\t\tif (inputs[attr].canWrite && isInputValid(attr)) {\n\t\t\tdata[attr] = inputs[attr].value;\n\t\t}\n\t}\n\tdata['name'] = tableName;\n\treturn data;\n};\n\nexport const buildChoiceRequestData = choice => {\n\treturn {\n\t\tlabel: choice.label,\n\t\tvalue: choice.value,\n\t\tsequence: choice.sequence\n\t};\n};\n\nexport const buildChoiceRequestModel = (transactions, transactionScope) => {\n\tlet requests = [];\n\tObject.keys(transactions).forEach(id => {\n\t\tconst txn = transactions[id];\n\t\tconst { action } = txn;\n\t\tconst inputs =\n\t\t\taction === TRANSACTION_ACTIONS.GRID_ROW_ADDED\n\t\t\t\t? txn.inputs.rowData\n\t\t\t\t: txn.inputs;\n\n\t\t// if internal_type is not changed, ignore that transaction\n\t\tif (\n\t\t\t!inputs.internal_type ||\n\t\t\tinputs.internal_type.value !== INTERNAL_TYPES.CHOICE\n\t\t)\n\t\t\treturn;\n\n\t\tconst fieldMeta = inputs.internal_type.fieldMeta;\n\t\tconst { choices, name } = fieldMeta;\n\t\tlet element = inputs.element ? inputs.element.value : fieldMeta.element;\n\n\t\tlet requestConfigs = [];\n\t\tchoices.forEach(choice => {\n\t\t\tconst requestConfig = {};\n\t\t\tconst sysId = choice.sysId;\n\t\t\tconst isNewRecord = isUnsavedRecord(choice.sysId);\n\n\t\t\tif (isNewRecord && choice.deleted) return;\n\n\t\t\tif (!isNewRecord && choice.deleted) {\n\t\t\t\t// delete call\n\t\t\t\trequestConfig.method = 'DELETE';\n\t\t\t\trequestConfig.url = getDeleteRequestAPI(\n\t\t\t\t\tsysId,\n\t\t\t\t\ttransactionScope,\n\t\t\t\t\tTABLES.SYS_CHOICE\n\t\t\t\t);\n\t\t\t} else if (!isNewRecord) {\n\t\t\t\t// put call\n\t\t\t\trequestConfig.method = 'PUT';\n\t\t\t\trequestConfig.url = getUpdateRequestAPI(\n\t\t\t\t\tsysId,\n\t\t\t\t\ttransactionScope,\n\t\t\t\t\t'sys_id',\n\t\t\t\t\tTABLES.SYS_CHOICE\n\t\t\t\t);\n\t\t\t\trequestConfig.data = buildChoiceRequestData(choice);\n\t\t\t} else if (isNewRecord) {\n\t\t\t\t// post call\n\t\t\t\trequestConfig.method = 'POST';\n\t\t\t\trequestConfig.url = getCreateRequestAPI(\n\t\t\t\t\ttransactionScope,\n\t\t\t\t\t'sys_id',\n\t\t\t\t\tTABLES.SYS_CHOICE\n\t\t\t\t);\n\t\t\t\tconst choiceObj = buildChoiceRequestData(choice);\n\t\t\t\tchoiceObj.name = name;\n\t\t\t\tchoiceObj.element = element;\n\t\t\t\trequestConfig.data = choiceObj;\n\t\t\t}\n\t\t\trequestConfigs.push({ id: sysId, requestConfig });\n\t\t});\n\n\t\trequests = requests.concat(requestConfigs);\n\t});\n\treturn requests;\n};\n\nexport const buildGqlRequestDataForModification = (inputs, key) => {\n\tconst data = buildRequestDataForModification(inputs);\n\n\t// add sys_id to target record\n\tconst variableArguments = generateGraphQLVariableArgs(\n\t\tdata,\n\t\t`sys_id: \"${key}\"`\n\t);\n\n\treturn JSON.stringify({\n\t\tquery: `mutation {\n\t\t\tGlideRecord_Mutation {\n\t\t\t\tupdate_${TABLES.DICTIONARY} (${variableArguments}) {\n\t\t\t\t\tsys_id { value }\n\t\t\t\t\treference { value }\n\t\t\t\t\tsys_scope { value }\n\t\t\t  \t}\n\t\t\t}\n\t\t}`\n\t});\n};\n\nexport const buildGraphqlRequestConfig = ({\n\tkey,\n\tinputs,\n\ttransactionScope\n}) => {\n\tconst requestConfig = {};\n\trequestConfig.method = 'POST';\n\trequestConfig.url = `/api/now/graphql?sysparm_transaction_scope=${transactionScope}`;\n\trequestConfig.headers = { 'Content-Type': 'application/json' };\n\n\t// TODO: We will use GraphQL for insertion also once sys_scope issue is fixed\n\trequestConfig.data = buildGqlRequestDataForModification(inputs, key);\n\n\treturn { id: key, requestConfig };\n};\n\n// transactionModel to requests\nexport const buildRequestsModel = (model, transactionScope, tableName) => {\n\treturn Object.keys(model).map(key => {\n\t\tconst txn = model[key];\n\t\tconst { action } = txn;\n\t\tlet inputs =\n\t\t\taction === TRANSACTION_ACTIONS.GRID_ROW_ADDED\n\t\t\t\t? txn.inputs.rowData\n\t\t\t\t: txn.inputs;\n\n\t\t// TODO: look for better solution. Probably it will be fixed while refactoring the code to store dependent values\n\t\tif (\n\t\t\tinputs.internal_type &&\n\t\t\tinputs.internal_type.value === INTERNAL_TYPES.CHOICE\n\t\t)\n\t\t\tinputs.choice = {\n\t\t\t\tcanWrite: true,\n\t\t\t\tvalue: inputs.internal_type.fieldMeta.choiceType\n\t\t\t};\n\n\t\t// INFO: Table API will set using displayValue (DEF0185412). GraphQL insertion is working even if user don't have access to other scopes\n\t\t// Workaround if reference is changed - Use GraphQL only for update. If Table API sets wrong reference value, then use GraphQL update to set correct value\n\t\tif (\n\t\t\taction === TRANSACTION_ACTIONS.GRID_ROW_MODIFIED &&\n\t\t\tinputs.reference &&\n\t\t\tinputs.reference.value !== ''\n\t\t) {\n\t\t\treturn buildGraphqlRequestConfig({\n\t\t\t\tkey,\n\t\t\t\tinputs,\n\t\t\t\ttransactionScope\n\t\t\t});\n\t\t}\n\n\t\tconst requestConfig = {};\n\t\tif (action === TRANSACTION_ACTIONS.GRID_ROW_MODIFIED) {\n\t\t\trequestConfig.method = 'PUT';\n\t\t\trequestConfig.url = getUpdateRequestAPI(\n\t\t\t\tkey,\n\t\t\t\ttransactionScope,\n\t\t\t\tgetFieldsForUpdate(inputs)\n\t\t\t);\n\t\t\trequestConfig.data = buildRequestDataForModification(inputs);\n\t\t} else if (action === TRANSACTION_ACTIONS.GRID_ROW_ADDED) {\n\t\t\trequestConfig.method = 'POST';\n\t\t\trequestConfig.url = getCreateRequestAPI(\n\t\t\t\ttransactionScope,\n\t\t\t\tgetFieldsForInsert(inputs) + ',sys_id'\n\t\t\t);\n\t\t\trequestConfig.data = buildRequestDataForCreation(inputs, tableName);\n\t\t}\n\n\t\treturn {\n\t\t\tid: key,\n\t\t\trequestConfig\n\t\t};\n\t});\n};\n\nexport const validateSavedReferenceValues = responses => {\n\tlet hasInvalidReference = false;\n\tlet invalidReferenceRecords = [];\n\n\tresponses.forEach(response => {\n\t\tif (response.status !== 'fulfilled') return false;\n\n\t\tconst { data, config } = response.value;\n\t\tconst result = data.result;\n\t\tconst requestPayload = JSON.parse(config.data);\n\n\t\tif (\n\t\t\trequestPayload.reference &&\n\t\t\trequestPayload.reference !== result.reference.value\n\t\t) {\n\t\t\thasInvalidReference = true;\n\t\t\tinvalidReferenceRecords.push({\n\t\t\t\tsys_id: result.sys_id,\n\t\t\t\tinputs: {\n\t\t\t\t\treference: {\n\t\t\t\t\t\tvalue: requestPayload.reference\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tallValid: !hasInvalidReference,\n\t\tinvalidReferenceRecords\n\t};\n};\n\nexport const buildReferenceRequestModel = (\n\tinvalidReferenceRecords,\n\ttransactionScope\n) => {\n\treturn invalidReferenceRecords.map(record => {\n\t\treturn buildGraphqlRequestConfig({\n\t\t\tkey: record.sys_id,\n\t\t\tinputs: record.inputs,\n\t\t\ttransactionScope\n\t\t});\n\t});\n};\n\nexport const getAllRequests = reqModel =>\n\treqModel.map(model => model.requestConfig);\n\n//process response and return failures, can be used for detailed errors\nexport const processResponses = responses => {\n\tconst isAllSucceeded = responses.every(resp => resp.status === 'fulfilled');\n\tlet failures = !isAllSucceeded\n\t\t? responses.filter(resp => resp.status === 'rejected').length\n\t\t: 0;\n\n\t/**\n\t * commenting following. Use this when we want to manually process errors\n\t * and assign failures which is just count now\n\t */\n\t// if (!isAllSucceeded) {\n\t// \tfailures = responses.reduce((acc, curr, index) => {\n\t// \t\tif (curr.status === 'rejected') {\n\t// \t\t\tacc[requestsModel[index].id] = {\n\t// \t\t\t\terror: curr.reason.response.data.error\n\t// \t\t\t};\n\t// \t\t}\n\n\t// \t\treturn acc;\n\t// \t}, {});\n\t// }\n\n\treturn {\n\t\tisAllSucceeded,\n\t\tfailures\n\t};\n};\n\nexport const checkMandatoryFields = (\n\ttransactions,\n\tmandatoryFields = MANDATORY_FIELDS\n) => {\n\tlet hasError = false;\n\tconst transactionModel = Object.keys(transactions).reduce(\n\t\t(result, sysId) => {\n\t\t\tconst txn = transactions[sysId];\n\t\t\tconst { action } = txn;\n\t\t\tlet inputs =\n\t\t\t\taction === TRANSACTION_ACTIONS.GRID_ROW_ADDED\n\t\t\t\t\t? txn.inputs.rowData\n\t\t\t\t\t: txn.inputs;\n\n\t\t\tconst inputsObj = Object.keys(inputs).reduce((acc, columnName) => {\n\t\t\t\tconst fieldObj = inputs[columnName];\n\t\t\t\tif (\n\t\t\t\t\tmandatoryFields.includes(columnName) &&\n\t\t\t\t\tcheckFieldValueEmpty(fieldObj)\n\t\t\t\t) {\n\t\t\t\t\thasError = true;\n\t\t\t\t\tacc[columnName] = {\n\t\t\t\t\t\t...fieldObj,\n\t\t\t\t\t\thasError\n\t\t\t\t\t};\n\t\t\t\t} else acc[columnName] = fieldObj;\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\n\t\t\tif (action === TRANSACTION_ACTIONS.GRID_ROW_ADDED) {\n\t\t\t\tresult[sysId] = {\n\t\t\t\t\t...txn,\n\t\t\t\t\tinputs: {\n\t\t\t\t\t\t...txn.inputs,\n\t\t\t\t\t\trowData: inputsObj\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tresult[sysId] = {\n\t\t\t\t\t...txn,\n\t\t\t\t\tinputs: inputsObj\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t{}\n\t);\n\n\treturn {\n\t\thasError,\n\t\ttransactionModel\n\t};\n};\n\nfunction checkFieldValueEmpty(field) {\n\tif (field.value === '') return true;\n\treturn false;\n}\n","import { createCustomElement, actionTypes } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport tableStructureData from '../../behaviors/table-structure-data';\nimport tableInitializer, {\n\tACTION_TYPES,\n\tTB_SYS_ID\n} from '../../behaviors/table-initializer';\nimport gridModel from '../../behaviors/grid-model';\nimport transactionModel from '../../behaviors/transaction-model';\nimport alerts from '../../behaviors/alerts';\nimport tableSave from '../../behaviors/table-save';\nimport userData from '../../behaviors/user-data';\nimport styles from './styles.scss';\nimport recordWatcher from '../../behaviors/record-watcher';\nimport filterModel from '../../behaviors/filter-model';\nimport { rwHandle } from '../../behaviors/record-watcher';\nimport { TABLES } from '../../commons/constants';\n\nconst { COMPONENT_DOM_READY, COMPONENT_DISCONNECTED } = actionTypes;\n\ncreateCustomElement('sn-tb-provider', {\n\trenderer: { type: snabbdom },\n\tstyles,\n\tview: () => <slot />,\n\tbehaviors: [\n\t\ttableStructureData,\n\t\ttableInitializer,\n\t\tgridModel,\n\t\ttransactionModel,\n\t\talerts,\n\t\ttableSave,\n\t\trecordWatcher,\n\t\tuserData,\n\t\tfilterModel\n\t],\n\tactionHandlers: {\n\t\t[COMPONENT_DOM_READY]: ({ dispatch }) => {\n\t\t\tdispatch(ACTION_TYPES.TABLE_INITIALIZER__INIT);\n\t\t},\n\t\t[COMPONENT_DISCONNECTED]: ({ dispatch, properties }) => {\n\t\t\tconst sysId = properties[TB_SYS_ID];\n\t\t\trwHandle(TABLES.SYS_DB_OBJECT, `sys_id=${sysId}`, false, dispatch);\n\t\t}\n\t}\n});\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:flex;flex-direction:column;height:100%}\", \"\"]);\n\n// exports\n","export { filterModel as default } from './filter-model';\n","import {\n\tBEHAVIOR_NAME,\n\tSHOW_NON_EXTENDED,\n\tENABLE_NON_EXTENDED_FILTER\n} from './constants';\nimport { actionHandlers } from './actions';\n\nexport const filterModel = {\n\tname: BEHAVIOR_NAME,\n\tproperties: {\n\t\t[SHOW_NON_EXTENDED]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t},\n\t\t[ENABLE_NON_EXTENDED_FILTER]: {\n\t\t\tdefault: false,\n\t\t\tselectable: true\n\t\t}\n\t},\n\tactionHandlers\n};\n","import {\n\tACTION_TYPES,\n\tSHOW_NON_EXTENDED,\n\tFILTER_NON_EXTENDED,\n\tENABLE_NON_EXTENDED_FILTER\n} from './constants';\nimport { ACTION_TYPES as GM_ACTIONS } from '../grid-model/constants';\nimport { TBS_DATA_META } from '../table-structure-data';\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.NOW_CHECKBOX__CHECKED_SET]: ({\n\t\taction,\n\t\tupdateProperties,\n\t\tdispatch\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { value },\n\t\t\tmeta: { appended: { category } = {} }\n\t\t} = action;\n\n\t\tif (category !== FILTER_NON_EXTENDED) return;\n\n\t\tdispatch(ACTION_TYPES.NON_EXTENDED_FILTER_VALUE_SET, { value });\n\t\tupdateProperties({ [SHOW_NON_EXTENDED]: value });\n\t},\n\t[ACTION_TYPES.NON_EXTENDED_FILTER_VALUE_SET]: ({\n\t\taction,\n\t\tdispatch,\n\t\tproperties\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { value }\n\t\t} = action;\n\t\tconst { [TBS_DATA_META]: tableMetaData } = properties;\n\n\t\tconst query = value ? `name=${tableMetaData.name}` : '';\n\t\tdispatch(GM_ACTIONS.FILTER_GRID, { query });\n\t},\n\t[ACTION_TYPES.ENABLE_NON_EXTENDED_FILTER]: ({\n\t\taction,\n\t\tupdateProperties\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { value }\n\t\t} = action;\n\n\t\tupdateProperties({ [ENABLE_NON_EXTENDED_FILTER]: value });\n\t}\n};\n","import './sn-tb-type-edit';\n\nexport { ACTION_TYPES } from './constants';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport { actionHandlers } from './actions';\nimport styles from './styles.scss';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\nimport { TABLE_COLUMNS } from '../../commons/constants';\n\ncreateCustomElement('sn-tb-type-edit', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\ttypeValue: { value: '', displayValue: '' },\n\t\tshowDependent: false,\n\t\tdependentValues: {},\n\t\tisAllValid: true,\n\t\tvalidate: { timestamp: Date.now() }\n\t},\n\tproperties: {\n\t\tvalue: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tdisplayValue: {\n\t\t\tdefault: ''\n\t\t},\n\t\ttableName: {\n\t\t\tdefault: 'sys_dictionary'\n\t\t},\n\t\tfieldName: {\n\t\t\tdefault: TABLE_COLUMNS.INTERNAL_TYPE\n\t\t},\n\t\trecordSysId: {\n\t\t\tdefault: ''\n\t\t},\n\t\tgridRows: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridRows\n\t\t},\n\t\tgridColumns: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.gridColumns\n\t\t},\n\t\tcellIdentity: {\n\t\t\tdefault: {}\n\t\t},\n\t\ttriggerValidate: {\n\t\t\tdefault: {}\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import { VARIANTS } from '../sn-tb-reference';\nimport '../sn-tb-input';\nimport '../sn-tb-choice';\nimport { t } from 'sn-translate';\nimport { INTERNAL_TYPES } from '../../commons/constants';\n\nconst renderDependent = (value, dependentValues, triggerValidate) => {\n\tswitch (value) {\n\t\tcase INTERNAL_TYPES.STRING:\n\t\t\tif (dependentValues.max_length)\n\t\t\t\treturn (\n\t\t\t\t\t<sn-tb-input\n\t\t\t\t\t\tclassName='dependent-field'\n\t\t\t\t\t\tisDependent\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='max_length'\n\t\t\t\t\t\tplaceholder={t('Please enter integer value')}\n\t\t\t\t\t\tvalue={dependentValues.max_length.value}\n\t\t\t\t\t\tlabel={dependentValues.max_length.label}\n\t\t\t\t\t\tautofocus={false}\n\t\t\t\t\t\tallowEmptyValue={false}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\telse return null;\n\t\tcase INTERNAL_TYPES.REFERENCE:\n\t\t\tif (dependentValues.reference)\n\t\t\t\treturn (\n\t\t\t\t\t<sn-tb-reference\n\t\t\t\t\t\tclassName='dependent-field'\n\t\t\t\t\t\tlabel={dependentValues.reference.label}\n\t\t\t\t\t\tvalue={dependentValues.reference.value}\n\t\t\t\t\t\tdisplayValue={dependentValues.reference.displayValue}\n\t\t\t\t\t\ttableName={dependentValues.reference.tableName}\n\t\t\t\t\t\tfieldName={dependentValues.reference.fieldName}\n\t\t\t\t\t\trecordSysId={dependentValues.reference.recordSysId}\n\t\t\t\t\t\tvariant={VARIANTS.TABLE}\n\t\t\t\t\t\tautofocus={false}\n\t\t\t\t\t\ttriggerValidate={triggerValidate}\n\t\t\t\t\t\tisDependent\n\t\t\t\t\t\tallowEmptyValue={false}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder={t('Start typing...')}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\telse return null;\n\t\tcase INTERNAL_TYPES.CHOICE:\n\t\t\tif (dependentValues.choice)\n\t\t\t\treturn (\n\t\t\t\t\t<sn-tb-choice\n\t\t\t\t\t\tclassName='dependent-field'\n\t\t\t\t\t\tchoiceType={dependentValues.choice.choiceType}\n\t\t\t\t\t\tchoices={dependentValues.choice.choices}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\telse return null;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport default state => {\n\tconst {\n\t\tproperties: { tableName, fieldName, recordSysId, triggerValidate },\n\t\ttypeValue: { value, displayValue },\n\t\tdependentValues,\n\t\tshowDependent\n\t} = state;\n\n\treturn (\n\t\t<div className='sn-tb-type-edit'>\n\t\t\t<sn-tb-reference\n\t\t\t\tvalue={value}\n\t\t\t\tdisplayValue={displayValue}\n\t\t\t\ttableName={tableName}\n\t\t\t\tfieldName={fieldName}\n\t\t\t\trecordSysId={recordSysId}\n\t\t\t\tvariant={VARIANTS.LEGACY}\n\t\t\t\tplaceholder={t('Start typing...')}\n\t\t\t/>\n\t\t\t{showDependent\n\t\t\t\t? renderDependent(value, dependentValues, triggerValidate)\n\t\t\t\t: null}\n\t\t</div>\n\t);\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport { actionHandlers } from './actions';\nimport styles from './styles.scss';\nimport { MESSAGES, INVALID } from './constants';\n\n/**\n * @description wrapper for now-input base component to work with string and numeric fields in grid.\n */\ncreateCustomElement('sn-tb-input', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tview,\n\tstyles,\n\tinitialState: {\n\t\tvalue: '',\n\t\tinvalid: false,\n\t\tmessages: []\n\t},\n\tproperties: {\n\t\ttype: {\n\t\t\tdefault: 'text'\n\t\t},\n\t\tlabel: {\n\t\t\tdefault: ''\n\t\t},\n\t\tvalue: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tplaceholder: {\n\t\t\tdefault: ''\n\t\t},\n\t\t[MESSAGES]: {\n\t\t\tdefault: ''\n\t\t},\n\t\tisDependent: {\n\t\t\tdefault: false\n\t\t},\n\t\tname: {\n\t\t\tdefault: ''\n\t\t},\n\t\thelperContent: {\n\t\t\tdefault: undefined\n\t\t},\n\t\t[INVALID]: {\n\t\t\tdefault: false\n\t\t},\n\t\tautofocus: {\n\t\t\tdefault: false\n\t\t},\n\t\tallowEmptyValue: {\n\t\t\tdefault: true\n\t\t},\n\t\trequired: {\n\t\t\tdefault: false\n\t\t},\n\t\tmaxlength: {\n\t\t\tdefault: undefined,\n\t\t\tschema: { type: 'number' }\n\t\t}\n\t},\n\tactionHandlers\n});\n","import '@servicenow/now-input';\n\nconst onUpdate = vnode => {\n\t// when now-input is rerendered, auto focus is not working because of its unchanged value.\n\t// So manual auto focus needed when now-input is re-rendered.\n\tconst inputElm = vnode.elm.shadowRoot.querySelector('input');\n\tif (inputElm) inputElm.focus();\n};\n\nexport default state => {\n\tconst {\n\t\tvalue,\n\t\tmessages,\n\t\tinvalid,\n\t\tproperties: {\n\t\t\tlabel,\n\t\t\tplaceholder,\n\t\t\tisDependent,\n\t\t\ttype,\n\t\t\tname,\n\t\t\thelperContent,\n\t\t\tautofocus,\n\t\t\trequired,\n\t\t\tmaxlength\n\t\t}\n\t} = state;\n\n\treturn (\n\t\t<now-input\n\t\t\tclass={{ 'dependent-field': isDependent }}\n\t\t\ttype={type}\n\t\t\tname={name}\n\t\t\tvalue={value}\n\t\t\tlabel={label}\n\t\t\tplaceholder={placeholder}\n\t\t\tmessages={messages}\n\t\t\tmanageInvalid\n\t\t\tmaxlength={maxlength}\n\t\t\tinvalid={invalid}\n\t\t\thelperContent={helperContent}\n\t\t\tautofocus={autofocus}\n\t\t\trequired={required}\n\t\t\thook-update={onUpdate}\n\t\t/>\n\t);\n};\n","import {\n\tACTION_TYPES,\n\tMESSAGES,\n\tINVALID,\n\tVALUE,\n\tNUMERIC_MIN_LIMIT\n} from './constants';\nimport { ERROR_ALERT } from '../../commons/constants';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { updateStateWithoutRender } from '../../commons/utils';\nimport { validateValue, getValue, getDisplayValue } from './utils';\nimport { ACTION_TYPES as TB_FIELD_ACTIONS } from '../sn-tb-field/constants';\nimport { t } from 'sn-translate';\n\nconst { COMPONENT_DOM_READY, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ properties, updateState, dispatch }) => {\n\t\tconst { value, isDependent, maxlength, name } = properties;\n\n\t\tconst trimmedValue =\n\t\t\tmaxlength >= NUMERIC_MIN_LIMIT ? value.substr(0, maxlength) : value;\n\n\t\tupdateState({ value: trimmedValue });\n\n\t\tif (value !== trimmedValue) {\n\t\t\tdispatch(ACTION_TYPES.VALUE_SET, {\n\t\t\t\tvalue: trimmedValue,\n\t\t\t\tdisplayValue: trimmedValue,\n\t\t\t\tname\n\t\t\t});\n\t\t}\n\n\t\tif (isDependent) {\n\t\t\tdispatch(ACTION_TYPES.CHECK_VALID);\n\t\t\tdispatch(ACTION_TYPES.NOTIFY_VALIDITY);\n\t\t\tdispatch(ACTION_TYPES.FINISHED_EDIT); // to store max_length value in sn-tb-field\n\t\t}\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({ action, updateState }) => {\n\t\t// need this when  messages/invalid come from server validation.\n\t\tconst {\n\t\t\tpayload: { name, value }\n\t\t} = action;\n\n\t\tif (name === MESSAGES || name === INVALID || name === VALUE)\n\t\t\tupdateState({ [name]: value });\n\t},\n\t[ACTION_TYPES.NOW_INPUT__INPUT]: {\n\t\teffect: ({ action, dispatch, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { fieldValue: value }\n\t\t\t} = action;\n\n\t\t\tupdateStateWithoutRender({ value }, updateState);\n\n\t\t\tdispatch(ACTION_TYPES.CHECK_VALID);\n\t\t\tdispatch(ACTION_TYPES.SHOW_MESSAGES);\n\t\t\tdispatch(ACTION_TYPES.NOTIFY_VALIDITY);\n\t\t\tdispatch(ACTION_TYPES.FINISHED_EDIT);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.CHECK_VALID]: {\n\t\teffect: ({ state, properties, updateState }) => {\n\t\t\tconst { value } = state;\n\t\t\tconst { type, allowEmptyValue } = properties;\n\t\t\tconst isInValid = !validateValue(\n\t\t\t\tvalue.trim(),\n\t\t\t\ttype,\n\t\t\t\tallowEmptyValue\n\t\t\t);\n\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{\n\t\t\t\t\tinvalid: isInValid\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SHOW_MESSAGES]: {\n\t\teffect: ({ state: { invalid }, properties: { type }, updateState }) => {\n\t\t\tconst content =\n\t\t\t\ttype === 'number'\n\t\t\t\t\t? t('Please enter valid positive integer')\n\t\t\t\t\t: t('Please enter valid value');\n\n\t\t\tconst messages = invalid\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t\t\t\t}\n\t\t\t\t  ]\n\t\t\t\t: [];\n\n\t\t\tupdateState({ messages });\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOTIFY_VALIDITY]: {\n\t\teffect: ({ state: { invalid }, dispatch }) => {\n\t\t\tdispatch(TB_FIELD_ACTIONS.SN_TB_FIELD__SET_INVALID, {\n\t\t\t\tvalue: invalid\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.FINISHED_EDIT]: {\n\t\teffect: ({ dispatch }) => {\n\t\t\tdispatch(({ state, properties }) => {\n\t\t\t\tconst { value } = state;\n\t\t\t\tconst { name, type } = properties;\n\n\t\t\t\tconst val = getValue(value, type);\n\t\t\t\tconst displayValue = getDisplayValue(val, type);\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: ACTION_TYPES.VALUE_SET,\n\t\t\t\t\tpayload: { value: val, displayValue, name }\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t}\n};\n","import { NUMERIC_MIN_LIMIT, NUMERIC_MAX_LIMIT } from './constants';\n\nexport function validateValue(value, type, allowEmptyValue) {\n\tif (allowEmptyValue && value === '') return true;\n\tif ((type === 'text' || type === 'number') && value === '') return false;\n\tif (\n\t\ttype === 'number' &&\n\t\t(value <= NUMERIC_MIN_LIMIT ||\n\t\t\tvalue > NUMERIC_MAX_LIMIT ||\n\t\t\t`${value}`.includes('.'))\n\t)\n\t\treturn false; // accept only positive integer values\n\treturn true;\n}\n\nexport function getValue(value, type) {\n\tlet val = value.trim();\n\tif (val !== '' && type === 'number') return Number(val);\n\treturn val;\n}\n\nexport function getDisplayValue(value, type) {\n\treturn type === 'number' ? value.toLocaleString('en-US') : value;\n}\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{min-width:9.375rem;width:100%;display:inline-block}now-input{width:100%;margin-block-start:.125rem;margin-block-end:.25rem}\", \"\"]);\n\n// exports\n","import './sn-tb-choice';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\nimport { VARIANT_EDITABLE, CHOICES, CHOICE_TYPE } from './constants';\nimport { INTERNAL_TYPES } from '../../commons/constants';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\n\ncreateCustomElement('sn-tb-choice', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\tchoices: [],\n\t\tchoiceType: '',\n\t\tnewChoice: '',\n\t\tshouldEnableAddBtn: false,\n\t\tdeletedChoices: [],\n\t\tinvalid: false\n\t},\n\tproperties: {\n\t\tvariant: {\n\t\t\tdefault: VARIANT_EDITABLE,\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tname: {\n\t\t\tdefault: INTERNAL_TYPES.CHOICE\n\t\t},\n\t\t[CHOICES]: {\n\t\t\tdefault: [],\n\t\t\tschema: {\n\t\t\t\ttype: 'array'\n\t\t\t}\n\t\t},\n\t\t[CHOICE_TYPE]: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tchoiceTypes: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.choiceTypes\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-button';\nimport '@servicenow/now-input';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-select';\nimport '@servicenow/now-highlighted-value';\nimport '@servicenow/now-tooltip';\nimport { t } from 'sn-translate';\nimport {\n\tACTION_TYPES,\n\tDIRECTION_UP,\n\tDIRECTION_DOWN,\n\tNEW_CHOICE_INPUT,\n\tCHOICE_VALUE,\n\tCHOICE_LABEL,\n\tVARIANT_EDITABLE\n} from './constants';\nimport { EVENT_KEY } from '../../commons/constants';\n\nconst renderChoices = (choices, dispatch) => {\n\tconst validChoiceCount = choices.length;\n\n\treturn choices.map(({ label, value, sysId }, index) => {\n\t\tconst rowNum = index + 1;\n\t\treturn (\n\t\t\t<div className='choice-item'>\n\t\t\t\t<span className='list-number'>{rowNum}</span>\n\t\t\t\t<div className='reorder-controls'>\n\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\tclassName={`${DIRECTION_UP}-btn`}\n\t\t\t\t\t\ticon='caret-up-fill'\n\t\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\t\tbare={true}\n\t\t\t\t\t\thidePadding={true}\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\tbutton: {\n\t\t\t\t\t\t\t\t'aria-label': t('Move Choice up')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttooltipContent={t('Move Choice up')}\n\t\t\t\t\t\tdisabled={rowNum === 1}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tif (rowNum !== 1)\n\t\t\t\t\t\t\t\tdispatch(ACTION_TYPES.REORDER_CHOICE, {\n\t\t\t\t\t\t\t\t\tdirection: DIRECTION_UP,\n\t\t\t\t\t\t\t\t\tsysId,\n\t\t\t\t\t\t\t\t\tposition: index\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\tclassName={`${DIRECTION_DOWN}-btn`}\n\t\t\t\t\t\ticon='caret-down-fill'\n\t\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\t\tbare={true}\n\t\t\t\t\t\thidePadding={true}\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\tbutton: {\n\t\t\t\t\t\t\t\t'aria-label': t('Move Choice down')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttooltipContent={t('Move Choice down')}\n\t\t\t\t\t\tdisabled={rowNum === validChoiceCount}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tif (rowNum !== validChoiceCount)\n\t\t\t\t\t\t\t\tdispatch(ACTION_TYPES.REORDER_CHOICE, {\n\t\t\t\t\t\t\t\t\tdirection: DIRECTION_DOWN,\n\t\t\t\t\t\t\t\t\tsysId,\n\t\t\t\t\t\t\t\t\tposition: index\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<now-input\n\t\t\t\t\tlabel={t('Label')}\n\t\t\t\t\trequired={true}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={label}\n\t\t\t\t\tname={CHOICE_LABEL}\n\t\t\t\t\tappend-to-payload={{ position: index }}\n\t\t\t\t\tconfig-aria={{ 'aria-label': t('Label') }}\n\t\t\t\t/>\n\t\t\t\t<now-input\n\t\t\t\t\tlabel={t('Value')}\n\t\t\t\t\trequired={true}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tname={CHOICE_VALUE}\n\t\t\t\t\tappend-to-payload={{ position: index }}\n\t\t\t\t\tconfig-aria={{ 'aria-label': t('Label') }}\n\t\t\t\t/>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tclassName='delete-choice'\n\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\tbare\n\t\t\t\t\thidePadding={true}\n\t\t\t\t\ticon='trash-outline'\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tdispatch(ACTION_TYPES.DELETE_CHOICE, { sysId });\n\t\t\t\t\t}}\n\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\tbutton: { 'aria-label': t('Delete choice') }\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t});\n};\n\nconst renderEditableComp = (state, dispatch) => {\n\tconst {\n\t\tchoices,\n\t\tchoiceType,\n\t\tnewChoice,\n\t\tshouldEnableAddBtn,\n\t\tproperties: { choiceTypes }\n\t} = state;\n\n\treturn (\n\t\t<div className='sn-tb-choice-container'>\n\t\t\t<now-select\n\t\t\t\tclassName='choice-type'\n\t\t\t\tsearch='none'\n\t\t\t\thelperContent='Please select a Choice Type from dropdown'\n\t\t\t\titems={choiceTypes}\n\t\t\t\tlabel={t('Choice Type')}\n\t\t\t\trequired={true}\n\t\t\t\tselectedItem={choiceType}\n\t\t\t/>\n\n\t\t\t<div className='choice-input'>\n\t\t\t\t<now-input\n\t\t\t\t\thelperContent={t('Enter new choice')}\n\t\t\t\t\tlabel={t('Choices')}\n\t\t\t\t\tmessages={[]}\n\t\t\t\t\tplaceholder={t('Type a choice and hit ENTER')}\n\t\t\t\t\tstep='any'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={newChoice}\n\t\t\t\t\tname={NEW_CHOICE_INPUT}\n\t\t\t\t\ton-keydown={e => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te.key === EVENT_KEY.ENTER &&\n\t\t\t\t\t\t\tnewChoice.trim() !== ''\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tdispatch(ACTION_TYPES.ADD_CHOICE);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<now-button\n\t\t\t\t\tdata-testId='add'\n\t\t\t\t\tlabel={t('Add')}\n\t\t\t\t\tsize='md'\n\t\t\t\t\tvariant='primary'\n\t\t\t\t\tdisabled={!shouldEnableAddBtn}\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tif (shouldEnableAddBtn)\n\t\t\t\t\t\t\tdispatch(ACTION_TYPES.ADD_CHOICE);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='choice-list'>\n\t\t\t\t{renderChoices(choices, dispatch)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderViewComp = (state, updateState) => {\n\tconst { choices, choiceCountRef } = state;\n\tconst tooltipContent = choices\n\t\t.map((choice, index) => t(`${index + 1}.${choice.label}`))\n\t\t.join(', ');\n\tconst label = t('{0} Choices', choices.length);\n\n\t// TODO: Maintain only one grid level tooltip and update targer-ref based on mouse over.\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-highlighted-value\n\t\t\t\tlabel={label}\n\t\t\t\tcolor='info'\n\t\t\t\tvariant='tertiary'\n\t\t\t\ttitle={tooltipContent}\n\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tchoiceCountRef: elm\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\thook-destroy={() =>\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tchoiceCountRef: null\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<now-tooltip\n\t\t\t\tcontent={tooltipContent}\n\t\t\t\tdelay={500}\n\t\t\t\tid='choiceCount'\n\t\t\t\ttarget-ref={choiceCountRef}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport default (state, { dispatch, updateState }) => {\n\tconst { variant } = state.properties;\n\n\treturn variant === VARIANT_EDITABLE\n\t\t? renderEditableComp(state, dispatch)\n\t\t: renderViewComp(state, updateState);\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}:host{display:inline-block}.sn-tb-choice-container{height:100%;display:flex;flex-direction:column}.sn-tb-choice-container .choice-type{width:100%}.sn-tb-choice-container .choice-input{margin-block-start:.75rem;display:flex;align-items:center}.sn-tb-choice-container .choice-input now-input{flex:1}.sn-tb-choice-container .choice-input now-button{margin-inline-start:.5rem}.sn-tb-choice-container .choice-list{padding-block-start:.75rem;max-height:14.5rem;overflow-y:auto}.sn-tb-choice-container .choice-list .choice-item{display:flex;align-items:center;margin-block-start:.75rem}.sn-tb-choice-container .choice-list .choice-item:first-child{margin-block-start:0}.sn-tb-choice-container .choice-list .choice-item>*{margin-inline-end:1rem}.sn-tb-choice-container .choice-list .choice-item>:last-child{margin-inline-end:0}.sn-tb-choice-container .choice-list .reorder-controls{display:flex;flex-direction:column}now-input,now-select{margin-block-start:.125rem;margin-block-end:.25rem}\", \"\"]);\n\n// exports\n","import {\n\tACTION_TYPES,\n\tCHOICE_LABEL,\n\tNEW_CHOICE_INPUT,\n\tCHOICE_VALUE,\n\tDIRECTION_DOWN,\n\tCHOICES,\n\tCHOICE_TYPE\n} from './constants';\nimport { actionTypes } from '@servicenow/ui-core';\nimport {\n\tupdateChoice,\n\tremoveChoice,\n\tinitializeChoices,\n\treorder,\n\tgenerateSequences,\n\tfocusChoiceInput\n} from './utils';\nimport uuid from 'uuid';\nimport { ACTION_TYPES as TB_FIELD_ACTIONS } from '../sn-tb-field/constants';\nimport {\n\tremoveSpecialCharacters,\n\tupdateStateWithoutRender\n} from '../../commons/utils';\n\nconst { COMPONENT_DOM_READY, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nexport const deleteChoice = ({ state, updateState, action, dispatch }) => {\n\tconst {\n\t\tpayload: { sysId }\n\t} = action;\n\tconst { choices } = state;\n\tremoveChoice(choices, sysId, updateState);\n\tdispatch(ACTION_TYPES.CHOICE_SET_CHANGED);\n};\n\nexport const addChoice = ({ host, state, updateState, dispatch }) => {\n\tconst { choices } = state;\n\tconst newChoice = state.newChoice.trim();\n\n\tconst choice = {\n\t\tsequence: -1,\n\t\tsysId: `-1${uuid.v4()}`,\n\t\tlabel: newChoice,\n\t\tvalue: removeSpecialCharacters(newChoice)\n\t};\n\tconst updatedChoices = [...choices, choice];\n\tupdateState({\n\t\tchoices: generateSequences(updatedChoices),\n\t\tnewChoice: '',\n\t\tshouldEnableAddBtn: false\n\t});\n\tdispatch(ACTION_TYPES.CHOICE_SET_CHANGED);\n\tdispatch(ACTION_TYPES.SCROLL_BOTTOM_CHOICE_LIST);\n\n\t// do focus on choice input element\n\tfocusChoiceInput(host);\n};\n\nexport const reorderChoices = ({\n\thost,\n\taction,\n\tstate,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst {\n\t\tpayload: { direction, sysId, position }\n\t} = action;\n\tconst { choices } = state;\n\treorder(choices, direction, sysId, updateState);\n\tdispatch(ACTION_TYPES.CHOICE_SET_CHANGED);\n\n\t// Set focus to selected choice item while reorder\n\tconst currPos = position + (direction === DIRECTION_DOWN ? 1 : -1);\n\tconst reorderBtn = host.shadowRoot.querySelector(\n\t\t`.choice-item:nth-child(${\n\t\t\tcurrPos + 1\n\t\t}) .reorder-controls .${direction}-btn`\n\t);\n\treorderBtn.focus();\n};\n\nexport const onInputValueSet = ({ action, state, updateState, dispatch }) => {\n\tconst { name, position } = action.payload;\n\tconst value = action.payload.value.trim();\n\tconst { choices } = state;\n\n\tswitch (name) {\n\t\tcase CHOICE_VALUE:\n\t\tcase CHOICE_LABEL:\n\t\t\tupdateChoice(choices, position, { name, value }, updateState);\n\t\t\tdispatch(ACTION_TYPES.CHOICE_SET_CHANGED);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ properties, updateState, dispatch }) => {\n\t\tconst { choices, choiceType } = properties;\n\t\tinitializeChoices(choices, choiceType, updateState);\n\t\tdispatch(ACTION_TYPES.CHECK_VALID);\n\t\tdispatch(ACTION_TYPES.NOTIFY_VALIDITY);\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: {\n\t\teffect: ({ properties, action, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { name, value }\n\t\t\t} = action;\n\n\t\t\tif ([CHOICES, CHOICE_TYPE].includes(name)) {\n\t\t\t\tlet { choices, choiceType } = properties;\n\t\t\t\tif (name === CHOICES) choices = value;\n\t\t\t\telse if (name === CHOICE_TYPE) choiceType = value;\n\n\t\t\t\tinitializeChoices(choices, choiceType, updateState);\n\t\t\t}\n\t\t},\n\t\t// to avoid multiple effect calls when more properties are updated\n\t\tmodifier: { name: 'debounce', delay: 50 }\n\t},\n\t[ACTION_TYPES.NOW_SELECT__SELECTED_ITEM_SET]: {\n\t\teffect: ({ action, updateState, dispatch }) => {\n\t\t\tconst { value } = action.payload;\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{\n\t\t\t\t\tchoiceType: value\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t);\n\t\t\tdispatch(ACTION_TYPES.CHOICE_SET_CHANGED);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_INPUT__INPUT]: {\n\t\teffect: ({ action, updateState }) => {\n\t\t\tconst { name, fieldValue } = action.payload;\n\n\t\t\tif (name === NEW_CHOICE_INPUT) {\n\t\t\t\tupdateState({\n\t\t\t\t\tnewChoice: fieldValue,\n\t\t\t\t\tshouldEnableAddBtn: fieldValue.trim() !== ''\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_INPUT__INVALID_SET]: {\n\t\teffect: ({ state, action, dispatch, updateState }) => {\n\t\t\tconst { choices } = state;\n\t\t\tconst { name, value, fieldValue, position } = action.payload;\n\n\t\t\tif (value) {\n\t\t\t\tupdateChoice(\n\t\t\t\t\tchoices,\n\t\t\t\t\tposition,\n\t\t\t\t\t{ name, value: fieldValue },\n\t\t\t\t\tupdateState\n\t\t\t\t);\n\t\t\t\tdispatch(ACTION_TYPES.CHOICE_SET_CHANGED);\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_INPUT__VALUE_SET]: {\n\t\teffect: onInputValueSet,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.DELETE_CHOICE]: deleteChoice,\n\t[ACTION_TYPES.ADD_CHOICE]: addChoice,\n\t[ACTION_TYPES.REORDER_CHOICE]: reorderChoices,\n\t[ACTION_TYPES.CHOICE_SET_CHANGED]: ({ dispatch }) => {\n\t\tdispatch(ACTION_TYPES.CHECK_VALID);\n\t\tdispatch(ACTION_TYPES.NOTIFY_VALIDITY);\n\t\tdispatch(ACTION_TYPES.FINISHED_EDIT);\n\t},\n\t[ACTION_TYPES.CHECK_VALID]: {\n\t\teffect: ({ state, updateState }) => {\n\t\t\tconst { choiceType, choices } = state;\n\t\t\tlet isInvalid = false;\n\n\t\t\tconst isAnyChoiceItemInvalid = choices.some(choice => {\n\t\t\t\treturn choice.label === '' || choice.value === '';\n\t\t\t});\n\t\t\tif (choiceType === '' || !choices.length || isAnyChoiceItemInvalid)\n\t\t\t\tisInvalid = true;\n\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{\n\t\t\t\t\tinvalid: isInvalid\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOTIFY_VALIDITY]: {\n\t\teffect: ({ state: { invalid }, dispatch }) => {\n\t\t\tdispatch(TB_FIELD_ACTIONS.SN_TB_FIELD__SET_INVALID, {\n\t\t\t\tvalue: invalid\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.FINISHED_EDIT]: {\n\t\teffect: ({ dispatch }) => {\n\t\t\tdispatch(({ state, properties }) => {\n\t\t\t\tconst { choiceType, choices, deletedChoices } = state;\n\t\t\t\tconst finalChoices = choices.concat(deletedChoices);\n\t\t\t\tconst { name } = properties;\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: ACTION_TYPES.VALUE_SET,\n\t\t\t\t\tpayload: { choiceType, choices: finalChoices, name }\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SCROLL_BOTTOM_CHOICE_LIST]: {\n\t\teffect: ({ host }) => {\n\t\t\tconst choiceList = host.shadowRoot.querySelector('.choice-list');\n\t\t\tchoiceList.scrollTo({\n\t\t\t\ttop: choiceList.scrollHeight,\n\t\t\t\tbehavior: 'smooth'\n\t\t\t});\n\t\t},\n\t\t// debouce to wait for view to render\n\t\tmodifier: { name: 'debounce', delay: 50 }\n\t}\n};\n","import {\n\tDIRECTION_UP,\n\tCHOICE_SEQ_INTERVAL,\n\tCHOICE_LABEL,\n\tCHOICE_VALUE\n} from './constants';\nimport { removeSpecialCharacters } from '../../commons/utils';\n\nexport function initializeChoices(choices, choiceType, updateState) {\n\tconst validChoices = choices\n\t\t.filter(choice => !choice.deleted)\n\t\t.map(choice =>\n\t\t\tchoice.sequence === '' ? { ...choice, sequence: 0 } : { ...choice }\n\t\t);\n\tconst deletedChoices = choices.filter(choice => choice.deleted);\n\tupdateState({\n\t\tchoices: validChoices,\n\t\tchoiceType,\n\t\tdeletedChoices\n\t});\n}\n\nexport function updateChoice(choices, position, { name, value }, updateState) {\n\tconst updatedChoices = choices.map((choice, index) => {\n\t\tconst choiceObj = { ...choice };\n\t\tif (index === position) {\n\t\t\tchoiceObj[name] = value;\n\t\t\tif (name === CHOICE_LABEL)\n\t\t\t\tchoiceObj[CHOICE_VALUE] = removeSpecialCharacters(value);\n\t\t}\n\t\treturn choiceObj;\n\t});\n\n\tupdateState({ choices: updatedChoices });\n}\n\nexport const removeChoice = (choices, sysId, updateState) => {\n\tconst remainingChoices = choices.filter(choice => choice.sysId !== sysId);\n\tconst deletedChoice = choices.find(choice => choice.sysId === sysId);\n\tdeletedChoice.deleted = true;\n\n\tupdateState({\n\t\tchoices: generateSequences(remainingChoices)\n\t});\n\n\tupdateState({\n\t\tpath: 'deletedChoices',\n\t\toperation: 'push',\n\t\tvalue: deletedChoice\n\t});\n};\n\nexport function reorder(choices, direction, sysId, updateState) {\n\tconst choiceOptions = [...choices];\n\tconst choiceIndex = getChoiceIndex(choiceOptions, sysId);\n\tconst reorderedArray = swap(\n\t\tchoiceOptions,\n\t\tchoiceIndex,\n\t\tchoiceIndex + (direction === DIRECTION_UP ? -1 : 1)\n\t);\n\tupdateState({ choices: generateSequences(reorderedArray) });\n}\n\nfunction getChoiceIndex(choices, sysId) {\n\treturn choices.findIndex(choice => choice.sysId === sysId);\n}\n\nfunction swap(targetArray, fromIndex, toIndex) {\n\tlet temp = targetArray[fromIndex];\n\n\ttargetArray[fromIndex] = targetArray[toIndex];\n\ttargetArray[toIndex] = temp;\n\n\treturn targetArray;\n}\n\nexport function generateSequences(choices) {\n\treturn choices.map((choice, index) => ({\n\t\t...choice,\n\t\tsequence: (index + 1) * CHOICE_SEQ_INTERVAL\n\t}));\n}\n\nexport const focusChoiceInput = host => {\n\thost.shadowRoot\n\t\t.querySelector('.choice-input now-input')\n\t\t.shadowRoot.querySelector('input')\n\t\t.focus();\n};\n","import { actionTypes } from '@servicenow/ui-core';\nimport {\n\tshouldShowDependent,\n\tderiveDependentValues,\n\tupdateDependentValues\n} from './utils';\nimport { ACTION_TYPES as TB_REF_ACTIONS } from '../sn-tb-reference/constants';\nimport { ACTION_TYPES as TB_FIELD_ACTIONS } from '../sn-tb-field/constants';\nimport { ACTION_TYPES as TB_INPUT_ACTIONS } from '../sn-tb-input/constants';\nimport { ACTION_TYPES as TB_CHOICE_ACTIONS } from '../sn-tb-choice/constants';\nimport { ACTION_TYPES } from './constants';\nimport { INTERNAL_TYPES, TABLE_COLUMNS } from '../../commons/constants';\n\nconst { COMPONENT_DOM_READY } = actionTypes;\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ properties, dispatch, updateState }) => {\n\t\tconst { value, displayValue } = properties;\n\n\t\tupdateState({ typeValue: { value, displayValue } });\n\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__SET_DEPENDENT, { value });\n\t},\n\t// tb-reference action catchers\n\t[TB_REF_ACTIONS.SN_TB_REFERENCE__CLOSE_OFF]: ({ action, dispatch }) => {\n\t\taction.preventDefault();\n\t\tconst { payload: { valueSetAndClosed } = {} } = action;\n\n\t\tif (valueSetAndClosed)\n\t\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__CLOSE_OFF);\n\t},\n\t[TB_REF_ACTIONS.SN_TB_REFERENCE__VALUE_SET]: {\n\t\teffect: ({ updateState, action, dispatch, state }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { value, name, displayValue }\n\t\t\t} = action;\n\t\t\tconst { dependentValues } = state;\n\n\t\t\tif (name === TABLE_COLUMNS.INTERNAL_TYPE) {\n\t\t\t\tupdateState({ typeValue: { value, name, displayValue } });\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__SET_DEPENDENT, {\n\t\t\t\t\tvalue\n\t\t\t\t});\n\t\t\t\tdispatch(TB_FIELD_ACTIONS.INTERNAL_TYPE_CHANGED, { value });\n\t\t\t} else if (name === INTERNAL_TYPES.REFERENCE) {\n\t\t\t\tupdateDependentValues(\n\t\t\t\t\tname,\n\t\t\t\t\t{ value, displayValue },\n\t\t\t\t\tdependentValues,\n\t\t\t\t\tupdateState\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__FINISHED_EDIT);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[TB_REF_ACTIONS.SN_TB_REFERENCE__SET_INVALID]: ({\n\t\taction,\n\t\tstate,\n\t\tupdateState\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { value, name }\n\t\t} = action;\n\t\tconst { dependentValues } = state;\n\n\t\tif (value && name === TABLE_COLUMNS.INTERNAL_TYPE) {\n\t\t\tupdateDependentValues(\n\t\t\t\tname,\n\t\t\t\t{ value: '', displayValue: '' },\n\t\t\t\tdependentValues,\n\t\t\t\tupdateState\n\t\t\t);\n\t\t\tupdateState({ showDependent: false });\n\t\t}\n\t},\n\t// tb-input action catchers\n\t[TB_INPUT_ACTIONS.VALUE_SET]: {\n\t\teffect: ({ action, dispatch, updateState, state }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { value, displayValue, name }\n\t\t\t} = action;\n\t\t\tconst { dependentValues } = state;\n\n\t\t\tupdateDependentValues(\n\t\t\t\tname,\n\t\t\t\t{ value, displayValue },\n\t\t\t\tdependentValues,\n\t\t\t\tupdateState\n\t\t\t);\n\n\t\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__FINISHED_EDIT);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t// sb-tb-choice action catchers\n\t[TB_CHOICE_ACTIONS.VALUE_SET]: {\n\t\teffect: ({ state, action, dispatch, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { choiceType, choices, name }\n\t\t\t} = action;\n\t\t\tconst { dependentValues } = state;\n\n\t\t\tconst data = { choiceType, choices };\n\n\t\t\tupdateDependentValues(\n\t\t\t\tname,\n\t\t\t\t{ value: data, displayValue: data },\n\t\t\t\tdependentValues,\n\t\t\t\tupdateState\n\t\t\t);\n\t\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__FINISHED_EDIT);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.SN_TB_TYPE_EDIT__SET_DEPENDENT]: ({\n\t\taction,\n\t\tupdateState,\n\t\tproperties,\n\t\tdispatch\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { value }\n\t\t} = action;\n\t\tconst {\n\t\t\tgridRows,\n\t\t\tgridColumns,\n\t\t\tcellIdentity,\n\t\t\trecordSysId,\n\t\t\ttableName\n\t\t} = properties;\n\t\tconst data = {\n\t\t\tshowDependent: shouldShowDependent(value)\n\t\t};\n\n\t\tif (data.showDependent) {\n\t\t\tdata.dependentValues = deriveDependentValues(\n\t\t\t\tvalue,\n\t\t\t\tgridRows,\n\t\t\t\tgridColumns,\n\t\t\t\tcellIdentity,\n\t\t\t\t{ recordSysId, tableName }\n\t\t\t);\n\t\t}\n\n\t\tupdateState(data);\n\n\t\t// apart from referenced table dependent that user will select. will auto populate max length as 32 for reference\n\t\t// this way we can avoid showing platform's un-intuitive message after save for reference\n\t\tif (value === INTERNAL_TYPES.REFERENCE)\n\t\t\tdispatch(ACTION_TYPES.SN_TB_TYPE_EDIT__SET_DEFAULT_MAX_LENGTH);\n\t},\n\t[ACTION_TYPES.SN_TB_TYPE_EDIT__FINISHED_EDIT]: ({ dispatch }) => {\n\t\tdispatch(({ state }) => {\n\t\t\tconst { typeValue, dependentValues, showDependent } = state;\n\t\t\treturn {\n\t\t\t\ttype: ACTION_TYPES.SN_TB_TYPE_EDIT__VALUES_SET,\n\t\t\t\tpayload: {\n\t\t\t\t\ttypeValue,\n\t\t\t\t\tdependentValues,\n\t\t\t\t\thasDependent: showDependent\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\t[ACTION_TYPES.SN_TB_TYPE_EDIT__CLOSE_OFF]: ({ dispatch }) => {\n\t\tdispatch(() => {\n\t\t\treturn {\n\t\t\t\ttype: TB_FIELD_ACTIONS.SN_TB_FIELD__CLOSE_OFF\n\t\t\t};\n\t\t});\n\t},\n\t[ACTION_TYPES.SN_TB_TYPE_EDIT__SET_DEFAULT_MAX_LENGTH]: ({\n\t\tupdateState,\n\t\tstate\n\t}) => {\n\t\tconst { dependentValues } = state;\n\t\t// right now this only for reference\n\t\tupdateDependentValues(\n\t\t\tTABLE_COLUMNS.MAX_LENGTH,\n\t\t\t{ value: 32, displayValue: '32' },\n\t\t\tdependentValues,\n\t\t\tupdateState\n\t\t);\n\t}\n};\n","import { DEPENDENT_WHITE_LIST, DEFAULT_MAX_LENGTH } from './constants';\nimport {\n\tgetColumnLabel,\n\tgetColumnIndex,\n\tgetCellModel\n} from '../../behaviors/grid-model/utils';\nimport { INTERNAL_TYPES, TABLE_COLUMNS } from '../../commons/constants';\n\nexport const shouldShowDependent = value =>\n\tObject.keys(DEPENDENT_WHITE_LIST).indexOf(value) !== -1;\n\nexport const deriveDependentValues = (\n\tvalue,\n\tgridRows,\n\tgridColumns,\n\tcellIdentity,\n\tfieldMeta\n) => {\n\tlet dependentValues = {};\n\tconst dependents = DEPENDENT_WHITE_LIST[value];\n\n\tdependents.reduce((acc, curr) => {\n\t\tif (curr === INTERNAL_TYPES.CHOICE) {\n\t\t\tconst cellModel = getCellModel({\n\t\t\t\tgridRows,\n\t\t\t\tgridColumns,\n\t\t\t\tcellIdentity\n\t\t\t});\n\t\t\tacc[curr] = {\n\t\t\t\t...cellModel.fieldMeta,\n\t\t\t\tcellIdentity\n\t\t\t};\n\t\t} else {\n\t\t\tconst label = getColumnLabel(curr, gridColumns);\n\t\t\tconst {\n\t\t\t\tmodel: { value, displayValue },\n\t\t\t\tcellIdentity: currCellIdentity\n\t\t\t} = getValueFromModel(curr, gridRows, gridColumns, cellIdentity);\n\t\t\tconst props = {\n\t\t\t\tvalue,\n\t\t\t\tdisplayValue,\n\t\t\t\tlabel,\n\t\t\t\tcellIdentity: currCellIdentity\n\t\t\t};\n\n\t\t\tif (curr === TABLE_COLUMNS.MAX_LENGTH && props.value === '') {\n\t\t\t\tprops.value = DEFAULT_MAX_LENGTH;\n\t\t\t}\n\n\t\t\tif (curr === INTERNAL_TYPES.REFERENCE) {\n\t\t\t\tprops.fieldName = curr;\n\t\t\t\tprops.tableName = fieldMeta.tableName;\n\t\t\t\tprops.recordSysId = fieldMeta.recordSysId;\n\t\t\t}\n\n\t\t\tacc[curr] = props;\n\n\t\t\treturn acc;\n\t\t}\n\t}, dependentValues);\n\n\treturn dependentValues;\n};\n\nfunction getValueFromModel(columnName, gridRows, gridColumns, cellIdentity) {\n\tconst columnIndex = getColumnIndex(gridColumns, columnName);\n\tconst rowIndex = cellIdentity.rowIndex;\n\tconst currCellIdentity = { rowIndex, columnIndex };\n\n\treturn {\n\t\tmodel: getCellModel({\n\t\t\tgridRows,\n\t\t\tgridColumns,\n\t\t\tcellIdentity: currCellIdentity\n\t\t}),\n\t\tcellIdentity: currCellIdentity\n\t};\n}\n\nexport function updateDependentValues(\n\tname,\n\tdata,\n\tdependentValues,\n\tupdateState\n) {\n\tupdateState({\n\t\tdependentValues: {\n\t\t\t...dependentValues,\n\t\t\t[name]: {\n\t\t\t\t...dependentValues[name],\n\t\t\t\t...data\n\t\t\t}\n\t\t}\n\t});\n}\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.dependent-field{margin-block-start:1rem;width:100%}sn-tb-choice{flex:1;overflow:hidden}.sn-tb-type-edit{height:100%;display:flex;flex-direction:column}\", \"\"]);\n\n// exports\n","import './sn-tb-textarea';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport { actionHandlers } from './actions';\nimport view from './view';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-tb-textarea', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\tvalue: '',\n\t\tinvalid: false\n\t},\n\tview,\n\tstyles,\n\tproperties: {\n\t\tlabel: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tvalue: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tname: {\n\t\t\tdefault: '',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tautofocus: {\n\t\t\tdefault: false,\n\t\t\tschema: { type: 'boolean' }\n\t\t},\n\t\tmaxlength: {\n\t\t\tdefault: 0,\n\t\t\tschema: { type: 'number' }\n\t\t}\n\t},\n\tactionHandlers\n});\n","import { actionTypes } from '@servicenow/ui-core';\nimport { ACTION_TYPES } from './constants';\nimport { updateStateWithoutRender } from '../../commons/utils';\n\nconst { COMPONENT_DOM_READY } = actionTypes;\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ properties, updateState, dispatch }) => {\n\t\tconst { value, maxlength, name } = properties;\n\t\tconst trimmedValue = value.substr(0, maxlength);\n\n\t\tupdateState({ value: trimmedValue });\n\n\t\tif (maxlength < value.length) {\n\t\t\tdispatch(ACTION_TYPES.VALUE_SET, {\n\t\t\t\tvalue: trimmedValue,\n\t\t\t\tdisplayValue: trimmedValue,\n\t\t\t\tname\n\t\t\t});\n\t\t}\n\t},\n\n\t[ACTION_TYPES.NOW_TEXTAREA__INPUT]: {\n\t\teffect: ({ action, dispatch, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { fieldValue: value }\n\t\t\t} = action;\n\n\t\t\tupdateStateWithoutRender({ value }, updateState);\n\t\t\tdispatch(ACTION_TYPES.FINISHED_EDIT);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\n\t[ACTION_TYPES.FINISHED_EDIT]: {\n\t\teffect: ({ dispatch }) => {\n\t\t\tdispatch(({ state, properties }) => {\n\t\t\t\tconst { value } = state;\n\t\t\t\tconst { name } = properties;\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: ACTION_TYPES.VALUE_SET,\n\t\t\t\t\tpayload: { value, displayValue: value, name }\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t}\n};\n","import '@servicenow/now-textarea';\nimport { getInfoMessage } from './utils';\n\nexport default state => {\n\tconst {\n\t\tvalue,\n\t\tinvalid,\n\t\tproperties: { label, autofocus, name, maxlength }\n\t} = state;\n\n\treturn (\n\t\t<now-textarea\n\t\t\tlabel={label}\n\t\t\tvalue={value}\n\t\t\tmaxlength={maxlength}\n\t\t\tmessages={getInfoMessage(maxlength)}\n\t\t\tname={name}\n\t\t\tinvalid={invalid}\n\t\t\tautofocus={autofocus}\n\t\t\tresize='vertical'\n\t\t/>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_textarea;","import { INFO_ALERT } from '../../commons/constants';\nimport { t } from 'sn-translate';\n\nexport function getInfoMessage(maxlength) {\n\treturn [\n\t\t{\n\t\t\tstatus: INFO_ALERT.STATUS,\n\t\t\tcontent: t('{0} character limit', maxlength),\n\t\t\ticon: INFO_ALERT.ICON\n\t\t}\n\t];\n}\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{min-width:9.375rem;width:100%;display:inline-block}now-textarea{width:100%;margin-block-start:.125rem;margin-block-end:.25rem}\", \"\"]);\n\n// exports\n","import './sn-tb-select';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\n\ncreateCustomElement('sn-tb-select', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\titems: [],\n\t\tselectedItem: ''\n\t},\n\tproperties: {\n\t\titems: {\n\t\t\tdefault: [],\n\t\t\tschema: {\n\t\t\t\ttype: 'array'\n\t\t\t}\n\t\t},\n\t\tselectedItem: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tautofocus: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\t\tallowEmptyValue: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import '@servicenow/now-select';\n\nexport default state => {\n\tconst {\n\t\tproperties: { selectedItem, autofocus },\n\t\titems\n\t} = state;\n\treturn (\n\t\t<now-select\n\t\t\tclassName='default-choice'\n\t\t\tautofocus={autofocus}\n\t\t\titems={items}\n\t\t\tselectedItem={selectedItem}\n\t\t/>\n\t);\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}:host{min-width:15.625rem;width:100%;display:inline-block}now-select{width:100%;margin-block-start:.125rem;margin-block-end:.25rem}\", \"\"]);\n\n// exports\n","import { actionTypes } from '@servicenow/ui-core';\nimport {\n\tACTION_TYPES,\n\tNONE_OPTION_ID,\n\tSELECT_DROPDOWN_LIST_IDENTIFIER,\n\tITEMS\n} from './constants';\nimport {\n\tupdateStateWithoutRender,\n\tcreateGlobalListener,\n\tgetEventPath\n} from '../../commons/utils';\nimport { EVENT_KEY } from '../../commons/constants';\nimport { ACTION_TYPES as TB_FIELD_ACTIONS } from '../sn-tb-field/constants';\nimport { initializeState } from './utils';\n\nexport const globalKeydownListener = createGlobalListener('keydown');\n\nconst {\n\tCOMPONENT_DOM_READY,\n\tCOMPONENT_DISCONNECTED,\n\tCOMPONENT_PROPERTY_CHANGED\n} = actionTypes;\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ action, properties, updateState, dispatch }) => {\n\t\tinitializeState({ properties, updateState });\n\n\t\t// handle now-select enter issue\n\t\tconst id = action.meta.id;\n\t\tglobalKeydownListener.add(id, event => {\n\t\t\tif (!(event instanceof KeyboardEvent)) return;\n\t\t\tif (event.key !== EVENT_KEY.ENTER) return;\n\n\t\t\tconst path = getEventPath(event);\n\t\t\tconst enterFromSelectDropdown = path.find(\n\t\t\t\tnode =>\n\t\t\t\t\tnode.classList &&\n\t\t\t\t\tnode.classList.contains(SELECT_DROPDOWN_LIST_IDENTIFIER)\n\t\t\t);\n\n\t\t\t// if enter is pressed on now-select component, cell should becomes read only instead of opening dropdown list\n\t\t\tif (!enterFromSelectDropdown)\n\t\t\t\tdispatch(TB_FIELD_ACTIONS.SN_TB_FIELD__FINISH_EDITING, {\n\t\t\t\t\tretainFocus: true\n\t\t\t\t});\n\t\t});\n\t},\n\t[COMPONENT_DISCONNECTED]: ({ action }) => {\n\t\tconst id = action.meta.id;\n\t\tglobalKeydownListener.remove(id);\n\t},\n\t[ACTION_TYPES.NOW_SELECT_SELECTED_ITEM_SET]: {\n\t\teffect: ({ action, dispatch, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { item }\n\t\t\t} = action;\n\n\t\t\tupdateStateWithoutRender({ selectedItem: item.id }, updateState);\n\n\t\t\tlet value = item.id;\n\t\t\tlet displayValue = item.label;\n\n\t\t\tif (item.id === NONE_OPTION_ID) {\n\t\t\t\tvalue = '';\n\t\t\t\tdisplayValue = '';\n\t\t\t}\n\n\t\t\tdispatch(ACTION_TYPES.VALUE_SET, {\n\t\t\t\tvalue,\n\t\t\t\tdisplayValue\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({ action, properties, updateState }) => {\n\t\tconst {\n\t\t\tpayload: { name }\n\t\t} = action;\n\n\t\tif (name === ITEMS) initializeState({ properties, updateState });\n\t}\n};\n","import { DEFAULT_OPTION } from './constants';\n\nexport const initializeState = ({ properties, updateState }) => {\n\tconst { items, selectedItem, allowEmptyValue } = properties;\n\n\tupdateState({\n\t\titems: allowEmptyValue ? [DEFAULT_OPTION].concat(items) : items,\n\t\tselectedItem\n\t});\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-field-wrapper{display:flex;align-items:center;flex-direction:column}.sn-field-container{padding-inline-start:.25rem;padding-inline-end:.25rem;min-width:9.375rem;display:flex;align-items:center;pointer-events:all;overflow:hidden;width:100%;max-height:29.25rem}.sn-field-container.-medium{min-width:15.625rem}.sn-field-container.-large{min-width:29.5rem;padding:.75rem}.sn-field-container .field-comp{flex:1;display:flex;align-items:center;overflow:hidden}.sn-field-container .field-comp *{flex:1;height:100%}.sn-field-container now-loader{margin-inline-start:.5rem}.footer-controls{display:flex;width:100%;justify-content:flex-end;align-items:center;height:4rem;padding:0 1rem;box-shadow:0 0 .25rem 0 rgba(0,0,0,.5)}\", \"\"]);\n\n// exports\n","import { actionTypes } from '@servicenow/ui-core';\nimport { ACTION_TYPES, POPOVER_PANEL_TAG, VALUE } from './constants';\nimport {\n\tEVENT_KEY,\n\tINTERNAL_TYPES,\n\tTABLE_COLUMNS\n} from '../../commons/constants';\nimport { layerEvents } from '@servicenow/library-enhanced-utils';\nimport {\n\tupdateStateWithoutRender,\n\tcreateGlobalListener,\n\tgetEventPath\n} from '../../commons/utils';\nimport { ACTION_TYPES as GRID_MODEL_ACTION_TYPES } from '../../behaviors/grid-model/constants';\nimport { ACTION_TYPES as GRID_NAV_ACTION_TYPES } from '../../behaviors/grid-navigation/constants';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../sn-table-builder/constants';\nimport { ACTION_TYPES as TB_REF_ACTIONS } from '../sn-tb-reference/constants';\nimport { ACTION_TYPES as TB_TYPE_EDIT_ACTIONS } from '../sn-tb-type-edit/constants';\nimport { ACTION_TYPES as TB_INPUT_ACTIONS } from '../sn-tb-input/constants';\nimport { ACTION_TYPES as TB_TEXTAREA_ACTIONS } from '../sn-tb-textarea/constants';\nimport { ACTION_TYPES as TB_SELECT_ACTIONS } from '../sn-tb-select/constants';\nimport { ACTION_TYPES as TB_GRID_ACTIONS } from '../sn-tb-grid/constants';\nimport {\n\tcreateBatch,\n\toverridePopoverEvents,\n\tisNestedPanel,\n\tisComplexWidget,\n\tshouldUpdateTabbales,\n\tinitializeState\n} from './utils';\nimport { getColumnIndex } from '../../behaviors/grid-model/utils';\n\nexport const globalClickListener = createGlobalListener('click');\n\nconst {\n\tCOMPONENT_DOM_READY,\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_DISCONNECTED,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_TREE_RENDERED\n} = actionTypes;\n\nexport const onKeyDown = ({\n\taction,\n\tstate: { value, previousValue, previousDisplayValue },\n\tproperties,\n\tdispatch,\n\thost,\n\tupdateState\n}) => {\n\tconst { event } = action.payload;\n\t// if related target is sn-tb-field means event is happening inside it so don't go further\n\t// Reference https://developer.mozilla.org/en-US/docs/Web/API/Event/Comparison_of_Event_Targets\n\tif (host.isSameNode(event.relatedTarget)) return;\n\n\tswitch (event.key) {\n\t\tcase EVENT_KEY.ESC:\n\t\tcase EVENT_KEY.ESCAPE: {\n\t\t\tif (previousValue === value)\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__VALUE_UNCHANGED, {});\n\t\t\telse {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__VALUE_UNCHANGED, {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tisValid: true,\n\t\t\t\t\t\tvalue: previousValue,\n\t\t\t\t\t\tdisplayValue: previousDisplayValue,\n\t\t\t\t\t\tmessages: []\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tdispatch(\n\t\t\t\tGRID_NAV_ACTION_TYPES.GRID_NAVIGATION__RETAIN_CELL_FOCUS,\n\t\t\t\t{}\n\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tcase EVENT_KEY.ENTER: {\n\t\t\t// TODO: Use constant to store list of type values for which enter should be disabled\n\t\t\tif (event.shiftKey) return;\n\n\t\t\tconst { fieldName } = properties.fieldMeta;\n\t\t\tif (isComplexWidget(value, fieldName)) return;\n\n\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__FINISH_EDITING, {\n\t\t\t\tretainFocus: true\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\ttriggerValidate: { type: event.key }\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nconst handleClick = ({ action, host, dispatch, updateState }) => {\n\tconst { event, eventPath } = action.payload;\n\n\tconst panel = host.closest(POPOVER_PANEL_TAG);\n\tconst isHostInPath = eventPath.some(\n\t\telement =>\n\t\t\telement === host ||\n\t\t\telement === panel ||\n\t\t\tisNestedPanel(element, panel)\n\t);\n\tif (isHostInPath) return;\n\n\tdispatch(ACTION_TYPES.SN_TB_FIELD__FINISH_EDITING, {});\n\tdispatch(GRID_NAV_ACTION_TYPES.CLEAR_TRAP_CELL);\n\tupdateState({ triggerValidate: { type: event.key } });\n};\n\n// use for components who send value/displayValue\nconst fieldComponentValueChanged = ({ action, updateState }) => {\n\tconst {\n\t\tpayload: { value, displayValue }\n\t} = action;\n\n\tconst data = { value, displayValue };\n\tupdateStateWithoutRender(data, updateState);\n};\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: initializeState,\n\t[COMPONENT_BOOTSTRAPPED]: {\n\t\teffect: ({ host, action, dispatch }) => {\n\t\t\toverridePopoverEvents({ host, action, dispatch });\n\n\t\t\t// handle popover outside clicks\n\t\t\tconst id = action.meta.id;\n\t\t\tglobalClickListener.add(id, event => {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__OUTSIDE_CLICK, {\n\t\t\t\t\tevent,\n\t\t\t\t\teventPath: getEventPath(event)\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tmodifier: { name: 'debounce', delay: 50 }\n\t},\n\t[COMPONENT_DISCONNECTED]: ({ action }) => {\n\t\tconst id = action.meta.id;\n\t\tlayerEvents.remove(id);\n\t\tglobalClickListener.remove(id);\n\t},\n\t[COMPONENT_TREE_RENDERED]: ({ state, action, dispatch }) => {\n\t\tconst {\n\t\t\tmeta: { firstRenderOnConnect }\n\t\t} = action;\n\t\tconst { hasDependent, complexWidget } = state;\n\n\t\t// refit for only for dependent and complexWidget\n\t\tif (hasDependent || complexWidget) {\n\t\t\t// No need of refit during first render as popover wouldn't be ready yet\n\t\t\tif (!firstRenderOnConnect)\n\t\t\t\tdispatch(TB_GRID_ACTIONS.REFIT_EDIT_POPOVER);\n\t\t}\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({ action, properties, updateState }) => {\n\t\tconst {\n\t\t\tpayload: { name }\n\t\t} = action;\n\n\t\t// update state when 'value' property is changed\n\t\tif (name === VALUE) initializeState({ properties, updateState });\n\t},\n\t[ACTION_TYPES.SN_TB_FIELD__KEYDOWN]: onKeyDown,\n\t[ACTION_TYPES.SN_TB_FIELD__OUTSIDE_CLICK]: handleClick,\n\t[ACTION_TYPES.SN_TB_FIELD__FINISH_EDITING]: ({\n\t\tstate,\n\t\taction,\n\t\tdispatch,\n\t\tproperties\n\t}) => {\n\t\tconst {\n\t\t\tinvalid,\n\t\t\thasDependent,\n\t\t\tcomplexWidget,\n\t\t\tdependentValues,\n\t\t\tvalue,\n\t\t\tdisplayValue\n\t\t} = state;\n\t\tconst data = { value, displayValue };\n\t\tconst { value: oldValue, isValid, fieldMeta } = properties;\n\t\tconst { retainFocus = false } = action.payload;\n\t\tlet forceUpdate = false;\n\t\tconst batch = [];\n\t\tlet shouldRefreshTabbales = false;\n\n\t\t// inner components will set invalid this is client side validation\n\t\tif (invalid) {\n\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\t\t\tshouldBlock: true\n\t\t\t});\n\t\t\treturn;\n\t\t} else if (isValid) {\n\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\t\t\tshouldBlock: false\n\t\t\t});\n\t\t}\n\n\t\tif (hasDependent) {\n\t\t\tif (complexWidget) {\n\t\t\t\t// handling case to store choices in grid model\n\t\t\t\tdata.fieldMeta = dependentValues.choice.value;\n\t\t\t\tdata.fieldMeta.name =\n\t\t\t\t\tdependentValues.choice.name ||\n\t\t\t\t\tproperties.tableMetadata.name; // the name is table name and it should be record value, if not present (for new ones take from current table)\n\t\t\t\tdata.fieldMeta.element =\n\t\t\t\t\tproperties.fieldMeta.record.rowData.element.value;\n\t\t\t\tforceUpdate = true;\n\t\t\t} else {\n\t\t\t\tconst dependentUpdateBatch = createBatch(dependentValues);\n\t\t\t\tbatch.push(...dependentUpdateBatch);\n\t\t\t}\n\t\t}\n\n\t\t// special case: if user changes type from reference to any other value then clear reference column\n\t\tif (\n\t\t\toldValue === INTERNAL_TYPES.REFERENCE &&\n\t\t\tdata.value !== INTERNAL_TYPES.REFERENCE\n\t\t) {\n\t\t\tconst {\n\t\t\t\tfieldMeta: {\n\t\t\t\t\tcellIdentity: { rowIndex }\n\t\t\t\t}\n\t\t\t} = properties;\n\t\t\tconst { gridColumns } = properties;\n\t\t\t// for reference\n\t\t\tconst columnIndex = getColumnIndex(\n\t\t\t\tgridColumns,\n\t\t\t\tTABLE_COLUMNS.REFERENCE\n\t\t\t);\n\t\t\tconst cellIdentity = { rowIndex, columnIndex };\n\t\t\tconst clearReference = {\n\t\t\t\tdata: { value: '', displayValue: '' },\n\t\t\t\tcellIdentity\n\t\t\t};\n\n\t\t\t// update to batch\n\t\t\tbatch.push(clearReference);\n\n\t\t\t// don't clear if current value is string, because it has already max length\n\t\t\tif (data.value !== INTERNAL_TYPES.STRING) {\n\t\t\t\t// for max_length\n\t\t\t\tconst clearMaxlength = {\n\t\t\t\t\tdata: { value: '', displayValue: '' },\n\t\t\t\t\tcellIdentity: {\n\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\tcolumnIndex: getColumnIndex(\n\t\t\t\t\t\t\tgridColumns,\n\t\t\t\t\t\t\tTABLE_COLUMNS.MAX_LENGTH\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tbatch.push(clearMaxlength);\n\t\t\t}\n\t\t}\n\n\t\t// run batch updates, if any\n\t\tif (batch.length) {\n\t\t\tdispatch(\n\t\t\t\tGRID_MODEL_ACTION_TYPES.GRID_MODEL__UPDATE_CELL_MODEL_BATCH,\n\t\t\t\t{\n\t\t\t\t\tbatch,\n\t\t\t\t\tupdateTransactions: true\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tshouldRefreshTabbales = shouldUpdateTabbales(oldValue, data.value, {\n\t\t\tfieldMeta,\n\t\t\tdependentValues\n\t\t});\n\n\t\tif (shouldRefreshTabbales) {\n\t\t\tdispatch(GRID_NAV_ACTION_TYPES.GRID_NAVIGATION__UPDATE_TABBABLES);\n\t\t}\n\n\t\tif (oldValue != data.value || forceUpdate)\n\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__VALUE_CHANGED, { data });\n\t\telse if (isValid)\n\t\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__VALUE_UNCHANGED, {});\n\n\t\t// Retain focus to body cell on everything except outside click\n\t\tif (retainFocus)\n\t\t\tdispatch(\n\t\t\t\tGRID_NAV_ACTION_TYPES.GRID_NAVIGATION__RETAIN_CELL_FOCUS,\n\t\t\t\t{}\n\t\t\t);\n\n\t\t// NOTE: Don't dispatch anything further to the same component, parent won't listen because by the time they execute,\n\t\t// this component won't be there and seismic won't run effects\n\t},\n\t[ACTION_TYPES.SN_TB_FIELD__CLOSE_OFF]: {\n\t\teffect: ({ dispatch }) => {\n\t\t\tdispatch(() => {\n\t\t\t\treturn {\n\t\t\t\t\ttype: ACTION_TYPES.SN_TB_FIELD__FINISH_EDITING,\n\t\t\t\t\tpayload: {}\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tmodifier: { name: 'debounce', delay: 20 } // need some breathing space\n\t},\n\t[ACTION_TYPES.SN_TB_FIELD__SET_INVALID]: ({\n\t\tstate,\n\t\taction,\n\t\tupdateState,\n\t\tdispatch\n\t}) => {\n\t\tconst { value: invalid } = action.payload;\n\t\tconst { complexWidget } = state;\n\t\tupdateStateWithoutRender({ invalid }, updateState);\n\n\t\tif (invalid)\n\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS, {\n\t\t\t\tshouldBlock: true\n\t\t\t});\n\n\t\tif (complexWidget)\n\t\t\tupdateState({\n\t\t\t\tdisableFooter: invalid\n\t\t\t});\n\t},\n\t/**\n\t * sub component action catchers\n\t */\n\t[TB_REF_ACTIONS.SN_TB_REFERENCE__VALUE_SET]: fieldComponentValueChanged,\n\t[TB_TYPE_EDIT_ACTIONS.SN_TB_TYPE_EDIT__VALUES_SET]: ({\n\t\taction,\n\t\tupdateState\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { hasDependent, typeValue, dependentValues }\n\t\t} = action;\n\n\t\tif (hasDependent) {\n\t\t\tupdateStateWithoutRender(\n\t\t\t\t{ dependentValues, hasDependent },\n\t\t\t\tupdateState\n\t\t\t);\n\t\t}\n\n\t\tupdateStateWithoutRender(\n\t\t\t{\n\t\t\t\tvalue: typeValue.value,\n\t\t\t\tdisplayValue: typeValue.displayValue,\n\t\t\t\thasDependent\n\t\t\t},\n\t\t\tupdateState\n\t\t);\n\t},\n\t[TB_INPUT_ACTIONS.VALUE_SET]: fieldComponentValueChanged,\n\t[TB_SELECT_ACTIONS.VALUE_SET]: fieldComponentValueChanged,\n\t[ACTION_TYPES.INTERNAL_TYPE_CHANGED]: ({\n\t\taction,\n\t\tproperties,\n\t\tupdateState,\n\t\tdispatch\n\t}) => {\n\t\tconst { value } = action.payload;\n\t\tconst { fieldMeta } = properties;\n\t\tupdateState({\n\t\t\tcomplexWidget: isComplexWidget(value, fieldMeta.fieldName)\n\t\t});\n\n\t\tdispatch(TB_GRID_ACTIONS.REFIT_EDIT_POPOVER);\n\t},\n\t[ACTION_TYPES.FOOTER_PRIMARY_BUTTON_CLICKED]: ({ dispatch }) => {\n\t\tdispatch(ACTION_TYPES.SN_TB_FIELD__FINISH_EDITING, {\n\t\t\tretainFocus: true\n\t\t});\n\t},\n\t[TB_TEXTAREA_ACTIONS.VALUE_SET]: fieldComponentValueChanged\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\ncreateCustomElement('sn-tb-popover-content', {\n\trenderer: { type: snabbdom },\n\tview: () => <slot />\n});\n","import { t } from 'sn-translate';\nimport { TbIcon } from '../../partials/table-icon/view';\nimport {\n\tgetColumnHeaderMoreOptions,\n\tgetColumnHeaderMoreOptionsDateField\n} from './utils';\nimport '@servicenow/now-dropdown';\nimport {\n\tSORT_ORDERS,\n\tDEFAULT_SORT_ORDER,\n\tSORT_ORDER_DESC,\n\tSORT_ORDER_ASC,\n\tACTION_TYPES as GRID_MODEL_ACTIONS\n} from '../../behaviors/grid-model/constants';\nimport { EVENT_KEY, FIELD_TYPES } from '../../commons/constants';\nimport { ACTION_TYPES as GRID_NAV_ACTIONS } from '../../behaviors/grid-navigation';\nimport { resolveInfoForTypes } from '../../commons/utils';\nimport { MANDATORY_FIELDS } from '../../behaviors/table-save/constants';\n\nconst renderSortIndicator = (isSorted, sortOrder) => {\n\tif (!isSorted) return null;\n\treturn (\n\t\t<now-icon\n\t\t\tclassName='sort-icon'\n\t\t\ticon={\n\t\t\t\tsortOrder === SORT_ORDER_DESC\n\t\t\t\t\t? 'caret-down-outline'\n\t\t\t\t\t: 'caret-up-outline'\n\t\t\t}\n\t\t\tsize='md'\n\t\t/>\n\t);\n};\n\nconst renderMandatoryIndicator = name => {\n\tif (MANDATORY_FIELDS.includes(name))\n\t\treturn (\n\t\t\t<now-icon className='-mandatory' icon='asterisk-fill' size='sm' />\n\t\t);\n\treturn null;\n};\n\n/**\n * @param {Object} context\n * @param {Object} context.props\n * @param {Function} context.dispatch\n * @param {Object} context.columnDef\n * @param {Array} context.columnDefs\n * @returns {Object} returns JSX markup for header\n */\nexport const GridHeaderCell = context => {\n\tconst { columnDef, dispatch } = context;\n\tconst {\n\t\tname: column,\n\t\tisSorted,\n\t\tsortOrder,\n\t\tinternalType,\n\t\tprimitiveType\n\t} = columnDef;\n\tconst { icon, image } = resolveInfoForTypes(internalType, primitiveType);\n\tconst sortName = SORT_ORDERS[sortOrder];\n\n\tif (columnDef.primitiveType.startsWith('_control_'))\n\t\treturn (\n\t\t\t<th\n\t\t\t\ttabindex='-1'\n\t\t\t\tstyle={columnDef.styles}\n\t\t\t\tclassName='control-header-cell'\n\t\t\t/>\n\t\t);\n\n\tconst nextSortOrder = isSorted\n\t\t? sortOrder === SORT_ORDER_DESC\n\t\t\t? SORT_ORDER_ASC\n\t\t\t: SORT_ORDER_DESC\n\t\t: DEFAULT_SORT_ORDER;\n\n\tconst doUpdateGridSort = () => {\n\t\tdispatch(GRID_MODEL_ACTIONS.GRID_MODEL__GRID_UPDATE_SORT, {\n\t\t\tcolumn,\n\t\t\tdirection: nextSortOrder\n\t\t});\n\t};\n\n\tlet sortChoices;\n\tif (columnDef.internalType === FIELD_TYPES.DATE_TIME) {\n\t\tsortChoices = getColumnHeaderMoreOptionsDateField();\n\t} else sortChoices = getColumnHeaderMoreOptions();\n\n\treturn (\n\t\t<th aria-sort={isSorted ? sortName : 'none'} tabindex='-1'>\n\t\t\t<div className='tb-grid-header-cell'>\n\t\t\t\t<div\n\t\t\t\t\trole='button'\n\t\t\t\t\tclassName='content-wrap tabbable'\n\t\t\t\t\ttitle={isSorted ? t('Sorted in {0} order', sortName) : null}\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tdoUpdateGridSort();\n\t\t\t\t\t}}\n\t\t\t\t\ton-keydown={e => {\n\t\t\t\t\t\tif (e.key === EVENT_KEY.ENTER) doUpdateGridSort();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TbIcon ndsIcon={icon} image={image} />\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass={{\n\t\t\t\t\t\t\t'tb-grid-header-title': true,\n\t\t\t\t\t\t\t'is-mandatory': MANDATORY_FIELDS.includes(\n\t\t\t\t\t\t\t\tcolumnDef.name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className='tb-grid-cell-value -truncated'>\n\t\t\t\t\t\t\t{columnDef.label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{renderMandatoryIndicator(columnDef.name)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{renderSortIndicator(isSorted, sortOrder)}\n\t\t\t\t</div>\n\t\t\t\t<now-dropdown\n\t\t\t\t\tclassName='cell-more-options tabbable'\n\t\t\t\t\ton-focus={e =>\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tGRID_NAV_ACTIONS.GRID_NAVIGATION__TRAP_CELL_WIDGET,\n\t\t\t\t\t\t\t{ elm: e.target }\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\ton-blur={() =>\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tGRID_NAV_ACTIONS.GRID_NAVIGATION__TRAP_CELL_WIDGET\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\titems={sortChoices}\n\t\t\t\t\tselectedItems={[]}\n\t\t\t\t\ticon='ellipsis-v-outline'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tvariant='secondary'\n\t\t\t\t\tbare\n\t\t\t\t\tselect='none'\n\t\t\t\t\thideCaret={true}\n\t\t\t\t\thideLabel={true}\n\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\ttrigger: { 'aria-label': t('More options') }\n\t\t\t\t\t}}\n\t\t\t\t\tappend-to-payload={{ column, currentSortOrder: sortOrder }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</th>\n\t);\n};\n","import { t } from 'sn-translate';\nimport {\n\tSORT_ASC_ID,\n\tSORT_DESC_ID\n} from '../../behaviors/grid-model/constants';\n\nexport const getColumnHeaderMoreOptions = () => [\n\t{\n\t\tid: SORT_ASC_ID,\n\t\tlabel: t('Sort A to Z')\n\t},\n\t{\n\t\tid: SORT_DESC_ID,\n\t\tlabel: t('Sort Z to A')\n\t}\n];\n\nexport const getColumnHeaderMoreOptionsDateField = () => [\n\t{\n\t\tid: SORT_ASC_ID,\n\t\tlabel: t('Sort Oldest to Newest')\n\t},\n\t{\n\t\tid: SORT_DESC_ID,\n\t\tlabel: t('Sort Newest to Oldest')\n\t}\n];\n","import { BEHAVIOR_NAME } from './constants';\nimport { eventHandlers } from './events';\nimport { actionHandlers } from './actions';\nimport { TB_PROVIDER_PROPERTIES } from '../../components/sn-tb-provider/constants';\nimport { NEW_ROW_ADDED, ROW_DELETED } from '../../behaviors/grid-model';\n\nexport const gridNavigation = {\n\tname: BEHAVIOR_NAME,\n\tinitialState: {\n\t\tcurrentFocus: {\n\t\t\trow: 0,\n\t\t\tcell: 0,\n\t\t\tnode: undefined\n\t\t},\n\t\tgrid: { rows: [] },\n\t\ttrapCell: undefined,\n\t\ttrapCellWidget: undefined,\n\t\tfocusInInteractiveWidget: false,\n\t\tfocusRetainerElm: false\n\t},\n\tproperties: {\n\t\t[NEW_ROW_ADDED]: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.newRowAdded\n\t\t},\n\t\t[ROW_DELETED]: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.rowDeleted\n\t\t}\n\t},\n\teventHandlers,\n\tactionHandlers\n};\n","import { EVENT_KEY } from '../../commons/constants';\nimport {\n\tgetState,\n\tgetCellFromGrid,\n\tsetNewFocus,\n\tsetTrapCell,\n\tremoveTabIndex,\n\tgetTableCellFromEvent,\n\tremoveRowFocusClass,\n\taddRowFocusClass,\n\tgetNodePosition\n} from './utils';\nimport { findActiveElement } from './focusUtility';\nimport { ACTION_TYPES, ELEMENT_LIST_TO_KEEP_ROW_FOCUS } from './constants';\nimport { getEventPath } from '../../commons/utils';\n\nconst {\n\tGRID_NAVIGATION__MOVE_FOCUS,\n\tGRID_NAVIGATION__FOCUS_ENTER_CELL,\n\tGRID_NAVIGATION__FOCUS_EXIT_CELL\n} = ACTION_TYPES;\n\nexport const doDispatchMoveFocus = (dispatch, key) =>\n\tdispatch(GRID_NAVIGATION__MOVE_FOCUS, { key });\n\nexport const keydownHandler = ({ action, state, dispatch }) => {\n\tconst { event } = action.payload;\n\tconst { trapCell, grid, currentFocus, focusInInteractiveWidget } = getState(\n\t\tstate\n\t);\n\tif (focusInInteractiveWidget) return;\n\tconst cell = getCellFromGrid({ grid, currentFocus });\n\tlet preventDefault = true;\n\n\tswitch (event.key) {\n\t\tcase EVENT_KEY.ARROW_UP:\n\t\tcase EVENT_KEY.ARROW_DOWN:\n\t\tcase EVENT_KEY.ARROW_LEFT:\n\t\tcase EVENT_KEY.ARROW_RIGHT:\n\t\tcase EVENT_KEY.HOME:\n\t\tcase EVENT_KEY.END:\n\t\tcase EVENT_KEY.PAGE_UP:\n\t\tcase EVENT_KEY.PAGE_DOWN:\n\t\t\tif (!trapCell) doDispatchMoveFocus(dispatch, event.key);\n\t\t\tbreak;\n\t\tcase EVENT_KEY.SPACE:\n\t\tcase EVENT_KEY.ENTER:\n\t\t\tif (!trapCell && cell.node === currentFocus.node) {\n\t\t\t\tdispatch(GRID_NAVIGATION__FOCUS_ENTER_CELL);\n\t\t\t\tif (\n\t\t\t\t\tcell.cellNode &&\n\t\t\t\t\tcell.cellNode.querySelector('.-direct-interactable')\n\t\t\t\t)\n\t\t\t\t\tpreventDefault = false;\n\t\t\t} else preventDefault = false;\n\t\t\tbreak;\n\t\tcase EVENT_KEY.ESC:\n\t\tcase EVENT_KEY.ESCAPE:\n\t\t\tif (trapCell) dispatch(GRID_NAVIGATION__FOCUS_EXIT_CELL);\n\t\t\telse preventDefault = false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tpreventDefault = false;\n\t\t\tbreak;\n\t}\n\n\tif (preventDefault) event.preventDefault();\n\tevent.stopPropagation();\n};\n\nexport const clickHandler = ({ action, state, updateState }) => {\n\tconst { event } = action.payload;\n\tconst path = getEventPath(event);\n\tconst node = getTableCellFromEvent(event);\n\n\tif (!node) return;\n\n\tconst { row, cell } = getNodePosition(node);\n\n\tconst { currentFocus } = getState(state);\n\tconst newFocus = { row, cell, node };\n\tconst { grid } = getState(state);\n\n\t// code to operate direct interactable widget on cell click\n\tif (node.querySelector('.-direct-interactable')) {\n\t\tconst cellObj = getCellFromGrid({ grid, currentFocus: newFocus });\n\t\tif (cellObj && cellObj.node !== path[0]) {\n\t\t\tcellObj.node.focus();\n\t\t\tcellObj.node.click();\n\t\t}\n\t}\n\n\tconst shouldFocus = node === findActiveElement();\n\tsetNewFocus({ grid, currentFocus, newFocus, updateState, shouldFocus });\n\n\t// if new td/th cell got focused, then clear trapCell\n\tif (shouldFocus) setTrapCell(updateState, undefined);\n};\n\nexport const focusOutHandler = ({ action, state, updateState }) => {\n\t// if focus out from grid, then remove previous tabIndex\n\tconst {\n\t\tevent: { relatedTarget }\n\t} = action.payload;\n\n\t// remove 'is-focus' from row on focus out from grid\n\tif (\n\t\t!relatedTarget ||\n\t\t!ELEMENT_LIST_TO_KEEP_ROW_FOCUS.includes(relatedTarget.tagName)\n\t) {\n\t\tconst { grid, currentFocus } = getState(state);\n\t\tremoveRowFocusClass(grid, currentFocus.row);\n\t}\n\n\t/**\n\t * Focusout will trigger when column more options dropdown. In this case we should keep tabIndex in that cell.\n\t * In this case, relatedTarget is seismic-hoist. Seismic-hoist will have sourceElement.\n\t */\n\tif (\n\t\trelatedTarget &&\n\t\trelatedTarget.sourceElement &&\n\t\trelatedTarget.sourceElement.tagName.toLowerCase() ===\n\t\t\t'now-dropdown-list'\n\t)\n\t\treturn;\n\n\tremoveTabIndex(state, updateState);\n};\n\nexport const focusHandler = ({ state }) => {\n\t// when focus enters into grid and if the focused elemenet is direct interactable, do focus on it instead of table cell\n\tconst { grid, currentFocus } = getState(state);\n\tconst { cellNode, node } = getCellFromGrid({ grid, currentFocus });\n\n\taddRowFocusClass(grid, currentFocus.row);\n\n\tif (cellNode && cellNode.querySelector('.-direct-interactable')) {\n\t\tnode.focus();\n\n\t\t// In safari, sometimes node is not getting focused.\n\t\tsetTimeout(() => node.focus());\n\t}\n};\n\nexport const eventHandlers = [\n\t{\n\t\tevents: ['keydown'],\n\t\teffect: keydownHandler\n\t},\n\t{\n\t\tevents: ['click'],\n\t\teffect: clickHandler\n\t},\n\t{\n\t\tevents: ['focusout'],\n\t\teffect: focusOutHandler\n\t},\n\t{\n\t\tevents: ['focus'],\n\t\teffect: focusHandler\n\t}\n];\n","import { actionTypes } from '@servicenow/ui-core';\nimport { BEHAVIOR_NAME, ACTION_TYPES } from './constants';\nimport { updateStateWithoutRender, getEventPath } from '../../commons/utils';\nimport {\n\tgetState,\n\tgetCellFromGrid,\n\tsetNewFocus,\n\tsetTrapCell,\n\tgetTableCellFromEvent,\n\trefreshNavTabbables,\n\tremoveTabIndex,\n\tgenerateTabbables,\n\tgetNodePosition\n} from './utils';\nimport {\n\tactivateFocusTrap,\n\tdeactivateFocusTrap,\n\telementHasActiveElement,\n\tTRAP_CELL_WIDGET_TAGS\n} from './focusUtility';\nimport { EVENT_KEY } from '../../commons/constants';\nimport {\n\tACTION_TYPES as GRID_MODEL_ACTIONS,\n\tNEW_ROW_ADDED,\n\tROW_DELETED\n} from '../../behaviors/grid-model';\n\nconst { COMPONENT_DOM_READY, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nconst updateTabbables = ({ dispatch, updateState, host }) => {\n\tconst gridTabbables = generateTabbables(host);\n\tif (!gridTabbables) return;\n\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.grid`]: gridTabbables\n\t\t},\n\t\tupdateState\n\t);\n\n\tdispatch(ACTION_TYPES.GRID_NAVIGATION__ALLOW_CURRENT_TABBABLE);\n};\n\nconst allowCurrentTabbable = ({ action, state, updateState }) => {\n\tconst { grid, currentFocus } = getState(state);\n\tconst {\n\t\tpayload: { index = 0 }\n\t} = action;\n\tconst focusCell = getCellFromGrid({ grid, currentFocus });\n\n\tconst focusNode = focusCell && focusCell.node;\n\tif (!focusNode) return;\n\n\tfocusNode.tabIndex = index;\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.currentFocus`]: {\n\t\t\t\t...currentFocus,\n\t\t\t\tnode: focusNode\n\t\t\t}\n\t\t},\n\t\tupdateState\n\t);\n};\n\nconst moveFocus = ({ action, state, updateState }) => {\n\tconst localState = getState(state);\n\tconst { grid, currentFocus, trapCellWidget } = localState;\n\tconst { key } = action.payload;\n\tconst newFocus = { ...currentFocus };\n\n\tswitch (key) {\n\t\tcase EVENT_KEY.ARROW_UP:\n\t\tcase EVENT_KEY.ARROW_DOWN: {\n\t\t\tif (\n\t\t\t\ttrapCellWidget &&\n\t\t\t\tTRAP_CELL_WIDGET_TAGS.includes(trapCellWidget.tagName)\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tconst newRowFocus =\n\t\t\t\tkey === EVENT_KEY.ARROW_DOWN\n\t\t\t\t\t? currentFocus.row + 1\n\t\t\t\t\t: currentFocus.row - 1;\n\t\t\tif (newRowFocus < 0 || newRowFocus > grid.rows.length - 1) return; // movement out of bounds\n\n\t\t\tnewFocus.row = newRowFocus;\n\t\t\tbreak;\n\t\t}\n\t\tcase EVENT_KEY.ARROW_LEFT:\n\t\tcase EVENT_KEY.ARROW_RIGHT: {\n\t\t\tconst newCellFocus =\n\t\t\t\tkey === EVENT_KEY.ARROW_RIGHT\n\t\t\t\t\t? currentFocus.cell + 1\n\t\t\t\t\t: currentFocus.cell - 1;\n\t\t\tif (\n\t\t\t\tnewCellFocus < 0 ||\n\t\t\t\tnewCellFocus > grid.rows[currentFocus.row].cells.length - 1\n\t\t\t)\n\t\t\t\treturn; // movement out of bounds\n\n\t\t\tnewFocus.cell = newCellFocus;\n\t\t\tbreak;\n\t\t}\n\t\tcase EVENT_KEY.PAGE_UP: {\n\t\t\tnewFocus.row = 0;\n\t\t\tbreak;\n\t\t}\n\t\tcase EVENT_KEY.PAGE_DOWN: {\n\t\t\tnewFocus.row = grid.rows.length - 1;\n\t\t\tbreak;\n\t\t}\n\t\tcase EVENT_KEY.HOME: {\n\t\t\tnewFocus.cell = 0;\n\t\t\tbreak;\n\t\t}\n\t\tcase EVENT_KEY.END: {\n\t\t\tnewFocus.cell = grid.rows[currentFocus.row].cells.length - 1;\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\treturn;\n\t}\n\n\t// Set tabIndex to current cell node (when focus moves to direct interactable widget)\n\tconst newCell = getCellFromGrid({ grid, currentFocus: newFocus });\n\tif (newCell.cellNode) newCell.cellNode.tabIndex = 0;\n\n\tnewFocus.node = newCell.node;\n\tif (!currentFocus.node) currentFocus.node = newCell.node;\n\n\tsetNewFocus({ grid, currentFocus, newFocus, updateState });\n};\n\nconst focusEnterCell = ({ state, updateState }) => {\n\tconst { grid, currentFocus } = getState(state);\n\tconst cell = getCellFromGrid({ grid, currentFocus });\n\n\tif (!cell.tabbables || !cell.tabbables.length) return;\n\n\t// manual focus inside cell\n\tcell.tabbables[0].focus();\n\n\tif (cell.tabbables.length === 1) {\n\t\tcell.tabbables[0].click();\n\t\tsetTrapCell(updateState, cell);\n\t\treturn;\n\t}\n\n\tcell.node.classList.add('active');\n\tcell.tabbables.forEach(node => {\n\t\tif (!node.shadowRoot) {\n\t\t\tnode.tabIndex = 0;\n\t\t} else node.removeAttribute('tabIndex');\n\t});\n\n\t// for circular focus rotation on Tab and Shift+Tab pressed\n\tactivateFocusTrap('gridCell', cell.node, {\n\t\tfirstElement: cell.tabbables[0],\n\t\tlastElement: cell.tabbables[cell.tabbables.length - 1]\n\t});\n\n\tsetTrapCell(updateState, cell);\n};\n\nconst focusExitCell = ({ state, updateState }) => {\n\tconst { grid, currentFocus } = getState(state);\n\tconst cell = getCellFromGrid({ grid, currentFocus });\n\n\tif (!cell.tabbables || !cell.tabbables.length) return;\n\n\tcell.node.classList.remove('active');\n\tcell.tabbables.forEach(node => (node.tabIndex = -1));\n\n\tdeactivateFocusTrap('gridCell');\n\n\t// Re-focus to cell\n\tcell.node.focus();\n\n\tsetTrapCell(updateState, undefined);\n};\n\nconst retainCellFocus = ({ state, updateState, dispatch }) => {\n\tconst {\n\t\tcurrentFocus: { node }\n\t} = state.behaviors[BEHAVIOR_NAME];\n\tsetTrapCell(updateState, undefined);\n\tdispatch(GRID_MODEL_ACTIONS.GRID_MODEL__SET_FOCUS_RETAINABLE_CELL, {\n\t\tnode\n\t});\n};\n\nconst interactableWidgetOpened = ({ state, updateState, action }) => {\n\tconst { value } = action.payload;\n\tconst { event } = action.meta;\n\tconst path = getEventPath(event);\n\tconst node = getTableCellFromEvent(event);\n\tlet focusRetainerElm = path[0];\n\tlet focusInInteractiveWidget = false;\n\n\tif (value) {\n\t\t// disable grid navigation when dropdown panel is opened\n\t\tfocusInInteractiveWidget = true;\n\n\t\t// to foucs back to dropdown trigger button when dropdown panel is closed on escape press\n\t\tfocusRetainerElm = path[0];\n\n\t\t// when dropdown panel is opened, this class will make more options button visible\n\t\tnode.classList.add('-focus-within');\n\t} else {\n\t\tconst { focusRetainerElm } = getState(state);\n\t\tif (focusRetainerElm) focusRetainerElm.focus();\n\t\tnode.classList.remove('-focus-within');\n\t}\n\n\tupdateStateWithoutRender(\n\t\t{\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.focusInInteractiveWidget`]: focusInInteractiveWidget,\n\t\t\t[`behaviors.${BEHAVIOR_NAME}.focusRetainerElm`]: focusRetainerElm\n\t\t},\n\t\tupdateState\n\t);\n};\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: ({ dispatch }) => {\n\t\tdispatch(ACTION_TYPES.GRID_NAVIGATION__UPDATE_TABBABLES);\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\thost,\n\t\tstate,\n\t\taction,\n\t\tupdateState,\n\t\tdispatch\n\t}) => {\n\t\tconst {\n\t\t\tname: propertyName,\n\t\t\tvalue: { cellIdentity }\n\t\t} = action.payload;\n\n\t\tconst { grid, currentFocus, trapCellWidget } = getState(state);\n\t\t// TODO: Find out proper propertyName to update tabbables when grid is refreshed. For now 'columns' property will work.\n\t\tif (propertyName === 'columns') {\n\t\t\t// if grid has any active element, then make the respective header cell focusable after grid refresh\n\t\t\t// Otherwise keep active element outside of grid as it is\n\t\t\tconst isFocusInsideGrid = elementHasActiveElement(host);\n\t\t\tif (isFocusInsideGrid) {\n\t\t\t\tlet newFocus = currentFocus;\n\t\t\t\tif (trapCellWidget) {\n\t\t\t\t\tconst node = trapCellWidget.closest('td,th');\n\t\t\t\t\tnewFocus = getNodePosition(node);\n\t\t\t\t}\n\n\t\t\t\trefreshNavTabbables({\n\t\t\t\t\tgrid,\n\t\t\t\t\tcurrentFocus,\n\t\t\t\t\tupdateState,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tnewFocus\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trefreshNavTabbables({\n\t\t\t\t\tgrid,\n\t\t\t\t\tcurrentFocus,\n\t\t\t\t\tupdateState,\n\t\t\t\t\tdispatch\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetTrapCell(updateState, undefined);\n\t\t} else if (propertyName === NEW_ROW_ADDED) {\n\t\t\tdispatch(ACTION_TYPES.GRID_NAVIGATION__UPDATE_TABBABLES);\n\t\t\tdispatch(ACTION_TYPES.GRID_NAVIGATION__FOCUS_NEW_RECORD, {\n\t\t\t\tcellIdentity\n\t\t\t});\n\t\t} else if (propertyName === ROW_DELETED) {\n\t\t\trefreshNavTabbables({\n\t\t\t\tgrid,\n\t\t\t\tcurrentFocus,\n\t\t\t\tupdateState,\n\t\t\t\tdispatch,\n\t\t\t\tnewFocus: { row: 0, cell: 0 }\n\t\t\t});\n\t\t}\n\t},\n\t[ACTION_TYPES.NOW_DROPDOWN__OPENED_SET]: interactableWidgetOpened,\n\t[ACTION_TYPES.GRID_NAVIGATION__TRAP_CELL_WIDGET]: ({\n\t\taction,\n\t\tupdateState\n\t}) => {\n\t\tconst { elm } = action.payload;\n\t\tupdateStateWithoutRender(\n\t\t\t{\n\t\t\t\t[`behaviors.${BEHAVIOR_NAME}.trapCellWidget`]: elm\n\t\t\t},\n\t\t\tupdateState\n\t\t);\n\t},\n\t[ACTION_TYPES.GRID_NAVIGATION__UPDATE_TABBABLES]: {\n\t\teffect: updateTabbables,\n\t\t// Inorder to get child components during calculating tabbables, we should wait for child components to render\n\t\tmodifier: { name: 'debounce', delay: 500 }\n\t},\n\t[ACTION_TYPES.GRID_NAVIGATION__ALLOW_CURRENT_TABBABLE]: allowCurrentTabbable,\n\t[ACTION_TYPES.GRID_NAVIGATION__MOVE_FOCUS]: moveFocus,\n\t[ACTION_TYPES.GRID_NAVIGATION__FOCUS_ENTER_CELL]: focusEnterCell,\n\t[ACTION_TYPES.GRID_NAVIGATION__FOCUS_EXIT_CELL]: focusExitCell,\n\t[ACTION_TYPES.GRID_NAVIGATION__RETAIN_CELL_FOCUS]: retainCellFocus,\n\t[ACTION_TYPES.GRID_NAVIGATION__FOCUS_NEW_RECORD]: ({ host, action }) => {\n\t\tconst { cellIdentity } = action.payload;\n\t\tconst newRowStart = host.shadowRoot.querySelector(\n\t\t\t`.table-scroll>table>tbody>tr:nth-child(${\n\t\t\t\tcellIdentity.rowIndex\n\t\t\t})>td:nth-child(${cellIdentity.columnIndex + 1})`\n\t\t);\n\t\tnewRowStart.scrollIntoView();\n\t\tnewRowStart.querySelector('.tabbable').click();\n\t},\n\t[ACTION_TYPES.CLEAR_TRAP_CELL]: ({ state, updateState }) => {\n\t\tremoveTabIndex(state, updateState);\n\t}\n};\n","import '@servicenow/now-pagination-control';\n\nexport const PaginationControl = ({\n\ttotal,\n\tselectedPageSize,\n\tselectedPage,\n\tpageSizes\n}) => {\n\tconst paginationProperties = {\n\t\ttotal,\n\t\tselectedPageSize,\n\t\tselectedPage,\n\t\tpageSizes\n\t};\n\treturn <now-pagination-control {...paginationProperties} />;\n};\n","module.exports = __TECTONIC__$servicenow_now_pagination_control;","import './sn-tb-grid';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles/main.scss';\nimport { BORDER_RADIUS_CORNERS } from '../../commons/constants';\nimport gridNavigation from '../../behaviors/grid-navigation';\nimport { actionHandlers } from './actions';\n\n/**\n * A base grid component which will render given rows and columns.\n * It also supports dynamic content such that consumers can provide their own markup to render in header and body cells.\n *\n * ```\n * <sn-tb-grid data={data} columns={columns} />\n * ```\n *\n * @seismicElement sn-tb-grid\n * @summary A base grid component which will render given rows and columns\n */\ncreateCustomElement('sn-tb-grid', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tview,\n\tinitialState: {\n\t\teditPopover: null\n\t},\n\tproperties: {\n\t\tcolumns: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array'\n\t\t\t},\n\t\t\tdefault: []\n\t\t},\n\t\tdata: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array'\n\t\t\t},\n\t\t\tdefault: []\n\t\t},\n\t\tcontent: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object'\n\t\t\t}\n\t\t},\n\t\tariaTitle: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tborderRadius: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: BORDER_RADIUS_CORNERS\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: []\n\t\t}\n\t},\n\tbehaviors: [gridNavigation],\n\tactionHandlers,\n\tstyles\n});\n","import { getValue, getCellContent } from './utils';\nimport { getBorderRadiusClasses } from '../../commons/utils';\nimport { MANDATORY_FIELDS } from '../../behaviors/table-save/constants';\n\nconst renderMandatoryIndicator = name => {\n\tif (MANDATORY_FIELDS.includes(name))\n\t\treturn <now-icon icon='asterisk-fill' size='sm' />;\n\treturn null;\n};\n\n// default header cell\nconst headerCell = context => {\n\tconst { columnDef } = context;\n\treturn (\n\t\t<th aria-sort='none' tabindex='-1'>\n\t\t\t<div className='tb-grid-header-cell'>\n\t\t\t\t<div className='content-wrap tabbable'>\n\t\t\t\t\t<div className='tb-grid-cell-value -truncated'>\n\t\t\t\t\t\t{columnDef.label}\n\t\t\t\t\t\t{renderMandatoryIndicator(columnDef.name)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</th>\n\t);\n};\n\n// default body cell\nconst bodyCell = context => {\n\tconst { columnDef } = context;\n\treturn (\n\t\t<td\n\t\t\tstyle={{\n\t\t\t\ttextAlign: columnDef.textAlign\n\t\t\t}}\n\t\t\ttabindex='-1'\n\t\t>\n\t\t\t<div className='tb-grid-cell-value'>{getCellContent(context)}</div>\n\t\t</td>\n\t);\n};\n\nconst renderHeader = (columns, content, headerContext) => {\n\treturn (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{columns.map(columnDef => {\n\t\t\t\t\tif (columnDef.hidden) return undefined;\n\t\t\t\t\treturn getValue(content.th, {\n\t\t\t\t\t\t...headerContext,\n\t\t\t\t\t\tcolumnDef\n\t\t\t\t\t});\n\t\t\t\t})}\n\t\t\t</tr>\n\t\t</thead>\n\t);\n};\n\nconst renderBody = (data, columns, content, cellContext) => {\n\treturn (\n\t\t<tbody>\n\t\t\t{data.map((entry, rowIndex) => (\n\t\t\t\t<tr>\n\t\t\t\t\t{columns.map((columnDef, columnIndex) => {\n\t\t\t\t\t\tif (columnDef.hidden) return undefined;\n\n\t\t\t\t\t\treturn getValue(content.td, {\n\t\t\t\t\t\t\t...cellContext,\n\t\t\t\t\t\t\tentry,\n\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\tcolumnDef\n\t\t\t\t\t\t});\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t))}\n\t\t</tbody>\n\t);\n};\n\nexport default (state, { dispatch }) => {\n\tconst { properties: props } = state;\n\tconst { data, columns } = props;\n\n\t// Define content defaults, and merge with parent overrides\n\tconst content = {\n\t\tth: headerCell,\n\t\ttd: bodyCell,\n\t\t...props.content\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclass={{\n\t\t\t\t'sn-tb-grid': true,\n\t\t\t\t...getBorderRadiusClasses(props.borderRadius)\n\t\t\t}}\n\t\t>\n\t\t\t<div className='table-scroll'>\n\t\t\t\t<table\n\t\t\t\t\tclassName='base-grid'\n\t\t\t\t\trole='grid'\n\t\t\t\t\taria-label={props.ariaTitle}\n\t\t\t\t>\n\t\t\t\t\t{renderHeader(columns, content, {\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tcolumnDefs: columns\n\t\t\t\t\t})}\n\t\t\t\t\t{renderBody(data, columns, content, {\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tcolumnDefs: columns\n\t\t\t\t\t})}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { isFunction } from '../../commons/utils';\n\nexport const getValue = (fnOrValue, context = {}) => {\n\tif (!fnOrValue) return;\n\n\tif (isFunction(fnOrValue)) return fnOrValue(context);\n\treturn fnOrValue;\n};\n\nexport const getCellContent = context => {\n\tconst { columnDef, entry } = context;\n\n\tif (columnDef.accessor && isFunction(columnDef.accessor))\n\t\treturn columnDef.accessor(entry, columnDef);\n\n\treturn entry[columnDef.field];\n};\n","\n        var result = require(\"!!../../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./main.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tb-grid-header-cell{padding-inline-start:.5rem;padding-inline-end:.5rem;padding-block-start:.25rem;padding-block-end:.25rem;display:flex;align-items:center}.tb-grid-header-cell .content-wrap{padding-block-start:.5rem;padding-block-end:.5rem;display:flex;align-items:center;flex:1 1 0;-webkit-user-select:none;-moz-user-select:none;user-select:none;min-width:1rem}.tb-grid-header-cell .content-wrap::-moz-focus-inner{border-style:none}.tb-grid-header-cell .content-wrap:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25);outline:none}.tb-grid-header-cell .content-wrap .cell-icon{margin-inline-end:.5rem}.tb-grid-header-cell .content-wrap:focus~.cell-more-options{visibility:visible}.tb-grid-header-cell .cell-more-options{visibility:hidden}.tb-grid-header-cell .delete-control{display:none}.tb-grid-header-cell .tb-grid-cell-value{font-size:.75rem;color:RGB(var(--now-color--neutral-15,44,53,55));flex:1}.tb-grid-header-cell .tb-grid-cell-value.-truncated{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tb-grid-header-cell .tabbable{cursor:pointer}.tb-grid-header-cell .tb-grid-header-title{display:flex;flex:1;overflow:hidden;margin-inline-end:.25rem}.tb-grid-header-cell .tb-grid-header-title .tb-grid-cell-value{max-width:100%;flex:none}.tb-grid-header-cell .tb-grid-header-title.is-mandatory .tb-grid-cell-value{max-width:calc(100% - 1rem);margin-inline-end:.25rem}.tb-grid-header-cell .tb-grid-header-title .-mandatory{align-self:center}.tb-grid-header-cell .sort-icon{margin-inline-start:.5rem}.tb-grid-header-cell .content-wrap>:last-child{margin:0}:host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.tb-grid-cell{padding-inline-start:.5rem;padding-inline-end:.5rem;padding-block-start:.25rem;padding-block-end:.25rem;display:flex;align-items:center}.tb-grid-cell .content-wrap{padding-block-start:.5rem;padding-block-end:.5rem;display:flex;align-items:center;flex:1 1 0;-webkit-user-select:none;-moz-user-select:none;user-select:none;min-width:1rem}.tb-grid-cell .content-wrap::-moz-focus-inner{border-style:none}.tb-grid-cell .content-wrap:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25);outline:none}.tb-grid-cell .content-wrap .cell-icon{margin-inline-end:.5rem}.tb-grid-cell .content-wrap:focus~.cell-more-options{visibility:visible}.tb-grid-cell .cell-more-options{visibility:hidden}.tb-grid-cell .delete-control{display:none}.tb-grid-cell .tb-grid-cell-value{font-size:.75rem;color:RGB(var(--now-color--neutral-15,44,53,55));flex:1}.tb-grid-cell .tb-grid-cell-value.-truncated{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tb-grid-cell .tabbable{cursor:pointer}.tb-grid-cell .tb-grid-cell-value{color:RGB(var(--now-color--neutral-12,66,80,81))}.tb-grid-cell .content-wrap{height:2rem}.tb-grid-cell .content-wrap .additional-info{margin-inline-start:.5rem}.tb-grid-cell .content-wrap.tabbable{outline:none}.tb-grid-cell .-reference-opener{margin-bottom:.25rem}.hasError{border:1px solid red}.cell-icon{font-size:0}img{width:1rem;height:1rem}.sn-tb-grid{display:flex;overflow:hidden;width:100%;position:relative;border:1px solid RGB(var(--now-color--neutral-5,172,180,181))}.sn-tb-grid.-radius-top-left{border-top-left-radius:.5rem;-webkit-border-top-left-radius:.5rem;-moz-border-radius-topleft:.5rem}.sn-tb-grid.-radius-top-right{border-top-right-radius:.5rem;-webkit-border-top-right-radius:.5rem;-moz-border-radius-topright:.5rem}.sn-tb-grid.-radius-bottom-left{border-bottom-left-radius:.5rem;-webkit-border-bottom-left-radius:.5rem;-moz-border-radius-bottomleft:.5rem}.sn-tb-grid.-radius-bottom-right{border-bottom-right-radius:.5rem;-webkit-border-bottom-right-radius:.5rem;-moz-border-radius-bottomright:.5rem}.table-scroll{overflow-x:auto;overflow-y:auto;flex:1}.base-grid{border-collapse:separate;border-spacing:0;position:relative;width:100%;color:var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28));font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif);line-height:1.25}.base-grid th{max-width:11.5rem;min-width:9.375rem;text-align:left;white-space:nowrap;vertical-align:bottom;position:sticky;top:0;background-color:RGB(var(--now-color--neutral-0,255,255,255));z-index:1;border-bottom:1px solid RGB(var(--now-color--neutral-1,246,247,247));padding:0}.base-grid th::-moz-focus-inner{border-style:none}.base-grid th:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25);outline:none}.base-grid th:first-child{border-top-left-radius:.5rem}.base-grid th:last-child{border-top-right-radius:.5rem}.base-grid th.-focus-within .cell-more-options,.base-grid th.active .cell-more-options,.base-grid th:focus-within .cell-more-options,.base-grid th:hover .cell-more-options{visibility:visible}.base-grid th.control-header-cell{pointer-events:none}.base-grid th:active,.base-grid th:hover{background:RGB(var(--now-color--secondary-0,217,235,238))}.base-grid thead tr{box-sizing:border-box;display:table-row;line-height:1.25}.base-grid td{max-width:11.5rem;min-width:9.375rem;text-align:left;white-space:nowrap;align-items:center;color:RGB(var(--now-color--neutral-18,22,27,28));position:relative;text-decoration:none;padding:0}.base-grid td::-moz-focus-inner{border-style:none}.base-grid td:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25);outline:none}.base-grid td:active,.base-grid td:hover{background:RGB(var(--now-color--secondary-0,217,235,238))}.base-grid tr{outline:none;line-height:1.25}.base-grid tr:nth-child(odd){background-color:RGB(var(--now-color--neutral-0,255,255,255))}.base-grid tr:nth-child(2n){background-color:RGB(var(--now-color--neutral-1,246,247,247))}.base-grid tr.is-hidden{display:none}.base-grid tr .unsaved-row-indicator{color:RGB(var(--now-color--secondary-1,1,119,142))}.base-grid tr.is-focus .delete-control,.base-grid tr:focus-within .delete-control,.base-grid tr:hover .delete-control{display:inline-block}.base-grid tr.is-focus .unsaved-row-indicator,.base-grid tr:focus-within .unsaved-row-indicator,.base-grid tr:hover .unsaved-row-indicator{display:none}.base-grid tr.is-focused{background-color:RGB(var(--now-color--secondary-0,217,235,238))}.base-grid th{border-bottom:1px solid RGB(var(--now-color--neutral-5,172,180,181))}.base-grid td,.base-grid th{border-right:1px solid RGB(var(--now-color--neutral-1,246,247,247))}.base-grid td{border-bottom:1px solid RGB(var(--now-color--neutral-1,246,247,247))}.base-grid tr td:last-child,.base-grid tr th:last-child{border-right:none}.base-grid tr:last-child td{border-bottom:none}\", \"\"]);\n\n// exports\n","import { ACTION_TYPES, EDIT_POPOVER_ID } from './constants';\nimport { updateStateWithoutRender } from '../../commons/utils';\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.NOW_POPOVER__CONTENT_VISIBLE]: {\n\t\teffect: ({ action, updateState }) => {\n\t\t\tconst {\n\t\t\t\tmeta: { appended }\n\t\t\t} = action;\n\n\t\t\tif (appended && appended === EDIT_POPOVER_ID) {\n\t\t\t\tconst popover = action.payload.content[0].parentElement;\n\t\t\t\tupdateStateWithoutRender({ editPopover: popover }, updateState);\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_POPOVER__CONTENT_HIDDEN]: {\n\t\teffect: ({ action, updateState }) => {\n\t\t\tconst {\n\t\t\t\tmeta: { appended }\n\t\t\t} = action;\n\n\t\t\tif (appended && appended === EDIT_POPOVER_ID)\n\t\t\t\tupdateStateWithoutRender({ editPopover: null }, updateState);\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.REFIT_EDIT_POPOVER]: ({ state }) => {\n\t\tconst { editPopover } = state;\n\t\tif (editPopover && typeof editPopover.refit === 'function')\n\t\t\teditPopover.refit();\n\t}\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider/constants';\n\ncreateCustomElement('sn-tb-header', {\n\trenderer: { type: snabbdom },\n\tinitialState: {\n\t\tshowTableProperties: false\n\t},\n\tproperties: {\n\t\tdisableSave: {\n\t\t\tcomputed({ properties }) {\n\t\t\t\tconst {\n\t\t\t\t\tisTransactionModelDirty,\n\t\t\t\t\tisTableSaveInProgress\n\t\t\t\t} = properties;\n\t\t\t\treturn !isTransactionModelDirty || isTableSaveInProgress;\n\t\t\t}\n\t\t},\n\t\ttableMetadata: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.tableMetadata\n\t\t},\n\t\tisTableStructureFetched: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTableStructureFetched\n\t\t},\n\t\tisTableSaveInProgress: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTableSaveInProgress\n\t\t},\n\t\tisTransactionModelDirty: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTransactionModelDirty\n\t\t},\n\t\tisInAppEngineStudio: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isInAppEngineStudio\n\t\t},\n\t\ttransactionScope: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.transactionScope\n\t\t},\n\t\tsysId: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.sysId\n\t\t},\n\t\tisTableInReadOnly: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTableInReadOnly,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import '@servicenow/now-button';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-loader';\nimport '@servicenow/now-highlighted-value';\nimport '@servicenow/now-tooltip';\nimport { t } from 'sn-translate';\nimport '../sn-tb-properties';\nimport '../sn-tb-confirm-delete';\nimport '../sn-tb-confirm';\nimport { ACTION_TYPES as TB_SAVE_ACTIONS } from '../../behaviors/table-save';\nimport { getMoreActions } from './utils';\nimport { ACTION_TYPES } from './constants';\nimport { TbIcon } from '../../partials/table-icon/view';\nimport { Fragment } from '@servicenow/ui-renderer-snabbdom';\n\nconst renderTableProperties = showTableProperties => {\n\tif (!showTableProperties) return null;\n\n\treturn <sn-tb-properties />;\n};\n\nconst renderFullLoader = showFullLoader => {\n\tif (!showFullLoader) return null;\n\n\treturn (\n\t\t<div className='loading-container'>\n\t\t\t<div className='loading-content'>\n\t\t\t\t<now-loader label={t('Saving')} size='lg' />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderReadOnlyInfo = isTableInReadOnly => {\n\tif (!isTableInReadOnly) return null;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-highlighted-value\n\t\t\t\tclassName='read-only-info'\n\t\t\t\tlabel={t('Read only')}\n\t\t\t\tcolor='info'\n\t\t\t\tvariant='tertiary'\n\t\t\t/>\n\t\t\t<now-tooltip\n\t\t\t\tcontent={t('This table is outside your application scope')}\n\t\t\t\tdelay={300}\n\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\telm.targetRef = elm.previousElementSibling;\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport default (state, { updateState, dispatch }) => {\n\tconst {\n\t\ttableMetadata: { label, canDelete },\n\t\tisTableSaveInProgress,\n\t\tisTableStructureFetched,\n\t\tdisableSave,\n\t\tisTableInReadOnly\n\t} = state.properties;\n\tconst { showTableProperties } = state;\n\n\tif (!isTableStructureFetched) return null;\n\n\treturn (\n\t\t<div className='sn-tb-header'>\n\t\t\t<div className='sn-tb-header-title'>\n\t\t\t\t<TbIcon image='table-resource' />\n\t\t\t\t<h1 className='header-title'>{label}</h1>\n\t\t\t\t{renderReadOnlyInfo(isTableInReadOnly)}\n\t\t\t</div>\n\t\t\t<div className='sn-tb-header-btn-grp'>\n\t\t\t\t<now-button\n\t\t\t\t\tdata-testId='properties'\n\t\t\t\t\tlabel={t('Properties')}\n\t\t\t\t\tsize='md'\n\t\t\t\t\tvariant='secondary'\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tshowTableProperties: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<now-button\n\t\t\t\t\tlabel={t('Preview')}\n\t\t\t\t\tsize='md'\n\t\t\t\t\tvariant='secondary'\n\t\t\t\t\tdata-testId='preview'\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__PREVIEW_CLICKED);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{!isTableInReadOnly ? (\n\t\t\t\t\t<now-button\n\t\t\t\t\t\tdata-testId='save'\n\t\t\t\t\t\tlabel={t('Save')}\n\t\t\t\t\t\tsize='md'\n\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\tdisabled={disableSave}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tif (!disableSave)\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tTB_SAVE_ACTIONS.TABLE_SAVE__SAVE_INITIATED\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<now-dropdown\n\t\t\t\t\tconfigAria={{ 'aria-label': t('More options') }}\n\t\t\t\t\titems={getMoreActions(canDelete, isTableInReadOnly)}\n\t\t\t\t\ticon='ellipsis-h-outline'\n\t\t\t\t\tplaceholder=''\n\t\t\t\t\ttooltipContent=''\n\t\t\t\t\tsize='md'\n\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\tselect='none'\n\t\t\t\t\tvariant='secondary'\n\t\t\t\t>\n\t\t\t\t\t<now-icon\n\t\t\t\t\t\tslot='trigger-content'\n\t\t\t\t\t\ticon='ellipsis-h-fill'\n\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t/>\n\t\t\t\t</now-dropdown>\n\t\t\t</div>\n\n\t\t\t{renderTableProperties(showTableProperties)}\n\t\t\t{renderFullLoader(isTableSaveInProgress)}\n\t\t</div>\n\t);\n};\n","export { ACTION_TYPES } from './constants';\nimport './sn-tb-properties';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { TABS } from './constants';\nimport { actionHandlers } from './actions';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider';\nimport alerts from '../../behaviors/alerts';\n\ncreateCustomElement('sn-tb-properties', {\n\trenderer: { type: snabbdom },\n\tinitialState: {\n\t\tmodalOpen: true,\n\t\tisLoading: true,\n\t\tisError: false,\n\t\tisSubmitting: false,\n\t\tisFormValid: false,\n\t\ttabs: TABS,\n\t\tselectedTab: 'general_info',\n\t\tfieldValidationMsgs: {},\n\t\ttableProperties: {},\n\t\talerts: []\n\t},\n\tproperties: {\n\t\tsysId: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.sysId\n\t\t},\n\t\ttableMetadata: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.tableMetadata\n\t\t},\n\t\ttransactionScope: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.transactionScope\n\t\t},\n\t\tisTableInReadOnly: {\n\t\t\tdefault: TB_PROVIDER_PROPERTIES.isTableInReadOnly,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tbehaviors: [alerts],\n\tactionHandlers\n});\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-input';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-tabs';\nimport '@servicenow/now-button';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-collapse';\nimport '@servicenow/now-checkbox';\nimport '@servicenow/now-popover';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-loader';\nimport '@servicenow/now-select';\nimport '../sn-tb-popover-content';\nimport { t } from 'sn-translate';\nimport {\n\tACTION_TYPES,\n\tPROPERTY_INFO_MESSAGES,\n\tPREFIX_MAX_LENGTH,\n\tBASE_NUMBER_MAX_LENGTH,\n\tMAXIMUM_DIGITS_UPPER_LIMIT\n} from './constants';\nimport { getModalFooterButtons, isAccessControlDisabled } from './utils';\nimport { formatNumberWithCommas } from '../../commons/utils';\nimport { BUTTON_REFERENCE_OPENER } from '../../behaviors/grid-model/constants';\n\nconst renderLoader = () => (\n\t<now-loader label='Loading...' size='lg'></now-loader>\n);\n\nconst renderAccess = ({ state, selectedTab }) => {\n\tconst {\n\t\ttableProperties: { accessInfo },\n\t\tproperties: { isTableInReadOnly }\n\t} = state;\n\tif (selectedTab !== 'access') return null;\n\n\treturn (\n\t\t<div className='access-info'>\n\t\t\t<div className='basic-access-controls'>\n\t\t\t\t<now-select\n\t\t\t\t\tsearch='none'\n\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.accessible_from}\n\t\t\t\t\titems={[\n\t\t\t\t\t\t{ id: 'public', label: t('All Application Scopes') },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'package_private',\n\t\t\t\t\t\t\tlabel: t('This Application Scope Only')\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tlabel={t('Accessible From')}\n\t\t\t\t\tname='access'\n\t\t\t\t\tmessages={[]}\n\t\t\t\t\tselectedItem={accessInfo.accessible_from}\n\t\t\t\t\tname='accessible_from'\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tcategory: 'accessInfo',\n\t\t\t\t\t\tname: 'accessible_from'\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className='application-access-controls'>\n\t\t\t\t\t<div className='application-access-control-label'>\n\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\tlabel={t('Application Access Controls')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{renderInfoIcon(PROPERTY_INFO_MESSAGES.access_control)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='access-controls-group'>\n\t\t\t\t\t\t<div className='access-control'>\n\t\t\t\t\t\t\t<now-label-value-inline label={t('Read')} />\n\t\t\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\t\t\tname='read_access'\n\t\t\t\t\t\t\t\tchecked={accessInfo.read_access}\n\t\t\t\t\t\t\t\tdisabled={isAccessControlDisabled(\n\t\t\t\t\t\t\t\t\tisTableInReadOnly,\n\t\t\t\t\t\t\t\t\taccessInfo.accessible_from,\n\t\t\t\t\t\t\t\t\t'read_access',\n\t\t\t\t\t\t\t\t\taccessInfo.read_access\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tappend-to-payload={{ category: 'accessInfo' }}\n\t\t\t\t\t\t\t\tconfigAria={{ 'aria-label': t('Read') }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='access-control'>\n\t\t\t\t\t\t\t<now-label-value-inline label={t('Create')} />\n\t\t\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\t\t\tname='create_access'\n\t\t\t\t\t\t\t\tchecked={accessInfo.create_access}\n\t\t\t\t\t\t\t\tdisabled={isAccessControlDisabled(\n\t\t\t\t\t\t\t\t\tisTableInReadOnly,\n\t\t\t\t\t\t\t\t\taccessInfo.accessible_from,\n\t\t\t\t\t\t\t\t\t'create_access',\n\t\t\t\t\t\t\t\t\taccessInfo.read_access\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tappend-to-payload={{ category: 'accessInfo' }}\n\t\t\t\t\t\t\t\tconfigAria={{ 'aria-label': t('Create') }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='access-control'>\n\t\t\t\t\t\t\t<now-label-value-inline label={t('Update')} />\n\t\t\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\t\t\tname='update_access'\n\t\t\t\t\t\t\t\tchecked={accessInfo.update_access}\n\t\t\t\t\t\t\t\tdisabled={isAccessControlDisabled(\n\t\t\t\t\t\t\t\t\tisTableInReadOnly,\n\t\t\t\t\t\t\t\t\taccessInfo.accessible_from,\n\t\t\t\t\t\t\t\t\t'update_access',\n\t\t\t\t\t\t\t\t\taccessInfo.read_access\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tappend-to-payload={{ category: 'accessInfo' }}\n\t\t\t\t\t\t\t\tconfigAria={{ 'aria-label': t('Update') }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='access-control'>\n\t\t\t\t\t\t\t<now-label-value-inline label={t('Delete')} />\n\t\t\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\t\t\tname='delete_access'\n\t\t\t\t\t\t\t\tchecked={accessInfo.delete_access}\n\t\t\t\t\t\t\t\tdisabled={isAccessControlDisabled(\n\t\t\t\t\t\t\t\t\tisTableInReadOnly,\n\t\t\t\t\t\t\t\t\taccessInfo.accessible_from,\n\t\t\t\t\t\t\t\t\t'delete_access',\n\t\t\t\t\t\t\t\t\taccessInfo.read_access\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tappend-to-payload={{ category: 'accessInfo' }}\n\t\t\t\t\t\t\t\tconfigAria={{ 'aria-label': t('Delete') }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='advanced-access-controls'></div>\n\t\t</div>\n\t);\n};\n\nconst renderInfoIcon = infoMsg => {\n\treturn (\n\t\t<now-popover className='sn-tb-popover'>\n\t\t\t<now-button-iconic\n\t\t\t\ticon='circle-info-outline'\n\t\t\t\tslot='trigger'\n\t\t\t\tconfig-aria={{\n\t\t\t\t\t'aria-label': t('More information')\n\t\t\t\t}}\n\t\t\t\tsize='sm'\n\t\t\t\tvariant='tertiary'\n\t\t\t\thide-padding\n\t\t\t/>\n\t\t\t<sn-tb-popover-content slot='content'>\n\t\t\t\t<div style={{ padding: '0.25rem' }}>{infoMsg}</div>\n\t\t\t</sn-tb-popover-content>\n\t\t</now-popover>\n\t);\n};\n\nconst renderAutoNumberPreview = generalInfo => {\n\tconst { auto_number } = generalInfo;\n\tif (!auto_number) return null;\n\n\treturn (\n\t\t<div className='form-control'>\n\t\t\t<now-label-value-stacked\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t('Record-number preview'),\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tvalue: generalInfo.auto_number_preview\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t\talign='horizontal'\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst renderAutoNumberFields = (\n\tgeneralInfo,\n\tfieldValidationMsgs,\n\tisTableInReadOnly\n) => {\n\tconst { auto_number } = generalInfo;\n\tif (!auto_number) return null;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='form-row -horizontal-space'>\n\t\t\t\t<now-input\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='prefix'\n\t\t\t\t\tlabel={t('Prefix')}\n\t\t\t\t\tmaxlength={PREFIX_MAX_LENGTH}\n\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.prefix}\n\t\t\t\t\tvalue={generalInfo.prefix}\n\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\trequired\n\t\t\t\t\tinvalid={!generalInfo.prefix}\n\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t/>\n\t\t\t\t<now-input\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='number'\n\t\t\t\t\tmaxlength={BASE_NUMBER_MAX_LENGTH}\n\t\t\t\t\tlabel={t('Starting number')}\n\t\t\t\t\tmessages={fieldValidationMsgs['number']}\n\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.number}\n\t\t\t\t\tvalue={formatNumberWithCommas(generalInfo.number)}\n\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\trequired\n\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t/>\n\t\t\t\t<now-input\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tname='maximum_digits'\n\t\t\t\t\tmax={MAXIMUM_DIGITS_UPPER_LIMIT}\n\t\t\t\t\tlabel={t('Number of digits')}\n\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.maximum_digits}\n\t\t\t\t\tvalue={generalInfo.maximum_digits}\n\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nconst renderGeneralInfo = ({ state, dispatch, updateState }) => {\n\tconst {\n\t\tselectedTab,\n\t\tfieldValidationMsgs,\n\t\ttableProperties: { generalInfo },\n\t\tproperties: { isTableInReadOnly }\n\t} = state;\n\tconst { isAdvancedExpanded } = generalInfo;\n\n\tif (selectedTab !== 'general_info') return null;\n\n\treturn (\n\t\t<div className='general-info'>\n\t\t\t<div className='form-row -horizontal-space'>\n\t\t\t\t<now-input\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='label'\n\t\t\t\t\tlabel={t('Table label')}\n\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.label}\n\t\t\t\t\tvalue={generalInfo.label}\n\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<now-input\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='name'\n\t\t\t\t\tlabel={t('Table name')}\n\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.name}\n\t\t\t\t\tvalue={generalInfo.name}\n\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\taria-readonly='true'\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{generalInfo.extends_table_label ? (\n\t\t\t\t<div className='form-row'>\n\t\t\t\t\t<now-input\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tname='super_class'\n\t\t\t\t\t\tlabel={t('Extends table')}\n\t\t\t\t\t\thelperContent={PROPERTY_INFO_MESSAGES.super_class}\n\t\t\t\t\t\tvalue={generalInfo.extends_table_label}\n\t\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\t\taria-readonly='true'\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t>\n\t\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\t\ticon='open-link-right-outline'\n\t\t\t\t\t\t\tsize='md'\n\t\t\t\t\t\t\thidePadding={true}\n\t\t\t\t\t\t\tbare={true}\n\t\t\t\t\t\t\tvariant='tertiary'\n\t\t\t\t\t\t\tslot='end'\n\t\t\t\t\t\t\ttooltipContent={t('Open reference table')}\n\t\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t\t'aria-label': t('Open reference table')\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tbutton: BUTTON_REFERENCE_OPENER\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</now-input>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<now-collapse-trigger\n\t\t\t\tclassName='advanced-section'\n\t\t\t\tcontrols='general-info-advanced'\n\t\t\t>\n\t\t\t\t<now-button-bare\n\t\t\t\t\tclassName='advanced-btn'\n\t\t\t\t\tlabel={t('Advanced')}\n\t\t\t\t\ticonStart={\n\t\t\t\t\t\tisAdvancedExpanded\n\t\t\t\t\t\t\t? 'caret-down-outline'\n\t\t\t\t\t\t\t: 'caret-right-outline'\n\t\t\t\t\t}\n\t\t\t\t\tvariant='secondary'\n\t\t\t\t\tsize='md'\n\t\t\t\t\tconfigAria={{ 'aria-label': t('Advanced section') }}\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tpath:\n\t\t\t\t\t\t\t\t'tableProperties.generalInfo.isAdvancedExpanded',\n\t\t\t\t\t\t\tvalue: !isAdvancedExpanded,\n\t\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__VALIDATE_FORM);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</now-collapse-trigger>\n\t\t\t<now-collapse\n\t\t\t\tid='general-info-advanced'\n\t\t\t\texpanded={isAdvancedExpanded}\n\t\t\t>\n\t\t\t\t<div className='form-row -bottom-space'>\n\t\t\t\t\t<div className='form-control align -center'>\n\t\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\t\tname='is_extendable'\n\t\t\t\t\t\t\tlabel={t('Make extensible')}\n\t\t\t\t\t\t\tchecked={generalInfo.is_extendable}\n\t\t\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{renderInfoIcon(PROPERTY_INFO_MESSAGES.is_extendable)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-row -bottom-space'>\n\t\t\t\t\t<div className='form-control align -center'>\n\t\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\t\tname='auto_number'\n\t\t\t\t\t\t\tlabel={t('Add record number')}\n\t\t\t\t\t\t\tchecked={generalInfo.auto_number}\n\t\t\t\t\t\t\tappend-to-payload={{ category: 'generalInfo' }}\n\t\t\t\t\t\t\tdisabled={isTableInReadOnly}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{renderInfoIcon(PROPERTY_INFO_MESSAGES.auto_number)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{renderAutoNumberPreview(generalInfo)}\n\t\t\t\t</div>\n\t\t\t\t{renderAutoNumberFields(\n\t\t\t\t\tgeneralInfo,\n\t\t\t\t\tfieldValidationMsgs,\n\t\t\t\t\tisTableInReadOnly\n\t\t\t\t)}\n\t\t\t</now-collapse>\n\t\t</div>\n\t);\n};\n\nconst renderModalBody = ({ state, dispatch, updateState }) => {\n\tconst { tabs, selectedTab, isLoading } = state;\n\tconst { alerts } = state.properties;\n\n\tif (isLoading) return renderLoader();\n\treturn (\n\t\t<div className='table-properties'>\n\t\t\t{alerts.length ? (\n\t\t\t\t<now-alert-list manageItems items={alerts} />\n\t\t\t) : null}\n\t\t\t<now-tabs\n\t\t\t\titems={Object.keys(tabs).map(tab => {\n\t\t\t\t\treturn tabs[tab];\n\t\t\t\t})}\n\t\t\t/>\n\t\t\t<div className='tab-content'>\n\t\t\t\t{renderGeneralInfo({ state, dispatch, updateState })}\n\t\t\t\t{renderAccess({ state, selectedTab })}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default (state, { dispatch, updateState }) => {\n\tconst {\n\t\tmodalOpen,\n\t\tisSubmitting,\n\t\tisFormValid,\n\t\tproperties: { isTableInReadOnly }\n\t} = state;\n\n\treturn (\n\t\t<div className='sn-tb-properties'>\n\t\t\t<now-modal\n\t\t\t\topened={modalOpen}\n\t\t\t\tmanage-opened\n\t\t\t\tsize='lg'\n\t\t\t\theader-label={t('Table Properties')}\n\t\t\t\tfooter-actions={\n\t\t\t\t\tisTableInReadOnly\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: getModalFooterButtons(isFormValid, isSubmitting)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{renderModalBody({ state, dispatch, updateState })}\n\t\t\t</now-modal>\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_tabs;","module.exports = __TECTONIC__$servicenow_now_collapse;","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.table-properties now-alert-list{width:30rem;position:absolute;top:0;right:0;left:0;margin-inline-start:auto;margin-inline-end:auto}now-loader{height:25.5rem}.tab-content{margin:1rem;min-height:21.5rem}.tab-content .form-row{display:flex}.tab-content .form-row.-horizontal-space .form-control{margin-right:2.5rem}.tab-content .form-row.-horizontal-space .form-control:last-child{margin-right:0}.tab-content .form-row .form-control{flex:1}.tab-content .form-row.-bottom-space{margin-bottom:1rem}.tab-content .advanced-section{display:inline-block;margin:.75rem 0}.sn-tb-popover{display:inline-block;line-height:0;margin-inline-start:.25rem;margin-top:.125rem}.align{display:flex}.align.-center{align-items:center}.extended-table{width:50%}.access-info{display:flex}.access-controls-group{display:flex;flex-direction:row;justify-content:space-between}.access-control{display:flex;flex-direction:column;align-items:center}.basic-access-controls{flex:1 1 0px}.basic-access-controls .application-access-controls,.basic-access-controls now-select{width:100%}.advanced-access-controls{flex:1 1 0px}.application-access-control-label{padding-top:1.5rem;padding-bottom:1rem}\", \"\"]);\n\n// exports\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\nimport uuid from 'uuid';\nimport {\n\tACTION_TYPES,\n\tTRANSFORM_FIELDS,\n\tVALIDATION_FIELDS,\n\tGET_API_PATH,\n\tBATCH_API_PATH\n} from './constants';\nimport {\n\tgetAutoNumberDefaults,\n\tgetAutoNumberPreview,\n\tpopulateAutoNumberFields,\n\ttransformBaseNumberField,\n\tvalidateMandatoryField,\n\tvalidateBaseNumberField,\n\tvalidateMaximumDigitsField,\n\tsetAccessForPrivateScope,\n\tsetAccessForPublicScope\n} from './utils';\nimport { ACTION_TYPES as ALERT_ACTION_TYPES } from '../../behaviors/alerts';\nimport { ACTION_TYPES as TBS_ACTION_TYPES } from '../../behaviors/table-structure-data';\nimport { ACTION_TYPES as GRID_MODEL_ACTION_TYPES } from '../../behaviors/grid-model';\nimport { ERROR_ALERT } from '../../commons/constants';\nimport { isObject } from '../../commons/utils';\nimport { BUTTON_REFERENCE_OPENER } from '../../behaviors/grid-model/constants';\n\nconst { COMPONENT_DOM_READY } = actionTypes;\n\nconst tbpFetchRequested = ({ properties, dispatch }) => {\n\tconst { sysId, transactionScope } = properties;\n\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__FETCH_INITIATED, {\n\t\tsysId,\n\t\tsysparm_transaction_scope: transactionScope\n\t});\n};\n\nconst onSectionChange = ({\n\tstate,\n\taction: {\n\t\tpayload: { value }\n\t},\n\tupdateState\n}) => {\n\tconst { tabs } = state;\n\tconst selectedTab = tabs[value].id;\n\n\tupdateState({\n\t\tselectedTab\n\t});\n};\n\nconst onNDSComponentValueChanged = ({ action, dispatch, updateState }) => {\n\tconst { name, category } = action.payload;\n\tlet { value } = action.payload;\n\n\t// normalize value\n\tvalue = typeof value === 'string' ? value.trim() : value;\n\n\tif (!TRANSFORM_FIELDS.includes(name))\n\t\tupdateState({\n\t\t\tpath: `tableProperties.${category}.${name}`,\n\t\t\tvalue,\n\t\t\toperation: 'set'\n\t\t});\n\telse {\n\t\ttransformBaseNumberField(value, updateState);\n\t}\n\n\t// for setting auto number related fields\n\tpopulateAutoNumberFields({ name, value, dispatch });\n\n\tif (VALIDATION_FIELDS.includes(name))\n\t\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__VALIDATE_FORM);\n};\n\nconst validateForm = ({ state, updateState }) => {\n\tlet isFormValid = true;\n\n\t// validate general info section fields\n\tconst {\n\t\ttableProperties: {\n\t\t\tgeneralInfo: { label, prefix, number, maximum_digits, auto_number }\n\t\t}\n\t} = state;\n\n\tif (\n\t\t!validateMandatoryField(label) ||\n\t\t(auto_number &&\n\t\t\t(!validateMandatoryField(prefix) ||\n\t\t\t\t!validateBaseNumberField(number, updateState) ||\n\t\t\t\t!validateMaximumDigitsField(maximum_digits)))\n\t)\n\t\tisFormValid = false;\n\n\t// Set form validity\n\tupdateState({\n\t\tisFormValid\n\t});\n};\n\nexport const tbpFetchInitiated = createHttpEffect(GET_API_PATH, {\n\tpathParams: ['sysId'],\n\tqueryParams: ['sysparm_transaction_scope'],\n\tbatch: false,\n\tstartActionType: ACTION_TYPES.TABLE_PROPERTIES__FETCH_STARTED,\n\tsuccessActionType: ACTION_TYPES.TABLE_PROPERTIES__FETCH_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.TABLE_PROPERTIES__FETCH_FAILED\n});\n\nexport const tbpFetchStarted = ({ updateState }) => {\n\tupdateState({\n\t\tisLoading: true\n\t});\n};\n\nexport const tbpFetchSucceeded = ({\n\taction,\n\tupdateState,\n\tproperties,\n\tdispatch\n}) => {\n\tconst {\n\t\tpayload: { result }\n\t} = action;\n\tconst { name, label } = properties.tableMetadata;\n\tconst generalInfo = {\n\t\t...result.generalInfo,\n\t\tname,\n\t\tlabel,\n\t\tisAdvancedExpanded: false\n\t};\n\tconst accessInfo = {\n\t\t...result.accessControls,\n\t\tread_access: JSON.parse(result.accessControls.read_access),\n\t\tcreate_access: JSON.parse(result.accessControls.create_access),\n\t\tupdate_access: JSON.parse(result.accessControls.update_access),\n\t\tdelete_access: JSON.parse(result.accessControls.delete_access),\n\t\tws_access: JSON.parse(result.accessControls.ws_access)\n\t};\n\n\tupdateState({\n\t\tisLoading: false,\n\t\tisFormValid: true,\n\t\ttableProperties: { generalInfo, accessInfo }\n\t});\n\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__SET_AUTO_NUMBER_PREVIEW);\n};\n\nexport const tbpFetchFailed = ({ dispatch, updateState, action }) => {\n\tconst {\n\t\tpayload: {\n\t\t\tdata: { error }\n\t\t}\n\t} = action;\n\tupdateState({\n\t\tisLoading: false,\n\t\tmodalOpen: false\n\t});\n\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__MODAL_CLOSED);\n\n\tif (isObject(error))\n\t\tdispatch(ALERT_ACTION_TYPES.TB_ALERTS__ADD_ALERTS, {\n\t\t\talerts: [\n\t\t\t\t{\n\t\t\t\t\tcontent: `${error.message}. ${error.detail}`,\n\t\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t\t}\n\t\t\t]\n\t\t});\n};\n\nconst setAutoNumberDefaults = ({ state, updateState }) => {\n\tconst {\n\t\ttableProperties: {\n\t\t\tgeneralInfo: { label }\n\t\t}\n\t} = state;\n\tconst autoNumberDefaults = getAutoNumberDefaults(label);\n\n\tupdateState({\n\t\ttableProperties: {\n\t\t\t...state.tableProperties,\n\t\t\tgeneralInfo: {\n\t\t\t\t...state.tableProperties.generalInfo,\n\t\t\t\t...autoNumberDefaults\n\t\t\t}\n\t\t},\n\t\tfieldValidationMsgs: {\n\t\t\t...state.fieldValidationMsgs,\n\t\t\tnumber: []\n\t\t}\n\t});\n};\n\nconst setAutoNumberPreview = ({ state, updateState }) => {\n\tconst {\n\t\ttableProperties: {\n\t\t\tgeneralInfo: { prefix, number, maximum_digits }\n\t\t}\n\t} = state;\n\n\t// don't set auto-number preview if any of the field is invalid\n\tif (\n\t\t!validateMandatoryField(prefix) ||\n\t\t!validateBaseNumberField(number) ||\n\t\t!validateMaximumDigitsField(maximum_digits)\n\t)\n\t\treturn false;\n\n\tconst autoNumberPreview = getAutoNumberPreview({\n\t\tprefix,\n\t\tnumber,\n\t\tmaximum_digits\n\t});\n\n\tupdateState({\n\t\tpath: `tableProperties.generalInfo.auto_number_preview`,\n\t\tvalue: autoNumberPreview,\n\t\toperation: 'set'\n\t});\n};\n\nconst onInputValueInvalid = ({ action, updateState }) => {\n\tconst { value: invalid, name, fieldValue, category } = action.payload;\n\tif (!invalid) return;\n\n\t// Even if value is invalid, still update in state. We will validate manually and disable/enable primary button\n\tupdateState({\n\t\tpath: `tableProperties.${category}.${name}`,\n\t\tvalue: fieldValue,\n\t\toperation: 'set'\n\t});\n\n\t// Set form invalid\n\tupdateState({\n\t\tisFormValid: false\n\t});\n};\n\nconst onModalDismissed = ({ dispatch, updateState }) => {\n\tupdateState({ modalOpen: false });\n\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__MODAL_CLOSED);\n};\n\nconst tbpUpdateRequested = ({ dispatch, state, properties }) => {\n\tconst {\n\t\tlabel,\n\t\tis_extendable,\n\t\tsys_number_sysId,\n\t\tprefix,\n\t\tmaximum_digits,\n\t\tnumber,\n\t\tauto_number\n\t} = state.tableProperties.generalInfo;\n\tconst {\n\t\taccessible_from,\n\t\tread_access,\n\t\tcreate_access,\n\t\tupdate_access,\n\t\tdelete_access,\n\t\tws_access\n\t} = state.tableProperties.accessInfo;\n\tconst {\n\t\tsysId,\n\t\ttransactionScope,\n\t\ttableMetadata: { name: tableName }\n\t} = properties;\n\n\tlet rest_requests = [\n\t\t{\n\t\t\tid: uuid.v4(),\n\t\t\tmethod: 'PUT',\n\t\t\theaders: [],\n\t\t\texclude_response_headers: true,\n\t\t\turl: `/api/now/table/sys_db_object/${sysId}?sysparm_transaction_scope=${transactionScope}`,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tlabel,\n\t\t\t\tis_extendable,\n\t\t\t\taccess: accessible_from,\n\t\t\t\tread_access,\n\t\t\t\tcreate_access,\n\t\t\t\tupdate_access,\n\t\t\t\tdelete_access,\n\t\t\t\tws_access\n\t\t\t})\n\t\t}\n\t];\n\n\tlet sysNumberReq = {\n\t\tid: uuid.v4(),\n\t\theaders: [],\n\t\tmethod: 'PUT',\n\t\turl: `/api/now/table/sys_number/${sys_number_sysId}?sysparm_transaction_scope=${transactionScope}`,\n\t\tbody: JSON.stringify({\n\t\t\tprefix,\n\t\t\tmaximum_digits,\n\t\t\tnumber\n\t\t})\n\t};\n\n\tif (auto_number) {\n\t\tif (!sys_number_sysId) {\n\t\t\t// if auto number is not there, create new one\n\t\t\tsysNumberReq.method = 'POST';\n\t\t\tsysNumberReq.url = `/api/now/table/sys_number?sysparm_transaction_scope=${transactionScope}`;\n\t\t\tsysNumberReq.body = JSON.stringify({\n\t\t\t\tprefix,\n\t\t\t\tmaximum_digits,\n\t\t\t\tnumber,\n\t\t\t\tcategory: tableName\n\t\t\t});\n\t\t}\n\t\trest_requests.push(sysNumberReq);\n\t} else if (sys_number_sysId) {\n\t\t// if auto number is removed\n\t\tsysNumberReq.method = 'PUT';\n\t\tsysNumberReq.body = JSON.stringify({ prefix: '' });\n\t\trest_requests.push(sysNumberReq);\n\t}\n\n\t// Before we do operation and get actual notifications get already present session notifications, it will clear the session notification and keep slate clean\n\tdispatch(\n\t\tALERT_ACTION_TYPES.TB_ALERTS__SESSION_ALERTS_REQUESTED,\n\t\t{ sysparm_transaction_scope: transactionScope },\n\t\t{ noAlerts: true }\n\t);\n\n\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__UPDATE_INITIATED, {\n\t\tdata: {\n\t\t\tbatch_request_id: uuid.v4(),\n\t\t\tenforce_order: false,\n\t\t\trest_requests\n\t\t},\n\t\tsysparm_transaction_scope: transactionScope\n\t});\n};\n\nexport const tbpUpdateInitiated = createHttpEffect(BATCH_API_PATH, {\n\tmethod: 'POST',\n\tqueryParams: ['sysparm_transaction_scope'],\n\tstartActionType: ACTION_TYPES.TABLE_PROPERTIES__UPDATE_STARTED,\n\tsuccessActionType: ACTION_TYPES.TABLE_PROPERTIES__UPDATE_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.TABLE_PROPERTIES__UPDATE_FAILED,\n\tbatch: false\n});\n\nexport const tbpUpdateStarted = ({ updateState }) => {\n\tupdateState({\n\t\tisSubmitting: true\n\t});\n};\n\nexport const tbpUpdateSucceeded = ({\n\tstate,\n\tproperties,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst { label } = state.tableProperties.generalInfo;\n\tconst { transactionScope } = properties;\n\n\tupdateState({\n\t\tisSubmitting: false,\n\t\tmodalOpen: false\n\t});\n\tdispatch(TBS_ACTION_TYPES.TABLE_STRUCTURE_DATA__TABLE_META_DATA_CHANGED, {\n\t\tlabel\n\t});\n\tdispatch(ACTION_TYPES.TABLE_PROPERTIES__MODAL_CLOSED);\n\tdispatch(ALERT_ACTION_TYPES.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [\n\t\t\t{\n\t\t\t\tcontent: t('Table properties have been updated'),\n\t\t\t\tstatus: 'info',\n\t\t\t\ticon: 'circle-info-outline'\n\t\t\t}\n\t\t]\n\t});\n\t// request for session alerts\n\tdispatch(ALERT_ACTION_TYPES.TB_ALERTS__SESSION_ALERTS_REQUESTED, {\n\t\tsysparm_transaction_scope: transactionScope\n\t});\n};\n\nexport const tbpUpdateFailed = ({ dispatch, updateState, properties }) => {\n\tconst { transactionScope } = properties;\n\tupdateState({\n\t\tisError: true,\n\t\tisSubmitting: false\n\t});\n\n\tdispatch(ALERT_ACTION_TYPES.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [\n\t\t\t{\n\t\t\t\tcontent: t('Something went wrong. Please try again'),\n\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t}\n\t\t]\n\t});\n\t// request for session alerts\n\tdispatch(ALERT_ACTION_TYPES.TB_ALERTS__SESSION_ALERTS_REQUESTED, {\n\t\tsysparm_transaction_scope: transactionScope\n\t});\n};\n\nexport const onIconicButtonClicked = coeffects => {\n\tconst { action, dispatch, state, properties } = coeffects;\n\tconst {\n\t\ttableProperties: {\n\t\t\tgeneralInfo: { extends_table_sys_id, extends_table_label }\n\t\t}\n\t} = state;\n\tconst { transactionScope } = properties;\n\tconst {\n\t\tpayload: { button }\n\t} = action;\n\tif (button === BUTTON_REFERENCE_OPENER)\n\t\tdispatch(GRID_MODEL_ACTION_TYPES.OPEN_REFERENCE_TABLE, {\n\t\t\tsysId: extends_table_sys_id,\n\t\t\ttitle: extends_table_label,\n\t\t\ttransactionScope\n\t\t});\n};\n\nexport const onSelectItemSet = coeffects => {\n\tconst { action, updateState } = coeffects;\n\tconst {\n\t\tpayload: { value, category, name }\n\t} = action;\n\n\tif (category == 'accessInfo') {\n\t\tupdateState({\n\t\t\tpath: `tableProperties.${category}.${name}`,\n\t\t\tvalue,\n\t\t\toperation: 'set'\n\t\t});\n\t\tif (value == 'package_private') {\n\t\t\tsetAccessForPrivateScope(updateState);\n\t\t} else {\n\t\t\tsetAccessForPublicScope(updateState);\n\t\t}\n\t}\n};\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: tbpFetchRequested,\n\t[ACTION_TYPES.TABLE_PROPERTIES__FETCH_INITIATED]: tbpFetchInitiated,\n\t[ACTION_TYPES.TABLE_PROPERTIES__FETCH_STARTED]: tbpFetchStarted,\n\t[ACTION_TYPES.TABLE_PROPERTIES__FETCH_SUCCEEDED]: tbpFetchSucceeded,\n\t[ACTION_TYPES.TABLE_PROPERTIES__FETCH_FAILED]: tbpFetchFailed,\n\n\t[ACTION_TYPES.NOW_MODAL_OPENED_SET]: {\n\t\teffect: onModalDismissed,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_TABS__SELECTED_ITEM_SET]: {\n\t\teffect: onSectionChange,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_INPUT__VALUE_SET]: {\n\t\teffect: onNDSComponentValueChanged,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_INPUT__INVALID_SET]: {\n\t\teffect: onInputValueInvalid,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_CHECKBOX__CHECKED_SET]: {\n\t\teffect: onNDSComponentValueChanged,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_BUTTON_ICONIC__CLICKED]: {\n\t\teffect: onIconicButtonClicked,\n\t\tstopPropagation: true\n\t},\n\t[ACTION_TYPES.NOW_SELECT_SELECTED_ITEM_SET]: {\n\t\teffect: onSelectItemSet,\n\t\tstopPropagation: true\n\t},\n\n\t[ACTION_TYPES.TABLE_PROPERTIES__UPDATE_REQUESTED]: tbpUpdateRequested,\n\t[ACTION_TYPES.TABLE_PROPERTIES__UPDATE_INITIATED]: tbpUpdateInitiated,\n\t[ACTION_TYPES.TABLE_PROPERTIES__UPDATE_STARTED]: tbpUpdateStarted,\n\t[ACTION_TYPES.TABLE_PROPERTIES__UPDATE_SUCCEEDED]: tbpUpdateSucceeded,\n\t[ACTION_TYPES.TABLE_PROPERTIES__UPDATE_FAILED]: tbpUpdateFailed,\n\n\t[ACTION_TYPES.TABLE_PROPERTIES__SET_AUTO_NUMBER_DEFAULTS]: setAutoNumberDefaults,\n\t[ACTION_TYPES.TABLE_PROPERTIES__SET_AUTO_NUMBER_PREVIEW]: setAutoNumberPreview,\n\t[ACTION_TYPES.TABLE_PROPERTIES__VALIDATE_FORM]: validateForm\n};\n","import './sn-tb-confirm-delete';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { actionHandlers } from './actions';\nimport { TB_PROVIDER_PROPERTIES } from '../sn-tb-provider/constants';\n\ncreateCustomElement('sn-tb-confirm-delete', {\n\trenderer: { type: snabbdom },\n\tinitialState: {\n\t\tisDeleting: false,\n\t\tuserInput: ''\n\t},\n\tproperties: {\n\t\tisTable: { default: false },\n\t\tisRecord: { default: false },\n\t\tname: {\n\t\t\tdefault: '',\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\ttableName: { default: '' },\n\t\tsysId: { default: '' },\n\t\ttransactionScope: { default: TB_PROVIDER_PROPERTIES.transactionScope },\n\t\ttableMetaData: { default: TB_PROVIDER_PROPERTIES.tableMetadata },\n\t\tneedUserConfirmationInput: { default: false },\n\t\tonDeleteSuccess: {\n\t\t\tdefault: () => {}\n\t\t},\n\t\tisDeleted: { default: false },\n\t\tshowDeleteSuccessInfo: { default: false },\n\t\tmeta: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tactualTableName: { default: '' },\n\t\t\t\t\tperspective: { default: '' },\n\t\t\t\t\trecordSysId: { default: '' },\n\t\t\t\t\tfieldName: { default: '' },\n\t\t\t\t\tisDataCheckRequired: { default: true }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import '@servicenow/now-modal';\nimport '@servicenow/now-input';\nimport '@servicenow/now-progress-bar';\nimport { t } from 'sn-translate';\nimport { getModalFooterButtons, getModalHeaderLabel } from './utils';\n\nconst renderInfoText = (\n\tshouldShowDeleteSuccessInfo,\n\tisTable,\n\tname,\n\tneedUserConfirmationInput,\n\tisRecord,\n\tisDeleting\n) => {\n\tlet confirmText = '';\n\tif (!isTable && !isRecord) {\n\t\tconfirmText = name\n\t\t\t? t(\n\t\t\t\t\t\"The field, '{0}', will be permanently deleted from this table and you will not be able to undo this change.\",\n\t\t\t\t\tname\n\t\t\t  )\n\t\t\t: t(\n\t\t\t\t\t'The field will be permanently deleted from this table and you will not be able to undo this change.'\n\t\t\t  );\n\t}\n\n\tif (shouldShowDeleteSuccessInfo)\n\t\tconfirmText = t(\"Your app no longer contains the table, '{0}'\", name);\n\telse if (isTable)\n\t\tconfirmText = t(\n\t\t\t\"The table, '{0}', will be permanently deleted and could affect this and other applications in unforeseen ways. \",\n\t\t\tname\n\t\t);\n\telse if (isRecord)\n\t\tconfirmText = t(\n\t\t\t\"The records on the table, '{0}' will be permanently deleted\",\n\t\t\tname\n\t\t);\n\tif (isRecord && isDeleting)\n\t\treturn (\n\t\t\t<now-progress-bar\n\t\t\t\tpathType='initial'\n\t\t\t\tsize='sm'\n\t\t\t\tconfigAria={{\n\t\t\t\t\tprogressbar: {\n\t\t\t\t\t\t'aria-label': t('Records are being deleted')\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\n\treturn (\n\t\t<div className='confirm-text'>\n\t\t\t{confirmText}\n\t\t\t{!shouldShowDeleteSuccessInfo && needUserConfirmationInput\n\t\t\t\t? t('Type {0} to confirm.', 'DELETE')\n\t\t\t\t: null}\n\t\t</div>\n\t);\n};\n\nconst renderUserConfirmationInput = (\n\tshouldShowDeleteSuccessInfo,\n\tneedUserConfirmationInput,\n\tuserInput,\n\tisTable,\n\tisRecord,\n\tisDeleting\n) => {\n\tif (shouldShowDeleteSuccessInfo || !needUserConfirmationInput) return null;\n\tif (isRecord && isDeleting) return null;\n\treturn (\n\t\t<div className='user-input'>\n\t\t\t<now-input\n\t\t\t\ttype='text'\n\t\t\t\tname='userInput'\n\t\t\t\tplaceholder={'DELETE'}\n\t\t\t\tvalue={userInput}\n\t\t\t\tautofocus\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default state => {\n\tconst { isDeleting, userInput } = state;\n\tconst {\n\t\tisTable,\n\t\tisDeleted,\n\t\tshowDeleteSuccessInfo,\n\t\tname,\n\t\tneedUserConfirmationInput,\n\t\tisRecord\n\t} = state.properties;\n\tconst userInputValid = userInput.toUpperCase() === 'DELETE';\n\tconst shouldShowDeleteSuccessInfo = isDeleted && showDeleteSuccessInfo;\n\n\treturn (\n\t\t<now-modal\n\t\t\topened\n\t\t\tmanage-opened\n\t\t\tsize='md'\n\t\t\theaderLabel={getModalHeaderLabel(\n\t\t\t\tshouldShowDeleteSuccessInfo,\n\t\t\t\tisTable,\n\t\t\t\tisRecord,\n\t\t\t\tisDeleting\n\t\t\t)}\n\t\t\tfooterActions={getModalFooterButtons(\n\t\t\t\tshouldShowDeleteSuccessInfo,\n\t\t\t\tneedUserConfirmationInput,\n\t\t\t\tuserInputValid,\n\t\t\t\tisDeleting,\n\t\t\t\tisRecord\n\t\t\t)}\n\t\t\tappend-to-payload={{ isTable, isRecord }}\n\t\t>\n\t\t\t{renderInfoText(\n\t\t\t\tshouldShowDeleteSuccessInfo,\n\t\t\t\tisTable,\n\t\t\t\tname,\n\t\t\t\tneedUserConfirmationInput,\n\t\t\t\tisRecord,\n\t\t\t\tisDeleting\n\t\t\t)}\n\t\t\t{renderUserConfirmationInput(\n\t\t\t\tshouldShowDeleteSuccessInfo,\n\t\t\t\tneedUserConfirmationInput,\n\t\t\t\tuserInput,\n\t\t\t\tisTable,\n\t\t\t\tisRecord,\n\t\t\t\tisDeleting\n\t\t\t)}\n\t\t</now-modal>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_progress_bar;","import { t } from 'sn-translate';\nimport { ACTION_TYPES } from './constants';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../sn-table-builder/constants';\n\nexport const getModalFooterButtons = (\n\tshouldShowDeleteSuccessInfo,\n\tneedUserConfirmationInput,\n\tuserInputValid,\n\tisDeleting,\n\tisRecord\n) => {\n\tif (isRecord && isDeleting) return null;\n\tif (shouldShowDeleteSuccessInfo)\n\t\treturn [\n\t\t\t{\n\t\t\t\tid: 'primary',\n\t\t\t\tsize: 'md',\n\t\t\t\tlabel: t('Done'),\n\t\t\t\tvariant: 'primary',\n\t\t\t\tclickActionType: ACTION_TYPES.CONFIRM_DELETE__DELETE_FINISHED\n\t\t\t}\n\t\t];\n\n\treturn [\n\t\t{\n\t\t\tid: 'primary',\n\t\t\tsize: 'md',\n\t\t\tvariant: 'primary-negative',\n\t\t\tlabel: t('Delete'),\n\t\t\tdisabled:\n\t\t\t\t(needUserConfirmationInput && !userInputValid) || isDeleting,\n\t\t\tclickActionType: ACTION_TYPES.CONFIRM_DELETE__DELETE_REQUESTED\n\t\t},\n\t\t{\n\t\t\tid: 'secondary',\n\t\t\tsize: 'md',\n\t\t\tvariant: 'tertiary',\n\t\t\tlabel: t('Cancel'),\n\t\t\tclickActionType: TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL\n\t\t}\n\t];\n};\n\nexport const getModalHeaderLabel = (\n\tshouldShowDeleteSuccessInfo,\n\tisTable,\n\tisRecord,\n\tisDeleting\n) => {\n\tif (shouldShowDeleteSuccessInfo) {\n\t\treturn t('This table has been deleted');\n\t} else if (isTable) {\n\t\treturn t('Are you sure you want to delete this table?');\n\t} else if (isRecord && isDeleting) {\n\t\treturn t('Records are being deleted');\n\t} else if (isRecord) {\n\t\treturn t('Are you sure you want to delete all records?');\n\t}\n\treturn t('Are you sure you want to delete this field?');\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.user-input{margin-block-start:1rem}now-input{display:block}\", \"\"]);\n\n// exports\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { ACTION_TYPES, STATUS_CODE_TO_ALLOW_FIELD_DELETION } from './constants';\nimport { ACTION_TYPES as GM_ACTION_TYPES } from '../../behaviors/grid-model/constants';\nimport {\n\tACTION_TYPES as TM_ACTION_TYPES,\n\tTRANSACTION_ACTIONS\n} from '../../behaviors/transaction-model/constants';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../sn-table-builder/constants';\nimport { ACTION_TYPES as ALERT_ACTIONS } from '../../behaviors/alerts';\nimport { t } from 'sn-translate';\nimport { AppEngineStudioAPI, isUnsavedRecord } from '../../commons/utils';\nimport { ERROR_ALERT, INFO_ALERT } from '../../commons/constants';\n\nconst onInputValueSet = ({ action, updateState }) => {\n\taction.stopPropagation();\n\n\tconst { value } = action.payload;\n\tupdateState({\n\t\tuserInput: value\n\t});\n};\n\nconst deleteRequested = coeffects => {\n\tconst { properties, updateState, dispatch } = coeffects;\n\tconst {\n\t\ttableName,\n\t\ttransactionScope,\n\t\tisTable,\n\t\tsysId,\n\t\tisRecord,\n\t\ttableMetaData: { name }\n\t} = properties;\n\n\tif (isTable) {\n\t\t//table deletion\n\t\tupdateState({ isDeleting: true });\n\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_INITIATED, {\n\t\t\tsysId,\n\t\t\ttableName,\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t});\n\t} else if (isRecord) {\n\t\t//table records deletion\n\t\tupdateState({ isDeleting: true });\n\t\tdispatch(ACTION_TYPES.DELETE_RECORDS_INITIATED, {\n\t\t\ttable: name,\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t});\n\t} else {\n\t\t//field-row deletion\n\t\tconst { meta } = properties;\n\t\tconst {\n\t\t\tactualTableName,\n\t\t\trecordSysId,\n\t\t\tfieldName,\n\t\t\tisDataCheckRequired\n\t\t} = meta;\n\n\t\tupdateState({ isDeleting: true });\n\t\tif (isUnsavedRecord(recordSysId)) {\n\t\t\t//delete newly created unsaved row\n\t\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_SUCCEEDED);\n\t\t} else {\n\t\t\t//delete saved row\n\t\t\tif (!isDataCheckRequired) {\n\t\t\t\t//delete field-row that doesn't need data check\n\t\t\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_INITIATED, {\n\t\t\t\t\tsysId: recordSysId,\n\t\t\t\t\ttableName,\n\t\t\t\t\tsysparm_transaction_scope: transactionScope\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_FIELD_DATA_CHECK, {\n\t\t\t\t\tactualTableName,\n\t\t\t\t\tsysparm_transaction_scope: transactionScope,\n\t\t\t\t\tsysparm_query: `${fieldName}ISNOTEMPTY`,\n\t\t\t\t\tsysparm_count: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst deleteAppFileEffect = createHttpEffect(\n\t'/api/now/table/:tableName/:sysId',\n\t{\n\t\tmethod: 'DELETE',\n\t\tpathParams: ['tableName', 'sysId'],\n\t\tqueryParams: ['sysparm_transaction_scope'],\n\t\tsuccessActionType: ACTION_TYPES.CONFIRM_DELETE__DELETE_SUCCEEDED,\n\t\terrorActionType: ACTION_TYPES.CONFIRM_DELETE__DELETE_FAILED,\n\t\tbatch: false\n\t}\n);\n\nconst deleteRequestSucceeded = ({\n\tproperties,\n\tdispatch,\n\tupdateState,\n\tupdateProperties\n}) => {\n\tconst {\n\t\tonDeleteSuccess,\n\t\tshowDeleteSuccessInfo,\n\t\tisTable,\n\t\tname\n\t} = properties;\n\n\tupdateState({ isDeleting: false });\n\tupdateProperties({ isDeleted: true });\n\n\tif (!showDeleteSuccessInfo)\n\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\n\tif (!isTable) {\n\t\tconst {\n\t\t\tmeta: { recordSysId }\n\t\t} = properties;\n\n\t\tdispatch(GM_ACTION_TYPES.GRID_MODEL__DELETE_ROW_FROM_MODEL, {\n\t\t\trecordSysId\n\t\t});\n\t\tdispatch(TM_ACTION_TYPES.TRANSACTION_MODEL__UI_TRANSACTION_LOG, {\n\t\t\taction: TRANSACTION_ACTIONS.GRID_ROW_DELETED,\n\t\t\trecordSysId\n\t\t});\n\n\t\tif (!isUnsavedRecord(recordSysId)) {\n\t\t\tconst content = name\n\t\t\t\t? t(\n\t\t\t\t\t\t\"The field, '{0}' has been permanently removed from this table.\",\n\t\t\t\t\t\tname\n\t\t\t\t  )\n\t\t\t\t: t('The field has been permanently removed from this table.');\n\n\t\t\tdispatch(ALERT_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\t\t\talerts: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tstatus: INFO_ALERT.STATUS,\n\t\t\t\t\t\ticon: INFO_ALERT.ICON\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tdispatch(GM_ACTION_TYPES.REFRESH_GRID);\n\t\t}\n\t}\n\tonDeleteSuccess();\n};\n\nconst deleteRequestFailed = ({\n\tproperties: { name },\n\tdispatch,\n\tupdateState\n}) => {\n\tupdateState({ isDeleting: false });\n\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\n\tconst content = t(\"We encountered an error while deleting '{0}' \", name);\n\n\tdispatch(ALERT_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [\n\t\t\t{\n\t\t\t\tcontent,\n\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t}\n\t\t]\n\t});\n};\n\nconst deleteFieldTableDataCheckFailed = ({ action, dispatch, properties }) => {\n\tconst { status } = action.payload;\n\tconst { tableName, transactionScope, meta } = properties;\n\tconst { recordSysId: sysId } = meta;\n\n\tif (status === STATUS_CODE_TO_ALLOW_FIELD_DELETION)\n\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_INITIATED, {\n\t\t\tsysId,\n\t\t\ttableName,\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t});\n\telse dispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_FAILED);\n};\n\nconst deleteFieldTableData = createHttpEffect(\n\t'/api/now/stats/:actualTableName',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['actualTableName'],\n\t\tqueryParams: [\n\t\t\t'sysparm_transaction_scope',\n\t\t\t'sysparm_query',\n\t\t\t'sysparm_count'\n\t\t],\n\t\tsuccessActionType: ACTION_TYPES.CONFIRM_DELETE__CAN_DELETE_FIELD,\n\t\terrorActionType:\n\t\t\tACTION_TYPES.CONFIRM_DELETE__DELETE_FIELD_DATA_CHECK_FAILED,\n\t\tbatch: false\n\t}\n);\n\nconst canDeleteField = ({ action, dispatch, properties }) => {\n\tconst { result } = action.payload;\n\tconst { tableName, transactionScope, meta } = properties;\n\tconst { recordSysId: sysId } = meta;\n\n\tif (result.stats.count > 0) {\n\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__CANNOT_DELETE_FIELD);\n\t} else {\n\t\tdispatch(ACTION_TYPES.CONFIRM_DELETE__DELETE_INITIATED, {\n\t\t\tsysId,\n\t\t\ttableName,\n\t\t\tsysparm_transaction_scope: transactionScope\n\t\t});\n\t}\n};\n\nconst cannotDeleteField = ({ dispatch, properties, updateState }) => {\n\tconst { name } = properties;\n\tupdateState({ isDeleting: false });\n\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\n\tconst header = t('Cannot delete field ');\n\tconst content = name\n\t\t? t(\n\t\t\t\t\"There is at least one record in this table that has data in this field, '{0}'. As a result this field cannot be deleted. Please remove all records that have data in this field before deleting.\",\n\t\t\t\tname\n\t\t  )\n\t\t: t(\n\t\t\t\t'There is at least one record in this table that has data in this field. As a result this field cannot be deleted. Please remove all records that have data in this field before deleting.'\n\t\t  );\n\n\tdispatch(ALERT_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [\n\t\t\t{\n\t\t\t\theader,\n\t\t\t\tcontent,\n\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t}\n\t\t]\n\t});\n};\n\nconst deleteRecordsInitiated = createHttpEffect(\n\t'/api/sn_table_builder/app/delete_records/:table',\n\t{\n\t\tmethod: 'POST',\n\t\tpathParams: ['table'],\n\t\tqueryParams: ['sysparm_transaction_scope'],\n\t\tsuccessActionType: ACTION_TYPES.DELETE_RECORDS_SUCCEEDED,\n\t\terrorActionType: ACTION_TYPES.DELETE_RECORDS_FAILED,\n\t\tbatch: false\n\t}\n);\n\nconst deleteRecordsSucceeded = ({\n\tupdateProperties,\n\tupdateState,\n\tdispatch\n}) => {\n\tupdateState({ isDeleting: false });\n\n\tupdateProperties({ isDeleted: true });\n\n\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\n\tconst message = t('Records have been deleted');\n\tdispatch(ALERT_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [\n\t\t\t{\n\t\t\t\tcontent: message,\n\t\t\t\tstatus: INFO_ALERT.STATUS,\n\t\t\t\ticon: INFO_ALERT.ICON\n\t\t\t}\n\t\t]\n\t});\n};\n\nconst deleteRecordsFailed = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { message }\n\t\t},\n\t\tdispatch,\n\t\tupdateState\n\t} = coeffects;\n\n\tupdateState({ isDeleting: false });\n\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\n\tdispatch(ALERT_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [\n\t\t\t{\n\t\t\t\tcontent: message,\n\t\t\t\tstatus: ERROR_ALERT.STATUS,\n\t\t\t\ticon: ERROR_ALERT.ICON\n\t\t\t}\n\t\t]\n\t});\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.NOW_INPUT__VALUE_SET]: onInputValueSet,\n\t[ACTION_TYPES.NOW_MODAL__OPENED_SET]: ({\n\t\taction,\n\t\tproperties,\n\t\tdispatch\n\t}) => {\n\t\taction.stopPropagation();\n\t\tconst { isDeleted, isDeleting, isRecord } = properties;\n\n\t\tif (!(isRecord && isDeleting)) {\n\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\t\t\t/*istanbul ignore if*/\n\t\t\tif (isDeleted) new AppEngineStudioAPI().closeCurrentTab();\n\t\t}\n\t},\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_REQUESTED]: deleteRequested,\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_INITIATED]: deleteAppFileEffect,\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_SUCCEEDED]: deleteRequestSucceeded,\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_FAILED]: deleteRequestFailed,\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_FIELD_DATA_CHECK]: deleteFieldTableData,\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_FIELD_DATA_CHECK_FAILED]: deleteFieldTableDataCheckFailed,\n\t[ACTION_TYPES.CONFIRM_DELETE__CAN_DELETE_FIELD]: canDeleteField,\n\t[ACTION_TYPES.CONFIRM_DELETE__CANNOT_DELETE_FIELD]: cannotDeleteField,\n\n\t[ACTION_TYPES.CONFIRM_DELETE__DELETE_FINISHED]: /* istanbul ignore next */ ({\n\t\tdispatch\n\t}) => {\n\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\t\tnew AppEngineStudioAPI().closeCurrentTab();\n\t},\n\t[ACTION_TYPES.DELETE_RECORDS_INITIATED]: deleteRecordsInitiated,\n\t[ACTION_TYPES.DELETE_RECORDS_SUCCEEDED]: deleteRecordsSucceeded,\n\t[ACTION_TYPES.DELETE_RECORDS_FAILED]: deleteRecordsFailed\n};\n","import './sn-tb-confirm';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport { t } from 'sn-translate';\nimport { actionHandlers } from './actions';\nimport '@servicenow/now-modal';\n\ncreateCustomElement('sn-tb-confirm', {\n\trenderer: { type: snabbdom },\n\tproperties: {\n\t\theaderLabel: {\n\t\t\tdefault: t('Confirmation'),\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tcontent: {\n\t\t\tdefault: t('Click Ok to confirm'),\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tsize: {\n\t\t\tdefault: 'md',\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tprimaryText: {\n\t\t\tdefault: t('Ok'),\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tsecondaryText: {\n\t\t\tdefault: t('Cancel'),\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\tprimaryHandler: { default: null },\n\t\tsecondayHandler: { default: null }\n\t},\n\tview: ({ properties }) => {\n\t\tconst {\n\t\t\tprimaryText,\n\t\t\tsecondaryText,\n\t\t\theaderLabel,\n\t\t\tcontent,\n\t\t\tsize\n\t\t} = properties;\n\t\treturn (\n\t\t\t<now-modal\n\t\t\t\topened\n\t\t\t\tmanage-opened\n\t\t\t\tsize={size}\n\t\t\t\theaderLabel={headerLabel}\n\t\t\t\tfooterActions={[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'primary',\n\t\t\t\t\t\tvariant: 'primary',\n\t\t\t\t\t\tlabel: primaryText\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'secondary',\n\t\t\t\t\t\tvariant: 'tertiary',\n\t\t\t\t\t\tlabel: secondaryText\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t</now-modal>\n\t\t);\n\t},\n\tactionHandlers\n});\n","import { ACTION_TYPES as TB_ACTION_TYPES } from '../sn-table-builder/constants';\n\nexport const actionHandlers = {\n\t['NOW_MODAL#FOOTER_ACTION_CLICKED']: {\n\t\teffect: ({ action, properties, dispatch }) => {\n\t\t\tconst {\n\t\t\t\taction: { id }\n\t\t\t} = action.payload;\n\t\t\tconst { primaryHandler = () => {} } = properties;\n\t\t\tconst {\n\t\t\t\tsecondaryHandler = () => {\n\t\t\t\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\t\t\t\t}\n\t\t\t} = properties;\n\n\t\t\tif (id === 'primary') primaryHandler();\n\t\t\telse if (id === 'secondary') secondaryHandler();\n\t\t},\n\t\tstopPropagation: true\n\t}\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-tb-header-btn-grp{flex:1;display:flex;text-align:right;align-items:center;justify-content:flex-end;padding:.5rem 0}.sn-tb-header-btn-grp>*{margin-inline-start:.5rem}.sn-tb-header-title{flex:1;display:flex;align-items:center}.sn-tb-header-title img{padding-inline-end:1.5rem;height:2rem}.sn-tb-header-title .header-title{font-weight:800;font-size:2rem;font-family:var(--now-font-family,var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif));color:RGBA(var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)));margin:0}.sn-tb-header{border-bottom:1px solid RGB(var(--now-color--neutral-3,209,214,214));padding:.25rem 1.5rem}.loading-content,.sn-tb-header{display:flex;align-items:center}.loading-content{height:100%;justify-content:center;width:100%;flex-direction:column}.loading-container{background:RGBA(var(--now-color--neutral-0,255,255,255),.8);position:fixed;top:0;left:0;right:0;bottom:0;height:100%;width:100%;z-index:10}.read-only-info{padding-inline-start:.5rem}\", \"\"]);\n\n// exports\n","import { t } from 'sn-translate';\nimport {\n\tACTION_TYPES,\n\tDELETE_ACTION_ID,\n\tADVANCE_ACTION_ID,\n\tDELETE_RECORDS_ACTION_ID,\n\tTABLE_DELETE_VALIDATION_API_PATH,\n\tEDIT_FORM_ACTION_ID,\n\tREFRESH_FIELDS_ACTION_ID\n} from './constants';\nimport { ACTION_TYPES as TBP_ACTION_TYPES } from '../sn-tb-properties/constants';\nimport { ACTION_TYPES as TB_ACTION_TYPES } from '../sn-table-builder/constants';\nimport { ACTION_TYPES as GRID_ACTIONS } from '../../behaviors/grid-model/constants';\nimport {\n\tACTION_TYPES as TRANSACTION_ACTIONS,\n\tGRID_TRANSACTIONS\n} from '../../behaviors/transaction-model/constants';\nimport {\n\tAppEngineStudioAPI,\n\tgetTableUrlForPlatform\n} from '../../commons/utils';\nimport { TABLES, ERROR_ALERT } from '../../commons/constants';\nimport { getPreviewUrl, getFormDesignerUrl } from './utils';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { ACTION_TYPES as ALERTS_ACTIONS } from '../../behaviors/alerts';\n\nconst hideTableProperties = ({ updateState }) => {\n\tupdateState({ showTableProperties: false });\n};\n\nconst tableDeleteValidationInitiated = createHttpEffect(\n\tTABLE_DELETE_VALIDATION_API_PATH,\n\t{\n\t\tpathParams: ['table'],\n\t\tqueryParams: ['sysparm_transaction_scope'],\n\t\tbatch: false,\n\t\tstartActionType: ACTION_TYPES.TABLE_DELETE_VALIDATION_STARTED,\n\t\tsuccessActionType: ACTION_TYPES.TABLE_DELETE_VALIDATION_SUCCEEDED,\n\t\terrorActionType: ACTION_TYPES.TABLE_DELETE_VALIDATION_FAILED\n\t}\n);\n\nconst tableDeleteValidationStarted = ({ dispatch }) => {\n\tdispatch(GRID_ACTIONS.SHOW_GRID_LOADER);\n};\n\nconst tableDeleteValidationSucceeded = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { result },\n\t\t\tmeta: { tableMetadata, sysId }\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\n\tif (!result.isExtended) {\n\t\tdispatch(\n\t\t\tTB_ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL,\n\t\t\t/*istanbul ignore next */ {\n\t\t\t\ttemplate: () => (\n\t\t\t\t\t<sn-tb-confirm-delete\n\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\tname={tableMetadata.label}\n\t\t\t\t\t\tneedUserConfirmationInput={true}\n\t\t\t\t\t\ttableName={TABLES.SYS_DB_OBJECT}\n\t\t\t\t\t\tsysId={sysId}\n\t\t\t\t\t\tshowDeleteSuccessInfo={true}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\t} else {\n\t\tconst extendedTables = result.tables;\n\t\tlet content;\n\t\tif (extendedTables.length > 1) {\n\t\t\tcontent = t(\n\t\t\t\t`{0} table cannot be deleted because it is extended by multiple tables.`,\n\t\t\t\ttableMetadata.name\n\t\t\t);\n\t\t} else {\n\t\t\tcontent = t(\n\t\t\t\t`{0} table cannot be deleted because the table {1} is extending it.`,\n\t\t\t\ttableMetadata.name,\n\t\t\t\textendedTables\n\t\t\t);\n\t\t}\n\n\t\tconst status = ERROR_ALERT.STATUS;\n\t\tconst icon = ERROR_ALERT.ICON;\n\t\tdispatch(ALERTS_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\t\talerts: [{ content, status, icon }]\n\t\t});\n\t}\n\n\tdispatch(GRID_ACTIONS.HIDE_GRID_LOADER);\n};\n\nconst tableDeleteValidationFailed = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: { result }\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\n\tconst content = result.message;\n\tconst status = ERROR_ALERT.STATUS;\n\tconst icon = ERROR_ALERT.ICON;\n\tdispatch(ALERTS_ACTIONS.TB_ALERTS__ADD_ALERTS, {\n\t\talerts: [{ content, status, icon }]\n\t});\n\tdispatch(GRID_ACTIONS.HIDE_GRID_LOADER);\n};\n\nexport const actionHandlers = {\n\t[TBP_ACTION_TYPES.TABLE_PROPERTIES__MODAL_CLOSED]: hideTableProperties,\n\t[ACTION_TYPES.NOW_DROPDOWN__ITEM_CLICKED]: ({ action, dispatch }) => {\n\t\tconst {\n\t\t\tpayload: {\n\t\t\t\titem: { id }\n\t\t\t}\n\t\t} = action;\n\t\tswitch (id) {\n\t\t\tcase ADVANCE_ACTION_ID: {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__ADVANCED_CLICKED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DELETE_ACTION_ID: {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__DELETE_CLICKED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DELETE_RECORDS_ACTION_ID: {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__DELETE_RECORDS_CLICKED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase EDIT_FORM_ACTION_ID: {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__EDIT_FORM_CLICKED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase REFRESH_FIELDS_ACTION_ID: {\n\t\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__REFRESH_FIELDS_CLICKED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t},\n\t[ACTION_TYPES.SN_TB_HEADER__ADVANCED_CLICKED]: /* istanbul ignore next because cannot test AppEngineStudioAPI*/ ({\n\t\tproperties\n\t}) => {\n\t\tconst {\n\t\t\tisInAppEngineStudio,\n\t\t\ttransactionScope,\n\t\t\tsysId,\n\t\t\ttableMetadata: { label: title }\n\t\t} = properties;\n\t\tconst subtitle = t('Table - Advanced');\n\t\tconst url = getTableUrlForPlatform(sysId, transactionScope);\n\t\tconst id = `advance-${sysId}-tab`;\n\t\tif (isInAppEngineStudio) {\n\t\t\tnew AppEngineStudioAPI().openAppEngineStudioTab({\n\t\t\t\ttitle,\n\t\t\t\tsubtitle,\n\t\t\t\turl,\n\t\t\t\tid\n\t\t\t});\n\t\t} else {\n\t\t\twindow.open(url, id);\n\t\t}\n\t},\n\t[ACTION_TYPES.SN_TB_HEADER__DELETE_CLICKED]: ({ properties, dispatch }) => {\n\t\tconst { sysId, tableMetadata, transactionScope } = properties;\n\n\t\tdispatch(\n\t\t\tACTION_TYPES.TABLE_DELETE_VALIDATION_INITIATED,\n\t\t\t{\n\t\t\t\ttable: tableMetadata.name,\n\t\t\t\tsysparm_transaction_scope: transactionScope\n\t\t\t},\n\t\t\t{ tableMetadata, sysId }\n\t\t);\n\t},\n\t[ACTION_TYPES.SN_TB_HEADER__PREVIEW_CLICKED]: /* istanbul ignore next because cannot test AppEngineStudioAPI*/ ({\n\t\tproperties\n\t}) => {\n\t\tconst {\n\t\t\tisInAppEngineStudio,\n\t\t\tsysId,\n\t\t\ttableMetadata: { label: title, name }\n\t\t} = properties;\n\t\tconst subtitle = t('Preview - {0}', title);\n\t\tconst url = getPreviewUrl(name);\n\t\tconst id = `preview-${sysId}-tab`;\n\t\tif (isInAppEngineStudio) {\n\t\t\tnew AppEngineStudioAPI().openAppEngineStudioTab({\n\t\t\t\ttitle,\n\t\t\t\tsubtitle,\n\t\t\t\turl,\n\t\t\t\tid\n\t\t\t});\n\t\t} else {\n\t\t\twindow.open(url, id);\n\t\t}\n\t},\n\t[ACTION_TYPES.SN_TB_HEADER__DELETE_RECORDS_CLICKED]: ({\n\t\tproperties,\n\t\tdispatch\n\t}) => {\n\t\tconst { sysId, tableMetadata } = properties;\n\n\t\tdispatch(\n\t\t\tTB_ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL,\n\t\t\t/*istanbul ignore next */ {\n\t\t\t\ttemplate: () => (\n\t\t\t\t\t<sn-tb-confirm-delete\n\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\tisRecord={true}\n\t\t\t\t\t\tname={tableMetadata.label}\n\t\t\t\t\t\tneedUserConfirmationInput={true}\n\t\t\t\t\t\ttableName={TABLES.SYS_DB_OBJECT}\n\t\t\t\t\t\tsysId={sysId}\n\t\t\t\t\t\tshowDeleteSuccessInfo={true}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\t},\n\t[ACTION_TYPES.TABLE_DELETE_VALIDATION_INITIATED]: tableDeleteValidationInitiated,\n\t[ACTION_TYPES.TABLE_DELETE_VALIDATION_STARTED]: tableDeleteValidationStarted,\n\t[ACTION_TYPES.TABLE_DELETE_VALIDATION_SUCCEEDED]: tableDeleteValidationSucceeded,\n\t[ACTION_TYPES.TABLE_DELETE_VALIDATION_FAILED]: tableDeleteValidationFailed,\n\n\t[ACTION_TYPES.SN_TB_HEADER__EDIT_FORM_CLICKED]: /* istanbul ignore next because cannot test AppEngineStudioAPI*/ ({\n\t\tproperties\n\t}) => {\n\t\tconst {\n\t\t\tisInAppEngineStudio,\n\t\t\tsysId,\n\t\t\ttableMetadata: { label: title, name }\n\t\t} = properties;\n\t\tconst subtitle = t('Edit form - {0}', title);\n\t\tconst url = getFormDesignerUrl(name);\n\t\tconst id = `edit-form-${sysId}-tab`;\n\t\tif (isInAppEngineStudio) {\n\t\t\tnew AppEngineStudioAPI().openAppEngineStudioTab({\n\t\t\t\ttitle,\n\t\t\t\tsubtitle,\n\t\t\t\turl,\n\t\t\t\tid\n\t\t\t});\n\t\t} else {\n\t\t\twindow.open(url, id);\n\t\t}\n\t},\n\t[ACTION_TYPES.SN_TB_HEADER__REFRESH_FIELDS_CLICKED]: ({\n\t\tproperties,\n\t\tdispatch\n\t}) => {\n\t\tconst { isTransactionModelDirty } = properties;\n\n\t\tif (isTransactionModelDirty) {\n\t\t\tdispatch(\n\t\t\t\tTB_ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL,\n\t\t\t\t/*istanbul ignore next */ {\n\t\t\t\t\ttemplate: () => (\n\t\t\t\t\t\t<sn-tb-confirm\n\t\t\t\t\t\t\theaderLabel={t('Refresh fields without saving?')}\n\t\t\t\t\t\t\tcontent={t(\n\t\t\t\t\t\t\t\t'Your changes will be lost if you refresh now.'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tprimaryText={t('Yes, refresh')}\n\t\t\t\t\t\t\tsecondaryText={t('No, keep working')}\n\t\t\t\t\t\t\tprimaryHandler={() =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tACTION_TYPES.SN_TB_HEADER__REFRESH_FIELDS_INITIATED\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(ACTION_TYPES.SN_TB_HEADER__REFRESH_FIELDS_INITIATED);\n\t\t}\n\t},\n\t[ACTION_TYPES.SN_TB_HEADER__REFRESH_FIELDS_INITIATED]: ({ dispatch }) => {\n\t\tdispatch(TB_ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\t\tdispatch(TRANSACTION_ACTIONS.TRANSACTION_MODEL__UI_TRANSACTION_PRUNE, {\n\t\t\ttype: GRID_TRANSACTIONS\n\t\t});\n\t\tdispatch(GRID_ACTIONS.REFRESH_GRID);\n\t}\n};\n","import { t } from 'sn-translate';\nimport { AddNewGridItem } from '../add-new-grid-item/view';\nimport { ACTION_TYPES } from '../../behaviors/grid-model';\nimport { FILTER_NON_EXTENDED } from '../../behaviors/filter-model/constants';\nimport '@servicenow/now-checkbox';\n\nexport const TopSection = ({\n\tdispatch,\n\tshowNonExtended,\n\tenableNonExtendedFilter,\n\tisGridDataFetching,\n\tisTableInReadOnly\n}) => {\n\treturn (\n\t\t<div className='tb-top-section'>\n\t\t\t<div className='primary-group'>\n\t\t\t\t<p className='title'>{t('Table Fields')}</p>\n\t\t\t\t<AddNewGridItem\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tactionName={ACTION_TYPES.GRID_MODEL__NEW_ROW_BTN_CLICKED}\n\t\t\t\t\tlabel={t('Add new field')}\n\t\t\t\t\tbare={true}\n\t\t\t\t\torientation='horizontal'\n\t\t\t\t\tborderRadius={[]}\n\t\t\t\t\tisTableInReadOnly={isTableInReadOnly}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='secondary-group'>\n\t\t\t\t{enableNonExtendedFilter ? (\n\t\t\t\t\t<now-checkbox\n\t\t\t\t\t\tname='show-non-extended'\n\t\t\t\t\t\tlabel={t('Show non extended table fields')}\n\t\t\t\t\t\tchecked={showNonExtended}\n\t\t\t\t\t\tdisabled={isGridDataFetching}\n\t\t\t\t\t\tappend-to-meta={{ category: FILTER_NON_EXTENDED }}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".add-new-btn{background-color:RGB(var(--now-color--neutral-1,246,247,247));padding:.75rem;overflow:hidden;text-align:center;border:1px dashed RGB(var(--now-color--neutral-5,172,180,181));border-radius:0;color:RGB(var(--now-color--secondary-1,1,119,142));cursor:pointer;font-size:.75rem;display:flex;justify-content:center;align-items:center}.add-new-btn::-moz-focus-inner{border-style:none}.add-new-btn:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25);outline:none}.add-new-btn.-radius-top-left{border-top-left-radius:.5rem;-webkit-border-top-left-radius:.5rem;-moz-border-radius-topleft:.5rem}.add-new-btn.-radius-top-right{border-top-right-radius:.5rem;-webkit-border-top-right-radius:.5rem;-moz-border-radius-topright:.5rem}.add-new-btn.-radius-bottom-left{border-bottom-left-radius:.5rem;-webkit-border-bottom-left-radius:.5rem;-moz-border-radius-bottomleft:.5rem}.add-new-btn.-radius-bottom-right{border-bottom-right-radius:.5rem;-webkit-border-bottom-right-radius:.5rem;-moz-border-radius-bottomright:.5rem}.add-new-btn.-align-left{border-right:0}.add-new-btn.-align-bottom{border-top:0}.add-new-btn.-align-right{border-left:0}.add-new-btn.-align-top{border-bottom:0}.add-new-btn.is-bare{background-color:transparent;border:none;padding:.25rem}.add-new-btn label{cursor:inherit}.add-new-btn.is-horizontal{flex-direction:row}.add-new-btn.is-horizontal label{margin-inline-start:.5rem}.add-new-btn.is-vertical{flex-direction:column}.add-new-btn.is-vertical label{margin-top:.5rem}.tb-top-section{padding:1rem 1.5rem;background:RGB(var(--now-color--neutral-1,246,247,247));display:flex;align-items:center}.tb-top-section .title{padding-inline-end:1rem;margin:0;font-weight:700;font-size:1rem;font-family:var(--now-font-family,var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif));color:RGB(var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)))}.tb-top-section .primary-group,.tb-top-section .secondary-group{flex:1;display:flex;align-items:center}.tb-top-section .secondary-group{justify-content:flex-end}:host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}now-pagination-control{padding-block-start:.75rem}.now-loader-container{position:absolute;z-index:11;display:flex;align-items:center;justify-content:center;height:100%;width:100%;background-color:RGBA(var(--now-color--neutral-0,255,255,255),.65)}.grid-wrapper{height:100%;display:flex;flex-direction:column}sn-tb-grid{flex:1;overflow:hidden;display:flex}.grid-wrapper-overlay{position:relative;min-height:20.5rem;max-height:calc(100% - 6.5625rem);display:flex;flex-direction:column}\", \"\"]);\n\n// exports\n","import { actionTypes } from '@servicenow/ui-core';\nimport {\n\tACTION_TYPES as GRID_MODEL_ACTION_TYPES,\n\tIS_GRID_DATA_FETCHED\n} from '../../behaviors/grid-model';\nimport { IS_TBS_DATA_FETCHED } from '../../behaviors/table-structure-data';\n\nconst { COMPONENT_PROPERTY_CHANGED, COMPONENT_DOM_READY } = actionTypes;\n\nconst checkDataFetchingStatus = coeffects => {\n\tconst {\n\t\tproperties: { isTableStructureFetched, isGridDataFetched },\n\t\taction: {\n\t\t\tpayload: { name: propertyName }\n\t\t},\n\t\tdispatch\n\t} = coeffects;\n\n\tif (\n\t\t[IS_TBS_DATA_FETCHED, IS_GRID_DATA_FETCHED].includes(propertyName) &&\n\t\tisTableStructureFetched &&\n\t\tisGridDataFetched\n\t) {\n\t\t// table structure and grid data fetching is completed\n\t\tdispatch(GRID_MODEL_ACTION_TYPES.GRID_MODEL__TRANSFORM_GRID_MODEL);\n\t}\n};\n\nconst initiateFetchGridData = ({ dispatch, properties }) => {\n\tconst { sysId, perspective, transactionScope } = properties;\n\n\tdispatch(GRID_MODEL_ACTION_TYPES.GRID_MODEL__FETCH_GRID_DATA_INITIATED, {\n\t\tsysId,\n\t\tperspective,\n\t\tsysparm_transaction_scope: transactionScope\n\t});\n};\n\nexport const actionHandlers = {\n\t[COMPONENT_DOM_READY]: initiateFetchGridData,\n\t[COMPONENT_PROPERTY_CHANGED]: {\n\t\t// debounce is needed to run property changed effect only once when multiple properties got changed simultaneously\n\t\tmodifier: { name: 'debounce', delay: 10 },\n\t\teffect: checkDataFetchingStatus\n\t}\n};\n","import './sn-tb-welcome';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport { actionHandlers } from './actions';\nimport { SCREENS_INFO } from './constants';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-tb-welcome', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\tmodalOpen: true,\n\t\tscreenNumber: 0,\n\t\tscreens: SCREENS_INFO\n\t},\n\tview,\n\tstyles,\n\tactionHandlers\n});\n","import '@servicenow/now-modal';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-heading';\nimport { TbIcon } from '../../partials/table-icon/view';\nimport { t } from 'sn-translate';\nimport { getModalFooterButtons } from './utils';\n\nconst renderModalBody = (screenNumber, screens) => {\n\tconst data = screens[screenNumber];\n\n\treturn (\n\t\t<div className='modal-body'>\n\t\t\t<now-heading label={data.label} level='1' variant='title-primary' />\n\t\t\t<div className='icon-group'>\n\t\t\t\t{renderIcons(screenNumber, screens.length)}\n\t\t\t</div>\n\t\t\t<div className='image'>\n\t\t\t\t<TbIcon image={data.image} type='jpg' />\n\t\t\t</div>\n\t\t\t<div className='modal-description'>{data.description}</div>\n\t\t</div>\n\t);\n};\n\nconst renderIcons = (screenNumber, noOfScreens) => {\n\tlet icons = [];\n\n\tfor (let i = 0; i < noOfScreens; i++) {\n\t\tif (i !== screenNumber)\n\t\t\ticons.push(<now-icon icon='circle-outline' size='md' />);\n\t\telse icons.push(<now-icon icon='circle-fill' size='md' />);\n\t}\n\n\treturn icons;\n};\n\nexport default state => {\n\tconst { screenNumber, modalOpen, screens } = state;\n\n\treturn (\n\t\t<div className='sn-tb-welcome'>\n\t\t\t<now-modal\n\t\t\t\tsize='md'\n\t\t\t\theaderLabel={t('INTRODUCTION')}\n\t\t\t\tfooterActions={getModalFooterButtons(screenNumber, screens)}\n\t\t\t\topened={modalOpen}\n\t\t\t>\n\t\t\t\t{renderModalBody(screenNumber, screens)}\n\t\t\t</now-modal>\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_heading;","import { ACTION_TYPES } from './constants';\n\nexport const getModalFooterButtons = (screenNumber, screens) => {\n\tconst footerButtons = screens[screenNumber].footerButtons;\n\n\tif (footerButtons.length === 1)\n\t\treturn [\n\t\t\t{\n\t\t\t\tid: `${footerButtons}`,\n\t\t\t\tvariant: 'primary',\n\t\t\t\tlabel: `${footerButtons}`,\n\t\t\t\tdisabled: false,\n\t\t\t\tclickActionType: ACTION_TYPES.NOW_MODAL_FOOTER_ACTION_CLICKED\n\t\t\t}\n\t\t];\n\n\treturn [\n\t\t{\n\t\t\tid: `${footerButtons[0]}`,\n\t\t\tvariant: 'primary',\n\t\t\tlabel: `${footerButtons[0]}`,\n\t\t\tdisabled: false,\n\t\t\tclickActionType: ACTION_TYPES.NOW_MODAL_FOOTER_ACTION_CLICKED\n\t\t},\n\t\t{\n\t\t\tid: `${footerButtons[1]}`,\n\t\t\tvariant: 'tertiary',\n\t\t\tlabel: `${footerButtons[1]}`,\n\t\t\tdisabled: false,\n\t\t\tclickActionType: ACTION_TYPES.NOW_MODAL_FOOTER_ACTION_CLICKED\n\t\t}\n\t];\n};\n","import {\n\tACTION_TYPES,\n\tBUTTON_GET_STARTED,\n\tBUTTON_NEXT,\n\tBUTTON_PREVIOUS,\n\tWELCOME_SCREEN_PREFERENCE_KEY\n} from './constants';\nimport { ACTION_TYPES as TUD_ACTION_TYPES } from '../../behaviors/user-data/constants';\n\nexport const footerActionClicked = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst { label } = action.payload.footerAction;\n\tconst { screenNumber } = state;\n\n\tswitch (label) {\n\t\tcase BUTTON_NEXT:\n\t\t\tupdateState({ screenNumber: screenNumber + 1 });\n\t\t\tbreak;\n\t\tcase BUTTON_PREVIOUS:\n\t\t\tupdateState({ screenNumber: screenNumber - 1 });\n\t\t\tbreak;\n\t\tcase BUTTON_GET_STARTED:\n\t\t\tupdateState({ modalOpen: false });\n\t\t\tdispatch(ACTION_TYPES.UPDATE_WELCOME_PREFERENCE, { value: true });\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nexport const modalClosed = ({ updateState, dispatch }) => {\n\tupdateState({ modalOpen: false });\n\tdispatch(ACTION_TYPES.UPDATE_WELCOME_PREFERENCE, { value: false });\n};\n\nexport const updateWelcomePreference = ({ dispatch, action }) => {\n\tconst { value } = action.payload;\n\tconst preferences = {\n\t\tname: WELCOME_SCREEN_PREFERENCE_KEY,\n\t\tvalue\n\t};\n\n\tdispatch(TUD_ACTION_TYPES.USER_DATA__UPDATE_PREF, { preferences });\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.NOW_MODAL_FOOTER_ACTION_CLICKED]: footerActionClicked,\n\t[ACTION_TYPES.NOW_MODAL_OPENED_SET]: modalClosed,\n\t[ACTION_TYPES.UPDATE_WELCOME_PREFERENCE]: updateWelcomePreference\n};\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.icon-group{padding-top:.5rem;display:flex;justify-content:center}now-icon{padding-inline-end:.5rem}.image{padding:.5rem 0;display:flex;justify-content:center}.modal-description{min-height:3.75rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:block;padding:0 1.5rem;flex:1;overflow:auto;background-color:#f7f8f8}\", \"\"]);\n\n// exports\n","module.exports = __TECTONIC__$servicenow_now_alert;","\n        var result = require(\"!!../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-table-builder{height:100%;min-width:80rem;overflow:auto}.sn-table-builder.-block-ui-events{pointer-events:none}now-alert-list{position:fixed;top:2.25rem;right:0;left:0;z-index:3000;max-width:42.375rem;margin-inline-start:auto;margin-inline-end:auto}\", \"\"]);\n\n// exports\n","import { ACTION_TYPES } from './constants';\n\nconst blockUIEvents = ({ action, updateState }) => {\n\tconst { payload: { shouldBlock = true } = {} } = action;\n\tupdateState({\n\t\tblockUIEvents: shouldBlock\n\t});\n};\n\nconst showModal = ({ action: { payload }, updateState }) => {\n\tupdateState({\n\t\tModalComponent: payload.template\n\t});\n};\n\nconst hideModal = ({ updateState }) => {\n\tupdateState({\n\t\tModalComponent: null\n\t});\n};\n\nexport const actionHandlers = {\n\t[ACTION_TYPES.TABLE_BUILDER__BLOCK_UI_EVENTS]: blockUIEvents,\n\t[ACTION_TYPES.TABLE_BUILDER__SHOW_MODAL]: showModal,\n\t[ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL]: hideModal,\n\t[ACTION_TYPES.NOW_MODAL__OPENED_SET]: ({ action, dispatch }) => {\n\t\tconst { payload } = action;\n\t\tif (!payload.value) dispatch(ACTION_TYPES.TABLE_BUILDER__HIDE_MODAL);\n\t}\n};\n"],"sourceRoot":""}