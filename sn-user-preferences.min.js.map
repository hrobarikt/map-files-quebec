{"version":3,"sources":["webpack://__TECTONIC__sn_user_preferences/webpack/bootstrap","webpack://__TECTONIC__sn_user_preferences/./src/constants.js","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__sn_user_preferences/./src/behavior.js","webpack://__TECTONIC__sn_user_preferences/./src/provider.js","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__sn_user_preferences/./src/utils.js","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__lodash_4_17_4[\\\"get\\\"]\"","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__sn_uxpage_presource_18_0_3_rc_1\"","webpack://__TECTONIC__sn_user_preferences/./src/examples/showRibbonExample.js","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__$servicenow_ui_effect_update_state\"","webpack://__TECTONIC__sn_user_preferences/./src/examples/setPreferenceExample.js","webpack://__TECTONIC__sn_user_preferences/./src/examples/index.js","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__sn_user_preferences/./src/effects.js","webpack://__TECTONIC__sn_user_preferences/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__sn_user_preferences/./src/defaults.js","webpack://__TECTONIC__sn_user_preferences/./src/providerElement.js","webpack://__TECTONIC__sn_user_preferences/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","USER_PREF_BEHAVIOR","USER_PREF_PROPERTY","USER_PREF_PROVIDER","USER_PREF_PROVIDER_LOADED","USER_PREF_UPDATE_STARTED","USER_PREF_UPDATE_SUCCEEDED","USER_PREF_UPDATE_FAILED","USER_PREF_UPDATE_ERROR","USER_PREF_UPDATE","USER_PREF_MULTI_UPDATE","PROPERTIES_SET","__TECTONIC__$servicenow_ui_renderer_snabbdom","_constants","_effects","_provider","userPreferencesBehavior","properties","[object Object]","default","setupProvider","actionHandlers","userPreferences","provider","document","getElementById","createElement","setAttribute","id","body","appendChild","updateProviderPreferences","userPrefs","userPreferencesNew","forEach","prefIdx","findIndex","_extends","push","setPreferences","__TECTONIC__$servicenow_ui_core","getUserPreferences","state","_get2","getUserPreference","defValue","length","userPref","find","setUserPreference","dispatch","__TECTONIC__lodash_4_17_4","__TECTONIC__sn_uxpage_presource_18_0_3_rc_1","_uiCore","_behavior","_utils","createCustomElement","renderer","type","snabbdom","view","_uiRendererSnabbdom","behaviors","__TECTONIC__$servicenow_ui_effect_update_state","_uiEffectUpdateState","userPrefUpdate","map","for","on-input","event","target","on-click","preventDefault","initialState","PREF_INPUT","createUpdateStateEffect","payload","__TECTONIC__$servicenow_ui_effect_graphql","_uiEffectGraphql","createGraphQLEffect","variableList","startActionType","successActionType","errorActionType","userPrefMultiUpdate","effect","action","errors","console","error","combinedPrefs","stopPropagation","__TECTONIC__sn_translate","_snTranslate","DEFAULT_PREFERENCES","label","_snUxpagePresource","_defaults","selectable","onChange","previousValue","preUserPrefs","onConnect","el","options","getPreSource","slice","pref","idx","prefPre","undefined"],"mappings":"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","file":"sn-user-preferences.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","export const USER_PREF_BEHAVIOR = 'userPreferences';\nexport const USER_PREF_PROPERTY = 'userPreferences';\nexport const USER_PREF_PROVIDER = 'userPrefProvider';\n\n// Actions\nexport const USER_PREF_PROVIDER_LOADED = 'USER_PREF_PROVIDER_LOADED';\nexport const USER_PREF_UPDATE_STARTED = 'USER_PREF_UPDATE_STARTED';\nexport const USER_PREF_UPDATE_SUCCEEDED = 'USER_PREF_UPDATE_SUCCEEDED';\nexport const USER_PREF_UPDATE_FAILED = 'USER_PREF_UPDATE_FAILED';\nexport const USER_PREF_UPDATE_ERROR = 'USER_PREF_UPDATE_ERROR';\nexport const USER_PREF_UPDATE = 'USER_PREF_UPDATE';\nexport const USER_PREF_MULTI_UPDATE = 'USER_PREF_MULTI_UPDATE';\n\n// Seismic\nexport const PROPERTIES_SET = 'PROPERTIES_SET';\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","import {\n\tUSER_PREF_BEHAVIOR,\n\tUSER_PREF_PROPERTY,\n\tUSER_PREF_PROVIDER,\n} from \"./constants\";\n\nimport {actionHandlers} from './effects';\nimport {setupProvider} from './provider';\n\nexport const userPreferencesBehavior = {\n\tname: USER_PREF_BEHAVIOR,\n\tproperties: {\n\t\t[USER_PREF_PROPERTY]: {\n\t\t\tget default() {\n\t\t\t\tsetupProvider();\n\t\t\t\treturn `@${USER_PREF_PROVIDER}/${USER_PREF_PROPERTY}`;\n\t\t\t}\n\t\t}\n\t},\n\tactionHandlers\n};\n","import {USER_PREF_PROPERTY, USER_PREF_PROVIDER} from './constants';\nimport {preUserPrefs} from 'sn-uxpage-presource';\n\n// Keep track of user preferences externally\nlet userPreferences = [];\nlet provider = null;\n\nexport const setupProvider = () => {\n\tif(provider)\n\t\treturn;\n\n\tprovider = document.getElementById(USER_PREF_PROVIDER);\n\tif(provider)\n\t\treturn;\n\n\tprovider = document.createElement('sn-user-preferences-provider');\n\tprovider.setAttribute('component-id', USER_PREF_PROVIDER);\n\tprovider.id = USER_PREF_PROVIDER;\n\tdocument.body.appendChild(provider);\n};\n\n// Update user preferences through a closure and direct property access\n\nexport const updateProviderPreferences = (userPrefs = []) => {\n\tlet userPreferencesNew = [...userPreferences];\n\tuserPrefs.forEach(({name,value}) => {\n\t\tif (name) {\n\t\t\tconst prefIdx = userPreferences.findIndex(p => p.name === name);\n\t\t\tif (prefIdx >= 0)\n\t\t\t\tuserPreferencesNew[prefIdx] = {...userPreferences[prefIdx], value};\n\t\t\telse\n\t\t\t\tuserPreferencesNew.push({name, value});\n\t\t}\n\t});\n\tprovider[USER_PREF_PROPERTY] = userPreferencesNew;\n};\n\nexport const setPreferences = (value) => {\n\tuserPreferences = value;\n};\n","module.exports = __TECTONIC__$servicenow_ui_core;","import {USER_PREF_UPDATE, USER_PREF_PROPERTY} from \"./constants\";\nimport get from 'lodash/get';\n\nexport const getUserPreferences = (state) => get(state, `properties[${USER_PREF_PROPERTY}]`, []);\n\nexport const getUserPreference = (name, state, defValue) => {\n\tconst userPrefs = getUserPreferences(state);\n\t\n\tif(!userPrefs || !userPrefs.length === 0) \n\t\treturn defValue;\n\n\tconst userPref = userPrefs.find(p => p.name === name);\n\tif(!userPref)\n\t\treturn defValue;\n\n\treturn userPref.value;\n};\n\nexport const setUserPreference = (name, value, dispatch)=> {\n\tdispatch(USER_PREF_UPDATE, {name, value});\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"get\"];","module.exports = __TECTONIC__sn_uxpage_presource_18_0_3_rc_1;","import {createCustomElement} from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport {userPreferencesBehavior} from \"../behavior\";\nimport {getUserPreference} from '../utils';\n\n\ncreateCustomElement('sn-user-preferences-example-ribbon', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview: (state)=>\n\t\t\t<div>\n\t\t\t\t<h3>Show Ribbon:</h3>\n\t\t\t\t<strong>{getUserPreference('workspace.showRibbon', state)}</strong>\n\t\t\t</div>\n\t},\n\tbehaviors: [userPreferencesBehavior],\n});\n","module.exports = __TECTONIC__$servicenow_ui_effect_update_state;","import {createCustomElement} from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport {userPreferencesBehavior} from \"../behavior\";\nimport {createUpdateStateEffect} from '@servicenow/ui-effect-update-state';\n\nimport {USER_PREF_UPDATE} from '../constants';\n\nconst PREF_INPUT = 'PREF_INPUT';\n\nconst view = ({userPrefUpdate, properties: {userPreferences}}, dispatch) => {\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h1>User Preferences:</h1>\n\t\t\t\t<ul>{userPreferences.map(userPref =>\n\t\t\t\t\t<li key={userPref.name}>\n\t\t\t\t\t\t<strong>{userPref.name}: </strong>\n\t\t\t\t\t\t{userPref.value}\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h2>Update</h2>\n\t\t\t\t<form>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label for=\"user-pref-name\">Name: </label>\n\t\t\t\t\t\t<input id=\"user-pref-name\" value={userPrefUpdate.name} on-input={event=> {dispatch(PREF_INPUT, {name: event.target.value})}}/>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<label for=\"user-pref-value\">Value: </label>\n\t\t\t\t\t\t<input id=\"user-pref-value\" value={userPrefUpdate.value} on-input={event=> {dispatch(PREF_INPUT, {value: event.target.value})}}/>\n\t\t\t\t\t</section>\n\t\t\t\t\t<button type=\"submit\" on-click={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tdispatch(USER_PREF_UPDATE, {\n\t\t\t\t\t\t\tname: userPrefUpdate.name,\n\t\t\t\t\t\t\tvalue: userPrefUpdate.value,\n\t\t\t\t\t\t})}}>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n};\n\ncreateCustomElement('sn-user-preferences-example', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tbehaviors: [userPreferencesBehavior],\n\tinitialState: {\n\t\tuserPrefUpdate: {\n\t\t\tname: 'workspace.showRibbon',\n\t\t\tvalue: 'false'\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[PREF_INPUT]: createUpdateStateEffect((state, {payload}) => {\n\t\t\tconst {userPrefUpdate} = state;\n\t\t\treturn {...state, userPrefUpdate: {...userPrefUpdate, ...payload}}\n\t\t})\n\t}\n});\n","import {default as setPreferenceExample} from './setPreferenceExample'\nimport {default as showRibbonExample} from './showRibbonExample'\n","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","import {\n\tUSER_PREF_UPDATE,\n\tUSER_PREF_UPDATE_FAILED,\n\tUSER_PREF_UPDATE_STARTED,\n\tUSER_PREF_UPDATE_SUCCEEDED,\n\tUSER_PREF_UPDATE_ERROR,\n\tUSER_PREF_MULTI_UPDATE\n} from './constants';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { updateProviderPreferences } from './provider';\nimport get from 'lodash/get';\n\nconst userPrefUpdateQuery = `\n\tmutation($name: String!, $value: String!) {\n\t  GlideDomain_Mutation {\n\t\tuser {\n\t\t  setPreference(name: $name, value: $value) {\n\t\t\tname\n\t\t\tvalue\n\t\t  }\n\t\t}\n\t  }\n\t}\n`;\n\nconst userPrefMultiUpdateQuery = `\nmutation($preferences: [GlideDomain_PreferenceArgument!]!) {\n  GlideDomain_Mutation {\n    user {\n      setPreferences(preferences: $preferences) {\n        name\n        value\n      }\n    }\n  }\n}\n`;\n\nconst userPrefUpdate = createGraphQLEffect(userPrefUpdateQuery, {\n\tvariableList: ['name', 'value'],\n\tstartActionType: USER_PREF_UPDATE_STARTED,\n\tsuccessActionType: USER_PREF_UPDATE_SUCCEEDED,\n\terrorActionType: USER_PREF_UPDATE_FAILED\n});\n\nconst userPrefMultiUpdate = createGraphQLEffect(userPrefMultiUpdateQuery, {\n\tvariableList: ['preferences'],\n\tstartActionType: USER_PREF_UPDATE_STARTED,\n\tsuccessActionType: USER_PREF_UPDATE_SUCCEEDED,\n\terrorActionType: USER_PREF_UPDATE_FAILED\n});\n\nconst userPrefUpdateSucceededEffect = ({ action: { payload }, dispatch }) => {\n\tconst { errors = [] } = payload;\n\n\tif (errors.length) {\n\t\tconsole.error('GlideDomain_Mutation.user.setPreference returned errors: ', errors);\n\t\tdispatch(USER_PREF_UPDATE_ERROR, errors);\n\t\treturn;\n\t}\n\tconst userPref = get(payload, 'data.GlideDomain_Mutation.user.setPreference');\n\tconst userPrefs = get(payload, 'data.GlideDomain_Mutation.user.setPreferences');\n\tlet combinedPrefs = [];\n\tif (userPref)\n\t\tcombinedPrefs = [userPref];\n\tif (userPrefs)\n\t\tcombinedPrefs = [...combinedPrefs, ...userPrefs];\n\t\t \n\tupdateProviderPreferences(combinedPrefs);\n};\n\n\nexport const actionHandlers = {\n\t[USER_PREF_UPDATE_SUCCEEDED]: {\n\t\teffect: userPrefUpdateSucceededEffect,\n\t\tstopPropagation: true\n\t},\n\t[USER_PREF_UPDATE]: {\n\t\t...userPrefUpdate,\n\t\tstopPropagation: true\n\t},\n\t[USER_PREF_MULTI_UPDATE]: {\n\t\t...userPrefMultiUpdate,\n\t\tstopPropagation: true\n\t}\n};\n","module.exports = __TECTONIC__sn_translate;","import {t} from 'sn-translate';\n\n\nexport const DEFAULT_PREFERENCES = [\n\t{\n\t\tname: 'workspace.showRibbon',\n\t\tlabel: t('Show Ribbon'),\n\t\tvalue: 'true'\n\t},\n\t{\n\t\tname: 'workspace.showAgentAssist',\n\t\tlabel: t('Show Sidebar'),\n\t\tvalue: 'true'\n\t},\n\t{\n\t\tname: 'workspace.wrapListText',\n\t\tlabel: t('Wrap List Text'),\n\t\tvalue: 'false'\n\t},\n\t{\n\t\tname: 'workspace.notifications.showBadgeCount',\n\t\tlabel: t('Show Badge Count'),\n\t\tvalue: 'true'\n\t},\n\t{\n\t\tname: 'workspace.notifications.showPopups',\n\t\tlabel: t('Show Banners'),\n\t\tvalue: 'true'\n\t}\n];\n","import {createCustomElement} from '@servicenow/ui-core';\nimport {PROPERTIES_SET, USER_PREF_PROPERTY, USER_PREF_PROVIDER_LOADED} from './constants';\nimport {preUserPrefs} from 'sn-uxpage-presource';\nimport {setPreferences} from './provider';\nimport {DEFAULT_PREFERENCES} from './defaults';\n\ncreateCustomElement('sn-user-preferences-provider', {\n\tproperties: {\n\t\t[USER_PREF_PROPERTY]: {\n\t\t\tselectable: true,\n\t\t\tdefault: [],\n\t\t\tonChange(value, previousValue, dispatch){\n\t\t\t\tsetPreferences(value);\n\t\t\t}\n\t\t}\n\t},\n\tbehaviors: [preUserPrefs],\n\tonConnect(el, dispatch, options) {\n\t\tdispatch(USER_PREF_PROVIDER_LOADED);\n\t},\n\tactionHandlers: {\n\t\t[USER_PREF_PROVIDER_LOADED]: ({state, dispatch})=>{\n\t\t\t// Pre-source user preferences on load\n\t\t\tconst userPrefsPre = preUserPrefs.getPreSource(state, []);\n\n\t\t\t// Set default values and labels for preferences\n\t\t\tlet userPrefs = userPrefsPre.slice(0);\n\t\t\tDEFAULT_PREFERENCES.forEach(pref => {\n\t\t\t\tconst idx = userPrefs.findIndex(prefPre => prefPre.name === pref.name);\n\t\t\t\tif(idx < 0){\n\t\t\t\t\tuserPrefs.push(pref);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(!userPrefs[idx].label)\n\t\t\t\t\tuserPrefs[idx] = {...userPrefs[idx], label: pref.label};\n\n\t\t\t\tif(userPrefs[idx].value === null || userPrefs[idx].value === undefined)\n\t\t\t\t\tuserPrefs[idx] = {...userPrefs[idx], value: pref.value};\n\n\t\t\t});\n\n\t\t\tdispatch(PROPERTIES_SET, {[USER_PREF_PROPERTY]: userPrefs});\n\t\t}\n\t}\n});\n","export { default as userPreferenceProvider } from './providerElement';\nexport { userPreferencesBehavior } from './behavior';\nexport { getUserPreference, getUserPreferences, setUserPreference } from './utils';\nexport { default as UserPreferencesExamples } from './examples';\nexport { USER_PREF_UPDATE, USER_PREF_MULTI_UPDATE, USER_PREF_UPDATE_STARTED, USER_PREF_UPDATE_FAILED, USER_PREF_UPDATE_SUCCEEDED } from './constants';\n"],"sourceRoot":""}