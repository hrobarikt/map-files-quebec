{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_chart_timeseries/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/./src/index.js","webpack://__TECTONIC__$servicenow_now_chart_timeseries/./src/now-chart-timeseries.js","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_library_chart_19_8_3\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_library_enhanced_element_19_8_3\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_behavior_theme_19_8_3\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__xenolith_4_1_6\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/./src/_now-chart-timeseries.scss?2789","webpack://__TECTONIC__$servicenow_now_chart_timeseries/./src/_now-chart-timeseries.scss","webpack://__TECTONIC__$servicenow_now_chart_timeseries//mnt/jenkins/workspace/motive_design-system_quebec-LAU4EC4LTND4QOM764JRONU2HSYHYZ6QDWUSLZIXTBP7KKZ7BWQQ/target/checkout/node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_chart_timeseries/./src/schemas/chart-timeseries-schema.js","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$devsnc_sn_chart_screen_reader_table\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_now_tooltip\"","webpack://__TECTONIC__$servicenow_now_chart_timeseries/external \"__TECTONIC__$servicenow_library_schemas_19_8_3\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","createNowChartTimeseriesDriver","COMPONENT_DOM_READY","COMPONENT_PROPERTY_CHANGED","COMPONENT_DISCONNECTED","actionTypes","version","require","registry","window","___NOW_DESIGN_SYSTEM_PACKAGES___","DEFAULT_BUTTON_LABEL","DEFAULT_BUTTON_ICON","PROPERTIES","accessibilityConfig","xenolith","schema","accessibilityConfigSchema","accessibilityMode","default","type","alignTicks","annotationsInteractions","items","oneOf","enum","properties","eventName","dispatchName","annotationsConfig","accessibilityTable","annotationsData","annotationsDataPointSchema","confidenceBandConfig","patternProperties","bandSeriesConfigSchema","confidenceBandData","configAria","anyOf","chart","configAriaSchema","additionalProperties","cursorConfig","lineColor","strokeWidth","hideXLine","hideYLines","hideMarkers","dataInterval","dataLabelConfig","dataLabelConfigSchema","datasetConfig","seriesConfigSchema","extents","extraMargin","left","right","top","bottom","forecastConfig","forecastData","forecastRangeConfig","forecastRangeData","hardMute","height","const","hideRegister","hideXGridlines","hideYGridlines","locale","mutedSeries","predictionBandConfig","predictionBandData","registerConfig","registerConfigSchema","registerPosition","selectedDomain","selectedPoints","seriesConfig","seriesData","showDataLabels","showTooltip","targetsConfig","targetSeriesConfigSchema","targetsData","thresholdConfig","thresholdConfigSchema","thresholdData","thresholdDataPointSchema","tooltipConfig","trendlinesConfig","trendlinesData","width","xAxisConfig","axisConfigSchema","xAxisType","xFormat","xGridConfig","dashPattern","color","yAxisConfig","yAxisType","yFormat","yGridConfig","yUnit","interactions","accessibilityTableCaption","enableContextualButton","contextualButtonConfig","label","icon","XENOLITH_PROPERTIES","SR_TABLE_PROPERTIES","buildAndSanitizePropsMaps","preProcessMap","createXenoPropPreProcessMap","processArgs","showDataOnHover","getDataFn","processDataFn","getClosestDataOnClick","getClosestSeriesOnClick","displayTooltipOnHover","getDataOnHover","getDataOnClick","updateState","payload","stopPropagation","state","targetRef","slottedContent","textContent","content","opened","infoTooltip","path","operation","buildAccessibilityTableOptions","props","tableOptions","values","ANNOTATION","THRESHOLD","DATA_STREAMS","configKey","dataKey","coords","isRange","formatFn","dp","v","header","message","y","fixedValue","fillGaps","buildSRTExportOptions","xUnit","exportType","dataStreams","aggregators","formatters","x","format","scale","unit","y0","y1","createEnhancedElement","initialState","view","dispatch","chartInstance","realDom","fakeDom","createElementFromNode","behaviors","theme","JSON","stringify","exportProperties","annotationTypes","keys","columnHeading","length","Fragment","className","size","on-click","id","options","data","exportChartData","manage-opened","target-ref","delay","show","hide","styles","behavior","themeBehavior","actionHandlers","createTooltipActionHandler","ref","createXenoDomReadyHandler","xenoPropList","observedProps","reactions","processValue","args","getMutedSeries","host","chartContainer","shadowRoot","getElementById","Timeseries","node","action","previousValue","applyPropToChartInstance","unschedule","meta","destroy","effect","schedule","dispatches","__TECTONIC__$servicenow_library_chart_19_8_3","__TECTONIC__$servicenow_library_enhanced_element_19_8_3","__TECTONIC__$servicenow_ui_core","__TECTONIC__sn_translate","__TECTONIC__$servicenow_behavior_theme_19_8_3","__TECTONIC__xenolith_4_1_6","result","toString","push","useSourceMap","list","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","chartLabelConfig","yLabel","y0Label","y1Label","alignment","fontFamily","fontSize","fontStyle","fontWeight","dashPatterns","markers","monochrome","opacity","axis","symbol","symbolSize","symbolScale","symbolColor","lineStrokeWidth","lineDashPattern","hideLine","circleRadius","required","orientation","tickConfig","position","rotation","translation","tickFormat","tickPadding","tickSizeInner","tickSizeOuter","ticks","tickArguments","tickValues","disabled","labelColor","tickColor","wrapLabels","truncationType","maximumSize","titleConfig","padding","customLocation","anchor","title","order","autoRotateLabels","colorPalette","for","mutedOpacity","mutedStrokeOpacity","stroke","strokeOpacity","align","stacked","clipped","collisions","showBox","fontColor","config","valueColor","separator","expandToFit","legendOnly","showBorder","smallSpacing","oneLine","justifyItems","disableGrid","showPercentages","percentagesOnly","showGaps","radius","showLabels","hideLabel","hideValue","__TECTONIC__$devsnc_sn_chart_screen_reader_table","__TECTONIC__$servicenow_now_button","__TECTONIC__$servicenow_now_tooltip","__TECTONIC__$servicenow_library_schemas_19_8_3"],"mappings":"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","file":"now-chart-timeseries.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","import './now-chart-timeseries';\nexport {createNowChartTimeseriesDriver} from '../drivers';\n","import {\n\tcreateXenoDomReadyHandler,\n\tapplyPropToChartInstance,\n\tcreateXenoPropPreProcessMap,\n\tbuildAndSanitizePropsMaps\n} from '@servicenow/library-chart';\nimport {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport {actionTypes} from '@servicenow/ui-core';\nimport {\n\tFragment,\n\tcreateElementFromNode\n} from '@servicenow/ui-renderer-snabbdom';\nimport {t} from 'sn-translate';\nimport themeBehavior from '@servicenow/behavior-theme';\nimport {Timeseries} from 'xenolith/dist/es';\nimport styles from './_now-chart-timeseries.scss';\nimport {\n\taccessibilityConfigSchema,\n\tannotationsConfig,\n\tannotationsDataPointSchema,\n\taxisConfigSchema,\n\tbandSeriesConfigSchema,\n\tdataLabelConfigSchema,\n\tregisterConfigSchema,\n\ttargetSeriesConfigSchema,\n\tseriesConfigSchema,\n\tthresholdConfigSchema,\n\tthresholdDataPointSchema\n} from './schemas/chart-timeseries-schema';\nimport {exportChartData} from '@servicenow/library-chart';\nimport '@devsnc/sn-chart-screen-reader-table';\nimport '@servicenow/now-button';\nimport '@servicenow/now-tooltip';\nimport {\n\tcreateTooltipActionHandler,\n\tschedule,\n\tunschedule\n} from '@servicenow/now-tooltip';\nimport {configAriaSchema} from '@servicenow/library-schemas';\nconst {\n\tCOMPONENT_DOM_READY,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_DISCONNECTED\n} = actionTypes;\n\n/*\n * TODO: This is a temporary way of debugging customer problems during the\n * Seismic 18 upgrade process, because tectonic resolution makes it hard to\n * know what version of a component is running. Remove when not needed.\n * Intentionally runs in dev + production environments so we can debug all builds.\n */\nconst {name, version} = require('../package.json');\nconst registry = (window.___NOW_DESIGN_SYSTEM_PACKAGES___ =\n\twindow.___NOW_DESIGN_SYSTEM_PACKAGES___ || {});\nif (!registry[name]) {\n\tregistry[name] = version;\n}\n\nconst DEFAULT_BUTTON_LABEL = t('Reset');\nconst DEFAULT_BUTTON_ICON = 'close-fill';\n\nconst PROPERTIES = {\n\t/**\n\t * Sets accessibility options.\n\t * @type {AccessibilityConfig}\n\t */\n\taccessibilityConfig: {xenolith: true, schema: accessibilityConfigSchema},\n\t/**\n\t * When true, enables accessibility options for the chart. See `accessibilityConfig` for available options.\n\t * @type {boolean}\n\t */\n\taccessibilityMode: {\n\t\txenolith: true,\n\t\tdefault: false,\n\t\tschema: {type: 'boolean'}\n\t},\n\t/**\n\t * When true, axis tick marks align with data values. When false, axis tick marks are evenly spaced along the axis.\n\t * Setting this property to true may produce a set of uneven tick marks.\n\t * @type {boolean}\n\t */\n\talignTicks: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Defines custom actions dispatched on mouse events on annotations.\n\t * Values can either be:\n\t * - A String of preconfigured actions defined below.\n\t * - An `actionConfig` object with a possible dispatch:\n\t * ```\n\t * {\n\t *  eventName: 'click' // Name of the DOM event to subscribe to.\n\t *  getDataFn: 'getTooltipInfo' // Either a string of a predefined function or a custom function that gets the coordinates from the previous callback and returns a data set.\n\t *  processDataFn: 'displayAnnotationTooltip' // Either a string of a predefined function or a custom function that gets both the coordinates and the data returned by the previous callback. Can also be an array of string/functions to be invoked in the defined order.\n\t *  dispatchName: 'NOW_CHART_TIMESERIES#ANNOTATION_CLICK' // If provided, an action with the configured name is dispatched with the result of both `getCoordsFn` and `getDataFn`.\n\t * }\n\t * ```\n\t *\n\t * The following predefined functions are available for the `actionConfig` callbacks:\n\t * - getDataFn: 'getTooltipInfo', 'getAnnotationData'\n\t * - processDataFn: 'displayAnnotationTooltip', 'hideAnnotationTooltip'\n\t *\n\t * The following preconfigured actions are available:\n\t * - `displayTooltipOnHover`: Default data in a tooltip adjacent to the annotation.\n\t * - `getDataOnHover`: Dispatches a `NOW_CHART_TIMESERIES#ANNOTATION_ENTER` or `NOW_CHART_TIMESERIES#ANNOTATION_LEAVE` event with the coordinates of the annotation and the data.\n\t * - `getDataOnClick`: Dispatches a `NOW_CHART_TIMESERIES#ANNOTATION_CLICK` event with the coordinates of the annotation and the data.\n\t *\n\t * @type {Array<string | ActionConfig>}\n\t */\n\tannotationsInteractions: {\n\t\txenolith: true,\n\t\tdefault: ['displayTooltipOnHover'],\n\t\tschema: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: ['displayTooltipOnHover', 'getDataOnHover', 'getDataOnClick']\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\teventName: {type: 'string'},\n\t\t\t\t\t\t\tdispatchName: {type: 'string'}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Configures chart annotations, which include icons at the top of the chart positioned at a specific\n\t * timestamp with an optional vertical line and associated message.\n\t * @type {AnnotationsConfig}\n\t */\n\tannotationsConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: annotationsConfig\n\t},\n\t/**\n\t * Defines the set of annotations to add to the chart. Each annotation data point corresponds to a single annotation\n\t * on the chart, and works in conjunction with the `annotationsConfig` property.\n\t * @type {AnnotationsDataPoint[]}\n\t */\n\tannotationsData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array', items: annotationsDataPointSchema}\n\t},\n\t/**\n\t * Configures the confidence band on the chart. The confidence band is a shaded area\n\t * on the chart bound by lower and upper y values that represents uncertainty\n\t * due to limited or confusing data. This property is a map object\n\t * containing the series name and the configuration for the series.\n\t * @type {Object<string, BandSeriesConfig>}\n\t */\n\tconfidenceBandConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': bandSeriesConfigSchema}}\n\t},\n\t/**\n\t * Defines a confidence band on the chart.\n\t * Works in conjunction with the `confidenceBandConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\tconfidenceBandData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * Supplies an aria-label that describes the chart for screen readers.\n\t * Pass an object whose keys reference a specific HTML element within the\n\t * component. The value of each key is an object that contains\n\t * an ARIA property (or properties) and corresponding value(s). These ARIA\n\t * properties are set on the specified element.\n\t * The 'chart' key corresponds to the inner html `<div>` element in\n\t * now-chart-timeseries that wraps the chart and the register. See\n\t * https://www.w3.org/TR/wai-aria-1.1/ for properties and accepted values.\n\t * @type {{ 'aria-*': string }}\n\t */\n\tconfigAria: {\n\t\tschema: {\n\t\t\tanyOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tchart: configAriaSchema\n\t\t\t\t\t},\n\t\t\t\t\tadditionalProperties: false\n\t\t\t\t},\n\t\t\t\tconfigAriaSchema\n\t\t\t]\n\t\t}\n\t},\n\t/**\n\t * Configures how the cursor appears on the chart. The cursor follows the mouse position as the user hovers over\n\t * the chart and includes x and y crosshairs and a set of circle markers over the data values.\n\t * @type {{lineColor: string, strokeWidth: string, hideXLine: boolean, hideYLines: boolean, hideMarkers: boolean }}\n\t */\n\tcursorConfig: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tlineColor: {type: 'string'},\n\t\t\t\tstrokeWidth: {type: 'string'},\n\t\t\t\thideXLine: {type: 'boolean'},\n\t\t\t\thideYLines: {type: 'boolean'},\n\t\t\t\thideMarkers: {type: 'boolean'}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Number of milliseconds between data points. Determines the following:\n\t * - Bar width when bar or grouped bars are used. By default, bar width is calculated based\n\t * on the number of data points on the chart.\n\t * - Data point alignment when the `alignTicks` property is true.\n\t * @type {number}\n\t */\n\tdataInterval: {xenolith: true, schema: {type: 'number'}},\n\t/**\n\t * Data label when the `showDataLabels` property is true. Includes the strategy for generating\n\t * labels, type styling, and alignment options.\n\t * @type {DataLabelConfig}\n\t */\n\tdataLabelConfig: {xenolith: true, schema: dataLabelConfigSchema},\n\t/**\n\t * Common series configuration settings. When a series configuration is used for multiple series,\n\t * it can be defined here and referenced from other series configuration properties using the `for` keyword.\n\t * This property is a map object containing the dataset name and the configuration for the series.\n\t * @type {Object<string, SeriesConfig>}\n\t */\n\tdatasetConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': seriesConfigSchema}}\n\t},\n\t/**\n\t * Fixed or dynamic extents, limiting the data values displayed on the chart to a specific range.\n\t * To specify an extent, pass an object whose keys are the axis names and whose values are array\n\t * tuples holding `[min, max]` values. By default, the range is calculated dynamically from the data,\n\t * which corresponds to passing `dynamic` as both the min and max extent value for both x and y axes.\n\t *\n\t * For example:\n\t * ```js\n\t * extents: {\n\t *   x: ['dynamic', 10000],\n\t *   y: [0, 100]\n\t * }\n\t * ```\n\t * @type {Object<string, Array<number | 'dynamic'>>}\n\t */\n\textents: {xenolith: true, schema: {type: 'object'}},\n\t/**\n\t * Extra space around the chart body in addition to\n\t * the space allocated for the axes.\n\t * @type {{left: number, right: number, top: number, bottom: number}}\n\t */\n\textraMargin: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tleft: {type: 'number'},\n\t\t\t\tright: {type: 'number'},\n\t\t\t\ttop: {type: 'number'},\n\t\t\t\tbottom: {type: 'number'}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Configures the forecast series on the chart. This property is a map object\n\t * containing the series name and the configuration for the series.\n\t * @type {Object<string, SeriesConfig>}\n\t */\n\tforecastConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': seriesConfigSchema}}\n\t},\n\t/**\n\t * Array of data points that define the forecast plotted element on the chart.\n\t * Works in conjunction with the `seriesConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\tforecastData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * Configures the forecast range on the chart. The forecast range is a shaded area\n\t * in the chart bounded by lower and upper y values that represents uncertainty in forecast\n\t * data values. This property is a map object containing the series name and configuration for the series.\n\t * @type {Object<string, BandSeriesConfig>}\n\t */\n\tforecastRangeConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': bandSeriesConfigSchema}}\n\t},\n\t/**\n\t * Array of data points defining a forecast range. Works in conjunction with the `forecastRangeConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\tforecastRangeData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * When true, redraws the chart with new extents that only include non-muted data.\n\t * By default, the `mutedSeries` content is removed, but the chart extents are\n\t * not changed to reflect the updated range of the data represented.\n\t * @type {boolean}\n\t */\n\thardMute: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * The chart's height in pixels. Enter either the number of pixels, or the string `auto`\n\t * to use the height of the parent DOM element.\n\t * @type {'auto' | number}\n\t */\n\theight: {\n\t\txenolith: true,\n\t\tschema: {oneOf: [{const: 'auto'}, {type: 'number'}]}\n\t},\n\t/**\n\t * When true, hides the register that appears beside the chart.\n\t * @type {boolean}\n\t */\n\thideRegister: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * When true, hides vertical gridlines on the chart.\n\t * @type {boolean}\n\t */\n\thideXGridlines: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * When true, hides horizontal gridlines on the chart.\n\t * @type {boolean}\n\t */\n\thideYGridlines: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Configures time and number formatting for different languages.\n\t * Specify the locale using one of the following two-part `language-COUNTRY` IETF codes:\n\t * `ar-AE`, `ar-BH`, `ar-DJ`, `ar-DZ`, `ar-EG`, `ar-EH`, `ar-ER`, `ar-IL`, `ar-IQ`, `ar-JO`, `ar-KM`, `ar-KW`, `ar-LB`, `ar-LY`, `ar-MA`,\n\t * `ar-MR`, `ar-OM`, `ar-PS`, `ar-QA`, `ar-SA`, `ar-SD`, `ar-SO`, `ar-SS`, `ar-SY`, `ar-TD`, `ar-TN`, `ar-YE`,\n\t * `ca-ES`, `cs-CZ`, `de-CH`, `de-DE`, `en-CA`, `en-GB`, `en-IN`, `en-US` (default), `es-ES`, `es-MX`, `fi-FI`, `fr-CA`, `fr-FR`,\n\t * `he-IL`, `hu-HU`, `it-IT`, `ja-JP`, `ko-KR`, `mk-MK`, `nl-NL`, `pl-PL`, `pr-BR`, `ru-RU`, `sv-SE`, `uk-UA`, `zh-CN`\n\t * @type {string}\n\t */\n\tlocale: {xenolith: true, schema: {type: 'string'}},\n\t/**\n\t * Name of the series to mute on the chart. Use the `hardMute` property to set muting\n\t * behavior. Soft muted series are removed, but the chart extents remain the same. Hard muted\n\t * series are removed and the chart extents are recalculated.\n\t * @type {string | Array<string> | Set<string>}\n\t */\n\tmutedSeries: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\toneOf: [\n\t\t\t\t{type: 'string'},\n\t\t\t\t{type: 'array', items: {type: 'string'}},\n\t\t\t\t{type: 'object'}\n\t\t\t]\n\t\t}\n\t},\n\t/**\n\t * Configures the prediction band. The prediction band is a shaded area\n\t * in the chart bounded by lower and upper y values that represents uncertainty\n\t * due to limited or confusing data. This property is a map object containing the series name\n\t * and configuration.\n\t * @type {Object<string, BandSeriesConfig>}\n\t */\n\tpredictionBandConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': bandSeriesConfigSchema}}\n\t},\n\t/**\n\t * Array of data points defining a prediction band.\n\t * Works in conjunction with the `predictionBandConfig` property.\n\t * @type {SeriesData[]}\n\t */\n\tpredictionBandData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * Configures options for the register displayed beside the chart.\n\t * @type {RegisterConfig}\n\t */\n\tregisterConfig: {xenolith: true, schema: registerConfigSchema},\n\t/**\n\t * Sets the position and orientation of the register in relation to the chart. If you pass in the values `top` or `bottom`,\n\t * the register displays horizontally. If you pass in the values `left` or `right`,\n\t * the register displays vertically. These orientations override values in the `registerConfig` property.\n\t * @type {('top'|'bottom'|'left'|'right')}\n\t */\n\tregisterPosition: {\n\t\txenolith: true,\n\t\tschema: {type: 'string', enum: ['top', 'bottom', 'left', 'right']}\n\t},\n\t/**\n\t * Interactive domain values from the navigator component or on-chart zoom. This property overrides settings in the\n\t * `extents` property. For both min and max values, you can pass `dynamic` to calculate the value from the dataset.\n\t *\n\t * For example:\n\t * ``` js\n\t *  selectedDomain: {\n\t *    x: ['dynamic', 10000],\n\t *    y: [0, 100]\n\t * }\n\t * ```\n\t * @type {Object<string, Array<number | 'dynamic'>>}\n\t */\n\tselectedDomain: {xenolith: true, schema: {type: 'object'}},\n\t/**\n\t * A set of data points that should be highlighted.\n\t * @type {Object<string, SeriesDataPoint[]>}\n\t */\n\tselectedPoints: {xenolith: true, schema: {type: 'object'}},\n\t/**\n\t * The main configuration for the chart. This property is a map object containing\n\t * the chart name and seriesConfig object.\n\t * @type {Object<string, SeriesConfig>}\n\t */\n\tseriesConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': seriesConfigSchema}}\n\t},\n\t/**\n\t * The array of data points defining the main plotted element on the chart.\n\t * Works in conjunction with the `seriesConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\tseriesData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * When true, shows labels for data values on the chart. Works in conjunction with the `dataLabelConfig`\n\t * property, which controls how the labels appear on the chart.\n\t * @type {boolean}\n\t */\n\tshowDataLabels: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * When true, shows a tooltip on hover that contains the closest data points from each\n\t * series. Works in conjunction with the `tooltipConfig` property, which controls how the tooltip appears.\n\t * @type {boolean}\n\t */\n\tshowTooltip: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * The target element on the chart, rendered as a horizontal line\n\t * with multiple sequential values for each target series.\n\t * This property is a map object containing\n\t * the target name and TimeSeriesConfig object,\n\t * where the TimeSeriesConfig properties include:\n\t * - `x`: String. Name of the x key used in the data points in `targetsData`.\n\t * - `y`: String. Name of the y key used in the data points in `targetsData`.\n\t * @type {Object<string, TargetSeriesConfig>}\n\t */\n\ttargetsConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tpatternProperties: {'.*': targetSeriesConfigSchema}\n\t\t}\n\t},\n\t/**\n\t * The array of data points defining the target element on the chart.\n\t * Works in conjunction with the `targetsConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\ttargetsData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * Configures the threshold element on the chart, rendered as a horizontal line.\n\t * This property is a map object containing the series name and the\n\t * configuration for the threshold.\n\t * @type {Object<string, ThresholdConfig>}\n\t */\n\tthresholdConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': thresholdConfigSchema}}\n\t},\n\t/**\n\t * Array of data points defining the target element on the chart.\n\t * Works in conjunction with the `thresholdConfig` property.\n\t * @type {ThresholdData[]}\n\t */\n\tthresholdData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array', items: thresholdDataPointSchema}\n\t},\n\t/**\n\t * Configures the register, which displays values in a tooltip when hovering\n\t * over the chart.\n\t * @type {RegisterConfig}\n\t */\n\ttooltipConfig: {xenolith: true, schema: registerConfigSchema},\n\t/**\n\t * Configures the trendlines, which are lines connecting data points\n\t * from the `trendlinesData` property. This property is a map object containing the series name and configuration.\n\t * @type {Object<string, SeriesConfig>}\n\t */\n\ttrendlinesConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': seriesConfigSchema}}\n\t},\n\t/**\n\t * Array of data points defining the trendlines.\n\t * Works in conjunction with the `trendlinesConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\ttrendlinesData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * The chart's width in pixels. Enter either the number of pixels, or the string `auto`\n\t * to use the width of the parent DOM element.\n\t * @type {'auto' | number}\n\t */\n\twidth: {\n\t\txenolith: true,\n\t\tschema: {oneOf: [{const: 'auto'}, {type: 'number'}]}\n\t},\n\t/**\n\t * Configuration for the x axis.\n\t * @type {AxisConfig}\n\t */\n\txAxisConfig: {xenolith: true, schema: axisConfigSchema},\n\t/**\n\t * Type of scale used with the x axis.\n\t * For descriptions of each type, see [d3 scales](https://github.com/d3/d3-scale).\n\t * @type {('linear'|'time'|'timeLocal'|'log'|'band'|'point')}\n\t */\n\txAxisType: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['linear', 'time', 'timeLocal', 'log', 'band', 'point']\n\t\t}\n\t},\n\t/**\n\t * Format string or function to display x values on the chart and axes.\n\t * - Strings are passed to d3 and must conform to their time formatting code. Values are typically timestamps. See [Time formats](https://github.com/d3/d3/blob/master/API.md#time-formats-d3-time-format).\n\t * - Functions must accept a timestamp and return a string.\n\t * @type {string | function}\n\t */\n\txFormat: {\n\t\txenolith: true,\n\t\taccessibilityTable: true\n\t},\n\t/**\n\t * Configure the color and style of x gridlines.\n\t * @type {{strokeWidth: number, dashPattern: string, color: string}}\n\t */\n\txGridConfig: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tstrokeWidth: {type: 'number'},\n\t\t\t\tdashPattern: {type: 'string'},\n\t\t\t\tcolor: {type: 'string'}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Configure the y axes, including axis orientation, tick mark configuration, and axis title options. Because\n\t * there can be multiple y axes, this property is an object whose keys are axes names and values are `AxisConfig`\n\t * objects.\n\t * @type {Object<string, AxisConfig>}\n\t */\n\tyAxisConfig: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\tanyOf: [\n\t\t\t\taxisConfigSchema,\n\t\t\t\t{type: 'object', patternProperties: {'.*': axisConfigSchema}}\n\t\t\t]\n\t\t}\n\t},\n\t/**\n\t * Type of scale to use with the y axis.\n\t * For descriptions of each type, see [d3 scales](https://github.com/d3/d3-scale).\n\t * @type {('linear'|'time'|'timeLocal'|'log'|'band'|'point')}\n\t */\n\tyAxisType: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['linear', 'time', 'timeLocal', 'log', 'band', 'point']\n\t\t}\n\t},\n\t/**\n\t * Format string or function to display y values on the chart and axes.\n\t * - Strings are passed to d3 and must conform to their number formatting code. See [Number Formats](https://github.com/d3/d3/blob/master/API.md#number-formats-d3-format).\n\t * - Functions must accept a number and return a string.\n\t * @type {string | function}\n\t */\n\tyFormat: {xenolith: true, accessibilityTable: true},\n\t/**\n\t * Configure the color and style of y gridlines.\n\t * @type {{strokeWidth: number, dashPattern: string, color: string}}\n\t */\n\tyGridConfig: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tstrokeWidth: {type: 'number'},\n\t\t\t\tdashPattern: {type: 'string'},\n\t\t\t\tcolor: {type: 'string'}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * The unit of measure for y values.\n\t * If present, the component appends the unit to the end of all y values on the chart.\n\t * @type {string}\n\t */\n\tyUnit: {xenolith: true, schema: {type: 'string'}},\n\t/**\n\t * Defines custom actions dispatched on mouse events.\n\t * Values can either be:\n\t * - A String of preconfigured actions defined below.\n\t * - An `actionConfig` object with a possible dispatch:\n\t * ```\n\t * {\n\t *  eventName: 'click' // Name of the DOM event to subscribe to.\n\t *  getCoordsFn: 'getMouseCoords' // Either a string of a predefined function, nothing, or a custom function that gets the mouse coordinates and returns coordinates to use.\n\t *  getDataFn: 'getClosestData' // Either a string of a predefined function or a custom function that gets the coordinates from the previous callback and returns a data set.\n\t *  processDataFn: 'displayFoundData' // Either a string of a predefined function or a custom function that geta both the coordinates and the data returned by the previous callback. Can also be an array of string/functions invoked in order.\n\t *  dispatchName: 'NOW_CHART_TIMESERIES#MY_CLICK' // If provided, an action with the configured name is dispatched with the result of both `getCoordsFn` and `getDataFn`.\n\t * }\n\t * ```\n\t *\n\t * The following predefined functions are available for the `actionConfig` callbacks:\n\t * - getCoordsFn: 'getMouseCoords'\n\t * - getDataFn: 'getClosestData', 'getClosestSeriesToMouse'\n\t * - processDataFn: 'displayFoundData'\n\t *\n\t * The following preconfigured interactions are available:\n\t * - `showDataOnHover`: Shows data close to the mouse in the register and/or tooltip on hover and clears the data when the user clicks out of the chart.\n\t * - `getClosestDataOnClick`: Dispatches a `NOW_CHART_TIMESERIES#CLICK` event with the current coordinates and closest data to the mouse on click.\n\t * - `getClosestSeriesOnClick`: Dispatches a `NOW_CHART_TIMESERIES#CLICK` event with the current coordinates and closest data and series to the mouse on click.\n\t *\n\t * @type {Array<string | ActionConfig>}\n\t */\n\tinteractions: {\n\t\txenolith: true,\n\t\tdefault: ['showDataOnHover'],\n\t\tschema: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: [\n\t\t\t\t\t\t\t'showDataOnHover',\n\t\t\t\t\t\t\t'getClosestDataOnClick',\n\t\t\t\t\t\t\t'getClosestSeriesOnClick'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\teventName: {type: 'string'},\n\t\t\t\t\t\t\tdispatchName: {type: 'string'}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * When true, displays a screen-readable table below the chart for accessibility.\n\t * @type {boolean}\n\t */\n\taccessibilityTable: {default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Caption for the accessibility data table. Used with the `accessibilityTable` property.\n\t * @type {string}\n\t */\n\taccessibilityTableCaption: {\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'string'}\n\t},\n\t/**\n\t * When true, displays the contextual button.\n\t * @type {boolean}\n\t */\n\tenableContextualButton: {default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Sets the label and icon for the contextual button using these keys:\n\t * - `label`: Sets the text label.\n\t * - `icon`: Icon from the `now-icon` component library to display at the start of the button.\n\t * @type {{label: string, icon: string}}\n\t */\n\tcontextualButtonConfig: {\n\t\tdefault: {\n\t\t\tlabel: DEFAULT_BUTTON_LABEL,\n\t\t\ticon: DEFAULT_BUTTON_ICON\n\t\t},\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tlabel: {type: 'string'},\n\t\t\t\ticon: {type: 'string'}\n\t\t\t},\n\t\t\tadditionalProperties: false\n\t\t}\n\t}\n};\n\nconst {XENOLITH_PROPERTIES, SR_TABLE_PROPERTIES} = buildAndSanitizePropsMaps(\n\tPROPERTIES\n);\nconst INTERACTIONS_MAP = {\n\tshowDataOnHover: [\n\t\t{\n\t\t\teventName: 'mousemove',\n\t\t\tgetDataFn: 'getClosestData',\n\t\t\tprocessDataFn: 'displayFoundData'\n\t\t},\n\t\t{\n\t\t\teventName: 'mouseout',\n\t\t\tprocessDataFn: 'clearData'\n\t\t}\n\t],\n\tgetClosestDataOnClick: [\n\t\t{\n\t\t\teventName: 'click',\n\t\t\tgetDataFn: 'getClosestData',\n\t\t\tdispatchName: 'NOW_CHART_TIMESERIES#CLICK'\n\t\t}\n\t],\n\tgetClosestSeriesOnClick: [\n\t\t{\n\t\t\teventName: 'click',\n\t\t\tgetDataFn: 'getClosestSeriesToMouse',\n\t\t\tdispatchName: 'NOW_CHART_TIMESERIES#CLICK'\n\t\t}\n\t]\n};\nconst ANNOTATION_INTERACTION_MAP = {\n\tdisplayTooltipOnHover: [\n\t\t{\n\t\t\teventName: 'mouseenter',\n\t\t\tgetDataFn: 'getTooltipInfo',\n\t\t\tprocessDataFn: 'displayAnnotationTooltip'\n\t\t},\n\t\t{\n\t\t\teventName: 'mouseleave',\n\t\t\tprocessDataFn: 'hideAnnotationTooltip'\n\t\t}\n\t],\n\tgetDataOnHover: [\n\t\t{\n\t\t\teventName: 'mouseenter',\n\t\t\tgetDataFn: 'getAnnotationData',\n\t\t\tdispatchName: 'NOW_CHART_TIMESERIES#ANNOTATION_ENTER'\n\t\t},\n\t\t{\n\t\t\teventName: 'mouseleave',\n\t\t\tdispatchName: 'NOW_CHART_TIMESERIES#ANNOTATION_LEAVE'\n\t\t}\n\t],\n\tgetDataOnClick: [\n\t\t{\n\t\t\teventName: 'click',\n\t\t\tgetDataFn: 'getAnnotationData',\n\t\t\tdispatchName: 'NOW_CHART_TIMESERIES#ANNOTATION_CLICK'\n\t\t}\n\t]\n};\nconst preProcessMap = createXenoPropPreProcessMap();\npreProcessMap.interactions.processArgs = INTERACTIONS_MAP;\npreProcessMap.annotationsInteractions.processArgs = ANNOTATION_INTERACTION_MAP;\n\n// array of properties to observe, where each element has the `xenolith` name, and reactions is an array of steps to take when the observed\n// property changes. Reactions are processed in order. Can be one of three types:\n//   dispatch: dispatch an action, args -> `type` and optional `processValue` function. payload has the (optionally processed) updated value.\n//   updateState: update this components state. args -> `operation`, `path` and optional `processValue` function. component of state is updated with (optionally processed) value\n//   updateProperties: update this components property. args -> `operation`, `propName` and optional `processValue` function. component of state is updated with (optionally processed) value\nconst OBSERVED_PROPERTIES = [\n\t{\n\t\txenolith: 'chartLayout',\n\t\treactions: [\n\t\t\t{\n\t\t\t\ttype: 'dispatch',\n\t\t\t\tprocessValue: (value) => ({value}),\n\t\t\t\targs: {type: 'NOW_CHART_TIMESERIES#CHART_LAYOUT_CHANGED'}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\txenolith: 'requestTooltip',\n\t\treactions: [\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t\tCannot use updateState because the tooltip has a delay which we need to schedule. Also, the delay in hiding is an issue.\n\t\t\t\t\tIf we just use updateState and we are slotting content, on hide,\n\t\t\t\t\tthe content is removed before the tooltip's delay is complete.\n\t\t\t\t\tSince it is a slot, I cannot think of a way to delay removal.\n\t\t\t\t\tMy solution to this issue requires access to `state`. Because\n\t\t\t\t\tthis is a curried function, the state passed into the\n\t\t\t\t\t`processValue` callback is the obsolete.\n\t\t\t\t*/\n\t\t\t\ttype: 'dispatch',\n\t\t\t\targs: {type: 'PRIVATE#TOOLTIP_REQUEST'}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\txenolith: 'mutedSeries',\n\t\treactions: [\n\t\t\t{\n\t\t\t\ttype: 'dispatch',\n\t\t\t\targs: {type: 'NOW_CHART_TIMESERIES#MUTED_SERIES_CHANGED'},\n\t\t\t\tprocessValue: (v, chart) => chart.getMutedSeries()\n\t\t\t}\n\t\t]\n\t}\n];\n\nconst showTooltip = (updateState, {payload, stopPropagation}, state) => {\n\tlet value;\n\tstopPropagation();\n\n\tif (!payload) {\n\t\t/*\n      In order to prevent the slotted content from being removed\n      before the tooltip is hidden, just keep the old slotted content\n      and rely on it going away when new stuff is loaded.\n      We do not have this problem if we use the built in toolip content\n    */\n\t\tvalue = {\n\t\t\tslottedContent: state.infoTooltip.slottedContent,\n\t\t\topened: false\n\t\t};\n\t} else {\n\t\tconst {targetRef, slottedContent, textContent} = payload;\n\t\tvalue = {\n\t\t\ttargetRef,\n\t\t\tcontent: textContent,\n\t\t\tslottedContent,\n\t\t\topened: true\n\t\t};\n\t}\n\n\tupdateState({\n\t\tpath: 'infoTooltip',\n\t\toperation: 'set',\n\t\tvalue\n\t});\n};\n\nconst buildAccessibilityTableOptions = (props) => {\n\tconst tableOptions = {};\n\tfor (const name of SR_TABLE_PROPERTIES.values()) {\n\t\ttableOptions[name] = props[name];\n\t}\n\treturn tableOptions;\n};\n\n/**\n * build an object to prepare for exporting data that looks like this\n *\n *   exportType: <string> - 'flatTable' (for screen reader)\n *   dataStreams: <object[]> - array of specs for data streams to merge and render. Each entry:\n *     {\n *       configKey: <string>, - key to config values, like 'seriesConfig'\n *       dataKey: <string>,  - key to data values, like 'seriesData'\n *       isRange: <boolean>, - true if a range value (like predictionBand) shows two values in a cell\n *       coords: <string[]>, - set of possible keys for dependent axis, like ['y', 'y1'] uses first one found\n *       formatFn: <function>, - additional formatting to handle labels. applied after value formatting\n *       fillGaps: <boolean> - copy previous values into missing entries (threshold, target)\n *       fixedValue: <boolean> - true to use 'coords' value as y coord key, rather than config lookup\n *     }\n *   aggregators: <object[]> - the set of aggregation function specs to compute and export. Each entry:\n *       {\n *         type: (string) - one of 'sum','count','min','max','avg'\n *         key: (string) - resolved key to use for data values\n *       }\n *    formatters: <map<string, object>> - data formatters for each data point key. Map looks like:\n *        {\n *          'y': { format: '.2f', scale: 'linear', unit: ' kg'}\n *        }\n */\n\nconst ANNOTATION = t('Annotation');\nconst THRESHOLD = t('Threshold');\n\nconst DATA_STREAMS = [\n\t{configKey: 'seriesConfig', dataKey: 'seriesData', coords: ['y']},\n\t{configKey: 'forecastConfig', dataKey: 'forecastData', coords: ['y']},\n\t{\n\t\tconfigKey: 'confidenceBandConfig',\n\t\tdataKey: 'confidenceBandData',\n\t\tisRange: true,\n\t\tcoords: ['y0', 'y1']\n\t},\n\t{\n\t\tconfigKey: 'predictionBandConfig',\n\t\tdataKey: 'predictionBandData',\n\t\tisRange: true,\n\t\tcoords: ['y0', 'y1']\n\t},\n\t{\n\t\tconfigKey: 'forecastRangeConfig',\n\t\tdataKey: 'forecastRangeData',\n\t\tisRange: true,\n\t\tcoords: ['y0', 'y1']\n\t},\n\t{configKey: 'trendlinesConfig', dataKey: 'trendlinesData', coords: ['y']},\n\t{\n\t\tconfigKey: 'annotationsConfig',\n\t\tdataKey: 'annotationsData',\n\t\tcoords: ['y'],\n\t\tformatFn: (dp, c, v) => {\n\t\t\tconst msg = dp.header ? `${dp.header}: ${dp.message}` : `${dp.message}`;\n\t\t\tconst value = typeof dp.y !== 'undefined' ? ` (${v})` : '';\n\t\t\treturn `${msg}${value}`;\n\t\t}\n\t},\n\t{\n\t\tconfigKey: 'thresholdConfig',\n\t\tdataKey: 'thresholdData',\n\t\tcoords: ['value'],\n\t\tfixedValue: true,\n\t\tfillGaps: true,\n\t\tformatFn: (dp, c, v) => `${dp.label || THRESHOLD}: ${v}`\n\t},\n\t{\n\t\tconfigKey: 'targetsConfig',\n\t\tdataKey: 'targetsData',\n\t\tcoords: ['y'],\n\t\tfillGaps: true\n\t}\n];\nconst buildSRTExportOptions = (properties) => {\n\tconst {xFormat, xAxisType, xUnit, yFormat, yAxisType, yUnit} = properties;\n\tconst exportType = 'flatTable';\n\tconst dataStreams = DATA_STREAMS;\n\tconst aggregators = null;\n\tconst formatters = {\n\t\tx: {format: xFormat, scale: xAxisType, unit: xUnit},\n\t\ty: {format: yFormat, scale: yAxisType, unit: yUnit},\n\t\ty0: {format: yFormat, scale: yAxisType, unit: yUnit},\n\t\ty1: {format: yFormat, scale: yAxisType, unit: yUnit}\n\t};\n\treturn {exportType, dataStreams, aggregators, formatters};\n};\n\n/** @seismicView now-chart-timeseries */\nconst view = (state, {dispatch}) => {\n\tconst {properties, infoTooltip, chartInstance} = state;\n\tconst {\n\t\taccessibilityTable,\n\t\tenableContextualButton,\n\t\tcontextualButtonConfig\n\t} = properties;\n\tconst {\n\t\tlabel = DEFAULT_BUTTON_LABEL,\n\t\ticon = DEFAULT_BUTTON_ICON\n\t} = contextualButtonConfig;\n\tconst {slottedContent, content, targetRef, opened} = infoTooltip;\n\tconst realDom = slottedContent ? slottedContent() : null;\n\tconst fakeDom = realDom ? createElementFromNode(realDom) : null;\n\n\t/*\n    Must 1) wait for the chartInstance / behavior to be instatiated\n    2) only apply the theme if it is different or else it triggers a Xenolith render.\n  */\n\tif (\n\t\tchartInstance &&\n\t\tstate.behaviors.theme &&\n\t\tJSON.stringify(state.behaviors.theme) !==\n\t\t\tJSON.stringify(chartInstance.theme)\n\t) {\n\t\tchartInstance.theme = state.behaviors.theme;\n\t}\n\t// fixup annotationsConfig for export, if needed\n\tlet exportProperties = properties;\n\tif (accessibilityTable) {\n\t\tconst {annotationsData, annotationsConfig} = properties;\n\t\tif (annotationsData) {\n\t\t\tconst annotationTypes = annotationsConfig\n\t\t\t\t? Object.keys(annotationsConfig)\n\t\t\t\t: null;\n\t\t\tconst columnHeading =\n\t\t\t\tannotationTypes && annotationTypes.length > 0\n\t\t\t\t\t? annotationTypes[0]\n\t\t\t\t\t: ANNOTATION;\n\t\t\tconst newAnnotationsConfig = {annotationsConfig: {[columnHeading]: {}}};\n\t\t\texportProperties = {...properties, ...newAnnotationsConfig};\n\t\t}\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{enableContextualButton ? (\n\t\t\t\t<div className=\"now-chart-contextual-button-wrapper\">\n\t\t\t\t\t<now-button\n\t\t\t\t\t\tclassName=\"now-chart-contextual-button\"\n\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\t\tdispatch(() => ({\n\t\t\t\t\t\t\t\ttype: 'NOW_CHART_TIMESERIES#CONTEXTUAL_BUTTON_CLICKED'\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<div id=\"chart-container\" />\n\t\t\t{accessibilityTable ? (\n\t\t\t\t<div className=\"now-chart-screen-reader-table-parent\">\n\t\t\t\t\t<sn-chart-screen-reader-table\n\t\t\t\t\t\toptions={buildAccessibilityTableOptions(properties)}\n\t\t\t\t\t\tdata={exportChartData(\n\t\t\t\t\t\t\tchartInstance,\n\t\t\t\t\t\t\texportProperties,\n\t\t\t\t\t\t\tbuildSRTExportOptions(properties)\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tclassName=\"now-chart-screen-reader-table\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<now-tooltip\n\t\t\t\tid=\"tooltip\"\n\t\t\t\tmanage-opened\n\t\t\t\tcontent={content}\n\t\t\t\ttarget-ref={targetRef}\n\t\t\t\topened={opened}\n\t\t\t\tdelay={{show: 0, hide: 0}}>\n\t\t\t\t{fakeDom}\n\t\t\t</now-tooltip>\n\t\t</Fragment>\n\t);\n};\n\n/**\n * Graph that compares data over time. Developers can\n * select the type, such as line, area, or column, and add context through\n * trendlines, targets, confidence bands, and other data series.\n *\n * ```jsx\n * const options = {\n *   width: \"auto\",\n *   height: \"auto\",\n *   showTooltip: true,\n *   xAxisConfig: { title: \"Time Period\" },\n *   seriesConfig: {\n *     foo: { x: \"timestamp\", y: \"y0\", type: [\"area\"]}\n *   },\n *   seriesData: [\n * \t   {timestamp: 1226766192448, y0: 5},\n *     ...otherData\n *   ]\n * }\n * <now-chart-timeseries {...options} />\n * ```\n *\n * @seismicElement now-chart-timeseries\n * @summary Graph that compares data over time intervals.\n */\ncreateEnhancedElement('now-chart-timeseries', {\n\tproperties: PROPERTIES,\n\tinitialState: {\n\t\tinfoTooltip: {targetRef: null, content: '', opened: false}\n\t},\n\tview,\n\tstyles,\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: themeBehavior,\n\t\t\toptions: {\n\t\t\t\titems: [\n\t\t\t\t\t'type.fontFamily',\n\t\t\t\t\t'global.*',\n\t\t\t\t\t'datavis.*',\n\t\t\t\t\t'menu.backgroundColor',\n\t\t\t\t\t'menu.borderRadius'\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t],\n\tactionHandlers: {\n\t\t...createTooltipActionHandler((updateState) => {\n\t\t\tupdateState({\n\t\t\t\tpath: 'infoTooltip',\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: {ref: null, content: '', opened: false}\n\t\t\t});\n\t\t}),\n\t\t[COMPONENT_DOM_READY]: createXenoDomReadyHandler(\n\t\t\t{\n\t\t\t\txenoPropList: XENOLITH_PROPERTIES,\n\t\t\t\tpreProcessMap,\n\t\t\t\tobservedProps: OBSERVED_PROPERTIES\n\t\t\t},\n\t\t\t({host, state}) => {\n\t\t\t\tconst chartContainer = host.shadowRoot.getElementById(\n\t\t\t\t\t'chart-container'\n\t\t\t\t);\n\t\t\t\treturn new Timeseries({\n\t\t\t\t\tnode: chartContainer,\n\t\t\t\t\ttheme: state.behaviors.theme\n\t\t\t\t});\n\t\t\t}\n\t\t),\n\t\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\t\taction,\n\t\t\tstate,\n\t\t\tdispatch,\n\t\t\tupdateState,\n\t\t\thost,\n\t\t\tproperties\n\t\t}) => {\n\t\t\tconst {name, value, previousValue} = action.payload;\n\t\t\tapplyPropToChartInstance({\n\t\t\t\tchartInstance: state.chartInstance,\n\t\t\t\tvalue,\n\t\t\t\tpreviousValue,\n\t\t\t\tname,\n\t\t\t\txenoPropList: XENOLITH_PROPERTIES,\n\t\t\t\tdispatch,\n\t\t\t\tpreProcessMap,\n\t\t\t\tstate,\n\t\t\t\tupdateState,\n\t\t\t\thost,\n\t\t\t\tproperties\n\t\t\t});\n\t\t},\n\t\t[COMPONENT_DISCONNECTED]: ({action, state}) => {\n\t\t\tunschedule(action.meta.id);\n\t\t\tstate.chartInstance.destroy();\n\t\t},\n\t\t'PRIVATE#TOOLTIP_REQUEST': {\n\t\t\tstopPropagation: true,\n\t\t\teffect: ({action, state, updateState}) => {\n\t\t\t\tschedule(\n\t\t\t\t\taction.meta.id,\n\t\t\t\t\tshowTooltip.bind(null, updateState, action, state)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when the chart is laid out. Payload includes all sizing information for the chart.\n\t\t * @type {{chartLayout: object}}\n\t\t */\n\t\t'NOW_CHART_TIMESERIES#CHART_LAYOUT_CHANGED': {},\n\t\t/**\n\t\t * Dispatched when the user interacts with the register and mutes/unmutes a series. Payload includes a set of all `mutedSeries` objects.\n\t\t * @type {{mutedSeries: Set}}\n\t\t */\n\t\t'NOW_CHART_TIMESERIES#MUTED_SERIES_CHANGED': {},\n\t\t/**\n\t\t * Dispatched when the user interacts with the contextual button.\n\t\t */\n\t\t'NOW_CHART_TIMESERIES#CONTEXTUAL_BUTTON_CLICKED': {}\n\t}\n});\n","module.exports = __TECTONIC__$servicenow_library_chart_19_8_3;","module.exports = __TECTONIC__$servicenow_library_enhanced_element_19_8_3;","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_behavior_theme_19_8_3;","module.exports = __TECTONIC__xenolith_4_1_6;","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./_now-chart-timeseries.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;overflow:auto;flex-direction:column}#chart-container,:host{width:100%;height:100%}.xn-register-item-group{position:relative}.xn-register-item-group:focus{outline:none}.xn-register-item-group:focus:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.xn-register-item-group:focus::-moz-focus-inner{border-style:none}.xn-register-item-group:active:before,.xn-register-item-group:hover:before{content:\\\"\\\";position:absolute;top:0;left:0;z-index:-1;width:100%;height:100%}.xn-register-item-group:hover:before{background-color:RGB(var(--now-datavis_color_chart--primary,var(--now-color--neutral-2,228,230,231)))}.xn-register-item-group:active:before{background-color:RGB(var(--now-datavis_color_chart--secondary,var(--now-color--neutral-4,191,197,198)))}.xn-focusable:focus{outline:2px solid RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142)));outline-offset:2px}.xn-focusable:focus::-moz-focus-inner{border-style:none}.now-chart-screen-reader-table-parent{position:relative;height:0}.now-chart-screen-reader-table-parent .now-chart-screen-reader-table{position:absolute;top:0;left:0;margin-block-start:.75rem}.now-chart-contextual-button-wrapper{position:relative;width:0;height:0}.now-chart-contextual-button-wrapper .now-chart-contextual-button{position:absolute;top:0;left:0}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","const chartLabelConfig = {\n\tchartLabelConfig: {\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tyLabel: {type: 'string'},\n\t\t\ty0Label: {type: 'string'},\n\t\t\ty1Label: {type: 'string'},\n\t\t\talignment: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['left', 'middle', 'right']\n\t\t\t},\n\t\t\tfontFamily: {type: 'string'},\n\t\t\tfontSize: {type: ['string', 'number']},\n\t\t\tfontStyle: {type: 'string'},\n\t\t\tfontWeight: {type: 'string'}\n\t\t}\n\t}\n};\n\nexport const accessibilityConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tdashPatterns: {type: 'boolean'},\n\t\tmarkers: {type: 'boolean'},\n\t\tmonochrome: {type: 'boolean'},\n\t\topacity: {type: 'boolean'},\n\t\tstrokeWidth: {type: 'boolean'}\n\t}\n};\n\nexport const annotationsConfig = {\n\ttype: 'object',\n\tproperties: {\n\t\taxis: {type: 'string'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\tsymbol: {type: 'string'},\n\t\tsymbolSize: {type: 'string'},\n\t\tsymbolScale: {type: 'string'},\n\t\tsymbolColor: {type: 'string'},\n\t\tlineColor: {type: 'string'},\n\t\tlineStrokeWidth: {type: 'number'},\n\t\tlineDashPattern: {type: 'string'},\n\t\thideLine: {type: 'boolean'},\n\t\tcircleRadius: {type: 'number'}\n\t}\n};\n\nexport const annotationsDataPointSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tx: {type: 'number'},\n\t\ty: {type: 'number'},\n\t\ttype: {type: 'string'},\n\t\theader: {type: 'string'},\n\t\tmessage: {type: 'string'}\n\t},\n\trequired: ['x']\n};\n\nconst tickConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tposition: {type: 'string', enum: ['center', 'before', 'after', 'inline']},\n\t\tfontFamily: {type: 'string'},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\trotation: {type: 'number'},\n\t\ttranslation: {type: 'array', items: {type: 'number'}},\n\t\ttickFormat: {type: 'string'},\n\t\ttickPadding: {type: 'number'},\n\t\ttickSizeInner: {type: 'number'},\n\t\ttickSizeOuter: {type: 'number'},\n\t\tticks: {type: ['number', 'object']},\n\t\ttickArguments: {type: 'array'},\n\t\ttickValues: {type: 'array', items: {type: 'number'}},\n\t\tdisabled: {type: 'boolean'},\n\t\tlabelColor: {type: 'string'},\n\t\ttickColor: {type: 'string'},\n\t\tstrokeWidth: {type: 'number'},\n\t\twrapLabels: {type: 'boolean'},\n\t\ttruncationType: {type: 'string', enum: ['start', 'middle', 'end']},\n\t\tmaximumSize: {type: 'number'}\n\t}\n};\n\nconst titleConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\ttranslation: {type: 'array', items: {type: 'number'}},\n\t\tpadding: {type: 'number'},\n\t\tcolor: {type: 'string'},\n\t\tcustomLocation: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tx: {type: 'number'},\n\t\t\t\ty: {type: 'number'},\n\t\t\t\tr: {type: 'number'},\n\t\t\t\tanchor: {type: 'string', enum: ['middle', 'start', 'end']}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const axisConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\torientation: {type: 'string', enum: ['left', 'right', 'top', 'bottom']},\n\t\ttickConfig: tickConfigSchema,\n\t\ttitleConfig: titleConfigSchema,\n\t\ttranslation: {type: 'array', items: {type: 'number'}},\n\t\tstrokeWidth: {type: 'number'},\n\t\ttitle: {type: 'string'},\n\t\torder: {type: 'number'},\n\t\tautoRotateLabels: {type: 'boolean'}\n\t}\n};\n\nexport const bandSeriesConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taxis: {type: 'string'},\n\t\tcolor: {type: 'string'},\n\t\tcolorPalette: {type: 'array', items: {type: 'string'}},\n\t\tfor: {type: 'string'},\n\t\tmutedOpacity: {type: 'number'},\n\t\tmutedStrokeOpacity: {type: 'number'},\n\t\topacity: {type: 'number'},\n\t\tstroke: {type: 'string'},\n\t\tstrokeOpacity: {type: 'number'},\n\t\tstrokeWidth: {type: 'number'},\n\t\ttype: {type: 'array', items: {const: 'area'}},\n\t\tx: {type: 'string'},\n\t\ty0: {type: ['string', 'number']},\n\t\ty1: {type: 'string'},\n\t\tchartLabelConfig\n\t}\n};\n\nexport const dataLabelConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tformatters: {type: 'object'},\n\t\talign: {type: 'string', enum: ['above', 'top', 'middle', 'bottom']},\n\t\tstacked: {type: 'string', enum: ['individual', 'cumulative', 'total']},\n\t\tclipped: {type: 'string', enum: ['show', 'hide', 'nudge']},\n\t\tcollisions: {type: 'string', enum: ['show', 'hide']},\n\t\tshowBox: {type: 'boolean'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tfontColor: {type: 'string'}\n\t}\n};\n\nconst registerStyleConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tvalueColor: {type: 'string'},\n\t\tmutedOpacity: {type: 'number'},\n\t\tlabelColor: {type: 'string'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\tseparator: {type: 'string'},\n\t\txFormat: {type: 'string'},\n\t\tyFormat: {type: 'string'}\n\t}\n};\n\nexport const registerConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tconfig: registerStyleConfigSchema,\n\t\torientation: {type: 'string', enum: ['horizontal', 'vertical']},\n\t\texpandToFit: {type: 'boolean'},\n\t\tlegendOnly: {type: 'boolean'},\n\t\tshowBorder: {type: 'boolean'},\n\t\tsmallSpacing: {type: 'boolean'},\n\t\toneLine: {type: 'boolean'},\n\t\tjustifyItems: {type: 'string', enum: ['start', 'center', 'end']},\n\t\tdisableGrid: {type: 'boolean'},\n\t\thardMute: {type: 'boolean'},\n\t\tshowPercentages: {type: 'boolean'},\n\t\tpercentagesOnly: {type: 'boolean'}\n\t}\n};\n\nexport const seriesConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taxis: {type: 'string'},\n\t\tcolor: {type: 'string'},\n\t\tcolorPalette: {type: 'array', items: {type: 'string'}},\n\t\tdashPattern: {type: 'string'},\n\t\tfor: {type: 'string'},\n\t\tmutedOpacity: {type: 'number'},\n\t\tmutedStrokeOpacity: {type: 'number'},\n\t\topacity: {type: 'number'},\n\t\tshowGaps: {type: 'boolean'},\n\t\ttype: {\n\t\t\toneOf: [\n\t\t\t\t{type: 'string'},\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: [\n\t\t\t\t\t\t\t'area',\n\t\t\t\t\t\t\t'line',\n\t\t\t\t\t\t\t'bar',\n\t\t\t\t\t\t\t'groupedBar',\n\t\t\t\t\t\t\t'scatter',\n\t\t\t\t\t\t\t'spline',\n\t\t\t\t\t\t\t'step'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tx: {type: 'string'},\n\t\ty: {type: 'string'},\n\t\ty0: {type: 'string'},\n\t\ty1: {type: 'string'},\n\t\tchartLabelConfig\n\t}\n};\n\nexport const targetSeriesConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taxis: {type: 'string'},\n\t\tcolor: {type: 'string'},\n\t\tdashPattern: {type: 'string'},\n\t\tfor: {type: 'string'},\n\t\tmutedOpacity: {type: 'number'},\n\t\tmutedStrokeOpacity: {type: 'number'},\n\t\topacity: {type: 'number'},\n\t\tradius: {type: 'number'},\n\t\tshowLabels: {type: 'boolean'},\n\t\tstroke: {type: 'string'},\n\t\tstrokeOpacity: {type: 'number'},\n\t\tstrokeWidth: {type: 'number'},\n\t\tx: {type: 'string'},\n\t\ty: {type: 'string'}\n\t}\n};\n\nexport const thresholdConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taxis: {type: 'string'},\n\t\tfontColor: {type: 'string'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tfontStyle: {type: 'string'},\n\t\tstrokeWidth: {type: 'number'},\n\t\tdashPattern: {type: 'string'},\n\t\thideLabel: {type: 'boolean'},\n\t\thideValue: {type: 'boolean'},\n\t\tshowBox: {type: 'boolean'},\n\t\tformat: {type: 'string'},\n\t\tcolor: {type: 'string'}\n\t}\n};\n\nexport const thresholdDataPointSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tvalue: {type: 'number'},\n\t\ttype: {type: 'string'},\n\t\tlabel: {type: 'string'}\n\t}\n};\n","module.exports = __TECTONIC__$devsnc_sn_chart_screen_reader_table;","module.exports = __TECTONIC__$servicenow_now_button;","module.exports = __TECTONIC__$servicenow_now_tooltip;","module.exports = __TECTONIC__$servicenow_library_schemas_19_8_3;"],"sourceRoot":""}