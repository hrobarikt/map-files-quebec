{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/types/data-source.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/types/field.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/action-constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/model/chart-model.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/types/chart-type.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"get\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/chart-settings.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/types/metric.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/view-constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/seismic/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_accordion\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_behavior_rtl_19_0_6\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/metric/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/now-accordion/auto-scroll-to-visibility.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__sn_devx_components\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/model-options.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/data-source/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_toggle\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$now_par_components_sn_par_pillar\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/types/axis.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"isEqual\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/model-validators.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/helpers/transform-metadata.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/popover-config.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/axis/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_heading\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_popover\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/model/chart-props.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/metric/metric-datasource.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"cloneDeep\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/display-settings/helpers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/toggle/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_label_value\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$now_par_components_sn_par_popover\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/props/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/is-date-field.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/metric/metric-label.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/options.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/model/model-converter.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/preferences-security-action-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_tooltip\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/empty-state/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/styles.scss?1d43","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_select\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/get-named-attributes.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/can-sort.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/is-numeric-field.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/get-field-definition-key.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"isEmpty\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/model-action-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/settings.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/auto-update-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"find\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/common/popover-content.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/object-utils.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_loader\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/(webpack)/buildin/global.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_message\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_illustration\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/helpers/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/string-utils.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/styles.scss?fea1","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/aggregate-fields-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/settings-helpers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/sub-settings/metric-label-position.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/styles.scss?08cd","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/styles.scss?b5e6","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/visualizations-config-panel.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/can-count-distinct.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/can-group.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/can-trendby.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/can-sum.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/field/get-field-metadata-request.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"intersection\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/metric/metric-unit.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/lifecycle-action-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"pick\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__moment_2_24_0\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"omitBy\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"isUndefined\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/action-creators.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/seismic/effect-proxy.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/seismic/jsxif.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/toggle/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/main-view.scss?1484","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/main-view.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/toggle/styles.scss?db68","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/toggle/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"mapKeys\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"camelCase\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/ui-action-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/data-source-info-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/uuid/stringify-uuid.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/uuid/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/color-palette-action-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/actions/fields-action-handlers.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/main-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/chart-type-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/legends-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/component-header-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/axis-settings-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/date-range-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/data-label-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/display-settings-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/views/sorting-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/source-selector.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/utils.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"isPlainObject\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"setWith\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"clone\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_content_tree\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_icon\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/styles.scss?b40d","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-selector/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/table-records-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_record_list_connected\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/filter-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_collapse\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/condition-builder-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_condition_builder\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/props/has-property-changed.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_ui_effect_http\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/styles.scss?055c","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/table-configuration/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-preview/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-preview/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/indicator-properties.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__sn_component_visualization\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/styles.scss?27d8","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-properties/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-preview/state.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-preview/styles.scss?9adc","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-preview/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_typeahead\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/cache.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/styles.scss?ae7b","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/breakdown-selector/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/constants.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/styles.scss?8c5b","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/indicator-configuration/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/empty-state/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/empty-state/styles.scss?8833","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/empty-state/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/styles.scss?bf48","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-configuration/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/config-panel-empty-view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/helpers/element/focus.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/styles.scss?b978","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/source-list/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/group-by-popover.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_dot_walk\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/styles.scss?ab77","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/dot-walk/cache.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/stack-by-popover.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/group-by-selector/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"uniq\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/metric-popover-content.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/metric-configuration/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__lodash_4_17_4[\\\"isArray\\\"]\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/styles.scss?3941","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/additional-settings/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/styles.scss?c613","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/data-update-settings/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/trendby-selector.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/trendby-popover-content.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/trendby-selector/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/styles.scss?4a6d","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/index.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/view.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_input\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/color-rule-popover.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/styles.scss","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-rules/actions.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/color-palette/action.js","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/external \"__TECTONIC__$servicenow_now_tabs\"","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/styles.scss?4d21","webpack://__TECTONIC__$servicenow_now_uxf_visualization_config_panel/./src/visualizations-config-panel/styles.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__$servicenow_ui_core","__TECTONIC__sn_translate","SOURCE_TYPE_INDICATOR","SOURCE_TYPE_TABLE","SOURCE_TYPE_TABLE_SOURCE","INDICATOR_TYPE","AUTOMATED","FORMULA","MANUAL","EXTERNAL","AGGREGATE_TYPE","COUNT","SUM","AVERAGE","MIN","MAX","COUNT_DISTINCT","isDurationField","isCurrencyField","isFxCurrencyField","getUnit","FIELD_TYPES","REFERENCE_TYPE","CHOICE_TYPE","GLIDE_DURATION","TIMER","CURRENCY","PRICE","FX_CURRENCY","INTEGER","UNIT_DURATION","createFieldDefFromMetadata","metadata","fieldDefinition","attributes","label","type","internalType","extendedTable","reference","canMatch","canmatch","canSort","cansort","isArray","array","isEdgeEncrypted","edgeEncrypted","isMultiText","multitext","isRange","unit","canCountDistinct","canTrendBy","canSum","canGroupBy","Boolean","cangroup","canGroup","UNIT_CURRENCY","UNIT_FX_CURRENCY","UNIT_DECIMAL","DATE_FIELD_TYPES","isGlideDurationFormat","getNamedAttributes","globalActionTypes","propsChange","styleChange","PREFIX","SET_CHART_TYPE","CHART_TYPE_SELECTED","UPDATE_USER_PREFERENCES","UPDATE_USER_PREFERENCES_SUCCESS","UPDATE_USER_PREFERENCES_FAILURE","RETRIEVE_FIELD_METADATA","RETRIEVE_FIELD_METADATA_SUCCESS","RETRIEVE_FIELD_METADATA_FAILURE","RETRIEVE_PREFERENCES_AND_SECURITY","RETRIEVE_PREFERENCES_AND_SECURITY_SUCCESS","RETRIEVE_PREFERENCES_AND_SECURITY_FAILURE","RETRIEVE_DATA_SOURCE_OPTIONS","RETRIEVE_MULTI_DATA_SOURCE_OPTIONS","RETRIEVE_TABLE_INFO_REQUESTED","RETRIEVE_SOURCE_TABLE_INFO_REQUESTED","RETRIEVE_TABLE_INFO_SUCCESS","RETRIEVE_TABLE_INFO_FAILURE","RETRIEVE_INDICATOR_INFO_REQUEST","RETRIEVE_INDICATOR_INFO_SUCCESS","RETRIEVE_INDICATOR_INFO_FAILURE","VERIFY_DATA_SOURCE_INFO_IS_LOADED","GROUP_BY_SELECTED","SET_GROUP_BY","DATA_SOURCE_INFO_LOADED","X_AXIS_SHOW_MAX","X_AXIS_TIME_INPUT","X_AXIS_TIME_TYPE_INPUT","REMOVE_DATA_SOURCE","SET_SHOW_LEGEND","SET_SHOW_LEGEND_VALUE","SET_SHOW_LEGEND_PERCENTAGE","SET_LEGEND_POSITION","SET_DATA_LABEL_POSITION","SET_DATA_LABEL_SETTINGS","SET_SHOW_DATA_LABEL_AS","SET_DATA_LABEL_STACKED_VALUE","SET_OVERLAPPING_LABELS","SET_X_AXIS_NAME","SET_Y_AXIS_NAME","SET_Y_AXIS_POSITION_VALUE","SET_AXIS_FROM_RANGE","SET_AXIS_TO_RANGE","X_AXIS_NAME","Y_AXIS_NAME","AXIS_RANGE_FROM","AXIS_RANGE_TO","UPDATE_VISUALIZATION","SET_AXIS_SETTINGS","SET_Y_AXIS_CONFIG","SET_SORT_BY","SET_SINGLE_SCORE_SIZE","SET_ORDER_BY","SET_BORDER","SET_REALTIME","SET_REALTIME_INDICATOR","SET_AUTO_UPDATE","SET_VARIANT","SET_MODEL_PROPS","SET_DECIMAL_PRECISION","SET_CONTAINER_STYLE","LOAD_ALL_COLOR_OPTIONS","LOAD_ALL_COLORS_SUCCESS","SET_DISPLAY_ZERO","SET_HIDE_HEADER","SET_DATA_SOURCE_ERROR","SET_CAN_CLICK","UNREADABLE_INDICATOR","INVALID_INDICATOR","UNREPORTABLE_TABLE","INVALID_TABLE","initialState","chartModel","undefined","dataSourceInfos","isLoadingDataSource","isInitializingDotWalkFields","properties","selectedTab","CONFIG_TAB","hasChangesToUpdate","userPreferences","sysProperties","dotWalkFieldDefinition","singleColors","paletteColors","accordionState","dataSources","metric","trendBy","groupBy","additionalSettings","componentHeader","filterSettings","displaySettings","sorting","yAxis","xAxis","color","legend","dataLabel","security","isAdmin","CHART_TYPES","BAR","HORIZONTAL_BAR","PIE","DONUT","SEMI_DONUT","SINGLE_SCORE","LINE","AREA","SPLINE","STEP_LINE","COLUMN","MULTIPLE_DS_UNSUPPORTED","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","__TECTONIC__lodash_4_17_4","GROUP_BY_MANDATORY","GROUP_BY_OPTIONAL","GROUP_BY_NOT_SUPPORTED","STACK_BY_OPTIONAL","STACK_BY_NOT_SUPPORTED","TREND_BY_MANDATORY","TREND_BY_NOT_SUPPORTED","TREND_BY_OPTIONAL","CHART_TYPES_CONFIG","TIMESERIES_CHART_TYPES","PIES_CHART_TYPES","DONUT_CHART_TYPES","BAR_CHART_TYPES","DEFAULT_TRUE_SETTINGS","CHART_MENU_GROUPS","chartIcon","menuGroup","menuOrder","trendByLabel","sort","x1","x2","METRIC_CHART_TYPES","getChartConfig","chartType","chartConfig","find","config","Error","isSameChartFamily","chartType1","chartType2","STACKED","SIDE_BY_SIDE","STYLE_TAB","LEGEND_POSITION_LEFT","LEGEND_POSITION_TOP","LEGEND_POSITION_RIGHT","LEGEND_POSITION_BOTTOM","DATE_RANGE_TYPE","DEFAULT_AXIS_RANGE","DEFAULT_DECIMAL_PRECISION","DATE_RANGE_AMOUNT_DFT","DAYS","MONTHS","YEARS","FREQUENCY_OPTIONS","DAILY","WEEKLY","BI_WEEKLY","FOUR_WEEKLY","MONTHLY","BI_MONTHLY","QUARTERLY","FISCAL_QUARTERLY","HALF_YEARLY","YEARLY","FISCAL_YEARLY","DATA_LABEL_POSITION_ABOVE","LEGEND_POSITION_OPTIONS","DATA_LABEL_POSITION_TOP","DATA_LABEL_POSITION_MIDDLE","DATA_LABEL_POSITION_BOTTOM","DATA_LABEL_STACKED_INDIVIDUAL","DATA_LABEL_POSITION_OPTIONS","DATA_LABEL_STACKED_TOTAL","DATA_LABEL_STACKED_CUMULATIVE","SORT_BY_NAME","DATA_LABEL_STACKED_VALUES","SORT_BY_VALUE","SORT_BY_RANGE","Y_AXIS_POSITION_LEFT","SORT_BY_OPTIONS_RANGE","SORT_BY_OPTIONS_NON_RANGE","ORDER_ASC","ORDER_DESC","X_AXIS_DATE_RANGE_TYPES","frequencyRange","Y_AXIS_POSITION_RIGHT","SHOW_DATA_LABEL_AS_PERCENT","Y_AXIS_POSITION_CHOICES","SHOW_DATA_LABEL_AS_VALUE","SHOW_DATA_LABEL_AS_VALUE_AND_PERCENT","AUTO_UPDATE_PREFERENCE","SHOW_DATA_LABEL_AS_OPTIONS","INPUT_BLUR","VIZ_CONFIG_PREFERENCES","COLOR_TYPE_PALETTE","COLOR_TYPE_SINGLE","COLOR_TYPE_FIXED","COLOR_TYPE_DEFAULT","__TECTONIC__$servicenow_now_accordion","__TECTONIC__$servicenow_behavior_rtl_19_0_6","autoScrollToVisibility","e","detail","ref","target","path","composedPath","expanded","setTimeout","scrollToVisitibility","accordionEl","accordionItem","tagName","scrollIntoView","behavior","block","inline","__TECTONIC__sn_devx_components","getStackByOptions","dataSource","sourceType","groupByField","options","tableFields","filter","field","getGroupByOptions","hasStackByOptions","hasGroupByOptions","fieldDefinitions","getGroupByOptionsTable","getGroupByOptionsIndicator","isFieldCompatible","fieldDefinition1","fieldDefinition2","includes","getGroupByOptionsFilter","firstDataSource","filterGroupBy","firstGroupByField","firstDataSourceInfo","firstGroupByDefinition","getFieldDefinition","dataSourceInfo","breakdownsPerIndicator","ds","getBreakdownsAvailableToGroupBy","breakdownsAvailableInAllIndicators","breakdowns","b","sysId","appliedBreakdowns","reduce","acc","breakdown","isApplied","aggregationFunctionFilters","getTableReferenceFields","getTrendByOptions","unshift","AGGREGATE_FUNCTION_SUM","AGGREGATE_FUNCTION_AVG","AGGREGATE_FUNCTION_MIN","AGGREGATE_FUNCTION_MAX","AGGREGATE_FUNCTION_DISTINCT","getTimeSeriesAllowedFrequencies","getAggregateOptionsTable","aggregateFunction","AGGREGATE_FUNCTION_COUNT","frequenciesPerIndicator","frequencies","aggregates","a","frequencyValue","getAggregateOptionsIndicator","defaultId","isTimeSeries","timeSeriesAllowedFrequencies","frequency","disabled","BTN_POPOVER_APPLY","BTN_POPOVER_CLOSE","BTN_ADD_METRIC","PILLAR_ACTION_EDIT","PILLAR_ACTION_DELETE","PILLAR_ACTION_ADD_NEW_AXIS","FIELD_AGGREGATE_FUNCTION","FIELD_AGGREGATE_FIELD","FIELD_AGGREGATION_SOURCE","FIELD_DATA_SOURCE","FIELD_AGGREGATE_INDICATOR","FIELD_LABEL","METRIC_POPOVER","SET_METRICS","ADD_NEW_AXIS_TO_METRIC","INDICATOR_EMPTY_STRING_ID_REPLACEMENT","AGGREGATION_SOURCE_AS_ENTERED","AGGREGATE_CONFIG","AGGREGATION_SOURCE_REFERENCE","AGGREGATION_SOURCE_CONFIG","MAIN_SERIES_LABEL_SET","SET_AGGREGATION_SOURCE","test","getFieldDefinitionKey","tableName","fieldName","f","__TECTONIC__$servicenow_ui_effect_graphql","GROUP_BY_MAX_NUMBER_ALL","GROUP_BY_FIELD","GROUP_BY_MAX","NO_OF_GROUP_BASED_ON","SET_GROUP_BY_MAX","SET_NO_OF_GROUP_BASED_ON","STACK_BY_FIELD","SHOW_OTHERS","MAIN_POPOVER","SET_CHART_VARIATION","APPLY_GROUP_BY_POPOVER","CLOSE_GROUP_BY_POPOVER","CLICK_BUTTON_ADD_GROUP_BY","POPOVER_CONTENT_GROUP_BY","POPOVER_CONTENT_STACK_BY","PILLAR_ADD_ACTION","PILLAR_EDIT_ACTION","PILLAR_REMOVE_ACTION","RETRIEVE_FIELD_LABEL","RETRIEVE_FIELD_LABEL_SUCCESS","PILLAR_GROUP_BY","PILLAR_STACK_BY","DEFAULT_DROPDOWN_VALUE","NO_OF_GROUP_BASED_ON_FIRST_METRIC","GROUP_BY_DEFAULT_MAX","GROUP_BY_MAX_NUMBER","NO_OF_GROUP_BASED_ON_PER_METRIC","NO_OF_GROUP_BASED_ON_OPTIONS","CHART_VARIATIONS","uuidPropsOrder","getUniqueDataSourceLabel","shallowDataSourceCompare","otherDataSource","isSameDataSource","currentDataSource","newDataSource","uuid","disDisplayLabel","iteration","getDataSourceUniqueId","timestamp","Date","getTime","isFieldReportRange","info","isDataSourceGroupByReportRange","isAnyDataSourceGroupByReportRange","isFieldReportRangeForDataSource","__TECTONIC__$servicenow_now_toggle","__TECTONIC__$now_par_components_sn_par_pillar","VARIABLES","VARIABLE","VARIABLE_CHOICE","QUESTIONS","STRING","CHOICE","CURRENCY2","REFERENCE","BOOLEAN","JOURNAL","JOURNAL_INPUT","DECIMAL","NUMERIC","FLOAT","DATE","DATETIME","DUE_DATE","GLIDE_DATE","GLIDE_DATE_TIME","GLIDE_TIME","GLIDE_LIST","DOMAIN_NUMBER","DOMAIN_ID","AUTO_INCREMENT","PERCENT_COMPLETE","REF_ELEMENT_PREFIX","DOCUMENT_ID","PRIMARY_AXIS","AXIS_PREFIX","AXIS_ORIENTATION_LEFT","AXIS_ORIENTATION_RIGHT","isRealtimeRelevant","getValidRefreshFrequency","isRefreshFrequencyRelevant","refreshFrequency","getFirstOption","firstGroupByOption","getGroupBySupport","getValidChartType","getValidDataSources","state","forEach","getValidGroupByField","stackByField","getValidStackBy","metrics","groupBySupport","groupByOptions","hasGroupByField","isFirstDataSource","firstDefinition","currentDefinition","getValidNoOfGroupBasedOn","getValidGroupByMax","groupByMax","noOfGroupBasedOn","getStackBySupport","getValidShowOthers","showOthers","stackBySupport","stackByOptions","getValidMetric","getValidIsStacked","doesShowChartVariation","isStacked","getValidMetrics","dt","metricFound","index","trendByField","getValidTrendByField","metricIndex","isTableMetric","getValidAggregateFunction","aggregateOptions","aggregateField","getValidAggregateField","aggregationSource","getValidAggregationSource","getMetricDataSource","aggregateIndicator","isIndicatorMetric","getValidAggregateIndicator","getValidYAxisConfigs","supportAxis","axisId","yAxisConfigs","supportMultipleAxis","splice","orientation","metricUnit","getMetricUnit","axisUnit","getAxisUnit","axisConfigFound","ac","validAxisId","getValidAxisId","axisConfig","idealAxisId","getAggregateWithSameFrequency","hasAggregateIndicator","trendByOptions","shouldEnableDecimalPrecision","getValidTrendByFrequency","trendByFrequency","getValidAdditionalSettings","allRelevant","getBooleanSettings","clonedSettings","isSingleScoreIndicator","include_forecast","include_forecast_range","include_change_percentage","include_gap_percentage","getValidLegendOptions","legendSettings","showLegend","showLegendValue","legendPosition","showLegendPercentage","getValidXAxisSettings","axisSettings","previousChartType","getMetricFrequency","filteredRangeTypes","dateRangeTypeDefault","dateRangeType","newSettings","dateRangeShowMax","dateRangeAmount","isChangingToTimeseries","isCurrentTypeStillAvailable","getValidDecimalPrecision","decimalPrecision","dataLabelSettings","some","isFXCurrencyMetric","getValidRealtime","realtime","getValidShowRealtimeIndicator","showRealtimeIndicator","isIndicatorRealtime","isDatabaseView","getValidChartSettings","chartSettings","colorType","colorSysId","sys_id","validColorChoices","COLOR_CHOICES","extraVerification","colorFound","newColorSysId","colorSysID","getValidDisplaySettings","showSortBy","doesShowSortBy","showDisplayZero","doesShowDisplayZero","scoreSize","displayZero","sortByField","getValidXenolithProperties","props","showMetricLabel","totalLabel","getMetricLabel","heading","headingPosition","__TECTONIC__$servicenow_now_button","updateModelWithGroupByValues","dataToApply","fieldValue","indexOf","dataSourceIndex","Number","replace","createTransformMetadataFn","tables","keys","table","camelCaseMapped","fieldMetadata","_","disablePropName","isReference","panelAllowedPositions","nowPopoverAllowedPositions","nowPopoverDropdownPositions","isFilterLoading","isTableLoading","predefinedFilters","getAxisConfigIndex","axisLabels","axisConfigs","lastAxisConfig","axisConfigIndex","sortAxisConfigs","getAxisLabel","axisIndex","String","DEFAULT_FREQUENCY_OPTION","TREND_BY_POPOVER","TREND_BY_SELECTED","TREND_BY_FREQUENCY_SELECTED","SET_TREND_BY","BTN_APPLY_ID","BTN_TRENDBY_POPOVER_CLOSE_ID","__TECTONIC__$servicenow_now_dropdown","__TECTONIC__$servicenow_now_heading","__TECTONIC__$servicenow_now_popover","typingTrack","errorMessages","popoverOpened","popoverClosedAt","localAggregateOptions","dataSourceOptions","dataSourceFound","isAggregateFieldFxCurrency","aggregate","getMetricDataSourceInfo","metric1","metric2","metricFrequency1","metricFrequency2","sameAggregateFound","sameAggregateFrequencyFound","actionTypesSourceConfiguration","ADD_SOURCE","CANCEL","handleRecenlyUsedTableUpdate","createGraphQLEffect","variableList","handleRecenlyUsedIndicatorUpdate","actions","private","actionHandlers","actionTypes","COMPONENT_BOOTSTRAPPED","coeffects","displayLabel","dispatch","createSelectDatasourceAction","action","stopPropagation","tableInfo","indicatorInfo","operationMetadata","addNewDataSource","editDataSourceIndex","filterQuery","predefinedFilterId","createUpdateRecentTableAction","createAddDatasourceAction","createUpdateRecentIndicatorAction","indicator","VIZ_CONFIG_SOURCE_SELECT_SELECTED","payload","BREAKDOWN_CHANGED","indicatorInfoPatch","updateState","indicatorChanges","UPDATE_RECENT_TABLE","UPDATE_RECENT_INDICATOR","TABLE_CONFIG_CHANGED","tableInfoPatch","currentTableChanges","tableChanges","SELECT_DATASOURCE","tableFilter","tableChange","previewFilterQuery","previewPredefinedFilterId","isExpanded","isEditMode","showCustomConditions","indicatorUuids","hasBreakdown","previewUuid","displaySourceDetails","prefix","LOAD_REQUIRED_DATA","FETCH_ELEMENTS","FETCH_ELEMENTS_SUCCEEDED","FETCH_ELEMENTS_FINISHED","BD_OPERATORS","DEFAULT","MULTI","DYNAMIC","LOAD_COLOR_REQUESTED","COLOR_TYPE_REQUESTED","SET_COLOR_REQUESTED","COLOR_RULE_EDIT","COLOR_RULE_DELETE","ADD_COLOR_RULE","hasTable","piesAndTable","groupByTsAndTable","barAndTable","singleScoreAndTable","hasNoStackBy","barAndNoStackBy","hasNoGroupBy","timeseriesWithoutGroupBy","DEFAULT_SCORE_SIZE","SINGLE_SCORE_SIZES","toUpperCase","createCustomElement","renderer","snabbdom","view","checked","default","disableMargin","infoTooltip","styles","behaviors","rtlBehavior","payloadActionType","ADD_DATA_SOURCE_SELECTED","ADD_NEW_DATA_SOURCE","CHANGE_DATA_SOURCE_LABEL","SAVE_LABEL","SET_OPERATOR","FIELD_OPERATOR","FIELD_VALUE1","FIELD_VALUE2","FIELD_COLOR","FIELD_ORDER","RULE_POPOVER","FIELD_OPERATOR_LESS_THAN","FIELD_OPERATOR_LESS_THAN_OR_EQUAL_TO","FIELD_OPERATOR_EQUAL_TO","FIELD_OPERATOR_GREATER_THAN","FIELD_OPERATOR_GREATER_THAN_OR_EQUAL_TO","FIELD_OPERATOR_BETWEEN","BTN_ADD_COLOR_RULE","EDIT_COLOR_RULE","DELETE_COLOR_RULE","OPERATOR_CONFIG","__TECTONIC__$servicenow_now_label_value","__TECTONIC__$now_par_components_sn_par_popover","createBreakdownAttrUpdateStatePatch","attrName","brIndex","findIndex","x","operation","dotWalkPath","placeholder","errorMessage","transformMetadata","dotWalkingActions","DOT_WALK_PATH_UPDATED","DOT_WALK_OPENED_SET","RETRIEVE_FIELD_DATA","RETRIEVE_FIELD_DATA_SUCCESS","RETRIEVE_FIELD_DATA_FAILURE","DOT_WALK_SEPARATOR","localTrendByList","colorRuleIndex","invalidInput","value1","value2","order","isDateField","getOptionLabel","current","convertModelToProps","model","additional","filters","filtersSettings","xenolithProperties","getAxisSettings","getAxisSettingsFromChartModelToProp","dataConfigurations","convertMetricToDataConfiguration","styleConfigurations","width","chartWidth","height","chartHeight","showDataLabels","yAxisConfig","getYAxisConfig","seriesConfig","getSeriesConfig","extents","getExtent","canClick","variant","border","isRealtime","refreshInterval","kpiDetailsNavigation","followFilters","hideFiltersInfo","filterConfigurations","hideHeader","isTimeSeriesChart","dataLabelConfig","showTotal","align","dataLabelPosition","showOverlappingLabel","showOverlappingLabels","collisions","stacked","stackedValue","valueType","showDataLabelAs","hideRegister","registerConfig","legendOnly","showPercentages","registerPosition","getModelSourceTypeConfiguration","convertPropsToModel","dataConfig","styleConfig","metricConfiguration","chartProps","__viz_config_id","aggregate_field","aggregate_function","aggregation_source","trend_field","chart_settings","main_series_label","colorRules","conditions","condition","convertColorConditionToColorRule","getSeriesConfigFromProps","metricChartType","getMetricsFromProps","legendOptions","getLegendOptions","getAxisSettingsFromPropToModal","axisTimeSettings","period","duration","moment","years","asYears","months","asMonths","days","asDays","isInteger","parseStarTime","start_time","stateXAxisSettings","include_scores","include_benchmark","include_targets","include_thresholds","include_change","include_comments","include_initiatives","include_sparkline","include_trend","include_band","include_global_targets","trend_interval","number_of_groups","selected_groups","show_other","decimal_precision","convertShowOverlappingLabels","buildModelChartSettings","sort_by","orderByField","sort_order","display_zero","getYAxisConfigFromProps","convertUuidToProp","uuidProp","domain","elements_filter_sys_id","elementsFilterSysId","element_sys_ids","elementSysIds","isValidAxisRangeValue","getAxisRange","rangeFromValue","axisRangeFrom","rangeToValue","axisRangeTo","axisRange","y","title","seriesConfigId","axis","isAllowed","xAxisConfig","xAxisName","colorCondition","operator","color_sys_id","modelChartSettings","colorRule","sourceTypeConfiguration","source_type","source_id","getSourceTypeConfiguration","getStartTime","rule","convertColorRuleToColorCondition","buildPropsChartSettings","__viz_config_label","stack_by_field","filter_query","group_by","include_sparkline_global_targets","include_sparkline_personal_targets","include_target_review_date","convertUuidToModel","uuidModel","dataConfigurationIndex","assign","getAxisRangeFromProps","attribute","yAxisRange","RETRIEVE_PREDEFINED_CONDITIONS","PREDEFINED_CONDITIONS_SUCCESS","REMOVE_PREDEFINED_CONDITION","DISCARD_FILTER","EDIT_FILTER","UPDATE_TABLE_PREVIEW","ADD_CUSTOM_CONDITIONS","RETRIEVE_READABLE_QUERY","RETRIEVE_READABLE_QUERY_SUCCESS","TABLES_REQUESTED","TABLES_LOADED","TABLES_FAILED","INDICATORS_REQUESTED","INDICATORS_LOADED","INDICATORS_FAILED","SUGGESTED_REQUESTED","SUGGESTED_LOADED","SUGGESTED_FAILED","INDICATOR_SUGGESTED_REQUESTED","INDICATOR_SUGGESTED_LOADED","INDICATOR_SUGGESTED_FAILED","SEARCH_SOURCE","COMPONENT_INIT","NAME_LIKE","TABLES","INDICATORS","SUGGESTED","TABLES_ID","INDICATORS_ID","SUGGESTED_ID","LIMIT","SOURCE_TYPE_ICONS","TOOLTIP_TEXT","MAP_SOURCE_TYPE_TO_ID","INSUFFICIENT_ROLES","FILTERS_SETTINGS_CHANGE","FIELD_REFRESH_FREQUENCY","SYS_PROP_ALLOW_MANUAL_UPDATE","SYS_PROP_MIN_REFRESH_FREQUENCY","handleDataInitialiationEffect","successActionType","errorActionType","handleUpdatePreferences","handleUpdatePreferencesSuccess","updatedValues","pref","hasUpdated","userDataSysPropertiesActionHandlers","effectProxy","roles","__TECTONIC__$servicenow_now_tooltip","searchQuery","items","selectedItems","expandedItems","loadingPath","isLoading","isLoadingTables","hasAccessToIndicators","breakdownElementsLoading","illustration","required","forceSize","selectInvalid","localOptions","groupByLabel","stackByLabel","opened","dotWalkLabel","result","__TECTONIC__$servicenow_now_select","namedAttributes","pairs","split","parts","isNumericField","request","dispatchPropsChange","newProps","oldProps","newPropKey","newPropValue","entries","oldPropValue","isObject","compareValidProperties","propertyId","notifyUIB","createPatchState","patchState","isAutoUpdateEnabled","areDataSourcesInvalid","getValidChartModelAndOptions","updateAndValidateChartModel","newChartType","SET_XENOLITH_PROPERTIES","ADDITIONAL_SETTINGS_CHANGE","updates","labelEditingValue","labelEditingOnIndex","clonedSource","oldDataSourceId","needsSort","updateChartModel","validChartModelAndOptions","updateVisualizationChart","modelActionHandlers","preferences","elementStyles","elementId","currentStyles","SETTINGS_METADATA","checkIsRelevant","availableSettings","meta","isManualUpdateAllowed","preference","isDefined","booleanValue","autoUpdateEnabled","className","disable-margin","append-to-payload","size","popOverContent","popoverText","obj1","obj2","parse","__TECTONIC__$servicenow_now_loader","g","Function","window","__TECTONIC__$servicenow_now_message","__TECTONIC__$servicenow_now_illustration","getMissingGroupByIcon","icon","extractTableFieldsFromDataToApply","data","fields","formatMultipleLabels","labels","uniqueLabels","lastLabel","pop","createFieldDefinitionFilter","getAggregateFields","dataSourceData","isCount","referenceFields","noOptions","dotWalkMessage","Fragment","select","selected-items","config-aria","transform-metadata","error-message","hasOptionsAvailable","aggregateIndicatorSelectMessages","status","selected-item","messages","search","isChecked","isDisabled","MetricLabelPosition","SET_METRIC_LABEL_POSITION","versionInfo","require","PAR_COMPONENTS_INFO","VizConfigPanel","ex","MainView","transformState","values","schema","pageMetadata","lifeCycleActionHandlers","uiActionHandlers","dataSourceInfoActionHandlers","colorPaletteActionHandlers","fieldsActionHandlers","baseType","can_group","getFieldMetadataRequest","cache","isDotWalk","pushToFields","TABLE_METRIC_UNIT","DURATION","unitId","getChartProps","COMPONENT_PROPERTY_CHANGED","modifier","delay","effect","oldDataSource","oldDs","differentDataSources","dataSourcesNeedsLoad","validatedModel","__TECTONIC__moment_2_24_0","sysID","args","jsxif","class","on-click","managed-checked","interactionType","slot","shouldReplaceStyle","isNaN","host","shadowRoot","devxInput","querySelector","input","elementRef","dataSourceError","setDataSource","dataSourceDisplayLabel","newId","metricWithoutDataSource","shouldRender","handleRetrieveFieldsRequestedEffect","handleRetrieveFieldsBySourceRequested","handleRetrieveIndicatorInfoRequested","loadingIndex","setDataSourceIsLoading","sourceId","stringifyUuid","needsLoad","indicatorDetails","scripted","every","actionName","constants","br","strUuid","UUID_SEPARATOR","UUID_DOMAIN_SEPARATOR","UUID_POS_DOMAIN","UUID_POS_BREAKDOWN","UUID_POS_ELEMENT","UUID_POS_BREAKDOWN_LEVEL2","UUID_POS_ELEMENT_LEVEL2","UUID_MAX_BREAKDOWN_LEVEL","ALL_BREAKDOWN_ELEMENTS","loadAllColorOptions","displayValue","RETRIEVE_FIELD_METADATA_QUERY","handleFieldMetadataRetrieval","definitions","ConfigTabView","minRefreshFrequencyProp","minRefreshFrequency","heading-level","trigger-icon","position","StyleTabView","helpers","TabView","tabItems","fixed-width","ErrorView","message","description","force-size","preferencesLoaded","ChartTypeView","isItemDisabled","doesntSupportMultipleMetrics","hasIndicatorLimitations","groupOptionsDic","groupConfig","children","groupOption","groups","data-testId","panelFitProps","constrain","minHeight","minWidth","maxWidth","maxHeight","checkLegendValueAndChartType","dividers","top","bottom","header","showHeaderPopOverContent","xAxisLabel","yAxisLabel","inputValue","transparent","aria-label","onblur","maxlength","XAxisDateRangeView","showDataLabelAsView","dataLabelPositionView","checkTableAggregationFunction","checkIndicatorTypes","showStackedValuesView","showOverlappingLabelsView","onkeydown","keyCode","which","ctrlKey","metaKey","shiftKey","altKey","isValidDecimalRange","preventDefault","min","max","sizeItems","renderSizeSelector","connectSizeSelectorToStyle","selectedItem","connectToStyle","getSelectedItem","showSingleScoreSize","borderToggle","groupByReportRange","sortByItems","selectedSortByItem","manage-selected","config-role","tooltip-content","configAria","selected","sourceListActions","editDataSource","addNewDSDisabled","multiDataSourceNotSupportedMsg","isEmptyDatasource","getPillarContextOptions","ConfigPanelEmptyStateView","hide-dividers","hook-insert","createSetFocusHandler","elm","context-menu-actions","compact","clickable","on-keydown","getPillarContent","tooltipContent","sourceConfigurationOpened","allowedSourceType","dataSourceSelectorActions","isIndicatorSelected","isTableSelected","isSourceSelected","footerActions","clickActionType","focus","header-label","manage-opened","footer-actions","level","wont-wrap","renderPanelHeader","selectedIndicatorInfo","pathToIndexMap","getSourceItems","results","mappedResults","handleDataLoaded","mappedSourceTypeLimit","count","childrenAvailable","removePath","handleChildrenFailed","hasPath","error","handleTablesRequest","handleIndicatorsRequest","templateVarList","handleSuggestedRequest","handleIndicatorSuggestedRequested","handleComponentInit","isLoadSearchResult","mappedSourceTypeId","tableObject","start","queryConditions","nameContains","loadingArray","indicators","indicatorCount","setItemChildren","suggested","suggestedCount","clearItemChildren","trim","unwrapPath","setItem","togglePath","addPath","fn","lodashPath","ids","next","shift","toLodashPath","clone","childrenCount","onlyFilledSections","hasAnyResults","final","loadingElement","noResultText","noResultsFound","treeComponent","search-term","manage-selected-items","expanded-items","loading-items","overflow","dynamicContent","addDataSourcePopOverContent","__TECTONIC__$servicenow_now_content_tree","__TECTONIC__$servicenow_now_icon","FilterView","global","TEST_SKIP_RENDER_RECORDS","TableRecordsView","filterQueryItems","predefinedFilter","getPreviewPredefinedFilter","query","getFilterQuery","listTitle","hideFilterPanel","hideColumnResizing","hideRefreshButton","hideCellFilter","hidePanelAdvanced","hideRowSelector","hideUnnecessaryRowSelectors","limit","hideViewAll","hidePagination","hideColumnFiltering","hideColumnSorting","__TECTONIC__$servicenow_now_record_list_connected","filterTagLabel","getFilterTag","hide-padding","icon-start","choices","selectedFilter","getSelectedPredefinedFilter","readableQuery","ConditionBuilderView","EditFilterView","readableFilterQuery","DisplayFilterView","__TECTONIC__$servicenow_now_collapse","initialFilterQuery","TEST_SKIP_RENDER_CB","tableLabel","encodedQuery","__TECTONIC__$servicenow_now_condition_builder","onTableChange","loadPredefinedConditions","getReadableQuery","hasPropertyChanged","option","buttonUpdatePreview","LIST_DATA_FETCH_COMPLETE","createHttpEffect","method","queryParams","breadcrumbs","propertyName","paths","previousValue","__TECTONIC__$servicenow_ui_effect_http","loadingBreakdownSelector","indicatorProps","computed","getPropertyDisplayValues","getCalculation","aggregationValue","script","formula","getBreakdowns","typeID","calculation","goal","direction","precision","indicatorSource","indicatorInfoContiditions","tableText","conditionText","indicatorPropertiesConditionPopover","indicatorSourcePopover","getItem","IndicatorProperties","INDICATOR_TYPE_LABEL","INDICATOR_SOURCE","ADITIONAL_CONDITIONS","CALCULATION","AVAILABLE_BREAKDOWNS","noBreakdownsLabel","style","getBreakdownItem","GOAL","FREQUENCY","UNIT","PRECISION","__TECTONIC__sn_component_visualization","breakdownOptions","numberOfConditions","getNumberOfConditions","getCount","otherBreakdowns","availableBreakdownOptions","isAddBreakdownButtonVisible","MAX_BREAKDOWNS","breakdownIndex","loading","operatorOptions","elementOptions","manageSelectedItems","invalid","isElementRequired","errorMsg","hidePadding","visibility","filterParts","canRender","selectedElement","elementLabels","element","brLabel","filterPart","fIndex","elements","text","renderEverything","__TECTONIC__$servicenow_now_typeahead","updateStateFromProps","force","selectedBreakdowns","getBreakdownOptions","allBreakdowns","getOperatorOptions","breakDowns","indicatorType","doMultiElementsApply","isElementFilterExists","getElementFilters","bd","elementFilters","handleFilters","newBreakdowns","keyUuid","isSomethingRequired","breakdownProps","handleButtonClicked","indexToDelete","el","handleSelectElements","selectedElementWithType","brData","fetchElementsEffect","COMPONENT_DISCONNECTED","invalidateCache","baseUuid","elementFilterOptions","optsFromCache","getElementOptionsFromCache","unMatchedElement","setElementOptionsToCache","actionType","getBreakdownOptionsFromCache","setBreakdownOptionsToCache","loadIndicatorInfo","INDICATOR_INFO_REQUESTED","handleIndicatorInfoRequested","INDICATOR_INFO_SUCCESS","INDICATOR_INFO_FAILURE","getReadableConditions","shouldAddElementFilters","removeDisabledBreakdowns","activeBreakdowns","breakdownFound","ab","ef","breakdownsWithElementFilters","elementFilterMap","updateBreakdownsWithElementFilters","validUuid","validPreviewUuid","getBreakdownsLoading","TOGGLE_INDICATOR_SOURCE_DETAILS","QUERY_LENGTH_LIMIT","INDICATOR_CONFIG_CHANGED","alignment","setWebcomponentFocus","elemGetter","requestAnimationFrame","handlePillarSourceClick","handleSaveLabel","dispatchCloseRequestEvent","SN_PAR_POPOVER_CLOSE_REQUEST","stateChanges","SN_PAR_PILLAR_ACTION_CLICKED","SN_PAR_PILLAR_CLICKED","GroupByView","groupBySelectorActions","preventClickFromOpenPopover","getAccordionContent","isIndicator","hasGroupBy","allowedElements","infoMessage","selectedElements","pillarActions","hasStackBy","isTimeseriesWithMultipleMetrics","allowGroupBy","groupBySelectorClass","showChartVariation","getGroupByPopover","getStackByPopover","showButton","popoverContent","popoverTarget","isFirstGroupByReportRange","triggerContent","ellipsis","positions","position-target","shared-state","groupByAccordionLabel","sharedState","patchedChartModel","isTimeseries","showNumberOfGroups","showNoOfGroupBasedOn","isApplyDisabled","showOthersToggle","bare","hasReferenceFields","dotWalkErrorMessage","triggerLabel","managed-opened","interaction-type","hide-tail","aria-haspopup","aria-labelledby","aria-expanded","aria-describedby","display","dot-walk-path","table-name","dotWalkEnabledFieldTypes","__TECTONIC__$servicenow_now_dot_walk","loadDotWalkLabel","fieldLabel","getFieldLabelFromCache","separator","handleRequestFieldLabel","handleFieldDataRetrieval","handleRequestFieldLabelSuccess","setFieldLabelToCache","definition","eventHandlers","events","document","event","classList","contains","popoverAction","getDataToApplyAndOptionsAfterFieldChange","selectedValue","newDataToApply","newLocalOptions","clonedChartModel","getInitialDataToApplyAndOptions","isPillarGroupBy","handlePillarClicked","componentHost","createCleanPopoverState","groupByFieldName","stackByFieldName","valid","validateTypeaheads","getFieldLabel","loadFieldLabels","handleGroupByMaxSelection","handleNoOfGroupBasedOnSelection","groupByFieldFilter","metricView","aggregateSelectorActions","getPillarModifier","getInvalidAggregationIcon","supportMultipleMetrics","metricsPerDataSource","contextMenuActions","axisOptions","metricUnic","metricChartTypes","modifier-label","getPillars","editMetricIndex","dataSourceSelectMessages","getAggregateOptions","getDataSourceOptions","handleDropdownSelection","dataToApplyOld","typingTrackOld","errorMessagesOld","parPopover","refit","handleDynamicActions","updatedMetrics","updateMetric","handleDeleteAction","toggleMetricPopover","popoverOpenedOld","selectorPopoverTarget","createCleanClosedPopoverState","handleApply","validAggregationField","newMetrics","metricsToBeApplied","newMetricIndex","getMetricsToBeApplied","updateDataToApplyNowDropdownItemSelected","additionalSettingsActions","settings","renderSubSettings","filtersSettingsActions","showRealTime","showRefreshFrequency","followFiltersPopOverContent","manageValue","manageInvalid","handleNowInputValueSet","refreshFrequencyErrorMessage","frequencyLabel","getOptionsForMetric","pillarLabel","getFieldDefinitionLabel","getMissingTrendByIcon","getLocalTrendByField","getTrendByFieldValue","localTrendByFrequency","noOptionsMessage","fieldError","payloadActionMetricIndex","dotWalkError","toggleTrendbyPopover","normalizeMetrics","SN_PAR_POPOVER_OPENED_SET","fieldTyped","frequencyTyped","frequencyError","validateTrendbyValues","colorPaletteView","colorPaletteActions","colorId","singleScoreAndIndicator","singleScoreAndReport","colorItems","numberOfColorSeries","metricLabel","colorRuleView","colorRuleActions","renderColorRules","displayRule","colorRuleLabel","colorRulePillar","colorRulePopover","positionTarget","addColorRuleButton","colorRuleViewContent","__TECTONIC__$servicenow_now_input","firstColor","labelValue1","isValue1GreaterThanValue2","getDefaultClosedPopoverState","toggleColorRulePopover","newInvalidInput","handleSetOperator","deleteColorRule","handleSelectedItemSet","__TECTONIC__$servicenow_now_tabs"],"mappings":"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","file":"now-uxf-visualization-config-panel.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 111);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__sn_translate;","//@flow\nimport { type Uuid } from './uuid';\nimport { type FieldDefinition } from './field';\nimport { type Aggregate, type Breakdown } from './indicator';\n\nexport type DataSourceType = 'table' | 'analytics' | '';\n\nexport const SOURCE_TYPE_INDICATOR = 'analytics';\nexport const SOURCE_TYPE_TABLE = 'table';\nexport const SOURCE_TYPE_TABLE_SOURCE = 'source';\n\n/**\n This object used to store properties retrieved from dataConfiguration\n */\nexport type DataSource = {|\n\tid: string,\n\tlabel: string,\n\tsourceType: DataSourceType,\n\ttableName?: string,\n\tuuid?: Uuid,\n\tfilterQuery?: string,\n\tpredefinedFilterId?: string,\n\tgroupByField?: string,\n\tstackByField?: string,\n|};\n\nexport type PayloadAddDataSource = {\n\taddNewDataSource: boolean,\n\tdataSourceIndex?: number,\n\tdataSource: DataSource,\n};\n\n/**\n This object is used to cache and provide data loaded from API\n*/\nexport type DataSourceInfo = {|\n\tdisplayLabel?: string,\n\n\t// Table-specific fields\n\ttableFields?: FieldDefinition[],\n\tisDatabaseView?: boolean,\n\n\t// Indicator-specific fields\n\taggregates?: Aggregate[],\n\tbreakdowns?: Breakdown[],\n\tscripted?: boolean,\n\taggregate?: number,\n\ttype?: IndicatorType,\n\tfrequency?: string,\n\tfrequencyValue?: number,\n\tisIndicatorRealtime?: boolean,\n\tunitId?: string,\n|};\n\nexport type DataSourceInfos = { [string]: DataSourceInfo };\n\nexport const INDICATOR_TYPE = {\n\tAUTOMATED: '1',\n\tFORMULA: '2',\n\tMANUAL: '3',\n\tEXTERNAL: '4',\n};\n\nexport const AGGREGATE_TYPE = {\n\tCOUNT: 1,\n\tSUM: 2,\n\tAVERAGE: 3,\n\tMIN: 4,\n\tMAX: 5,\n\tCOUNT_DISTINCT: 6,\n};\n\nexport type IndicatorType = $Keys<typeof INDICATOR_TYPE>;\n","// @flow\nimport {\n\tcanCountDistinct,\n\tcanGroup,\n\tcanSum,\n\tcanTrendBy,\n\tgetNamedAttributes,\n} from '../../helpers/field';\n\nexport type FieldBase = {\n\tattributes?: string,\n\tlabel: string,\n\tname: string,\n\textendedTable?: boolean,\n\ttype: string,\n\tinternalType: string,\n\treference: ?string,\n\tbaseType?: string,\n};\n\nexport type FieldMetadata = FieldBase & {\n\tcanmatch: boolean,\n\tcansort: boolean,\n\tcangroup?: boolean,\n\tchoiceType: number,\n\tchoices: any[],\n\tcolumnType: string,\n\tdefault: string,\n\tfilterable: boolean,\n\thint: string,\n\tinternalType: string,\n\tarray: string,\n\tedgeEncrypted: boolean,\n\tmultitext: boolean,\n\tisRange: boolean,\n\tlabel: string,\n\tmandatory: boolean,\n\tmaxLength: number,\n\tmaxUnit: string,\n\tname: string,\n\toperators: any[],\n\treadOnly: false,\n};\n\nexport type FieldDefinition = FieldBase & {\n\tcanCountDistinct: boolean,\n\tcanGroupBy: boolean,\n\tcanMatch?: boolean,\n\tcanSort?: boolean,\n\tcanSum: boolean,\n\tcanTrendBy: boolean,\n\tisArray?: boolean,\n\tisEdgeEncrypted?: boolean,\n\tisMultiText?: boolean,\n\tisRange: boolean,\n\tunit: string,\n};\n\nexport type FieldDefinitions = { [path: string]: FieldDefinition };\n\nexport type FieldDefinitionRequest = {|\n\ttableName: string,\n\tfieldName: string,\n|};\n\nexport const FIELD_TYPES = {\n\tREFERENCE_TYPE: 'reference',\n\tCHOICE_TYPE: 'choice',\n\tGLIDE_DURATION: 'glide_duration',\n\tTIMER: 'timer',\n\tCURRENCY: 'currency',\n\tPRICE: 'price',\n\tFX_CURRENCY: 'currency2',\n\tINTEGER: 'integer',\n};\n\nexport const createFieldDefFromMetadata: (a: any) => FieldDefinition = (\n\tmetadata: FieldMetadata\n) => {\n\tconst fieldDefinition: $Shape<FieldDefinition> = {\n\t\tattributes: metadata.attributes,\n\t\tlabel: metadata.label,\n\t\tname: metadata.name,\n\t\ttype: metadata.type,\n\t\tinternalType: metadata.internalType,\n\t\textendedTable: metadata.extendedTable,\n\t\treference: metadata.reference,\n\t\tcanMatch: metadata.canmatch,\n\t\tcanSort: metadata.cansort,\n\t\tisArray: metadata.array === 'yes',\n\t\tisEdgeEncrypted: metadata.edgeEncrypted,\n\t\tisMultiText: metadata.multitext,\n\t\tisRange: !!metadata.isRange,\n\t\tunit: getUnit(metadata.internalType, metadata.attributes || ''),\n\t};\n\n\tfieldDefinition.canCountDistinct = canCountDistinct(fieldDefinition);\n\tfieldDefinition.canTrendBy = canTrendBy(fieldDefinition);\n\tfieldDefinition.canSum = canSum(fieldDefinition);\n\tfieldDefinition.canGroupBy =\n\t\t'cangroup' in metadata &&\n\t\tmetadata.internalType === FIELD_TYPES.REFERENCE_TYPE\n\t\t\t? Boolean(metadata.cangroup)\n\t\t\t: canGroup(fieldDefinition);\n\n\treturn fieldDefinition;\n};\n\nexport const UNIT_DURATION = 'DURATION';\nexport const UNIT_CURRENCY = 'CURRENCY';\nexport const UNIT_FX_CURRENCY = 'FX_CURRENCY';\nexport const UNIT_DECIMAL = 'DECIMAL';\n\nexport const DATE_FIELD_TYPES = [\n\t'date',\n\t'datetime',\n\t'due_date',\n\t'glide_date',\n\t'glide_date_time',\n];\n\nexport function isDurationField(type: string, attributes: string) {\n\tconst namedAttributes = getNamedAttributes(attributes);\n\tconst isGlideDurationFormat =\n\t\tnamedAttributes['format'] === FIELD_TYPES.GLIDE_DURATION;\n\n\treturn (\n\t\tFIELD_TYPES.GLIDE_DURATION === type ||\n\t\tFIELD_TYPES.TIMER === type ||\n\t\t(FIELD_TYPES.INTEGER === type && isGlideDurationFormat)\n\t);\n}\n\nexport function isCurrencyField(type: string) {\n\treturn FIELD_TYPES.PRICE === type || FIELD_TYPES.CURRENCY === type;\n}\n\nexport function isFxCurrencyField(type: string) {\n\treturn FIELD_TYPES.FX_CURRENCY === type;\n}\n\nexport function getUnit(type: string, attributes: string) {\n\tif (isDurationField(type, attributes)) {\n\t\treturn UNIT_DURATION;\n\t}\n\n\tif (isCurrencyField(type)) {\n\t\treturn UNIT_CURRENCY;\n\t}\n\n\tif (isFxCurrencyField(type)) {\n\t\treturn UNIT_FX_CURRENCY;\n\t}\n\n\treturn UNIT_DECIMAL;\n}\n","//@flow\nexport const globalActionTypes = {\n\tpropsChange: 'SN_UIB_ELEMENT_CONFIGURATION_PANEL#PROPERTY_CHANGED_IMMEDIATE',\n\tstyleChange: 'SN_UIB_ELEMENT_CONFIGURATION_PANEL#STYLE_CHANGED',\n};\n\nconst PREFIX = 'NOW_VIS_CONFIG#';\n\nexport const SET_CHART_TYPE = PREFIX + 'SET_CHART_TYPE';\nexport const CHART_TYPE_SELECTED = PREFIX + 'CHART_TYPE_SELECTED';\n\nexport const UPDATE_USER_PREFERENCES = PREFIX + 'UPDATE_USER_PREFERENCES';\nexport const UPDATE_USER_PREFERENCES_SUCCESS =\n\tPREFIX + 'UPDATE_USER_PREFERENCES_SUCCESS';\nexport const UPDATE_USER_PREFERENCES_FAILURE =\n\tPREFIX + 'UPDATE_USER_PREFERENCES_FAILURE';\n\nexport const RETRIEVE_FIELD_METADATA = PREFIX + 'RETRIEVE_FIELD_METADATA';\nexport const RETRIEVE_FIELD_METADATA_SUCCESS =\n\tPREFIX + 'RETRIEVE_FIELD_METADATA_SUCCESS';\nexport const RETRIEVE_FIELD_METADATA_FAILURE =\n\tPREFIX + 'RETRIEVE_FIELD_METADATA_FAILURE';\nexport const RETRIEVE_PREFERENCES_AND_SECURITY =\n\tPREFIX + 'RETRIEVE_PREFERENCES_AND_SECURITY';\nexport const RETRIEVE_PREFERENCES_AND_SECURITY_SUCCESS =\n\tPREFIX + 'RETRIEVE_PREFERENCES_AND_SECURITY_SUCCESS';\nexport const RETRIEVE_PREFERENCES_AND_SECURITY_FAILURE =\n\tPREFIX + 'RETRIEVE_PREFERENCES_AND_SECURITY_FAILURE';\nexport const RETRIEVE_DATA_SOURCE_OPTIONS =\n\tPREFIX + 'RETRIEVE_DATA_SOURCE_OPTIONS';\nexport const RETRIEVE_MULTI_DATA_SOURCE_OPTIONS =\n\tPREFIX + 'RETRIEVE_MULTI_DATA_SOURCE_OPTIONS';\nexport const RETRIEVE_TABLE_INFO_REQUESTED =\n\tPREFIX + 'RETRIEVE_TABLE_INFO_REQUESTED';\nexport const RETRIEVE_SOURCE_TABLE_INFO_REQUESTED =\n\tPREFIX + 'RETRIEVE_SOURCE_TABLE_INFO_REQUESTED';\nexport const RETRIEVE_TABLE_INFO_SUCCESS =\n\tPREFIX + 'RETRIEVE_TABLE_INFO_SUCCESS';\nexport const RETRIEVE_TABLE_INFO_FAILURE =\n\tPREFIX + 'RETRIEVE_TABLE_INFO_FAILURE';\nexport const RETRIEVE_INDICATOR_INFO_REQUEST =\n\tPREFIX + 'RETRIEVE_INDICATOR_INFO_REQUEST';\nexport const RETRIEVE_INDICATOR_INFO_SUCCESS =\n\tPREFIX + 'RETRIEVE_INDICATOR_INFO_SUCCESS';\nexport const RETRIEVE_INDICATOR_INFO_FAILURE =\n\tPREFIX + 'RETRIEVE_INDICATOR_INFO_FAILURE';\nexport const VERIFY_DATA_SOURCE_INFO_IS_LOADED =\n\tPREFIX + 'VERIFY_DATA_SOURCE_INFO_IS_LOADED';\nexport const GROUP_BY_SELECTED = PREFIX + 'GROUP_BY_SELECTED';\nexport const SET_GROUP_BY = PREFIX + 'SET_GROUP_BY';\nexport const DATA_SOURCE_INFO_LOADED = PREFIX + 'DATA_SOURCE_INFO_LOADED';\nexport const X_AXIS_SHOW_MAX = PREFIX + 'X_AXIS_SHOW_MAX';\nexport const X_AXIS_TIME_INPUT = PREFIX + 'X_AXIS_TIME_INPUT';\nexport const X_AXIS_TIME_TYPE_INPUT = PREFIX + 'X_AXIS_TIME_TYPE_INPUT';\nexport const REMOVE_DATA_SOURCE = PREFIX + 'REMOVE_DATA_SOURCE';\nexport const SET_SHOW_LEGEND = PREFIX + 'SET_SHOW_LEGEND';\nexport const SET_SHOW_LEGEND_VALUE = PREFIX + 'SET_SHOW_LEGEND_VALUE';\nexport const SET_SHOW_LEGEND_PERCENTAGE = PREFIX + 'SET_SHOW_LEGEND_PERCENTAGE';\nexport const SET_LEGEND_POSITION = PREFIX + 'SET_LEGEND_POSITION';\nexport const SET_DATA_LABEL_POSITION = PREFIX + 'SET_DATA_LABEL_POSITION';\nexport const SET_DATA_LABEL_SETTINGS = PREFIX + 'SET_DATA_LABEL_SETTINGS';\nexport const SET_SHOW_DATA_LABEL_AS = PREFIX + 'SET_SHOW_DATA_LABEL_AS';\nexport const SET_DATA_LABEL_STACKED_VALUE =\n\tPREFIX + 'SET_DATA_LABEL_STACKED_VALUE';\nexport const SET_OVERLAPPING_LABELS = PREFIX + 'SET_OVERLAPPING_LABELS';\nexport const SET_X_AXIS_NAME = PREFIX + 'SET_X_AXIS_NAME';\nexport const SET_Y_AXIS_NAME = PREFIX + 'SET_Y_AXIS_NAME';\nexport const SET_Y_AXIS_POSITION_VALUE = PREFIX + 'SET_Y_AXIS_POSITION_VALUE';\nexport const SET_AXIS_FROM_RANGE = PREFIX + 'SET_AXIS_FROM_RANGE';\nexport const SET_AXIS_TO_RANGE = PREFIX + 'SET_AXIS_TO_RANGE';\nexport const X_AXIS_NAME = PREFIX + 'X_AXIS_NAME';\nexport const Y_AXIS_NAME = PREFIX + 'Y_AXIS_NAME';\nexport const AXIS_RANGE_FROM = PREFIX + 'AXIS_RANGE_FROM';\nexport const AXIS_RANGE_TO = PREFIX + 'AXIS_RANGE_TO';\nexport const UPDATE_VISUALIZATION = PREFIX + 'UPDATE_VISUALIZATION';\nexport const SET_AXIS_SETTINGS = PREFIX + 'SET_AXIS_SETTINGS';\nexport const SET_Y_AXIS_CONFIG = PREFIX + 'SET_Y_AXIS_CONFIG';\nexport const SET_SORT_BY = PREFIX + 'SET_SORT_BY';\nexport const SET_SINGLE_SCORE_SIZE = PREFIX + 'SET_SINGLE_SCORE_SIZE';\nexport const SET_ORDER_BY = 'SET_ORDER_BY';\nexport const SET_BORDER = PREFIX + 'SET_BORDER';\nexport const SET_REALTIME = PREFIX + 'SET_REALTIME';\nexport const SET_REALTIME_INDICATOR = 'SET_REALTIME_INDICATOR';\nexport const SET_AUTO_UPDATE = PREFIX + 'SET_AUTO_UPDATE';\nexport const SET_VARIANT = PREFIX + 'SET_VARIANT';\nexport const SET_MODEL_PROPS = PREFIX + 'SET_MODEL_PROPS';\nexport const SET_DECIMAL_PRECISION = PREFIX + 'SET_DECIMAL_PRECISION';\nexport const SET_CONTAINER_STYLE = PREFIX + 'SET_CONTAINER_STYLE';\nexport const LOAD_ALL_COLOR_OPTIONS = PREFIX + 'LOAD_ALL_COLOR_OPTIONS';\nexport const LOAD_ALL_COLORS_SUCCESS = PREFIX + 'LOAD_ALL_COLORS_SUCCESS';\nexport const SET_DISPLAY_ZERO = PREFIX + 'SET_DISPLAY_ZERO';\nexport const SET_HIDE_HEADER = PREFIX + 'SET_HIDE_HEADER';\nexport const SET_DATA_SOURCE_ERROR = PREFIX + 'SET_DATA_SOURCE_ERROR';\nexport const SET_CAN_CLICK = PREFIX + 'SET_CAN_CLICK';\n\nexport const UNREADABLE_INDICATOR = 'UNREADABLE_INDICATOR';\nexport const INVALID_INDICATOR = 'INVALID_INDICATOR';\nexport const UNREPORTABLE_TABLE = 'UNREPORTABLE_TABLE';\nexport const INVALID_TABLE = 'INVALID_TABLE';\n","// @flow\nimport { type ChartProps } from './model/chart-props';\nimport { type ChartModel } from './model/chart-model';\nimport { type DataSourceInfos } from '../common/types/data-source';\nimport { type Option } from '../common/types/option';\nimport { type UserPreference } from '../common/types/user-preferences';\nimport { type SysProperty } from '../common/types/sys-properties';\nimport { type FieldDefinition } from '../common/types/field';\nimport { type Security } from '../common/types/security';\nimport { CONFIG_TAB } from './views/view-constants';\n\nconst expectedToBeDefinedDuringComponentCreation: any = undefined;\n\nexport type State = {|\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tdataSourceError?: string,\n\tisLoadingDataSource: { [number]: boolean },\n\tisInitializingDotWalkFields: boolean,\n\tproperties: {\n\t\tcomponentProps: ChartProps,\n\t\tpageMetadata: PageMetadata,\n\t\telementStyles: { [string]: ElementStyles },\n\t\telementId: string,\n\t},\n\tselectedTab: string,\n\thasChangesToUpdate: boolean,\n\tuserPreferences: UserPreference[],\n\tsysProperties: SysProperty[],\n\tdotWalkFieldDefinition: { [path: string]: FieldDefinition },\n\tsingleColors: Option[],\n\tpaletteColors: Option[],\n\taccordionState: AccordionState,\n\tsecurity: Security,\n|};\n\nexport const initialState: State = {\n\tchartModel: expectedToBeDefinedDuringComponentCreation,\n\tdataSourceInfos: {},\n\tisLoadingDataSource: {},\n\tisInitializingDotWalkFields: true,\n\tproperties: expectedToBeDefinedDuringComponentCreation,\n\tselectedTab: CONFIG_TAB,\n\thasChangesToUpdate: false,\n\tuserPreferences: [],\n\tsysProperties: [],\n\tdotWalkFieldDefinition: {},\n\tsingleColors: [],\n\tpaletteColors: [],\n\taccordionState: {\n\t\tdataSources: true,\n\t\tmetric: true,\n\t\ttrendBy: true,\n\t\tgroupBy: true,\n\t\tadditionalSettings: true,\n\t\tcomponentHeader: true,\n\t\tfilterSettings: true,\n\t\tdisplaySettings: true,\n\t\tsorting: false,\n\t\tyAxis: false,\n\t\txAxis: false,\n\t\tcolor: false,\n\t\tlegend: false,\n\t\tdataLabel: false,\n\t},\n\tsecurity: {\n\t\tisAdmin: false,\n\t},\n};\n\nexport type AccordionState = {\n\tdataSources: boolean,\n\tmetric: boolean,\n\ttrendBy: boolean,\n\tgroupBy: boolean,\n\tadditionalSettings: boolean,\n\tfilterSettings: boolean,\n\tcomponentHeader: boolean,\n\tdisplaySettings: boolean,\n\tsorting: boolean,\n\tyAxis: boolean,\n\txAxis: boolean,\n\tcolor: boolean,\n\tlegend: boolean,\n\tdataLabel: boolean,\n};\n\nexport type PageMetadata = {\n\ttype: string,\n\tname: string,\n};\n\nexport type ElementStyles = {\n\theight: string,\n};\n","//@flow\n\nimport { type ChartType } from '../../common/types/chart-type';\nimport { type DataSource } from '../../common/types/data-source';\nimport { type Metric } from '../../common/types/metric';\nimport { type AxisConfig } from '../../common/types/axis';\nimport { type ColorCondition } from './chart-props';\n\nexport type DateRangeType = 'Y' | 'M' | 'D';\n\nexport type AdditionalSettings = {|\n\tinclude_scores?: boolean,\n\tinclude_benchmark?: boolean,\n\tinclude_forecast?: boolean,\n\tinclude_forecast_range?: boolean,\n\tinclude_targets?: boolean,\n\tinclude_thresholds?: boolean,\n\tinclude_change?: boolean,\n\tinclude_change_percentage?: boolean,\n\tinclude_comments?: boolean,\n\tinclude_initiatives?: boolean,\n\tinclude_sparkline?: boolean,\n\tinclude_gap_percentage?: boolean,\n\tinclude_trend?: boolean,\n\tinclude_band?: boolean,\n\tshowTotal?: boolean,\n\tshowMetricLabel?: boolean,\n|};\n\nexport type FiltersSettings = {|\n\tfollowFilters?: boolean,\n\thideFiltersInfo?: boolean,\n|};\n\nexport type AdditionalSettingName = $Keys<AdditionalSettings>;\n\nexport type XenolithProperties = {\n\ttotalLabel?: string,\n\theading?: string,\n\theadingPosition?: 'top' | 'bottom',\n};\n\nexport type ChartModel = {\n\tchartType: ChartType,\n\tdataSources: DataSource[],\n\tgroupByMax?: any,\n\tnoOfGroupBasedOn?: string,\n\tshowOthers?: boolean,\n\ttrendByFrequency?: string,\n\tisStacked?: string,\n\tadditionalSettings: AdditionalSettings,\n\tfiltersSettings: FiltersSettings,\n\tchartWidth?: string,\n\tchartHeight?: string,\n\tlegendSettings?: LegendSettings,\n\tdataLabelSettings: DataLabelSettings,\n\taxisSettings?: AxisSettings,\n\tvariant?: string,\n\tborder?: boolean,\n\tlabel?: string,\n\trealtime?: boolean,\n\tshowRealtimeIndicator?: boolean,\n\trefreshInterval?: string,\n\trefreshFrequency?: string,\n\thideHeader?: boolean,\n\tchartSettings?: ModelChartSettings | void,\n\tdisplaySettings: DisplaySettings,\n\tmetrics: Metric[],\n\tyAxisConfigs: AxisConfig[],\n\txenolithProperties: XenolithProperties,\n\tcanClick?: boolean,\n};\n\nexport type ModelChartSettings = {\n\tcolor?: ColorConfiguration,\n};\n\nexport type ColorConfiguration = {\n\ttype?: string,\n\tsys_id?: string,\n\tconditions?: ColorCondition[],\n};\n\nexport type LegendSettings = {\n\tshowLegend: boolean,\n\tshowLegendValue: boolean,\n\tshowLegendPercentage?: boolean,\n\tlegendPosition: string,\n};\n\nexport type DataLabelSettings = {\n\tshowDataLabels: boolean,\n\tdecimalPrecision?: number,\n\tdataLabelPosition: ?string,\n\talign?: string,\n\tshowOverlappingLabels?: boolean,\n\tstackedValue?: string,\n\tshowDataLabelAs?: string,\n};\n\nexport type AxisSettings = {\n\txAxisName?: string,\n\tdateRangeShowMax?: boolean,\n\tdateRangeAmount?: number,\n\tdateRangeType?: DateRangeType,\n};\n\nexport type DisplaySettings = {\n\tsortByField?: string,\n\torderByField?: string,\n\tscoreSize?: string,\n\tdisplayZero?: boolean,\n};\n","//@flow\n\n/**\n This is INTERNAL chart types which we use in our specific logic\n Now they are the same as chart types consumed\n by visualization component and it is super confusing\n\n TODO: prefix all OUR chart types with something like \"viz-config-\" or \"$\"\n TODO: use proper constants in all the code\n */\nexport type ChartType =\n\t| 'bar'\n\t| 'horizontal_bar'\n\t| 'pie'\n\t| 'donut'\n\t| 'semi_donut'\n\t| 'single_score'\n\t| 'line'\n\t| 'area'\n\t| 'spline'\n\t| 'step_line'\n\t| 'column';\n\nexport const CHART_TYPES = {\n\tBAR: 'bar',\n\tHORIZONTAL_BAR: 'horizontal_bar',\n\tPIE: 'pie',\n\tDONUT: 'donut',\n\tSEMI_DONUT: 'semi_donut',\n\tSINGLE_SCORE: 'single_score',\n\tLINE: 'line',\n\tAREA: 'area',\n\tSPLINE: 'spline',\n\tSTEP_LINE: 'step_line',\n\tCOLUMN: 'column',\n};\n\nexport const MULTIPLE_DS_UNSUPPORTED = [\n\tCHART_TYPES.SINGLE_SCORE,\n\tCHART_TYPES.PIE,\n\tCHART_TYPES.DONUT,\n\tCHART_TYPES.SEMI_DONUT,\n];\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __TECTONIC__lodash_4_17_4[\"get\"];","//@flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\n\nimport { type ChartType, CHART_TYPES } from './types/chart-type';\n\nexport const GROUP_BY_MANDATORY = 'mandatory';\nexport const GROUP_BY_OPTIONAL = 'optional';\nexport const GROUP_BY_NOT_SUPPORTED = 'not_supported';\n\nexport const STACK_BY_OPTIONAL = 'optional';\nexport const STACK_BY_NOT_SUPPORTED = 'not_supported';\n\nexport const TREND_BY_MANDATORY = 'mandatory';\nexport const TREND_BY_OPTIONAL = 'optional';\nexport const TREND_BY_NOT_SUPPORTED = 'not_supported';\n\nexport type ChartTypeConfig = {|\n\tid: ChartType,\n\tlabel: string,\n\tchartIcon?: string,\n\ttrendBy: string,\n\ttrendByLabel?: string,\n\tstackBy?: string,\n\tmenuGroup: string,\n\tmenuOrder: number,\n|};\n\nexport type ChartTypeVisualizationsConfig = {\n\t[string]: string,\n};\n\nexport const TIMESERIES_CHART_TYPES = [\n\tCHART_TYPES.LINE,\n\tCHART_TYPES.AREA,\n\tCHART_TYPES.SPLINE,\n\tCHART_TYPES.STEP_LINE,\n\tCHART_TYPES.COLUMN,\n];\n\nexport const PIES_CHART_TYPES = [\n\tCHART_TYPES.PIE,\n\tCHART_TYPES.DONUT,\n\tCHART_TYPES.SEMI_DONUT,\n];\n\nexport const DONUT_CHART_TYPES = [CHART_TYPES.DONUT, CHART_TYPES.SEMI_DONUT];\n\nexport const BAR_CHART_TYPES = [CHART_TYPES.BAR, CHART_TYPES.HORIZONTAL_BAR];\n\nexport const DEFAULT_TRUE_SETTINGS = [\n\t'include_change',\n\t'include_change_percentage',\n\t'include_targets',\n\t'include_gap_percentage',\n\t'include_sparkline',\n];\n\nexport const CHART_MENU_GROUPS = [\n\t{ id: 'time', label: t('Time series') },\n\t{ id: 'bar', label: t('Bars') },\n\t{ id: 'pie', label: t('Pie and donuts') },\n\t{ id: 'other', label: t('Others') },\n];\n\nexport const CHART_TYPES_CONFIG: ChartTypeConfig[] = [\n\t{\n\t\tid: CHART_TYPES.BAR,\n\t\tlabel: t('Vertical bar'),\n\t\tchartIcon: 'chart-bar-vertical-fill',\n\t\ttrendBy: TREND_BY_NOT_SUPPORTED,\n\t\tmenuGroup: 'bar',\n\t\tmenuOrder: 200,\n\t},\n\t{\n\t\tid: CHART_TYPES.HORIZONTAL_BAR,\n\t\tlabel: t('Horizontal bar'),\n\t\tchartIcon: 'chart-bar-horizontal-fill',\n\t\ttrendBy: TREND_BY_NOT_SUPPORTED,\n\t\tmenuGroup: 'bar',\n\t\tmenuOrder: 100,\n\t},\n\t{\n\t\tid: CHART_TYPES.PIE,\n\t\tlabel: t('Pie'),\n\t\tchartIcon: 'chart-pie-fill',\n\t\ttrendBy: TREND_BY_NOT_SUPPORTED,\n\t\tmenuGroup: 'pie',\n\t\tmenuOrder: 200,\n\t},\n\t{\n\t\tid: CHART_TYPES.DONUT,\n\t\tlabel: t('Donut'),\n\t\tchartIcon: 'chart-donut-fill',\n\t\ttrendBy: TREND_BY_NOT_SUPPORTED,\n\t\tmenuGroup: 'pie',\n\t\tmenuOrder: 100,\n\t},\n\t{\n\t\tid: CHART_TYPES.SEMI_DONUT,\n\t\tlabel: t('Semi donut'),\n\t\tchartIcon: 'chart-semi-donut-fill',\n\t\ttrendBy: TREND_BY_NOT_SUPPORTED,\n\t\tmenuGroup: 'pie',\n\t\tmenuOrder: 300,\n\t},\n\t{\n\t\tid: CHART_TYPES.SINGLE_SCORE,\n\t\tlabel: t('Single score'),\n\t\tchartIcon: 'score-fill',\n\t\ttrendBy: TREND_BY_NOT_SUPPORTED,\n\t\tmenuGroup: 'other',\n\t\tmenuOrder: 100,\n\t},\n\t{\n\t\tid: CHART_TYPES.LINE,\n\t\tlabel: t('Line'),\n\t\tchartIcon: 'chart-line-fill',\n\t\ttrendBy: TREND_BY_MANDATORY,\n\t\ttrendByLabel: t('Trend by (X axis)'),\n\t\tmenuGroup: 'time',\n\t\tmenuOrder: 300,\n\t},\n\t{\n\t\tid: CHART_TYPES.COLUMN,\n\t\tlabel: t('Column'),\n\t\tchartIcon: 'chart-column-and-total-fill',\n\t\ttrendBy: TREND_BY_MANDATORY,\n\t\ttrendByLabel: t('Trend by (X axis)'),\n\t\tmenuGroup: 'time',\n\t\tmenuOrder: 200,\n\t},\n\t{\n\t\tid: CHART_TYPES.AREA,\n\t\tlabel: t('Area'),\n\t\tchartIcon: 'chart-area-fill',\n\t\ttrendBy: TREND_BY_MANDATORY,\n\t\ttrendByLabel: t('Trend by (X axis)'),\n\t\tmenuGroup: 'time',\n\t\tmenuOrder: 100,\n\t},\n\t{\n\t\tid: CHART_TYPES.SPLINE,\n\t\tlabel: t('Spline'),\n\t\tchartIcon: 'chart-spline-fill',\n\t\ttrendBy: TREND_BY_MANDATORY,\n\t\ttrendByLabel: t('Trend by (X axis)'),\n\t\tmenuGroup: 'time',\n\t\tmenuOrder: 500,\n\t},\n\t{\n\t\tid: CHART_TYPES.STEP_LINE,\n\t\tlabel: t('Stepline'),\n\t\tchartIcon: 'chart-stepline-fill',\n\t\ttrendBy: TREND_BY_MANDATORY,\n\t\ttrendByLabel: t('Trend by (X axis)'),\n\t\tmenuGroup: 'time',\n\t\tmenuOrder: 400,\n\t},\n];\n\nCHART_TYPES_CONFIG.sort((x1, x2) => x1.menuOrder - x2.menuOrder);\n\nexport const METRIC_CHART_TYPES = {\n\t[CHART_TYPES.LINE]: 'line',\n\t[CHART_TYPES.COLUMN]: 'groupedBar',\n\t[CHART_TYPES.AREA]: 'area',\n\t[CHART_TYPES.STEP_LINE]: 'step',\n\t[CHART_TYPES.SPLINE]: 'spline',\n};\n\nexport const getChartConfig = (chartType: string): ChartTypeConfig => {\n\tconst chartConfig = CHART_TYPES_CONFIG.find(config => config.id == chartType);\n\n\tif (!chartConfig) {\n\t\tthrow new Error('Cannot find chart config for ' + chartType);\n\t}\n\n\treturn chartConfig;\n};\n\nexport const isSameChartFamily = (chartType1: string, chartType2: string) => {\n\tif (!chartType1 || !chartType2) {\n\t\treturn false;\n\t}\n\n\treturn (\n\t\tgetChartConfig(chartType1).menuGroup ===\n\t\tgetChartConfig(chartType2).menuGroup\n\t);\n};\n\nexport const STACKED = 'stacked';\nexport const SIDE_BY_SIDE = 'side_by_side';\n","//@flow\nimport { type ColorRule } from '../types/color-rules';\n\nexport type Metric = {\n\tlabel?: string,\n\taggregateIndicator?: string,\n\taggregateField?: string,\n\taggregateFunction?: string,\n\ttrendByField?: string,\n\tcolorSysID?: string,\n\tcolorRules?: ColorRule[],\n\taggregationSource?: string,\n\tdataSource: string,\n\taxisId?: string,\n\tchartType?: string,\n};\n","// @flow\nimport { t } from 'sn-translate';\n\nimport { type DateRangeType } from '../model/chart-model';\n\nexport const CONFIG_TAB = 'config';\nexport const STYLE_TAB = 'style';\n\nexport const LEGEND_POSITION_LEFT = 'left';\nexport const LEGEND_POSITION_TOP = 'top';\nexport const LEGEND_POSITION_RIGHT = 'right';\nexport const LEGEND_POSITION_BOTTOM = 'bottom';\nexport const DEFAULT_AXIS_RANGE = 'dynamic';\nexport const DEFAULT_DECIMAL_PRECISION = 2;\n\nexport const DATE_RANGE_AMOUNT_DFT = 3;\n\nexport const DATE_RANGE_TYPE: { [key: string]: DateRangeType } = {\n\tDAYS: 'D',\n\tMONTHS: 'M',\n\tYEARS: 'Y',\n};\n\nexport const FREQUENCY_OPTIONS: { [key: string]: number } = {\n\tDAILY: 10,\n\tWEEKLY: 20,\n\tBI_WEEKLY: 30,\n\tFOUR_WEEKLY: 35,\n\tMONTHLY: 40,\n\tBI_MONTHLY: 50,\n\tQUARTERLY: 60,\n\tFISCAL_QUARTERLY: 65,\n\tHALF_YEARLY: 70,\n\tYEARLY: 80,\n\tFISCAL_YEARLY: 85,\n};\n\nexport const LEGEND_POSITION_OPTIONS = [\n\t{\n\t\tid: LEGEND_POSITION_LEFT,\n\t\tlabel: t('Left'),\n\t},\n\t{\n\t\tid: LEGEND_POSITION_TOP,\n\t\tlabel: t('Above'),\n\t},\n\t{\n\t\tid: LEGEND_POSITION_RIGHT,\n\t\tlabel: t('Right'),\n\t},\n\t{\n\t\tid: LEGEND_POSITION_BOTTOM,\n\t\tlabel: t('Below'),\n\t},\n];\n\nexport const DATA_LABEL_POSITION_ABOVE = 'above';\nexport const DATA_LABEL_POSITION_TOP = 'top';\nexport const DATA_LABEL_POSITION_MIDDLE = 'middle';\nexport const DATA_LABEL_POSITION_BOTTOM = 'bottom';\n\nexport const DATA_LABEL_POSITION_OPTIONS = [\n\t{\n\t\tid: DATA_LABEL_POSITION_ABOVE,\n\t\tlabel: t('Above'),\n\t},\n\t{\n\t\tid: DATA_LABEL_POSITION_TOP,\n\t\tlabel: t('Top'),\n\t},\n\t{\n\t\tid: DATA_LABEL_POSITION_MIDDLE,\n\t\tlabel: t('Middle'),\n\t},\n\t{\n\t\tid: DATA_LABEL_POSITION_BOTTOM,\n\t\tlabel: t('Bottom'),\n\t},\n];\n\nexport const DATA_LABEL_STACKED_INDIVIDUAL = 'individual';\nexport const DATA_LABEL_STACKED_TOTAL = 'total';\nexport const DATA_LABEL_STACKED_CUMULATIVE = 'cumulative';\n\nexport const DATA_LABEL_STACKED_VALUES = [\n\t{\n\t\tid: DATA_LABEL_STACKED_INDIVIDUAL,\n\t\tlabel: t('Individual'),\n\t},\n\t{\n\t\tid: DATA_LABEL_STACKED_TOTAL,\n\t\tlabel: t('Total'),\n\t},\n\t{\n\t\tid: DATA_LABEL_STACKED_CUMULATIVE,\n\t\tlabel: t('Cumulative'),\n\t},\n];\n\nexport const SORT_BY_NAME = 'name';\nexport const SORT_BY_VALUE = 'value';\nexport const SORT_BY_RANGE = 'report_range';\n\nexport const SORT_BY_OPTIONS_RANGE = [\n\t{\n\t\tid: SORT_BY_NAME,\n\t\tlabel: t('Name'),\n\t},\n\t{\n\t\tid: SORT_BY_VALUE,\n\t\tlabel: t('Value'),\n\t},\n\t{\n\t\tid: SORT_BY_RANGE,\n\t\tlabel: t('Range'),\n\t},\n];\n\nexport const SORT_BY_OPTIONS_NON_RANGE = [\n\t{\n\t\tid: SORT_BY_NAME,\n\t\tlabel: t('Name'),\n\t},\n\t{\n\t\tid: SORT_BY_VALUE,\n\t\tlabel: t('Value'),\n\t},\n];\n\nexport const ORDER_ASC = 'asc';\nexport const ORDER_DESC = 'desc';\n\nexport const X_AXIS_DATE_RANGE_TYPES: Array<{\n\tlabel: string,\n\tfrequencyRange: number,\n\tid: DateRangeType,\n}> = [\n\t{\n\t\tlabel: t('Days'),\n\t\tfrequencyRange: FREQUENCY_OPTIONS.DAILY,\n\t\tid: DATE_RANGE_TYPE.DAYS,\n\t},\n\t{\n\t\tlabel: t('Months'),\n\t\tfrequencyRange: FREQUENCY_OPTIONS.BI_MONTHLY,\n\t\tid: DATE_RANGE_TYPE.MONTHS,\n\t},\n\t{\n\t\tlabel: t('Years'),\n\t\tfrequencyRange: FREQUENCY_OPTIONS.FISCAL_YEARLY,\n\t\tid: DATE_RANGE_TYPE.YEARS,\n\t},\n];\n\nexport const Y_AXIS_POSITION_LEFT = 'left';\nexport const Y_AXIS_POSITION_RIGHT = 'right';\n\nexport const Y_AXIS_POSITION_CHOICES = [\n\t{\n\t\tid: Y_AXIS_POSITION_LEFT,\n\t\tlabel: t('Left'),\n\t},\n\t{\n\t\tid: Y_AXIS_POSITION_RIGHT,\n\t\tlabel: t('Right'),\n\t},\n];\n\nexport const SHOW_DATA_LABEL_AS_PERCENT = 'percent';\nexport const SHOW_DATA_LABEL_AS_VALUE = 'value';\nexport const SHOW_DATA_LABEL_AS_VALUE_AND_PERCENT = 'both';\n\nexport const SHOW_DATA_LABEL_AS_OPTIONS = [\n\t{\n\t\tid: SHOW_DATA_LABEL_AS_PERCENT,\n\t\tlabel: t('Percent'),\n\t},\n\t{\n\t\tid: SHOW_DATA_LABEL_AS_VALUE,\n\t\tlabel: t('Value'),\n\t},\n\t{\n\t\tid: SHOW_DATA_LABEL_AS_VALUE_AND_PERCENT,\n\t\tlabel: t('Value and percent'),\n\t},\n];\n\nexport const INPUT_BLUR = 'INPUT#BLUR';\n\nexport const AUTO_UPDATE_PREFERENCE = 'par_viz_config.uibuilder.auto_update';\n\nexport const VIZ_CONFIG_PREFERENCES = [AUTO_UPDATE_PREFERENCE];\n\nexport const COLOR_TYPE_PALETTE = 'palette';\nexport const COLOR_TYPE_SINGLE = 'single_color';\nexport const COLOR_TYPE_FIXED = 'chart_color';\nexport const COLOR_TYPE_DEFAULT = 'default_color';\n","// @flow\nexport * from './effect-proxy';\nexport * from './jsxif';\n","module.exports = __TECTONIC__$servicenow_now_accordion;","module.exports = __TECTONIC__$servicenow_behavior_rtl_19_0_6;","// @flow\nexport * from './metric-datasource';\nexport * from './metric-label';\nexport * from './metric-unit';\n","export const autoScrollToVisibility = e => {\n\tif (e.detail > 1) return; // Suppress double and tripple clicks\n\n\tconst ref = e.target;\n\tconst path = e.composedPath();\n\n\tif (!e.target.expanded) {\n\t\tsetTimeout(() => {\n\t\t\tscrollToVisitibility(ref, path);\n\t\t}, 400);\n\t}\n};\n\nconst scrollToVisitibility = (accordionEl, path) => {\n\t// Just scroll if user clicked on the accordion trigger\n\tconst accordionTrigger = path.find(({ id }) => id === 'accordion-trigger');\n\n\tif (!accordionTrigger) {\n\t\treturn;\n\t}\n\n\tconst accordionItem = path.find(\n\t\t({ tagName }) => tagName === 'NOW-ACCORDION-ITEM'\n\t);\n\n\tif (!accordionItem) {\n\t\treturn;\n\t}\n\n\taccordionItem.scrollIntoView({\n\t\tbehavior: 'smooth',\n\t\tblock: 'nearest',\n\t\tinline: 'start',\n\t});\n};\n","module.exports = __TECTONIC__sn_devx_components;","//@flow\nimport { t } from 'sn-translate';\nimport get from 'lodash/get';\nimport intersection from 'lodash/intersection';\nimport { type ChartModel } from '../model/chart-model';\nimport { type Breakdown } from '../../common/types/indicator';\nimport {\n\ttype FieldDefinition,\n\ttype FieldDefinitions,\n\tDATE_FIELD_TYPES,\n\tFIELD_TYPES,\n} from '../../common/types/field';\nimport { type Option } from '../../common/types/option';\nimport {\n\tTREND_BY_NOT_SUPPORTED,\n\tTREND_BY_OPTIONAL,\n\tTIMESERIES_CHART_TYPES,\n\tgetChartConfig,\n} from '../../common/chart-settings';\nimport {\n\tSOURCE_TYPE_TABLE,\n\ttype DataSource,\n\ttype DataSourceInfo,\n\ttype DataSourceInfos,\n} from '../../common/types/data-source';\nimport {\n\tAGGREGATE_FUNCTION_COUNT,\n\tAGGREGATE_FUNCTION_SUM,\n\tAGGREGATE_FUNCTION_AVG,\n\tAGGREGATE_FUNCTION_DISTINCT,\n\tAGGREGATE_FUNCTION_MIN,\n\tAGGREGATE_FUNCTION_MAX,\n} from '../../metric-configuration/constants';\nimport { getFieldDefinition } from '../../helpers/field';\n\nexport const getStackByOptions = (\n\tdataSource: DataSource,\n\tdataSourceInfos: DataSourceInfos\n): Option[] => {\n\tconst { sourceType, groupByField } = dataSource;\n\n\tlet options: Option[] = [];\n\n\tif (sourceType === SOURCE_TYPE_TABLE) {\n\t\tconst dataSourceInfo = dataSourceInfos[dataSource.id || ''];\n\t\tconst tableFields: FieldDefinition[] = dataSourceInfo.tableFields || [];\n\n\t\toptions = tableFields\n\t\t\t.filter(field => field.canGroupBy)\n\t\t\t.map(({ name, label }) => ({\n\t\t\t\tid: name,\n\t\t\t\tlabel,\n\t\t\t}));\n\t}\n\n\toptions = groupByField ? options.filter(o => o.id !== groupByField) : options;\n\n\treturn options;\n};\n\nexport const hasStackByOptions = (\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst options = getStackByOptions(dataSources[0], dataSourceInfos);\n\n\treturn options.length > 0;\n};\n\nexport const hasGroupByOptions = (\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tconst options = getGroupByOptions(\n\t\tdataSources[0],\n\t\tdataSources,\n\t\tdataSourceInfos,\n\t\tfieldDefinitions\n\t);\n\n\treturn options.length > 0;\n};\n\nexport const getGroupByOptions = (\n\tdataSource: DataSource,\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tdotWalkFieldDefinition: { [path: string]: FieldDefinition }\n): Option[] => {\n\tif (dataSource.sourceType === SOURCE_TYPE_TABLE) {\n\t\treturn getGroupByOptionsTable(\n\t\t\tdataSource,\n\t\t\tdataSources,\n\t\t\tdataSourceInfos,\n\t\t\tdotWalkFieldDefinition\n\t\t);\n\t} else {\n\t\treturn getGroupByOptionsIndicator(dataSources, dataSourceInfos);\n\t}\n};\n\nexport const isFieldCompatible = (\n\tfieldDefinition1: FieldDefinition,\n\tfieldDefinition2: FieldDefinition\n) => {\n\tif (\n\t\tDATE_FIELD_TYPES.includes(fieldDefinition1.internalType) &&\n\t\tDATE_FIELD_TYPES.includes(fieldDefinition2.internalType)\n\t) {\n\t\treturn true;\n\t}\n\n\tif (\n\t\tfieldDefinition1.internalType === FIELD_TYPES.REFERENCE_TYPE &&\n\t\tfieldDefinition2.internalType === FIELD_TYPES.REFERENCE_TYPE\n\t) {\n\t\treturn fieldDefinition1.reference === fieldDefinition2.reference;\n\t}\n\n\tif (fieldDefinition1.type === FIELD_TYPES.CHOICE_TYPE) {\n\t\treturn (\n\t\t\tfieldDefinition1.name === fieldDefinition2.name &&\n\t\t\tfieldDefinition1.type === fieldDefinition2.type\n\t\t);\n\t}\n\n\tif (fieldDefinition1.internalType === fieldDefinition2.internalType) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nexport const getGroupByOptionsFilter = (\n\tdataSource: DataSource,\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tdotWalkFieldDefinition: { [path: string]: FieldDefinition } = {}\n) => {\n\tconst firstDataSource = dataSources[0];\n\tconst isFirstDataSource = dataSource.id === firstDataSource.id;\n\n\tlet filterGroupBy = (field: FieldDefinition) => field.canGroupBy;\n\n\tif (!isFirstDataSource) {\n\t\tconst firstGroupByField = firstDataSource.groupByField || '';\n\t\tconst firstDataSourceInfo = dataSourceInfos[firstDataSource.id || ''];\n\t\tconst firstGroupByDefinition = getFieldDefinition(\n\t\t\tfirstGroupByField,\n\t\t\tfirstDataSourceInfo,\n\t\t\tfirstDataSource,\n\t\t\tdotWalkFieldDefinition\n\t\t);\n\n\t\tfilterGroupBy = (field: FieldDefinition) =>\n\t\t\tBoolean(\n\t\t\t\tfield.canGroupBy &&\n\t\t\t\t\tfirstGroupByDefinition &&\n\t\t\t\t\tisFieldCompatible(firstGroupByDefinition, field)\n\t\t\t);\n\t}\n\n\treturn filterGroupBy;\n};\n\nexport const getGroupByOptionsTable = (\n\tdataSource: DataSource,\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tdotWalkFieldDefinition: FieldDefinitions\n): Option[] => {\n\tconst dataSourceInfo = dataSourceInfos[dataSource.id || ''];\n\tconst tableFields: FieldDefinition[] =\n\t\t(dataSourceInfo && dataSourceInfo.tableFields) || [];\n\n\tlet filterGroupBy = getGroupByOptionsFilter(\n\t\tdataSource,\n\t\tdataSources,\n\t\tdataSourceInfos,\n\t\tdotWalkFieldDefinition\n\t);\n\n\treturn tableFields.filter(filterGroupBy).map(({ name, label }) => ({\n\t\tid: name,\n\t\tlabel,\n\t}));\n};\n\nexport const getGroupByOptionsIndicator = (\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos\n): Option[] => {\n\tconst breakdownsPerIndicator = dataSources.map(ds => {\n\t\tif (!ds.id || !dataSourceInfos[ds.id]) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn getBreakdownsAvailableToGroupBy(ds, dataSourceInfos[ds.id]);\n\t});\n\n\tconst breakdownsAvailableInAllIndicators = intersection(\n\t\t...breakdownsPerIndicator\n\t);\n\n\tconst firstDataSource = get(dataSources, '[0].id');\n\tconst breakdowns = dataSourceInfos[firstDataSource].breakdowns || [];\n\n\treturn breakdowns\n\t\t.filter(b => breakdownsAvailableInAllIndicators.includes(b.sysId))\n\t\t.map(b => {\n\t\t\treturn { id: b.sysId, label: b.name };\n\t\t});\n};\n\nconst getBreakdownsAvailableToGroupBy = (\n\tdataSource: DataSource,\n\tdataSourceInfo: DataSourceInfo\n): string[] => {\n\tconst breakdowns: Breakdown[] = dataSourceInfo.breakdowns || [];\n\n\tconst appliedBreakdowns = get(dataSource, 'uuid.breakdowns', []);\n\n\tconst availableBreakdowns = breakdowns.reduce((acc, breakdown) => {\n\t\tconst isApplied = appliedBreakdowns.find(b => b.sysId === breakdown.sysId);\n\n\t\tif (appliedBreakdowns.length < 2 || isApplied) {\n\t\t\tacc.push(breakdown.sysId);\n\t\t}\n\n\t\treturn acc;\n\t}, []);\n\n\treturn availableBreakdowns;\n};\n\nexport const getTableReferenceFields = (\n\tchartModel: ChartModel,\n\tdataSourceInfo: DataSourceInfo\n): FieldDefinition[] => {\n\tconst { dataSources } = chartModel;\n\n\tif (dataSources[0].sourceType !== SOURCE_TYPE_TABLE) {\n\t\treturn [];\n\t}\n\n\treturn (dataSourceInfo.tableFields || []).filter(\n\t\tfield => field.internalType === FIELD_TYPES.REFERENCE_TYPE\n\t);\n};\n\nexport const getTrendByOptions = (\n\tchartModel: ChartModel,\n\tdataSourceInfo: DataSourceInfo\n): Option[] => {\n\tconst chartConfig = getChartConfig(chartModel.chartType);\n\n\tif (chartConfig.trendBy === TREND_BY_NOT_SUPPORTED) {\n\t\treturn [];\n\t}\n\n\tconst { dataSources } = chartModel;\n\n\tif (dataSources[0].sourceType !== SOURCE_TYPE_TABLE) {\n\t\treturn [];\n\t}\n\n\tconst tableFields: FieldDefinition[] = dataSourceInfo.tableFields || [];\n\n\tconst options = tableFields\n\t\t.filter(field => field.canTrendBy)\n\t\t.map(({ name, label }) => ({\n\t\t\tid: name,\n\t\t\tlabel,\n\t\t}));\n\n\tif (chartConfig.trendBy === TREND_BY_OPTIONAL) {\n\t\toptions.unshift({\n\t\t\tid: '',\n\t\t\tlabel: t('None'),\n\t\t});\n\t}\n\n\treturn options;\n};\n\nexport const aggregationFunctionFilters = {\n\t[AGGREGATE_FUNCTION_SUM]: (field: any) => field.canSum,\n\t[AGGREGATE_FUNCTION_AVG]: (field: any) => field.canSum,\n\t[AGGREGATE_FUNCTION_MIN]: (field: any) => field.canSum,\n\t[AGGREGATE_FUNCTION_MAX]: (field: any) => field.canSum,\n\t[AGGREGATE_FUNCTION_DISTINCT]: (field: any) => field.canCountDistinct,\n};\n\nexport const getAggregateOptionsTable = (\n\taggregateFunction: string,\n\tdataSourceInfo: DataSourceInfo\n): Option[] => {\n\tif (aggregateFunction === AGGREGATE_FUNCTION_COUNT) {\n\t\treturn [];\n\t}\n\n\tconst tableFields: FieldDefinition[] = dataSourceInfo.tableFields || [];\n\tconst filter = aggregationFunctionFilters[aggregateFunction];\n\n\treturn tableFields.filter(filter).map(({ name, label }) => ({\n\t\tid: name,\n\t\tlabel,\n\t}));\n};\n\nexport const getTimeSeriesAllowedFrequencies = (\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos\n): number[] => {\n\tconst frequenciesPerIndicator = dataSources.map(ds => {\n\t\tif (!ds.id || !dataSourceInfos[ds.id]) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst dataSourceInfo = dataSourceInfos[ds.id];\n\t\tconst frequencies: number[] = (dataSourceInfo.aggregates || []).map(\n\t\t\ta => a.frequencyValue\n\t\t);\n\n\t\tif (dataSourceInfo.frequencyValue) {\n\t\t\tfrequencies.push(dataSourceInfo.frequencyValue);\n\t\t}\n\n\t\treturn frequencies;\n\t});\n\n\treturn intersection(...frequenciesPerIndicator);\n};\n\nexport const getAggregateOptionsIndicator = (\n\tdataSource: ?string,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tdefaultId?: string\n): Option[] => {\n\tconst dataSourceInfo = dataSourceInfos[dataSource || ''];\n\tconst isTimeSeries = TIMESERIES_CHART_TYPES.includes(chartModel.chartType);\n\tconst timeSeriesAllowedFrequencies = getTimeSeriesAllowedFrequencies(\n\t\tchartModel.dataSources,\n\t\tdataSourceInfos\n\t);\n\n\tconst { aggregates = [], frequency = '', frequencyValue } = dataSourceInfo;\n\n\tconst options = aggregates.map(a => ({\n\t\tid: a.sysId,\n\t\tlabel: a.name,\n\t\tdisabled: isTimeSeries\n\t\t\t? !timeSeriesAllowedFrequencies.includes(a.frequencyValue)\n\t\t\t: false,\n\t}));\n\n\toptions.unshift({\n\t\tid: defaultId ? defaultId : '',\n\t\tlabel: frequency,\n\t\tdisabled: isTimeSeries\n\t\t\t? !timeSeriesAllowedFrequencies.includes(frequencyValue)\n\t\t\t: false,\n\t});\n\n\treturn options;\n};\n","// @flow\nimport { t } from 'sn-translate';\n\nconst PREFIX = 'AGGREGATE_SELECTOR#';\n\nexport const BTN_POPOVER_APPLY = 'popoverApplyButton';\nexport const BTN_POPOVER_CLOSE = 'popoverCloseButton';\nexport const BTN_ADD_METRIC = 'addMetricButton';\nexport const PILLAR_ACTION_EDIT = 'PILLAR_ACTION_EDIT';\nexport const PILLAR_ACTION_DELETE = 'PILLAR_ACTION_DELETE';\nexport const PILLAR_ACTION_ADD_NEW_AXIS = 'PILLAR_ACTION_ADD_NEW_AXIS';\n\nexport const FIELD_AGGREGATE_FUNCTION = 'aggregateFunction';\nexport const FIELD_AGGREGATE_FIELD = 'aggregateField';\nexport const FIELD_AGGREGATION_SOURCE = 'aggregationSource';\nexport const FIELD_DATA_SOURCE = 'dataSource';\nexport const FIELD_AGGREGATE_INDICATOR = 'aggregateIndicator';\nexport const FIELD_LABEL = 'label';\n\nexport const METRIC_POPOVER = PREFIX + 'METRIC_POPOVER';\n\nexport const SET_METRICS = PREFIX + 'SET_METRICS';\nexport const ADD_NEW_AXIS_TO_METRIC = PREFIX + 'ADD_NEW_AXIS_TO_METRIC';\n\nexport const INDICATOR_EMPTY_STRING_ID_REPLACEMENT =\n\t'V_NOT_SUPPORTED_TYPEAHEAD';\n\nexport const AGGREGATE_FUNCTION_COUNT = 'COUNT';\nexport const AGGREGATE_FUNCTION_SUM = 'SUM';\nexport const AGGREGATE_FUNCTION_AVG = 'AVG';\nexport const AGGREGATE_FUNCTION_DISTINCT = 'COUNT(DISTINCT';\nexport const AGGREGATE_FUNCTION_MIN = 'MIN';\nexport const AGGREGATE_FUNCTION_MAX = 'MAX';\n\nexport const AGGREGATE_CONFIG = [\n\t{\n\t\tid: AGGREGATE_FUNCTION_COUNT,\n\t\tlabel: t('Count'),\n\t},\n\t{\n\t\tid: AGGREGATE_FUNCTION_SUM,\n\t\tlabel: t('Sum'),\n\t},\n\t{\n\t\tid: AGGREGATE_FUNCTION_AVG,\n\t\tlabel: t('Average'),\n\t},\n\t{\n\t\tid: AGGREGATE_FUNCTION_DISTINCT,\n\t\tlabel: t('Count distinct'),\n\t},\n\t{\n\t\tid: AGGREGATE_FUNCTION_MIN,\n\t\tlabel: t('Min'),\n\t},\n\t{\n\t\tid: AGGREGATE_FUNCTION_MAX,\n\t\tlabel: t('Max'),\n\t},\n];\n\nexport const AGGREGATION_SOURCE_AS_ENTERED = 'as_entered';\nexport const AGGREGATION_SOURCE_REFERENCE = 'reference';\n\nexport const AGGREGATION_SOURCE_CONFIG = [\n\t{\n\t\tid: AGGREGATION_SOURCE_REFERENCE,\n\t\tlabel: t('Reference currency'),\n\t},\n\t{\n\t\tid: AGGREGATION_SOURCE_AS_ENTERED,\n\t\tlabel: t('Actual currency'),\n\t},\n];\n\nexport const MAIN_SERIES_LABEL_SET = PREFIX + 'MAIN_SERIES_LABEL_SET';\n\nexport const SET_AGGREGATION_SOURCE = 'SET_AGGREGATION_SOURCE';\n","//@flow\nexport * from './can-count-distinct';\nexport * from './can-group';\nexport * from './can-trendby';\nexport * from './can-sort';\nexport * from './can-sum';\nexport * from './constants';\nexport * from './get-named-attributes';\nexport * from './get-field-metadata-request';\nexport * from './is-date-field';\nexport * from './is-numeric-field';\nexport * from './get-field-definition-key';\n\nimport {\n\ttype DataSourceInfo,\n\ttype DataSource,\n} from '../../common/types/data-source';\n\nimport { type FieldDefinitions } from '../../common/types/field';\nimport { getFieldDefinitionKey } from './get-field-definition-key';\n\nexport const getFieldDefinition = (\n\tfield: string,\n\tdataSourceInfo: DataSourceInfo,\n\tdataSource?: DataSource,\n\tdotWalkFieldDefinition: FieldDefinitions = {}\n) => {\n\tif (/\\./.test(field) && dataSource) {\n\t\treturn dotWalkFieldDefinition[\n\t\t\tgetFieldDefinitionKey({\n\t\t\t\ttableName: dataSource.tableName,\n\t\t\t\tfieldName: field,\n\t\t\t})\n\t\t];\n\t}\n\n\tconst tableFields = dataSourceInfo.tableFields || [];\n\n\treturn tableFields.find(f => f.name === field);\n};\n","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","// @flow\nimport { t } from 'sn-translate';\nimport { STACKED, SIDE_BY_SIDE } from '../common/chart-settings';\n\nconst PREFIX = 'GROUP_BY_SELECTOR#';\n\nexport const GROUP_BY_FIELD = 'groupByField';\nexport const GROUP_BY_MAX = 'groupByMax';\nexport const NO_OF_GROUP_BASED_ON = 'noOfGroupBasedOn';\nexport const SET_GROUP_BY = PREFIX + 'SET_GROUP_BY';\nexport const SET_GROUP_BY_MAX = PREFIX + 'SET_GROUP_BY_MAX';\nexport const SET_NO_OF_GROUP_BASED_ON = PREFIX + 'SET_NO_OF_GROUP_BASED_ON';\nexport const STACK_BY_FIELD = 'stackByField';\nexport const SHOW_OTHERS = 'showOthers';\nexport const MAIN_POPOVER = 'group-by-popover';\nexport const SET_CHART_VARIATION = PREFIX + 'SET_CHART_VARIATION';\nexport const APPLY_GROUP_BY_POPOVER = PREFIX + 'APPLY_GROUP_BY_POPOVER';\nexport const CLOSE_GROUP_BY_POPOVER = PREFIX + 'CLOSE_GROUP_BY_POPOVER';\nexport const CLICK_BUTTON_ADD_GROUP_BY = PREFIX + 'CLICK_BUTTON_ADD_GROUP_BY';\nexport const POPOVER_CONTENT_GROUP_BY = PREFIX + 'POPOVER_CONTENT_GROUP_BY';\nexport const POPOVER_CONTENT_STACK_BY = PREFIX + 'POPOVER_CONTENT_STACK_BY';\nexport const PILLAR_ADD_ACTION = PREFIX + 'PILLAR_ADD_ACTION';\nexport const PILLAR_EDIT_ACTION = PREFIX + 'PILLAR_EDIT_ACTION';\nexport const PILLAR_REMOVE_ACTION = PREFIX + 'PILLAR_REMOVE_ACTION';\nexport const RETRIEVE_FIELD_LABEL = PREFIX + 'RETRIEVE_FIELD_LABEL';\nexport const RETRIEVE_FIELD_LABEL_SUCCESS =\n\tPREFIX + 'RETRIEVE_FIELD_LABEL_SUCCESS';\n\nexport const PILLAR_GROUP_BY = 'pillar-group-by';\nexport const PILLAR_STACK_BY = 'pillar-stack-by';\n\nexport const DEFAULT_DROPDOWN_VALUE = '0';\n\nexport const GROUP_BY_MAX_NUMBER_ALL = 'ALL';\nexport const GROUP_BY_DEFAULT_MAX = 10;\nexport const GROUP_BY_MAX_NUMBER = [\n\t{\n\t\tid: GROUP_BY_MAX_NUMBER_ALL,\n\t\tlabel: t('Show all'),\n\t},\n\t{\n\t\tid: 5,\n\t\tlabel: t('5'),\n\t},\n\t{\n\t\tid: 10,\n\t\tlabel: t('10'),\n\t},\n\t{\n\t\tid: 12,\n\t\tlabel: t('12'),\n\t},\n\t{\n\t\tid: 15,\n\t\tlabel: t('15'),\n\t},\n\t{\n\t\tid: 20,\n\t\tlabel: t('20'),\n\t},\n];\n\nexport const NO_OF_GROUP_BASED_ON_FIRST_METRIC =\n\t'NO_OF_GROUP_BASED_ON_FIRST_METRIC';\nexport const NO_OF_GROUP_BASED_ON_PER_METRIC =\n\t'NO_OF_GROUP_BASED_ON_PER_METRIC';\n\nexport const NO_OF_GROUP_BASED_ON_OPTIONS = [\n\t{\n\t\tid: NO_OF_GROUP_BASED_ON_PER_METRIC,\n\t\tlabel: t('Individual metric'),\n\t},\n\t{\n\t\tid: NO_OF_GROUP_BASED_ON_FIRST_METRIC,\n\t\tlabel: t('First metric'),\n\t},\n];\n\nexport const CHART_VARIATIONS = [\n\t{\n\t\tid: SIDE_BY_SIDE,\n\t\tlabel: t('Side-by-side'),\n\t},\n\t{\n\t\tid: STACKED,\n\t\tlabel: t('Stacked'),\n\t},\n];\n","//@flow\nimport get from 'lodash/get';\nimport { t } from 'sn-translate';\nimport {\n\ttype DataSource,\n\ttype DataSourceInfo,\n\ttype DataSourceInfos,\n\tSOURCE_TYPE_INDICATOR,\n\tSOURCE_TYPE_TABLE,\n} from '../../common/types/data-source';\n\nexport const uuidPropsOrder = [\n\t'aggregate',\n\t'breakdowns',\n\t'domain',\n\t'indicator',\n\t'sysId',\n\t'elementSysIds',\n\t'elementsFilterSysId',\n];\n\nexport const shallowDataSourceCompare = (\n\tdataSource: DataSource,\n\totherDataSource: DataSource\n) =>\n\t(dataSource.sourceType === SOURCE_TYPE_INDICATOR &&\n\t\tget(dataSource, 'uuid.indicator') ===\n\t\t\tget(otherDataSource, 'uuid.indicator')) ||\n\t(dataSource.sourceType === SOURCE_TYPE_TABLE &&\n\t\tdataSource.tableName === otherDataSource.tableName);\n\nexport const isSameDataSource = (\n\tcurrentDataSource: DataSource,\n\tnewDataSource: DataSource\n) =>\n\t(currentDataSource.sourceType === SOURCE_TYPE_INDICATOR &&\n\t\tJSON.stringify(currentDataSource.uuid, uuidPropsOrder) ===\n\t\t\tJSON.stringify(newDataSource.uuid, uuidPropsOrder)) ||\n\t(currentDataSource.sourceType === SOURCE_TYPE_TABLE &&\n\t\tcurrentDataSource.tableName === newDataSource.tableName);\n\nexport const getUniqueDataSourceLabel = (\n\tdisDisplayLabel: string = t('Data source'),\n\tdataSources: DataSource[] = [],\n\titeration: number = 0\n) => {\n\tconst label = disDisplayLabel + (iteration === 0 ? '' : ` ${iteration}`);\n\n\tconst findSameLabel = dataSources.find(ds => ds.label === label);\n\n\tif (findSameLabel) {\n\t\treturn getUniqueDataSourceLabel(\n\t\t\tdisDisplayLabel,\n\t\t\tdataSources,\n\t\t\titeration + 1\n\t\t);\n\t}\n\n\treturn label;\n};\n\nexport const getDataSourceUniqueId = (\n\tdataSource: DataSource,\n\tdataSources: DataSource[] = []\n) => {\n\tconst timestamp = new Date().getTime();\n\n\tconst id = btoa(\n\t\tdataSource.sourceType === SOURCE_TYPE_TABLE\n\t\t\t? `${dataSource.sourceType}${get(dataSource, 'tableName')}${timestamp}`\n\t\t\t: `${dataSource.sourceType}${get(\n\t\t\t\t\tdataSource,\n\t\t\t\t\t'uuid.indicator'\n\t\t\t  )}${timestamp}`\n\t);\n\n\tconst findSameId = dataSources.find(ds => ds.id === id);\n\n\tif (findSameId) {\n\t\treturn getDataSourceUniqueId(dataSource, dataSources);\n\t}\n\n\treturn id;\n};\n\nexport const isFieldReportRange = (\n\tfieldName?: string,\n\tdataSourceInfo: DataSourceInfo\n) => {\n\tif (!dataSourceInfo.tableFields) return false;\n\n\tconst fieldDefinition = dataSourceInfo.tableFields.filter(\n\t\tinfo => info.name === fieldName\n\t);\n\n\treturn !fieldDefinition || fieldDefinition.length === 0\n\t\t? false\n\t\t: fieldDefinition[0].isRange;\n};\n\nexport const isDataSourceGroupByReportRange = (\n\tdataSource: DataSource,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tif (dataSource.sourceType === SOURCE_TYPE_INDICATOR) return false;\n\n\tconst dataSourceInfo = dataSourceInfos[dataSource.id];\n\n\tif (!dataSourceInfo) return false;\n\n\treturn isFieldReportRange(dataSource.groupByField, dataSourceInfo);\n};\n\nexport const isAnyDataSourceGroupByReportRange = (\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos\n) => {\n\treturn dataSources.length === 0\n\t\t? false\n\t\t: isDataSourceGroupByReportRange(dataSources[0], dataSourceInfos);\n};\n\nexport const isFieldReportRangeForDataSource = (\n\tfield: string,\n\tdataSource: DataSource,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst dataSourceInfo = dataSourceInfos[dataSource.id];\n\n\tif (!dataSourceInfo || dataSource.sourceType === SOURCE_TYPE_INDICATOR)\n\t\treturn false;\n\n\treturn isFieldReportRange(field, dataSourceInfo);\n};\n","module.exports = __TECTONIC__$servicenow_now_toggle;","module.exports = __TECTONIC__$now_par_components_sn_par_pillar;","export const VARIABLES = 'variables';\nexport const VARIABLE = 'variable';\nexport const VARIABLE_CHOICE = 'variable_choice';\nexport const QUESTIONS = 'questions';\nexport const STRING = 'string';\nexport const CHOICE = 'choice';\nexport const GLIDE_DURATION = 'glide_duration';\nexport const CURRENCY = 'currency';\nexport const CURRENCY2 = 'currency2';\nexport const REFERENCE = 'reference';\nexport const BOOLEAN = 'boolean';\nexport const PRICE = 'price';\nexport const TIMER = 'timer';\nexport const JOURNAL = 'journal';\nexport const JOURNAL_INPUT = 'journal_input';\nexport const INTEGER = 'integer';\nexport const DECIMAL = 'decimal';\nexport const NUMERIC = 'numeric';\nexport const FLOAT = 'float';\nexport const DATE = 'date';\nexport const DATETIME = 'datetime';\nexport const DUE_DATE = 'due_date';\nexport const GLIDE_DATE = 'glide_date';\nexport const GLIDE_DATE_TIME = 'glide_date_time';\nexport const GLIDE_TIME = 'glide_time';\nexport const GLIDE_LIST = 'glide_list';\nexport const DOMAIN_NUMBER = 'domain_number';\nexport const DOMAIN_ID = 'domain_id';\nexport const AUTO_INCREMENT = 'auto_increment';\nexport const PERCENT_COMPLETE = 'percent_complete';\nexport const REF_ELEMENT_PREFIX = 'ref_';\nexport const DOCUMENT_ID = 'document_id';\n","//@flow\n\nexport type AxisConfig = {\n\tid: string,\n\ttitle?: string,\n\torientation?: string,\n\taxisRangeFrom?: ?number | ?string,\n\taxisRangeTo?: ?number | ?string,\n};\n\nexport const PRIMARY_AXIS = 'primary';\nexport const AXIS_PREFIX = 'axis';\nexport const AXIS_ORIENTATION_LEFT = 'left';\nexport const AXIS_ORIENTATION_RIGHT = 'right';\n","module.exports = __TECTONIC__lodash_4_17_4[\"isEqual\"];","//@flow\nimport get from 'lodash/get';\nimport cloneDeep from 'lodash/cloneDeep';\nimport {\n\ttype ChartModel,\n\ttype LegendSettings,\n\ttype AxisSettings,\n\ttype ModelChartSettings,\n\ttype DisplaySettings,\n\ttype XenolithProperties,\n} from '../model/chart-model';\nimport { type State } from '../state';\nimport {\n\ttype DataSource,\n\ttype DataSourceInfos,\n} from '../../common/types/data-source';\nimport { type Metric } from '../../common/types/metric';\nimport {\n\ttype AxisConfig,\n\tPRIMARY_AXIS,\n\tAXIS_PREFIX,\n\tAXIS_ORIENTATION_LEFT,\n\tAXIS_ORIENTATION_RIGHT,\n} from '../../common/types/axis';\nimport {\n\tisFxCurrencyField,\n\ttype FieldDefinitions,\n} from '../../common/types/field';\nimport {\n\tGROUP_BY_NOT_SUPPORTED,\n\tSTACK_BY_NOT_SUPPORTED,\n\tTREND_BY_NOT_SUPPORTED,\n\tgetChartConfig,\n\tGROUP_BY_OPTIONAL,\n\tSTACK_BY_OPTIONAL,\n\tTIMESERIES_CHART_TYPES,\n\tDEFAULT_TRUE_SETTINGS,\n\tPIES_CHART_TYPES,\n\tBAR_CHART_TYPES,\n\tGROUP_BY_MANDATORY,\n\tDONUT_CHART_TYPES,\n\tSIDE_BY_SIDE,\n} from '../../common/chart-settings';\nimport { type Option } from '../../common/types/option';\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport { SOURCE_TYPE_INDICATOR } from '../../common/types/data-source';\nimport {\n\tDEFAULT_DROPDOWN_VALUE,\n\tGROUP_BY_DEFAULT_MAX,\n\tGROUP_BY_MAX_NUMBER_ALL,\n\tNO_OF_GROUP_BASED_ON_PER_METRIC,\n\tNO_OF_GROUP_BASED_ON_FIRST_METRIC,\n} from '../../group-by-selector/constants';\nimport {\n\tAGGREGATE_FUNCTION_COUNT,\n\tAGGREGATE_FUNCTION_DISTINCT,\n\tAGGREGATION_SOURCE_REFERENCE,\n} from '../../metric-configuration/constants';\nimport {\n\tgetAggregateWithSameFrequency,\n\tisFXCurrencyMetric,\n\tgetMetricDataSource,\n} from '../../helpers/metric';\nimport { SOURCE_TYPE_TABLE } from '../../common/types/data-source';\nimport { FREQUENCY_OPTIONS } from '../../trendby-selector/constants';\nimport { getBooleanSettings } from '../../additional-settings/settings';\nimport {\n\tLEGEND_POSITION_BOTTOM,\n\tDATE_RANGE_TYPE,\n\tDATE_RANGE_AMOUNT_DFT,\n\tX_AXIS_DATE_RANGE_TYPES,\n\tDEFAULT_DECIMAL_PRECISION,\n\tSORT_BY_VALUE,\n\tSORT_BY_RANGE,\n} from '../views/view-constants';\n\nimport {\n\tCOLOR_TYPE_SINGLE,\n\tCOLOR_TYPE_DEFAULT,\n\tCOLOR_TYPE_PALETTE,\n\tCOLOR_CHOICES,\n} from '../../color-palette/constants';\n\nimport {\n\tisTableMetric,\n\tisIndicatorMetric,\n\tgetMetricFrequency,\n} from '../../helpers/metric';\nimport {\n\tgetAggregateOptionsTable,\n\tgetAggregateOptionsIndicator,\n\tgetTrendByOptions,\n\tgetStackByOptions,\n\tgetGroupByOptions,\n\thasGroupByOptions,\n\tisFieldCompatible,\n} from './model-options';\n\nimport {\n\tdoesShowSortBy,\n\tdoesShowDisplayZero,\n\tdoesShowChartVariation,\n} from '../../helpers/display-settings/helpers';\nimport { getMetricUnit, getMetricLabel } from '../../helpers/metric';\nimport {\n\tgetValidAxisId,\n\tgetAxisUnit,\n\tsupportAxis,\n\tsupportMultipleAxis,\n} from '../../helpers/axis';\n\nimport { isAnyDataSourceGroupByReportRange } from '../../helpers/data-source/index';\nimport { getFieldDefinition, getFieldDefinitionKey } from '../../helpers/field';\n\nexport const getFirstOption = (options: Option[]) => {\n\tconst firstGroupByOption = get(options, '[0].id', '');\n\n\treturn firstGroupByOption === DEFAULT_DROPDOWN_VALUE\n\t\t? ''\n\t\t: firstGroupByOption;\n};\n\nexport const getValidChartType = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tconst { chartType, dataSources } = chartModel;\n\n\tif (!chartType) {\n\t\treturn CHART_TYPES.SINGLE_SCORE;\n\t}\n\n\tconst chartConfig = getChartConfig(chartType);\n\n\tif (\n\t\tdataSources.length === 1 &&\n\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t(chartConfig.menuGroup === 'bar' || chartConfig.menuGroup === 'pie') &&\n\t\t!hasGroupByOptions(dataSources, dataSourceInfos, fieldDefinitions)\n\t) {\n\t\treturn CHART_TYPES.SINGLE_SCORE;\n\t}\n\n\treturn chartModel.chartType;\n};\n\nexport const getValidDataSources = (chartModel: ChartModel, state: State) => {\n\tconst { dataSources } = chartModel;\n\n\tdataSources.forEach(dataSource => {\n\t\tdataSource.groupByField = getValidGroupByField(\n\t\t\tdataSource,\n\t\t\tchartModel,\n\t\t\tstate.dataSourceInfos,\n\t\t\tstate.dotWalkFieldDefinition\n\t\t);\n\n\t\tdataSource.stackByField = getValidStackBy(\n\t\t\tdataSource,\n\t\t\tchartModel,\n\t\t\tstate.dataSourceInfos\n\t\t);\n\t});\n\n\treturn dataSources;\n};\n\nexport const getGroupBySupport = ({\n\tchartType,\n\tdataSources,\n\tmetrics,\n}: ChartModel) => {\n\tif (\n\t\tPIES_CHART_TYPES.includes(chartType) ||\n\t\tBAR_CHART_TYPES.includes(chartType)\n\t) {\n\t\treturn GROUP_BY_MANDATORY;\n\t}\n\n\tif (\n\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\tdataSources.length === 1 &&\n\t\tmetrics.length === 1\n\t) {\n\t\treturn GROUP_BY_OPTIONAL;\n\t}\n\n\treturn GROUP_BY_NOT_SUPPORTED;\n};\n\nexport const getValidGroupByField = (\n\tdataSource: DataSource,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tdotWalkFieldDefinition: FieldDefinitions\n) => {\n\tconst groupBySupport = getGroupBySupport(chartModel);\n\n\tif (groupBySupport === GROUP_BY_NOT_SUPPORTED) return undefined;\n\n\tconst { groupByField } = dataSource;\n\tconst { dataSources } = chartModel;\n\n\tconst groupByOptions = getGroupByOptions(\n\t\tdataSource,\n\t\tdataSources,\n\t\tdataSourceInfos,\n\t\tdotWalkFieldDefinition\n\t);\n\n\tconst hasGroupByField = groupByOptions.find(c => c.id === groupByField);\n\n\tconst isFirstDataSource = dataSource.id === dataSources[0].id;\n\tconst firstGroupByField = dataSources[0].groupByField || '';\n\tconst firstDataSourceInfo = dataSourceInfos[dataSources[0].id];\n\tconst isDotWalkField = /\\./.test(groupByField || '');\n\n\tif (isDotWalkField) {\n\t\tif (isFirstDataSource) {\n\t\t\treturn groupByField;\n\t\t}\n\n\t\tconst firstDefinition = getFieldDefinition(\n\t\t\tfirstGroupByField,\n\t\t\tfirstDataSourceInfo,\n\t\t\tdataSources[0],\n\t\t\tdotWalkFieldDefinition\n\t\t);\n\n\t\tconst currentDefinition =\n\t\t\tdotWalkFieldDefinition[\n\t\t\t\t`${dataSource.tableName || ''}:${groupByField || ''}`\n\t\t\t];\n\n\t\tif (!currentDefinition || !firstDefinition) {\n\t\t\tthrow new Error(\n\t\t\t\t`Field definition for ${groupByField || ''} does not exists.`\n\t\t\t);\n\t\t}\n\n\t\tif (isFieldCompatible(firstDefinition, currentDefinition)) {\n\t\t\treturn groupByField;\n\t\t}\n\t}\n\n\tif (hasGroupByField) {\n\t\treturn groupByField;\n\t}\n\n\tif (groupBySupport === GROUP_BY_OPTIONAL) {\n\t\treturn undefined;\n\t}\n\n\tif (\n\t\t!isFirstDataSource &&\n\t\tgroupByOptions.find(c => c.id === firstGroupByField)\n\t) {\n\t\treturn firstGroupByField;\n\t}\n\n\treturn getFirstOption(groupByOptions);\n};\n\nexport const getValidGroupByMax = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst { dataSources } = chartModel;\n\tconst groupBySupport = getGroupBySupport(chartModel);\n\n\tif (groupBySupport === GROUP_BY_NOT_SUPPORTED) return undefined;\n\n\tif (isAnyDataSourceGroupByReportRange(dataSources, dataSourceInfos))\n\t\treturn GROUP_BY_MAX_NUMBER_ALL;\n\n\treturn chartModel.groupByMax ? chartModel.groupByMax : GROUP_BY_DEFAULT_MAX;\n};\n\nexport const getValidNoOfGroupBasedOn = (chartModel: ChartModel) => {\n\tconst groupBySupport = getGroupBySupport(chartModel);\n\n\tif (groupBySupport === GROUP_BY_NOT_SUPPORTED) return undefined;\n\n\treturn chartModel.noOfGroupBasedOn && chartModel.dataSources.length > 1\n\t\t? chartModel.noOfGroupBasedOn\n\t\t: NO_OF_GROUP_BASED_ON_PER_METRIC;\n};\n\nexport const getValidShowOthers = (chartModel: ChartModel) => {\n\tconst groupBySupport = getGroupBySupport(chartModel);\n\n\tif (\n\t\tgroupBySupport === GROUP_BY_NOT_SUPPORTED ||\n\t\tchartModel.groupByMax === GROUP_BY_MAX_NUMBER_ALL\n\t)\n\t\treturn undefined;\n\n\tif (\n\t\tchartModel.dataSources.length > 1 &&\n\t\tgetValidNoOfGroupBasedOn(chartModel) === NO_OF_GROUP_BASED_ON_FIRST_METRIC\n\t)\n\t\treturn false;\n\n\treturn chartModel.showOthers;\n};\n\nexport const getStackBySupport = ({\n\tchartType,\n\tdataSources,\n\tmetrics,\n}: ChartModel) => {\n\tif (\n\t\tBAR_CHART_TYPES.includes(chartType) &&\n\t\tdataSources.length === 1 &&\n\t\tmetrics.length === 1 &&\n\t\tdataSources[0].sourceType === SOURCE_TYPE_TABLE\n\t) {\n\t\treturn STACK_BY_OPTIONAL;\n\t}\n\n\treturn STACK_BY_NOT_SUPPORTED;\n};\n\nexport const getValidStackBy = (\n\tdataSource: DataSource,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst stackBySupport = getStackBySupport(chartModel);\n\n\tif (stackBySupport === STACK_BY_NOT_SUPPORTED) return undefined;\n\n\tconst stackByOptions = getStackByOptions(dataSource, dataSourceInfos);\n\tconst { groupByField, stackByField } = dataSource;\n\n\tif (dataSource.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\tconst hasStackByField = stackByOptions.find(c => c.id === stackByField);\n\n\t\tif (hasStackByField) {\n\t\t\treturn stackByField;\n\t\t}\n\t} else {\n\t\tif (stackByField && stackByField !== groupByField) {\n\t\t\treturn stackByField;\n\t\t}\n\t}\n\n\tif (stackBySupport === STACK_BY_OPTIONAL) {\n\t\treturn undefined;\n\t}\n\n\treturn getFirstOption(stackByOptions);\n};\n\nexport const getValidIsStacked = (chartModel: ChartModel) => {\n\tif (!doesShowChartVariation(chartModel)) {\n\t\treturn undefined;\n\t} else if (chartModel.isStacked === undefined) {\n\t\treturn SIDE_BY_SIDE;\n\t}\n\n\treturn chartModel.isStacked;\n};\n\nexport const getValidMetrics = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tconst { dataSources } = chartModel;\n\n\t//Remove metrics with invalid datasource\n\tconst metrics: Metric[] = chartModel.metrics.filter(metric => {\n\t\treturn !!dataSources.find(dt => dt.id === metric.dataSource);\n\t});\n\n\t//Verify each datasource has at least one metric\n\tdataSources.forEach(dataSource => {\n\t\tconst metricFound = metrics.find(m => m.dataSource === dataSource.id);\n\n\t\tif (dataSource.id && !metricFound) {\n\t\t\tmetrics.push({\n\t\t\t\tdataSource: dataSource.id,\n\t\t\t});\n\t\t}\n\t});\n\n\tmetrics.forEach((metric, index) => {\n\t\tgetValidMetric(\n\t\t\tchartModel,\n\t\t\tdataSourceInfos,\n\t\t\tfieldDefinitions,\n\t\t\tmetric,\n\t\t\tindex\n\t\t);\n\n\t\tmetric.trendByField = getValidTrendByField(\n\t\t\tchartModel,\n\t\t\tgetTrendByOptions(\n\t\t\t\tchartModel,\n\t\t\t\tmetric.dataSource ? dataSourceInfos[metric.dataSource] : {}\n\t\t\t),\n\t\t\tmetric,\n\t\t\tfieldDefinitions\n\t\t);\n\n\t\tconst timeseriesMultipleMetrics =\n\t\t\tTIMESERIES_CHART_TYPES.includes(chartModel.chartType) &&\n\t\t\tmetrics.length > 1;\n\n\t\tif (!timeseriesMultipleMetrics) {\n\t\t\tmetric.chartType = undefined;\n\t\t}\n\t});\n\n\treturn metrics;\n};\n\nexport const getValidMetric = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions,\n\tmetric: Metric,\n\tmetricIndex: ?number\n) => {\n\tconst { dataSources } = chartModel;\n\n\tif (isTableMetric(metric, dataSources) && metric.dataSource) {\n\t\tconst dataSourceInfo = dataSourceInfos[metric.dataSource];\n\t\tconst aggregateFunction = getValidAggregateFunction(metric);\n\t\tconst aggregateOptions = getAggregateOptionsTable(\n\t\t\taggregateFunction,\n\t\t\tdataSourceInfo\n\t\t);\n\n\t\tmetric.aggregateFunction = aggregateFunction;\n\t\tmetric.aggregateField = getValidAggregateField(\n\t\t\taggregateFunction,\n\t\t\tmetric.aggregateField,\n\t\t\taggregateOptions\n\t\t);\n\t\tmetric.aggregationSource = getValidAggregationSource(\n\t\t\tmetric,\n\t\t\tgetMetricDataSource(metric, chartModel.dataSources),\n\t\t\tfieldDefinitions\n\t\t);\n\t\tmetric.aggregateIndicator = undefined;\n\t} else if (isIndicatorMetric(metric, dataSources)) {\n\t\tmetric.aggregateFunction = undefined;\n\t\tmetric.aggregateField = undefined;\n\t\tmetric.aggregateIndicator = getValidAggregateIndicator(\n\t\t\tmetricIndex,\n\t\t\tmetric,\n\t\t\tchartModel,\n\t\t\tdataSourceInfos\n\t\t);\n\t}\n\n\treturn metric;\n};\n\nexport const getValidYAxisConfigs = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n): AxisConfig[] => {\n\tconst { chartType, metrics, dataSources } = chartModel;\n\n\tif (!supportAxis(chartModel)) {\n\t\tmetrics.forEach(metric => (metric.axisId = undefined));\n\t\treturn [];\n\t}\n\n\tlet { yAxisConfigs } = chartModel;\n\n\tif (supportMultipleAxis(chartModel)) {\n\t\tmetrics.forEach((metric, index) => {\n\t\t\tif (index === 0) {\n\t\t\t\t// First Metric - If no axis, then set primary\n\t\t\t\tif (!metric.axisId || !yAxisConfigs.length) {\n\t\t\t\t\tmetric.axisId = PRIMARY_AXIS;\n\n\t\t\t\t\tyAxisConfigs.splice(0, yAxisConfigs.length); // Remove all elements from array\n\t\t\t\t\tyAxisConfigs.push({\n\t\t\t\t\t\tid: PRIMARY_AXIS,\n\t\t\t\t\t\torientation: AXIS_ORIENTATION_LEFT,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst metricUnit = getMetricUnit(\n\t\t\t\t\tmetric,\n\t\t\t\t\tdataSources,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tfieldDefinitions\n\t\t\t\t);\n\n\t\t\t\t// Validate if current axis is valid\n\t\t\t\tif (metric.axisId) {\n\t\t\t\t\tconst axisUnit = getAxisUnit(\n\t\t\t\t\t\tmetric.axisId,\n\t\t\t\t\t\tchartModel,\n\t\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\t\tfieldDefinitions\n\t\t\t\t\t);\n\n\t\t\t\t\tif (metricUnit !== axisUnit) {\n\t\t\t\t\t\tmetric.axisId = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Try to find axis with same unit\n\t\t\t\tif (!metric.axisId) {\n\t\t\t\t\tconst axisConfigFound = yAxisConfigs.find(\n\t\t\t\t\t\tac =>\n\t\t\t\t\t\t\tgetAxisUnit(\n\t\t\t\t\t\t\t\tac.id,\n\t\t\t\t\t\t\t\tchartModel,\n\t\t\t\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\t\t\t\tfieldDefinitions\n\t\t\t\t\t\t\t) === metricUnit\n\t\t\t\t\t);\n\n\t\t\t\t\tif (axisConfigFound) {\n\t\t\t\t\t\tmetric.axisId = axisConfigFound.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If axis with same unit not found, create a new one\n\t\t\t\tif (!metric.axisId) {\n\t\t\t\t\tconst validAxisId = getValidAxisId(yAxisConfigs);\n\n\t\t\t\t\tmetric.axisId = validAxisId;\n\t\t\t\t\tyAxisConfigs.push({\n\t\t\t\t\t\tid: validAxisId,\n\t\t\t\t\t\torientation: AXIS_ORIENTATION_RIGHT,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else {\n\t\tmetrics.forEach(metric => (metric.axisId = PRIMARY_AXIS));\n\t\tif (!yAxisConfigs.length) {\n\t\t\tyAxisConfigs = [\n\t\t\t\t{\n\t\t\t\t\tid: PRIMARY_AXIS,\n\t\t\t\t\torientation: undefined,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t}\n\n\t// Remove axis without metrics\n\tyAxisConfigs = yAxisConfigs.filter(axisConfig => {\n\t\treturn metrics.find(m => m.axisId === axisConfig.id);\n\t});\n\n\t// Reorder because we always need a primary axis and assign orientation\n\tyAxisConfigs.forEach((axisConfig, index) => {\n\t\tconst idealAxisId = index === 0 ? PRIMARY_AXIS : `${AXIS_PREFIX}${index}`;\n\n\t\tif (axisConfig !== idealAxisId) {\n\t\t\tmetrics.forEach(metric => {\n\t\t\t\tif (metric.axisId === axisConfig.id) {\n\t\t\t\t\tmetric.axisId = idealAxisId;\n\t\t\t\t}\n\t\t\t});\n\t\t\taxisConfig.id = idealAxisId;\n\t\t}\n\n\t\tif (BAR_CHART_TYPES.includes(chartType)) {\n\t\t\taxisConfig.orientation = undefined;\n\t\t} else if (!axisConfig.orientation) {\n\t\t\taxisConfig.orientation =\n\t\t\t\tindex === 0 ? AXIS_ORIENTATION_LEFT : AXIS_ORIENTATION_RIGHT;\n\t\t}\n\t});\n\n\treturn yAxisConfigs;\n};\n\nexport const getValidAggregateField = (\n\taggregateFunction: string,\n\taggregateField: string = '',\n\taggregateOptions: Option[]\n) => {\n\tif (aggregateFunction !== AGGREGATE_FUNCTION_COUNT) {\n\t\tif (/\\./.test(aggregateField)) {\n\t\t\treturn aggregateField;\n\t\t}\n\n\t\tconst hasAggregateField = aggregateOptions.find(\n\t\t\tc => c.id === aggregateField\n\t\t);\n\n\t\tif (hasAggregateField) {\n\t\t\treturn aggregateField;\n\t\t}\n\n\t\treturn getFirstOption(aggregateOptions);\n\t}\n\n\treturn undefined;\n};\n\nexport const getValidAggregateFunction = (metric: Metric) => {\n\tif (metric.aggregateFunction) {\n\t\treturn metric.aggregateFunction;\n\t}\n\n\treturn AGGREGATE_FUNCTION_COUNT;\n};\n\nexport const getValidAggregationSource = (\n\tmetric: Metric,\n\tdataSource: DataSource,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tif (metric.aggregationSource) {\n\t\treturn metric.aggregationSource;\n\t}\n\n\tconst fieldDefinition =\n\t\tfieldDefinitions[\n\t\t\tgetFieldDefinitionKey({\n\t\t\t\ttableName: dataSource.tableName,\n\t\t\t\tfieldName: metric.aggregateField,\n\t\t\t})\n\t\t];\n\n\tif (fieldDefinition && isFxCurrencyField(fieldDefinition.internalType)) {\n\t\treturn AGGREGATION_SOURCE_REFERENCE;\n\t}\n\n\treturn undefined;\n};\n\nexport const getValidAggregateIndicator = (\n\tmetricIndex: ?number,\n\tmetric: Metric,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst { chartType, metrics } = chartModel;\n\n\tif (metricIndex !== 0 && TIMESERIES_CHART_TYPES.includes(chartType)) {\n\t\treturn getAggregateWithSameFrequency(metrics[0], metric, dataSourceInfos);\n\t} else {\n\t\tconst aggregateOptions = getAggregateOptionsIndicator(\n\t\t\tmetric.dataSource,\n\t\t\tchartModel,\n\t\t\tdataSourceInfos\n\t\t);\n\n\t\tconst hasAggregateIndicator = aggregateOptions.find(\n\t\t\to => o.id === metric.aggregateIndicator && !o.disabled\n\t\t);\n\n\t\tif (hasAggregateIndicator) {\n\t\t\treturn hasAggregateIndicator.id;\n\t\t}\n\n\t\treturn getFirstOption(aggregateOptions.filter(o => !o.disabled));\n\t}\n};\n\nexport const getValidTrendByField = (\n\tchartModel: ChartModel,\n\ttrendByOptions: Option[],\n\tmetric: Metric,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tconst { chartType, dataSources } = chartModel;\n\n\tif (dataSources[0].sourceType !== SOURCE_TYPE_TABLE) {\n\t\treturn undefined;\n\t}\n\n\tconst chartConfig = getChartConfig(chartType);\n\n\tif (chartConfig.trendBy === TREND_BY_NOT_SUPPORTED) return undefined;\n\n\tconst trendByField = metric.trendByField || '';\n\tconst dataSource = getMetricDataSource(metric, chartModel.dataSources);\n\n\tif (\n\t\tfieldDefinitions[\n\t\t\tgetFieldDefinitionKey({\n\t\t\t\ttableName: dataSource.tableName,\n\t\t\t\tfieldName: trendByField,\n\t\t\t})\n\t\t]\n\t) {\n\t\treturn trendByField;\n\t}\n\n\tconst hasTrendyByField = trendByOptions.find(c => c.id === trendByField);\n\n\tif (hasTrendyByField) {\n\t\treturn trendByField;\n\t}\n\n\treturn get(trendByOptions, '[0].id', '');\n};\n\nexport const getValidTrendByFrequency = (chartModel: ChartModel) => {\n\tconst { chartType, dataSources } = chartModel;\n\n\tif (dataSources[0].sourceType !== SOURCE_TYPE_TABLE) {\n\t\treturn undefined;\n\t}\n\n\tconst chartConfig = getChartConfig(chartType);\n\n\tif (chartConfig.trendBy === TREND_BY_NOT_SUPPORTED) return undefined;\n\n\tif (chartModel.trendByFrequency) {\n\t\treturn chartModel.trendByFrequency;\n\t}\n\n\treturn FREQUENCY_OPTIONS[0].id;\n};\n\nexport const getValidAdditionalSettings = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst { chartType, dataSources } = chartModel;\n\tconst allRelevant = getBooleanSettings(chartModel, dataSourceInfos);\n\tconst clonedSettings = cloneDeep(chartModel.additionalSettings);\n\n\tconst isSingleScoreIndicator =\n\t\tchartType === CHART_TYPES.SINGLE_SCORE &&\n\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR;\n\n\tconst newSettings = allRelevant.reduce((acc, { id }) => {\n\t\tacc[id] = clonedSettings[id];\n\n\t\tif (\n\t\t\tacc[id] === undefined &&\n\t\t\tisSingleScoreIndicator &&\n\t\t\tDEFAULT_TRUE_SETTINGS.includes(id)\n\t\t) {\n\t\t\tacc[id] = true;\n\t\t} else if (acc[id] === undefined) {\n\t\t\tacc[id] = false;\n\t\t}\n\n\t\tif (id === 'include_forecast') {\n\t\t\tacc.include_forecast = acc[id];\n\n\t\t\tif (!acc[id]) {\n\t\t\t\tclonedSettings.include_forecast_range = false;\n\t\t\t}\n\t\t}\n\n\t\tif (id === 'include_change') {\n\t\t\tacc.include_change_percentage = acc[id];\n\n\t\t\tif (!acc[id]) {\n\t\t\t\tclonedSettings.include_change_percentage = false;\n\t\t\t}\n\t\t}\n\n\t\tif (id === 'include_targets' && acc[id] === false) {\n\t\t\tacc.include_gap_percentage = false;\n\t\t\tclonedSettings.include_gap_percentage = false;\n\t\t}\n\n\t\treturn acc;\n\t}, {});\n\n\treturn newSettings;\n};\n\nexport const getValidLegendOptions = (\n\tchartModel: ChartModel\n): LegendSettings | void => {\n\tconst { chartType, legendSettings } = chartModel;\n\n\tif (chartType === CHART_TYPES.SINGLE_SCORE) {\n\t\treturn undefined;\n\t}\n\n\tif (!legendSettings) {\n\t\treturn {\n\t\t\tshowLegend: true,\n\t\t\tshowLegendValue: false,\n\t\t\tlegendPosition: LEGEND_POSITION_BOTTOM,\n\t\t};\n\t}\n\n\tconst {\n\t\tshowLegend,\n\t\tshowLegendValue,\n\t\tshowLegendPercentage,\n\t\tlegendPosition,\n\t} = legendSettings;\n\n\treturn {\n\t\tshowLegend,\n\t\tshowLegendValue: showLegend && showLegendValue,\n\t\tshowLegendPercentage:\n\t\t\tBoolean(showLegendValue === true && showLegendPercentage === undefined) ||\n\t\t\tshowLegendPercentage,\n\t\tlegendPosition,\n\t};\n};\n\nexport const getValidXAxisSettings = (\n\t{ chartType, axisSettings, metrics }: ChartModel,\n\t{ chartType: previousChartType }: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n): AxisSettings => {\n\tconst frequency = getMetricFrequency(metrics[0], dataSourceInfos) || 0;\n\n\tconst filteredRangeTypes = X_AXIS_DATE_RANGE_TYPES.filter(\n\t\ttype => type.frequencyRange >= frequency\n\t);\n\n\tconst dateRangeTypeDefault =\n\t\tfilteredRangeTypes.length >= 3\n\t\t\t? DATE_RANGE_TYPE.MONTHS\n\t\t\t: filteredRangeTypes[0].id;\n\n\tconst dateRangeType =\n\t\t(axisSettings && axisSettings.dateRangeType) || dateRangeTypeDefault;\n\n\tconst newSettings = {\n\t\t...axisSettings,\n\t\tdateRangeShowMax: Boolean(axisSettings && axisSettings.dateRangeShowMax),\n\t\tdateRangeAmount:\n\t\t\t(axisSettings && axisSettings.dateRangeAmount) || DATE_RANGE_AMOUNT_DFT,\n\t\tdateRangeType,\n\t};\n\n\tconst isChangingToTimeseries =\n\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t!TIMESERIES_CHART_TYPES.includes(previousChartType);\n\n\tconst isCurrentTypeStillAvailable = !!filteredRangeTypes.find(\n\t\ttype => type.id === dateRangeType\n\t);\n\n\t/**\n\t * Regarding `!isCurrentTypeStillAvailable`\n\t * If the user change the indicator, and this new indicator has a different frequency range\n\t * we need to check if the current selected frequency is correct, otherwise fallback to default\n\t *\n\t * Regarding `isChangingToTimeseries`\n\t * If the user change the type to timeseries (from not-timeseries) then we apply the default\n\t * To make sure the default is applied in some specific cases (i.e.: empty state)\n\t */\n\tif (isChangingToTimeseries || !isCurrentTypeStillAvailable) {\n\t\tnewSettings.dateRangeShowMax = false;\n\t\tnewSettings.dateRangeAmount = DATE_RANGE_AMOUNT_DFT;\n\t\tnewSettings.dateRangeType = dateRangeTypeDefault;\n\t}\n\n\treturn newSettings;\n};\n\nexport const getValidDecimalPrecision = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n): number | void => {\n\tif (\n\t\tshouldEnableDecimalPrecision(chartModel, dataSourceInfos, fieldDefinitions)\n\t) {\n\t\tconst decimalPrecision =\n\t\t\tchartModel.dataLabelSettings &&\n\t\t\tchartModel.dataLabelSettings.decimalPrecision;\n\n\t\treturn decimalPrecision === undefined\n\t\t\t? DEFAULT_DECIMAL_PRECISION\n\t\t\t: decimalPrecision;\n\t}\n\n\treturn undefined;\n};\n\nexport const shouldEnableDecimalPrecision = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n): boolean => {\n\treturn chartModel.metrics.some(metric => {\n\t\treturn (\n\t\t\tisTableMetric(metric, chartModel.dataSources) &&\n\t\t\t!isFXCurrencyMetric(\n\t\t\t\tmetric,\n\t\t\t\tchartModel.dataSources,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tfieldDefinitions\n\t\t\t) &&\n\t\t\tmetric.aggregateFunction !== AGGREGATE_FUNCTION_COUNT &&\n\t\t\tmetric.aggregateFunction !== AGGREGATE_FUNCTION_DISTINCT\n\t\t);\n\t});\n};\n\nexport const getValidRealtime = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n): boolean | void => {\n\tif (isRealtimeRelevant(chartModel, dataSourceInfos)) {\n\t\treturn chartModel.realtime;\n\t}\n\n\treturn undefined;\n};\n\nexport const getValidShowRealtimeIndicator = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n): boolean | void => {\n\tif (getValidRealtime(chartModel, dataSourceInfos))\n\t\treturn (\n\t\t\tchartModel.showRealtimeIndicator === undefined ||\n\t\t\tchartModel.showRealtimeIndicator\n\t\t);\n\n\treturn undefined;\n};\n\nexport function isRealtimeRelevant(\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) {\n\tif (chartModel.chartType === CHART_TYPES.SINGLE_SCORE) {\n\t\treturn chartModel.metrics.some(metric => {\n\t\t\tif (!metric.dataSource || !dataSourceInfos[metric.dataSource]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst dataSourceInfo = dataSourceInfos[metric.dataSource];\n\n\t\t\treturn (\n\t\t\t\t(isIndicatorMetric(metric, chartModel.dataSources) &&\n\t\t\t\t\tdataSourceInfo.isIndicatorRealtime) ||\n\t\t\t\t(isTableMetric(metric, chartModel.dataSources) &&\n\t\t\t\t\tmetric.aggregateFunction === AGGREGATE_FUNCTION_COUNT &&\n\t\t\t\t\t!dataSourceInfo.isDatabaseView)\n\t\t\t);\n\t\t});\n\t}\n\n\treturn false;\n}\n\nexport function getValidRefreshFrequency(\n\tisAdmin: boolean,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) {\n\tif (isRefreshFrequencyRelevant(isAdmin, chartModel, dataSourceInfos))\n\t\treturn chartModel.refreshFrequency;\n\n\treturn undefined;\n}\n\nexport function isRefreshFrequencyRelevant(\n\tisAdmin: boolean,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) {\n\tif (!isAdmin) return false;\n\n\tif (chartModel.chartType === CHART_TYPES.SINGLE_SCORE) {\n\t\treturn chartModel.metrics.some(metric => {\n\t\t\tif (!metric.dataSource || !dataSourceInfos[metric.dataSource]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst dataSourceInfo = dataSourceInfos[metric.dataSource];\n\n\t\t\treturn (\n\t\t\t\tisTableMetric(metric, chartModel.dataSources) &&\n\t\t\t\t!(\n\t\t\t\t\tmetric.aggregateFunction === AGGREGATE_FUNCTION_COUNT &&\n\t\t\t\t\t!dataSourceInfo.isDatabaseView\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\treturn false;\n}\n\nexport const getValidChartSettings = (\n\tchartModel: ChartModel,\n\tsingleColors: Option[],\n\tpaletteColors: Option[]\n): ModelChartSettings | void => {\n\tconst chartSettings = chartModel.chartSettings || {};\n\n\tlet colorType =\n\t\t(chartSettings.color && chartSettings.color.type) || COLOR_TYPE_DEFAULT;\n\tlet colorSysId = chartSettings.color && chartSettings.color.sys_id;\n\n\tconst validColorChoices = COLOR_CHOICES.filter(type => {\n\t\treturn !type.extraVerification || type.extraVerification(chartModel);\n\t}).map(p => p.id);\n\n\tif (!validColorChoices.includes(colorType)) {\n\t\tcolorType = validColorChoices[0];\n\t}\n\n\tif (colorType === COLOR_TYPE_PALETTE) {\n\t\tconst colorFound = paletteColors.find(o => o.id === colorSysId);\n\t\tconst newColorSysId = colorFound ? colorFound.id : paletteColors[0].id;\n\n\t\tchartSettings.color = { type: colorType, sys_id: newColorSysId };\n\t} else if (colorType === COLOR_TYPE_SINGLE) {\n\t\tchartModel.metrics.forEach(metric => {\n\t\t\tconst colorFound =\n\t\t\t\tmetric.colorSysID && singleColors.find(o => o.id === metric.colorSysID);\n\t\t\tconst newColorSysId = colorFound ? colorFound.id : singleColors[0].id;\n\n\t\t\tmetric.colorSysID = newColorSysId;\n\t\t});\n\t} else {\n\t\tchartSettings.color = { type: colorType };\n\t}\n\n\treturn chartSettings;\n};\n\nexport const getValidDisplaySettings = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n): DisplaySettings => {\n\tconst { displaySettings, chartType, dataSources } = chartModel;\n\n\tif (!dataSources || !dataSources.length) return {};\n\n\t// Display settings do not support multiple dataset yet\n\tconst { stackByField } = dataSources[0];\n\tconst showSortBy = doesShowSortBy(chartType);\n\tconst showDisplayZero = doesShowDisplayZero(chartType, dataSources);\n\n\tif (\n\t\tchartType !== CHART_TYPES.SINGLE_SCORE &&\n\t\t!stackByField &&\n\t\t!showSortBy &&\n\t\t!showDisplayZero\n\t)\n\t\treturn {};\n\n\tif (chartType !== CHART_TYPES.SINGLE_SCORE) {\n\t\tdelete displaySettings.scoreSize;\n\t}\n\n\tif (showDisplayZero)\n\t\treturn !displaySettings || displaySettings.displayZero === undefined\n\t\t\t? { displayZero: true }\n\t\t\t: displaySettings;\n\n\tif (\n\t\tdisplaySettings &&\n\t\tdisplaySettings.sortByField === SORT_BY_RANGE &&\n\t\t!isAnyDataSourceGroupByReportRange(dataSources, dataSourceInfos)\n\t)\n\t\treturn {\n\t\t\t...displaySettings,\n\t\t\tsortByField: SORT_BY_VALUE,\n\t\t};\n\n\treturn displaySettings || {};\n};\n\nexport const getValidXenolithProperties = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n): XenolithProperties => {\n\tconst props = {};\n\n\tif (\n\t\tDONUT_CHART_TYPES.includes(chartModel.chartType) &&\n\t\tchartModel.additionalSettings.showMetricLabel\n\t) {\n\t\tprops.totalLabel = getMetricLabel(\n\t\t\tchartModel.dataSources,\n\t\t\tdataSourceInfos,\n\t\t\tchartModel.metrics[0],\n\t\t\tfieldDefinitions\n\t\t);\n\t}\n\n\tif (\n\t\tchartModel.additionalSettings.showMetricLabel &&\n\t\tchartModel.chartType === CHART_TYPES.SINGLE_SCORE\n\t) {\n\t\tprops.heading = getMetricLabel(\n\t\t\tchartModel.dataSources,\n\t\t\tdataSourceInfos,\n\t\t\tchartModel.metrics[0],\n\t\t\tfieldDefinitions\n\t\t);\n\n\t\tprops.headingPosition = get(\n\t\t\tchartModel,\n\t\t\t'xenolithProperties.headingPosition',\n\t\t\t'top'\n\t\t);\n\t}\n\n\treturn props;\n};\n","module.exports = __TECTONIC__$servicenow_now_button;","//@flow\nimport mapKeys from 'lodash/mapKeys';\nimport camelCase from 'lodash/camelCase';\n\nimport { type ChartModel } from '../../visualizations-config-panel/model/chart-model';\n\nimport { GROUP_BY_FIELD, STACK_BY_FIELD } from '../constants';\n\nimport {\n\ttype FieldDefinition,\n\tcreateFieldDefFromMetadata,\n} from '../../common/types/field';\n\nimport {\n\ttype DataSource,\n\tSOURCE_TYPE_INDICATOR,\n} from '../../common/types/data-source';\n\nexport const updateModelWithGroupByValues = (\n\tchartModel: ChartModel,\n\tdataToApply: { [fieldName: string]: string }\n) => {\n\tlet field;\n\n\tfor (field in dataToApply) {\n\t\tconst fieldValue = dataToApply[field];\n\n\t\tif (field.indexOf(GROUP_BY_FIELD) === 0) {\n\t\t\tconst dataSourceIndex = Number(field.replace(GROUP_BY_FIELD, ''));\n\t\t\tconst dataSource = chartModel.dataSources[dataSourceIndex];\n\n\t\t\t//Indicator should have same breakdown as groupBy\n\t\t\tif (dataSource.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\t\t\tchartModel.dataSources.forEach(ds => {\n\t\t\t\t\tds.groupByField = fieldValue;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdataSource.groupByField = fieldValue;\n\t\t\t}\n\t\t} else if (field.indexOf(STACK_BY_FIELD) === 0) {\n\t\t\tconst dataSourceIndex = Number(field.replace(STACK_BY_FIELD, ''));\n\n\t\t\tchartModel.dataSources[dataSourceIndex].stackByField = fieldValue;\n\t\t} else {\n\t\t\tchartModel[field] = fieldValue;\n\t\t}\n\t}\n\n\treturn chartModel;\n};\n\nexport const createTransformMetadataFn = (\n\tfilter: (dataSource: DataSource, fieldDefinition: FieldDefinition) => boolean\n) => (dataSource: DataSource, tables: any) => {\n\tObject.keys(tables).forEach(table =>\n\t\tObject.keys(tables[table]).forEach(field => {\n\t\t\tconst camelCaseMapped = mapKeys(\n\t\t\t\ttables[table][field].fieldMetadata,\n\t\t\t\t(_, key) => camelCase(key)\n\t\t\t);\n\n\t\t\tconst disablePropName = tables[table][field].isReference\n\t\t\t\t? 'disabled'\n\t\t\t\t: 'hidden';\n\n\t\t\ttables[table][field][disablePropName] = !filter(\n\t\t\t\tdataSource,\n\t\t\t\tcreateFieldDefFromMetadata(camelCaseMapped)\n\t\t\t);\n\t\t})\n\t);\n\n\treturn tables;\n};\n","/**\n * Positions that will fit nicely when the popover is used\n * in the config panel. This consider the right side + left side\n * long height panel that we have.\n */\nexport const panelAllowedPositions = [\n\t'center-end center-start',\n\t'center-start center-end',\n\t'top-end top-start',\n\t'top-start top-end',\n\t'bottom-end bottom-start',\n\t'bottom-start bottom-end',\n];\n\nexport const nowPopoverAllowedPositions = [\n\t{ target: 'center-end', content: 'center-start' },\n\t{ target: 'center-start', content: 'center-end' },\n\t{ target: 'top-end', content: 'top-start' },\n\t{ target: 'top-start', content: 'top-end' },\n\t{ target: 'bottom-end', content: 'bottom-start' },\n\t{ target: 'bottom-start', content: 'bottom-end' },\n];\n\nexport const nowPopoverDropdownPositions = [\n\t{ target: 'bottom-start', content: 'top-start' },\n\t{ target: 'bottom-end', content: 'top-end' },\n\t{ target: 'top-start', content: 'bottom-start' },\n\t{ target: 'top-end', content: 'bottom-end' },\n];\n","// @flow\n\nexport type PredefinedFilter = {|\n\tid: string,\n\tname: string,\n\tquery: string,\n\treadableQuery: string,\n|};\n\nexport type State = {|\n\tisFilterLoading: boolean,\n\tisTableLoading: boolean,\n\tpredefinedFilters: PredefinedFilter[],\n\ttableName: string,\n\treadableFilterQuery: string,\n\tinitialFilterQuery: string,\n\tproperties: {\n\t\ttableInfo: {\n\t\t\ttableName: string,\n\t\t\tfilterQuery: string,\n\t\t\tpredefinedFilterId: string,\n\t\t\tpreviewFilterQuery: string,\n\t\t\tpreviewPredefinedFilterId: string,\n\t\t\tisExpanded: boolean,\n\t\t\tisEditMode: boolean,\n\t\t\tshowCustomConditions: boolean,\n\t\t},\n\t},\n|};\n\nexport const initialState: $Shape<State> = {\n\tisFilterLoading: true,\n\tisTableLoading: true,\n\tpredefinedFilters: [],\n};\n","//@flow\nimport {\n\ttype AxisConfig,\n\tPRIMARY_AXIS,\n\tAXIS_PREFIX,\n} from '../../common/types/axis';\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport { type DataSourceInfos } from '../../common/types/data-source';\nimport { type ChartModel } from '../../visualizations-config-panel/model/chart-model';\nimport { getMetricUnit } from '../metric';\nimport { t } from 'sn-translate';\nimport {\n\tTIMESERIES_CHART_TYPES,\n\tBAR_CHART_TYPES,\n} from '../../common/chart-settings';\n\nimport { type FieldDefinitions } from '../../common/types/field';\n\nexport const getAxisConfigIndex = (axisConfig: AxisConfig) => {\n\tif (axisConfig.id === PRIMARY_AXIS) {\n\t\treturn 0;\n\t} else {\n\t\treturn Number(axisConfig.id.replace('axis', ''));\n\t}\n};\n\nexport const getValidAxisId = (axisConfigs: AxisConfig[]) => {\n\tconst lastAxisConfig = axisConfigs[axisConfigs.length - 1];\n\n\tconst axisConfigIndex = getAxisConfigIndex(lastAxisConfig);\n\n\treturn `${AXIS_PREFIX}${axisConfigIndex + 1}`;\n};\n\nexport const sortAxisConfigs = (axisConfigs: AxisConfig[]) => {\n\taxisConfigs.sort((x1, x2) => getAxisConfigIndex(x1) - getAxisConfigIndex(x2));\n};\n\nexport const getAxisUnit = (\n\taxisId: string,\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tconst { metrics, dataSources } = chartModel;\n\n\tconst metric = metrics.find(m => m.axisId === axisId);\n\n\tif (metric) {\n\t\treturn getMetricUnit(\n\t\t\tmetric,\n\t\t\tdataSources,\n\t\t\tdataSourceInfos,\n\t\t\tfieldDefinitions\n\t\t);\n\t}\n\n\treturn undefined;\n};\n\nexport const axisLabels = [\n\tt('Main axis'),\n\tt('Secondary axis'),\n\tt('Tertiary axis'),\n];\n\nexport const getAxisLabel = (axisIndex: number): string => {\n\tif (axisIndex > 2) {\n\t\treturn t('Axis {0}', String(axisIndex + 1));\n\t}\n\n\treturn axisLabels[axisIndex];\n};\n\nexport const supportAxis = (chartModel: ChartModel) => {\n\tconst { chartType } = chartModel;\n\n\tif (\n\t\tTIMESERIES_CHART_TYPES.includes(chartType) ||\n\t\tBAR_CHART_TYPES.includes(chartType)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nexport const supportMultipleAxis = (chartModel: ChartModel) => {\n\tif (!supportAxis(chartModel)) {\n\t\treturn false;\n\t}\n\n\tconst { chartType, metrics } = chartModel;\n\n\tif (BAR_CHART_TYPES.includes(chartType)) {\n\t\treturn false;\n\t}\n\n\t// Multiple axis is allowed when is timeseries chart and has at maximum one metric with column chart type\n\tconst columnMetrics = metrics.filter(m => {\n\t\tconst metricChartType = m.chartType || chartType;\n\n\t\treturn metricChartType === CHART_TYPES.COLUMN;\n\t});\n\n\treturn columnMetrics.length <= 1;\n};\n","// @flow\nimport { t } from 'sn-translate';\n\nconst PREFIX = 'TREND_BY_SELECTOR#';\n\nexport const TREND_BY_POPOVER = PREFIX + 'TREND_BY_POPOVER';\nexport const TREND_BY_SELECTED = PREFIX + 'TREND_BY_SELECTED';\nexport const TREND_BY_FREQUENCY_SELECTED =\n\tPREFIX + 'TREND_BY_FREQUENCY_SELECTED';\nexport const SET_TREND_BY = PREFIX + 'SET_TREND_BY';\n\nexport const BTN_APPLY_ID = 'btn-apply-payload-id';\nexport const BTN_TRENDBY_POPOVER_CLOSE_ID = 'btn-close-popover-payload-id';\n\nexport const DEFAULT_FREQUENCY_OPTION = {\n\tid: 'date',\n\tlabel: t('Date'),\n};\n\nexport const FREQUENCY_OPTIONS = [\n\tDEFAULT_FREQUENCY_OPTION,\n\t{\n\t\tid: 'hour',\n\t\tlabel: t('Hour'),\n\t},\n\t{\n\t\tid: 'dayofweek',\n\t\tlabel: t('Day'),\n\t},\n\t{\n\t\tid: 'week',\n\t\tlabel: t('Week'),\n\t},\n\t{\n\t\tid: 'month',\n\t\tlabel: t('Month'),\n\t},\n\t{\n\t\tid: 'quarter',\n\t\tlabel: t('Quarter'),\n\t},\n\t{\n\t\tid: 'year',\n\t\tlabel: t('Year'),\n\t},\n];\n","module.exports = __TECTONIC__$servicenow_now_dropdown;","module.exports = __TECTONIC__$servicenow_now_heading;","module.exports = __TECTONIC__$servicenow_now_popover;","// @flow\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type DataSourceInfos } from '../common/types/data-source';\nimport { type Option } from '../common/types/option';\nimport { type Metric } from '../common/types/metric';\nimport { type FieldDefinitions } from '../common/types/field';\n\nexport type State = {\n\tcomponentHost?: ?HTMLElement,\n\tpopoverOpened: boolean,\n\tpopoverClosedAt: number,\n\tpopoverTarget?: ?HTMLElement,\n\tdataToApply: $Shape<Metric>,\n\terrorMessages: {\n\t\tdataSource?: string,\n\t\taggregateIndicator?: string,\n\t\taggregateFunction?: string,\n\t\taggregateField?: string,\n\t\taggregationSource?: string,\n\t},\n\ttypingTrack: {\n\t\tdataSource?: boolean,\n\t\taggregateIndicator?: boolean,\n\t\taggregateFunction?: boolean,\n\t\taggregateField?: boolean,\n\t\taggregationSource?: boolean,\n\t},\n\tlocalAggregateOptions: Option[],\n\tdataSourceOptions: Option[],\n\tproperties: {\n\t\tchartModel: ChartModel,\n\t\tdataSourceInfos: DataSourceInfos,\n\t\tdotWalkFieldDefinition: FieldDefinitions,\n\t\texpanded: boolean,\n\t},\n\teditMetricIndex?: number,\n};\n\nexport const initialState: State = {\n\tproperties: {},\n\tdataToApply: {},\n\ttypingTrack: {},\n\terrorMessages: {},\n\tpopoverOpened: false,\n\tpopoverClosedAt: 0,\n\tlocalAggregateOptions: [],\n\tdataSourceOptions: [],\n};\n","//@flow\nimport { type ChartType } from '../../common/types/chart-type';\nimport { type UuidChartAPI } from '../../common/types/uuid';\n\nexport type ChartProps = {|\n\tchartType: ChartType,\n\tdataConfigurations: DataConfiguration[],\n\tstyleConfigurations: StyleConfiguration,\n\tvariant?: string,\n\tborder?: boolean,\n\tlabel?: string,\n\tisRealtime?: boolean,\n\tshowRealtimeIndicator?: boolean,\n\trefreshInterval?: string,\n\tkpiDetailsNavigation?: boolean,\n\tfollowFilters?: boolean,\n\thideFiltersInfo?: boolean,\n\t// This prop is just sent to UXF with value '@state.parFilters' based on followFilters boolean value, we do not read it back.\n\tfilterConfigurations?: string,\n\thideHeader?: boolean,\n\trefreshFrequency?: string,\n|};\n\nexport type PropsChartSettings = {|\n\tmain_series_label: string,\n\tcolor?: ColorConfiguration,\n|};\n\nexport type ColorConfiguration = {\n\ttype?: string,\n\tsys_id?: string,\n\tconditions: ColorCondition[],\n};\n\nexport type ColorCondition = {\n\toperator: string,\n\tvalue1: number,\n\tvalue2: number,\n\torder: number,\n\tcolor_sys_id: string,\n};\n\nexport type DataConfiguration = {|\n\t__viz_config_id: ?string,\n\t__viz_config_label: string,\n\tsource_type: 'table' | 'analytics' | 'source',\n\tsource_id?: string,\n\tuuid?: UuidChartAPI,\n\tgroup_by?: string,\n\tnumber_of_groups?: number,\n\tselected_groups?: string,\n\tshow_other?: boolean,\n\ttrend_field?: string,\n\ttrend_interval?: string,\n\tstack_by_field?: string,\n\taggregate_field?: string,\n\taggregate_function?: string,\n\taggregation_source?: string,\n\tstart_time?: string, // https://en.wikipedia.org/wiki/ISO_8601 Durations | PnYnMnDTnHnMnS\n\tend_time?: string,\n\tinclude_scores?: boolean,\n\tinclude_benchmark?: boolean,\n\tinclude_forecast?: boolean,\n\tinclude_forecast_range?: boolean,\n\tinclude_global_targets?: boolean,\n\tinclude_targets?: boolean,\n\tinclude_target_review_date?: boolean,\n\tinclude_sparkline_global_targets?: boolean,\n\tinclude_sparkline_personal_targets?: boolean,\n\tinclude_thresholds?: boolean,\n\tinclude_change?: boolean,\n\tinclude_change_percentage?: boolean,\n\tinclude_comments?: boolean,\n\tinclude_initiatives?: boolean,\n\tinclude_sparkline?: boolean,\n\tinclude_gap_percentage?: boolean,\n\tinclude_trend?: boolean,\n\tinclude_band?: boolean,\n\trealtime?: boolean,\n\tfilter_query?: string,\n\tdecimal_precision?: number,\n\tsort_by?: string,\n\tsort_order?: string,\n\tdisplay_zero?: boolean,\n\tchart_settings?: PropsChartSettings | void,\n|};\n\nexport type StyleConfiguration = {\n\twidth?: string,\n\theight?: string,\n\taccessibilityMode?: boolean,\n\taccessibilityTable?: boolean,\n\ttype?: string,\n\tdataLabelConfig?: {\n\t\tshowTotal?: boolean,\n\t\ttype?: string,\n\t\talign?: string,\n\t\tcollisions?: string,\n\t\tvalueType?: string,\n\t},\n\thideRegister?: boolean,\n\tregisterConfig?: {\n\t\tlegendOnly?: boolean,\n\t\tshowPercentages?: boolean,\n\t},\n\tregisterPosition?: string,\n\tshowDataLabels?: boolean,\n\textents?: ExtentsXenolith,\n\txAxisConfig?: {\n\t\ttitle?: string,\n\t},\n\tyAxisConfig?: AxisConfigXenolith,\n\tseriesConfig?: SeriesConfigXenolith,\n\tcolors?: {\n\t\ttype: string,\n\t\tsys_id: string,\n\t},\n\tdisplayZero?: boolean,\n\tcanClick?: boolean,\n\theading?: string,\n\tscoreSize?: string,\n\theadingPosition?: 'top' | 'bottom',\n};\n\nexport type AxisConfigXenolith = {\n\ttitle?: string,\n\torientation?: string,\n\t[string]: {\n\t\ttitle?: string,\n\t\torientation: string,\n\t},\n};\n\nexport type SeriesConfigXenolith = {\n\t[string]: {\n\t\taxis?: string,\n\t\ttype?: string,\n\t},\n};\n\nexport type ExtentsXenolith = {\n\t[string]: Array<?number | ?string>,\n};\n","// @flow\n\nimport {\n\ttype DataSource,\n\ttype DataSourceInfo,\n\ttype DataSourceInfos,\n\tSOURCE_TYPE_TABLE,\n\tSOURCE_TYPE_INDICATOR,\n} from '../../common/types/data-source';\nimport { type Metric } from '../../common/types/metric';\nimport { type FieldDefinitions } from '../../common/types/field';\nimport { FIELD_TYPES } from '../../common/types/field';\nimport { getFieldDefinition } from '../field';\n\nexport const getMetricDataSource = (\n\tmetric: Metric,\n\tdataSources: DataSource[]\n): DataSource => {\n\tconst dataSourceFound = dataSources.find(ds => ds.id === metric.dataSource);\n\n\tif (dataSourceFound) {\n\t\treturn dataSourceFound;\n\t}\n\n\tthrow Error('Metric should have a valid data source');\n};\n\nexport const isTableMetric = (\n\tmetric: Metric,\n\tdataSources: DataSource[]\n): boolean => {\n\tif (!metric.dataSource) {\n\t\treturn false;\n\t}\n\n\tconst dataSource = getMetricDataSource(metric, dataSources);\n\n\treturn dataSource.sourceType === SOURCE_TYPE_TABLE;\n};\n\nexport const isFXCurrencyMetric = (\n\tmetric: Metric,\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n): boolean => {\n\tif (!metric.dataSource) return false;\n\n\tconst dataSource = getMetricDataSource(metric, dataSources);\n\tconst aggregateField = metric.aggregateField;\n\n\tif (!dataSource || !dataSource.id) return false;\n\n\treturn isAggregateFieldFxCurrency(\n\t\taggregateField,\n\t\tdataSource,\n\t\tdataSourceInfos,\n\t\tfieldDefinitions\n\t);\n};\n\nexport const isIndicatorMetric = (\n\tmetric: Metric,\n\tdataSources: DataSource[]\n): boolean => {\n\tif (!metric.dataSource) {\n\t\treturn false;\n\t}\n\n\tconst dataSource = getMetricDataSource(metric, dataSources);\n\n\treturn dataSource.sourceType === SOURCE_TYPE_INDICATOR;\n};\n\nexport const getMetricFrequency = (\n\t{ dataSource, aggregateIndicator }: Metric,\n\tdataSourceInfos: DataSourceInfos\n): ?number => {\n\tif (!dataSource || !dataSourceInfos[dataSource]) {\n\t\treturn undefined;\n\t}\n\n\tconst dataSourceInfo = dataSourceInfos[dataSource];\n\n\tif (!aggregateIndicator) {\n\t\treturn dataSourceInfo.frequencyValue;\n\t}\n\n\tconst aggregate = (dataSourceInfo.aggregates || []).find(\n\t\ta => a.sysId === aggregateIndicator\n\t);\n\n\treturn aggregate && aggregate.frequencyValue;\n};\n\nexport const getMetricDataSourceInfo = (\n\tmetric: Metric,\n\tdataSourceInfos: DataSourceInfos\n): DataSourceInfo => {\n\tif (metric.dataSource && dataSourceInfos[metric.dataSource]) {\n\t\treturn dataSourceInfos[metric.dataSource];\n\t}\n\n\tthrow Error('Metric should have a valid data source info');\n};\n\nexport const getAggregateWithSameFrequency = (\n\tmetric1: Metric,\n\tmetric2: Metric,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\tconst metricFrequency1 = getMetricFrequency(metric1, dataSourceInfos);\n\tconst metricFrequency2 = getMetricFrequency(metric2, dataSourceInfos);\n\n\t// If both aggregate frequency are the same, use aggregate from metric 2\n\tif (metricFrequency1 === metricFrequency2) {\n\t\treturn metric2.aggregateIndicator;\n\t}\n\n\tconst dataSourceInfo = getMetricDataSourceInfo(metric2, dataSourceInfos);\n\n\t// If same aggregate from metric 1, exists in metric 2, use it\n\tconst sameAggregateFound = (dataSourceInfo.aggregates || []).find(\n\t\ta => a.sysId === metric1.aggregateIndicator\n\t);\n\n\tif (sameAggregateFound) {\n\t\treturn sameAggregateFound.sysId;\n\t}\n\n\t// If indicator frequency is same of metric 1, use empty frequency\n\tif (dataSourceInfo.frequencyValue === metricFrequency1) {\n\t\treturn undefined;\n\t}\n\n\t// Use any aggregate with same frequency available\n\tconst sameAggregateFrequencyFound = (dataSourceInfo.aggregates || []).find(\n\t\ta => a.frequencyValue === metricFrequency1\n\t);\n\n\treturn sameAggregateFrequencyFound && sameAggregateFrequencyFound.sysId;\n};\n\nexport const isAggregateFieldFxCurrency = (\n\taggregateField?: string,\n\tdataSource: DataSource,\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n): boolean => {\n\tconst dataSourceInfo = dataSourceInfos[dataSource.id];\n\n\tif (!dataSourceInfo) return false;\n\n\tconst field = getFieldDefinition(\n\t\taggregateField || '',\n\t\tdataSourceInfo,\n\t\tdataSource,\n\t\tfieldDefinitions\n\t);\n\n\treturn Boolean(field && field.type === FIELD_TYPES.FX_CURRENCY);\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"cloneDeep\"];","// @flow\n\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\nimport {\n\tSOURCE_TYPE_TABLE,\n\tSOURCE_TYPE_INDICATOR,\n} from '../common/types/data-source';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n\nimport {\n\tSELECT_DATASOURCE,\n\ttype PayloadSelectDataSource,\n\tcreateSelectDatasourceAction,\n\tUPDATE_RECENT_INDICATOR,\n\tcreateUpdateRecentIndicatorAction,\n\tUPDATE_RECENT_TABLE,\n\tcreateUpdateRecentTableAction,\n\tcreateAddDatasourceAction,\n} from './action-creators';\n\nimport { BREAKDOWN_CHANGED } from '../breakdown-selector/constants';\nimport { TABLE_CONFIG_CHANGED } from '../table-configuration/constants';\nimport { VIZ_CONFIG_SOURCE_SELECT_SELECTED } from '../source-selector/constants';\n\nexport const actionTypesSourceConfiguration = {\n\tADD_SOURCE: 'DATA_SOURCE_SELECTOR#ADD_SOURCE',\n\tCANCEL: 'DATA_SOURCE_SELECTOR#CANCEL',\n};\n\nconst handleRecenlyUsedTableUpdate = createGraphQLEffect(\n\t`mutation ($name: String!) {\n\t\tAppPARConfig_Mutation {\n\t\t\trecentTable (name: $name) {\n\t\t\t  result\n\t\t\t}\n\t\t  }\n\t}`,\n\t{\n\t\tvariableList: ['name'],\n\t}\n);\n\nexport const handleRecenlyUsedIndicatorUpdate = createGraphQLEffect(\n\t`mutation ($sysID: String!) {\n\t\tAppPARConfig_Mutation {\n\t\t  recentIndicator (sysID: $sysID) {\n\t\t\tresult\n\t\t  }\n\t\t}\n\t  }`,\n\t{\n\t\tvariableList: ['sysID'],\n\t}\n);\n\nfunction handleBootstrap(coeffects: Coeffects<State, void>) {\n\tconst {\n\t\tproperties: { dataSource, dataSourceInfo },\n\t} = coeffects.state;\n\n\tif (!dataSource || !dataSourceInfo) {\n\t\treturn;\n\t}\n\n\tlet displayLabel;\n\n\tif (dataSource.sourceType === SOURCE_TYPE_TABLE && dataSource.tableName)\n\t\tdisplayLabel =\n\t\t\tdataSourceInfo.displayLabel && dataSourceInfo.displayLabel !== ''\n\t\t\t\t? dataSourceInfo.displayLabel + ' [' + dataSource.tableName + ']'\n\t\t\t\t: dataSource.tableName;\n\telse displayLabel = dataSourceInfo.displayLabel || '';\n\n\tcoeffects.dispatch(...createSelectDatasourceAction(displayLabel, dataSource));\n}\n\nfunction handleDatasourceSelected(\n\tcoeffects: Coeffects<State, PayloadSelectDataSource>\n) {\n\tconst { displayLabel, dataSource } = coeffects.action.payload;\n\n\tswitch (dataSource.sourceType) {\n\t\tcase SOURCE_TYPE_TABLE: {\n\t\t\tlet { tableName, filterQuery, predefinedFilterId } = dataSource;\n\t\t\tlet { tableChanges } = coeffects.state;\n\n\t\t\tlet tableFilter;\n\n\t\t\tif (tableName) {\n\t\t\t\tconst tableChange = tableChanges[tableName];\n\n\t\t\t\tif (tableChange) {\n\t\t\t\t\ttableFilter = {\n\t\t\t\t\t\t...tableChange,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\ttableFilter = {\n\t\t\t\t\t\tfilterQuery,\n\t\t\t\t\t\tpredefinedFilterId,\n\t\t\t\t\t\tpreviewFilterQuery: filterQuery,\n\t\t\t\t\t\tpreviewPredefinedFilterId: predefinedFilterId,\n\t\t\t\t\t\tisExpanded: true,\n\t\t\t\t\t\tisEditMode: !predefinedFilterId && !filterQuery,\n\t\t\t\t\t\tshowCustomConditions: !!filterQuery,\n\t\t\t\t\t};\n\t\t\t\t\ttableChanges = {\n\t\t\t\t\t\t...tableChanges,\n\t\t\t\t\t\t[tableName]: {\n\t\t\t\t\t\t\t...tableFilter,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tableInfo = {\n\t\t\t\ttableName,\n\t\t\t\t...tableFilter,\n\t\t\t};\n\n\t\t\tcoeffects.updateState({\n\t\t\t\tsourceType: dataSource.sourceType,\n\t\t\t\tdisplayLabel,\n\t\t\t\ttableInfo,\n\t\t\t\tindicatorInfo: undefined,\n\t\t\t\ttableChanges,\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\n\t\tcase SOURCE_TYPE_INDICATOR: {\n\t\t\tconst { uuid } = dataSource;\n\n\t\t\tif (!uuid) return;\n\n\t\t\tlet indicatorUuids;\n\t\t\tlet { indicatorChanges } = coeffects.state;\n\n\t\t\tconst hasBreakdown = uuid.breakdowns && uuid.breakdowns.length;\n\n\t\t\tif (indicatorChanges[uuid.indicator]) {\n\t\t\t\tindicatorUuids = {\n\t\t\t\t\t...indicatorChanges[uuid.indicator],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tindicatorUuids = {\n\t\t\t\t\tuuid: {\n\t\t\t\t\t\t...uuid,\n\t\t\t\t\t},\n\t\t\t\t\tpreviewUuid: {\n\t\t\t\t\t\t...uuid,\n\t\t\t\t\t},\n\t\t\t\t\tisExpanded: true,\n\t\t\t\t\tisEditMode: !hasBreakdown,\n\t\t\t\t};\n\t\t\t\tindicatorChanges = {\n\t\t\t\t\t...indicatorChanges,\n\t\t\t\t\t[uuid.indicator]: {\n\t\t\t\t\t\t...indicatorUuids,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst indicatorInfo = {\n\t\t\t\tdisplaySourceDetails: false,\n\t\t\t\t...indicatorUuids,\n\t\t\t};\n\n\t\t\tcoeffects.updateState({\n\t\t\t\tsourceType: dataSource.sourceType,\n\t\t\t\tdisplayLabel,\n\t\t\t\tindicatorInfo,\n\t\t\t\ttableInfo: undefined,\n\t\t\t\tindicatorChanges,\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tactions: {\n\t\t[actionTypesSourceConfiguration.ADD_SOURCE]: {\n\t\t\tprivate: false,\n\t\t},\n\t\t[actionTypesSourceConfiguration.CANCEL]: {\n\t\t\tprivate: false,\n\t\t},\n\t},\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: handleBootstrap,\n\n\t\t'NOW_MODAL#ADD_SOURCE': (coeffects: Coeffects<State, any>) => {\n\t\t\tcoeffects.action.stopPropagation();\n\t\t\tconst {\n\t\t\t\tsourceType,\n\t\t\t\ttableInfo,\n\t\t\t\tindicatorInfo,\n\t\t\t\tproperties: {\n\t\t\t\t\tdataSource,\n\t\t\t\t\toperationMetadata: {\n\t\t\t\t\t\taddNewDataSource,\n\t\t\t\t\t\teditDataSourceIndex: dataSourceIndex,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} = coeffects.state;\n\n\t\t\tif (sourceType === SOURCE_TYPE_TABLE && tableInfo) {\n\t\t\t\tconst { tableName, filterQuery, predefinedFilterId } = tableInfo;\n\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t...createUpdateRecentTableAction({\n\t\t\t\t\t\tname: tableName || '',\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t...createAddDatasourceAction(\n\t\t\t\t\t\t{ addNewDataSource, dataSourceIndex, dataSource },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\ttableName,\n\t\t\t\t\t\t\tfilterQuery,\n\t\t\t\t\t\t\tpredefinedFilterId,\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tsourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\tindicatorInfo &&\n\t\t\t\tindicatorInfo.uuid\n\t\t\t) {\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t...createUpdateRecentIndicatorAction(indicatorInfo.uuid.indicator)\n\t\t\t\t);\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t...createAddDatasourceAction(\n\t\t\t\t\t\t{ addNewDataSource, dataSourceIndex, dataSource },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\tuuid: indicatorInfo.uuid,\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t'NOW_MODAL#OPENED_SET': (coeffects: Coeffects<State, any>) => {\n\t\t\tcoeffects.action.stopPropagation();\n\t\t\tcoeffects.dispatch(actionTypesSourceConfiguration.CANCEL);\n\t\t},\n\t\t[VIZ_CONFIG_SOURCE_SELECT_SELECTED]: (coeffects: Coeffects<State, any>) => {\n\t\t\tconst { sourceType, id, displayLabel } = coeffects.action.payload;\n\n\t\t\tswitch (sourceType) {\n\t\t\t\tcase SOURCE_TYPE_TABLE: {\n\t\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t\t...createSelectDatasourceAction(displayLabel, {\n\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\ttableName: id,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase SOURCE_TYPE_INDICATOR: {\n\t\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t\t...createSelectDatasourceAction(displayLabel, {\n\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\tuuid: {\n\t\t\t\t\t\t\t\tindicator: id,\n\t\t\t\t\t\t\t\tbreakdowns: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[BREAKDOWN_CHANGED]: (coeffects: Coeffects<State, any>) => {\n\t\t\tconst { indicatorInfo } = coeffects.state;\n\n\t\t\tif (indicatorInfo && indicatorInfo.uuid) {\n\t\t\t\tconst indicatorInfoPatch = coeffects.action.payload;\n\n\t\t\t\tcoeffects.updateState({\n\t\t\t\t\tindicatorInfo: {\n\t\t\t\t\t\t...indicatorInfo,\n\t\t\t\t\t\t...indicatorInfoPatch,\n\t\t\t\t\t},\n\t\t\t\t\tindicatorChanges: {\n\t\t\t\t\t\t...coeffects.state.indicatorChanges,\n\t\t\t\t\t\t[indicatorInfo.uuid.indicator]: {\n\t\t\t\t\t\t\t...coeffects.state.indicatorChanges[indicatorInfo.uuid.indicator],\n\t\t\t\t\t\t\t...indicatorInfoPatch,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[UPDATE_RECENT_TABLE]: handleRecenlyUsedTableUpdate,\n\t\t[UPDATE_RECENT_INDICATOR]: handleRecenlyUsedIndicatorUpdate,\n\t\t[TABLE_CONFIG_CHANGED]: (coeffects: Coeffects<State, any>) => {\n\t\t\tconst { tableInfo } = coeffects.state;\n\n\t\t\tif (tableInfo && tableInfo.tableName) {\n\t\t\t\tconst tableInfoPatch = coeffects.action.payload;\n\n\t\t\t\tconst currentTableChanges = coeffects.state.tableChanges;\n\n\t\t\t\tcoeffects.updateState({\n\t\t\t\t\ttableInfo: {\n\t\t\t\t\t\t...coeffects.state.tableInfo,\n\t\t\t\t\t\t...tableInfoPatch,\n\t\t\t\t\t},\n\t\t\t\t\ttableChanges: {\n\t\t\t\t\t\t...currentTableChanges,\n\t\t\t\t\t\t[tableInfo.tableName]: {\n\t\t\t\t\t\t\t...currentTableChanges[tableInfo.tableName],\n\t\t\t\t\t\t\t...tableInfoPatch,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[SELECT_DATASOURCE]: handleDatasourceSelected,\n\t},\n};\n","//@flow\nconst prefix = 'VIZ_CONFIG_BREAKDOWN_SELECTOR#';\n\nexport const LOAD_REQUIRED_DATA = prefix + 'LOAD_REQUIRED_DATA';\n\nexport const FETCH_ELEMENTS = prefix + 'FETCH_ELEMENTS';\nexport const FETCH_ELEMENTS_SUCCEEDED = prefix + 'FETCH_ELEMENTS_SUCCEEDED';\nexport const FETCH_ELEMENTS_FINISHED = prefix + 'FETCH_ELEMENTS_FINISHED';\n\nexport const BREAKDOWN_CHANGED = prefix + 'BREAKDOWN_CHANGED';\n\nexport const BD_OPERATORS = {\n\tDEFAULT: 'default',\n\tMULTI: 'multi',\n\tDYNAMIC: 'dynamic',\n};\n","// @flow\n\nimport { CHART_TYPES } from '../common/types/chart-type';\nimport { SOURCE_TYPE_TABLE } from '../common/types/data-source';\nimport {\n\tTIMESERIES_CHART_TYPES,\n\tPIES_CHART_TYPES,\n\tBAR_CHART_TYPES,\n} from '../common/chart-settings';\n\nimport { t } from 'sn-translate';\n\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\n\nexport const PREFIX = 'COLOR_PALETTE';\nexport const LOAD_COLOR_REQUESTED = PREFIX + 'LOAD_COLOR_REQUESTED';\nexport const COLOR_TYPE_REQUESTED = PREFIX + 'COLOR_TYPE_REQUESTED';\nexport const LOAD_ALL_COLOR_OPTIONS = PREFIX + 'LOAD_ALL_COLOR_OPTIONS';\nexport const LOAD_ALL_COLORS_SUCCESS = PREFIX + 'LOAD_ALL_COLORS_SUCCESS';\nexport const SET_COLOR_REQUESTED = PREFIX + 'SET_COLOR_REQUESTED';\nexport const COLOR_TYPE_PALETTE = 'palette';\nexport const COLOR_TYPE_SINGLE = 'single_color';\nexport const COLOR_TYPE_FIXED = 'chart_color';\nexport const COLOR_TYPE_DEFAULT = 'default_color';\nexport const COLOR_RULE_EDIT = 'COLOR_RULE_EDIT';\nexport const COLOR_RULE_DELETE = 'COLOR_RULE_DELETE';\nexport const ADD_COLOR_RULE = 'ADD_COLOR_RULE';\n\nexport const COLOR_CHOICES = [\n\t{\n\t\tid: COLOR_TYPE_DEFAULT,\n\t\tlabel: t('Default'),\n\t},\n\t{\n\t\tid: COLOR_TYPE_PALETTE,\n\t\tlabel: t('Color palette'),\n\t\textraVerification: (chartModel: ChartModel) => {\n\t\t\tconst { chartType } = chartModel;\n\n\t\t\treturn chartType !== CHART_TYPES.SINGLE_SCORE;\n\t\t},\n\t},\n\t{\n\t\tid: COLOR_TYPE_FIXED,\n\t\tlabel: t('Fixed element color'),\n\t\textraVerification: (chartModel: ChartModel) => {\n\t\t\tconst { chartType, dataSources, metrics } = chartModel;\n\n\t\t\tconst hasTable = dataSources.some(\n\t\t\t\tds => ds.sourceType === SOURCE_TYPE_TABLE\n\t\t\t);\n\n\t\t\tconst piesAndTable = hasTable && PIES_CHART_TYPES.includes(chartType);\n\n\t\t\tconst groupByTsAndTable =\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tdataSources.some(ds => ds.groupByField) &&\n\t\t\t\thasTable;\n\n\t\t\tconst barAndTable = BAR_CHART_TYPES.includes(chartType) && hasTable;\n\n\t\t\tconst hasMultipleMetrics = metrics.length > 1;\n\n\t\t\treturn (\n\t\t\t\t!hasMultipleMetrics &&\n\t\t\t\t(piesAndTable || groupByTsAndTable || barAndTable)\n\t\t\t);\n\t\t},\n\t},\n\t{\n\t\tid: COLOR_TYPE_SINGLE,\n\t\tlabel: t('Single color'),\n\t\textraVerification: (chartModel: ChartModel) => {\n\t\t\tconst { chartType, dataSources } = chartModel;\n\n\t\t\tconst hasTable = dataSources.some(\n\t\t\t\tds => ds.sourceType === SOURCE_TYPE_TABLE\n\t\t\t);\n\n\t\t\tconst singleScoreAndTable =\n\t\t\t\thasTable && chartType === CHART_TYPES.SINGLE_SCORE;\n\n\t\t\tconst hasNoStackBy = !dataSources.some(ds => ds.stackByField);\n\t\t\tconst barAndNoStackBy =\n\t\t\t\tBAR_CHART_TYPES.includes(chartType) && hasNoStackBy;\n\n\t\t\tconst hasNoGroupBy = !dataSources.some(ds => ds.groupByField);\n\t\t\tconst timeseriesWithoutGroupBy =\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) && hasNoGroupBy;\n\n\t\t\treturn singleScoreAndTable || barAndNoStackBy || timeseriesWithoutGroupBy;\n\t\t},\n\t},\n];\n","// @flow\nimport { t } from 'sn-translate';\nimport {\n\tSOURCE_TYPE_TABLE,\n\ttype DataSource,\n} from '../../common/types/data-source';\n\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport { BAR_CHART_TYPES } from '../../common/chart-settings';\nimport { type ChartModel } from '../../visualizations-config-panel/model/chart-model';\n\nexport const DEFAULT_SCORE_SIZE = 'md';\n\nexport const SINGLE_SCORE_SIZES = [\n\t{ label: t('XS').toUpperCase(), id: 'xs' },\n\t{ label: t('S').toUpperCase(), id: 'sm' },\n\t{ label: t('M').toUpperCase(), id: DEFAULT_SCORE_SIZE },\n\t{ label: t('L').toUpperCase(), id: 'lg' },\n\t{ label: t('XL').toUpperCase(), id: 'xl' },\n\t{ label: t('XXL').toUpperCase(), id: 'xxl' },\n];\n\nexport const doesShowSortBy = (chartType: string): boolean => {\n\treturn (\n\t\tchartType === CHART_TYPES.BAR ||\n\t\tchartType === CHART_TYPES.HORIZONTAL_BAR ||\n\t\tchartType === CHART_TYPES.PIE ||\n\t\tchartType === CHART_TYPES.DONUT ||\n\t\tchartType === CHART_TYPES.SEMI_DONUT\n\t);\n};\n\nexport const doesShowDisplayZero = (\n\tchartType: string,\n\tdataSources: DataSource[]\n): boolean => {\n\treturn (\n\t\tchartType === CHART_TYPES.SINGLE_SCORE &&\n\t\tdataSources[0].sourceType === SOURCE_TYPE_TABLE\n\t);\n};\n\nexport const doesShowChartVariation = (chartModel: ChartModel): boolean => {\n\tconst { metrics, chartType, dataSources } = chartModel;\n\n\tconst hasStackBy = dataSources.some(ds => ds.stackByField);\n\n\treturn (\n\t\thasStackBy || (metrics.length > 1 && BAR_CHART_TYPES.includes(chartType))\n\t);\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-toggle', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tchecked: {\n\t\t\tdefault: false,\n\t\t},\n\t\tlabel: {\n\t\t\tdefault: '',\n\t\t},\n\t\tdisabled: {\n\t\t\tdefault: false,\n\t\t},\n\t\tdisableMargin: {\n\t\t\tdefault: false,\n\t\t},\n\t\tinfoTooltip: {\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n\tactionHandlers: {\n\t\t'NOW_TOGGLE#CHECKED_SET': ({ dispatch, action }) => {\n\t\t\tswitch (action.payload.payloadActionType) {\n\t\t\t\tcase 'VIZ_CONFIG_TOGGLE':\n\t\t\t\t\tdispatch('VIZ_CONFIG_TOGGLE#CHECKED_SET', {\n\t\t\t\t\t\tvalue: action.payload.value,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t},\n});\n","export const ADD_DATA_SOURCE_SELECTED = 'ADD_DATA_SOURCE_SELECTED';\nexport const ADD_NEW_DATA_SOURCE = 'ADD_NEW_DATA_SOURCE';\nexport const CHANGE_DATA_SOURCE_LABEL = 'CHANGE_DATA_SOURCE_LABEL';\nexport const SAVE_LABEL = 'SOURCE_LIST#SAVE_LABEL';\n","import { t } from 'sn-translate';\n\nexport const BTN_POPOVER_CLOSE = 'BTN_POPOVER_CLOSE';\nexport const BTN_POPOVER_APPLY = 'BTN_POPOVER_APPLY';\nexport const SET_OPERATOR = 'SET_OPERATOR';\nexport const FIELD_OPERATOR = 'operator';\nexport const FIELD_VALUE1 = 'value1';\nexport const FIELD_VALUE2 = 'value2';\nexport const FIELD_COLOR = 'color';\nexport const FIELD_ORDER = 'order';\n\nexport const RULE_POPOVER = 'COLOR_RULES#RULE_POPOVER';\n\nexport const FIELD_OPERATOR_LESS_THAN = '<';\nexport const FIELD_OPERATOR_LESS_THAN_OR_EQUAL_TO = '<=';\nexport const FIELD_OPERATOR_EQUAL_TO = '=';\nexport const FIELD_OPERATOR_GREATER_THAN = '>';\nexport const FIELD_OPERATOR_GREATER_THAN_OR_EQUAL_TO = '>=';\nexport const FIELD_OPERATOR_BETWEEN = 'between';\n\nexport const BTN_ADD_COLOR_RULE = 'BTN_ADD_COLOR_RULE';\nexport const ADD_COLOR_RULE = 'ADD_COLOR_RULE';\nexport const EDIT_COLOR_RULE = 'EDIT_COLOR_RULE';\nexport const DELETE_COLOR_RULE = 'DELETE_COLOR_RULE';\n\nexport const COLOR_RULE_EDIT = 'COLOR_RULE_EDIT';\nexport const COLOR_RULE_DELETE = 'COLOR_RULE_DELETE';\n\nexport const OPERATOR_CONFIG = [\n\t{\n\t\tid: FIELD_OPERATOR_LESS_THAN,\n\t\tlabel: t('lower than'),\n\t},\n\t{\n\t\tid: FIELD_OPERATOR_LESS_THAN_OR_EQUAL_TO,\n\t\tlabel: t('lower than or is'),\n\t},\n\t{\n\t\tid: FIELD_OPERATOR_EQUAL_TO,\n\t\tlabel: t('is'),\n\t},\n\t{\n\t\tid: FIELD_OPERATOR_GREATER_THAN,\n\t\tlabel: t('greater than'),\n\t},\n\t{\n\t\tid: FIELD_OPERATOR_GREATER_THAN_OR_EQUAL_TO,\n\t\tlabel: t('greater than or is'),\n\t},\n\t{\n\t\tid: FIELD_OPERATOR_BETWEEN,\n\t\tlabel: t('between'),\n\t},\n];\n","module.exports = __TECTONIC__$servicenow_now_label_value;","module.exports = __TECTONIC__$now_par_components_sn_par_popover;","export * from './has-property-changed';\n","//@flow\nimport { type Uuid } from '../common/types/uuid';\nimport { type IndicatorInfo } from '../common/types/indicator';\n\nexport type State = {|\n\tbreakdowns: BreakdownData[],\n\tindicator: string,\n\tproperties: {\n\t\tselectedIndicatorInfo: {\n\t\t\tuuid: Uuid,\n\t\t\tpreviewUuid: Uuid,\n\t\t\tisExpanded: boolean,\n\t\t\tisEditMode: boolean,\n\t\t},\n\t\tindicatorInfo: IndicatorInfo,\n\t\tloadingBreakdownSelector: boolean,\n\t},\n|};\n\nexport type BreakdownPropInfo = {|\n\tsysId: string,\n\telementSysIds?: string[],\n\telementsFilterSysId?: string,\n|};\n\nexport type BreakdownData = {\n\tsysId?: string,\n\telementSysIds?: string[],\n\telementsFilterSysId?: string,\n\toperator?: BreakdownOperators,\n\tbreakdownOptions?: OptionItem[],\n\telementOptions?: OptionItem[],\n\toperatorOptions?: OptionItem[],\n\tisElementRequired?: boolean,\n};\n\nexport type OptionItem = {\n\tid: string,\n\tlabel: string,\n};\n\nexport const initialState: $Shape<State> = {\n\tbreakdowns: [],\n};\n\nexport function createBreakdownAttrUpdateStatePatch(\n\tbreakdowns: BreakdownData[],\n\tsysId: string | void,\n\tattrName: string,\n\tvalue: any\n) {\n\tconst brIndex = breakdowns.findIndex(x => x.sysId === sysId);\n\n\tif (brIndex >= 0) {\n\t\treturn {\n\t\t\toperation: 'set',\n\t\t\tpath: `breakdowns[${brIndex}].${attrName}`,\n\t\t\tvalue,\n\t\t};\n\t}\n\n\treturn {};\n}\n\nexport type BreakdownOperators = 'default' | 'multi' | 'dynamic';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport { initialState } from './state';\nimport dotWalkingActions from './actions';\n\ncreateCustomElement('viz-config-dot-walk', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tdotWalkPath: {\n\t\t\tdefault: '',\n\t\t},\n\t\ttableName: {\n\t\t\tdefault: '',\n\t\t},\n\t\tdisabled: {\n\t\t\tdefault: false,\n\t\t},\n\t\tplaceholder: {\n\t\t\tdefault: '',\n\t\t},\n\t\tlabel: {\n\t\t\tdefault: '',\n\t\t},\n\t\terrorMessage: {\n\t\t\tdefault: undefined,\n\t\t},\n\t\ttransformMetadata: {},\n\t},\n\tstyles,\n\tinitialState,\n\t...dotWalkingActions,\n});\n","const PREFIX = 'VIZ_CONFIG_DOT_WALK#';\n\nexport const DOT_WALK_PATH_UPDATED = PREFIX + 'PATH_UPDATED';\nexport const DOT_WALK_OPENED_SET = PREFIX + 'OPENED_SET';\n\nexport const RETRIEVE_FIELD_DATA = PREFIX + 'RETRIEVE_FIELD_DATA';\nexport const RETRIEVE_FIELD_DATA_SUCCESS =\n\tPREFIX + 'RETRIEVE_FIELD_DATA_SUCCESS';\nexport const RETRIEVE_FIELD_DATA_FAILURE =\n\tPREFIX + 'RETRIEVE_FIELD_DATA_FAILURE';\n\nexport const RETRIEVE_FIELD_LABEL = PREFIX + 'RETRIEVE_FIELD_LABEL';\nexport const RETRIEVE_FIELD_LABEL_SUCCESS =\n\tPREFIX + 'RETRIEVE_FIELD_LABEL_SUCCESS';\n\nexport const DOT_WALK_SEPARATOR = ' . ';\n","// @flow\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type Option } from '../common/types/option';\nimport { type FieldDefinitions } from '../common/types/field';\nimport {\n\ttype DataSourceInfos,\n\ttype DataSource,\n} from '../common/types/data-source';\n\nexport type TrendbyData = {\n\ttrendByField?: string[],\n\ttrendByLabel?: string[],\n\ttrendByFrequency?: string,\n};\n\nexport type TrendbyErrors = {\n\tfieldError?: string[],\n\tfrequencyError?: string,\n};\n\nexport type TrendbyTypeTrack = {\n\tfieldTyped?: boolean[],\n\tfrequencyTyped?: boolean,\n};\n\nexport type State = {\n\tcomponentHost?: HTMLElement,\n\tpopoverOpened?: boolean,\n\tpopoverClosedAt: number,\n\tpopoverTarget?: HTMLElement,\n\tlocalTrendByList: {\n\t\tdataSource: DataSource,\n\t\thasReferenceFields: boolean,\n\t\tlabel: string,\n\t\toptions: Option[],\n\t}[],\n\tdataToApply?: TrendbyData,\n\ttypingTrack: TrendbyTypeTrack,\n\terrorMessages: TrendbyErrors,\n\tproperties: {\n\t\tdataSourceInfos: DataSourceInfos,\n\t\tchartModel: ChartModel,\n\t\tfieldDefinitions: FieldDefinitions,\n\t\texpanded: boolean,\n\t},\n};\n\nexport const initialState: State = {\n\tproperties: {},\n\ttypingTrack: {},\n\terrorMessages: {},\n\tpopoverClosedAt: 0,\n\tlocalTrendByList: [],\n};\n","// @flow\n\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type ColorRule } from '../common/types/color-rules';\nimport { type Option } from '../common/types/option';\nimport { type Metric } from '../common/types/metric';\n\nexport type State = {\n\tcomponentHost?: ?HTMLElement,\n\tpopoverOpened: boolean,\n\tpopoverClosedAt: number,\n\tpopoverTarget?: ?HTMLElement,\n\tdataToApply: $Shape<ColorRule>,\n\tcolorRuleIndex?: Number,\n\tinvalidInput: {\n\t\tvalue1: boolean,\n\t\tvalue2: boolean,\n\t\torder: boolean,\n\t},\n\tproperties: {\n\t\texpanded: boolean,\n\t\tchartModel: ChartModel,\n\t\tsingleColors: Option[],\n\t\tmetric: Metric,\n\t\tmetricIndex?: number,\n\t},\n};\n\nexport const initialState: State = {\n\tdataToApply: {},\n\tpopoverOpened: false,\n\tpopoverClosedAt: 0,\n\tcolorRuleIndex: undefined,\n\tproperties: {},\n\tinvalidInput: {\n\t\tvalue1: false,\n\t\tvalue2: false,\n\t\torder: false,\n\t},\n};\n","// @flow\n\nimport {\n\tDATE,\n\tDATETIME,\n\tDUE_DATE,\n\tGLIDE_DATE,\n\tGLIDE_DATE_TIME,\n} from './constants';\n\n/**\n * Check if the field type is date\n * @param {string} type\n * @return {boolean}\n */\nexport const isDateField = (type: string): boolean => {\n\treturn (\n\t\ttype === DATE ||\n\t\ttype === DATETIME ||\n\t\ttype === DUE_DATE ||\n\t\ttype === GLIDE_DATE ||\n\t\ttype === GLIDE_DATE_TIME\n\t);\n};\n","//@flow\nimport {\n\ttype DataSource,\n\ttype DataSourceInfos,\n} from '../../common/types/data-source';\n\nimport { type Metric } from '../../common/types/metric';\nimport { type FieldDefinitions } from '../../common/types/field';\n\nimport { getAggregateOptionsTable } from '../../visualizations-config-panel/actions/model-options';\nimport { AGGREGATE_FUNCTION_COUNT } from '../../metric-configuration/constants';\nimport { getOptionLabel } from '../../common/options';\n\nimport {\n\tisTableMetric,\n\tisIndicatorMetric,\n\tgetMetricDataSource,\n} from './metric-datasource';\nimport { getFieldDefinitionKey } from '../field';\n\nexport const getMetricLabel = (\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tmetric: Metric,\n\tfieldDefinitions: FieldDefinitions\n): string => {\n\tif (metric.label) {\n\t\treturn metric.label;\n\t}\n\n\tif (!metric.dataSource) {\n\t\treturn '';\n\t}\n\n\tconst dataSource = getMetricDataSource(metric, dataSources);\n\tconst dataSourceInfo = dataSourceInfos[metric.dataSource];\n\n\tif (isTableMetric(metric, dataSources) && metric.aggregateFunction) {\n\t\tif (metric.aggregateFunction === AGGREGATE_FUNCTION_COUNT) {\n\t\t\treturn dataSource.label;\n\t\t}\n\n\t\tif (/\\./.test(metric.aggregateField || '')) {\n\t\t\tconst key = getFieldDefinitionKey({\n\t\t\t\ttableName: dataSource.tableName,\n\t\t\t\tfieldName: metric.aggregateField,\n\t\t\t});\n\n\t\t\tif (!fieldDefinitions[key]) {\n\t\t\t\tthrow new Error(`Field metadata not found for ${key}`);\n\t\t\t}\n\n\t\t\treturn fieldDefinitions[key].label;\n\t\t}\n\n\t\tconst aggregateOptions = getAggregateOptionsTable(\n\t\t\tmetric.aggregateFunction || '',\n\t\t\tdataSourceInfo\n\t\t);\n\n\t\treturn getOptionLabel(aggregateOptions, metric.aggregateField);\n\t} else if (isIndicatorMetric(metric, dataSources) && metric.dataSource) {\n\t\treturn dataSource.label;\n\t}\n\n\treturn '';\n};\n","//@flow\nimport { type Option } from './types/option';\n\nexport const getOptionLabel = (options: Option[], id?: string) =>\n\toptions.reduce(\n\t\t(label, current) => (current.id === id ? current.label : label),\n\t\t''\n\t);\n","//@flow\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport { type State } from '../state';\nimport { type Uuid, type UuidChartAPI } from '../../common/types/uuid';\nimport { type DataSource } from '../../common/types/data-source';\nimport { type Metric } from '../../common/types/metric';\nimport {\n\ttype ChartModel,\n\ttype AdditionalSettings,\n\ttype LegendSettings,\n\ttype AxisSettings,\n\ttype DisplaySettings,\n} from './chart-model';\nimport {\n\ttype ChartProps,\n\ttype DataConfiguration,\n\ttype StyleConfiguration,\n\ttype PropsChartSettings,\n\ttype AxisConfigXenolith,\n\ttype SeriesConfigXenolith,\n\ttype ExtentsXenolith,\n} from './chart-props';\nimport {\n\ttype AxisConfig,\n\tPRIMARY_AXIS,\n\tAXIS_PREFIX,\n\tAXIS_ORIENTATION_LEFT,\n} from '../../common/types/axis';\nimport omitBy from 'lodash/omitBy';\nimport {\n\tSTACKED,\n\tCHART_TYPES_CONFIG,\n\tDONUT_CHART_TYPES,\n\tTIMESERIES_CHART_TYPES,\n\tBAR_CHART_TYPES,\n\tMETRIC_CHART_TYPES,\n} from '../../common/chart-settings';\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport {\n\tSOURCE_TYPE_TABLE,\n\tSOURCE_TYPE_INDICATOR,\n\tSOURCE_TYPE_TABLE_SOURCE,\n} from '../../common/types/data-source';\nimport {\n\tLEGEND_POSITION_BOTTOM,\n\tDATA_LABEL_POSITION_MIDDLE,\n\tDATA_LABEL_STACKED_INDIVIDUAL,\n\tDATE_RANGE_TYPE,\n\tDEFAULT_AXIS_RANGE,\n\tCOLOR_TYPE_FIXED,\n\tCOLOR_TYPE_SINGLE,\n\tCOLOR_TYPE_DEFAULT,\n\tCOLOR_TYPE_PALETTE,\n\tSHOW_DATA_LABEL_AS_VALUE_AND_PERCENT,\n} from '../views/view-constants';\n\nimport {\n\tNO_OF_GROUP_BASED_ON_FIRST_METRIC,\n\tNO_OF_GROUP_BASED_ON_PER_METRIC,\n} from '../../group-by-selector/constants';\n\nimport isEmpty from 'lodash/isEmpty';\nimport { getMetricDataSource } from '../../helpers/metric';\nimport { type FiltersSettings } from './chart-model';\nimport { getDataSourceUniqueId } from '../../helpers/data-source';\nimport { sortAxisConfigs } from '../../helpers/axis';\nimport { type ColorRule } from '../../common/types/color-rules';\nimport { type ColorCondition } from './chart-props';\n\nexport const convertUuidToProp = (\n\tuuid: Uuid,\n\tmetric?: Metric\n): UuidChartAPI => {\n\tconst uuidProp: UuidChartAPI = {\n\t\tindicator: uuid.indicator,\n\t\taggregate: metric && metric.aggregateIndicator,\n\t\tdomain: uuid.domain,\n\t};\n\n\tif (uuid.breakdowns) {\n\t\tuuidProp.breakdowns = uuid.breakdowns.map(breakdown => ({\n\t\t\tsys_id: breakdown.sysId,\n\t\t\telements_filter_sys_id: breakdown.elementsFilterSysId,\n\t\t\telement_sys_ids: breakdown.elementSysIds,\n\t\t}));\n\t}\n\n\treturn uuidProp;\n};\n\nfunction getSourceTypeConfiguration(metric: Metric, dataSource: DataSource) {\n\tconst config: $Shape<DataConfiguration> = {};\n\n\tif (dataSource.sourceType == SOURCE_TYPE_TABLE) {\n\t\tif (dataSource.predefinedFilterId) {\n\t\t\tconfig.source_type = SOURCE_TYPE_TABLE_SOURCE;\n\t\t\tconfig.source_id = dataSource.predefinedFilterId;\n\t\t} else {\n\t\t\tconfig.source_type = SOURCE_TYPE_TABLE;\n\t\t\tconfig.source_id = dataSource.tableName;\n\t\t}\n\t} else if (dataSource.sourceType == SOURCE_TYPE_INDICATOR) {\n\t\tif (!dataSource.uuid) {\n\t\t\tthrow new Error('UUID model is not defined');\n\t\t}\n\n\t\tconfig.source_type = SOURCE_TYPE_INDICATOR;\n\t\tconfig.uuid = convertUuidToProp(dataSource.uuid, metric);\n\t}\n\n\treturn config;\n}\n\nconst isValidAxisRangeValue = (value: any): any => {\n\tif (\n\t\ttypeof value === undefined ||\n\t\tvalue === null ||\n\t\t!(Number(value) || Number(value) === 0)\n\t)\n\t\treturn false;\n\n\treturn true;\n};\n\nconst getAxisRange = (axisConfig: AxisConfig) => {\n\tconst rangeFromValue = isValidAxisRangeValue(axisConfig.axisRangeFrom)\n\t\t? axisConfig.axisRangeFrom\n\t\t: DEFAULT_AXIS_RANGE;\n\n\tconst rangeToValue = isValidAxisRangeValue(axisConfig.axisRangeTo)\n\t\t? axisConfig.axisRangeTo\n\t\t: DEFAULT_AXIS_RANGE;\n\n\t// Range is not defined\n\tif (\n\t\trangeFromValue === DEFAULT_AXIS_RANGE &&\n\t\trangeToValue === DEFAULT_AXIS_RANGE\n\t) {\n\t\treturn undefined;\n\t}\n\n\treturn [rangeFromValue, rangeToValue];\n};\n\nexport const getExtent = (chartModel: ChartModel): ?ExtentsXenolith => {\n\tconst { yAxisConfigs } = chartModel;\n\n\tif (yAxisConfigs.length === 1) {\n\t\tconst axisRange = getAxisRange(yAxisConfigs[0]);\n\n\t\tif (axisRange) {\n\t\t\treturn {\n\t\t\t\ty: axisRange,\n\t\t\t};\n\t\t}\n\t} else if (yAxisConfigs.length > 1) {\n\t\tconst extents = {};\n\n\t\tyAxisConfigs.forEach(axisConfig => {\n\t\t\tconst axisRange = getAxisRange(axisConfig);\n\n\t\t\tif (axisRange) {\n\t\t\t\textents[axisConfig.id] = axisRange;\n\t\t\t}\n\t\t});\n\t\treturn extents;\n\t}\n\n\treturn undefined;\n};\n\nexport const getYAxisConfig = (chartModel: ChartModel): ?AxisConfigXenolith => {\n\tconst { yAxisConfigs } = chartModel;\n\n\tif (yAxisConfigs.length === 1) {\n\t\treturn {\n\t\t\ttitle: yAxisConfigs[0].title,\n\t\t\torientation: yAxisConfigs[0].orientation,\n\t\t};\n\t} else if (yAxisConfigs.length > 1) {\n\t\tconst yAxisConfig = {};\n\n\t\tyAxisConfigs.forEach(axisConfig => {\n\t\t\tyAxisConfig[axisConfig.id] = {\n\t\t\t\ttitle: axisConfig.title,\n\t\t\t\torientation: axisConfig.orientation,\n\t\t\t};\n\t\t});\n\t\treturn yAxisConfig;\n\t}\n\n\treturn undefined;\n};\n\nexport const getSeriesConfig = (\n\tchartModel: ChartModel\n): ?SeriesConfigXenolith => {\n\tconst { chartType, metrics } = chartModel;\n\n\tif (!TIMESERIES_CHART_TYPES.includes(chartType)) {\n\t\treturn undefined;\n\t}\n\n\tconst seriesConfig = {};\n\n\tmetrics.forEach((metric, index) => {\n\t\tconst seriesConfigId = `data_${index}_0`;\n\n\t\tif (metric.axisId) {\n\t\t\tconst metricChartType =\n\t\t\t\tmetric.chartType && METRIC_CHART_TYPES[metric.chartType];\n\n\t\t\tseriesConfig[seriesConfigId] = {\n\t\t\t\taxis: metric.axisId,\n\t\t\t\ttype: metricChartType,\n\t\t\t};\n\t\t}\n\t});\n\n\treturn seriesConfig;\n};\n\nexport const getAxisSettingsFromChartModelToProp = (\n\tmodel: ChartModel\n): $Shape<StyleConfiguration> => {\n\tconst isAllowed = CHART_TYPES_CONFIG.find(\n\t\te =>\n\t\t\te.id === model.chartType &&\n\t\t\t(e.menuGroup === 'time' || e.menuGroup === 'bar')\n\t);\n\n\tif (isEmpty(model.axisSettings) || !isAllowed) return {};\n\n\treturn {\n\t\txAxisConfig: {\n\t\t\ttitle: model.axisSettings && model.axisSettings.xAxisName,\n\t\t},\n\t};\n};\nfunction getStartTime({\n\tdateRangeShowMax,\n\tdateRangeAmount,\n\tdateRangeType,\n}: AxisSettings) {\n\tif (!dateRangeAmount || dateRangeShowMax) {\n\t\treturn;\n\t}\n\n\treturn `P${dateRangeAmount}${dateRangeType || DATE_RANGE_TYPE.MONTHS}`;\n}\n\nfunction convertColorRuleToColorCondition(\n\tcolorRule: ColorRule\n): $Shape<ColorCondition> {\n\treturn {\n\t\toperator: colorRule.operator,\n\t\tvalue1: colorRule.value1,\n\t\tvalue2: colorRule.value2,\n\t\tcolor_sys_id: colorRule.color,\n\t\torder: colorRule.order,\n\t};\n}\n\nfunction convertColorConditionToColorRule(\n\tcolorCondition: ColorCondition\n): $Shape<ColorRule> {\n\treturn {\n\t\toperator: colorCondition.operator,\n\t\tvalue1: colorCondition.value1,\n\t\tvalue2: colorCondition.value2,\n\t\tcolor: colorCondition.color_sys_id,\n\t\torder: colorCondition.order,\n\t};\n}\n\nfunction buildPropsChartSettings(\n\tmetric: Metric,\n\t{ chartSettings: modelChartSettings }: ChartModel\n) {\n\tconst chartSettings = {};\n\n\tif (metric.label) {\n\t\tchartSettings.main_series_label = metric.label;\n\t}\n\n\tif (modelChartSettings) {\n\t\tconst color = modelChartSettings && modelChartSettings.color;\n\n\t\tif (color && color.type !== COLOR_TYPE_DEFAULT) {\n\t\t\tif (color.type === COLOR_TYPE_SINGLE && metric.colorSysID) {\n\t\t\t\tchartSettings.color = {\n\t\t\t\t\ttype: color.type,\n\t\t\t\t\tsys_id: metric.colorSysID,\n\t\t\t\t\tconditions: !metric.colorRules\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: metric.colorRules.map(rule =>\n\t\t\t\t\t\t\t\tconvertColorRuleToColorCondition(rule)\n\t\t\t\t\t\t  ),\n\t\t\t\t};\n\t\t\t} else if (color.type === COLOR_TYPE_PALETTE && color.sys_id) {\n\t\t\t\tchartSettings.color = {\n\t\t\t\t\ttype: color.type,\n\t\t\t\t\tsys_id: color.sys_id,\n\t\t\t\t};\n\t\t\t} else if (color.type === COLOR_TYPE_FIXED) {\n\t\t\t\tchartSettings.color = {\n\t\t\t\t\ttype: color.type,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn isEmpty(chartSettings) ? undefined : chartSettings;\n}\n\nfunction buildModelChartSettings(\n\tmodelChartSettings: PropsChartSettings | void\n) {\n\tif (modelChartSettings && modelChartSettings.color) {\n\t\tif (modelChartSettings.color.type === COLOR_TYPE_PALETTE) {\n\t\t\treturn {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: modelChartSettings.color.type,\n\t\t\t\t\tsys_id: modelChartSettings.color.sys_id,\n\t\t\t\t},\n\t\t\t};\n\t\t} else if (modelChartSettings.color.type === COLOR_TYPE_SINGLE) {\n\t\t\treturn {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: modelChartSettings.color.type,\n\t\t\t\t\tsys_id: modelChartSettings.color.sys_id,\n\t\t\t\t\tcolorRule: !modelChartSettings.color.conditions\n\t\t\t\t\t\t? []\n\t\t\t\t\t\t: modelChartSettings.color.conditions.map(condition =>\n\t\t\t\t\t\t\t\tconvertColorConditionToColorRule(condition)\n\t\t\t\t\t\t  ),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tcolor: {\n\t\t\t\ttype: modelChartSettings.color.type,\n\t\t\t},\n\t\t};\n\t}\n\n\treturn undefined;\n}\n\nfunction convertShowOverlappingLabels(styleConfig: StyleConfiguration) {\n\tif (\n\t\tstyleConfig.dataLabelConfig &&\n\t\tstyleConfig.dataLabelConfig.collisions === 'show'\n\t)\n\t\treturn true;\n\n\treturn false;\n}\n\nfunction convertMetricToDataConfiguration(\n\tmodel: ChartModel,\n\tmetric: Metric\n): DataConfiguration {\n\tconst source = getMetricDataSource(metric, model.dataSources);\n\n\tconst additional: AdditionalSettings = model.additionalSettings;\n\tconst sourceTypeConfiguration = getSourceTypeConfiguration(metric, source);\n\tconst start_time = model.axisSettings && getStartTime(model.axisSettings);\n\tconst chart_settings = buildPropsChartSettings(metric, model);\n\tconst displaySettings: DisplaySettings = model.displaySettings || {};\n\n\treturn {\n\t\t__viz_config_id: source.id,\n\t\t__viz_config_label: source.label,\n\t\taggregate_field: metric.aggregateField,\n\t\taggregate_function: metric.aggregateFunction,\n\t\taggregation_source: metric.aggregationSource,\n\t\ttrend_field: metric.trendByField,\n\t\ttrend_interval: model.trendByFrequency,\n\t\tstack_by_field: source.stackByField,\n\t\tfilter_query: source.filterQuery,\n\t\tgroup_by: source.groupByField,\n\t\tnumber_of_groups: model.groupByMax,\n\t\tselected_groups:\n\t\t\tmodel.noOfGroupBasedOn === NO_OF_GROUP_BASED_ON_FIRST_METRIC\n\t\t\t\t? 'data_source_with_least_order'\n\t\t\t\t: undefined,\n\t\tshow_other: model.showOthers,\n\t\tstart_time,\n\t\tinclude_scores: additional.include_scores,\n\t\tinclude_benchmark: additional.include_benchmark,\n\t\tinclude_forecast: additional.include_forecast,\n\t\tinclude_forecast_range:\n\t\t\tadditional.include_forecast === false\n\t\t\t\t? false\n\t\t\t\t: additional.include_forecast_range,\n\t\tinclude_global_targets: additional.include_targets,\n\t\tinclude_sparkline_global_targets: additional.include_targets,\n\t\tinclude_sparkline_personal_targets: additional.include_targets,\n\t\tinclude_target_review_date: additional.include_targets,\n\t\tinclude_targets: additional.include_targets,\n\t\tinclude_thresholds: additional.include_thresholds,\n\t\tinclude_change: additional.include_change,\n\t\tinclude_change_percentage:\n\t\t\tadditional.include_change === false\n\t\t\t\t? false\n\t\t\t\t: additional.include_change_percentage,\n\t\tinclude_comments: additional.include_comments,\n\t\tinclude_initiatives: additional.include_initiatives,\n\t\tinclude_sparkline: additional.include_sparkline,\n\t\tinclude_gap_percentage:\n\t\t\tadditional.include_targets === false\n\t\t\t\t? false\n\t\t\t\t: additional.include_gap_percentage,\n\t\tinclude_trend: additional.include_trend,\n\t\tinclude_band: additional.include_band,\n\t\tdecimal_precision:\n\t\t\tmodel.dataLabelSettings && model.dataLabelSettings.decimalPrecision,\n\t\tsort_by: displaySettings.sortByField,\n\t\tsort_order: displaySettings.orderByField,\n\t\tdisplay_zero: displaySettings.displayZero,\n\t\tchart_settings,\n\t\t...sourceTypeConfiguration,\n\t};\n}\n\nexport function convertModelToProps(model: ChartModel): ChartProps {\n\tconst additional: AdditionalSettings = model.additionalSettings;\n\tconst filters: FiltersSettings = model.filtersSettings;\n\tconst displaySettings: DisplaySettings = model.displaySettings || {};\n\tconst xenolithProperties: xenolithProperties = model.xenolithProperties || {};\n\tconst getAxisSettings = getAxisSettingsFromChartModelToProp(model);\n\n\tconst props: ChartProps = {\n\t\tchartType: model.chartType,\n\t\tdataConfigurations: model.metrics.map(\n\t\t\tconvertMetricToDataConfiguration.bind(null, model)\n\t\t),\n\t\tstyleConfigurations: {\n\t\t\t...(model.isStacked === STACKED && { type: STACKED }),\n\t\t\twidth: model.chartWidth,\n\t\t\theight: model.chartHeight,\n\t\t\tshowDataLabels: !!(\n\t\t\t\tmodel.dataLabelSettings && model.dataLabelSettings.showDataLabels\n\t\t\t),\n\t\t\t...getAxisSettings,\n\t\t\tscoreSize: displaySettings.scoreSize,\n\t\t\t...pick(xenolithProperties, ['heading', 'headingPosition']),\n\t\t\tyAxisConfig: getYAxisConfig(model),\n\t\t\tseriesConfig: getSeriesConfig(model),\n\t\t\textents: getExtent(model),\n\t\t\tcanClick: model.canClick,\n\t\t},\n\t\tvariant: model.variant,\n\t\tlabel: model.label,\n\t\tborder: model.border,\n\t\tisRealtime: model.realtime,\n\t\tshowRealtimeIndicator: model.showRealtimeIndicator,\n\t\trefreshInterval: model.refreshInterval,\n\t\tkpiDetailsNavigation: undefined, // TODO: Value will be dynamic in Quebec\n\t\tfollowFilters: filters.followFilters,\n\t\thideFiltersInfo: filters.hideFiltersInfo,\n\t\t// This prop is just sent to UXF with value '@state.parFilters' based on followFilters boolean value, we do not read it back.\n\t\tfilterConfigurations: filters.followFilters\n\t\t\t? '@state.parFilters'\n\t\t\t: undefined,\n\t\thideHeader: model.hideHeader,\n\t\trefreshFrequency: model.refreshFrequency,\n\t};\n\n\tconst isTimeSeriesChart = CHART_TYPES_CONFIG.find(\n\t\te =>\n\t\t\te.id === model.chartType &&\n\t\t\te.menuGroup === 'time' &&\n\t\t\tmodel.chartType !== CHART_TYPES.COLUMN\n\t);\n\n\tconst dataLabelConfig = {};\n\n\tif (DONUT_CHART_TYPES.includes(model.chartType)) {\n\t\tdataLabelConfig.showTotal = !!additional.showTotal;\n\n\t\tif (xenolithProperties.totalLabel) {\n\t\t\tdataLabelConfig.totalLabel = xenolithProperties.totalLabel;\n\t\t}\n\t}\n\n\tconst dataLabelSettings = model.dataLabelSettings;\n\n\tif (dataLabelSettings && dataLabelSettings.showDataLabels !== undefined) {\n\t\tdataLabelConfig.align =\n\t\t\tdataLabelSettings.dataLabelPosition || DATA_LABEL_POSITION_MIDDLE;\n\n\t\tconst showOverlappingLabel =\n\t\t\tdataLabelSettings.showOverlappingLabels === true ? 'show' : 'hide';\n\n\t\tdataLabelConfig.collisions = showOverlappingLabel || 'hide';\n\n\t\tdataLabelConfig.stacked =\n\t\t\tdataLabelSettings.stackedValue || DATA_LABEL_STACKED_INDIVIDUAL;\n\n\t\tdataLabelConfig.valueType =\n\t\t\tdataLabelSettings.showDataLabelAs || SHOW_DATA_LABEL_AS_VALUE_AND_PERCENT;\n\t}\n\n\tif (isTimeSeriesChart) {\n\t\tdataLabelConfig.type = 'peakValley';\n\t} else if (model.chartType === CHART_TYPES.COLUMN) {\n\t\tdataLabelConfig.type = 'all';\n\t}\n\n\tprops.styleConfigurations.dataLabelConfig = dataLabelConfig;\n\n\tconst legendSettings = model.legendSettings;\n\n\tif (legendSettings && legendSettings.showLegend !== undefined) {\n\t\tprops.styleConfigurations.hideRegister = !legendSettings.showLegend;\n\t\tprops.styleConfigurations.registerConfig = {\n\t\t\tlegendOnly: !legendSettings.showLegendValue,\n\t\t\tshowPercentages: legendSettings.showLegendPercentage,\n\t\t};\n\t\tprops.styleConfigurations.registerPosition =\n\t\t\tlegendSettings.legendPosition || LEGEND_POSITION_BOTTOM;\n\t}\n\n\treturn props;\n}\n\nexport const convertUuidToModel = (uuid: UuidChartAPI): Uuid => {\n\tconst uuidModel: Uuid = {\n\t\tindicator: uuid.indicator,\n\t\tdomain: uuid.domain,\n\t\tbreakdowns: [],\n\t};\n\n\tif (uuid.breakdowns) {\n\t\tuuidModel.breakdowns = uuid.breakdowns.map(breakdown => ({\n\t\t\tsysId: breakdown.sys_id,\n\t\t\telementsFilterSysId: breakdown.elements_filter_sys_id,\n\t\t\telementSysIds: breakdown.element_sys_ids,\n\t\t}));\n\t}\n\n\treturn uuidModel;\n};\n\nexport const getSeriesConfigFromProps = (\n\tchartProps: ChartProps,\n\tdataConfigurationIndex: number\n) => {\n\tconst { chartType, styleConfigurations } = chartProps;\n\n\tlet axisId;\n\tlet metricChartType;\n\n\tif (BAR_CHART_TYPES.includes(chartType)) {\n\t\taxisId = PRIMARY_AXIS;\n\t}\n\n\tif (TIMESERIES_CHART_TYPES.includes(chartType)) {\n\t\tconst seriesConfigId = `data_${dataConfigurationIndex}_0`;\n\n\t\tconst seriesConfig =\n\t\t\tstyleConfigurations.seriesConfig &&\n\t\t\tstyleConfigurations.seriesConfig[seriesConfigId];\n\n\t\taxisId = (seriesConfig && seriesConfig.axis) || PRIMARY_AXIS;\n\t\tmetricChartType = seriesConfig && seriesConfig.type;\n\t}\n\n\treturn {\n\t\taxisId,\n\t\tchartType: metricChartType,\n\t};\n};\n\nfunction getMetricsFromProps(chartProps: ChartProps): $Shape<ChartModel> {\n\tconst properties: $Shape<ChartModel> = {};\n\tconst { dataConfigurations = [] } = chartProps;\n\n\tconst dataSources: DataSource[] = [];\n\tconst metrics: Metric[] = [];\n\n\tdataConfigurations.forEach((dataConfig, index) => {\n\t\tlet dataSource = dataSources.find(\n\t\t\tds => ds.id === dataConfig.__viz_config_id\n\t\t);\n\n\t\tif (!dataSource) {\n\t\t\tdataSource = getModelSourceTypeConfiguration(dataConfig, dataSources);\n\t\t\tdataSources.push(dataSource);\n\t\t}\n\n\t\tconst metric: Metric = { dataSource: dataSource.id };\n\n\t\tif (dataSource.sourceType === SOURCE_TYPE_TABLE) {\n\t\t\tmetric.aggregateField = dataConfig.aggregate_field;\n\t\t\tmetric.aggregateFunction = dataConfig.aggregate_function;\n\t\t\tmetric.aggregationSource = dataConfig.aggregation_source;\n\t\t} else if (dataSource.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\t\tmetric.aggregateIndicator = dataConfig.uuid && dataConfig.uuid.aggregate;\n\t\t}\n\n\t\tif (dataConfig.trend_field) {\n\t\t\tmetric.trendByField = dataConfig.trend_field;\n\t\t}\n\n\t\tmetric.label =\n\t\t\tdataConfig.chart_settings && dataConfig.chart_settings.main_series_label;\n\t\tconst color = dataConfig.chart_settings && dataConfig.chart_settings.color;\n\n\t\tif (color && color.type === COLOR_TYPE_SINGLE) {\n\t\t\tmetric.colorSysID = color.sys_id;\n\t\t\tmetric.colorRules = !color.conditions\n\t\t\t\t? []\n\t\t\t\t: color.conditions.map(condition =>\n\t\t\t\t\t\tconvertColorConditionToColorRule(condition)\n\t\t\t\t  );\n\t\t}\n\n\t\tconst { axisId, chartType } = getSeriesConfigFromProps(chartProps, index);\n\n\t\tmetric.axisId = axisId;\n\n\t\tconst metricChartType = Object.keys(METRIC_CHART_TYPES).find(\n\t\t\tkey => METRIC_CHART_TYPES[key] === chartType\n\t\t);\n\n\t\tmetric.chartType = metricChartType;\n\n\t\tmetrics.push(metric);\n\t});\n\tproperties.dataSources = dataSources;\n\tproperties.metrics = metrics;\n\n\treturn properties;\n}\n\nexport function getModelSourceTypeConfiguration(\n\tdataConfig: DataConfiguration,\n\tdataSources: DataSource[]\n): DataSource {\n\tlet dataSource: $Shape<DataSource> = {\n\t\tlabel: dataConfig.__viz_config_label,\n\t\tgroupByField: dataConfig.group_by,\n\t\tstackByField: dataConfig.stack_by_field,\n\t};\n\n\tswitch (dataConfig.source_type) {\n\t\tcase SOURCE_TYPE_TABLE:\n\t\t\tObject.assign(dataSource, {\n\t\t\t\tsourceType: SOURCE_TYPE_TABLE,\n\t\t\t\ttableName: dataConfig.source_id,\n\t\t\t\tfilterQuery: dataConfig.filter_query,\n\t\t\t});\n\t\t\tbreak;\n\t\tcase SOURCE_TYPE_TABLE_SOURCE:\n\t\t\tObject.assign(dataSource, {\n\t\t\t\tsourceType: SOURCE_TYPE_TABLE,\n\t\t\t\tfilterQuery: dataConfig.filter_query,\n\t\t\t\tpredefinedFilterId: dataConfig.source_id,\n\t\t\t});\n\t\t\tbreak;\n\t\tcase SOURCE_TYPE_INDICATOR: {\n\t\t\tif (!dataConfig.uuid) {\n\t\t\t\tthrow new Error('UUID is missing from dataConfiguration');\n\t\t\t}\n\n\t\t\tObject.assign(dataSource, {\n\t\t\t\tsourceType: SOURCE_TYPE_INDICATOR,\n\t\t\t\tuuid: convertUuidToModel(dataConfig.uuid),\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tdataSource = { id: undefined, label: undefined, sourceType: '' };\n\t\t\tbreak;\n\t}\n\n\tdataSource.id =\n\t\tdataConfig.__viz_config_id ||\n\t\tgetDataSourceUniqueId(dataSource, dataSources);\n\n\treturn dataSource;\n}\n\nfunction stripUndefined<T>(o: T): T {\n\treturn omitBy((o: any), x => x === undefined);\n}\n\nfunction parseStarTime(period?: string): AxisSettings {\n\tif (!period) {\n\t\treturn {\n\t\t\tdateRangeShowMax: true,\n\t\t};\n\t}\n\n\tconst duration = moment.duration(period);\n\tconst years = duration.asYears();\n\tconst months = duration.asMonths();\n\tconst days = duration.asDays();\n\n\tif (years >= 1 && Number.isInteger(years)) {\n\t\treturn { dateRangeAmount: years, dateRangeType: DATE_RANGE_TYPE.YEARS };\n\t}\n\n\tif (months >= 1 && Number.isInteger(months)) {\n\t\treturn { dateRangeAmount: months, dateRangeType: DATE_RANGE_TYPE.MONTHS };\n\t}\n\n\treturn { dateRangeAmount: days, dateRangeType: DATE_RANGE_TYPE.DAYS };\n}\n\nexport const getLegendOptions = (\n\tstyleConfig: $Shape<StyleConfiguration>\n): ?LegendSettings => {\n\tif (styleConfig.hideRegister !== undefined) {\n\t\treturn {\n\t\t\tshowLegend: !styleConfig.hideRegister,\n\t\t\tshowLegendValue: !get(styleConfig, 'registerConfig.legendOnly'),\n\t\t\tshowLegendPercentage: get(styleConfig, 'registerConfig.showPercentages'),\n\t\t\tlegendPosition: styleConfig.registerPosition || LEGEND_POSITION_BOTTOM,\n\t\t};\n\t}\n\n\treturn undefined;\n};\n\nexport const getAxisRangeFromProps = (\n\taxisRange?: Array<?number | ?string>\n): $Shape<AxisConfig> => {\n\tif (axisRange && axisRange.length > 1) {\n\t\treturn {\n\t\t\taxisRangeFrom:\n\t\t\t\taxisRange[0] === DEFAULT_AXIS_RANGE ? undefined : axisRange[0],\n\t\t\taxisRangeTo:\n\t\t\t\taxisRange[1] === DEFAULT_AXIS_RANGE ? undefined : axisRange[1],\n\t\t};\n\t}\n\n\treturn {\n\t\taxisRangeFrom: undefined,\n\t\taxisRangeTo: undefined,\n\t};\n};\n\nexport const getYAxisConfigFromProps = (\n\tchartProps: ChartProps\n): AxisConfig[] => {\n\tconst { chartType, styleConfigurations } = chartProps;\n\n\tif (\n\t\t!BAR_CHART_TYPES.includes(chartType) &&\n\t\t!TIMESERIES_CHART_TYPES.includes(chartType)\n\t) {\n\t\treturn [];\n\t}\n\n\tconst hasAxisDefined =\n\t\tstyleConfigurations.yAxisConfig &&\n\t\tstyleConfigurations.yAxisConfig[PRIMARY_AXIS];\n\n\tif (hasAxisDefined) {\n\t\tconst yAxisConfigs = [];\n\n\t\tfor (const attribute in styleConfigurations.yAxisConfig) {\n\t\t\tconst isValidAxisId =\n\t\t\t\tattribute === PRIMARY_AXIS || attribute.indexOf(AXIS_PREFIX) === 0;\n\n\t\t\tif (isValidAxisId) {\n\t\t\t\tconst yAxisConfig = styleConfigurations.yAxisConfig[attribute];\n\n\t\t\t\tconst axisRange =\n\t\t\t\t\tstyleConfigurations.extents &&\n\t\t\t\t\tgetAxisRangeFromProps(styleConfigurations.extents[attribute]);\n\n\t\t\t\tyAxisConfigs.push({\n\t\t\t\t\tid: attribute,\n\t\t\t\t\ttitle: yAxisConfig.title,\n\t\t\t\t\torientation: yAxisConfig.orientation,\n\t\t\t\t\t...axisRange,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tsortAxisConfigs(yAxisConfigs);\n\n\t\treturn yAxisConfigs;\n\t}\n\n\tconst yAxisRange =\n\t\tstyleConfigurations.extents &&\n\t\tgetAxisRangeFromProps(styleConfigurations.extents.y);\n\n\treturn [\n\t\t{\n\t\t\tid: PRIMARY_AXIS,\n\t\t\ttitle:\n\t\t\t\tstyleConfigurations.yAxisConfig &&\n\t\t\t\tstyleConfigurations.yAxisConfig.title,\n\t\t\torientation:\n\t\t\t\t(styleConfigurations.yAxisConfig &&\n\t\t\t\t\tstyleConfigurations.yAxisConfig.orientation) ||\n\t\t\t\tAXIS_ORIENTATION_LEFT,\n\t\t\t...yAxisRange,\n\t\t},\n\t];\n};\n\nexport const getAxisSettingsFromPropToModal = (\n\tstyleConfig: $Shape<StyleConfiguration>\n): AxisSettings => {\n\treturn {\n\t\txAxisName: styleConfig.xAxisConfig && styleConfig.xAxisConfig.title,\n\t};\n};\n\nexport function convertPropsToModel(\n\tprops: ChartProps,\n\tstate: State\n): ChartModel {\n\tconst dataConfig: DataConfiguration = get(props, 'dataConfigurations[0]', {});\n\tconst styleConfig: StyleConfiguration = props.styleConfigurations || {};\n\tconst metricConfiguration = getMetricsFromProps(props);\n\tconst legendOptions = getLegendOptions(styleConfig);\n\tconst axisSettings = getAxisSettingsFromPropToModal(styleConfig);\n\tconst axisTimeSettings = parseStarTime(dataConfig.start_time);\n\tconst stateXAxisSettings: AxisSettings =\n\t\tstate.chartModel && state.chartModel.axisSettings\n\t\t\t? state.chartModel.axisSettings\n\t\t\t: {};\n\n\tconst showTotal = get(styleConfig, 'dataLabelConfig.showTotal');\n\n\tconst additionalSettings: AdditionalSettings = stripUndefined({\n\t\tinclude_scores: dataConfig.include_scores,\n\t\tinclude_benchmark: dataConfig.include_benchmark,\n\t\tinclude_forecast: dataConfig.include_forecast,\n\t\tinclude_forecast_range:\n\t\t\tdataConfig.include_forecast === false\n\t\t\t\t? false\n\t\t\t\t: dataConfig.include_forecast_range,\n\t\tinclude_targets: dataConfig.include_targets,\n\t\tinclude_thresholds: dataConfig.include_thresholds,\n\t\tinclude_change: dataConfig.include_change,\n\t\tinclude_comments: dataConfig.include_comments,\n\t\tinclude_initiatives: dataConfig.include_initiatives,\n\t\tinclude_sparkline: dataConfig.include_sparkline,\n\t\tinclude_trend: dataConfig.include_trend,\n\t\tinclude_band: dataConfig.include_band,\n\t\tshowTotal,\n\t\tinclude_gap_percentage:\n\t\t\tdataConfig.include_global_targets === false\n\t\t\t\t? false\n\t\t\t\t: dataConfig.include_gap_percentage,\n\t\tinclude_change_percentage:\n\t\t\tdataConfig.include_change === false\n\t\t\t\t? false\n\t\t\t\t: dataConfig.include_change_percentage,\n\t});\n\n\tconst filtersSettings: FiltersSettings = {\n\t\tfollowFilters: props.followFilters,\n\t\thideFiltersInfo: props.hideFiltersInfo,\n\t};\n\n\tconst model: ChartModel = {\n\t\tchartType: props.chartType,\n\n\t\ttrendByFrequency: dataConfig.trend_interval,\n\t\tisStacked: styleConfig.type,\n\t\tgroupByMax: dataConfig.number_of_groups,\n\t\tnoOfGroupBasedOn:\n\t\t\tdataConfig.selected_groups === 'data_source_with_least_order'\n\t\t\t\t? NO_OF_GROUP_BASED_ON_FIRST_METRIC\n\t\t\t\t: NO_OF_GROUP_BASED_ON_PER_METRIC,\n\t\tshowOthers:\n\t\t\tdataConfig.selected_groups === 'data_source_with_least_order'\n\t\t\t\t? false\n\t\t\t\t: dataConfig.show_other,\n\t\tadditionalSettings,\n\t\tfiltersSettings,\n\t\t...metricConfiguration,\n\t\tchartWidth: styleConfig.width || 'auto',\n\t\tchartHeight: styleConfig.height || 'auto',\n\t\tdataLabelSettings: {\n\t\t\tshowDataLabels: !!styleConfig.showDataLabels,\n\t\t\tdecimalPrecision: dataConfig.decimal_precision,\n\t\t\tdataLabelPosition:\n\t\t\t\tget(styleConfig, 'dataLabelConfig.align') || DATA_LABEL_POSITION_MIDDLE,\n\t\t\tshowOverlappingLabels: convertShowOverlappingLabels(styleConfig),\n\t\t\tstackedValue:\n\t\t\t\tget(styleConfig, 'dataLabelConfig.stacked') ||\n\t\t\t\tDATA_LABEL_STACKED_INDIVIDUAL,\n\t\t\tshowDataLabelAs:\n\t\t\t\tget(styleConfig, 'dataLabelConfig.valueType') ||\n\t\t\t\tSHOW_DATA_LABEL_AS_VALUE_AND_PERCENT,\n\t\t},\n\t\taxisSettings: {\n\t\t\t...stateXAxisSettings,\n\t\t\t...axisSettings,\n\t\t\t...axisTimeSettings,\n\t\t},\n\t\tvariant: props.variant,\n\t\tborder: props.border,\n\t\tlabel: props.label,\n\t\trealtime: props.isRealtime,\n\t\tshowRealtimeIndicator: props.showRealtimeIndicator,\n\t\trefreshInterval: props.refreshInterval,\n\t\tchartSettings: buildModelChartSettings(dataConfig.chart_settings),\n\t\txenolithProperties: {\n\t\t\theading: styleConfig.heading,\n\t\t\theadingPosition: styleConfig.headingPosition,\n\t\t},\n\t\tdisplaySettings: {\n\t\t\tsortByField: dataConfig.sort_by,\n\t\t\torderByField: dataConfig.sort_order,\n\t\t\tdisplayZero: dataConfig.display_zero,\n\t\t\tscoreSize: styleConfig.scoreSize,\n\t\t},\n\t\thideHeader: !!props.hideHeader,\n\t\tyAxisConfigs: getYAxisConfigFromProps(props),\n\t\trefreshFrequency: props.refreshFrequency,\n\t\tcanClick: styleConfig.canClick,\n\t};\n\n\tif (\n\t\t(styleConfig.headingPosition &&\n\t\t\tstyleConfig.heading &&\n\t\t\tprops.chartType === CHART_TYPES.SINGLE_SCORE) ||\n\t\t(DONUT_CHART_TYPES.includes(props.chartType) &&\n\t\t\tget(styleConfig, 'dataLabelConfig.totalLabel') &&\n\t\t\tshowTotal)\n\t) {\n\t\tmodel.additionalSettings.showMetricLabel = true;\n\t}\n\n\tif (legendOptions) {\n\t\tmodel.legendSettings = legendOptions;\n\t}\n\n\treturn model;\n}\n","// @flow\n\nimport { type Uuid } from '../common/types/uuid';\nimport {\n\ttype DataSource,\n\ttype DataSourceInfo,\n\ttype DataSourceType,\n} from '../common/types/data-source';\n\nexport type State = {|\n\tsourceType: DataSourceType,\n\tdisplayLabel?: string,\n\n\t// Table-specific\n\ttableInfo?: {\n\t\ttableName?: string,\n\t\tfilterQuery?: string,\n\t\tpredefinedFilterId?: string,\n\t\tpreviewPredefinedFilterId?: string,\n\t\tpreviewFilterQuery?: string,\n\t\tisExpanded?: boolean,\n\t\tisEditMode?: boolean,\n\t\tshowCustomConditions?: boolean,\n\t},\n\n\t// Indicator-specific\n\tindicatorInfo?: {\n\t\tuuid?: Uuid,\n\t\tpreviewUuid?: Uuid,\n\t\tisExpanded?: boolean,\n\t\tisEditMode?: boolean,\n\t},\n\n\ttableChanges: {\n\t\t[string]: {|\n\t\t\tpredefinedFilterId?: string,\n\t\t\tfilterQuery?: string,\n\t\t\tpreviewPredefinedFilterId?: string,\n\t\t\tpreviewFilterQuery?: string,\n\t\t\tisExpanded?: boolean,\n\t\t\tisEditMode?: boolean,\n\t\t\tshowCustomConditions?: boolean,\n\t\t|},\n\t},\n\tindicatorChanges: {\n\t\t[string]: {|\n\t\t\tuuid?: Uuid,\n\t\t\tpreviewUuid?: Uuid,\n\t\t\tisExpanded?: boolean,\n\t\t\tisEditMode?: boolean,\n\t\t|},\n\t},\n\n\tproperties: {\n\t\toperationMetadata: {\n\t\t\taddNewDataSource: boolean,\n\t\t\teditDataSourceIndex: number,\n\t\t\tallowedSourceType: string,\n\t\t},\n\t\tdataSource: DataSource,\n\t\tdataSourceInfo: DataSourceInfo,\n\t},\n|};\n\nexport const initialState: $Shape<State> = {\n\ttableChanges: {},\n\tindicatorChanges: {},\n};\n","// @flow\nconst prefix = 'VIZ_CONFIG_TABLE_CONFIGURATION#';\n\nexport const RETRIEVE_PREDEFINED_CONDITIONS =\n\tprefix + 'RETRIEVE_PREDEFINED_CONDITIONS';\nexport const PREDEFINED_CONDITIONS_SUCCESS =\n\tprefix + 'PREDEFINED_CONDITIONS_SUCCESS';\nexport const REMOVE_PREDEFINED_CONDITION =\n\tprefix + 'REMOVE_PREDEFINED_CONDITION';\n\nexport const TABLE_CONFIG_CHANGED = prefix + 'CONFIG_CHANGED';\nexport const DISCARD_FILTER = prefix + 'DISCARD_FILTER';\nexport const EDIT_FILTER = prefix + 'EDIT_FILTER';\nexport const UPDATE_TABLE_PREVIEW = prefix + 'UPDATE_PREVIEW';\nexport const ADD_CUSTOM_CONDITIONS = prefix + 'ADD_CUSTOM_CONDITIONS';\nexport const RETRIEVE_READABLE_QUERY = prefix + 'RETRIEVE_READABLE_QUERY';\nexport const RETRIEVE_READABLE_QUERY_SUCCESS =\n\tprefix + 'RETRIEVE_READABLE_QUERY_SUCCESS';\n","import { t } from 'sn-translate';\nimport {\n\tSOURCE_TYPE_INDICATOR,\n\tSOURCE_TYPE_TABLE,\n\tSOURCE_TYPE_TABLE_SOURCE,\n} from '../common/types/data-source';\n\nexport const VIZ_CONFIG_SOURCE_SELECT_SELECTED =\n\t'VIZ_CONFIG_SOURCE_SELECT#SELECTED';\n\nexport const TABLES_REQUESTED = 'TABLES_REQUESTED';\nexport const TABLES_LOADED = 'TABLES_LOADED';\nexport const TABLES_FAILED = 'TABLES_FAILED';\nexport const INDICATORS_REQUESTED = 'INDICATORS_REQUESTED';\nexport const INDICATORS_LOADED = 'INDICATORS_LOADED';\nexport const INDICATORS_FAILED = 'INDICATORS_FAILED';\nexport const SUGGESTED_REQUESTED = 'SUGGESTED_REQUESTED';\nexport const SUGGESTED_LOADED = 'SUGGESTED_LOADED';\nexport const SUGGESTED_FAILED = 'SUGGESTED_FAILED';\nexport const INDICATOR_SUGGESTED_REQUESTED = 'INDICATOR_SUGGESTED_REQUESTED';\nexport const INDICATOR_SUGGESTED_LOADED = 'INDICATOR_SUGGESTED_LOADED';\nexport const INDICATOR_SUGGESTED_FAILED = 'INDICATOR_SUGGESTED_FAILED';\nexport const SEARCH_SOURCE = 'SEARCH_SOURCE';\nexport const COMPONENT_INIT = 'COMPONENT_INIT';\nexport const NAME_LIKE = 'nameLIKE';\nexport const TABLES = t('Tables');\nexport const INDICATORS = t('Indicators');\nexport const SUGGESTED = t('Suggested');\nexport const TABLES_ID = 'tables';\nexport const INDICATORS_ID = 'indicators';\nexport const SUGGESTED_ID = 'suggested';\nexport const LIMIT = 10;\nexport const SOURCE_TYPE_ICONS = {\n\t[SOURCE_TYPE_INDICATOR]: 'analytics-center-outline',\n\t[SOURCE_TYPE_TABLE]: 'list-outline',\n};\nexport const TOOLTIP_TEXT = {\n\t[SUGGESTED_ID]: t(\n\t\t'Indicators or tables recently used or already connected to the page you are configuring.'\n\t),\n\t[TABLES_ID]: t(\n\t\t'Show the current state of your data. You can also add custom condition to tables.'\n\t),\n\t[INDICATORS_ID]: t(\n\t\t'Predefined KPIs that show trends over time and help forecast future events.'\n\t),\n};\n\nexport const MAP_SOURCE_TYPE_TO_ID = {\n\t[SOURCE_TYPE_TABLE_SOURCE]: TABLES_ID,\n\t[SOURCE_TYPE_INDICATOR]: INDICATORS_ID,\n\t[SOURCE_TYPE_TABLE]: TABLES_ID,\n};\n\nexport const INSUFFICIENT_ROLES = 'INSUFFICIENT_ROLES';\n","export const FILTERS_SETTINGS_CHANGE = 'FILTERS_SETTINGS#CHANGE';\nexport const FIELD_REFRESH_FREQUENCY = 'refreshFrequency';\n","//@flow\nimport get from 'lodash/get';\nimport find from 'lodash/find';\n\nimport { effectProxy } from '../../helpers/seismic';\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from '../state';\n\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n\nimport {\n\tRETRIEVE_PREFERENCES_AND_SECURITY,\n\tRETRIEVE_PREFERENCES_AND_SECURITY_SUCCESS,\n\tRETRIEVE_PREFERENCES_AND_SECURITY_FAILURE,\n\tUPDATE_USER_PREFERENCES,\n\tUPDATE_USER_PREFERENCES_SUCCESS,\n\tUPDATE_USER_PREFERENCES_FAILURE,\n} from './action-constants';\n\nexport const SYS_PROP_ALLOW_MANUAL_UPDATE =\n\t'par_vis_config.uibuilder.allow_manual_update';\n\nexport const SYS_PROP_MIN_REFRESH_FREQUENCY =\n\t'par_vis_config.live_refresh_rate_min_value';\n\nexport const handleDataInitialiationEffect = createGraphQLEffect(\n\t`query($preferences: [String]!){\n\t\tuserData: GlideDomain_Query {\n\t\t\tuser {\n\t\t\t\tpreferences(name: $preferences) {\n\t\t\t\t\tname\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\troles\n\t\t\t}\n\t\t}\n\t\tsysProps: GlideDomain_Query {\n\t\t\tisManualUpdateAllowed: property(name: \"${SYS_PROP_ALLOW_MANUAL_UPDATE}\") {\n\t\t\t\tname\n\t\t\t\tisDefined\n\t\t\t\tbooleanValue\n\t\t\t}\n\t\t\tminRefreshFrequency: property(name: \"${SYS_PROP_MIN_REFRESH_FREQUENCY}\") {\n\t\t\t\tname\n\t\t\t\tisDefined\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['preferences'],\n\t\tsuccessActionType: RETRIEVE_PREFERENCES_AND_SECURITY_SUCCESS,\n\t\terrorActionType: RETRIEVE_PREFERENCES_AND_SECURITY_FAILURE,\n\t}\n);\n\nconst handleUpdatePreferences = createGraphQLEffect(\n\t`mutation($preferences: [GlideDomain_PreferenceArgument!]!) {\n\t\tGlideDomain_Mutation {\n\t\t  user {\n\t\t\tsetPreferences(preferences: $preferences) {\n\t\t\t  name\n\t\t\t  value\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }`,\n\t{\n\t\tvariableList: ['preferences'],\n\t\tsuccessActionType: UPDATE_USER_PREFERENCES_SUCCESS,\n\t\terrorActionType: UPDATE_USER_PREFERENCES_FAILURE,\n\t}\n);\n\nconst handleDataInitialiationSuccess = ({\n\taction: { payload },\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst userPreferences = get(payload, 'data.userData.user.preferences', []);\n\tconst roles = get(payload, 'data.userData.user.roles', []);\n\tconst security = {\n\t\tisAdmin: roles && roles.indexOf('admin') > -1,\n\t};\n\tconst sysProperties = [\n\t\tget(payload, 'data.sysProps.isManualUpdateAllowed') || {},\n\t\tget(payload, 'data.sysProps.minRefreshFrequency') || {},\n\t];\n\n\tupdateState({ userPreferences, sysProperties, security });\n};\n\nconst handleUpdatePreferencesSuccess = ({\n\taction: { payload },\n\tstate: { userPreferences },\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst updatedValues = get(\n\t\tpayload,\n\t\t'data.GlideDomain_Mutation.user.setPreferences',\n\t\t[]\n\t);\n\n\tconst newPreferenceValues = userPreferences.map(pref => {\n\t\tconst hasUpdated = find(updatedValues, ['name', pref.name]);\n\n\t\treturn hasUpdated ? hasUpdated : pref;\n\t});\n\n\tupdateState({ userPreferences: newPreferenceValues });\n};\n\nexport const userDataSysPropertiesActionHandlers = {\n\t[RETRIEVE_PREFERENCES_AND_SECURITY]: effectProxy(\n\t\thandleDataInitialiationEffect\n\t),\n\t[RETRIEVE_PREFERENCES_AND_SECURITY_SUCCESS]: handleDataInitialiationSuccess,\n\n\t[UPDATE_USER_PREFERENCES]: handleUpdatePreferences,\n\t[UPDATE_USER_PREFERENCES_SUCCESS]: handleUpdatePreferencesSuccess,\n\t[UPDATE_USER_PREFERENCES_FAILURE]: handleUpdatePreferencesSuccess,\n};\n","module.exports = __TECTONIC__$servicenow_now_tooltip;","// @flow\nimport {\n\ttype DataSource,\n\ttype DataSourceInfo,\n} from '../common/types/data-source';\n\nimport { type ChartType } from '../common/types/chart-type';\n\nexport type State = {|\n\tsourceConfigurationOpened: boolean,\n\taddNewDataSource: boolean,\n\teditDataSource: DataSource,\n\teditDataSourceIndex: number,\n\tlabelEditingOnIndex?: number,\n\tlabelEditingValue?: string,\n\tproperties: {\n\t\tchartType: ChartType,\n\t\tdataSources: DataSource[],\n\t\tdataSourceInfos: { [string]: DataSourceInfo },\n\t\texpanded: boolean,\n\t},\n|};\n\nexport const initialState: $Shape<State> = {};\n","// @flow\n\nexport type ContentTreeIdentifier = {|\n\ttype: 'icon' | 'avatar',\n\ticon: string,\n\tuserName: string,\n\timageSrc: string,\n\tariaHidden: string,\n|};\n\nexport type ContentTreeAction = {|\n\ticon?: string,\n\tlabel?: string,\n\tclickActionType?: string,\n\tmouseenterActionType?: string,\n\tmouseleaveActionType?: string,\n|};\n\nexport type ContentTreeHighlightedValue = {|\n\tlabel: string,\n\twidth: string,\n\tstatus: string,\n|};\n\nexport type ContentTreeItem = {\n\tid: string,\n\tlabel?: string,\n\ticon?: string,\n\tchildren?: ContentTreeItem[],\n\tchildrenAvailable?: number,\n\tidentifierProps?: ContentTreeIdentifier,\n\tactionable?: boolean,\n\tactions?: ContentTreeAction[],\n\thighlightedValueProps?: [ContentTreeHighlightedValue],\n\tdisabled?: boolean,\n\ttype?: string,\n};\n\nexport type Properties = {|\n\tid: string,\n\tsourceType: string,\n\tallowedSourceType: string,\n|};\n\nexport type LoadingItem = {\n\tpath?: Array<string>,\n\terror?: boolean,\n\terrorMessage?: string | null,\n};\n\nexport type State = {|\n\titems: ContentTreeItem[],\n\tsearchQuery: string,\n\tselectedItems: Array<Array<string>>,\n\texpandedItems: Array<Array<string>>,\n\tloadingPath: LoadingItem[],\n\tproperties: Properties,\n\tisLoading: boolean,\n\tisLoadingTables: boolean,\n\thasAccessToIndicators: boolean,\n|};\n\nexport const initialState: $Shape<State> = {\n\tsearchQuery: '',\n\titems: [],\n\tselectedItems: [],\n\texpandedItems: [],\n\tloadingPath: [],\n\tisLoading: true,\n\tisLoadingTables: false,\n\thasAccessToIndicators: true,\n};\n","// @flow\nimport { type Uuid } from '../common/types/uuid';\nimport { type IndicatorInfo } from '../common/types/indicator';\n\nexport type State = {|\n\tdisplaySourceDetails: boolean,\n\tindicatorInfo: IndicatorInfo,\n\tbreakdownElementsLoading: {\n\t\t[string]: boolean,\n\t},\n\tproperties: {\n\t\tselectedIndicatorInfo: {\n\t\t\tuuid: Uuid,\n\t\t\tpreviewUuid: Uuid,\n\t\t\tisExpanded: boolean,\n\t\t\tisEditMode: boolean,\n\t\t},\n\t},\n|};\n\nexport const initialState: $Shape<State> = {\n\tdisplaySourceDetails: false,\n\tbreakdownElementsLoading: {},\n};\n","//@flow\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-empty-state', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tillustration: { type: 'string', required: true },\n\t\tforceSize: { type: 'string' },\n\t},\n\tstyles,\n});\n","// @flow\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type DataSourceInfos } from '../common/types/data-source';\nimport { type Option } from '../common/types/option';\nimport { type FieldDefinition } from '../common/types/field';\nimport { STACKED } from '../common/chart-settings';\n\nexport type State = {\n\tproperties: {\n\t\tchartModel: ChartModel,\n\t\tdataSourceInfos: DataSourceInfos,\n\t\tdotWalkFieldDefinition: { [path: string]: FieldDefinition },\n\t\texpanded: boolean,\n\t},\n\texpanded: boolean,\n\tcomponentHost?: any,\n\tpopoverOpened: boolean,\n\tpopoverClosedAt: number,\n\tpopoverTarget?: any,\n\tpopoverContent?: string,\n\tpopoverAction?: string,\n\tdataToApply: {\n\t\t[string]: any,\n\t},\n\tselectInvalid: {\n\t\t[string]: boolean,\n\t},\n\terrorMessages: {\n\t\t[string]: string,\n\t},\n\tlocalOptions: {\n\t\t[string]: Option[],\n\t},\n\tgroupByLabel: string,\n\tstackByLabel: string,\n};\n\nexport const initialState: State = {\n\tproperties: {},\n\tisStacked: STACKED,\n\texpanded: true,\n\tpopoverOpened: false,\n\tpopoverClosedAt: 0,\n\tdataToApply: {},\n\tselectInvalid: {},\n\terrorMessages: {},\n\tlocalOptions: {},\n\tgroupByLabel: '',\n\tstackByLabel: '',\n};\n","// @flow\n\nexport type DotWalkPath = {|\n\tdisplayValue: string,\n\tfield: string,\n\tparent: string,\n|};\n\nexport type State = {|\n\tproperties: {\n\t\tdotWalkPath: string,\n\t\ttableName: string,\n\t\tdisabled: boolean,\n\t\tplaceholder: string,\n\t\tlabel: string,\n\t\terrorMessage: string,\n\t\ttransformMetadata: Function,\n\t},\n\tdotWalkLabel: string,\n\topened: boolean,\n\ttargetRef?: ?HTMLElement,\n|};\n\nexport const initialState: State = {\n\tproperties: {},\n\topened: false,\n\tdotWalkLabel: '',\n};\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __TECTONIC__$servicenow_now_select;","// @flow\n\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type DataSourceInfos } from '../common/types/data-source';\nimport { type Security } from '../common/types/security';\n\nexport type State = {|\n\tproperties: {\n\t\tchartModel: ChartModel,\n\t\texpanded: boolean,\n\t\tdataSourceInfos: DataSourceInfos,\n\t\tsecurity: Security,\n\t\tminRefreshFrequency: string,\n\t},\n\terrorMessages: {\n\t\trefreshFrequency?: string,\n\t},\n|};\n\nexport const initialState: State = {\n\tproperties: {},\n\terrorMessages: {},\n};\n","// @flow\n\n/**\n * Extract the attributes from FieldDefinition.attributes\n * @param {string} attributes\n * @return {object}\n */\nexport const getNamedAttributes = (\n\tattributes: string | void\n): { [key: string]: string } => {\n\tconst namedAttributes = {};\n\n\tif (attributes && attributes.length) {\n\t\tconst pairs = attributes.split(',');\n\n\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\tconst parts = pairs[i].split('=');\n\n\t\t\tif (parts.length === 2) {\n\t\t\t\tnamedAttributes[parts[0]] = parts[1];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn namedAttributes;\n};\n","// @flow\n\nimport { JOURNAL, JOURNAL_INPUT } from './constants';\nimport { type FieldDefinition } from '../../common/types/field';\n\n/**\n * Verify if the field can be sorted\n * Logic extracted from service.dotWalkingFilters.js: canSort\n * @param {FieldDefinition} item\n * @return {boolean}\n */\nexport const canSort = (item: FieldDefinition): boolean => {\n\tif (\n\t\t!item.canSort ||\n\t\titem.name.indexOf('password') > -1 ||\n\t\titem.name === 'sys_id' ||\n\t\titem.internalType === JOURNAL ||\n\t\titem.internalType === JOURNAL_INPUT ||\n\t\titem.isArray\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","// @flow\n\nimport {\n\tINTEGER,\n\tDECIMAL,\n\tNUMERIC,\n\tFLOAT,\n\tDOMAIN_NUMBER,\n\tAUTO_INCREMENT,\n\tPERCENT_COMPLETE,\n} from './constants';\n\n/**\n * Check if the field type is numeric\n * @param {string} type\n * @return {boolean}\n */\nexport const isNumericField = (type: string): boolean => {\n\treturn (\n\t\ttype === INTEGER ||\n\t\ttype === DECIMAL ||\n\t\ttype === NUMERIC ||\n\t\ttype === FLOAT ||\n\t\ttype === DOMAIN_NUMBER ||\n\t\ttype === AUTO_INCREMENT ||\n\t\ttype === PERCENT_COMPLETE\n\t);\n};\n","//@flow\nimport { type FieldDefinitionRequest } from '../../common/types/field';\n\nexport const getFieldDefinitionKey = (\n\trequest: $Shape<FieldDefinitionRequest>\n) => `${request.tableName || ''}:${request.fieldName || ''}`;\n","module.exports = __TECTONIC__lodash_4_17_4[\"isEmpty\"];","// @flow\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport isUndefined from 'lodash/isUndefined';\n\nimport { type Coeffects } from '@servicenow/ui-core';\nimport {\n\ttype PayloadAddDataSource,\n\tSOURCE_TYPE_TABLE,\n\ttype DataSourceInfos,\n} from '../../common/types/data-source';\nimport { type State } from '../state';\nimport { type ChartModel, type ColorConfiguration } from '../model/chart-model';\nimport { convertModelToProps } from '../model/model-converter';\nimport {\n\tglobalActionTypes,\n\tSET_CHART_TYPE,\n\tDATA_SOURCE_INFO_LOADED,\n\tRETRIEVE_DATA_SOURCE_OPTIONS,\n\tSET_SHOW_LEGEND,\n\tSET_SHOW_LEGEND_VALUE,\n\tSET_SHOW_LEGEND_PERCENTAGE,\n\tSET_LEGEND_POSITION,\n\tSET_DATA_LABEL_POSITION,\n\tSET_DATA_LABEL_SETTINGS,\n\tSET_SHOW_DATA_LABEL_AS,\n\tSET_DATA_LABEL_STACKED_VALUE,\n\tSET_OVERLAPPING_LABELS,\n\tSET_SORT_BY,\n\tSET_SINGLE_SCORE_SIZE,\n\tSET_ORDER_BY,\n\tSET_DISPLAY_ZERO,\n\tSET_AXIS_SETTINGS,\n\tSET_Y_AXIS_CONFIG,\n\tSET_MODEL_PROPS,\n\tSET_AUTO_UPDATE,\n\tUPDATE_VISUALIZATION,\n\tUPDATE_USER_PREFERENCES,\n\tREMOVE_DATA_SOURCE,\n\tSET_CONTAINER_STYLE,\n\tSET_CAN_CLICK,\n} from './action-constants';\nimport { SET_CHART_VARIATION } from '../../group-by-selector/constants';\nimport { SET_GROUP_BY } from '../../group-by-selector/constants';\nimport { actionTypesSourceConfiguration } from './../../source-configuration/actions';\nimport {\n\tADDITIONAL_SETTINGS_CHANGE,\n\tSET_XENOLITH_PROPERTIES,\n} from '../../additional-settings/constants';\nimport { FILTERS_SETTINGS_CHANGE } from '../../data-update-settings/constants';\n\nimport {\n\tSET_METRICS,\n\tADD_NEW_AXIS_TO_METRIC,\n} from '../../metric-configuration/constants';\nimport { SET_TREND_BY } from '../../trendby-selector/constants';\nimport {\n\tgetValidChartType,\n\tgetValidDataSources,\n\tgetValidGroupByMax,\n\tgetValidNoOfGroupBasedOn,\n\tgetValidShowOthers,\n\tgetValidIsStacked,\n\tgetValidTrendByFrequency,\n\tgetValidAdditionalSettings,\n\tgetValidLegendOptions,\n\tgetValidXAxisSettings,\n\tgetValidDecimalPrecision,\n\tgetValidRealtime,\n\tgetValidShowRealtimeIndicator,\n\tgetValidChartSettings,\n\tgetValidDisplaySettings,\n\tgetValidMetrics,\n\tgetValidXenolithProperties,\n\tgetValidYAxisConfigs,\n\tgetValidRefreshFrequency,\n} from './model-validators';\nimport { isSameChartFamily } from '../../common/chart-settings';\nimport { isAutoUpdateEnabled } from '../views/auto-update-view';\nimport { AUTO_UPDATE_PREFERENCE } from '../views/view-constants';\nimport { COLOR_TYPE_SINGLE, COLOR_TYPE_PALETTE } from '../views/view-constants';\nimport { CHANGE_DATA_SOURCE_LABEL } from '../../source-list/constants';\nimport { AXIS_ORIENTATION_RIGHT } from '../../common/types/axis';\nimport { getValidAxisId } from '../../helpers/axis';\n\nimport { SET_COLOR_REQUESTED } from '../../color-palette/constants';\n\nimport {\n\tADD_COLOR_RULE,\n\tEDIT_COLOR_RULE,\n\tDELETE_COLOR_RULE,\n} from '../../color-rules/constants';\n\nimport { type ColorRule } from '../../common/types/color-rules';\nimport { updateModelWithGroupByValues } from '../../group-by-selector/helpers/transform-metadata';\nimport { compareValidProperties } from '../../helpers/object-utils';\n\nconst notifyUIB = (newProps, oldProps, dispatch) => {\n\tconst properties = [];\n\n\tfor (let [newPropKey, newPropValue] of Object.entries(newProps)) {\n\t\tlet oldPropValue = oldProps[newPropKey];\n\n\t\tconst isObject = typeof newPropValue === 'object';\n\n\t\tconst compare = isObject\n\t\t\t? !compareValidProperties(newPropValue, oldPropValue)\n\t\t\t: newPropValue !== oldPropValue;\n\n\t\tif (compare) {\n\t\t\tproperties.push({\n\t\t\t\tpropertyId: newPropKey,\n\t\t\t\tvalue: isObject ? JSON.stringify(newPropValue) : newPropValue,\n\t\t\t});\n\t\t}\n\t}\n\n\tif (properties.length) {\n\t\tdispatch(globalActionTypes.propsChange, {\n\t\t\tproperties,\n\t\t});\n\t}\n};\n\nconst dispatchPropsChange = (\n\tcoeffects: Coeffects<State, any>,\n\tchartModel: ChartModel\n) => {\n\tconst newProps = convertModelToProps(chartModel);\n\n\tnotifyUIB(newProps, coeffects.state.properties, coeffects.dispatch);\n};\n\nconst updateChartModel = (coeffects: Coeffects<State, any>) => {\n\tlet chartModel: ChartModel = cloneDeep(coeffects.state.chartModel);\n\n\tswitch (coeffects.action.type) {\n\t\tcase SET_CHART_TYPE: {\n\t\t\tconst newChartType = coeffects.action.payload.value;\n\n\t\t\tif (!isSameChartFamily(chartModel.chartType, newChartType)) {\n\t\t\t\tchartModel.additionalSettings = {};\n\t\t\t}\n\n\t\t\tchartModel.chartType = newChartType;\n\t\t\tchartModel.metrics.forEach(m => {\n\t\t\t\tm.chartType = undefined;\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase SET_GROUP_BY: {\n\t\t\tupdateModelWithGroupByValues(chartModel, coeffects.action.payload);\n\t\t\tbreak;\n\t\t}\n\t\tcase SET_CHART_VARIATION:\n\t\t\tchartModel = {\n\t\t\t\t...chartModel,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase SET_TREND_BY:\n\t\t\tif (coeffects.action.payload.trendByFrequency) {\n\t\t\t\tchartModel.trendByFrequency = coeffects.action.payload.trendByFrequency;\n\t\t\t}\n\n\t\t\tif (coeffects.action.payload.trendByField) {\n\t\t\t\tcoeffects.action.payload.trendByField.forEach((field, index) => {\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tchartModel.metrics[index].trendByField = field;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase SET_SORT_BY:\n\t\tcase SET_ORDER_BY:\n\t\tcase SET_DISPLAY_ZERO:\n\t\tcase SET_SINGLE_SCORE_SIZE:\n\t\t\tchartModel.displaySettings = {\n\t\t\t\t...chartModel.displaySettings,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase SET_COLOR_REQUESTED: {\n\t\t\tconst {\n\t\t\t\tmetricIndex,\n\t\t\t\tcolor: { type, sys_id },\n\t\t\t} = coeffects.action.payload;\n\t\t\tconst color: ColorConfiguration = {\n\t\t\t\ttype,\n\t\t\t};\n\n\t\t\tif (type === COLOR_TYPE_SINGLE && metricIndex !== undefined && sys_id) {\n\t\t\t\tchartModel.metrics[metricIndex].colorSysID = sys_id;\n\t\t\t} else if (type === COLOR_TYPE_PALETTE && sys_id) {\n\t\t\t\tcolor.sys_id = sys_id;\n\t\t\t}\n\n\t\t\tchartModel.chartSettings = {\n\t\t\t\t...chartModel.chartSettings,\n\t\t\t\tcolor,\n\t\t\t};\n\t\t\tbreak;\n\t\t}\n\t\tcase SET_SHOW_LEGEND:\n\t\tcase SET_SHOW_LEGEND_PERCENTAGE:\n\t\tcase SET_LEGEND_POSITION:\n\t\t\tchartModel.legendSettings = {\n\t\t\t\t...chartModel.legendSettings,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase SET_SHOW_LEGEND_VALUE:\n\t\t\tchartModel.legendSettings = {\n\t\t\t\t...chartModel.legendSettings,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t\tshowLegendPercentage: undefined,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase SET_Y_AXIS_CONFIG: {\n\t\t\tconst { axisId, axisConfig } = coeffects.action.payload;\n\t\t\tconst yAxisConfig = chartModel.yAxisConfigs.find(a => a.id === axisId);\n\n\t\t\tif (yAxisConfig) {\n\t\t\t\tObject.assign(yAxisConfig, axisConfig);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase SET_DATA_LABEL_SETTINGS:\n\t\tcase SET_OVERLAPPING_LABELS:\n\t\tcase SET_DATA_LABEL_STACKED_VALUE:\n\t\tcase SET_DATA_LABEL_POSITION:\n\t\tcase SET_SHOW_DATA_LABEL_AS:\n\t\t\tchartModel.dataLabelSettings = {\n\t\t\t\t...chartModel.dataLabelSettings,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase SET_AXIS_SETTINGS:\n\t\t\tchartModel.axisSettings = {\n\t\t\t\t...chartModel.axisSettings,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\n\t\tcase SET_METRICS: {\n\t\t\tchartModel.metrics = coeffects.action.payload;\n\t\t\tbreak;\n\t\t}\n\n\t\tcase SET_CAN_CLICK:\n\t\t\tchartModel.canClick = coeffects.action.payload.canClick;\n\t\t\tbreak;\n\n\t\tcase ADD_NEW_AXIS_TO_METRIC: {\n\t\t\tconst metricIndex = coeffects.action.payload;\n\n\t\t\tif (metricIndex !== undefined) {\n\t\t\t\tconst validAxisId = getValidAxisId(chartModel.yAxisConfigs);\n\n\t\t\t\tchartModel.metrics[metricIndex].axisId = validAxisId;\n\t\t\t\tchartModel.yAxisConfigs.push({\n\t\t\t\t\tid: validAxisId,\n\t\t\t\t\torientation: AXIS_ORIENTATION_RIGHT,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t\tcase SET_XENOLITH_PROPERTIES: {\n\t\t\tchartModel.xenolithProperties = {\n\t\t\t\t...chartModel.xenolithProperties,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\t\t}\n\t\tcase ADDITIONAL_SETTINGS_CHANGE: {\n\t\t\tconst { id, value } = coeffects.action.payload;\n\n\t\t\tchartModel.additionalSettings[id] = value;\n\t\t\tbreak;\n\t\t}\n\t\tcase FILTERS_SETTINGS_CHANGE: {\n\t\t\tcoeffects.action.payload.updates.forEach(({ id, value }) => {\n\t\t\t\tchartModel.filtersSettings[id] = value;\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase CHANGE_DATA_SOURCE_LABEL: {\n\t\t\tconst {\n\t\t\t\tlabelEditingValue,\n\t\t\t\tlabelEditingOnIndex,\n\t\t\t} = coeffects.action.payload;\n\n\t\t\tif (chartModel.dataSources[labelEditingOnIndex]) {\n\t\t\t\tchartModel.dataSources[labelEditingOnIndex].label = labelEditingValue;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t\tcase DATA_SOURCE_INFO_LOADED: {\n\t\t\tconst {\n\t\t\t\tdataSource,\n\t\t\t\taddNewDataSource,\n\t\t\t\tdataSourceIndex,\n\t\t\t} = coeffects.action.payload;\n\n\t\t\tlet dataSources = chartModel.dataSources || [];\n\n\t\t\tconst clonedSource = { ...dataSource };\n\n\t\t\tif (!addNewDataSource) {\n\t\t\t\tconst oldDataSourceId = dataSources[dataSourceIndex].id;\n\n\t\t\t\tif (oldDataSourceId !== dataSource.id) {\n\t\t\t\t\tchartModel.metrics.forEach(m => {\n\t\t\t\t\t\tif (m.dataSource === oldDataSourceId) {\n\t\t\t\t\t\t\tm.label = undefined;\n\t\t\t\t\t\t\tm.dataSource = clonedSource.id;\n\t\t\t\t\t\t\tm.aggregateField = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tdataSources[dataSourceIndex] = clonedSource;\n\t\t\t} else {\n\t\t\t\tdataSources = [...dataSources, clonedSource];\n\t\t\t}\n\n\t\t\tchartModel.dataSources = dataSources;\n\t\t\tbreak;\n\t\t}\n\t\tcase SET_MODEL_PROPS:\n\t\t\tchartModel = {\n\t\t\t\t...chartModel,\n\t\t\t\t...coeffects.action.payload,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase REMOVE_DATA_SOURCE: {\n\t\t\tconst { dataSourceIndex } = coeffects.action.payload;\n\n\t\t\tchartModel.dataSources.splice(dataSourceIndex, 1);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase ADD_COLOR_RULE: {\n\t\t\tconst { colorRule, metricIndex } = coeffects.action.payload;\n\n\t\t\tvar colorRules = chartModel.metrics[metricIndex].colorRules;\n\n\t\t\tif (!colorRules) colorRules = [];\n\n\t\t\tvar index;\n\n\t\t\tfor (\n\t\t\t\tindex = colorRules.length - 1;\n\t\t\t\tindex >= 0 && colorRules[index].order > colorRule.order;\n\t\t\t\tindex--\n\t\t\t);\n\n\t\t\tcolorRules.splice(index + 1, 0, colorRule);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase EDIT_COLOR_RULE: {\n\t\t\tconst {\n\t\t\t\tcolorRuleIndex,\n\t\t\t\tcolorRule,\n\t\t\t\tmetricIndex,\n\t\t\t} = coeffects.action.payload;\n\n\t\t\tlet colorRules = chartModel.metrics[metricIndex].colorRules;\n\n\t\t\tif (colorRules && colorRules.length >= colorRuleIndex) {\n\t\t\t\tlet needsSort = colorRule.order !== colorRules[colorRuleIndex].order;\n\n\t\t\t\tcolorRules[colorRuleIndex] = colorRule;\n\t\t\t\tif (needsSort)\n\t\t\t\t\tcolorRules.sort((a: ColorRule, b: ColorRule) => {\n\t\t\t\t\t\treturn a.order - b.order;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase DELETE_COLOR_RULE: {\n\t\t\tconst { colorRuleIndex, metricIndex } = coeffects.action.payload;\n\n\t\t\tlet colorRule = chartModel.metrics[metricIndex].colorRules;\n\n\t\t\tif (colorRule && colorRule.length >= colorRuleIndex)\n\t\t\t\tcolorRule.splice(colorRuleIndex, 1);\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn chartModel;\n};\n\nexport const createPatchState = (\n\tcoeffects: Coeffects<State, any>,\n\tstate: $Shape<State>\n) => {\n\tconst patchState: $Shape<State> = {};\n\n\tfor (const property in state) {\n\t\tif (!isEqual(coeffects.state[property], state[property])) {\n\t\t\tpatchState[property] = state[property];\n\t\t}\n\t}\n\n\tif (!isAutoUpdateEnabled(coeffects.state)) {\n\t\tpatchState.hasChangesToUpdate =\n\t\t\tcoeffects.state.hasChangesToUpdate || !isUndefined(patchState.chartModel);\n\t}\n\n\treturn patchState;\n};\n\nconst areDataSourcesInvalid = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\treturn (\n\t\tchartModel.dataSources.length < 1 ||\n\t\tchartModel.dataSources.some(ds => !dataSourceInfos[ds.id || ''])\n\t);\n};\n\nexport const getValidChartModelAndOptions = (\n\tchartModel: ChartModel,\n\tstate: State\n) => {\n\tconst { dataSourceInfos, security } = state;\n\n\tif (areDataSourcesInvalid(chartModel, dataSourceInfos)) {\n\t\treturn {};\n\t}\n\n\tchartModel.chartType = getValidChartType(\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\tstate.dotWalkFieldDefinition\n\t);\n\tchartModel.dataSources = getValidDataSources(chartModel, state);\n\tchartModel.metrics = getValidMetrics(\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\tstate.dotWalkFieldDefinition\n\t);\n\tchartModel.yAxisConfigs = getValidYAxisConfigs(\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\tstate.dotWalkFieldDefinition\n\t);\n\n\tchartModel.groupByMax = getValidGroupByMax(chartModel, dataSourceInfos);\n\tchartModel.noOfGroupBasedOn = getValidNoOfGroupBasedOn(chartModel);\n\tchartModel.showOthers = getValidShowOthers(chartModel);\n\n\tchartModel.isStacked = getValidIsStacked(chartModel);\n\n\tchartModel.trendByFrequency = getValidTrendByFrequency(chartModel);\n\n\tchartModel.dataLabelSettings = {\n\t\t...chartModel.dataLabelSettings,\n\t\tdecimalPrecision: getValidDecimalPrecision(\n\t\t\tchartModel,\n\t\t\tdataSourceInfos,\n\t\t\tstate.dotWalkFieldDefinition\n\t\t),\n\t};\n\n\tchartModel.additionalSettings = getValidAdditionalSettings(\n\t\tchartModel,\n\t\tdataSourceInfos\n\t);\n\n\tchartModel.legendSettings = getValidLegendOptions(chartModel);\n\n\tchartModel.axisSettings = getValidXAxisSettings(\n\t\tchartModel,\n\t\tstate.chartModel,\n\t\tdataSourceInfos\n\t);\n\n\tchartModel.realtime = getValidRealtime(chartModel, dataSourceInfos);\n\tchartModel.showRealtimeIndicator = getValidShowRealtimeIndicator(\n\t\tchartModel,\n\t\tdataSourceInfos\n\t);\n\n\tchartModel.chartSettings = getValidChartSettings(\n\t\tchartModel,\n\t\tstate.singleColors,\n\t\tstate.paletteColors\n\t);\n\n\tchartModel.displaySettings = getValidDisplaySettings(\n\t\tchartModel,\n\t\tdataSourceInfos\n\t);\n\n\tchartModel.xenolithProperties = getValidXenolithProperties(\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\tstate.dotWalkFieldDefinition\n\t);\n\n\tchartModel.refreshFrequency = getValidRefreshFrequency(\n\t\tsecurity && security.isAdmin,\n\t\tchartModel,\n\t\tdataSourceInfos\n\t);\n\n\treturn {\n\t\tchartModel,\n\t};\n};\n\nexport const updateAndValidateChartModel = (\n\tcoeffects: Coeffects<State, any>\n) => {\n\tconst { dataSourceInfos } = coeffects.state;\n\n\tconst chartModel = updateChartModel(coeffects);\n\n\tif (areDataSourcesInvalid(chartModel, dataSourceInfos)) {\n\t\treturn;\n\t}\n\n\tconst validChartModelAndOptions = getValidChartModelAndOptions(\n\t\tchartModel,\n\t\tcoeffects.state\n\t);\n\n\tconst patchState = createPatchState(coeffects, validChartModelAndOptions);\n\n\tif (isAutoUpdateEnabled(coeffects.state)) {\n\t\tdispatchPropsChange(coeffects, chartModel);\n\t}\n\n\tif (Object.keys(patchState).length) {\n\t\tcoeffects.updateState(patchState);\n\t}\n};\n\nconst handleAddSource = ({\n\taction,\n\tstate,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, PayloadAddDataSource>) => {\n\tconst { addNewDataSource, dataSource, dataSourceIndex } = action.payload;\n\tconst { dataSources } = state.chartModel;\n\n\tif (\n\t\t!addNewDataSource &&\n\t\tdataSourceIndex !== undefined &&\n\t\tdataSource.sourceType === SOURCE_TYPE_TABLE &&\n\t\tdataSources[dataSourceIndex].tableName !== dataSource.tableName\n\t) {\n\t\tupdateState({\n\t\t\tchartModel: {\n\t\t\t\t...state.chartModel,\n\t\t\t\tgroupByField: undefined,\n\t\t\t\tstackByField: undefined,\n\t\t\t},\n\t\t});\n\t}\n\n\tdispatch(RETRIEVE_DATA_SOURCE_OPTIONS, action.payload);\n};\n\nconst toggleAutoUpdatedEnabled = (coeffects: Coeffects<State, any>) => {\n\tcoeffects.dispatch(UPDATE_USER_PREFERENCES, {\n\t\tpreferences: [\n\t\t\t{\n\t\t\t\tname: AUTO_UPDATE_PREFERENCE,\n\t\t\t\tvalue: String(coeffects.action.payload.value),\n\t\t\t},\n\t\t],\n\t});\n\n\tif (coeffects.state.hasChangesToUpdate) {\n\t\tupdateVisualizationChart(coeffects);\n\t}\n};\n\nconst updateContainerStyle = (coeffects: Coeffects<State, any>) => {\n\tconst {\n\t\taction: { payload },\n\t\tproperties: { elementStyles, elementId },\n\t} = coeffects;\n\n\tconst currentStyles = elementStyles[elementId];\n\n\tcoeffects.dispatch(globalActionTypes.styleChange, {\n\t\tstyles: {\n\t\t\t...currentStyles,\n\t\t\t...payload.styles,\n\t\t},\n\t\telementId,\n\t});\n};\n\nconst updateVisualizationChart = (coeffects: Coeffects<State, any>) => {\n\tif (!coeffects.state.hasChangesToUpdate) {\n\t\treturn;\n\t}\n\n\tcoeffects.updateState({\n\t\thasChangesToUpdate: false,\n\t});\n\n\tdispatchPropsChange(coeffects, coeffects.state.chartModel);\n};\n\nexport const modelActionHandlers = {\n\t[SET_CHART_TYPE]: updateAndValidateChartModel,\n\t[SET_GROUP_BY]: updateAndValidateChartModel,\n\t[SET_TREND_BY]: updateAndValidateChartModel,\n\t[SET_METRICS]: updateAndValidateChartModel,\n\t[ADD_NEW_AXIS_TO_METRIC]: updateAndValidateChartModel,\n\t[ADDITIONAL_SETTINGS_CHANGE]: updateAndValidateChartModel,\n\t[FILTERS_SETTINGS_CHANGE]: updateAndValidateChartModel,\n\t[DATA_SOURCE_INFO_LOADED]: updateAndValidateChartModel,\n\t[CHANGE_DATA_SOURCE_LABEL]: updateAndValidateChartModel,\n\t[actionTypesSourceConfiguration.ADD_SOURCE]: handleAddSource,\n\t[REMOVE_DATA_SOURCE]: updateAndValidateChartModel,\n\t[SET_SHOW_LEGEND]: updateAndValidateChartModel,\n\t[SET_SHOW_LEGEND_VALUE]: updateAndValidateChartModel,\n\t[SET_SHOW_LEGEND_PERCENTAGE]: updateAndValidateChartModel,\n\t[SET_LEGEND_POSITION]: updateAndValidateChartModel,\n\t[SET_DATA_LABEL_POSITION]: updateAndValidateChartModel,\n\t[SET_DATA_LABEL_STACKED_VALUE]: updateAndValidateChartModel,\n\t[SET_DATA_LABEL_SETTINGS]: updateAndValidateChartModel,\n\t[SET_OVERLAPPING_LABELS]: updateAndValidateChartModel,\n\t[SET_CHART_VARIATION]: updateAndValidateChartModel,\n\t[SET_SORT_BY]: updateAndValidateChartModel,\n\t[SET_ORDER_BY]: updateAndValidateChartModel,\n\t[SET_DISPLAY_ZERO]: updateAndValidateChartModel,\n\t[SET_SINGLE_SCORE_SIZE]: updateAndValidateChartModel,\n\t[SET_AXIS_SETTINGS]: updateAndValidateChartModel,\n\t[SET_Y_AXIS_CONFIG]: updateAndValidateChartModel,\n\t[SET_MODEL_PROPS]: updateAndValidateChartModel,\n\t[SET_AUTO_UPDATE]: toggleAutoUpdatedEnabled,\n\t[UPDATE_VISUALIZATION]: updateVisualizationChart,\n\t[SET_CONTAINER_STYLE]: updateContainerStyle,\n\t[SET_COLOR_REQUESTED]: updateAndValidateChartModel,\n\t[SET_XENOLITH_PROPERTIES]: updateAndValidateChartModel,\n\t[SET_CAN_CLICK]: updateAndValidateChartModel,\n\t[ADD_COLOR_RULE]: updateAndValidateChartModel,\n\t[EDIT_COLOR_RULE]: updateAndValidateChartModel,\n\t[DELETE_COLOR_RULE]: updateAndValidateChartModel,\n};\n","export const ADDITIONAL_SETTINGS_CHANGE = 'ADDITIONAL_SETTINGS#CHANGE';\nexport const SET_XENOLITH_PROPERTIES = 'SET_XENOLITH_PROPERTIES';\n","// @flow\nimport { t } from 'sn-translate';\nimport {\n\ttype ChartModel,\n\ttype AdditionalSettingName,\n} from '../visualizations-config-panel/model/chart-model';\nimport {\n\ttype DataSourceInfos,\n\tINDICATOR_TYPE,\n} from '../common/types/data-source';\nimport { SOURCE_TYPE_INDICATOR } from '../common/types/data-source';\n\nimport { CHART_TYPES } from '../common/types/chart-type';\nimport {\n\tAGGREGATE_FUNCTION_COUNT,\n\tAGGREGATE_FUNCTION_SUM,\n} from '../metric-configuration/constants';\nimport {\n\tTIMESERIES_CHART_TYPES,\n\tDONUT_CHART_TYPES,\n} from '../common/chart-settings';\nimport {\n\tisTableMetric,\n\tisIndicatorMetric,\n\tgetMetricDataSourceInfo,\n} from '../helpers/metric';\n\ntype SettingMeta = {\n\tlabel: string,\n\tcheckIsRelevant(model: ChartModel, dataSourceInfos: DataSourceInfos): boolean,\n};\n\nexport const SETTINGS_METADATA: {\n\t[key: AdditionalSettingName]: SettingMeta,\n} = {\n\tinclude_change: {\n\t\tlabel: t('Show change'),\n\t\tcheckIsRelevant: ({ chartType, dataSources }) =>\n\t\t\tchartType === CHART_TYPES.SINGLE_SCORE &&\n\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR,\n\t},\n\tinclude_change_percentage: {\n\t\tlabel: t('Show change %'),\n\t\tcheckIsRelevant: ({ chartType, dataSources }) =>\n\t\t\tchartType === CHART_TYPES.SINGLE_SCORE &&\n\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR,\n\t},\n\tinclude_targets: {\n\t\tlabel: t('Show target'),\n\t\tcheckIsRelevant: ({ chartType, metrics, dataSources }) => {\n\t\t\treturn (\n\t\t\t\t((TIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\t\tmetrics.length === 1 &&\n\t\t\t\t\tdataSources.length === 1) ||\n\t\t\t\t\tchartType === CHART_TYPES.SINGLE_SCORE) &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\t!dataSources[0].groupByField\n\t\t\t);\n\t\t},\n\t},\n\tinclude_gap_percentage: {\n\t\tlabel: t('Show gap %'),\n\t\tcheckIsRelevant: ({ chartType, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tchartType === CHART_TYPES.SINGLE_SCORE &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR\n\t\t\t);\n\t\t},\n\t},\n\tinclude_sparkline: {\n\t\tlabel: t('Show sparkline'),\n\t\tcheckIsRelevant: ({ chartType, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tchartType === CHART_TYPES.SINGLE_SCORE &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR\n\t\t\t);\n\t\t},\n\t},\n\tinclude_forecast: {\n\t\tlabel: t('Show forecast'),\n\t\tcheckIsRelevant: ({ chartType, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR\n\t\t\t);\n\t\t},\n\t},\n\tinclude_forecast_range: {\n\t\tlabel: t('Show forecast range'),\n\t\tcheckIsRelevant: ({ chartType, dataSources, metrics }) => {\n\t\t\treturn (\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\tmetrics.length === 1 &&\n\t\t\t\tdataSources.length === 1 &&\n\t\t\t\t!dataSources[0].groupByField\n\t\t\t);\n\t\t},\n\t},\n\tinclude_trend: {\n\t\tlabel: t('Show trend'),\n\t\tcheckIsRelevant: ({ chartType, metrics, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tmetrics.length === 1 &&\n\t\t\t\tdataSources.length === 1 &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\t!dataSources[0].groupByField\n\t\t\t);\n\t\t},\n\t},\n\tinclude_band: {\n\t\tlabel: t('Show confidence band'),\n\t\tcheckIsRelevant: ({ chartType, metrics, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tmetrics.length === 1 &&\n\t\t\t\tdataSources.length === 1 &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\t!dataSources[0].groupByField\n\t\t\t);\n\t\t},\n\t},\n\tinclude_thresholds: {\n\t\tlabel: t('Show threshold'),\n\t\tcheckIsRelevant: ({ chartType, metrics, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tmetrics.length === 1 &&\n\t\t\t\tdataSources.length === 1 &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\t!dataSources[0].groupByField\n\t\t\t);\n\t\t},\n\t},\n\tinclude_comments: {\n\t\tlabel: t('Show comment'),\n\t\tcheckIsRelevant: ({ chartType, metrics, dataSources }) => {\n\t\t\treturn (\n\t\t\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\t\t\tmetrics.length === 1 &&\n\t\t\t\tdataSources.length === 1 &&\n\t\t\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t\t\t!dataSources[0].groupByField\n\t\t\t);\n\t\t},\n\t},\n\tshowTotal: {\n\t\tlabel: t('Show total value'),\n\t\tcheckIsRelevant: (chartModel, dataSourceInfos) => {\n\t\t\tconst { chartType, dataSources } = chartModel;\n\n\t\t\tif (!DONUT_CHART_TYPES.includes(chartType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//Donut doesn't support multiple metrics\n\t\t\tconst metric = chartModel.metrics[0];\n\n\t\t\tif (\n\t\t\t\tisTableMetric(metric, dataSources) &&\n\t\t\t\t(metric.aggregateFunction === AGGREGATE_FUNCTION_SUM ||\n\t\t\t\t\tmetric.aggregateFunction === AGGREGATE_FUNCTION_COUNT)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst dataSourceInfo = getMetricDataSourceInfo(metric, dataSourceInfos);\n\n\t\t\tif (\n\t\t\t\tisIndicatorMetric(metric, dataSources) &&\n\t\t\t\t((dataSourceInfo.type === INDICATOR_TYPE.AUTOMATED && // Automated\n\t\t\t\t\t(dataSourceInfo.aggregate === 2 || //  sum\n\t\t\t\t\t\tdataSourceInfo.aggregate === 1)) || // Count\n\t\t\t\t\tdataSourceInfo.type === INDICATOR_TYPE.MANUAL ||\n\t\t\t\t\tdataSourceInfo.type === INDICATOR_TYPE.EXTERNAL)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t},\n\tshowMetricLabel: {\n\t\tlabel: t('Show metric label'),\n\t\tcheckIsRelevant: (chartModel, dataSourceInfos) =>\n\t\t\tchartModel.chartType === CHART_TYPES.SINGLE_SCORE ||\n\t\t\tSETTINGS_METADATA.showTotal.checkIsRelevant(chartModel, dataSourceInfos),\n\t},\n};\n\n/**\n * This is the abstract of which settings to show in the addtional settings area\n * Later it's possible to add new boolean settings easily by just adding them to the lists above\n * It's also fine to add a new abstraction for new types of settings other than boolean\n * @param ChartModel chartModel\n */\nexport const getBooleanSettings = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos\n) => {\n\treturn Object.keys(SETTINGS_METADATA).reduce(\n\t\t(availableSettings, key: AdditionalSettingName) => {\n\t\t\tconst meta = SETTINGS_METADATA[key];\n\n\t\t\tif (meta.checkIsRelevant(chartModel, dataSourceInfos)) {\n\t\t\t\tavailableSettings.push({\n\t\t\t\t\tlabel: meta.label,\n\t\t\t\t\tid: key,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn availableSettings;\n\t\t},\n\t\t[]\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport find from 'lodash/find';\n\nimport { type State } from '../state';\n\nimport snabbdom from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\n\nimport {\n\tSET_AUTO_UPDATE,\n\tUPDATE_VISUALIZATION,\n} from '../actions/action-constants';\nimport { SYS_PROP_ALLOW_MANUAL_UPDATE } from '../actions/preferences-security-action-handlers';\n\nimport { AUTO_UPDATE_PREFERENCE } from './view-constants';\n\nimport '@servicenow/now-button';\nimport '../../toggle';\n\nexport const isManualUpdateAllowed = (state: State): boolean => {\n\tconst preference = state.sysProperties.find(\n\t\tx => x && x.name === SYS_PROP_ALLOW_MANUAL_UPDATE\n\t);\n\n\treturn preference && preference.isDefined\n\t\t? preference.booleanValue === true\n\t\t: true;\n};\n\nexport const isAutoUpdateEnabled = (state: State): boolean => {\n\tif (!isManualUpdateAllowed(state)) {\n\t\treturn true;\n\t}\n\n\tconst preference = find(state.userPreferences, [\n\t\t'name',\n\t\tAUTO_UPDATE_PREFERENCE,\n\t]);\n\n\treturn preference ? preference.value !== 'false' : false;\n};\n\nexport default (state: State) => {\n\tif (!isManualUpdateAllowed(state)) {\n\t\treturn null;\n\t}\n\n\tconst autoUpdateEnabled = isAutoUpdateEnabled(state);\n\n\treturn (\n\t\t<div className=\"viz-config-auto-update\">\n\t\t\t<div className=\"viz-config-auto-update__container\">\n\t\t\t\t<viz-config-toggle\n\t\t\t\t\tdisable-margin={true}\n\t\t\t\t\tappend-to-payload={{ payloadActionType: SET_AUTO_UPDATE }}\n\t\t\t\t\tchecked={autoUpdateEnabled}\n\t\t\t\t\tlabel={t('Auto-update')}\n\t\t\t\t/>\n\n\t\t\t\t<now-button\n\t\t\t\t\tlabel={t('update')}\n\t\t\t\t\tdisabled={autoUpdateEnabled || !state.hasChangesToUpdate}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: UPDATE_VISUALIZATION,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"find\"];","// @flow\n// @jsx snabbdom.createElement\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport styles from '../visualizations-config-panel/views/main-view.scss';\n\ncreateCustomElement('viz-config-popover-content', {\n\trenderer: { type: snabbdom },\n\tproperties: {\n\t\tpopOverContent: { type: 'string' },\n\t},\n\tview(popOverContent) {\n\t\tconst popoverText = popOverContent.properties.popOverContent;\n\n\t\treturn <div className=\"viz-config-popover-content\">{popoverText}</div>;\n\t},\n\tstyles,\n});\n","import isEqual from 'lodash/isEqual';\n\n/**\n * Using stringify -> parse means all undefined are removed\n * But we can't just compare strings since stringify messes up the order of properties\n * So we parse it again and compare via lodash/isEqual which compares deeply\n */\nexport function compareValidProperties(obj1, obj2) {\n\tif (!obj1 || !obj2) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\treturn isEqual(\n\t\t\tJSON.parse(JSON.stringify(obj1)),\n\t\t\tJSON.parse(JSON.stringify(obj2))\n\t\t);\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n","module.exports = __TECTONIC__$servicenow_now_loader;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// @flow\n\nimport { type IndicatorInfo } from '../common/types/indicator';\n\nexport type LabelItem = {|\n\tlabel: string,\n\tvalue: any,\n|};\n\nexport type State = {|\n\tisLoading: boolean,\n\tproperties: {\n\t\tindicatorInfo: IndicatorInfo,\n\t\tindicatorProps: any,\n\t},\n|};\n\nexport const initialState: $Shape<State> = {\n\tisLoading: false,\n};\n","module.exports = __TECTONIC__$servicenow_now_message;","module.exports = __TECTONIC__$servicenow_now_illustration;","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { GROUP_BY_FIELD, STACK_BY_FIELD } from '../constants';\n\nimport {\n\ttype DataSource,\n\tSOURCE_TYPE_TABLE,\n} from '../../common/types/data-source';\n\nexport const getMissingGroupByIcon = (dataSources: DataSource[]) => {\n\tif (dataSources.some(ds => !ds.groupByField)) {\n\t\treturn (\n\t\t\t<now-icon\n\t\t\t\tclassName=\"pillar-error-icon\"\n\t\t\t\ticon=\"circle-exclamation-fill\"></now-icon>\n\t\t);\n\t}\n\n\treturn undefined;\n};\n\nexport const extractTableFieldsFromDataToApply = (\n\tdata: {\n\t\t[key: string]: string,\n\t},\n\tdataSources: DataSource[]\n) => {\n\tconst fields = [];\n\n\tfor (const field in data) {\n\t\tconst fieldName = data[field];\n\n\t\t// test to check if it's dot-walk\n\t\tif (!/\\./.test(fieldName)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet dataSourceIndex = -1;\n\n\t\tif (field.indexOf(GROUP_BY_FIELD) === 0) {\n\t\t\tdataSourceIndex = Number(field.replace(GROUP_BY_FIELD, ''));\n\t\t} else if (field.indexOf(STACK_BY_FIELD) === 0) {\n\t\t\tdataSourceIndex = Number(field.replace(STACK_BY_FIELD, ''));\n\t\t} else {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!dataSources[dataSourceIndex]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst tableName = dataSources[dataSourceIndex].tableName;\n\n\t\tif (dataSources[dataSourceIndex].sourceType === SOURCE_TYPE_TABLE) {\n\t\t\tfields.push({ tableName, fieldName });\n\t\t}\n\t}\n\n\treturn fields;\n};\n","//@flow\nimport uniq from 'lodash/uniq';\nimport { t } from 'sn-translate';\n\nexport function formatMultipleLabels(labels: string[]): string {\n\tconst uniqueLabels = uniq(labels);\n\tconst lastLabel = uniqueLabels.pop();\n\n\treturn uniqueLabels.length === 0\n\t\t? lastLabel\n\t\t: uniqueLabels.join(', ') + t(' and ') + lastLabel;\n}\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type State } from './state';\nimport { t } from 'sn-translate';\n\nimport '../dot-walk';\n\nimport { type FieldDefinition } from '../common/types/field';\n\nimport {\n\tisTableMetric,\n\tisAggregateFieldFxCurrency,\n\tisIndicatorMetric,\n} from '../helpers/metric';\n\nimport {\n\tAGGREGATE_FUNCTION_COUNT,\n\tFIELD_AGGREGATE_FUNCTION,\n\tAGGREGATE_CONFIG,\n\tFIELD_AGGREGATE_FIELD,\n\tSET_AGGREGATION_SOURCE,\n\tFIELD_AGGREGATION_SOURCE,\n\tAGGREGATION_SOURCE_CONFIG,\n\tAGGREGATION_SOURCE_REFERENCE,\n\tFIELD_AGGREGATE_INDICATOR,\n\tINDICATOR_EMPTY_STRING_ID_REPLACEMENT,\n} from './constants';\n\nimport {\n\taggregationFunctionFilters,\n\tgetTableReferenceFields,\n} from '../visualizations-config-panel/actions/model-options';\nimport { createTransformMetadataFn } from '../group-by-selector/helpers/transform-metadata';\n\nexport const createFieldDefinitionFilter = (aggregateFunction?: string) => (\n\t_: any,\n\tfield: FieldDefinition\n) => {\n\tconst filter =\n\t\taggregateFunction && aggregationFunctionFilters[aggregateFunction]\n\t\t\t? aggregationFunctionFilters[aggregateFunction]\n\t\t\t: () => aggregateFunction !== AGGREGATE_FUNCTION_COUNT;\n\n\t// $FlowFixMe\n\treturn filter(field);\n};\n\nexport const getAggregateFields = (state: State) => {\n\tconst {\n\t\tdataToApply,\n\t\terrorMessages,\n\t\tproperties: { chartModel, dataSourceInfos, dotWalkFieldDefinition },\n\t\tlocalAggregateOptions,\n\t} = state;\n\n\tconst {\n\t\tdataSource,\n\t\taggregateFunction,\n\t\taggregateField,\n\t\taggregateIndicator,\n\t\taggregationSource,\n\t} = dataToApply;\n\n\tconst dataSourceData = chartModel.dataSources.find(\n\t\tds => ds.id === dataSource\n\t);\n\n\tif (!dataSourceData) {\n\t\treturn undefined;\n\t}\n\n\tif (isTableMetric(dataToApply, chartModel.dataSources)) {\n\t\tconst isCount = aggregateFunction === AGGREGATE_FUNCTION_COUNT;\n\t\tconst referenceFields = getTableReferenceFields(\n\t\t\tchartModel,\n\t\t\tdataSourceInfos[dataSource]\n\t\t);\n\t\tconst noOptions = !localAggregateOptions.length && !referenceFields.length;\n\n\t\tconst dotWalkError =\n\t\t\t!isCount && noOptions ? t('There are no fields available') : null;\n\t\tconst dotWalkMessage = dotWalkError || errorMessages.aggregateField;\n\n\t\tconst transformMetadata = createTransformMetadataFn(\n\t\t\tcreateFieldDefinitionFilter(aggregateFunction)\n\t\t).bind(null, dataSourceData);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"section-prop-size\">\n\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\tlabel={t('Select an aggregation')}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tclassName=\"viz-config-metric-function-dropdown\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: FIELD_AGGREGATE_FUNCTION,\n\t\t\t\t\t\t\tfield: FIELD_AGGREGATE_FUNCTION,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={AGGREGATE_CONFIG}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tplaceholder={t('Select an option')}\n\t\t\t\t\t\tselected-items={aggregateFunction && [aggregateFunction]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Select an aggregation'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<viz-config-dot-walk\n\t\t\t\t\tdisabled={isCount || noOptions}\n\t\t\t\t\tclassName=\"viz-config-metric-field-typeahead\"\n\t\t\t\t\tlabel={t('Field')}\n\t\t\t\t\tplaceholder={isCount ? t('- Entire table -') : t('Select a field')}\n\t\t\t\t\ttableName={dataSourceData.tableName}\n\t\t\t\t\tdotWalkPath={aggregateField}\n\t\t\t\t\ttransform-metadata={transformMetadata}\n\t\t\t\t\terror-message={dotWalkMessage}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tfieldName: FIELD_AGGREGATE_FIELD,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{isAggregateFieldFxCurrency(\n\t\t\t\t\taggregateField,\n\t\t\t\t\tdataSourceData,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tdotWalkFieldDefinition\n\t\t\t\t) ? (\n\t\t\t\t\t<div className=\"section-prop-size\">\n\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\t\tlabel={t('Show value in')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tpayloadActionType: SET_AGGREGATION_SOURCE,\n\t\t\t\t\t\t\t\tfield: FIELD_AGGREGATION_SOURCE,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\titems={AGGREGATION_SOURCE_CONFIG}\n\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\tselected-items={[\n\t\t\t\t\t\t\t\taggregationSource\n\t\t\t\t\t\t\t\t\t? aggregationSource\n\t\t\t\t\t\t\t\t\t: AGGREGATION_SOURCE_REFERENCE,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tplaceholder={t('Select an option')}\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': t('Show value in'),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</Fragment>\n\t\t);\n\t} else if (isIndicatorMetric(dataToApply, chartModel.dataSources)) {\n\t\tconst hasOptionsAvailable =\n\t\t\tlocalAggregateOptions.filter(o => !o.disabled).length > 0;\n\n\t\tconst errorMessage = hasOptionsAvailable\n\t\t\t? errorMessages && errorMessages.aggregateIndicator\n\t\t\t: t('There are no aggregations with same frequency');\n\n\t\tconst aggregateIndicatorSelectMessages = errorMessage\n\t\t\t? [{ status: 'critical', content: errorMessage }]\n\t\t\t: undefined;\n\n\t\treturn (\n\t\t\t<now-select\n\t\t\t\tclassName=\"viz-config-metric-function-typeahead\"\n\t\t\t\tlabel={t('Time series aggregation')}\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tfield: FIELD_AGGREGATE_INDICATOR,\n\t\t\t\t}}\n\t\t\t\titems={localAggregateOptions}\n\t\t\t\tplaceholder={\n\t\t\t\t\thasOptionsAvailable ? t('Select a aggregation') : t('No matches')\n\t\t\t\t}\n\t\t\t\tselected-item={\n\t\t\t\t\thasOptionsAvailable\n\t\t\t\t\t\t? aggregateIndicator || INDICATOR_EMPTY_STRING_ID_REPLACEMENT\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t\tmessages={aggregateIndicatorSelectMessages}\n\t\t\t\tsearch=\"contains\"\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","// @flow\n\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type DataSourceInfos } from '../common/types/data-source';\n\nexport type State = {|\n\tproperties: {\n\t\tchartModel: ChartModel,\n\t\tdataSourceInfos: DataSourceInfos,\n\t\texpanded: boolean,\n\t},\n|};\n\nexport const initialState: State = {\n\tproperties: {},\n};\n","import get from 'lodash/get';\nimport { CHART_TYPES } from '../common/types/chart-type';\n\nexport const isChecked = (id, chartModel) =>\n\t!!get(chartModel, ['additionalSettings', id]);\n\nexport const isDisabled = (id, { chartType, additionalSettings }) => {\n\tswitch (id) {\n\t\tcase 'include_change_percentage':\n\t\t\treturn !additionalSettings.include_change;\n\t\tcase 'include_gap_percentage':\n\t\t\treturn !additionalSettings.include_targets;\n\t\tcase 'showMetricLabel': {\n\t\t\tif (chartType === CHART_TYPES.SINGLE_SCORE) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !additionalSettings.showTotal;\n\t\t}\n\t\tcase 'include_forecast_range': {\n\t\t\treturn !additionalSettings.include_forecast;\n\t\t}\n\t}\n\n\treturn false;\n};\n","// @jsx snabbdom.createElement\nimport get from 'lodash/get';\nimport { t } from 'sn-translate';\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { isChecked } from '../settings-helpers';\nimport { SOURCE_TYPE_TABLE } from '../../common/types/data-source';\n\nexport const SET_METRIC_LABEL_POSITION = 'SET_METRIC_LABEL_POSITION';\n\nexport function MetricLabelPosition(item, state) {\n\tconst { chartModel } = state.properties;\n\n\tconst value = get(chartModel, 'xenolithProperties.headingPosition');\n\n\tconst options = [\n\t\t{ id: 'top', label: t('Above') },\n\t\t{ id: 'bottom', label: t('Below') },\n\t];\n\n\tif (\n\t\t!isChecked(item.id, chartModel) ||\n\t\tchartModel.dataSources[0].sourceType !== SOURCE_TYPE_TABLE\n\t) {\n\t\treturn;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div>\n\t\t\t\t<now-label-value-inline label={t('Position')} />\n\t\t\t</div>\n\t\t\t<now-dropdown\n\t\t\t\tid=\"metric-label-position\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: SET_METRIC_LABEL_POSITION,\n\t\t\t\t}}\n\t\t\t\titems={options}\n\t\t\t\tselect=\"single\"\n\t\t\t\tselected-items={[value]}\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"tertiary\"\n\t\t\t\tconfig-aria={{\n\t\t\t\t\t'aria-label': t('Metric label positioning'),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","// @flow\nimport { type DataSourceInfos } from '../common/types/data-source';\nimport { type AccordionState } from '../visualizations-config-panel/state';\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type Option } from '../common/types/option';\nimport { type FieldDefinitions } from '../common/types/field';\n\nexport type State = {\n\tproperties: {\n\t\tchartModel: ChartModel,\n\t\tdataSourceInfos: DataSourceInfos,\n\t\taccordionState: AccordionState,\n\t\tfieldDefinitions: FieldDefinitions,\n\t\tsingleColors: Option[],\n\t\tpaletteColors: Option[],\n\t},\n};\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import './visualizations-config-panel';\n\n/**\n * As there are no known good reliable way in runtime to get version of a component (kudos to TECTONIC team)\n * this is a custom manually crafted version timestamp like in prehistoric times.\n */\ntry {\n\t// eslint-disable-next-line global-require,import/no-unresolved\n\tconst versionInfo = require('../../tools/current-version-info');\n\n\twindow.PAR_COMPONENTS_INFO = window.PAR_COMPONENTS_INFO || {};\n\twindow.PAR_COMPONENTS_INFO.VizConfigPanel = versionInfo;\n} catch (ex) {\n\t/** Suppress module not found error in case version file was not generated during the build */\n}\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nimport { initialState } from './state';\nimport { lifeCycleActionHandlers } from './actions/lifecycle-action-handlers';\nimport { uiActionHandlers } from './actions/ui-action-handlers';\nimport { modelActionHandlers } from './actions/model-action-handlers';\nimport { dataSourceInfoActionHandlers } from './actions/data-source-info-handlers';\nimport { userDataSysPropertiesActionHandlers } from './actions/preferences-security-action-handlers';\nimport { colorPaletteActionHandlers } from './actions/color-palette-action-handlers';\nimport { fieldsActionHandlers } from './actions/fields-action-handlers';\nimport { MainView } from './views/main-view';\nimport styles from './styles.scss';\n\ncreateCustomElement('now-uxf-visualization-config-panel', {\n\trenderer: { type: snabbdom },\n\tview: MainView,\n\tstyles,\n\tinitialState,\n\ttransformState(state) {\n\t\tconst loadingValues = Object.values(state.isLoadingDataSource);\n\t\tconst isLoadingDataSource = loadingValues.some(Boolean);\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tisLoadingDataSource,\n\t\t};\n\t},\n\tproperties: {\n\t\tlabel: {\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t},\n\t\tchartType: {\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t},\n\t\tdataConfigurations: {\n\t\t\tschema: {\n\t\t\t\ttype: 'array',\n\t\t\t},\n\t\t},\n\t\tstyleConfigurations: {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t},\n\t\tisRealtime: {\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\tshowRealtimeIndicator: {\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\tvariant: {\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t},\n\t\tborder: {\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\trefreshInterval: {\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t},\n\t\trefreshFrequency: {\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t},\n\t\tfollowFilters: {\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\thideFiltersInfo: {\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\tfilterConfigurations: {\n\t\t\tschema: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t},\n\t\thideHeader: {\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\tpageMetadata: {\n\t\t\tdefault: '@uxf/pageMetadata',\n\t\t},\n\t\telementId: {\n\t\t\tdefault: '@ui-state/selectedElementId',\n\t\t},\n\t\telementStyles: {\n\t\t\tdefault: '@uxf/elementStyles',\n\t\t},\n\t},\n\tactions: {\n\t\t'DEVX_INPUT#INPUT_CHANGED': {\n\t\t\tprivate: true,\n\t\t},\n\t\t'DEVX_INPUT#INPUT_BLUR': {\n\t\t\tprivate: true,\n\t\t},\n\t\t'NOW_TABS#SELECTED_ITEM_SET': {\n\t\t\tprivate: true,\n\t\t},\n\t},\n\tactionHandlers: {\n\t\t...lifeCycleActionHandlers,\n\t\t...uiActionHandlers,\n\t\t...modelActionHandlers,\n\t\t...dataSourceInfoActionHandlers,\n\t\t...userDataSysPropertiesActionHandlers,\n\t\t...colorPaletteActionHandlers,\n\t\t...fieldsActionHandlers,\n\t},\n});\n","// @flow\nimport { type FieldDefinition } from '../../common/types/field';\nimport { REFERENCE, DOMAIN_ID, CHOICE, DOCUMENT_ID } from './constants';\n\n/**\n * Verify if the field can be used for count distinct aggregation\n * Logic extracted from service.dotWalkingFilters.js: distinctFilter\n * @param {FieldDefinition} item\n * @return {boolean}\n */\nexport const canCountDistinct = (item: FieldDefinition): boolean => {\n\tif (\n\t\titem.internalType === REFERENCE ||\n\t\titem.internalType === DOMAIN_ID ||\n\t\titem.internalType === CHOICE ||\n\t\titem.internalType === DOCUMENT_ID ||\n\t\titem.name === 'sys_id'\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","// @flow\nimport { type FieldDefinition } from '../../common/types/field';\nimport { VARIABLE, VARIABLES, VARIABLE_CHOICE, GLIDE_LIST } from './constants';\n\nimport { isDateField } from './is-date-field';\nimport { getNamedAttributes } from './get-named-attributes';\nimport { canSort } from './can-sort';\n\n/**\n * Verify if the field can be used for group by\n * Logic extracted from service.dotWalkingFilters.js: groupByFilter\n * @param {FieldDefinition} item\n * @return {boolean}\n */\nexport const canGroup = (item: FieldDefinition): boolean => {\n\tif (\n\t\titem.internalType === VARIABLE ||\n\t\titem.internalType === VARIABLES ||\n\t\titem.baseType === VARIABLE\n\t) {\n\t\t// For chart types pivot, list, box and trendbox should return false, but we don't support them now\n\t\treturn true;\n\t}\n\n\tif (item.type === VARIABLE_CHOICE) {\n\t\treturn true;\n\t}\n\n\tif (isDateField(item.internalType)) {\n\t\treturn true;\n\t}\n\n\tconst namedAttributes = getNamedAttributes(item.attributes);\n\n\tif (namedAttributes.can_group === 'true') {\n\t\treturn true;\n\t}\n\n\tif (item.isEdgeEncrypted && item.canMatch) return true;\n\n\tif (item.extendedTable) return true;\n\n\tif (item.isMultiText || item.internalType === GLIDE_LIST || !canSort(item)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","// @flow\n\nimport { type FieldDefinition } from '../../common/types/field';\nimport { isDateField } from './is-date-field';\n\n/**\n * Verify if the field can be used to TrendBy\n * Logic extracted and simplified from service.dotWalkingFilters.js: trendByFilter\n * @param {FieldDefinition} item\n * @return {boolean}\n */\nexport const canTrendBy = (item: FieldDefinition): boolean => {\n\treturn isDateField(item.internalType);\n};\n","// @flow\nimport { type FieldDefinition } from '../../common/types/field';\nimport { GLIDE_DURATION, TIMER, CURRENCY, CURRENCY2, PRICE } from './constants';\nimport { isNumericField } from './is-numeric-field';\n\n/**\n * Verify if the field can be used for sum aggregation\n * Logic extracted from service.dotWalkingFilters.js: sumFilter\n * @param {FieldDefinition} item\n * @return {boolean}\n */\nexport const canSum = (item: FieldDefinition): boolean => {\n\tif (\n\t\tisNumericField(item.internalType) ||\n\t\titem.internalType === GLIDE_DURATION ||\n\t\titem.internalType === TIMER ||\n\t\titem.internalType === CURRENCY ||\n\t\titem.internalType === PRICE ||\n\t\titem.internalType === CURRENCY2\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","//@flow\nimport { type ChartModel } from '../../visualizations-config-panel/model/chart-model';\nimport { type FieldDefinitionRequest } from '../../common/types/field';\n\nimport { getFieldDefinitionKey } from './get-field-definition-key';\nimport { getMetricDataSource } from '../metric';\n\n/**\n * This function returns all fields that are dot-walk\n * and need extra metadata information to be loaded\n * @param {ChartModel} chartModel\n */\nexport function getFieldMetadataRequest(chartModel: ChartModel) {\n\tconst cache = [];\n\tconst fields = [];\n\n\tconst isDotWalk = field => /\\./.test(field);\n\n\tconst pushToFields = (field: $Shape<FieldDefinitionRequest>) => {\n\t\tconst key = getFieldDefinitionKey(field);\n\n\t\tif (!~cache.indexOf(key)) {\n\t\t\tcache.push(key);\n\t\t\tfields.push(field);\n\t\t}\n\t};\n\n\tchartModel.dataSources.forEach(ds => {\n\t\tif (ds.groupByField && isDotWalk(ds.groupByField)) {\n\t\t\tpushToFields({\n\t\t\t\ttableName: ds.tableName,\n\t\t\t\tfieldName: ds.groupByField,\n\t\t\t});\n\t\t}\n\n\t\tif (ds.stackByField && isDotWalk(ds.stackByField)) {\n\t\t\tpushToFields({\n\t\t\t\ttableName: ds.tableName,\n\t\t\t\tfieldName: ds.stackByField,\n\t\t\t});\n\t\t}\n\t});\n\n\tchartModel.metrics.forEach(metric => {\n\t\tif (metric.aggregateField && isDotWalk(metric.aggregateField)) {\n\t\t\tconst ds = getMetricDataSource(metric, chartModel.dataSources);\n\n\t\t\tpushToFields({\n\t\t\t\ttableName: ds.tableName,\n\t\t\t\tfieldName: metric.aggregateField,\n\t\t\t});\n\t\t}\n\n\t\tif (metric.trendByField && isDotWalk(metric.trendByField)) {\n\t\t\tconst ds = getMetricDataSource(metric, chartModel.dataSources);\n\n\t\t\tpushToFields({\n\t\t\t\ttableName: ds.tableName,\n\t\t\t\tfieldName: metric.trendByField,\n\t\t\t});\n\t\t}\n\t});\n\n\treturn fields;\n}\n","module.exports = __TECTONIC__lodash_4_17_4[\"intersection\"];","//@flow\n\nimport { type Metric } from '../../common/types/metric';\nimport {\n\ttype DataSource,\n\ttype DataSourceInfos,\n} from '../../common/types/data-source';\nimport { type FieldDefinitions } from '../../common/types/field';\nimport {\n\tisTableMetric,\n\tisIndicatorMetric,\n\tgetMetricDataSourceInfo,\n\tgetMetricDataSource,\n} from './metric-datasource';\nimport {\n\tAGGREGATE_FUNCTION_COUNT,\n\tAGGREGATE_FUNCTION_DISTINCT,\n} from '../../metric-configuration/constants';\nimport { getFieldDefinition } from '../field';\n\nexport const TABLE_METRIC_UNIT = {\n\tCOUNT: 'COUNT',\n\tDURATION: 'DURATION',\n\tFX_CURRENCY: 'FX_CURRENCY',\n\tCURRENCY: 'CURRENCY',\n\tDECIMAL: 'DECIMAL',\n};\n\nexport const getMetricUnit = (\n\tmetric: Metric,\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tfieldDefinitions: FieldDefinitions\n) => {\n\tconst dataSourceInfo = getMetricDataSourceInfo(metric, dataSourceInfos);\n\n\tif (isTableMetric(metric, dataSources)) {\n\t\tconst { aggregateFunction, aggregateField } = metric;\n\n\t\tif (\n\t\t\t!aggregateFunction ||\n\t\t\taggregateFunction === AGGREGATE_FUNCTION_COUNT ||\n\t\t\taggregateFunction === AGGREGATE_FUNCTION_DISTINCT\n\t\t) {\n\t\t\treturn TABLE_METRIC_UNIT.COUNT;\n\t\t}\n\n\t\tconst fieldDefinition = getFieldDefinition(\n\t\t\taggregateField || '',\n\t\t\tdataSourceInfo,\n\t\t\tgetMetricDataSource(metric, dataSources),\n\t\t\tfieldDefinitions\n\t\t);\n\n\t\treturn fieldDefinition && fieldDefinition.unit;\n\t} else if (isIndicatorMetric(metric, dataSources)) {\n\t\treturn dataSourceInfo.unitId;\n\t}\n\n\treturn undefined;\n};\n","// @flow\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { type State } from '../state';\nimport { convertPropsToModel } from '../model/model-converter';\nimport { type ChartProps } from '../model/chart-props';\n\nimport { VIZ_CONFIG_PREFERENCES } from '../views/view-constants';\nimport {\n\tRETRIEVE_PREFERENCES_AND_SECURITY,\n\tLOAD_ALL_COLOR_OPTIONS,\n\tRETRIEVE_MULTI_DATA_SOURCE_OPTIONS,\n} from './action-constants';\n\nimport { SOURCE_TYPE_TABLE } from '../../common/types/data-source';\n\nimport { getValidChartModelAndOptions } from './model-action-handlers';\nimport { isSameDataSource } from '../../helpers/data-source';\nimport { compareValidProperties } from '../../helpers/object-utils';\n\nexport const getChartProps = (properties: any): ChartProps => {\n\treturn {\n\t\tchartType: properties.chartType,\n\t\tdataConfigurations: properties.dataConfigurations,\n\t\tstyleConfigurations: properties.styleConfigurations,\n\t\tvariant: properties.variant,\n\t\tborder: properties.border,\n\t\tlabel: properties.label,\n\t\tisRealtime: properties.isRealtime,\n\t\tshowRealtimeIndicator: properties.showRealtimeIndicator,\n\t\trefreshInterval: properties.refreshInterval,\n\t\trefreshFrequency: properties.refreshFrequency,\n\t\tkpiDetailsNavigation: properties.kpiDetailsNavigation,\n\t\tfollowFilters: properties.followFilters,\n\t\thideHeader: properties.hideHeader,\n\t\thideFiltersInfo: properties.hideFiltersInfo,\n\t};\n};\n\nexport const lifeCycleActionHandlers = {\n\t[actionTypes.COMPONENT_BOOTSTRAPPED]: (coeffects: Coeffects<State, void>) => {\n\t\tconst chartProps = getChartProps(coeffects.state.properties);\n\t\tconst chartModel = convertPropsToModel(chartProps, coeffects.state);\n\n\t\tcoeffects.updateState({ chartModel });\n\t\tcoeffects.dispatch(RETRIEVE_PREFERENCES_AND_SECURITY, {\n\t\t\tpreferences: VIZ_CONFIG_PREFERENCES,\n\t\t});\n\n\t\tcoeffects.dispatch(LOAD_ALL_COLOR_OPTIONS);\n\n\t\tcoeffects.dispatch(RETRIEVE_MULTI_DATA_SOURCE_OPTIONS, {\n\t\t\tdataSources: chartModel.dataSources,\n\t\t});\n\t},\n\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: {\n\t\tmodifier: { name: 'debounce', delay: 100 },\n\t\teffect: (coeffects: Coeffects<State, any>) => {\n\t\t\tconst chartProps = getChartProps(coeffects.state.properties);\n\n\t\t\tlet chartModel = convertPropsToModel(chartProps, coeffects.state);\n\n\t\t\t// During the model conversion of SOURCE_TYPE_TABLE_SOURCE the tableName is removed, the code below restore it\n\t\t\tchartModel.dataSources.forEach(ds => {\n\t\t\t\tif (\n\t\t\t\t\tds.sourceType === SOURCE_TYPE_TABLE &&\n\t\t\t\t\tds.predefinedFilterId &&\n\t\t\t\t\t!ds.tableName\n\t\t\t\t) {\n\t\t\t\t\tconst oldDataSource = coeffects.state.chartModel.dataSources.find(\n\t\t\t\t\t\toldDs => oldDs.predefinedFilterId === ds.predefinedFilterId\n\t\t\t\t\t);\n\n\t\t\t\t\tds.tableName = oldDataSource && oldDataSource.tableName;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!compareValidProperties(coeffects.state.chartModel, chartModel)) {\n\t\t\t\tconst differentDataSources = chartModel.dataSources.map(\n\t\t\t\t\t(ds, index) =>\n\t\t\t\t\t\t!isSameDataSource(coeffects.state.chartModel.dataSources[index], ds)\n\t\t\t\t);\n\n\t\t\t\tif (differentDataSources.filter(Boolean).length > 0) {\n\t\t\t\t\tcoeffects.dispatch(RETRIEVE_MULTI_DATA_SOURCE_OPTIONS, {\n\t\t\t\t\t\tdataSources: chartModel.dataSources,\n\t\t\t\t\t\tdataSourcesNeedsLoad: differentDataSources,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst validatedModel = getValidChartModelAndOptions(\n\t\t\t\t\t\tchartModel,\n\t\t\t\t\t\tcoeffects.state\n\t\t\t\t\t);\n\n\t\t\t\t\tchartModel = validatedModel.chartModel\n\t\t\t\t\t\t? validatedModel.chartModel\n\t\t\t\t\t\t: chartModel;\n\t\t\t\t}\n\n\t\t\t\tcoeffects.updateState({ chartModel, hasChangesToUpdate: false });\n\t\t\t}\n\t\t},\n\t},\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"pick\"];","module.exports = __TECTONIC__moment_2_24_0;","module.exports = __TECTONIC__lodash_4_17_4[\"omitBy\"];","module.exports = __TECTONIC__lodash_4_17_4[\"isUndefined\"];","//@flow\nimport {\n\ttype DataSource,\n\ttype PayloadAddDataSource,\n} from '../common/types/data-source';\n\nimport { actionTypesSourceConfiguration } from './actions';\nimport { shallowDataSourceCompare } from '../helpers/data-source';\n\nexport const SELECT_DATASOURCE = 'SELECT_DATASOURCE';\n\nexport type PayloadSelectDataSource = {\n\tdisplayLabel: string,\n\tdataSource: DataSource,\n};\n\nexport function createSelectDatasourceAction(\n\tdisplayLabel: string,\n\tdataSource: $Shape<DataSource>\n) {\n\tconst payload: PayloadSelectDataSource = {\n\t\tdisplayLabel,\n\t\tdataSource,\n\t};\n\n\treturn [SELECT_DATASOURCE, payload];\n}\n\nexport function createAddDatasourceAction(\n\tmetadata: $Shape<PayloadAddDataSource>,\n\tdataSource: $Shape<DataSource>\n) {\n\tif (\n\t\tmetadata.dataSource &&\n\t\tshallowDataSourceCompare(dataSource, metadata.dataSource)\n\t) {\n\t\tdataSource.id = metadata.dataSource.id;\n\t\tdataSource.label = metadata.dataSource.label;\n\t\tdataSource.groupByField = metadata.dataSource.groupByField;\n\t\tdataSource.stackByField = metadata.dataSource.stackByField;\n\t}\n\n\tconst payload: PayloadAddDataSource = {\n\t\t...metadata,\n\t\tdataSource,\n\t};\n\n\treturn [actionTypesSourceConfiguration.ADD_SOURCE, payload];\n}\n\nexport const UPDATE_RECENT_INDICATOR = 'UPDATE_RECENT_INDICATOR';\nexport type PayloadUpdateRecentIndicator = {\n\tsysID: string,\n};\nexport function createUpdateRecentIndicatorAction(sysID: string) {\n\tconst payload: PayloadUpdateRecentIndicator = { sysID };\n\n\treturn [UPDATE_RECENT_INDICATOR, payload];\n}\n\nexport const UPDATE_RECENT_TABLE = 'UPDATE_RECENT_TABLE';\nexport type PayloadUpdateRecentTable = {\n\tname: string,\n};\nexport function createUpdateRecentTableAction(\n\tpayload: PayloadUpdateRecentTable\n) {\n\treturn [UPDATE_RECENT_TABLE, payload];\n}\n","// @flow\nimport { type Coeffects } from '@servicenow/ui-core';\n\ntype Effect = {\n\teffect(): any,\n\targs: any[],\n};\n\n/**\n This function wraps seismic effect into a function call\n which is useful when you want to mock your effect function.\n This proxy is needed because Seismic internally makes a copy of the pointer to\n original effect function making impossible to mock it later.\n*/\nexport const effectProxy = (effect: Effect) => (\n\tcoeffects: Coeffects<any, any>\n) => effect.effect(...effect.args, coeffects);\n","//@flow\n\n/**\n Helper function to help perform conditional rendering with snabbdom implementation of JSX\n The problem with snabbdom that is that it gives an error while rendering this:\n ```\n\t<div>\n\t\t{false}\n\t</div>\n ```\n\n This is a problem because in the React-world we have popular conditional-rendering pattern:\n ```\n\t<div>\n\t\t{!state.isFilterLoading && (\n\t\t\t<AwesomeFilterComponent filter={state.filter} />\n\t\t)}\n\t</div>\n ```\n\n In harsh snabbdom reality using this pattern will lead to a nasty error during rendering.\n We can work-around and use ternary operator:\n ```\n \t<div>\n\t\t{!state.isFilterLoading ? (\n\t\t\t<AwesomeFilterComponent filter={state.filter} />\n\t\t) : (\n\t\t\tundefined\n\t\t)}\n\t</div>\n ```\n\n Or we can use magic jsxif and write it like this:\n ```\n \t<div>\n\t\t{jsxif(!state.isFilterLoading) && (\n\t\t\t<AwesomeFilterComponent filter={state.filter} />\n\t\t)}\n\t</div>\n```\n */\nexport function jsxif<T>(x: T) {\n\treturn x || undefined;\n}\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-button';\nimport { type State } from './state';\nimport { type Coeffects } from '@servicenow/ui-core';\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport './../common/popover-content';\n\nexport default (state: State, { dispatch }: Coeffects<State, any>) => {\n\tconst {\n\t\tproperties: { checked, label, disabled, disableMargin, infoTooltip },\n\t} = state;\n\n\treturn (\n\t\t<div\n\t\t\tclass={{\n\t\t\t\t'viz-config-toggle': true,\n\t\t\t\t'viz-config-toggle--no-margin': disableMargin,\n\t\t\t}}>\n\t\t\t<label\n\t\t\t\ton-click={e => {\n\t\t\t\t\tif (e.composedPath()[0].type !== 'button' && !disabled) {\n\t\t\t\t\t\tdispatch('VIZ_CONFIG_TOGGLE#CHECKED_SET', { value: !checked });\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t<now-toggle\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tappend-to-payload={{ payloadActionType: 'VIZ_CONFIG_TOGGLE' }}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tmanaged-checked\n\t\t\t\t\tconfig-aria={{ 'aria-label': label }}\n\t\t\t\t/>\n\t\t\t\t<span>{label}</span>\n\t\t\t</label>\n\n\t\t\t{infoTooltip ? (\n\t\t\t\t<now-popover interactionType=\"none\">\n\t\t\t\t\t<now-icon slot=\"trigger\" icon=\"info-circle-outline\" />\n\t\t\t\t\t<viz-config-popover-content\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tpopOverContent={infoTooltip}\n\t\t\t\t\t/>\n\t\t\t\t</now-popover>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./main-view.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}now-label-value-inline{display:block}.main-loading-container{padding:2.5rem}.main-section{padding-bottom:.75rem}.chart-type-view{margin-top:.5rem;margin-bottom:.5rem}.chart-type-view label{font-size:.75rem;margin-right:.5rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.chart-type-view now-dropdown{width:100%}.viz-config-white-bg{background-color:RGB(var(--now-color--neutral-0,255,255,255))}.viz-config-title-label{padding:.5rem}.legend-position{margin-top:.75rem}.legend-position now-dropdown{margin-top:.5rem}.chart-variation label,.sort-by-container label{font-size:.75rem;margin-right:.5rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.chart-variation now-dropdown,.sort-by-container now-dropdown{margin-top:.5rem}.chart-variation{margin-bottom:1.0625rem}.sort-by-container{margin-bottom:1.3125rem;display:flex;flex-direction:row}.sort-by-container .sort-by-column{display:flex;flex-direction:column}.sort-by-container .sort-by-column now-dropdown{margin-top:.5rem;width:10.6875rem}.sort-by-container .order-by-column{display:flex;flex-direction:column;padding-inline-start:1.5rem}.sort-by-container .order-by-column .order-by-buttons{margin-top:.5rem}.score-size-container label{font-size:.75rem;margin-right:.5rem;color:RGB(var(--now-color--neutral-12,66,80,81));display:block;margin-bottom:.5rem}.tabs-container,now-accordion{margin:0 -.75rem}.stacked-label-value-container now-dropdown{width:8.125rem}.data-label-position-container now-dropdown{margin-top:.5rem;width:7.5rem}.data-label-position-container,.stacked-label-value-container{margin-bottom:1rem;display:flex;flex-direction:column}.show-data-label-as-container now-dropdown,.stacked-label-value-container now-dropdown{margin-top:.5rem}.section-label-dropdown{margin-bottom:.75rem}.section-label-dropdown now-label-value-inline{display:block;margin-bottom:.5rem}viz-config-empty-state{display:block;padding:2.5rem;margin-top:2rem}.viz-config-popover-content{padding:.3125rem;width:12.5rem;font-size:.75rem}.viz-config-popover-content .popover-container{padding:.3125rem}.viz-config-popover-content .popover-container .popover-title{display:flex;align-items:center;padding-bottom:.1875rem}.viz-config-popover-content .popover-container .popover-title .popover-title-label{padding-left:.375rem}.viz-config-popover-content .popover-container .popover-title.popover-conditions,.viz-config-popover-content .popover-container .popover-title.popover-tables{padding-top:1.25rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.viz-config-toggle{display:flex;align-items:center;justify-content:flex-start;color:RGB(var(--now-color--neutral-18,22,27,28));font-size:1rem;margin-bottom:.75rem}.viz-config-toggle--no-margin{margin-bottom:0}.viz-config-toggle now-toggle{padding-inline-end:.5rem}.viz-config-toggle now-popover{cursor:pointer;margin-left:.625rem}\", \"\"]);\n\n// exports\n","module.exports = __TECTONIC__lodash_4_17_4[\"mapKeys\"];","module.exports = __TECTONIC__lodash_4_17_4[\"camelCase\"];","// @flow\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from '../state';\n\nimport {\n\tSET_CHART_TYPE,\n\tCHART_TYPE_SELECTED,\n\tSET_SHOW_LEGEND,\n\tSET_SHOW_LEGEND_VALUE,\n\tSET_SHOW_LEGEND_PERCENTAGE,\n\tSET_LEGEND_POSITION,\n\tSET_DATA_LABEL_POSITION,\n\tSET_DATA_LABEL_SETTINGS,\n\tSET_SHOW_DATA_LABEL_AS,\n\tSET_DATA_LABEL_STACKED_VALUE,\n\tSET_OVERLAPPING_LABELS,\n\tSET_SORT_BY,\n\tSET_ORDER_BY,\n\tSET_AXIS_SETTINGS,\n\tSET_Y_AXIS_POSITION_VALUE,\n\tX_AXIS_NAME,\n\tY_AXIS_NAME,\n\tAXIS_RANGE_FROM,\n\tAXIS_RANGE_TO,\n\tX_AXIS_TIME_TYPE_INPUT,\n\tX_AXIS_TIME_INPUT,\n\tX_AXIS_SHOW_MAX,\n\tSET_BORDER,\n\tSET_VARIANT,\n\tSET_REALTIME,\n\tSET_REALTIME_INDICATOR,\n\tSET_MODEL_PROPS,\n\tSET_DECIMAL_PRECISION,\n\tSET_AUTO_UPDATE,\n\tUPDATE_VISUALIZATION,\n\tSET_DISPLAY_ZERO,\n\tSET_HIDE_HEADER,\n\tSET_Y_AXIS_CONFIG,\n\tSET_SINGLE_SCORE_SIZE,\n\tSET_DATA_SOURCE_ERROR,\n\tSET_CONTAINER_STYLE,\n\tSET_CAN_CLICK,\n} from './action-constants';\nimport {\n\tINPUT_BLUR,\n\tDEFAULT_AXIS_RANGE,\n\tDEFAULT_DECIMAL_PRECISION,\n} from '../views/view-constants';\n\nexport const uiActionHandlers = {\n\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': (coeffects: Coeffects<State, any>) => {\n\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\tcase X_AXIS_TIME_TYPE_INPUT:\n\t\t\t\tcoeffects.dispatch(SET_AXIS_SETTINGS, {\n\t\t\t\t\tdateRangeType: coeffects.action.payload.value[0],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase CHART_TYPE_SELECTED: {\n\t\t\t\tconst newChartType = coeffects.action.payload.value[0];\n\n\t\t\t\tcoeffects.dispatch(SET_CHART_TYPE, {\n\t\t\t\t\tvalue: newChartType,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_LEGEND_POSITION: {\n\t\t\t\tconst legendPosition = coeffects.action.payload.value[0];\n\n\t\t\t\tcoeffects.dispatch(SET_LEGEND_POSITION, {\n\t\t\t\t\tlegendPosition,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_SHOW_DATA_LABEL_AS: {\n\t\t\t\tcoeffects.dispatch(SET_DATA_LABEL_SETTINGS, {\n\t\t\t\t\tshowDataLabelAs: coeffects.action.payload.value[0],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_DATA_LABEL_POSITION: {\n\t\t\t\tconst dataLabelPosition = coeffects.action.payload.value[0];\n\n\t\t\t\tcoeffects.dispatch(SET_DATA_LABEL_POSITION, {\n\t\t\t\t\tdataLabelPosition,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_DATA_LABEL_STACKED_VALUE: {\n\t\t\t\tconst stackedValue = coeffects.action.payload.value[0];\n\n\t\t\t\tcoeffects.dispatch(SET_DATA_LABEL_POSITION, {\n\t\t\t\t\tstackedValue,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_Y_AXIS_POSITION_VALUE: {\n\t\t\t\tcoeffects.dispatch(SET_Y_AXIS_CONFIG, {\n\t\t\t\t\taxisId: coeffects.action.payload.axisId,\n\t\t\t\t\taxisConfig: {\n\t\t\t\t\t\torientation: coeffects.action.payload.value[0],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_SORT_BY: {\n\t\t\t\tcoeffects.action.stopPropagation();\n\t\t\t\tcoeffects.dispatch(SET_SORT_BY, {\n\t\t\t\t\tsortByField: coeffects.action.payload.value[0],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_SINGLE_SCORE_SIZE: {\n\t\t\t\tcoeffects.action.stopPropagation();\n\t\t\t\tcoeffects.dispatch(SET_SINGLE_SCORE_SIZE, {\n\t\t\t\t\tscoreSize: coeffects.action.payload.value[0],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_VARIANT: {\n\t\t\t\tconst {\n\t\t\t\t\taction: { payload },\n\t\t\t\t} = coeffects;\n\n\t\t\t\tlet variant = coeffects.action.payload.value[0];\n\n\t\t\t\tif (payload.shouldReplaceStyle) {\n\t\t\t\t\tcoeffects.dispatch(SET_CONTAINER_STYLE, {\n\t\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\theight: payload.items[0].value,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tvariant = payload.items[0].id === 'auto' ? 'AUTO' : 'CUSTOM';\n\t\t\t\t}\n\n\t\t\t\tcoeffects.dispatch(SET_MODEL_PROPS, {\n\t\t\t\t\tvariant,\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\t'DEVX_INPUT#INPUT_CHANGED': {\n\t\tmodifier: {\n\t\t\tname: 'debounce',\n\t\t\tdelay: 300,\n\t\t},\n\t\teffect: (coeffects: Coeffects<State, any>) => {\n\t\t\tcoeffects.action.stopPropagation();\n\t\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\t\tcase X_AXIS_TIME_INPUT: {\n\t\t\t\t\tconst value = coeffects.action.payload.value.replace(/[^0-9.]/g, '');\n\n\t\t\t\t\tif (value === '' || Number.isNaN(Number(value))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcoeffects.dispatch(SET_AXIS_SETTINGS, {\n\t\t\t\t\t\tdateRangeAmount: Number(value),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t'NOW_TABS#SELECTED_ITEM_SET': (coeffects: Coeffects<State, any>) => {\n\t\tcoeffects.updateState({\n\t\t\tselectedTab: coeffects.action.payload.value,\n\t\t});\n\t},\n\t'VIZ_CONFIG_TOGGLE#CHECKED_SET': (coeffects: Coeffects<State, any>) => {\n\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\tcase SET_BORDER: {\n\t\t\t\tcoeffects.dispatch(SET_MODEL_PROPS, {\n\t\t\t\t\tborder: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_REALTIME: {\n\t\t\t\tcoeffects.dispatch(SET_MODEL_PROPS, {\n\t\t\t\t\trealtime: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_REALTIME_INDICATOR: {\n\t\t\t\tcoeffects.dispatch(SET_MODEL_PROPS, {\n\t\t\t\t\tshowRealtimeIndicator: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_SHOW_LEGEND: {\n\t\t\t\tcoeffects.dispatch(SET_SHOW_LEGEND, {\n\t\t\t\t\tshowLegend: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_SHOW_LEGEND_VALUE: {\n\t\t\t\tcoeffects.dispatch(SET_SHOW_LEGEND_VALUE, {\n\t\t\t\t\tshowLegendValue: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_SHOW_LEGEND_PERCENTAGE: {\n\t\t\t\tcoeffects.dispatch(SET_SHOW_LEGEND_PERCENTAGE, {\n\t\t\t\t\tshowLegendPercentage: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_DATA_LABEL_SETTINGS: {\n\t\t\t\tcoeffects.dispatch(SET_DATA_LABEL_SETTINGS, {\n\t\t\t\t\tshowDataLabels: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_OVERLAPPING_LABELS: {\n\t\t\t\tcoeffects.dispatch(SET_OVERLAPPING_LABELS, {\n\t\t\t\t\tshowOverlappingLabels: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase X_AXIS_SHOW_MAX: {\n\t\t\t\tcoeffects.dispatch(SET_AXIS_SETTINGS, {\n\t\t\t\t\tdateRangeShowMax: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_AUTO_UPDATE: {\n\t\t\t\tcoeffects.dispatch(SET_AUTO_UPDATE, coeffects.action.payload);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_DISPLAY_ZERO: {\n\t\t\t\tcoeffects.dispatch(SET_DISPLAY_ZERO, {\n\t\t\t\t\tdisplayZero: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_HIDE_HEADER: {\n\t\t\t\tcoeffects.dispatch(SET_MODEL_PROPS, {\n\t\t\t\t\thideHeader: !coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_CAN_CLICK: {\n\t\t\t\tcoeffects.dispatch(SET_CAN_CLICK, {\n\t\t\t\t\tcanClick: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\t'DEVX_INPUT#INPUT_BLUR': (coeffects: Coeffects<State, any>) => {\n\t\tcoeffects.action.stopPropagation();\n\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\tcase X_AXIS_NAME: {\n\t\t\t\tcoeffects.dispatch(SET_AXIS_SETTINGS, {\n\t\t\t\t\txAxisName: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Y_AXIS_NAME: {\n\t\t\t\tcoeffects.dispatch(SET_Y_AXIS_CONFIG, {\n\t\t\t\t\taxisId: coeffects.action.payload.axisId,\n\t\t\t\t\taxisConfig: {\n\t\t\t\t\t\ttitle: coeffects.action.payload.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase X_AXIS_TIME_INPUT: {\n\t\t\t\tif (!coeffects.host.shadowRoot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst devxInput = coeffects.host.shadowRoot.querySelector(\n\t\t\t\t\t'.viz-config-x-axis-time-amount'\n\t\t\t\t);\n\n\t\t\t\tconst input: any =\n\t\t\t\t\tdevxInput && devxInput.shadowRoot\n\t\t\t\t\t\t? devxInput.shadowRoot.querySelector('input')\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\tif (\n\t\t\t\t\tinput &&\n\t\t\t\t\t(input.value === '' || Number.isNaN(Number(input.value)))\n\t\t\t\t) {\n\t\t\t\t\tinput.value =\n\t\t\t\t\t\tcoeffects.state.chartModel.axisSettings &&\n\t\t\t\t\t\tcoeffects.state.chartModel.axisSettings.dateRangeAmount;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\t[INPUT_BLUR]: (coeffects: Coeffects<State, any>) => {\n\t\tconst elementRef = coeffects.action.payload.ref;\n\n\t\tlet value = elementRef.value;\n\n\t\tswitch (coeffects.action.payload.type) {\n\t\t\tcase AXIS_RANGE_FROM: {\n\t\t\t\tif (value === '' || Number.isNaN(value)) {\n\t\t\t\t\tvalue = DEFAULT_AXIS_RANGE;\n\t\t\t\t\telementRef.value = null;\n\t\t\t\t}\n\n\t\t\t\tcoeffects.dispatch(SET_Y_AXIS_CONFIG, {\n\t\t\t\t\taxisId: coeffects.action.payload.axisId,\n\t\t\t\t\taxisConfig: {\n\t\t\t\t\t\taxisRangeFrom: value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase AXIS_RANGE_TO: {\n\t\t\t\tif (value === '' || Number.isNaN(value)) {\n\t\t\t\t\tvalue = DEFAULT_AXIS_RANGE;\n\t\t\t\t\telementRef.value = null;\n\t\t\t\t}\n\n\t\t\t\tcoeffects.dispatch(SET_Y_AXIS_CONFIG, {\n\t\t\t\t\taxisId: coeffects.action.payload.axisId,\n\t\t\t\t\taxisConfig: {\n\t\t\t\t\t\taxisRangeTo: value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SET_DECIMAL_PRECISION: {\n\t\t\t\tif (value === '') {\n\t\t\t\t\tvalue = DEFAULT_DECIMAL_PRECISION;\n\t\t\t\t\telementRef.value = DEFAULT_DECIMAL_PRECISION;\n\t\t\t\t}\n\n\t\t\t\tcoeffects.dispatch(SET_DATA_LABEL_SETTINGS, {\n\t\t\t\t\tdecimalPrecision: Number(value),\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\t'NOW_BUTTON#CLICKED': ({ action, dispatch }: Coeffects<State, any>) => {\n\t\tswitch (action.payload.payloadActionType) {\n\t\t\tcase UPDATE_VISUALIZATION:\n\t\t\t\tdispatch(UPDATE_VISUALIZATION, {});\n\t\t\t\tbreak;\n\t\t}\n\t},\n\t'NOW_BUTTON_STATEFUL#SELECTED_SET': (coeffects: Coeffects<State, any>) => {\n\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\tcase SET_ORDER_BY: {\n\t\t\t\tcoeffects.action.stopPropagation();\n\t\t\t\tcoeffects.dispatch(SET_ORDER_BY, {\n\t\t\t\t\torderByField: coeffects.action.payload.value,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\t'NOW_ACCORDION_ITEM#EXPANDED_SET': (coeffects: Coeffects<State, any>) => {\n\t\tconst { accordionItem, value } = coeffects.action.payload;\n\n\t\tif (accordionItem) {\n\t\t\tcoeffects.action.stopPropagation();\n\t\t\tcoeffects.updateState({\n\t\t\t\toperation: 'set',\n\t\t\t\tpath: `accordionState.${accordionItem}`,\n\t\t\t\tvalue: value,\n\t\t\t});\n\t\t}\n\t},\n\n\t'NOW_INPUT#VALUE_SET': (coeffects: Coeffects<State, any>) => {\n\t\tconst { name, value } = coeffects.action.payload;\n\n\t\tcoeffects.action.stopPropagation();\n\t\tif (name) {\n\t\t\tcoeffects.dispatch(SET_MODEL_PROPS, {\n\t\t\t\t[name]: value,\n\t\t\t});\n\t\t}\n\t},\n\n\t[SET_DATA_SOURCE_ERROR]: ({\n\t\tupdateState,\n\t\taction,\n\t}: Coeffects<State, { result: string }>) => {\n\t\tupdateState({\n\t\t\tisLoadingDataSource: {},\n\t\t\tisInitializingDotWalkFields: false,\n\t\t\tdataSourceError: action.payload.result,\n\t\t});\n\t},\n};\n","// @flow\nimport get from 'lodash/get';\n\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from '../state';\nimport {\n\ttype DataSource,\n\ttype PayloadAddDataSource,\n} from '../../common/types/data-source';\n\nimport {\n\ttype DataSourceInfo,\n\tSOURCE_TYPE_INDICATOR,\n\tSOURCE_TYPE_TABLE,\n} from '../../common/types/data-source';\nimport { type Aggregate, type Breakdown } from '../../common/types/indicator';\nimport {\n\tRETRIEVE_DATA_SOURCE_OPTIONS,\n\tRETRIEVE_MULTI_DATA_SOURCE_OPTIONS,\n\tRETRIEVE_TABLE_INFO_REQUESTED,\n\tRETRIEVE_TABLE_INFO_SUCCESS,\n\tRETRIEVE_TABLE_INFO_FAILURE,\n\tRETRIEVE_INDICATOR_INFO_REQUEST,\n\tRETRIEVE_INDICATOR_INFO_SUCCESS,\n\tRETRIEVE_INDICATOR_INFO_FAILURE,\n\tDATA_SOURCE_INFO_LOADED,\n\tRETRIEVE_SOURCE_TABLE_INFO_REQUESTED,\n\tVERIFY_DATA_SOURCE_INFO_IS_LOADED,\n\tRETRIEVE_FIELD_METADATA,\n\tUNREADABLE_INDICATOR,\n\tSET_DATA_SOURCE_ERROR,\n\tINVALID_INDICATOR,\n\tUNREPORTABLE_TABLE,\n\tINVALID_TABLE,\n} from './action-constants';\nimport { FREQUENCY_OPTIONS } from '../views/view-constants';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { stringifyUuid } from '../../helpers/uuid/stringify-uuid';\nimport { effectProxy } from '../../helpers/seismic';\nimport {\n\tgetUniqueDataSourceLabel,\n\tgetDataSourceUniqueId,\n} from '../../helpers/data-source';\nimport { getFieldMetadataRequest } from '../../helpers/field';\n\ntype PayloadMultiDataSourceLoad = {\n\tdataSources: DataSource[],\n\tdataSourcesNeedsLoad: boolean[],\n};\n\nconst retrieveMultipleDataSourceOptions = (\n\tcoeffects: Coeffects<State, PayloadMultiDataSourceLoad>\n) => {\n\tconst { dataSources, dataSourcesNeedsLoad } = coeffects.action.payload;\n\n\t/**\n\t * dataSourcesNeedsLoad Is a map saying which index can be loaded (true) or canT (false)\n\t * If there is no map, means all the data source should load info\n\t */\n\tconst needsLoad = dataSourcesNeedsLoad || dataSources.map(() => true);\n\n\tif (!needsLoad.length) {\n\t\t/**\n\t\t * If it's the first load  and there && empty state\n\t\t * Just go directly to handle the dot walk initialization\n\t\t */\n\t\treturn coeffects.dispatch(RETRIEVE_FIELD_METADATA, {});\n\t}\n\n\tdataSources.forEach(\n\t\t(dataSource, dataSourceIndex) =>\n\t\t\tneedsLoad[dataSourceIndex] &&\n\t\t\tcoeffects.dispatch(RETRIEVE_DATA_SOURCE_OPTIONS, {\n\t\t\t\tdataSource,\n\t\t\t\tdataSourceIndex,\n\t\t\t})\n\t);\n};\n\nconst retrieveDataSourceOptions = (\n\tcoeffects: Coeffects<State, PayloadAddDataSource>\n) => {\n\tconst { dataSource, dataSourceIndex } = coeffects.action.payload;\n\n\tconst { sourceType, tableName, uuid, predefinedFilterId } = dataSource;\n\n\tconst loadingIndex: number =\n\t\tdataSourceIndex !== undefined\n\t\t\t? dataSourceIndex\n\t\t\t: coeffects.state.chartModel.dataSources.length;\n\n\t/**\n\t * Single source for setting the isLoading data source = true\n\t * Otherwise it can be messed up because of the cache and call ordering\n\t * AVOID SETTING isLoading in another place. Firing this action should be enough\n\t */\n\tconst setDataSourceIsLoading = () =>\n\t\tcoeffects.updateState({\n\t\t\toperation: 'merge',\n\t\t\tvalue: {\n\t\t\t\tisLoadingDataSource: { [loadingIndex]: true },\n\t\t\t\tdataSourceInfo: undefined,\n\t\t\t},\n\t\t});\n\n\tswitch (sourceType) {\n\t\tcase SOURCE_TYPE_TABLE: {\n\t\t\tif (predefinedFilterId) {\n\t\t\t\tsetDataSourceIsLoading();\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\tRETRIEVE_SOURCE_TABLE_INFO_REQUESTED,\n\t\t\t\t\t{ sourceId: predefinedFilterId },\n\t\t\t\t\tcoeffects.action.payload\n\t\t\t\t);\n\t\t\t} else if (tableName) {\n\t\t\t\tsetDataSourceIsLoading();\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\tRETRIEVE_TABLE_INFO_REQUESTED,\n\t\t\t\t\t{ tableName },\n\t\t\t\t\tcoeffects.action.payload\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t\tcase SOURCE_TYPE_INDICATOR: {\n\t\t\tif (uuid && uuid.indicator) {\n\t\t\t\tsetDataSourceIsLoading();\n\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\tRETRIEVE_INDICATOR_INFO_REQUEST,\n\t\t\t\t\t{\n\t\t\t\t\t\tindicator: uuid.indicator,\n\t\t\t\t\t\tuuid: stringifyUuid(uuid),\n\t\t\t\t\t},\n\t\t\t\t\tcoeffects.action.payload\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tcoeffects.updateState({\n\t\t\t\toperation: 'merge',\n\t\t\t\tvalue: {\n\t\t\t\t\tisLoadingDataSource: { [loadingIndex]: true },\n\t\t\t\t\tdataSourceInfo: undefined,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n\nconst setDataSource = (\n\tcoeffects: Coeffects<State, any>,\n\t{ dataSource, addNewDataSource, dataSourceIndex }: PayloadAddDataSource,\n\tdataSourceInfo: DataSourceInfo\n) => {\n\tconst dataSourceDisplayLabel =\n\t\tdataSource.sourceType === SOURCE_TYPE_TABLE &&\n\t\tdataSourceInfo.displayLabel === ''\n\t\t\t? dataSource.tableName\n\t\t\t: dataSourceInfo.displayLabel;\n\n\tconst label = getUniqueDataSourceLabel(\n\t\tdataSourceDisplayLabel,\n\t\tcoeffects.state.chartModel.dataSources\n\t);\n\n\tconst newId = getDataSourceUniqueId(\n\t\tdataSource,\n\t\tcoeffects.state.chartModel.dataSources\n\t);\n\n\tlet index;\n\n\tif (dataSourceIndex !== undefined) {\n\t\tindex = dataSourceIndex;\n\t} else if (addNewDataSource && coeffects.state.chartModel.dataSources) {\n\t\tindex = coeffects.state.chartModel.dataSources.length;\n\t} else {\n\t\tindex = 0;\n\t}\n\n\t// dataConfiguration didn't have label in Paris, so metric.dataSource is empty and needs to be fixed\n\tconst metricWithoutDataSource = coeffects.state.chartModel.metrics.findIndex(\n\t\tm => !m.dataSource\n\t);\n\n\tif (!dataSource.id && metricWithoutDataSource >= 0) {\n\t\tcoeffects.updateState({\n\t\t\toperation: 'set',\n\t\t\tpath: `chartModel.metrics[${metricWithoutDataSource}].dataSource`,\n\t\t\tvalue: newId,\n\t\t\tshouldRender: false,\n\t\t});\n\t}\n\n\tif (!dataSource.label) {\n\t\tdataSource.label = label;\n\t}\n\n\t// If \"!dataSource.id\", means it's an old data that didn't have the label/id\n\t// Or the user is editing an existent DS but we can't reach the ID\n\tif (addNewDataSource || !dataSource.id) {\n\t\tdataSource.id = newId;\n\t}\n\n\tcoeffects.updateState({\n\t\toperation: 'merge',\n\t\tpath: 'dataSourceInfos',\n\t\tvalue: { [(dataSource.id: string)]: dataSourceInfo },\n\t\tshouldRender: false, // This should be removed/true when we remove dataSourceS and dataSourceInfoS\n\t});\n\n\t/**\n\t * Needs to be setted apart because\n\t * we need to keep the other \"loaded\" info unchanged\n\t */\n\tcoeffects.updateState({\n\t\toperation: 'set',\n\t\tpath: `isLoadingDataSource[${index}]`,\n\t\tvalue: false,\n\t});\n\n\tcoeffects.dispatch(VERIFY_DATA_SOURCE_INFO_IS_LOADED, {\n\t\tdataSource,\n\t\tdataSourceIndex,\n\t\taddNewDataSource,\n\t});\n};\n\nconst verifyDataSourceInfosIsLoaded = (coeffects: Coeffects<State, any>) => {\n\tconst loading = Object.values(coeffects.state.isLoadingDataSource);\n\n\tif (loading.every(isLoading => !isLoading)) {\n\t\tif (!coeffects.state.isInitializingDotWalkFields) {\n\t\t\treturn coeffects.dispatch(\n\t\t\t\tDATA_SOURCE_INFO_LOADED,\n\t\t\t\tcoeffects.action.payload\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * In the first load, metadata needs to load before validating the model\n\t\t * DATA_SOURCE_INFO_LOADED is the action that triggers validation\n\t\t * So we need to retrieve field metadata first\n\t\t */\n\t\tcoeffects.dispatch(\n\t\t\tRETRIEVE_FIELD_METADATA,\n\t\t\t{ fields: getFieldMetadataRequest(coeffects.state.chartModel) },\n\t\t\t{\n\t\t\t\tactionName: DATA_SOURCE_INFO_LOADED,\n\t\t\t\tpayload: coeffects.action.payload,\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport const handleRetrieveFieldsRequestedEffect = createGraphQLEffect(\n\t`query($tableName: String!){\n\t\tAppPARConfig_Query {\n\t\t\ttableDetails(name: $tableName) {\n\t\t\t\tlabel\n\t\t\t\tisDatabaseView\n\t\t\t\tfields {\n\t\t\t\t\tlabel\n\t\t\t\t\tname\n\t\t\t\t\ttype\n\t\t\t\t\tinternalType\n\t\t\t\t\treference\n\t\t\t\t\tcanCountDistinct\n\t\t\t\t\tcanGroupBy\n\t\t\t\t\tcanSum\n\t\t\t\t\tcanTrendBy\n\t\t\t\t\tisRange\n\t\t\t\t\tunit\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['tableName'],\n\t\tsuccessActionType: RETRIEVE_TABLE_INFO_SUCCESS,\n\t\terrorActionType: RETRIEVE_TABLE_INFO_FAILURE,\n\t}\n);\n\nconst handleRetrieveFieldsBySourceRequested = createGraphQLEffect(\n\t`query($sourceId: String!){\n\t\tAppPARConfig_Query {\n\t\t\ttableDetails(sourceID: $sourceId) {\n\t\t\t\tlabel\n\t\t\t\tname\n\t\t\t\tisDatabaseView\n\t\t\t\tfields {\n\t\t\t\t\tlabel\n\t\t\t\t\tname\n\t\t\t\t\ttype\n\t\t\t\t\tinternalType\n\t\t\t\t\treference\n\t\t\t\t\tcanCountDistinct\n\t\t\t\t\tcanGroupBy\n\t\t\t\t\tcanSum\n\t\t\t\t\tcanTrendBy\n\t\t\t\t\tisRange\n\t\t\t\t\tunit\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['sourceId'],\n\t\tsuccessActionType: RETRIEVE_TABLE_INFO_SUCCESS,\n\t\terrorActionType: RETRIEVE_TABLE_INFO_FAILURE,\n\t}\n);\n\nconst handleRetrieveTableInfoSuccess = (coeffects: Coeffects<State, any>) => {\n\tconst data = get(\n\t\tcoeffects.action.payload,\n\t\t'data.AppPARConfig_Query.tableDetails',\n\t\t{ fields: [], label: '' }\n\t);\n\n\tif (data.result === UNREPORTABLE_TABLE || data.result === INVALID_TABLE) {\n\t\tcoeffects.dispatch(SET_DATA_SOURCE_ERROR, {\n\t\t\tresult: data.result,\n\t\t});\n\t}\n\n\tconst dataSourceInfo: DataSourceInfo = {\n\t\tdisplayLabel: data.label,\n\t\ttableFields: data.fields,\n\t\tisDatabaseView: data.isDatabaseView,\n\t};\n\n\tconst metadata: PayloadAddDataSource = get(coeffects, 'action.meta');\n\n\tif (data.name) {\n\t\tmetadata.dataSource.tableName = data.name;\n\t}\n\n\tsetDataSource(coeffects, metadata, dataSourceInfo);\n};\n\nconst handleRetrieveFieldsFailure = () => {\n\t//TODO: use some good error-handling strategy\n};\n\nexport const handleRetrieveIndicatorInfoRequested = createGraphQLEffect(\n\t`query($indicator: String!, $uuid: String!){\n\t\tAppPARConfig_Query {\n\t\t\tbreakdowns(uuid: $indicator) {\n\t\t\t\tvalues {\n\t\t\t\t\tsysId: sysID\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t\tindicatorDetails(sysID: $indicator) {\n\t\t\t\tname\n\t\t\t\tfrequency {\n\t\t\t\t\tvalue\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t\ttype {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\taggregates {\n\t\t\t\t\tsysId: sysID\n\t\t\t\t\tname\n\t\t\t\t\tfrequencyValue\n\t\t\t\t}\n\t\t\t\tscripted\n\t\t\t\taggregate {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t\tunit {\n\t\t\t\t\tsysID\n\t\t\t\t}\n\t\t\t}\n\t\t\tisUUIDRealtime(uuid: $uuid) {\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['indicator', 'uuid'],\n\t\tsuccessActionType: RETRIEVE_INDICATOR_INFO_SUCCESS,\n\t\terrorActionType: RETRIEVE_INDICATOR_INFO_FAILURE,\n\t}\n);\n\nconst handleRetrieveIndicatorInfoSuccess = (\n\tcoeffects: Coeffects<State, any>\n) => {\n\tconst indicatorDetails = get(\n\t\tcoeffects.action.payload,\n\t\t'data.AppPARConfig_Query.indicatorDetails'\n\t);\n\n\tif (\n\t\tindicatorDetails.result === UNREADABLE_INDICATOR ||\n\t\tindicatorDetails.result === INVALID_INDICATOR\n\t) {\n\t\tcoeffects.dispatch(SET_DATA_SOURCE_ERROR, {\n\t\t\tresult: indicatorDetails.result,\n\t\t});\n\t}\n\n\tconst displayLabel = get(indicatorDetails, 'name', '');\n\tconst aggregates: Aggregate[] = get(indicatorDetails, 'aggregates', []);\n\tconst frequency = get(indicatorDetails, 'frequency.label', '');\n\tconst scripted = get(indicatorDetails, 'scripted', false);\n\tconst frequencyValue = Number(\n\t\tget(indicatorDetails, 'frequency.value', FREQUENCY_OPTIONS.DAILY)\n\t);\n\tconst type = get(indicatorDetails, 'type.value', '');\n\tconst aggregate = get(indicatorDetails, 'aggregate.value', '');\n\tconst unitId = get(indicatorDetails, 'unit.sysID', '');\n\n\tconst breakdowns: Breakdown[] = get(\n\t\tcoeffects.action.payload,\n\t\t'data.AppPARConfig_Query.breakdowns.values',\n\t\t[]\n\t);\n\n\tconst isIndicatorRealtime: boolean = get(\n\t\tcoeffects.action.payload,\n\t\t'data.AppPARConfig_Query.isUUIDRealtime.value',\n\t\tfalse\n\t);\n\n\tconst dataSourceInfo: DataSourceInfo = {\n\t\tdisplayLabel,\n\t\tbreakdowns,\n\t\taggregates,\n\t\tfrequency,\n\t\tscripted,\n\t\tfrequencyValue,\n\t\ttype,\n\t\taggregate,\n\t\tisIndicatorRealtime,\n\t\tunitId,\n\t};\n\n\tconst metadata: PayloadAddDataSource = get(coeffects, 'action.meta');\n\n\tsetDataSource(coeffects, metadata, dataSourceInfo);\n};\n\nconst handleRetrieveIndicatorInfoFailure = () => {\n\t//TODO: use some good error-handling strategy\n};\n\nexport const dataSourceInfoActionHandlers = {\n\t[RETRIEVE_DATA_SOURCE_OPTIONS]: retrieveDataSourceOptions,\n\t[RETRIEVE_MULTI_DATA_SOURCE_OPTIONS]: retrieveMultipleDataSourceOptions,\n\t[RETRIEVE_TABLE_INFO_REQUESTED]: effectProxy(\n\t\thandleRetrieveFieldsRequestedEffect\n\t),\n\t[RETRIEVE_SOURCE_TABLE_INFO_REQUESTED]: handleRetrieveFieldsBySourceRequested,\n\t[RETRIEVE_TABLE_INFO_SUCCESS]: handleRetrieveTableInfoSuccess,\n\t[RETRIEVE_TABLE_INFO_FAILURE]: handleRetrieveFieldsFailure,\n\t[RETRIEVE_INDICATOR_INFO_REQUEST]: effectProxy(\n\t\thandleRetrieveIndicatorInfoRequested\n\t),\n\t[RETRIEVE_INDICATOR_INFO_SUCCESS]: handleRetrieveIndicatorInfoSuccess,\n\t[RETRIEVE_INDICATOR_INFO_FAILURE]: handleRetrieveIndicatorInfoFailure,\n\t[VERIFY_DATA_SOURCE_INFO_IS_LOADED]: verifyDataSourceInfosIsLoaded,\n};\n","// @flow\n\nimport { type Uuid } from '../../common/types/uuid';\nimport * as constants from './constants';\n\nexport const stringifyUuid = (uuidModel?: Uuid): string => {\n\tif (!uuidModel) {\n\t\treturn '';\n\t}\n\n\tconst uuid = [];\n\n\tuuid.push(uuidModel.indicator);\n\tif (uuidModel.breakdowns)\n\t\tfor (const br of uuidModel.breakdowns) {\n\t\t\tif (br.sysId) {\n\t\t\t\tuuid.push(br.sysId);\n\t\t\t\tif (br.elementSysIds && br.elementSysIds.length > 0)\n\t\t\t\t\tuuid.push(br.elementSysIds[0]);\n\t\t\t}\n\t\t}\n\n\tif (uuidModel.aggregate) {\n\t\tuuid.push(uuidModel.aggregate);\n\t}\n\n\tconst strUuid = uuid.join(constants.UUID_SEPARATOR);\n\n\tif (uuidModel.domain) {\n\t\treturn strUuid + constants.UUID_DOMAIN_SEPARATOR + uuidModel.domain;\n\t}\n\n\treturn strUuid;\n};\n","// @flow\nexport const UUID_DOMAIN_SEPARATOR = ';';\nexport const UUID_SEPARATOR = ':';\nexport const UUID_POS_DOMAIN = 1;\nexport const UUID_POS_BREAKDOWN = 1;\nexport const UUID_POS_ELEMENT = 2;\nexport const UUID_POS_BREAKDOWN_LEVEL2 = 3;\nexport const UUID_POS_ELEMENT_LEVEL2 = 4;\nexport const UUID_MAX_BREAKDOWN_LEVEL = 2;\nexport const ALL_BREAKDOWN_ELEMENTS = 'null';\n","//@flow\nimport get from 'lodash/get';\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from '../state';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { effectProxy } from '../../helpers/seismic';\nimport {\n\tLOAD_ALL_COLOR_OPTIONS,\n\tLOAD_ALL_COLORS_SUCCESS,\n} from './action-constants';\n\nexport const loadAllColorOptions = createGraphQLEffect(\n\t`query {\n        GlideRecord_Query {\n            sys_report_color(queryConditions: \"ORDERBYname\", pagination: {limit: 1000}) {\n                _results {\n\t\t\t\t\tname { displayValue }\n\t\t\t\t\tsys_id { value }\n                }\n            }\n\t\t\tpa_chart_color_schemes(queryConditions: \"ORDERBYname\", pagination: {limit: 1000}) {\n                _results {\n\t\t\t\t\tname { displayValue }\n\t\t\t\t\tsys_id { value }\n                }\n            }\n        }\n    }`,\n\t{\n\t\tsuccessActionType: LOAD_ALL_COLORS_SUCCESS,\n\t}\n);\n\nconst handleAllColorsSuccess = (coeffects: Coeffects<State, any>) => {\n\tconst singleColors = get(\n\t\tcoeffects.action.payload,\n\t\t'data.GlideRecord_Query.sys_report_color._results',\n\t\t[]\n\t).map(result => {\n\t\treturn {\n\t\t\tid: result.sys_id.value,\n\t\t\tlabel: result.name.displayValue,\n\t\t};\n\t});\n\tconst paletteColors = get(\n\t\tcoeffects.action.payload,\n\t\t'data.GlideRecord_Query.pa_chart_color_schemes._results',\n\t\t[]\n\t).map(result => {\n\t\treturn {\n\t\t\tid: result.sys_id.value,\n\t\t\tlabel: result.name.displayValue,\n\t\t};\n\t});\n\n\tcoeffects.updateState({\n\t\tsingleColors,\n\t\tpaletteColors,\n\t});\n};\n\nexport const colorPaletteActionHandlers = {\n\t[LOAD_ALL_COLOR_OPTIONS]: effectProxy(loadAllColorOptions),\n\t[LOAD_ALL_COLORS_SUCCESS]: handleAllColorsSuccess,\n};\n","//@flow\nimport get from 'lodash/get';\n\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { getFieldDefinitionKey } from '../../helpers/field';\n\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from '../state';\nimport {\n\ttype FieldDefinitionRequest,\n\ttype FieldDefinition,\n} from '../../common/types/field';\n\nimport {\n\tRETRIEVE_FIELD_METADATA,\n\tRETRIEVE_FIELD_METADATA_SUCCESS,\n\tRETRIEVE_FIELD_METADATA_FAILURE,\n} from './action-constants';\n\nconst RETRIEVE_FIELD_METADATA_QUERY = `${RETRIEVE_FIELD_METADATA}#DONT_USE`;\n\nconst handleFieldMetadataRetrievalMemo = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState,\n}: Coeffects<State, { fields: FieldDefinitionRequest[] }>) => {\n\tconst { actionName, payload } = action.meta;\n\n\tconst cache = state.dotWalkFieldDefinition;\n\n\tconst fieldsPayload = action.payload.fields || [];\n\n\tconst fields = fieldsPayload.filter(\n\t\tfield => !cache[getFieldDefinitionKey(field)]\n\t);\n\n\t/**\n\t * Keep the continuity even if theres nothing to load\n\t */\n\tif (!fields.length) {\n\t\tupdateState({\n\t\t\tisInitializingDotWalkFields: false,\n\t\t});\n\n\t\treturn actionName && dispatch(actionName, payload);\n\t}\n\n\tdispatch(\n\t\tRETRIEVE_FIELD_METADATA_QUERY,\n\t\t{ fields: JSON.stringify(fields) },\n\t\t{ fields, ...action.meta }\n\t);\n};\n\nconst handleFieldMetadataRetrieval = createGraphQLEffect(\n\t`query($fields: String!){\n\t\tAppPARConfig_Query {\n\t\t\tfieldDefinitions(fields: $fields) {\n\t\t\t\tvalue {\n\t\t\t\t\tfield {\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tname\n\t\t\t\t\t\ttype\n\t\t\t\t\t\tinternalType\n\t\t\t\t\t\treference\n\t\t\t\t\t\tcanCountDistinct\n\t\t\t\t\t\tcanGroupBy\n\t\t\t\t\t\tcanSum\n\t\t\t\t\t\tcanTrendBy\n\t\t\t\t\t\tisRange\n\t\t\t\t\t\tunit\n\t\t\t\t\t}\n\t\t\t\t\tresult\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['fields'],\n\t\tsuccessActionType: RETRIEVE_FIELD_METADATA_SUCCESS,\n\t\terrorActionType: RETRIEVE_FIELD_METADATA_FAILURE,\n\t}\n);\n\nconst handleFieldMetadataRetrievalSuccess = (\n\tcoeffects: Coeffects<State, any>\n) => {\n\tconst updates = [];\n\n\tconst { fields, actionName, payload } = coeffects.action.meta;\n\n\tconst definitions: { field: FieldDefinition, result: string }[] = get(\n\t\tcoeffects.action.payload,\n\t\t'data.AppPARConfig_Query.fieldDefinitions.value'\n\t);\n\n\tfor (let i = 0; i < definitions.length; i++) {\n\t\tconst key = getFieldDefinitionKey(fields[i]);\n\n\t\tif (definitions[i].result !== 'SUCCESS') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tupdates.push({\n\t\t\toperation: 'merge',\n\t\t\tpath: 'dotWalkFieldDefinition',\n\t\t\tvalue: { [key]: definitions[i].field },\n\t\t});\n\t}\n\n\tcoeffects.updateState(updates);\n\n\tcoeffects.updateState({\n\t\tisInitializingDotWalkFields: false,\n\t});\n\n\t/**\n\t * This is the continuity of some previous action that depends\n\t * on the result of the field metadata\n\t */\n\tif (actionName) {\n\t\tcoeffects.dispatch(actionName, payload);\n\t}\n};\n\nexport const fieldsActionHandlers = {\n\t[RETRIEVE_FIELD_METADATA]: handleFieldMetadataRetrievalMemo,\n\t[RETRIEVE_FIELD_METADATA_QUERY]: handleFieldMetadataRetrieval,\n\t[RETRIEVE_FIELD_METADATA_SUCCESS]: handleFieldMetadataRetrievalSuccess,\n};\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type Helpers } from '@servicenow/ui-core';\nimport { type State } from '../state';\nimport { ChartTypeView } from './chart-type-view';\nimport AutoUpdateView from './auto-update-view';\nimport LegendsView from './legends-view';\nimport ComponentHeaderView from './component-header-view';\nimport AxisView from './axis-settings-view';\nimport DataLabelView from './data-label-view';\nimport DisplaySettingsView from './display-settings-view';\nimport SortingView from './sorting-view';\nimport './../../source-list';\nimport './../../group-by-selector';\nimport './../../metric-configuration';\nimport './../../additional-settings';\nimport './../../data-update-settings';\nimport './../../trendby-selector';\nimport './../../empty-state';\nimport '../../color-palette';\nimport '@servicenow/now-tabs';\nimport '@servicenow/now-accordion';\nimport '@servicenow/now-illustration';\nimport '@servicenow/now-message';\nimport { CONFIG_TAB, STYLE_TAB } from './view-constants';\nimport { t } from 'sn-translate';\nimport {\n\tUNREADABLE_INDICATOR,\n\tUNREPORTABLE_TABLE,\n} from '../actions/action-constants';\n\nimport { SYS_PROP_MIN_REFRESH_FREQUENCY } from '../actions/preferences-security-action-handlers';\n\nexport const ConfigTabView = (state: State) => {\n\tconst {\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\taccordionState,\n\t\tdotWalkFieldDefinition,\n\t\tsecurity,\n\t\tsysProperties,\n\t} = state;\n\n\tconst minRefreshFrequencyProp = sysProperties.find(\n\t\tproperty => property.name === SYS_PROP_MIN_REFRESH_FREQUENCY\n\t);\n\n\tlet minRefreshFrequency =\n\t\tminRefreshFrequencyProp && minRefreshFrequencyProp.value\n\t\t\t? minRefreshFrequencyProp.value\n\t\t\t: '30';\n\n\tif (Number(minRefreshFrequency) < 1) minRefreshFrequency = '1';\n\n\treturn (\n\t\t<div className=\"main-section\">\n\t\t\t<now-accordion\n\t\t\t\theading-level=\"2\"\n\t\t\t\ttrigger-icon={{ type: 'chevron', position: 'end' }}>\n\t\t\t\t<viz-config-metric-configuration\n\t\t\t\t\tchartModel={chartModel}\n\t\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\t\tdotWalkFieldDefinition={dotWalkFieldDefinition}\n\t\t\t\t\texpanded={accordionState.metric}\n\t\t\t\t/>\n\t\t\t\t<viz-config-trend-by-selector\n\t\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\t\tchartModel={chartModel}\n\t\t\t\t\texpanded={accordionState.trendBy}\n\t\t\t\t\tfieldDefinitions={dotWalkFieldDefinition}\n\t\t\t\t/>\n\t\t\t\t<viz-config-group-by-selector\n\t\t\t\t\tchartModel={chartModel}\n\t\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\t\tdotWalkFieldDefinition={dotWalkFieldDefinition}\n\t\t\t\t\texpanded={accordionState.groupBy}\n\t\t\t\t/>\n\t\t\t\t<viz-config-additional-settings\n\t\t\t\t\tchartModel={chartModel}\n\t\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\t\texpanded={accordionState.additionalSettings}\n\t\t\t\t/>\n\t\t\t\t{ComponentHeaderView(state)}\n\t\t\t\t<viz-config-data-update-settings\n\t\t\t\t\tchartModel={chartModel}\n\t\t\t\t\texpanded={accordionState.filterSettings}\n\t\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\t\tsecurity={security}\n\t\t\t\t\tminRefreshFrequency={minRefreshFrequency}\n\t\t\t\t/>\n\t\t\t</now-accordion>\n\t\t</div>\n\t);\n};\n\nexport const StyleTabView = (state: State, helpers: Helpers<State>) => {\n\tconst {\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\taccordionState,\n\t\tsingleColors,\n\t\tpaletteColors,\n\t\tdotWalkFieldDefinition,\n\t} = state;\n\n\treturn (\n\t\t<div className=\"main-section\">\n\t\t\t<now-accordion\n\t\t\t\theading-level=\"2\"\n\t\t\t\ttrigger-icon={{ type: 'chevron', position: 'end' }}>\n\t\t\t\t{DisplaySettingsView(state)}\n\t\t\t\t{SortingView(state)}\n\t\t\t\t{AxisView(state, helpers)}\n\t\t\t\t<viz-config-color-palette\n\t\t\t\t\tchartModel={chartModel}\n\t\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\t\taccordionState={accordionState}\n\t\t\t\t\tsingleColors={singleColors}\n\t\t\t\t\tpaletteColors={paletteColors}\n\t\t\t\t\tfieldDefinitions={dotWalkFieldDefinition}\n\t\t\t\t/>\n\t\t\t\t{LegendsView(state)}\n\t\t\t\t{DataLabelView(state, helpers)}\n\t\t\t</now-accordion>\n\t\t</div>\n\t);\n};\n\nexport const TabView = (state: State, helpers: Helpers<State>) => {\n\tconst {\n\t\tchartModel: { dataSources },\n\t\tselectedTab,\n\t} = state;\n\n\tconst tabItems = [\n\t\t{ id: CONFIG_TAB, label: t('Data') },\n\t\t{ id: STYLE_TAB, label: t('Presentation') },\n\t];\n\n\tif (!dataSources.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"tabs-container\">\n\t\t\t\t<now-tabs\n\t\t\t\t\tfixed-width\n\t\t\t\t\titems={tabItems}\n\t\t\t\t\tselected-item={selectedTab}></now-tabs>\n\t\t\t</div>\n\t\t\t{selectedTab === CONFIG_TAB\n\t\t\t\t? ConfigTabView(state)\n\t\t\t\t: StyleTabView(state, helpers)}\n\t\t</Fragment>\n\t);\n};\n\nexport const ErrorView = (state: State) => {\n\tconst isPermissionError =\n\t\tstate.dataSourceError === UNREADABLE_INDICATOR ||\n\t\tstate.dataSourceError === UNREPORTABLE_TABLE;\n\n\tconst message = isPermissionError\n\t\t? t(`You don't have access to the data source used in this visualization.`)\n\t\t: t(`The data source used in this visualization is not valid anymore.`);\n\n\tconst description = t(`Contact your admin for more information.`);\n\n\treturn (\n\t\t<viz-config-empty-state illustration=\"unconfigured\" force-size=\"sm\">\n\t\t\t<span slot=\"primary\">{message}</span>\n\t\t\t<span slot=\"secondary\">{description}</span>\n\t\t</viz-config-empty-state>\n\t);\n};\n\nexport const MainView = (state: State, helpers: Helpers<State>) => {\n\tconst {\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\tdataSourceError,\n\t\tisLoadingDataSource,\n\t\tisInitializingDotWalkFields,\n\t\taccordionState,\n\t} = state;\n\n\tconst preferencesLoaded =\n\t\tstate.userPreferences.length > 0 && state.sysProperties.length > 0;\n\n\tif (\n\t\tisLoadingDataSource ||\n\t\t!preferencesLoaded ||\n\t\tisInitializingDotWalkFields\n\t) {\n\t\treturn (\n\t\t\t<div className=\"main-loading-container\">\n\t\t\t\t<now-loader size=\"lg\" />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (dataSourceError) {\n\t\treturn ErrorView(state);\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<viz-config-source-list\n\t\t\t\tchartType={chartModel.chartType}\n\t\t\t\tdataSources={chartModel.dataSources}\n\t\t\t\tdataSourceInfos={dataSourceInfos}\n\t\t\t\texpanded={accordionState.dataSources}\n\t\t\t/>\n\t\t\t<div className=\"main-section\">{ChartTypeView(state)}</div>\n\t\t\t{TabView(state, helpers)}\n\t\t\t{AutoUpdateView(state)}\n\t\t</Fragment>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { CHART_TYPE_SELECTED } from '../actions/action-constants';\nimport {\n\tCHART_TYPES_CONFIG,\n\tCHART_MENU_GROUPS,\n\ttype ChartTypeConfig,\n} from '../../common/chart-settings';\nimport { type State } from '../state';\nimport { t } from 'sn-translate';\nimport {\n\tSOURCE_TYPE_INDICATOR,\n\ttype DataSource,\n\ttype DataSourceInfos,\n} from '../../common/types/data-source';\nimport { type Metric } from '../../common/types/metric';\nimport { type FieldDefinitions } from '../../common/types/field';\n\nimport { MULTIPLE_DS_UNSUPPORTED } from '../../common/types/chart-type';\nimport { hasGroupByOptions } from '../actions/model-options';\nimport { nowPopoverDropdownPositions } from '../../common/popover-config';\n\nconst isItemDisabled = (\n\tchartConfig: ChartTypeConfig,\n\tdataSources: DataSource[],\n\tdataSourceInfos: DataSourceInfos,\n\tmetrics: Metric[],\n\tdotWalkFieldDefinition: FieldDefinitions\n) => {\n\tconst doesntSupportMultipleMetrics =\n\t\tmetrics.length > 1 && MULTIPLE_DS_UNSUPPORTED.includes(chartConfig.id);\n\n\tconst hasIndicatorLimitations =\n\t\tdataSources.length === 1 &&\n\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\t(chartConfig.menuGroup === 'bar' || chartConfig.menuGroup === 'pie') &&\n\t\t!hasGroupByOptions(dataSources, dataSourceInfos, dotWalkFieldDefinition);\n\n\tif (doesntSupportMultipleMetrics || hasIndicatorLimitations) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nexport const ChartTypeView = ({\n\tchartModel,\n\tdataSourceInfos,\n\tdotWalkFieldDefinition,\n}: State) => {\n\tconst { chartType, metrics, dataSources } = chartModel;\n\n\tif (!dataSources.length) {\n\t\treturn undefined;\n\t}\n\n\tconst groupOptionsDic = {};\n\n\tfor (const groupConfig of CHART_MENU_GROUPS) {\n\t\tgroupOptionsDic[groupConfig.id] = {\n\t\t\tlabel: groupConfig.label,\n\t\t\tchildren: [],\n\t\t};\n\t}\n\n\tfor (const config of CHART_TYPES_CONFIG) {\n\t\tconst groupOption = groupOptionsDic[config.menuGroup];\n\n\t\tif (groupOption) {\n\t\t\tgroupOption.children.push({\n\t\t\t\tid: config.id,\n\t\t\t\ticon: config.chartIcon,\n\t\t\t\tlabel: '\\xa0\\xa0' + config.label,\n\t\t\t\tdisabled: isItemDisabled(\n\t\t\t\t\tconfig,\n\t\t\t\t\tdataSources,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tmetrics,\n\t\t\t\t\tdotWalkFieldDefinition\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t}\n\n\tconst groups = Object.values(groupOptionsDic);\n\n\treturn (\n\t\t<div className=\"chart-type-view\">\n\t\t\t<now-label-value-inline\n\t\t\t\tclassName=\"viz-config-title-label\"\n\t\t\t\tlabel={t('Visualization type')}\n\t\t\t/>\n\t\t\t<now-dropdown\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: CHART_TYPE_SELECTED,\n\t\t\t\t}}\n\t\t\t\tdata-testId=\"chart-type-selector\"\n\t\t\t\titems={groups}\n\t\t\t\tselect=\"single\"\n\t\t\t\tselected-items={[chartType]}\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"tertiary\"\n\t\t\t\tconfig-aria={{\n\t\t\t\t\t'aria-label': t('Visualization type'),\n\t\t\t\t}}\n\t\t\t\tpanelFitProps={{\n\t\t\t\t\tconstrain: {\n\t\t\t\t\t\tminHeight: 32,\n\t\t\t\t\t\tminWidth: 'target',\n\t\t\t\t\t\tmaxWidth: 400,\n\t\t\t\t\t\tmaxHeight: 500,\n\t\t\t\t\t},\n\t\t\t\t\tposition: nowPopoverDropdownPositions,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-accordion';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport {\n\tSET_SHOW_LEGEND,\n\tSET_SHOW_LEGEND_VALUE,\n\tSET_SHOW_LEGEND_PERCENTAGE,\n\tSET_LEGEND_POSITION,\n} from '../actions/action-constants';\nimport { LEGEND_POSITION_OPTIONS } from './view-constants';\nimport { autoScrollToVisibility } from '../../helpers/now-accordion/auto-scroll-to-visibility';\n\nexport default (state: State) => {\n\tconst {\n\t\tchartModel: { chartType, legendSettings },\n\t\taccordionState,\n\t} = state;\n\n\tif (chartType === CHART_TYPES.SINGLE_SCORE || !legendSettings) {\n\t\treturn null;\n\t}\n\n\tconst {\n\t\tshowLegend,\n\t\tshowLegendValue,\n\t\tlegendPosition,\n\t\tshowLegendPercentage,\n\t} = legendSettings;\n\n\tconst checkLegendValueAndChartType =\n\t\tshowLegendValue &&\n\t\t(chartType === CHART_TYPES.PIE ||\n\t\t\tchartType === CHART_TYPES.DONUT ||\n\t\t\tchartType === CHART_TYPES.SEMI_DONUT);\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tid=\"legend-accordion\"\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={t('Legend')}\n\t\t\texpanded={accordionState.legend}\n\t\t\tappend-to-payload={{ accordionItem: 'legend' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t{' '}\n\t\t\t\t<viz-config-toggle\n\t\t\t\t\tid=\"show-legend-toggle\"\n\t\t\t\t\tappend-to-payload={{ payloadActionType: SET_SHOW_LEGEND }}\n\t\t\t\t\tchecked={showLegend}\n\t\t\t\t\tlabel={t('Show legend')}\n\t\t\t\t/>\n\t\t\t\t<viz-config-toggle\n\t\t\t\t\tid=\"show-legend-value-toggle\"\n\t\t\t\t\tappend-to-payload={{ payloadActionType: SET_SHOW_LEGEND_VALUE }}\n\t\t\t\t\tdisabled={!showLegend}\n\t\t\t\t\tchecked={showLegendValue}\n\t\t\t\t\tlabel={t('Show legend value')}\n\t\t\t\t/>\n\t\t\t\t{checkLegendValueAndChartType ? (\n\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\tid=\"show-legend-percentage-toggle\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_SHOW_LEGEND_PERCENTAGE,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tchecked={showLegendPercentage}\n\t\t\t\t\t\tlabel={t('Show percentage')}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"legend-position\">\n\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\tlabel={t('Legend position')}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tid=\"legend-position-dropdown\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_LEGEND_POSITION,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={LEGEND_POSITION_OPTIONS}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[legendPosition]}\n\t\t\t\t\t\tdisabled={!showLegend}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Legend position'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-accordion';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\nimport { SET_HIDE_HEADER } from '../actions/action-constants';\nimport { autoScrollToVisibility } from '../../helpers/now-accordion/auto-scroll-to-visibility';\n\nexport default (state: State) => {\n\tconst { chartModel, accordionState } = state;\n\n\tconst showHeaderPopOverContent = t(\n\t\t'Hiding the widget header also hides widget label and all the header’s icons.'\n\t);\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tid=\"component-header-accordion\"\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={t('Component header')}\n\t\t\texpanded={accordionState.componentHeader}\n\t\t\tappend-to-payload={{ accordionItem: 'componentHeader' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t<div key=\"section-hide-header\" className=\"section-hide-header\">\n\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\tid=\"show-header-toogle\"\n\t\t\t\t\t\tappend-to-payload={{ payloadActionType: SET_HIDE_HEADER }}\n\t\t\t\t\t\tchecked={!chartModel.hideHeader}\n\t\t\t\t\t\tlabel={t('Show header')}\n\t\t\t\t\t\tinfoTooltip={showHeaderPopOverContent}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{chartModel.hideHeader ? null : (\n\t\t\t\t\t<div className=\"section-prop-label\">\n\t\t\t\t\t\t<now-input\n\t\t\t\t\t\t\tid=\"widget-label-input\"\n\t\t\t\t\t\t\tlabel={t('Component title')}\n\t\t\t\t\t\t\tname=\"label\"\n\t\t\t\t\t\t\tplaceholder={t('Untitled')}\n\t\t\t\t\t\t\tvalue={state.chartModel.label}\n\t\t\t\t\t\t\tdisabled={chartModel.hideHeader}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-accordion';\nimport '@servicenow/now-label-value';\nimport 'sn-devx-components';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\nimport { type Helpers } from '@servicenow/ui-core';\nimport {\n\tX_AXIS_NAME,\n\tY_AXIS_NAME,\n\tAXIS_RANGE_FROM,\n\tAXIS_RANGE_TO,\n\tSET_Y_AXIS_POSITION_VALUE,\n} from '../actions/action-constants';\nimport { Y_AXIS_POSITION_CHOICES } from './view-constants';\nimport {\n\tCHART_TYPES_CONFIG,\n\tTIMESERIES_CHART_TYPES,\n} from '../../common/chart-settings';\nimport DateRangeSelectorView from './date-range-view';\nimport { INPUT_BLUR } from './view-constants';\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport { autoScrollToVisibility } from '../../helpers/now-accordion/auto-scroll-to-visibility';\nimport { getAxisLabel } from '../../helpers/axis';\n\nexport default (state: State, helpers: Helpers<State>) => {\n\tconst {\n\t\tchartModel: { chartType, axisSettings, yAxisConfigs },\n\t\taccordionState,\n\t} = state;\n\n\tconst { xAxisName } = axisSettings || {};\n\n\tconst isAllowed = CHART_TYPES_CONFIG.find(\n\t\te => e.id === chartType && (e.menuGroup === 'time' || e.menuGroup === 'bar')\n\t);\n\n\tif (!isAllowed || !axisSettings) {\n\t\treturn null;\n\t}\n\n\tconst xAxisLabel = t('X Axis');\n\tconst yAxisLabel = t('Y Axis');\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-accordion-item\n\t\t\t\tid=\"y-axis-accordion\"\n\t\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\t\theader={\n\t\t\t\t\tchartType === CHART_TYPES.HORIZONTAL_BAR ? xAxisLabel : yAxisLabel\n\t\t\t\t}\n\t\t\t\texpanded={accordionState.yAxis}\n\t\t\t\tappend-to-payload={{ accordionItem: 'yAxis' }}\n\t\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t\t<div className=\"now-accordion-no-border-content\" slot=\"content\">\n\t\t\t\t\t{yAxisConfigs.map((yAxisConfig, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={`yAxisConfig${yAxisConfig.id}`}>\n\t\t\t\t\t\t\t\t{yAxisConfigs.length > 1 ? (\n\t\t\t\t\t\t\t\t\t<div className=\"axis-label-container\">\n\t\t\t\t\t\t\t\t\t\t<label>{getAxisLabel(index)}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<div className=\"axis-container\">\n\t\t\t\t\t\t\t\t\t<devx-input\n\t\t\t\t\t\t\t\t\t\tid={`y-axis-title-${yAxisConfig.id}`}\n\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: Y_AXIS_NAME,\n\t\t\t\t\t\t\t\t\t\t\taxisId: yAxisConfig.id,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tlabel={t('Axis title (Optional)')}\n\t\t\t\t\t\t\t\t\t\tplaceholder={t('Untitled')}\n\t\t\t\t\t\t\t\t\t\tinputValue={yAxisConfig.title}\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"axis-range\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"range-input\">\n\t\t\t\t\t\t\t\t\t\t\t<now-label-value-inline label={t('Axis range')} />\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid={`y-axis-range-from-${yAxisConfig.id}`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-label={t('Axis range min value')}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"range-input-text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={yAxisConfig.axisRangeFrom}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\tonblur={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thelpers.dispatch(INPUT_BLUR, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: AXIS_RANGE_FROM,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref: e.target,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisId: yAxisConfig.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('Dynamic')}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-separator\">to</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"range-input\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid={`y-axis-range-to-${yAxisConfig.id}`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-label={t('Axis range max value')}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"range-input-text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={yAxisConfig.axisRangeTo}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\tonblur={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thelpers.dispatch(INPUT_BLUR, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: AXIS_RANGE_TO,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref: e.target,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisId: yAxisConfig.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('Dynamic')}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{TIMESERIES_CHART_TYPES.includes(chartType) ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"y-axis-position-container\">\n\t\t\t\t\t\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={t('Position')}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: SET_Y_AXIS_POSITION_VALUE,\n\t\t\t\t\t\t\t\t\t\t\t\t\taxisId: yAxisConfig.id,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\titems={Y_AXIS_POSITION_CHOICES}\n\t\t\t\t\t\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\t\t\t\t\t\tselected-items={[yAxisConfig.orientation]}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-label': t('Show y axis position values'),\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</now-accordion-item>\n\t\t\t<now-accordion-item\n\t\t\t\tid=\"x-axis-accordion\"\n\t\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\t\theader={\n\t\t\t\t\tchartType === CHART_TYPES.HORIZONTAL_BAR ? yAxisLabel : xAxisLabel\n\t\t\t\t}\n\t\t\t\texpanded={accordionState.xAxis}\n\t\t\t\tappend-to-payload={{ accordionItem: 'xAxis' }}\n\t\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t\t<devx-input\n\t\t\t\t\t\tid=\"x-axis-title\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: X_AXIS_NAME,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tlabel={t('Axis title (Optional)')}\n\t\t\t\t\t\tplaceholder={t('Untitled')}\n\t\t\t\t\t\tinputValue={xAxisName}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t/>\n\t\t\t\t\t{DateRangeSelectorView(state)}\n\t\t\t\t</div>\n\t\t\t</now-accordion-item>\n\t\t</Fragment>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-tooltip';\nimport 'sn-devx-components';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\nimport {\n\tX_AXIS_TIME_INPUT,\n\tX_AXIS_TIME_TYPE_INPUT,\n\tX_AXIS_SHOW_MAX,\n} from '../actions/action-constants';\nimport { X_AXIS_DATE_RANGE_TYPES } from './view-constants';\nimport { TIMESERIES_CHART_TYPES } from '../../common/chart-settings';\nimport { SOURCE_TYPE_INDICATOR } from '../../common/types/data-source';\nimport { getMetricFrequency } from '../../helpers/metric';\n\nfunction XAxisDateRangeView(state: State) {\n\tconst {\n\t\tchartModel: { axisSettings, metrics },\n\t\tdataSourceInfos,\n\t} = state;\n\n\tconst frequencyValue = getMetricFrequency(metrics[0], dataSourceInfos) || 0;\n\n\tconst filteredRangeTypes = X_AXIS_DATE_RANGE_TYPES.filter(\n\t\ttype => type.frequencyRange >= frequencyValue\n\t);\n\n\tconst xAxisDateRangePopOverContent =\n\t\t'Define the number of periods to show on the horizontal axis.';\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"viz-config-section-divider\">\n\t\t\t\t{t('Date range') + ' '}\n\t\t\t\t<now-popover interactionType=\"none\">\n\t\t\t\t\t<now-icon slot=\"trigger\" icon=\"info-circle-outline\" />\n\t\t\t\t\t<viz-config-popover-content\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tpopOverContent={xAxisDateRangePopOverContent}\n\t\t\t\t\t/>\n\t\t\t\t</now-popover>\n\t\t\t</div>\n\t\t\t<viz-config-toggle\n\t\t\t\tid=\"x-axis-show-max-range\"\n\t\t\t\tappend-to-payload={{ payloadActionType: X_AXIS_SHOW_MAX }}\n\t\t\t\tchecked={axisSettings && axisSettings.dateRangeShowMax}\n\t\t\t\tlabel={t('Show maximum range')}\n\t\t\t/>\n\t\t\t<div className=\"viz-config-select-range\">\n\t\t\t\t<devx-input\n\t\t\t\t\tid=\"x-axis-time\"\n\t\t\t\t\tlabel={t('Specific date range')}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: X_AXIS_TIME_INPUT,\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={axisSettings && axisSettings.dateRangeShowMax}\n\t\t\t\t\tinputValue={axisSettings && axisSettings.dateRangeAmount}\n\t\t\t\t\ttransparent={true}\n\t\t\t\t\tmaxlength={2}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tclassName=\"viz-config-x-axis-time-amount\"\n\t\t\t\t/>\n\t\t\t\t<now-dropdown\n\t\t\t\t\tid=\"x-axis-time-type\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: X_AXIS_TIME_TYPE_INPUT,\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={axisSettings && axisSettings.dateRangeShowMax}\n\t\t\t\t\titems={filteredRangeTypes}\n\t\t\t\t\tselect=\"single\"\n\t\t\t\t\tselected-items={[axisSettings && axisSettings.dateRangeType]}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t'aria-label': t('Select date range period'),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n\nexport default (state: State) => {\n\tconst {\n\t\tchartModel: { chartType, dataSources },\n\t} = state;\n\n\tconst isIndicatorTimeseries =\n\t\tTIMESERIES_CHART_TYPES.includes(chartType) &&\n\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR;\n\n\treturn isIndicatorTimeseries ? XAxisDateRangeView(state) : undefined;\n};\n","// @flow\n\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-accordion';\nimport 'sn-devx-components';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\nimport { type Helpers } from '@servicenow/ui-core';\nimport { CHART_TYPES } from '../../common/types/chart-type';\nimport { BAR_CHART_TYPES, STACKED } from '../../common/chart-settings';\nimport {\n\tAGGREGATE_FUNCTION_SUM,\n\tAGGREGATE_FUNCTION_COUNT,\n} from '../../metric-configuration/constants';\nimport {\n\tSET_DATA_LABEL_SETTINGS,\n\tSET_OVERLAPPING_LABELS,\n\tSET_DECIMAL_PRECISION,\n\tSET_DATA_LABEL_POSITION,\n\tSET_DATA_LABEL_STACKED_VALUE,\n\tSET_SHOW_DATA_LABEL_AS,\n} from '../actions/action-constants';\nimport {\n\tINPUT_BLUR,\n\tDATA_LABEL_POSITION_OPTIONS,\n\tDATA_LABEL_STACKED_VALUES,\n\tSHOW_DATA_LABEL_AS_OPTIONS,\n} from './view-constants';\nimport { INDICATOR_TYPE } from '../../common/types/data-source';\nimport { SOURCE_TYPE_TABLE } from '../../common/types/data-source';\nimport { shouldEnableDecimalPrecision } from '../actions/model-validators';\nimport { autoScrollToVisibility } from '../../helpers/now-accordion/auto-scroll-to-visibility';\n\nexport default (state: State, { dispatch }: Helpers<State>) => {\n\tconst { chartModel, dataSourceInfos, accordionState } = state;\n\tconst {\n\t\tchartType,\n\t\tdataLabelSettings,\n\t\tisStacked,\n\t\tmetrics,\n\t\tdataSources,\n\t} = chartModel;\n\n\tif (\n\t\t!dataLabelSettings ||\n\t\t(chartType === CHART_TYPES.SINGLE_SCORE &&\n\t\t\t!shouldEnableDecimalPrecision(\n\t\t\t\tchartModel,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tstate.dotWalkFieldDefinition\n\t\t\t))\n\t) {\n\t\treturn null;\n\t}\n\n\tconst dataToggleView = () => {\n\t\tif (chartType === CHART_TYPES.SINGLE_SCORE) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<viz-config-toggle\n\t\t\t\tid=\"show-data-label\"\n\t\t\t\tappend-to-payload={{ payloadActionType: SET_DATA_LABEL_SETTINGS }}\n\t\t\t\tchecked={dataLabelSettings.showDataLabels}\n\t\t\t\tlabel={t('Show data labels')}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst showDataLabelAsView = () => {\n\t\tif (\n\t\t\tdataLabelSettings.showDataLabels &&\n\t\t\t(chartType === CHART_TYPES.PIE ||\n\t\t\t\tchartType === CHART_TYPES.DONUT ||\n\t\t\t\tchartType === CHART_TYPES.SEMI_DONUT)\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div className=\"show-data-label-as-container\">\n\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\tlabel={t('Show label as')}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tid=\"data-label-as\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_SHOW_DATA_LABEL_AS,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={SHOW_DATA_LABEL_AS_OPTIONS}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[dataLabelSettings.showDataLabelAs]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Show label as'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Returns true when the entered value is a number between 0-9 and\n\t * It also allows other non character keys like tab, backspace,\n\t * enter, escape, delete, navigation etc\n\t * @param {Event} e\n\t * @returns {boolean}\n\t */\n\tconst isValidDecimalRange = e => {\n\t\tconst key = e.keyCode ? e.keyCode : e.which;\n\n\t\tif (\n\t\t\t!(\n\t\t\t\t[8, 9, 13, 27, 46].indexOf(key) !== -1 ||\n\t\t\t\t(key == 65 && (e.ctrlKey || e.metaKey)) ||\n\t\t\t\t(key >= 35 && key <= 40) ||\n\t\t\t\t(key >= 48 && key <= 57 && !(e.shiftKey || e.altKey)) ||\n\t\t\t\t(key >= 96 && key <= 105)\n\t\t\t)\n\t\t)\n\t\t\treturn true;\n\t};\n\n\tconst decimalPrecisionView = () => {\n\t\tif (\n\t\t\tshouldEnableDecimalPrecision(\n\t\t\t\tchartModel,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tstate.dotWalkFieldDefinition\n\t\t\t)\n\t\t)\n\t\t\treturn (\n\t\t\t\t<span className=\"viz-config-input-container\">\n\t\t\t\t\t<now-label-value-inline label={t('Decimal Precision')} />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"decimal-precision-input\"\n\t\t\t\t\t\tclassName=\"viz-config-input-text\"\n\t\t\t\t\t\tvalue={dataLabelSettings.decimalPrecision}\n\t\t\t\t\t\tmaxlength=\"1\"\n\t\t\t\t\t\tonkeydown={e => isValidDecimalRange(e) && e.preventDefault()}\n\t\t\t\t\t\tonblur={e =>\n\t\t\t\t\t\t\tdispatch(INPUT_BLUR, {\n\t\t\t\t\t\t\t\ttype: SET_DECIMAL_PRECISION,\n\t\t\t\t\t\t\t\tref: e.target,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\tmax=\"9\"\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t);\n\n\t\treturn null;\n\t};\n\n\tconst dataLabelPositionView = () => {\n\t\tif (\n\t\t\tdataLabelSettings.showDataLabels &&\n\t\t\t(chartType === CHART_TYPES.BAR ||\n\t\t\t\tchartType === CHART_TYPES.HORIZONTAL_BAR)\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div className=\"data-label-position-container\">\n\t\t\t\t\t<label>{t('Data label position')}</label>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tid=\"data-label-position\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_DATA_LABEL_POSITION,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={DATA_LABEL_POSITION_OPTIONS}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[dataLabelSettings.dataLabelPosition]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Data Label position'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst showOverlappingLabelsView = () => {\n\t\tif (\n\t\t\tdataLabelSettings.showDataLabels &&\n\t\t\tBAR_CHART_TYPES.includes(chartType)\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\tid=\"show-overlapping-label\"\n\t\t\t\t\t\tappend-to-payload={{ payloadActionType: SET_OVERLAPPING_LABELS }}\n\t\t\t\t\t\tchecked={dataLabelSettings.showOverlappingLabels}\n\t\t\t\t\t\tlabel={t('Show overlapping labels')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst checkTableAggregationFunction = (metrics, dataSources) => {\n\t\treturn metrics.every(metric => {\n\t\t\treturn (\n\t\t\t\t(dataSources[0].sourceType === SOURCE_TYPE_TABLE &&\n\t\t\t\t\tmetric.aggregateFunction === AGGREGATE_FUNCTION_SUM) ||\n\t\t\t\t(dataSources[0].sourceType === SOURCE_TYPE_TABLE &&\n\t\t\t\t\tmetric.aggregateFunction === AGGREGATE_FUNCTION_COUNT)\n\t\t\t);\n\t\t});\n\t};\n\n\tconst checkIndicatorTypes = (dataSourceInfos, dataSources) => {\n\t\treturn dataSources.every(dataSource => {\n\t\t\treturn (\n\t\t\t\t(dataSourceInfos[dataSource.id].type === INDICATOR_TYPE.AUTOMATED &&\n\t\t\t\t\t(dataSourceInfos[dataSource.id].aggregate === 2 ||\n\t\t\t\t\t\tdataSourceInfos[dataSource.id].aggregate === 1)) ||\n\t\t\t\tdataSourceInfos[dataSource.id].type === INDICATOR_TYPE.MANUAL ||\n\t\t\t\tdataSourceInfos[dataSource.id].type === INDICATOR_TYPE.EXTERNAL\n\t\t\t);\n\t\t});\n\t};\n\n\tconst showStackedValuesView = () => {\n\t\tif (\n\t\t\tdataLabelSettings.showDataLabels &&\n\t\t\tisStacked === STACKED &&\n\t\t\tBAR_CHART_TYPES.includes(chartType) &&\n\t\t\t(checkTableAggregationFunction(metrics, dataSources) ||\n\t\t\t\tcheckIndicatorTypes(dataSourceInfos, dataSources))\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div className=\"stacked-label-value-container\">\n\t\t\t\t\t<label>{t('Show stacked values')}</label>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tid=\"stacked-values\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_DATA_LABEL_STACKED_VALUE,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={DATA_LABEL_STACKED_VALUES}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[dataLabelSettings.stackedValue]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Show stacked values'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tid=\"data-label-accordion\"\n\t\t\theader={t('Data label')}\n\t\t\texpanded={accordionState.dataLabel}\n\t\t\tappend-to-payload={{ accordionItem: 'dataLabel' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t{dataToggleView()}\n\t\t\t\t{dataLabelSettings.showDataLabels ? showDataLabelAsView() : ''}\n\t\t\t\t{dataLabelPositionView()}\n\t\t\t\t{showStackedValuesView()}\n\t\t\t\t{showOverlappingLabelsView()}\n\t\t\t\t{decimalPrecisionView()}\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-accordion';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\n\nimport {\n\tSET_SINGLE_SCORE_SIZE,\n\tSET_DISPLAY_ZERO,\n\tSET_BORDER,\n\tSET_VARIANT,\n} from '../actions/action-constants';\n\nimport { autoScrollToVisibility } from '../../helpers/now-accordion/auto-scroll-to-visibility';\n\nimport { CHART_TYPES } from '../../common/types/chart-type';\n\nimport {\n\tdoesShowDisplayZero,\n\tSINGLE_SCORE_SIZES,\n\tDEFAULT_SCORE_SIZE,\n} from '../../helpers/display-settings/helpers';\n\nimport { jsxif } from '../../helpers/seismic';\n\nconst sizeItems = [\n\t{ id: 'auto', label: t('Auto'), value: 'auto' },\n\t{ id: 'SMALL', label: t('Small'), value: '200px' },\n\t{ id: 'MEDIUM', label: t('Medium'), value: '400px' },\n\t{ id: 'LARGE', label: t('Large'), value: '504px' },\n\t{ id: 'XL', label: t('Extra Large'), value: '676px' },\n];\n\nconst getSelectedItem = (state: State, connectToStyle: boolean) => {\n\tconst {\n\t\tproperties: { elementId, elementStyles },\n\t\tchartModel,\n\t} = state;\n\n\tif (connectToStyle) {\n\t\tconst currentStyles = elementStyles[elementId];\n\n\t\treturn (\n\t\t\tsizeItems.find(item => item.value === currentStyles.height) ||\n\t\t\tsizeItems[0]\n\t\t);\n\t}\n\n\treturn sizeItems.find(x => x.id === chartModel.variant);\n};\n\nconst renderSizeSelector = (state: State) => {\n\tconst {\n\t\tproperties: { pageMetadata },\n\t} = state;\n\n\tconst connectSizeSelectorToStyle =\n\t\tpageMetadata && pageMetadata.type !== 'landing';\n\n\tconst selectedItem = getSelectedItem(state, connectSizeSelectorToStyle);\n\n\treturn (\n\t\t<div className=\"section-label-dropdown\">\n\t\t\t<now-label-value-inline\n\t\t\t\tclassName=\"section-heading\"\n\t\t\t\tlabel={t('Chart size')}\n\t\t\t/>\n\t\t\t<now-dropdown\n\t\t\t\tid=\"size-variant-dropdown\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: SET_VARIANT,\n\t\t\t\t\tshouldReplaceStyle: connectSizeSelectorToStyle,\n\t\t\t\t}}\n\t\t\t\titems={sizeItems}\n\t\t\t\tselect=\"single\"\n\t\t\t\tselected-items={[selectedItem ? selectedItem.id : 'auto']}\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"tertiary\"\n\t\t\t\tconfig-aria={{\n\t\t\t\t\t'aria-label': t('Chart size'),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default (state: State) => {\n\tconst {\n\t\tchartModel: {\n\t\t\tchartType,\n\t\t\tdisplaySettings: { scoreSize, displayZero },\n\t\t\tdataSources,\n\t\t},\n\t\taccordionState,\n\t} = state;\n\n\tconst showSingleScoreSize = chartType === CHART_TYPES.SINGLE_SCORE;\n\tconst showDisplayZero = doesShowDisplayZero(chartType, dataSources);\n\n\tconst displayZeroContent = () => (\n\t\t<viz-config-toggle\n\t\t\tid=\"display-zero-toggle\"\n\t\t\tappend-to-payload={{ payloadActionType: SET_DISPLAY_ZERO }}\n\t\t\tchecked={displayZero}\n\t\t\tlabel={t('Show zero')}\n\t\t/>\n\t);\n\n\tconst singleScoreSize = () => (\n\t\t<div className=\"section-label-dropdown\">\n\t\t\t<now-label-value-inline\n\t\t\t\tclassName=\"section-heading\"\n\t\t\t\tlabel={t('Score size')}\n\t\t\t/>\n\t\t\t<now-dropdown\n\t\t\t\tid=\"single-score-dropdown\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: SET_SINGLE_SCORE_SIZE,\n\t\t\t\t}}\n\t\t\t\titems={SINGLE_SCORE_SIZES}\n\t\t\t\tselect=\"single\"\n\t\t\t\tselected-items={[scoreSize || DEFAULT_SCORE_SIZE]}\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"tertiary\"\n\t\t\t\tconfig-aria={{\n\t\t\t\t\t'aria-label': t('Score size'),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tconst borderToggle = (\n\t\t<div className=\"section-prop-border\">\n\t\t\t<viz-config-toggle\n\t\t\t\tid=\"border-toggle\"\n\t\t\t\tlabel={t('Show border')}\n\t\t\t\tappend-to-payload={{ payloadActionType: SET_BORDER }}\n\t\t\t\tchecked={\n\t\t\t\t\tstate.chartModel.border === undefined ? true : state.chartModel.border\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tid=\"display-settings-accordion\"\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={t('Display settings')}\n\t\t\texpanded={accordionState.displaySettings}\n\t\t\tappend-to-payload={{ accordionItem: 'displaySettings' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t{borderToggle}\n\t\t\t\t{jsxif(showDisplayZero) && displayZeroContent()}\n\t\t\t\t{renderSizeSelector(state)}\n\t\t\t\t{jsxif(showSingleScoreSize) && singleScoreSize()}\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from '../state';\n\nimport { autoScrollToVisibility } from '../../helpers/now-accordion/auto-scroll-to-visibility';\nimport { isAnyDataSourceGroupByReportRange } from '../../helpers/data-source/index';\nimport { doesShowSortBy } from '../../helpers/display-settings/helpers';\n\nimport { SET_SORT_BY, SET_ORDER_BY } from '../actions/action-constants';\n\nimport {\n\tSORT_BY_OPTIONS_RANGE,\n\tSORT_BY_OPTIONS_NON_RANGE,\n\tSORT_BY_RANGE,\n\tSORT_BY_VALUE,\n\tORDER_ASC,\n\tORDER_DESC,\n} from './view-constants';\n\nexport default (state: State) => {\n\tconst {\n\t\tchartModel: {\n\t\t\tchartType,\n\t\t\tdisplaySettings: { sortByField, orderByField },\n\t\t\tdataSources,\n\t\t},\n\t\tdataSourceInfos,\n\t\taccordionState,\n\t} = state;\n\n\tconst showSortBy = doesShowSortBy(chartType);\n\n\tif (!showSortBy) return null;\n\n\tconst groupByReportRange = isAnyDataSourceGroupByReportRange(\n\t\tdataSources,\n\t\tdataSourceInfos\n\t);\n\n\tconst sortByItems = groupByReportRange\n\t\t? SORT_BY_OPTIONS_RANGE\n\t\t: SORT_BY_OPTIONS_NON_RANGE;\n\n\tconst selectedSortByItem =\n\t\tsortByField && (groupByReportRange || sortByField !== SORT_BY_RANGE)\n\t\t\t? sortByField\n\t\t\t: SORT_BY_VALUE;\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tid=\"sorting-accordion\"\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={t('Sorting')}\n\t\t\texpanded={accordionState.sorting}\n\t\t\tappend-to-payload={{ accordionItem: 'sorting' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t<div className=\"sort-by-container\">\n\t\t\t\t\t<div className=\"sort-by-column\">\n\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\t\tlabel={t('Sorting by')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\tid=\"sort-by-dropdown\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tpayloadActionType: SET_SORT_BY,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\titems={sortByItems}\n\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\tselected-items={[selectedSortByItem]}\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': t('Sorting by'),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"order-by-column\">\n\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\t\tlabel={t('Direction')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"order-by-buttons\">\n\t\t\t\t\t\t\t<now-button-stateful\n\t\t\t\t\t\t\t\tid=\"sort-by-desc-button\"\n\t\t\t\t\t\t\t\tmanage-selected\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: SET_ORDER_BY,\n\t\t\t\t\t\t\t\t\tvalue: ORDER_DESC,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\tconfig-role=\"button\"\n\t\t\t\t\t\t\t\ttooltip-content={t('Sort Descending')}\n\t\t\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t\t\t'aria-label': t('Sort Descending'),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon=\"sort-descending-fill\"\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tselected={!orderByField || orderByField === ORDER_DESC}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<now-button-stateful\n\t\t\t\t\t\t\t\tid=\"sort-by-asc-button\"\n\t\t\t\t\t\t\t\tmanage-selected\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: SET_ORDER_BY,\n\t\t\t\t\t\t\t\t\tvalue: ORDER_ASC,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\tconfig-role=\"button\"\n\t\t\t\t\t\t\t\ttooltip-content={t('Sort Ascending')}\n\t\t\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t\t\t'aria-label': t('Sort Ascending'),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon=\"sort-ascending-fill\"\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tselected={orderByField === ORDER_ASC}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport sourceListActions from './actions';\nimport styles from './styles.scss';\nimport { initialState } from './state';\n\ncreateCustomElement('viz-config-source-list', {\n\trenderer: { type: snabbdom },\n\tview,\n\tinitialState,\n\tproperties: {\n\t\tchartType: {},\n\t\tdataSources: {},\n\t\tdataSourceInfos: {},\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t},\n\t...sourceListActions,\n\tstyles,\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type State } from './state';\nimport { type Helpers } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\n\nimport 'sn-devx-components';\nimport '@servicenow/now-accordion';\nimport '@servicenow/now-loader';\nimport '@servicenow/now-label-value';\nimport '@now-par-components/sn-par-pillar';\n\nimport './../source-configuration';\nimport { ConfigPanelEmptyStateView } from './config-panel-empty-view';\nimport { SOURCE_TYPE_ICONS } from '../source-selector/constants';\nimport { ADD_NEW_DATA_SOURCE, SAVE_LABEL } from './constants';\nimport { MULTIPLE_DS_UNSUPPORTED } from '../common/types/chart-type';\nimport { type DataSource } from '../common/types/data-source';\nimport { createSetFocusHandler } from '../helpers/element/focus';\n\nexport default function SourceListView(\n\tstate: State,\n\t{ dispatch }: Helpers<State>\n) {\n\tconst {\n\t\taddNewDataSource,\n\t\teditDataSource,\n\t\teditDataSourceIndex,\n\t\tproperties: { chartType, dataSources, dataSourceInfos, expanded },\n\t\tlabelEditingOnIndex,\n\t} = state;\n\n\tif (!dataSources) {\n\t\treturn undefined;\n\t}\n\n\tconst addNewDSDisabled = MULTIPLE_DS_UNSUPPORTED.includes(chartType);\n\n\tconst multiDataSourceNotSupportedMsg = t(\n\t\t\"Single score, Pie, Donut and Semi donut chart types don't support multiple data sources\"\n\t);\n\n\tconst isEmptyDatasource = dataSources.length <= 0;\n\n\tconst getPillarOptions = (dataSource: DataSource, index: number) => {\n\t\tif (labelEditingOnIndex === index) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\ticon: 'check-fill',\n\t\t\t\t\tid: 'save-label',\n\t\t\t\t\tlabel: t('Save label change'),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t};\n\n\tconst getPillarContextOptions = (dataSource: DataSource, index: number) => {\n\t\tif (labelEditingOnIndex === index) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t{\n\t\t\t\ticon: 'sliders-outline',\n\t\t\t\tid: 'edit',\n\t\t\t\tlabel: t('Edit'),\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: 'pencil-page-outline',\n\t\t\t\tid: 'rename',\n\t\t\t\tlabel: t('Rename'),\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: 'trash-outline',\n\t\t\t\tid: 'remove',\n\t\t\t\tdisabled: dataSources.length <= 1,\n\t\t\t\tlabel: t('Delete'),\n\t\t\t},\n\t\t];\n\t};\n\n\tconst getPillarContent = (dataSource: DataSource, index: number) => {\n\t\tif (labelEditingOnIndex !== index) {\n\t\t\treturn <div className=\"source-list--ds-name\">{dataSource.label}</div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"source-list__label-edit\">\n\t\t\t\t<devx-input\n\t\t\t\t\thook-insert={createSetFocusHandler(elm => elm.querySelector('input'))}\n\t\t\t\t\tclassName=\"viz-config-ds-label\"\n\t\t\t\t\tinputValue={dataSource.label}\n\t\t\t\t\tplaceholder={t('Data source label')}\n\t\t\t\t\ttransparent={true}\n\t\t\t\t\tcompact\n\t\t\t\t\ton-keydown={e => e.keyCode === 13 && dispatch(SAVE_LABEL, {})}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{isEmptyDatasource ? (\n\t\t\t\tConfigPanelEmptyStateView()\n\t\t\t) : (\n\t\t\t\t<now-accordion\n\t\t\t\t\thide-dividers\n\t\t\t\t\theading-level=\"2\"\n\t\t\t\t\ttrigger-icon={{ type: 'chevron', position: 'end' }}>\n\t\t\t\t\t<now-accordion-item\n\t\t\t\t\t\theader={t('Data sources')}\n\t\t\t\t\t\texpanded={expanded}\n\t\t\t\t\t\tappend-to-payload={{ accordionItem: 'dataSources' }}>\n\t\t\t\t\t\t<div className=\"source-list-container\" slot=\"content\">\n\t\t\t\t\t\t\t{dataSources.map((dataSource, dataSourceIndex) => (\n\t\t\t\t\t\t\t\t<sn-par-pillar\n\t\t\t\t\t\t\t\t\tkey={dataSource.id}\n\t\t\t\t\t\t\t\t\tappend-to-payload={{ dataSource, dataSourceIndex }}\n\t\t\t\t\t\t\t\t\thook-insert={\n\t\t\t\t\t\t\t\t\t\tdataSourceIndex === 0 &&\n\t\t\t\t\t\t\t\t\t\tcreateSetFocusHandler(elm =>\n\t\t\t\t\t\t\t\t\t\t\telm.querySelector('.sn-par-pillar')\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ticon={SOURCE_TYPE_ICONS[dataSource.sourceType]}\n\t\t\t\t\t\t\t\t\tactions={getPillarOptions(dataSource, dataSourceIndex)}\n\t\t\t\t\t\t\t\t\tcontext-menu-actions={getPillarContextOptions(\n\t\t\t\t\t\t\t\t\t\tdataSource,\n\t\t\t\t\t\t\t\t\t\tdataSourceIndex\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcompact={labelEditingOnIndex === dataSourceIndex}\n\t\t\t\t\t\t\t\t\tclickable={labelEditingOnIndex !== dataSourceIndex}>\n\t\t\t\t\t\t\t\t\t{getPillarContent(dataSource, dataSourceIndex)}\n\t\t\t\t\t\t\t\t</sn-par-pillar>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\t\tclassName=\"btn-add-data-source\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: ADD_NEW_DATA_SOURCE,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon=\"plus-fill\"\n\t\t\t\t\t\t\t\tlabel={t('Add data source')}\n\t\t\t\t\t\t\t\tdisabled={addNewDSDisabled}\n\t\t\t\t\t\t\t\ttooltipContent={\n\t\t\t\t\t\t\t\t\taddNewDSDisabled ? multiDataSourceNotSupportedMsg : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tvariant=\"secondary\"></now-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</now-accordion-item>\n\t\t\t\t</now-accordion>\n\t\t\t)}\n\t\t\t{state.sourceConfigurationOpened ? (\n\t\t\t\t<viz-config-source-configuration\n\t\t\t\t\toperationMetadata={{\n\t\t\t\t\t\taddNewDataSource,\n\t\t\t\t\t\teditDataSourceIndex,\n\t\t\t\t\t\tallowedSourceType:\n\t\t\t\t\t\t\tdataSources.length > 1 ||\n\t\t\t\t\t\t\t(dataSources.length >= 1 && addNewDataSource)\n\t\t\t\t\t\t\t\t? dataSources[0].sourceType\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t}}\n\t\t\t\t\tdataSource={addNewDataSource ? undefined : editDataSource}\n\t\t\t\t\tdataSourceInfo={\n\t\t\t\t\t\taddNewDataSource\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: dataSourceInfos[editDataSource.id || '']\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\tundefined\n\t\t\t)}\n\t\t</Fragment>\n\t);\n}\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport view from './view';\nimport dataSourceSelectorActions from './actions';\nimport styles from './styles.scss';\nimport { initialState } from './state';\n\ncreateCustomElement('viz-config-source-configuration', {\n\trenderer: { type: snabbdom },\n\tview,\n\tinitialState,\n\tproperties: {\n\t\tdataSource: {},\n\t\tdataSourceInfo: {},\n\t\toperationMetadata: {},\n\t\topened: {\n\t\t\tdefault: false,\n\t\t},\n\t},\n\t...dataSourceSelectorActions,\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport 'sn-devx-components';\nimport '../source-selector';\nimport '../table-configuration';\nimport '../indicator-configuration';\nimport '../empty-state';\nimport { type State } from './state';\n\nimport {\n\tSOURCE_TYPE_INDICATOR,\n\tSOURCE_TYPE_TABLE,\n} from '../common/types/data-source';\n\nexport default function(state: State) {\n\tconst {\n\t\tproperties,\n\t\tsourceType,\n\t\tdisplayLabel = '',\n\t\ttableInfo,\n\t\tindicatorInfo,\n\t} = state;\n\n\tconst isEditMode = Boolean(\n\t\tproperties.dataSource && properties.dataSource.sourceType\n\t);\n\tconst isIndicatorSelected = sourceType === SOURCE_TYPE_INDICATOR;\n\tconst isTableSelected = sourceType === SOURCE_TYPE_TABLE;\n\tconst isSourceSelected = isIndicatorSelected || isTableSelected;\n\n\tif (isEditMode && !isSourceSelected) {\n\t\t// State is not fully initialized - skip the render\n\t\treturn undefined;\n\t}\n\n\tconst resetModalFocus = ({ elm }) =>\n\t\telm.focus && setTimeout(() => elm.focus(), 50);\n\n\tconst footerActions = [\n\t\t{\n\t\t\tlabel: isEditMode ? t('Apply') : t('Add this source'),\n\t\t\tvariant: 'primary',\n\t\t\tdisabled: !isSourceSelected,\n\t\t\tclickActionType: 'NOW_MODAL#ADD_SOURCE',\n\t\t},\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tdisabled: false,\n\t\t\tclickActionType: 'NOW_MODAL#OPENED_SET',\n\t\t},\n\t];\n\n\tconst renderDetailsPanel = () => {\n\t\tif (isIndicatorSelected && indicatorInfo && indicatorInfo.uuid) {\n\t\t\treturn (\n\t\t\t\t<viz-config-indicator-configuration\n\t\t\t\t\tselectedIndicatorInfo={indicatorInfo}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tif (isTableSelected) {\n\t\t\treturn <viz-config-table-configuration tableInfo={tableInfo} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<viz-config-empty-state illustration=\"unconfigured\">\n\t\t\t\t<span slot=\"title\">{t('Select a data source to start')}</span>\n\t\t\t\t<span slot=\"primary\">\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'Once you select a data source from the panel, optionally add conditions, then add your source.'\n\t\t\t\t\t)}\n\t\t\t\t</span>\n\t\t\t</viz-config-empty-state>\n\t\t);\n\t};\n\n\tconst renderPanelHeader = () => {\n\t\tlet label = '';\n\n\t\tif (isIndicatorSelected) {\n\t\t\tlabel = t('Selected indicator');\n\t\t} else if (isTableSelected) {\n\t\t\tlabel = t('Selected table');\n\t\t}\n\n\t\tif (label && displayLabel) {\n\t\t\treturn (\n\t\t\t\t<now-heading\n\t\t\t\t\tclassName=\"heading\"\n\t\t\t\t\tlabel={`${label}: ${displayLabel}`}\n\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t\twont-wrap\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<now-modal\n\t\t\t\thook-insert={resetModalFocus}\n\t\t\t\tsize=\"fullscreen\"\n\t\t\t\theader-label={isEditMode ? t('Edit data source') : t('Add data source')}\n\t\t\t\topened={true}\n\t\t\t\tmanage-opened\n\t\t\t\tfooter-actions={footerActions}>\n\t\t\t\t<div className=\"flex-grid\">\n\t\t\t\t\t<div className=\"source-selector-container\">\n\t\t\t\t\t\t<viz-config-source-selector\n\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t(indicatorInfo &&\n\t\t\t\t\t\t\t\t\tindicatorInfo.uuid &&\n\t\t\t\t\t\t\t\t\tindicatorInfo.uuid.indicator) ||\n\t\t\t\t\t\t\t\t(tableInfo && tableInfo.tableName)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddNewDataSource={properties.operationMetadata.addNewDataSource}\n\t\t\t\t\t\t\tallowedSourceType={properties.operationMetadata.allowedSourceType}\n\t\t\t\t\t\t\tsourceType={sourceType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"source-configuration-panel\">\n\t\t\t\t\t\t{renderPanelHeader()}\n\t\t\t\t\t\t<div className=\"source-configuration-panel-content\">\n\t\t\t\t\t\t\t{renderDetailsPanel()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</now-modal>\n\t\t</div>\n\t);\n}\n","import './source-selector';\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport actions from './actions';\nimport view from './view';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport styles from './styles.scss';\nimport { initialState } from './state';\n\ncreateCustomElement('viz-config-source-selector', {\n\tinitialState,\n\tproperties: {\n\t\tid: { default: '' },\n\t\tsourceType: { default: '' },\n\t\tallowedSourceType: {},\n\t},\n\tview,\n\trenderer: {\n\t\ttype: snabbdom,\n\t},\n\tstyles,\n\t...actions,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\nimport get from 'lodash/get';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tactionTypes,\n\ttype Coeffects,\n\ttype DeclarativeStateUpdate,\n} from '@servicenow/ui-core';\nimport {\n\tTABLES_REQUESTED,\n\tSEARCH_SOURCE,\n\tCOMPONENT_INIT,\n\tTABLES_LOADED,\n\tTABLES_FAILED,\n\tINDICATORS_REQUESTED,\n\tINDICATORS_LOADED,\n\tINDICATORS_FAILED,\n\tSUGGESTED_REQUESTED,\n\tSUGGESTED_LOADED,\n\tSUGGESTED_FAILED,\n\tTABLES,\n\tINDICATORS,\n\tSUGGESTED,\n\tTABLES_ID,\n\tINDICATORS_ID,\n\tSUGGESTED_ID,\n\tLIMIT,\n\tNAME_LIKE,\n\tSOURCE_TYPE_ICONS,\n\tINDICATOR_SUGGESTED_LOADED,\n\tINDICATOR_SUGGESTED_REQUESTED,\n\tINDICATOR_SUGGESTED_FAILED,\n\tMAP_SOURCE_TYPE_TO_ID,\n\tINSUFFICIENT_ROLES,\n} from './constants';\nimport {\n\tSOURCE_TYPE_TABLE,\n\tSOURCE_TYPE_INDICATOR,\n} from '../common/types/data-source';\nimport { VIZ_CONFIG_SOURCE_SELECT_SELECTED } from './constants';\nimport { type State, type ContentTreeItem } from './state';\nimport {\n\tsetItemChildren,\n\tremovePath,\n\thasPath,\n\tclearItemChildren,\n} from './utils';\nimport { effectProxy } from '../helpers/seismic';\n\nconst pathToIndexMap: Object = {\n\t[SUGGESTED_ID]: 0,\n\t[TABLES_ID]: 1,\n\t[INDICATORS_ID]: 2,\n};\n\nconst handleLoadingRequested = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\tconst { loadingPath, isLoadingTables } = state;\n\tconst { item, path } = action.payload;\n\tconst start = (item.children || []).length;\n\n\tif (path[0] === TABLES_ID && !isLoadingTables) {\n\t\tdispatch(TABLES_REQUESTED, {\n\t\t\tstart,\n\t\t\tcount: LIMIT + 1,\n\t\t\tnameContains: state.searchQuery,\n\t\t});\n\t} else if (path[0] === INDICATORS_ID) {\n\t\tdispatch(INDICATORS_REQUESTED, {\n\t\t\tstart,\n\t\t\tcount: LIMIT + 1,\n\t\t\tqueryConditions: `${NAME_LIKE}${state.searchQuery}`,\n\t\t});\n\t} else if (path[0] === SUGGESTED_ID) {\n\t\tdispatch(SUGGESTED_REQUESTED, {\n\t\t\tnameContains: state.searchQuery,\n\t\t});\n\t}\n\n\tconst loadingArray: any = [...removePath(loadingPath, path), { path }];\n\n\tupdateState({\n\t\t...(path[0] === TABLES_ID && { isLoadingTables: true }),\n\t\tloadingPath: loadingArray,\n\t});\n};\n\nconst handleLoadingCancelled = ({\n\tstate,\n\taction,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\tconst { loadingPath } = state;\n\tconst { path } = action.payload;\n\n\tupdateState({\n\t\tloadingPath: [...removePath(loadingPath, path)],\n\t});\n};\n\nconst handleExpandedItemsSet = ({\n\taction,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\tupdateState({\n\t\texpandedItems: action.payload.value,\n\t});\n};\n\nconst handleItemClicked = ({ action, dispatch }: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\tconst item = action.payload.item;\n\n\tif (item.hasOwnProperty('children')) return;\n\n\tconst id = item.id.split(':')[1];\n\tconst displayLabel = item.label;\n\n\tdispatch(VIZ_CONFIG_SOURCE_SELECT_SELECTED, {\n\t\tid,\n\t\tsourceType: item.type,\n\t\tdisplayLabel,\n\t});\n};\n\nconst getSourceItems = (\n\tresults: any,\n\tpath: string,\n\tallowedSourceType?: string\n): ContentTreeItem[] => {\n\tif (results && results.length === LIMIT + 1) {\n\t\tresults.pop();\n\t}\n\n\tconst mappedResults = results.map(result => {\n\t\tconst item: ContentTreeItem = {};\n\n\t\titem.id = `${path}:${result.id}`;\n\t\titem.label = result.label;\n\n\t\tif (path === SUGGESTED_ID) {\n\t\t\tconst sourceType =\n\t\t\t\tresult.type === 'table' ? SOURCE_TYPE_TABLE : SOURCE_TYPE_INDICATOR;\n\n\t\t\titem.icon = SOURCE_TYPE_ICONS[sourceType];\n\t\t\titem.type = sourceType;\n\t\t} else if (path === TABLES_ID) {\n\t\t\titem.type = SOURCE_TYPE_TABLE;\n\t\t} else if (path === INDICATORS_ID) {\n\t\t\titem.type = SOURCE_TYPE_INDICATOR;\n\t\t}\n\n\t\treturn item;\n\t});\n\n\t/**\n\t * FE Filter for suggested when user is editing or adding one\n\t * Data source and we have to limit the type\n\t */\n\tif (path === SUGGESTED_ID && allowedSourceType !== undefined) {\n\t\treturn mappedResults.filter(item => item.type === allowedSourceType);\n\t}\n\n\treturn mappedResults;\n};\n\nconst handleIndicatorSuggestedLoaded = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { loadingPath } = state;\n\n\tlet { items } = state;\n\n\tconst indicators =\n\t\tget(action, 'payload.data.indicators.results.values') || [];\n\n\tconst hasAccessToIndicators =\n\t\tget(action, 'payload.data.indicators.results.result') !==\n\t\tINSUFFICIENT_ROLES;\n\n\tconst indicatorCount = indicators.length;\n\n\titems = setItemChildren(\n\t\tstate.items,\n\t\t[INDICATORS_ID],\n\t\tgetSourceItems(indicators, INDICATORS_ID),\n\t\tindicatorCount\n\t);\n\n\tconst suggested = get(action, 'payload.data.suggested.results') || [];\n\tconst suggestedCount = suggested.length;\n\n\titems = setItemChildren(\n\t\titems,\n\t\t[SUGGESTED_ID],\n\t\tgetSourceItems(suggested, SUGGESTED_ID),\n\t\tsuggestedCount\n\t);\n\n\tupdateState({\n\t\t...state,\n\t\tisLoading: false,\n\t\tloadingPath: removePath(loadingPath, [INDICATORS_ID, SUGGESTED_ID]),\n\t\titems,\n\t\thasAccessToIndicators,\n\t});\n\n\tif (suggestedCount > 0) {\n\t\tdispatch('NOW_CONTENT_TREE#EXPANDED_ITEMS_SET', {\n\t\t\tvalue: [[SUGGESTED_ID]],\n\t\t});\n\n\t\tconst id = state.properties.id;\n\n\t\tdispatch('NOW_CONTENT_TREE#SELECTED_ITEMS_SET', {\n\t\t\tvalue: [[SUGGESTED_ID, `${SUGGESTED_ID}:${id}`]],\n\t\t});\n\t}\n};\n\nconst handleDataLoaded = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tlet path = '';\n\n\tswitch (action.type) {\n\t\tcase TABLES_LOADED:\n\t\t\tpath = TABLES_ID;\n\t\t\tbreak;\n\t\tcase INDICATORS_LOADED:\n\t\t\tpath = INDICATORS_ID;\n\t\t\tbreak;\n\t\tcase SUGGESTED_LOADED:\n\t\t\tpath = SUGGESTED_ID;\n\t\t\tbreak;\n\t}\n\n\tconst { allowedSourceType } = state.properties;\n\tconst mappedSourceTypeLimit = MAP_SOURCE_TYPE_TO_ID[allowedSourceType];\n\n\tconst results =\n\t\tget(\n\t\t\taction,\n\t\t\taction.type === SUGGESTED_LOADED\n\t\t\t\t? 'payload.data.AppPARConfig_Query.results'\n\t\t\t\t: 'payload.data.AppPARConfig_Query.results.values'\n\t\t) || [];\n\n\tlet count = results && results.length;\n\n\tif (count === LIMIT + 1) {\n\t\tresults.pop();\n\t}\n\n\tconst children: ContentTreeItem[] = getSourceItems(\n\t\tresults,\n\t\tpath,\n\t\tallowedSourceType\n\t);\n\n\tif (allowedSourceType !== undefined) {\n\t\tif (path === SUGGESTED_ID) {\n\t\t\tcount = children.length;\n\t\t}\n\n\t\tif (path === mappedSourceTypeLimit) {\n\t\t\tconst id = state.properties.id;\n\n\t\t\tdispatch('NOW_CONTENT_TREE#SELECTED_ITEMS_SET', {\n\t\t\t\tvalue: [\n\t\t\t\t\t[SUGGESTED_ID, `${SUGGESTED_ID}:${id}`],\n\t\t\t\t\t[mappedSourceTypeLimit, `${mappedSourceTypeLimit}:${id}`],\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}\n\n\tif (state.searchQuery || action.type == SUGGESTED_LOADED) {\n\t\tconst pathToExpand =\n\t\t\taction.type == SUGGESTED_LOADED &&\n\t\t\tchildren.length <= 0 &&\n\t\t\tallowedSourceType !== undefined\n\t\t\t\t? mappedSourceTypeLimit\n\t\t\t\t: path;\n\n\t\tconst pushToExpandedItems: DeclarativeStateUpdate = {\n\t\t\tpath: 'expandedItems',\n\t\t\toperation: 'push',\n\t\t\tvalue: [pathToExpand],\n\t\t};\n\n\t\tupdateState(pushToExpandedItems);\n\t}\n\n\tconst { items, loadingPath } = state;\n\tconst index = pathToIndexMap[path];\n\n\t/**\n\t * Update items separately via declarative update\n\t * To avoid cloning & racing condition which would\n\t * Erase other or not assign other values if 2 or more sources\n\t * are being loaded at the same time (i.e.: first time render)\n\t */\n\tupdateState({\n\t\toperation: 'merge',\n\t\tpath: `items[${index}]`,\n\t\tvalue: {\n\t\t\tchildren: [...(items[index].children || []), ...children],\n\t\t\tchildrenAvailable: (items[index].children || []).length + count,\n\t\t},\n\t});\n\n\tupdateState({\n\t\tisLoading: false,\n\t\tloadingPath: removePath(loadingPath, [path]),\n\t\t...(path === TABLES_ID && { isLoadingTables: false }),\n\t});\n};\n\nconst handleChildrenFailed = ({\n\tstate,\n\taction,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tlet path;\n\n\tswitch (action.type) {\n\t\tcase TABLES_FAILED: {\n\t\t\tpath = [TABLES_ID];\n\t\t\tbreak;\n\t\t}\n\t\tcase INDICATORS_FAILED: {\n\t\t\tpath = [INDICATORS_ID];\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\treturn;\n\t}\n\n\tconst { loadingPath } = state;\n\n\t// Only mark the path with a loading error if it in the loadingPath list\n\t// If it has been removed from the loadingPath list, loading was cancelled\n\tif (hasPath(loadingPath, path))\n\t\tupdateState({\n\t\t\tloadingPath: [...removePath(loadingPath, path), { path, error: true }],\n\t\t});\n};\n\nconst handleTablesRequest = createGraphQLEffect(\n\t`query($start: Int, $count: Int, $nameContains: String) {\n\t\tAppPARConfig_Query {\n\t\t\tresults: tables(start: $start, count: $count, nameContains: $nameContains) {\n\t\t\t\tvalues {\n\t\t\t\t\tid: name\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['start', 'count', 'nameContains'],\n\t\tsuccessActionType: TABLES_LOADED,\n\t\terrorActionType: TABLES_FAILED,\n\t}\n);\n\nconst handleIndicatorsRequest = createGraphQLEffect(\n\t`query($start: Int, $count: Int, $queryConditions: String){\n\t\tAppPARConfig_Query {\n\t\t\tresults: indicators(start: $start, count: $count, queryConditions: $queryConditions) {\n\t\t\t\tvalues {\n\t\t\t\t\tid: sysID\n\t\t\t\t\tlabel: name\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\ttemplateVarList: ['tableName', 'id', 'label'],\n\t\tvariableList: ['start', 'count', 'queryConditions'],\n\t\tsuccessActionType: INDICATORS_LOADED,\n\t\terrorActionType: INDICATORS_FAILED,\n\t}\n);\n\nconst handleSuggestedRequest = createGraphQLEffect(\n\t`query($nameContains: String) {\n\t\tAppPARConfig_Query {\n\t\t\tresults: suggestions(nameContains: $nameContains) {\n\t\t\t\ttype\n\t\t\t\tid\n\t\t\t\tlabel\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['nameContains'],\n\t\tsuccessActionType: SUGGESTED_LOADED,\n\t\terrorActionType: SUGGESTED_FAILED,\n\t}\n);\n\nexport const handleIndicatorSuggestedRequested = createGraphQLEffect(\n\t`query($count: Int) {\n\t\tindicators: AppPARConfig_Query {\n\t\t\tresults: indicators(start: 0, count: $count) {\n\t\t\t\tvalues {\n\t\t\t\t\tid: sysID\n\t\t\t\t\tlabel: name\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t}\n\t\tsuggested: AppPARConfig_Query {\n\t\t\tresults: suggestions {\n\t\t\t\ttype\n\t\t\t\tid\n\t\t\t\tlabel\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['count'],\n\t\tsuccessActionType: INDICATOR_SUGGESTED_LOADED,\n\t\terrorActionType: INDICATOR_SUGGESTED_FAILED,\n\t}\n);\n\nconst handleSearch = ({\n\tdispatch,\n\taction,\n\tupdateState,\n\tstate,\n}: Coeffects<State, any>) => {\n\tlet items: ContentTreeItem[] = [...state.items];\n\n\titems = clearItemChildren(items, [TABLES_ID]);\n\titems = clearItemChildren(items, [INDICATORS_ID]);\n\titems = clearItemChildren(items, [SUGGESTED_ID]);\n\tupdateState({\n\t\tsearchQuery: action.payload && action.payload.trim(),\n\t\titems,\n\t\texpandedItems: [],\n\t\tloadingPath: [],\n\t});\n\tdispatch(COMPONENT_INIT, { isLoadSearchResult: true });\n};\n\nconst handleComponentInit = ({\n\tstate,\n\tdispatch,\n\tupdateState,\n\taction,\n}: Coeffects<State, any>) => {\n\tconst { isLoadSearchResult } = action.payload;\n\tconst { allowedSourceType } = state.properties;\n\tconst mappedSourceTypeId = MAP_SOURCE_TYPE_TO_ID[allowedSourceType];\n\tconst suggestedObject: ContentTreeItem = {\n\t\tid: SUGGESTED_ID,\n\t\tlabel: SUGGESTED,\n\t\ticon: 'lightbulb-outline',\n\t\tchildrenAvailable: 0,\n\t\tactions: [\n\t\t\t{\n\t\t\t\tlabel: SUGGESTED,\n\t\t\t},\n\t\t],\n\t};\n\tconst tableObject: ContentTreeItem = {\n\t\tid: TABLES_ID,\n\t\tlabel: TABLES,\n\t\ticon: 'list-fill',\n\t\tchildrenAvailable:\n\t\t\tisLoadSearchResult ||\n\t\t\t(allowedSourceType && mappedSourceTypeId !== TABLES_ID)\n\t\t\t\t? 0\n\t\t\t\t: 1,\n\t\t...(!isLoadSearchResult && { children: [] }),\n\t\tactions: [\n\t\t\t{\n\t\t\t\tlabel: TABLES,\n\t\t\t},\n\t\t],\n\t};\n\tconst indicatorObject: ContentTreeItem = {\n\t\tid: INDICATORS_ID,\n\t\tlabel: INDICATORS,\n\t\ticon: 'analytics-center-outline',\n\t\tchildrenAvailable: 0,\n\t\tactions: [\n\t\t\t{\n\t\t\t\tlabel: INDICATORS,\n\t\t\t},\n\t\t],\n\t};\n\n\tconst items = [suggestedObject, tableObject, indicatorObject];\n\n\tupdateState({\n\t\tisLoading: true,\n\t\titems,\n\t});\n\n\tif (isLoadSearchResult && !allowedSourceType) {\n\t\tdispatch('NOW_CONTENT_TREE#LOADING_REQUESTED', {\n\t\t\tpath: [TABLES_ID],\n\t\t\titem: [],\n\t\t});\n\n\t\tdispatch('NOW_CONTENT_TREE#LOADING_REQUESTED', {\n\t\t\tpath: [INDICATORS_ID],\n\t\t\titem: [],\n\t\t});\n\n\t\tdispatch('NOW_CONTENT_TREE#LOADING_REQUESTED', {\n\t\t\tpath: [SUGGESTED_ID],\n\t\t\titem: [],\n\t\t});\n\t} else if (allowedSourceType || isLoadSearchResult) {\n\t\tdispatch('NOW_CONTENT_TREE#LOADING_REQUESTED', {\n\t\t\tpath: [mappedSourceTypeId],\n\t\t\titem: [],\n\t\t});\n\n\t\tdispatch('NOW_CONTENT_TREE#LOADING_REQUESTED', {\n\t\t\tpath: [SUGGESTED_ID],\n\t\t\titem: [],\n\t\t});\n\t} else\n\t\tdispatch(INDICATOR_SUGGESTED_REQUESTED, {\n\t\t\tcount: LIMIT + 1,\n\t\t});\n};\n\nconst handleItemSet = ({ action, updateState }: Coeffects<State, any>) => {\n\tupdateState({\n\t\toperation: 'set',\n\t\tvalue: action.payload.value,\n\t\tpath: 'selectedItems',\n\t});\n};\n\nexport default {\n\tactionHandlers: {\n\t\t'NOW_CONTENT_TREE#EXPANDED_ITEMS_SET': handleExpandedItemsSet,\n\t\t'NOW_CONTENT_TREE#LOADING_REQUESTED': handleLoadingRequested,\n\t\t'NOW_CONTENT_TREE#LOADING_CANCELLED': handleLoadingCancelled,\n\t\t'NOW_CONTENT_TREE#ITEM_CLICKED': handleItemClicked,\n\t\t'NOW_CONTENT_TREE#SELECTED_ITEMS_SET': handleItemSet,\n\t\t[INDICATOR_SUGGESTED_REQUESTED]: effectProxy(\n\t\t\thandleIndicatorSuggestedRequested\n\t\t),\n\t\t[INDICATOR_SUGGESTED_LOADED]: handleIndicatorSuggestedLoaded,\n\t\t[INDICATOR_SUGGESTED_FAILED]: handleChildrenFailed,\n\t\t[TABLES_REQUESTED]: handleTablesRequest,\n\t\t[TABLES_LOADED]: handleDataLoaded,\n\t\t[TABLES_FAILED]: handleChildrenFailed,\n\t\t[INDICATORS_REQUESTED]: handleIndicatorsRequest,\n\t\t[INDICATORS_LOADED]: handleDataLoaded,\n\t\t[INDICATORS_FAILED]: handleChildrenFailed,\n\t\t[SUGGESTED_REQUESTED]: handleSuggestedRequest,\n\t\t[SUGGESTED_LOADED]: handleDataLoaded,\n\t\t[SUGGESTED_FAILED]: handleChildrenFailed,\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: handleComponentInit,\n\t\t[COMPONENT_INIT]: handleComponentInit,\n\t\t[SEARCH_SOURCE]: handleSearch,\n\t},\n};\n","// @flow\nimport isEqual from 'lodash/isEqual';\nimport isPlainObject from 'lodash/isPlainObject';\nimport setWith from 'lodash/setWith';\nimport clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport { type LoadingItem, type ContentTreeItem } from './state';\n\nconst unwrapPath = (path: any) => (isPlainObject(path) ? path.path : path);\n\nexport const hasPath = (list: LoadingItem[], path: string[]) =>\n\tlist.findIndex(p => isEqual(unwrapPath(p), unwrapPath(path))) > -1;\nexport const removePath = (\n\tlist: LoadingItem[],\n\tpath: string[]\n): LoadingItem[] => list.filter(p => !isEqual(unwrapPath(p), unwrapPath(path)));\nconst addPath = (list: LoadingItem[], path: string[]): LoadingItem[] => [\n\t...list,\n\t{ path },\n];\n\nexport const togglePath = (\n\tlist: LoadingItem[],\n\tpath: string[]\n): LoadingItem[] =>\n\thasPath(list, path) ? removePath(list, path) : addPath(list, path);\n\nconst toLodashPath = (items: ContentTreeItem[], path: string[]) => {\n\tlet ids = [...path];\n\tlet next: ContentTreeItem[] = items;\n\tlet result = [];\n\n\twhile (ids.length) {\n\t\tconst id = ids.shift();\n\t\tconst index = next.findIndex(item => item.id === id);\n\n\t\tif (ids.length === 0) {\n\t\t\treturn [...result, index];\n\t\t}\n\n\t\tresult = [...result, index, 'children'];\n\t\tif (next[index].children) {\n\t\t\tnext = next[index].children;\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\nconst setItem = (\n\titems: ContentTreeItem[],\n\tpath: string[],\n\tfn\n): ContentTreeItem[] => {\n\tconst lodashPath = toLodashPath(items, path);\n\tconst item = get(items, lodashPath);\n\n\treturn setWith(clone(items), lodashPath, clone(fn(item)), clone);\n};\n\nexport const setItemChildren = (\n\titems: ContentTreeItem[],\n\tpath: string[],\n\tchildren: ContentTreeItem[],\n\tchildrenCount: number\n): ContentTreeItem[] =>\n\tsetItem(items, path, item => ({\n\t\t...item,\n\t\tchildren: [...(item.children || []), ...children],\n\t\tchildrenAvailable: (item.children || []).length + childrenCount,\n\t}));\n\nexport const clearItemChildren = (\n\titems: ContentTreeItem[],\n\tpath: string[]\n): ContentTreeItem[] =>\n\tsetItem(items, path, item => ({\n\t\t...item,\n\t\tchildren: [],\n\t\tchildrenAvailable: 0,\n\t}));\n","module.exports = __TECTONIC__lodash_4_17_4[\"isPlainObject\"];","module.exports = __TECTONIC__lodash_4_17_4[\"setWith\"];","module.exports = __TECTONIC__lodash_4_17_4[\"clone\"];","import '@servicenow/now-content-tree';\nimport { Fragment, createRef } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport '@now-par-components/sn-par-popover';\nimport '@servicenow/now-icon';\nimport { jsxif } from '../helpers/seismic';\n\nexport default (state, { dispatch }) => {\n\tconst {\n\t\titems,\n\t\tselectedItems,\n\t\texpandedItems,\n\t\tloadingPath,\n\t\tsearchQuery,\n\t\tisLoading,\n\t\thasAccessToIndicators,\n\t} = state;\n\n\tconst handleKeyPress = e => {\n\t\tif (e.keyCode === 13 && e.target.value !== searchQuery) {\n\t\t\tdispatch('SEARCH_SOURCE', e.target.value);\n\t\t}\n\t};\n\n\tconst onlyFilledSections = items.filter(item => item.childrenAvailable > 0);\n\n\tconst hasAnyResults = items.reduce(\n\t\t(final, item) => item.childrenAvailable > 0 || final,\n\t\tfalse\n\t);\n\n\tconst loadingElement = (\n\t\t<div className=\"loading-container\">\n\t\t\t<now-loader label={t('Loading...')} size=\"lg\" />\n\t\t</div>\n\t);\n\n\tconst noResultText = t(\n\t\t'Your search for \"{0}\" didn\\'t return any results.',\n\t\tsearchQuery\n\t);\n\n\tconst noResultsFound = (\n\t\t<div className=\"source-selector-empty-state\">\n\t\t\t<div className=\"source-selector-empty-state-row\">\n\t\t\t\t<h1 className=\"source-selector-empty-state-header\">\n\t\t\t\t\t{t('No results found.')}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div className=\"source-selector-empty-state-row\">\n\t\t\t\t<span className=\"source-selector-empty-state-body\">{noResultText}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst treeComponent = (\n\t\t<div className=\"content-tree-container\">\n\t\t\t<now-content-tree\n\t\t\t\tselect=\"single\"\n\t\t\t\titems={onlyFilledSections}\n\t\t\t\tsearch-term={searchQuery}\n\t\t\t\tselected-items={selectedItems}\n\t\t\t\tmanage-selected-items\n\t\t\t\texpanded-items={expandedItems}\n\t\t\t\tloading-items={loadingPath}\n\t\t\t\toverflow=\"truncate\"\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tconst dynamicContent = hasAnyResults ? treeComponent : noResultsFound;\n\n\tconst addDataSourcePopOverContent = (\n\t\t<div className=\"popover-container\" id=\"popover-datasources\">\n\t\t\t{jsxif(hasAccessToIndicators) && (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"popover-title\">\n\t\t\t\t\t\t<now-icon icon=\"analytics-center-outline\" size=\"md\" />\n\t\t\t\t\t\t<label className=\"popover-title-label\">{t('Indicators')}</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t'Predefined KPIs that show trends and help forecast future events.'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<div className=\"popover-title popover-tables\">\n\t\t\t\t\t<now-icon icon=\"list-outline\" size=\"md\" />\n\t\t\t\t\t<label className=\"popover-title-label\">{t('Tables')}</label>\n\t\t\t\t</div>\n\n\t\t\t\t<label>\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'Show the current state of your data. You can also add conditions to tables.'\n\t\t\t\t\t)}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className=\"source-selector\">\n\t\t\t<div className=\"source-selector-select-source\">\n\t\t\t\t<label>{t('Select a source')}</label>\n\t\t\t\t<now-popover interactionType=\"none\" id=\"popover-datasources\">\n\t\t\t\t\t<now-icon slot=\"trigger\" icon=\"info-circle-outline\" />\n\t\t\t\t\t<viz-config-popover-content\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tpopOverContent={addDataSourcePopOverContent}\n\t\t\t\t\t/>\n\t\t\t\t</now-popover>\n\t\t\t</div>\n\n\t\t\t<div className=\"search-container left-align\">\n\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t<now-icon icon=\"magnifying-glass-outline\" size=\"md\" />\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\taria-label={t('Search data sources')}\n\t\t\t\t\tclassName=\"search-box\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\ton-keydown={handleKeyPress}\n\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\taria-label={t('Search sources')}\n\t\t\t\t\tplaceholder={t('Search sources')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{isLoading ? loadingElement : dynamicContent}\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_content_tree;","module.exports = __TECTONIC__$servicenow_now_icon;","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".source-selector{height:100%;width:100%;display:flex;flex-direction:column}.source-selector now-popover{cursor:pointer;margin-left:.625rem}.source-selector-select-source{font-size:1.25rem;color:RGB(var(--now-color--neutral-12,66,80,81));margin-bottom:1.6875rem}.source-selector-select-source label{cursor:pointer}.source-selector-select-source button{padding:0;margin:0;margin-inline-start:.4375rem;vertical-align:middle}.source-selector-select-source button::-moz-focus-inner{border-style:none}.source-selector-select-source button:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px 2px 0 rgba(0,0,0,.3);outline:none}.source-selector-select-source button,.source-selector-select-source button:active,.source-selector-select-source button:hover{border:none;background-color:transparent}.source-selector .loading-container{padding-top:.75rem;width:100%;height:100%}.source-selector-empty-state{display:flex;align-items:center;flex-flow:row wrap;justify-content:center;height:auto;padding:25% 6rem;word-break:break-word}.source-selector-empty-state-row{margin-top:.5rem}.source-selector-empty-state-row:first-of-type{margin-top:0}.source-selector-empty-state-header{color:RGB(var(--now-color--neutral-12,66,80,81));font-size:1rem;margin:0;max-width:600px;padding:0;text-align:center}.source-selector-empty-state-body{color:RGB(var(--now-color--neutral-9,99,114,116));display:block;font-size:.75rem;max-width:480px;text-align:center}.source-selector .search-container{height:2.5rem;position:relative}.source-selector .search-container .icon{position:absolute;padding:.25rem;pointer-events:none}.source-selector .search-container .search-box{font-size:1rem;height:2rem;width:100%;padding:.25rem;margin:0;-o-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;border:none;border-bottom:1px solid rgb(var(--now-color--neutral-4,191,197,198));line-height:1.25;font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}.source-selector .search-container .search-box::placeholder{font-style:italic;font-weight:100}.source-selector .search-container .search-box:focus{outline:none;background:RGB(var(--now-color--primary-0,221,237,233))}.source-selector .search-container.left-align .icon{left:0}.source-selector .search-container.left-align .search-box{padding-left:2rem}.source-selector .search-container.right-align .icon{right:0}.source-selector .search-container.right-align .search-box{padding-right:2rem}.source-selector .content-tree-container{height:100%;overflow-y:auto;width:auto}.source-selector .content-tree-container>now-content-tree{height:100%}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport view from './view';\nimport actions from './actions';\nimport styles from './styles.scss';\nimport { initialState } from './state';\n\ncreateCustomElement('viz-config-table-configuration', {\n\trenderer: { type: snabbdom },\n\tview,\n\tinitialState,\n\tproperties: {\n\t\ttableInfo: {},\n\t},\n\t...actions,\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type Helpers } from '@servicenow/ui-core';\nimport { jsxif } from '../helpers/seismic';\nimport { t } from 'sn-translate';\nimport { type State } from './state';\nimport { TableRecordsView } from './table-records-view';\nimport { FilterView } from './filter-view';\n\nexport default function(state: State, helpers: Helpers<State>) {\n\tif (state.tableName !== state.properties.tableInfo.tableName) {\n\t\t// State is not updated with latest props - skip render\n\t\treturn;\n\t}\n\n\treturn (\n\t\t// We want this always be rerendered when we change the table\n\t\t<div key={state.properties.tableInfo.tableName}>\n\t\t\t{jsxif(state.isFilterLoading || state.isTableLoading) && (\n\t\t\t\t<div\n\t\t\t\t\tkey=\"loading-container\"\n\t\t\t\t\tclassName=\"table-configuration-loading-container\">\n\t\t\t\t\t<now-loader label={t('Loading...')} size=\"lg\" />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{jsxif(!state.isFilterLoading && !state.isTableLoading) &&\n\t\t\t\tFilterView(state, helpers)}\n\n\t\t\t{jsxif(!state.isFilterLoading && !global.TEST_SKIP_RENDER_RECORDS) && (\n\t\t\t\t<div\n\t\t\t\t\tkey=\"table-container\"\n\t\t\t\t\tclass={{\n\t\t\t\t\t\t'table-container': true,\n\t\t\t\t\t\t'is-loading': state.isTableLoading,\n\t\t\t\t\t}}>\n\t\t\t\t\t{TableRecordsView(state)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport '@servicenow/now-record-list-connected';\nimport { type State } from './state';\n\nconst getPreviewPredefinedFilter = (state: State) => {\n\tconst {\n\t\tpredefinedFilters,\n\t\tproperties: {\n\t\t\ttableInfo: { previewPredefinedFilterId },\n\t\t},\n\t} = state;\n\n\tif (!previewPredefinedFilterId) {\n\t\treturn undefined;\n\t}\n\n\treturn predefinedFilters.find(({ id }) => id === previewPredefinedFilterId);\n};\n\nconst getFilterQuery = (state: State) => {\n\tconst {\n\t\tproperties: {\n\t\t\ttableInfo: { previewFilterQuery },\n\t\t},\n\t} = state;\n\n\tconst filterQueryItems = [];\n\n\tif (previewFilterQuery) filterQueryItems.push(previewFilterQuery);\n\n\tconst predefinedFilter = getPreviewPredefinedFilter(state);\n\n\tif (predefinedFilter) filterQueryItems.push(predefinedFilter.query);\n\n\treturn filterQueryItems.join('^');\n};\n\nexport function TableRecordsView(state: State) {\n\tconst tableName = state.properties.tableInfo.tableName;\n\tconst filterQuery = getFilterQuery(state);\n\n\treturn (\n\t\t<now-record-list-connected-snapshot\n\t\t\ttable={tableName}\n\t\t\tlistTitle={t('Preview record list')}\n\t\t\thideFilterPanel={true}\n\t\t\thideColumnResizing={false}\n\t\t\thideRefreshButton={true}\n\t\t\thideCellFilter={true}\n\t\t\thidePanelAdvanced={true}\n\t\t\thideRowSelector={true}\n\t\t\thideUnnecessaryRowSelectors={true}\n\t\t\tlimit={10}\n\t\t\thideViewAll={true}\n\t\t\thidePagination={false}\n\t\t\thideColumnFiltering={true}\n\t\t\thideColumnSorting={false}\n\t\t\tquery={filterQuery}\n\t\t/>\n\t);\n}\n","module.exports = __TECTONIC__$servicenow_now_record_list_connected;","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type Helpers } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-collapse';\nimport 'sn-devx-components';\nimport { type State } from './state';\nimport {\n\tREMOVE_PREDEFINED_CONDITION,\n\tEDIT_FILTER,\n\tUPDATE_TABLE_PREVIEW,\n\tTABLE_CONFIG_CHANGED,\n\tADD_CUSTOM_CONDITIONS,\n} from './constants';\n\nimport { ConditionBuilderView } from './condition-builder-view';\n\nconst getSelectedPredefinedFilter = (state: State) => {\n\tconst {\n\t\tpredefinedFilters,\n\t\tproperties: {\n\t\t\ttableInfo: { predefinedFilterId },\n\t\t},\n\t} = state;\n\n\tif (!predefinedFilterId) {\n\t\treturn undefined;\n\t}\n\n\treturn predefinedFilters.find(({ id }) => id === predefinedFilterId);\n};\n\nconst EditFilterView = (state: State) => {\n\tconst {\n\t\tpredefinedFilters,\n\t\tproperties: {\n\t\t\ttableInfo: {\n\t\t\t\tfilterQuery,\n\t\t\t\tpredefinedFilterId,\n\t\t\t\tpreviewFilterQuery,\n\t\t\t\tpreviewPredefinedFilterId,\n\t\t\t\tshowCustomConditions,\n\t\t\t},\n\t\t},\n\t} = state;\n\n\tconst choices = predefinedFilters.map(item => ({\n\t\tid: item.id,\n\t\tlabel: item.name,\n\t\tquery: item.query,\n\t}));\n\n\tconst selectedFilter = getSelectedPredefinedFilter(state);\n\n\treturn (\n\t\t<div className=\"edit-filter\">\n\t\t\t<div className=\"predefined-condition-container\">\n\t\t\t\t{choices.length ? (\n\t\t\t\t\t<div className=\"predefined-condition-selector\">\n\t\t\t\t\t\t<devx-typeahead\n\t\t\t\t\t\t\tlabel={t('Predefined conditions')}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tpayloadActionType: 'predefinedConditionTypeahead',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcompact\n\t\t\t\t\t\t\titems={choices}\n\t\t\t\t\t\t\tplaceholder={t('Select a predefined condition')}\n\t\t\t\t\t\t\tname=\"predefined_conditions\"\n\t\t\t\t\t\t\tselected-item={predefinedFilterId}\n\t\t\t\t\t\t\tkey={predefinedFilterId}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{predefinedFilterId ? (\n\t\t\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: REMOVE_PREDEFINED_CONDITION,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel={t('Remove')}\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\ticon-start=\"trash-outline\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className=\"condition-label\">{t('Predefined conditions')}</div>\n\t\t\t\t\t\t<div className=\"no-conditions-label\">\n\t\t\t\t\t\t\t{t('We couldn’t find any predefined conditions for this table.')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t\t{selectedFilter ? (\n\t\t\t\t\t<div className=\"selected-predefined-condition\">\n\t\t\t\t\t\t<span>{t('Conditions:')}</span>\n\t\t\t\t\t\t<span>{selectedFilter.readableQuery}</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className=\"custom-conditions-container\">\n\t\t\t\t{!showCustomConditions ? (\n\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: ADD_CUSTOM_CONDITIONS,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ticon-start=\"plus-fill\"\n\t\t\t\t\t\tlabel={t('Add custom conditions')}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"secondary\"></now-button-bare>\n\t\t\t\t) : null}\n\t\t\t\t<div\n\t\t\t\t\tclass={{\n\t\t\t\t\t\t'condition-builder': true,\n\t\t\t\t\t\t'is-visible': showCustomConditions,\n\t\t\t\t\t}}>\n\t\t\t\t\t{ConditionBuilderView(state)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"edit-filter-actions\">\n\t\t\t\t<now-button\n\t\t\t\t\tclassName=\"btn-update-preview\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: UPDATE_TABLE_PREVIEW,\n\t\t\t\t\t}}\n\t\t\t\t\tlabel={t('Run')}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tfilterQuery === previewFilterQuery &&\n\t\t\t\t\t\tpredefinedFilterId === previewPredefinedFilterId\n\t\t\t\t\t}\n\t\t\t\t\tvariant=\"secondary\"></now-button>\n\t\t\t\t{/* <now-button\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: DISCARD_FILTER,\n\t\t\t\t\t}}\n\t\t\t\t\tlabel={t('Discard')}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tdisabled={!predefinedFilterId && !filterQuery}\n\t\t\t\t\tvariant=\"tertiary\"></now-button> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst DisplayFilterView = (state: State) => {\n\tconst selectedFilter = getSelectedPredefinedFilter(state);\n\n\tconst { readableFilterQuery } = state;\n\n\treturn (\n\t\t<div className=\"display-filter\">\n\t\t\t{selectedFilter ? (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<label className=\"condition-label\">\n\t\t\t\t\t\t{t('Predefined conditions')}\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"selected-predefined-condition\">\n\t\t\t\t\t\t<span>{selectedFilter.name}:</span>\n\t\t\t\t\t\t<span>{selectedFilter.readableQuery}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t) : null}\n\t\t\t{readableFilterQuery ? (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<label className=\"condition-label\">{t('Custom conditions')}</label>\n\t\t\t\t\t<div className=\"selected-custom-condition\">\n\t\t\t\t\t\t<span>{readableFilterQuery}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nconst getFilterTag = (state: State) => {\n\tconst {\n\t\tproperties: {\n\t\t\ttableInfo: { predefinedFilterId, filterQuery, isExpanded },\n\t\t},\n\t} = state;\n\n\tif (isExpanded) {\n\t\treturn null;\n\t}\n\n\tlet filterTagLabel = '';\n\n\tif (predefinedFilterId) {\n\t\tif (filterQuery) {\n\t\t\tfilterTagLabel = t('Predefined and custom conditions applied');\n\t\t} else {\n\t\t\tfilterTagLabel = t('Predefined conditions applied');\n\t\t}\n\t} else if (filterQuery) {\n\t\tfilterTagLabel = t('Custom conditions applied');\n\t}\n\n\tif (!filterTagLabel) {\n\t\treturn null;\n\t}\n\n\treturn <span className=\"filter-tag\">{filterTagLabel}</span>;\n};\n\nexport function FilterView(state: State, { dispatch }: Helpers<State>) {\n\tconst {\n\t\tproperties: {\n\t\t\ttableInfo: { isExpanded, isEditMode },\n\t\t},\n\t} = state;\n\n\treturn (\n\t\t<div className={'filter-accordion' + (isExpanded ? ' expanded' : '')}>\n\t\t\t<div className=\"filter-header\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"filter-header-label\"\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tdispatch(TABLE_CONFIG_CHANGED, { isExpanded: !isExpanded });\n\t\t\t\t\t}}>\n\t\t\t\t\t<now-icon\n\t\t\t\t\t\tclassName=\"icon-filter\"\n\t\t\t\t\t\ticon=\"filter-fill\"\n\t\t\t\t\t\tsize=\"md\"></now-icon>\n\t\t\t\t\t<span className=\"filter-title\">{t('Filters')}</span>\n\t\t\t\t\t{getFilterTag(state)}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"filter-header-action\">\n\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: EDIT_FILTER,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thide-padding\n\t\t\t\t\t\ticon-start=\"pencil-fill\"\n\t\t\t\t\t\tlabel={t('Edit')}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tdisabled={isEditMode}\n\t\t\t\t\t\tvariant=\"secondary\"></now-button-bare>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass={{\n\t\t\t\t\t'filter-content': true,\n\t\t\t\t\texpanded: isExpanded,\n\t\t\t\t}}>\n\t\t\t\t{isEditMode ? EditFilterView(state) : DisplayFilterView(state)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","module.exports = __TECTONIC__$servicenow_now_collapse;","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport '@servicenow/now-condition-builder';\nimport { type State } from './state';\nimport { t } from 'sn-translate';\n\nexport function ConditionBuilderView(state: State) {\n\tconst { initialFilterQuery } = state;\n\tconst { tableName } = state.properties.tableInfo;\n\n\treturn (\n\t\t<div>\n\t\t\t{!global.TEST_SKIP_RENDER_CB ? (\n\t\t\t\t<now-condition-builder\n\t\t\t\t\ttableName={tableName}\n\t\t\t\t\ttableLabel={t('Custom')}\n\t\t\t\t\tencodedQuery={initialFilterQuery}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","module.exports = __TECTONIC__$servicenow_now_condition_builder;","// @flow\n\nimport get from 'lodash/get';\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { effectProxy } from '../helpers/seismic';\nimport { hasPropertyChanged } from '../helpers/props';\nimport { type State, type PredefinedFilter } from './state';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { t } from 'sn-translate';\nimport {\n\tRETRIEVE_PREDEFINED_CONDITIONS,\n\tPREDEFINED_CONDITIONS_SUCCESS,\n\tREMOVE_PREDEFINED_CONDITION,\n\tTABLE_CONFIG_CHANGED,\n\tEDIT_FILTER,\n\tDISCARD_FILTER,\n\tUPDATE_TABLE_PREVIEW,\n\tADD_CUSTOM_CONDITIONS,\n\tRETRIEVE_READABLE_QUERY,\n\tRETRIEVE_READABLE_QUERY_SUCCESS,\n} from './constants';\n\nconst handleBootstrap = (coeffects: Coeffects<State, void>) => {\n\tconst { tableInfo } = coeffects.state.properties;\n\n\tif (!tableInfo) {\n\t\treturn;\n\t}\n\n\tonTableChange(coeffects);\n};\n\nconst handlePropertyChange = (coeffects: Coeffects<State, any>) => {\n\tif (hasPropertyChanged(coeffects, 'tableInfo', ['tableName'])) {\n\t\tonTableChange(coeffects);\n\t}\n};\n\nconst onTableChange = (coeffects: Coeffects<State, any>) => {\n\tconst {\n\t\ttableName,\n\t\tfilterQuery,\n\t\tisEditMode,\n\t} = coeffects.state.properties.tableInfo;\n\n\tcoeffects.updateState({\n\t\ttableName,\n\t\tinitialFilterQuery: filterQuery,\n\t\tisFilterLoading: true,\n\t\tisTableLoading: true,\n\t\tpredefinedFilters: [],\n\t\treadableFilterQuery: '',\n\t});\n\n\tcoeffects.dispatch(RETRIEVE_PREDEFINED_CONDITIONS, {\n\t\tqueryConditions: `table=${tableName}`,\n\t});\n\n\tif (!isEditMode && filterQuery) {\n\t\tcoeffects.dispatch(RETRIEVE_READABLE_QUERY, {\n\t\t\ttable: tableName,\n\t\t\tquery: filterQuery,\n\t\t});\n\t}\n};\n\nexport const loadPredefinedConditions = createGraphQLEffect(\n\t`query($queryConditions: String) {\n        GlideRecord_Query {\n            sys_report_source(queryConditions: $queryConditions, pagination: {limit: 1000}) {\n                _results {\n\t\t\t\t\tsys_id { value }\n                    name { value }\n                    filter { value displayValue }\n                }\n            }\n        }\n    }`,\n\t{\n\t\tvariableList: ['queryConditions'],\n\t\tsuccessActionType: PREDEFINED_CONDITIONS_SUCCESS,\n\t}\n);\n\nconst getReadableQuery = (query: string): string => {\n\tif (!query) {\n\t\treturn query;\n\t}\n\n\tconst readableValue = query\n\t\t.replace(/\\.and\\./gi, 'and')\n\t\t.replace(/\\.or\\./gi, 'or');\n\n\treturn readableValue;\n};\n\nconst handlePredefinedConditionsSuccess = (\n\tcoeffects: Coeffects<State, any>\n) => {\n\tconst results = get(\n\t\tcoeffects.action.payload,\n\t\t'data.GlideRecord_Query.sys_report_source._results',\n\t\t[]\n\t);\n\n\tconst predefinedFilters = results.map(result => {\n\t\treturn {\n\t\t\tid: result.sys_id.value,\n\t\t\tname: result.name.value,\n\t\t\tquery: result.filter.value,\n\t\t\treadableQuery: getReadableQuery(result.filter.displayValue),\n\t\t};\n\t});\n\n\tcoeffects.updateState({\n\t\tpredefinedFilters,\n\t\tisFilterLoading: false,\n\t});\n};\n\nconst handlePredefinedConditionClicked = (coeffects: Coeffects<State, any>) => {\n\tif (\n\t\tcoeffects.action.payload.payloadActionType ===\n\t\t'predefinedConditionTypeahead'\n\t) {\n\t\tconst filter: PredefinedFilter = coeffects.action.payload.option;\n\n\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\tpredefinedFilterId: filter.id,\n\t\t});\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: handleBootstrap,\n\t\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: handlePropertyChange,\n\n\t\t[RETRIEVE_PREDEFINED_CONDITIONS]: effectProxy(loadPredefinedConditions),\n\t\t[PREDEFINED_CONDITIONS_SUCCESS]: handlePredefinedConditionsSuccess,\n\t\t'DEVX_TYPEAHEAD#ITEM_CLICKED': handlePredefinedConditionClicked,\n\t\t'NOW_BUTTON#CLICKED': (coeffects: Coeffects<State, any>) => {\n\t\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\t\tcase UPDATE_TABLE_PREVIEW: {\n\t\t\t\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\t\t\t\tpreviewPredefinedFilterId:\n\t\t\t\t\t\t\tcoeffects.state.properties.tableInfo.predefinedFilterId,\n\t\t\t\t\t\tpreviewFilterQuery:\n\t\t\t\t\t\t\tcoeffects.state.properties.tableInfo.filterQuery,\n\t\t\t\t\t});\n\t\t\t\t\tif (coeffects.host.shadowRoot) {\n\t\t\t\t\t\tconst buttonUpdatePreview = coeffects.host.shadowRoot.querySelector(\n\t\t\t\t\t\t\t'.btn-update-preview'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (buttonUpdatePreview) {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tbuttonUpdatePreview.scrollIntoView({\n\t\t\t\t\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase DISCARD_FILTER: {\n\t\t\t\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\t\t\t\tpredefinedFilterId: undefined,\n\t\t\t\t\t\tfilterQuery: undefined,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'NOW_BUTTON_BARE#CLICKED': (coeffects: Coeffects<State, any>) => {\n\t\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\t\tcase EDIT_FILTER: {\n\t\t\t\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\t\t\t\tisEditMode: true,\n\t\t\t\t\t\tisExpanded: true,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase REMOVE_PREDEFINED_CONDITION: {\n\t\t\t\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\t\t\t\tpredefinedFilterId: undefined,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase ADD_CUSTOM_CONDITIONS: {\n\t\t\t\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\t\t\t\tshowCustomConditions: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tLIST_DATA_FETCH_COMPLETE: (coeffects: Coeffects<State, any>) => {\n\t\t\t// Table is loaded\n\t\t\tcoeffects.updateState({\n\t\t\t\tisTableLoading: false,\n\t\t\t});\n\t\t},\n\n\t\t'NOW_CONDITION_BUILDER#ENCODED_QUERY_SET': (\n\t\t\tcoeffects: Coeffects<State, any>\n\t\t) => {\n\t\t\tconst filterQuery = coeffects.action.payload.value;\n\n\t\t\tcoeffects.dispatch(TABLE_CONFIG_CHANGED, {\n\t\t\t\tfilterQuery,\n\t\t\t});\n\t\t},\n\n\t\t[RETRIEVE_READABLE_QUERY]: createHttpEffect('/api/now/ui/breadcrumbs', {\n\t\t\tmethod: 'GET',\n\t\t\tqueryParams: ['table', 'query'],\n\t\t\tsuccessActionType: RETRIEVE_READABLE_QUERY_SUCCESS,\n\t\t}),\n\n\t\t[RETRIEVE_READABLE_QUERY_SUCCESS]: (coeffects: Coeffects<State, any>) => {\n\t\t\tconst breadcrumbs = get(\n\t\t\t\tcoeffects.action.payload,\n\t\t\t\t'result.breadcrumb',\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\tlet readableFilterQuery = '';\n\n\t\t\tif (breadcrumbs && breadcrumbs.length) {\n\t\t\t\tbreadcrumbs.shift();\n\t\t\t\treadableFilterQuery = breadcrumbs.map(b => b.label).join(t(' and '));\n\t\t\t}\n\n\t\t\tcoeffects.updateState({\n\t\t\t\treadableFilterQuery,\n\t\t\t});\n\t\t},\n\t},\n};\n","// @flow\n\nimport { type Coeffects } from '@servicenow/ui-core';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\n\ntype State = any;\n\nexport const hasPropertyChanged = (\n\tcoeffects: Coeffects<State, any>,\n\tpropertyName: string,\n\tpaths: ?(string[])\n): boolean => {\n\tconst { name, previousValue, value } = coeffects.action.payload;\n\n\tif (name !== propertyName) {\n\t\treturn false;\n\t}\n\n\tif (!paths) {\n\t\treturn true;\n\t}\n\n\tconst hasChanged = paths.find(path => {\n\t\treturn !isEqual(get(previousValue, path), get(value, path));\n\t});\n\n\treturn !!hasChanged;\n};\n","module.exports = __TECTONIC__$servicenow_ui_effect_http;","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".table-configuration-loading-container{padding:2.5rem}.table-container.is-loading{visibility:hidden}.filter-accordion{border:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.filter-accordion .filter-header{height:45px;display:flex}.filter-accordion .filter-header .filter-header-label{cursor:pointer;flex-basis:100%;display:flex;padding:.5rem;padding-inline-start:1.5rem;padding-inline-end:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;font:unset;background-color:unset;color:unset}.filter-accordion .filter-header .filter-header-label::-moz-focus-inner{border-style:none}.filter-accordion .filter-header .filter-header-label:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px 2px 0 rgba(0,0,0,.3);outline:none}.filter-accordion .filter-header .filter-header-label .icon-filter{color:RGB(var(--now-color--neutral-11,73,88,90));margin-top:5px}.filter-accordion .filter-header .filter-header-label .filter-title{color:RGB(var(--now-color--neutral-11,73,88,90));font-size:1.25rem;margin-inline-start:.5rem;margin-inline-end:1rem}.filter-accordion .filter-header .filter-header-label .filter-tag{padding:0 .25rem;font-size:.75rem;border-radius:.125rem;background-color:RGB(var(--now-color--alert-info-0,195,221,240));margin-top:6px}.filter-accordion .filter-header .filter-header-action now-button-bare{margin:.75rem 1.5rem}.filter-accordion .filter-content{padding:0 1.5rem 1.5rem;display:none}.filter-accordion .filter-content .edit-filter .predefined-condition-container{margin-bottom:.75rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .condition-label{font-weight:600;font-size:1rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .no-conditions-label{font-size:1rem;color:RGB(var(--now-color--neutral-9,99,114,116));margin-top:.5rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .predefined-condition-selector{display:flex;margin-top:.25rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .predefined-condition-selector devx-typeahead{width:350px;margin-inline-end:.75rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .predefined-condition-selector now-button-bare{margin-top:.375rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .selected-predefined-condition{margin-top:.5rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .selected-predefined-condition span{font-size:1rem}.filter-accordion .filter-content .edit-filter .predefined-condition-container .selected-predefined-condition span:first-child{color:RGB(var(--now-color--neutral-9,99,114,116));margin-inline-end:.25rem}.filter-accordion .filter-content .edit-filter .custom-conditions-container .condition-builder{display:none;margin-inline-start:-20px}.filter-accordion .filter-content .edit-filter .custom-conditions-container .condition-builder.is-visible{display:block}.filter-accordion .filter-content .edit-filter .edit-filter-actions now-button{margin-top:.75rem}.filter-accordion .filter-content .edit-filter .edit-filter-actions now-button:not(:first-of-type){margin-inline-start:1rem}.filter-accordion .filter-content .display-filter .condition-label{font-size:.75rem;color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)));display:block}.filter-accordion .filter-content .display-filter .selected-predefined-condition span{font-size:1rem}.filter-accordion .filter-content .display-filter .selected-predefined-condition span:first-child{font-weight:600;margin-inline-end:.25rem}.filter-accordion .filter-content .display-filter .selected-predefined-condition+.condition-label{margin-top:.75rem}.filter-accordion .filter-content .display-filter .selected-custom-condition span{font-size:1rem}.filter-accordion .filter-content.expanded{display:block}now-record-list-connected-snapshot{display:block;margin-top:.75rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport view from './view';\nimport actions from './actions';\nimport { initialState } from './state';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-indicator-configuration', {\n\trenderer: { type: snabbdom },\n\tview,\n\tinitialState,\n\tproperties: {\n\t\tselectedIndicatorInfo: {},\n\t},\n\t...actions,\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type State } from './state';\nimport '../indicator-preview';\nimport '../breakdown-selector';\nimport { t } from 'sn-translate';\nimport isEmpty from 'lodash/isEmpty';\n\nexport default function(state: State) {\n\tconst {\n\t\tproperties: { selectedIndicatorInfo },\n\t\tindicatorInfo,\n\t\tbreakdownElementsLoading,\n\t} = state;\n\n\tlet loadingBreakdownSelector = false;\n\n\tfor (const sysId in breakdownElementsLoading) {\n\t\tif (breakdownElementsLoading[sysId]) {\n\t\t\tloadingBreakdownSelector = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{isEmpty(indicatorInfo) || loadingBreakdownSelector ? (\n\t\t\t\t<div className=\"loading-container\" key=\"loading-container\">\n\t\t\t\t\t<now-loader label={t('Loading...')} size=\"lg\" />\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{!isEmpty(indicatorInfo) ? (\n\t\t\t\t<div\n\t\t\t\t\tkey=\"indicator-config\"\n\t\t\t\t\tclass={{\n\t\t\t\t\t\t'indicator-config': true,\n\t\t\t\t\t\t'is-loading': loadingBreakdownSelector,\n\t\t\t\t\t}}>\n\t\t\t\t\t<viz-config-breakdown-selector\n\t\t\t\t\t\tselectedIndicatorInfo={selectedIndicatorInfo}\n\t\t\t\t\t\tindicatorInfo={indicatorInfo}\n\t\t\t\t\t\tloadingBreakdownSelector={loadingBreakdownSelector}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<viz-config-indicator-preview\n\t\t\t\t\t\tuuid={selectedIndicatorInfo.previewUuid}\n\t\t\t\t\t\tindicatorInfo={indicatorInfo}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</Fragment>\n\t);\n}\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport view from './view';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-indicator-preview', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tuuid: {},\n\t\tindicatorInfo: {},\n\t},\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport '../indicator-properties';\nimport '@servicenow/now-heading';\nimport { type State } from './state';\nimport { convertUuidToProp } from '../visualizations-config-panel/model/model-converter';\n\nexport default function(state: State) {\n\tconst props = state.properties;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-heading\n\t\t\t\tclassName=\"heading\"\n\t\t\t\tlabel={t('Preview')}\n\t\t\t\tlevel=\"3\"\n\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\twont-wrap\n\t\t\t/>\n\t\t\t<hr />\n\t\t\t<div className=\"content-body\">\n\t\t\t\t<div className=\"viz-config-visualization\">\n\t\t\t\t\t<sn-component-visualization\n\t\t\t\t\t\tchartType=\"single_score\"\n\t\t\t\t\t\tdataConfigurations={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuuid: convertUuidToProp(props.uuid),\n\t\t\t\t\t\t\t\tsource_type: 'analytics',\n\t\t\t\t\t\t\t\tinclude_global_targets: true,\n\t\t\t\t\t\t\t\tinclude_sparkline_global_targets: true,\n\t\t\t\t\t\t\t\tinclude_sparkline_personal_targets: true,\n\t\t\t\t\t\t\t\tinclude_sparkline: true,\n\t\t\t\t\t\t\t\tinclude_gap_percentage: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tstyleConfigurations={{\n\t\t\t\t\t\t\twidth: 'auto',\n\t\t\t\t\t\t\theight: 'auto',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"properties-container\">\n\t\t\t\t\t<viz-config-indicator-properties\n\t\t\t\t\t\tindicatorInfo={props.indicatorInfo}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n","import './indicator-properties';\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport styles from './styles.scss';\nimport { initialState } from './state';\nimport { type Breakdown } from '../common/types/indicator';\nimport { type IndicatorInfo } from '../common/types/indicator';\nimport { INDICATOR_TYPE } from '../common/types/data-source';\n\ncreateCustomElement('viz-config-indicator-properties', {\n\tproperties: {\n\t\tuuid: { default: {} },\n\t\tindicatorInfo: { default: {} },\n\t\tindicatorProps: {\n\t\t\tcomputed({ properties: { indicatorInfo } }) {\n\t\t\t\treturn getPropertyDisplayValues(indicatorInfo);\n\t\t\t},\n\t\t},\n\t},\n\t...initialState,\n\tview,\n\trenderer: {\n\t\ttype: snabbdom,\n\t},\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n\nconst getCalculation = (indicatorInfo: IndicatorInfo): string => {\n\tconst type = indicatorInfo.type && indicatorInfo.type.value;\n\tconst aggregationValue =\n\t\t(indicatorInfo.script && indicatorInfo.script.name) || indicatorInfo.field;\n\n\tif (type == INDICATOR_TYPE.AUTOMATED && indicatorInfo.aggregate) {\n\t\tif (indicatorInfo.aggregate.name === 'COUNT')\n\t\t\treturn indicatorInfo.aggregate.label;\n\n\t\treturn `${indicatorInfo.aggregate.label} (${aggregationValue || ''})`;\n\t}\n\n\treturn type == INDICATOR_TYPE.FORMULA\n\t\t? indicatorInfo.formula.displayValue\n\t\t: '';\n};\n\nconst getBreakdowns = (breakdowns: Array<$Shape<Breakdown>> = []): string => {\n\tif (breakdowns.length <= 0) return '';\n\n\treturn breakdowns.map(breakdown => breakdown.name).join(', ');\n};\n\nconst getPropertyDisplayValues = (indicatorInfo: IndicatorInfo): any => {\n\treturn {\n\t\ttype: indicatorInfo.type && indicatorInfo.type.label,\n\t\ttypeID: indicatorInfo.type && indicatorInfo.type.value,\n\t\tcalculation: getCalculation(indicatorInfo),\n\t\tgoal: indicatorInfo.direction && indicatorInfo.direction.label,\n\t\tunit: indicatorInfo.unit && indicatorInfo.unit.name,\n\t\tprecision: indicatorInfo.precision,\n\t\tfrequency: indicatorInfo.frequency && indicatorInfo.frequency.label,\n\t\tbreakdowns: getBreakdowns(indicatorInfo.breakdowns),\n\t};\n};\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { // eslint-disable-line no-unused-vars\n\tFragment, // eslint-disable-line no-unused-vars\n} from '@servicenow/ui-renderer-snabbdom';\nimport { t } from 'sn-translate';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-loader';\nimport 'sn-component-visualization';\nimport '@now-par-components/sn-par-popover';\nimport {\n\tINDICATOR_TYPE_LABEL,\n\tINDICATOR_SOURCE,\n\tAVAILABLE_BREAKDOWNS,\n\tADITIONAL_CONDITIONS,\n\tCALCULATION,\n\tGOAL,\n\tUNIT,\n\tFREQUENCY,\n\tPRECISION,\n} from './constants';\nimport { type LabelItem, type State } from './state';\nimport { jsxif } from '../helpers/seismic';\n\nexport default function(state: State) {\n\tconst {\n\t\tproperties: {\n\t\t\tindicatorInfo,\n\t\t\tindicatorInfo: { indicatorSource },\n\t\t\tindicatorProps: {\n\t\t\t\ttype,\n\t\t\t\tbreakdowns,\n\t\t\t\tcalculation,\n\t\t\t\tgoal,\n\t\t\t\tunit,\n\t\t\t\tprecision,\n\t\t\t\tfrequency,\n\t\t\t},\n\t\t},\n\t} = state;\n\tconst indicatorInfoContiditions = indicatorInfo && indicatorInfo.conditions;\n\n\tconst indicatorSourcePopover = indicatorSource => {\n\t\tconst tableText = indicatorSource.table\n\t\t\t? indicatorSource.table.label\n\t\t\t: null;\n\t\tconst conditionText = indicatorSource.conditions\n\t\t\t? indicatorSource.conditions.displayValue\n\t\t\t: null;\n\t\tconst indicatorPropertiesConditionPopover = (\n\t\t\t<div className=\"popover-container\" id=\"popover-indicator-source\">\n\t\t\t\t{jsxif(tableText) && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label className=\"popover-title\"> {t('Table')} </label>\n\t\t\t\t\t\t<label>{tableText}</label>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{jsxif(conditionText) && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label className=\"popover-title popover-conditions\">\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{t('Conditions')}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>{conditionText}</label>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<now-popover interactionType=\"none\" id=\"popover-datasources\">\n\t\t\t\t<now-icon slot=\"trigger\" icon=\"info-circle-outline\" />\n\t\t\t\t<viz-config-popover-content\n\t\t\t\t\tslot=\"content\"\n\t\t\t\t\tpopOverContent={indicatorPropertiesConditionPopover}\n\t\t\t\t/>\n\t\t\t</now-popover>\n\t\t);\n\t};\n\n\tconst source = indicatorSource ? (\n\t\t<Fragment>\n\t\t\t<div className=\"indicator-source-popover\">\n\t\t\t\t<div className=\"indicator-source-value\">{indicatorSource.name}</div>\n\t\t\t\t<div>{indicatorSourcePopover(indicatorSource)}</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t) : (\n\t\t''\n\t);\n\n\tconst getItem = (\n\t\tlabel: string,\n\t\tvalue: any,\n\t\ttype: string = 'jsx'\n\t): Array<LabelItem> => {\n\t\treturn [{ label, value: { type, value } }];\n\t};\n\n\tconst getBreakdownItem = () => {\n\t\tif (breakdowns) {\n\t\t\treturn getItem(AVAILABLE_BREAKDOWNS, breakdowns);\n\t\t}\n\n\t\tconst noBreakdownsLabel = (\n\t\t\t<Fragment>\n\t\t\t\t<span style={{ color: `rgb(var(--now-color--neutral-9))` }}>\n\t\t\t\t\t{t('No breakdowns defined')}\n\t\t\t\t</span>\n\t\t\t</Fragment>\n\t\t);\n\n\t\treturn getItem(AVAILABLE_BREAKDOWNS, noBreakdownsLabel, 'jsx');\n\t};\n\n\tconst IndicatorProperties = (\n\t\t<Fragment>\n\t\t\t<label>{t('Properties')}</label>\n\t\t\t<div className=\"label-stacked\">\n\t\t\t\t<label className=\"label-stacked-name\">{INDICATOR_TYPE_LABEL}</label>\n\t\t\t\t<label className=\"label-stacked-value\">\n\t\t\t\t\t<now-icon\n\t\t\t\t\t\tclassName=\"indicator-type-icon\"\n\t\t\t\t\t\ticon=\"analytics-center-outline\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t/>\n\t\t\t\t\t<span data-testId=\"indicator-type\">{type}</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t{indicatorSource ? (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div className=\"label-stacked\">\n\t\t\t\t\t\t<label className=\"label-stacked-name\">{INDICATOR_SOURCE}</label>\n\t\t\t\t\t\t<label className=\"label-stacked-value\">{source}</label>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t) : null}\n\n\t\t\t{indicatorInfoContiditions ? (\n\t\t\t\t<div className=\"label-stacked\">\n\t\t\t\t\t<label className=\"label-stacked-name\">{ADITIONAL_CONDITIONS}</label>\n\t\t\t\t\t<label className=\"label-stacked-value\">\n\t\t\t\t\t\t{indicatorInfoContiditions.displayValue}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<now-label-value-stacked\n\t\t\t\tdata-testId=\"calculation\"\n\t\t\t\talign=\"vertical\"\n\t\t\t\titems={getItem(CALCULATION, calculation)}\n\t\t\t\tsize=\"md\"\n\t\t\t/>\n\t\t\t<now-label-value-stacked\n\t\t\t\tdata-testId=\"bd-item\"\n\t\t\t\talign=\"vertical\"\n\t\t\t\titems={getBreakdownItem()}\n\t\t\t\tsize=\"md\"\n\t\t\t/>\n\t\t\t<div className=\"properties-one-row\">\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\tdata-testId=\"goal\"\n\t\t\t\t\talign=\"vertical\"\n\t\t\t\t\titems={getItem(GOAL, goal)}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t/>\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\tdata-testId=\"frequency\"\n\t\t\t\t\talign=\"vertical\"\n\t\t\t\t\titems={getItem(FREQUENCY, frequency)}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t/>\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\tdata-testId=\"unit\"\n\t\t\t\t\talign=\"vertical\"\n\t\t\t\t\titems={getItem(UNIT, unit)}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t/>\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\tdata-testId=\"precision\"\n\t\t\t\t\talign=\"vertical\"\n\t\t\t\t\titems={getItem(PRECISION, precision)}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n\n\treturn <div className=\"indicator-properties\">{IndicatorProperties}</div>;\n}\n","module.exports = __TECTONIC__sn_component_visualization;","// @flow\nimport { t } from 'sn-translate';\n\nexport const PREFIX = 'INDICATOR_PROPERTIES#';\nexport const INDICATOR_TYPE_LABEL = t('Indicator type');\nexport const INDICATOR_SOURCE = t('Indicator source');\nexport const AVAILABLE_BREAKDOWNS = t('Available breakdowns');\nexport const ADITIONAL_CONDITIONS = t('Aditional conditions');\nexport const CALCULATION = t('Calculation');\nexport const GOAL = t('Goal');\nexport const UNIT = t('Unit');\nexport const FREQUENCY = t('Frequency');\nexport const PRECISION = t('Precision');\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".indicator-properties{display:flex;flex-direction:column}.indicator-properties>*{margin-bottom:1rem}.indicator-properties label{font-size:1.25rem;color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.indicator-properties .label-stacked{display:flex;flex-direction:column}.indicator-properties .label-stacked .label-stacked-name{font-size:.75rem}.indicator-properties .label-stacked .label-stacked-value{font-size:1rem;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.indicator-properties .label-stacked .label-stacked-value .indicator-type-icon{padding-inline-end:.25rem}.indicator-properties .label-stacked .indicator-source-popover{display:flex;flex-direction:row}.indicator-properties .label-stacked .indicator-source-popover now-popover{cursor:pointer;margin-left:.625rem}.indicator-properties .label-stacked .indicator-source-value button{padding:0;margin:0;margin-inline-start:.3125rem;vertical-align:middle}.indicator-properties .label-stacked .indicator-source-value button::-moz-focus-inner{border-style:none}.indicator-properties .label-stacked .indicator-source-value button:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px 2px 0 rgba(0,0,0,.3);outline:none}.indicator-properties .label-stacked .indicator-source-value button,.indicator-properties .label-stacked .indicator-source-value button:active,.indicator-properties .label-stacked .indicator-source-value button:hover{border:none;background-color:transparent}.indicator-properties .label-stacked .popover-container{overflow:hidden;width:331px;margin:.625rem 1.1875rem 0;font-size:.75rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.indicator-properties .label-stacked .popover-container>*{margin-bottom:1rem}.indicator-properties .properties-one-row{display:flex;flex-direction:row}.indicator-properties .properties-one-row>*{width:50%}.indicator-properties .word-break--all{word-break:break-all}\", \"\"]);\n\n// exports\n","// @flow\nimport { type IndicatorInfo } from '../common/types/indicator';\nimport { type Uuid } from '../common/types/uuid';\n\nexport type State = {|\n\tproperties: {\n\t\tuuid: Uuid,\n\t\tindicatorInfo: IndicatorInfo,\n\t},\n|};\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".heading{height:2rem}.content-body{display:flex;margin-top:1.5rem}.content-body .viz-config-visualization{flex:1 1 0;min-width:350px;border:1px solid rgb(var(--now-color--neutral-3,209,214,214));padding:16px 16px 4px}:host(:not([dir=rtl])) .content-body .viz-config-visualization,:root:not([dir=rtl]) .content-body .viz-config-visualization{margin-right:1.5rem}:host([dir=rtl]) .content-body .viz-config-visualization,:root[dir=rtl] .content-body .viz-config-visualization{margin-left:1.5rem}.content-body .viz-config-visualization sn-component-visualization{height:265px}.content-body .properties-container{flex:3 1 0}\", \"\"]);\n\n// exports\n","//@flow\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport view from './view';\nimport { actionHandlers } from './actions';\nimport { initialState } from './state';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-breakdown-selector', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tselectedIndicatorInfo: {},\n\t\tindicatorInfo: {},\n\t\tloadingBreakdownSelector: {},\n\t},\n\tinitialState,\n\tactionHandlers,\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport 'sn-devx-components';\nimport '@servicenow/now-typeahead';\nimport { t } from 'sn-translate';\nimport { jsxif } from '../helpers/seismic';\nimport { type State } from './state';\nimport { type Helpers } from '@servicenow/ui-core';\nimport { BREAKDOWN_CHANGED, BD_OPERATORS } from './constants';\nimport isEqual from 'lodash/isEqual';\n\nconst MAX_BREAKDOWNS = 2;\n\nexport default function view(state: State, helpers: Helpers<State>) {\n\treturn (\n\t\t<div className=\"breakdown-selector\">{renderEverything(state, helpers)}</div>\n\t);\n}\n\nconst EditFilterView = (state: State) => {\n\tconst {\n\t\tproperties: {\n\t\t\tselectedIndicatorInfo: { uuid, previewUuid },\n\t\t},\n\t} = state;\n\n\treturn (\n\t\t<div className=\"edit-filter\">\n\t\t\t<div className=\"msg-filter-header\">\n\t\t\t\t{t('All conditions must be met:')}\n\t\t\t</div>\n\t\t\t{state.breakdowns.map((br, index) => {\n\t\t\t\tconst otherBreakdowns = state.breakdowns\n\t\t\t\t\t.filter((x, i) => i !== index)\n\t\t\t\t\t.map(x => x.sysId);\n\n\t\t\t\tconst availableBreakdownOptions = br.breakdownOptions\n\t\t\t\t\t? br.breakdownOptions.filter(x => !otherBreakdowns.includes(x.id))\n\t\t\t\t\t: [];\n\t\t\t\tconst isAddBreakdownButtonVisible =\n\t\t\t\t\tbr.sysId &&\n\t\t\t\t\tindex < MAX_BREAKDOWNS - 1 &&\n\t\t\t\t\tbr.breakdownOptions &&\n\t\t\t\t\tbr.breakdownOptions.length > 1;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"conditions-container\">\n\t\t\t\t\t\t<div className=\"breakdown-row\" key={`br-row${br.sysId || ''}`}>\n\t\t\t\t\t\t\t<div className=\"breakdown-typeahead\">\n\t\t\t\t\t\t\t\t<devx-typeahead\n\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\tpayloadActionType: 'breakdownSelectTypeahead',\n\t\t\t\t\t\t\t\t\t\tbreakdownIndex: index,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\titems={availableBreakdownOptions}\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\tbr.sysId && !br.breakdownOptions\n\t\t\t\t\t\t\t\t\t\t\t? t('Loading...')\n\t\t\t\t\t\t\t\t\t\t\t: t('Select a breakdown')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel={t('Breakdown')}\n\t\t\t\t\t\t\t\t\tcompact\n\t\t\t\t\t\t\t\t\tloading={!br.breakdownOptions}\n\t\t\t\t\t\t\t\t\tselected-item={br.breakdownOptions && br.sysId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"operator-typeahead\">\n\t\t\t\t\t\t\t\t{jsxif(br.sysId) && (\n\t\t\t\t\t\t\t\t\t<devx-typeahead\n\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: 'breakdownOperator',\n\t\t\t\t\t\t\t\t\t\t\tbreakdownIndex: index,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\titems={br.operatorOptions}\n\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\tbr.sysId && !br.breakdownOptions\n\t\t\t\t\t\t\t\t\t\t\t\t? t('Loading...')\n\t\t\t\t\t\t\t\t\t\t\t\t: t('Select an operator')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel={t('Operator')}\n\t\t\t\t\t\t\t\t\t\tcompact\n\t\t\t\t\t\t\t\t\t\tloading={!br.breakdownOptions}\n\t\t\t\t\t\t\t\t\t\tselected-item={br.sysId && br.operator}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"element-typeahead\">\n\t\t\t\t\t\t\t\t{jsxif(br.sysId) &&\n\t\t\t\t\t\t\t\t\t(br.operator === BD_OPERATORS.MULTI ? (\n\t\t\t\t\t\t\t\t\t\t<now-typeahead-multi\n\t\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: 'elementSelectTypeahead',\n\t\t\t\t\t\t\t\t\t\t\t\tbreakdownIndex: index,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\titems={br.elementOptions}\n\t\t\t\t\t\t\t\t\t\t\tlabel={t('Elements')}\n\t\t\t\t\t\t\t\t\t\t\tselected-items={\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementOptions &&\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds &&\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds.length > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? br.elementSysIds.map(sysId =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// $FlowFixMe\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbr.elementOptions.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption => option.id === sysId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tmanageSelectedItems={true}\n\t\t\t\t\t\t\t\t\t\t\tinvalid={\n\t\t\t\t\t\t\t\t\t\t\t\t!br.elementOptions ||\n\t\t\t\t\t\t\t\t\t\t\t\t!br.elementSysIds ||\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds.length === 0\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<devx-typeahead\n\t\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: 'elementSelectTypeahead',\n\t\t\t\t\t\t\t\t\t\t\t\tbreakdownIndex: index,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\titems={br.elementOptions}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds &&\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t!br.elementOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t? t('Loading...')\n\t\t\t\t\t\t\t\t\t\t\t\t\t: t('Select an element')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel={t('Element')}\n\t\t\t\t\t\t\t\t\t\t\tselected-item={\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementOptions &&\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds &&\n\t\t\t\t\t\t\t\t\t\t\t\tbr.elementSysIds.length > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? br.elementSysIds[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: br.elementsFilterSysId || undefined\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tloading={!br.elementOptions}\n\t\t\t\t\t\t\t\t\t\t\tcompact={!br.isElementRequired}\n\t\t\t\t\t\t\t\t\t\t\terrorMsg={\n\t\t\t\t\t\t\t\t\t\t\t\tbr.isElementRequired\n\t\t\t\t\t\t\t\t\t\t\t\t\t? t('Please select an element')\n\t\t\t\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row-buttons\">\n\t\t\t\t\t\t\t\t{jsxif(br.sysId || index > 0) && (\n\t\t\t\t\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: 'removeBreakdown',\n\t\t\t\t\t\t\t\t\t\t\tbreakdownIndex: index,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ticon-start=\"close-outline\"\n\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\thidePadding\n\t\t\t\t\t\t\t\t\t\ttooltip-content={t('Remove a breakdown')}\n\t\t\t\t\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t\t\t\t\t'aria-label': t('Remove a breakdown'),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"btn-add-container\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tvisibility: isAddBreakdownButtonVisible\n\t\t\t\t\t\t\t\t\t\t\t? 'visible'\n\t\t\t\t\t\t\t\t\t\t\t: 'hidden',\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: 'btnAddNewBreakdown',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\t\tlabel={t('AND')}\n\t\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\t\thidePadding\n\t\t\t\t\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t\t\t\t\t'aria-label': t('Add new breakdown'),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisabled={state.breakdowns.length === MAX_BREAKDOWNS}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<div className=\"edit-filter-actions\">\n\t\t\t\t<now-button\n\t\t\t\t\tclassName=\"btn-update-preview\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: 'applyFilter',\n\t\t\t\t\t}}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tlabel={t('Run')}\n\t\t\t\t\tdisabled={isEqual(uuid, previewUuid)}\n\t\t\t\t/>\n\t\t\t\t{/* <now-button\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: 'cancelFilter',\n\t\t\t\t\t}}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\tlabel={t('Discard')}\n\t\t\t\t\tdisabled={getNumberOfConditions(state) === 0}\n\t\t\t\t/> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst DisplayFilterView = (state: State) => {\n\tconst filterParts = [];\n\n\tlet canRender = true;\n\n\tfor (const br of state.breakdowns) {\n\t\tconst selectedElement =\n\t\t\tbr.elementSysIds && br.elementSysIds.length > 0\n\t\t\t\t? br.elementSysIds\n\t\t\t\t: [br.elementsFilterSysId];\n\n\t\tif (\n\t\t\tbr.sysId &&\n\t\t\tbr.breakdownOptions &&\n\t\t\tselectedElement &&\n\t\t\tselectedElement[0]\n\t\t) {\n\t\t\tconst breakdown = br.breakdownOptions.find(x => x.id === br.sysId);\n\n\t\t\tif (breakdown) {\n\t\t\t\tif (br.elementOptions) {\n\t\t\t\t\tconst elementLabels = [];\n\n\t\t\t\t\tfor (const elementId of selectedElement) {\n\t\t\t\t\t\tconst element = br.elementOptions.find(x => x.id === elementId);\n\n\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\telementLabels.push(element.label);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (elementLabels.length > 0) {\n\t\t\t\t\t\tfilterParts.push({\n\t\t\t\t\t\t\tbrLabel: breakdown.label,\n\t\t\t\t\t\t\telementLabels: elementLabels,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcanRender = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"display-filter\">\n\t\t\t<div className=\"condition-title\">{t('Conditions')}</div>\n\t\t\t{jsxif(canRender && filterParts.length > 0) &&\n\t\t\t\tfilterParts.map((filterPart, fIndex) => {\n\t\t\t\t\tconst elements = filterPart.elementLabels.join(', ');\n\n\t\t\t\t\tlet text;\n\n\t\t\t\t\tif (fIndex === 0)\n\t\t\t\t\t\ttext =\n\t\t\t\t\t\t\tfilterPart.elementLabels.length > 1\n\t\t\t\t\t\t\t\t? t('{0} is one of ({1})', filterPart.brLabel, elements)\n\t\t\t\t\t\t\t\t: t('{0} is {1}', filterPart.brLabel, elements);\n\t\t\t\t\telse\n\t\t\t\t\t\ttext =\n\t\t\t\t\t\t\tfilterPart.elementLabels.length > 1\n\t\t\t\t\t\t\t\t? t('AND {0} is one of ({1})', filterPart.brLabel, elements)\n\t\t\t\t\t\t\t\t: t('AND {0} is {1}', filterPart.brLabel, elements);\n\n\t\t\t\t\treturn <div className=\"condition-value\">{text}</div>;\n\t\t\t\t})}\n\t\t\t{jsxif(canRender && filterParts.length === 0) && (\n\t\t\t\t<div className=\"condition-value\">{t('No conditions selected')}</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nfunction getCount(state: State) {\n\tconst {\n\t\tproperties: {\n\t\t\tselectedIndicatorInfo: { isExpanded },\n\t\t},\n\t} = state;\n\n\tif (isExpanded) {\n\t\treturn null;\n\t}\n\n\tconst numberOfConditions = getNumberOfConditions(state);\n\n\tif (numberOfConditions === 0) {\n\t\treturn <span className=\"filter-subtitle\">{t('[No filters applied]')}</span>;\n\t} else {\n\t\treturn (\n\t\t\t<span className=\"filter-tag\">\n\t\t\t\t{numberOfConditions}\n\t\t\t\t{t(' condition(s) applied')}\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nfunction getNumberOfConditions(state: State) {\n\tlet numberOfConditions = 0;\n\n\tstate.breakdowns.forEach(br => {\n\t\tif (br.sysId && br.elementSysIds && br.elementSysIds.length)\n\t\t\tnumberOfConditions++;\n\t});\n\n\treturn numberOfConditions;\n}\n\nfunction renderEverything(state: State, { dispatch }: Helpers<State>) {\n\tconst {\n\t\tindicator,\n\t\tbreakdowns,\n\t\tproperties: {\n\t\t\tloadingBreakdownSelector,\n\t\t\tselectedIndicatorInfo: { uuid, isExpanded, isEditMode },\n\t\t},\n\t} = state;\n\n\tif (\n\t\tindicator !== uuid.indicator ||\n\t\tbreakdowns.length === 0 ||\n\t\tloadingBreakdownSelector\n\t) {\n\t\treturn null;\n\t}\n\n\tconst noBreakdownsAvailable =\n\t\tbreakdowns[0].breakdownOptions &&\n\t\tbreakdowns[0].breakdownOptions.length === 0;\n\n\tif (noBreakdownsAvailable) {\n\t\treturn (\n\t\t\t<div className=\"filter-accordion\">\n\t\t\t\t<div className=\"filter-header\">\n\t\t\t\t\t<div className=\"filter-header-label disabled\">\n\t\t\t\t\t\t<now-icon\n\t\t\t\t\t\t\tclassName=\"icon-filter\"\n\t\t\t\t\t\t\ticon=\"filter-fill\"\n\t\t\t\t\t\t\tsize=\"md\"></now-icon>\n\t\t\t\t\t\t<span className=\"filter-title\">{t('Filters')}</span>\n\t\t\t\t\t\t<span className=\"filter-subtitle\">\n\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t'No breakdowns defined. So you can’t filter, and some visualization types won’t be available.'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"filter-accordion\">\n\t\t\t<div className={'filter-header' + (isExpanded ? ' expanded' : '')}>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"filter-header-label\"\n\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\tdispatch(BREAKDOWN_CHANGED, { isExpanded: !isExpanded });\n\t\t\t\t\t}}>\n\t\t\t\t\t<now-icon\n\t\t\t\t\t\tclassName=\"icon-filter\"\n\t\t\t\t\t\ticon=\"filter-fill\"\n\t\t\t\t\t\tsize=\"md\"></now-icon>\n\t\t\t\t\t<span className=\"filter-title\">{t('Filters')}</span>\n\t\t\t\t\t{getCount(state)}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"filter-header-action\">\n\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: 'editFilter',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thide-padding\n\t\t\t\t\t\ticon-start=\"pencil-fill\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tdisabled={isEditMode}\n\t\t\t\t\t\tlabel={t('Edit')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<now-collapse expanded={isExpanded}>\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t{isEditMode ? EditFilterView(state) : DisplayFilterView(state)}\n\t\t\t\t</div>\n\t\t\t</now-collapse>\n\t\t</div>\n\t);\n}\n","module.exports = __TECTONIC__$servicenow_now_typeahead;","// @flow\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport get from 'lodash/get';\nimport { effectProxy } from '../helpers/seismic';\nimport {\n\tinvalidateCache,\n\tgetElementOptionsFromCache,\n\tsetElementOptionsToCache,\n} from './cache';\n\nimport {\n\tLOAD_REQUIRED_DATA,\n\tFETCH_ELEMENTS,\n\tFETCH_ELEMENTS_SUCCEEDED,\n\tBREAKDOWN_CHANGED,\n\tFETCH_ELEMENTS_FINISHED,\n\tBD_OPERATORS,\n} from './constants';\nimport {\n\ttype State,\n\ttype BreakdownData,\n\ttype BreakdownPropInfo,\n\ttype OptionItem,\n\tcreateBreakdownAttrUpdateStatePatch,\n} from './state';\nimport {\n\ttype Breakdown,\n\ttype ElementFilter,\n\ttype IndicatorInfo,\n} from '../common/types/indicator';\nimport { t } from 'sn-translate';\n\nimport { INDICATOR_TYPE, AGGREGATE_TYPE } from '../common/types/data-source';\n\nfunction updateStateFromProps(\n\tcoeffects: Coeffects<State, void>,\n\tforce: boolean = false\n) {\n\tconst {\n\t\tindicator,\n\t\tproperties: {\n\t\t\tselectedIndicatorInfo: { uuid },\n\t\t\tindicatorInfo,\n\t\t},\n\t} = coeffects.state;\n\n\tif (uuid.indicator === indicator && !force) {\n\t\treturn;\n\t}\n\n\tconst selectedBreakdowns = uuid.breakdowns || [];\n\n\tconst breakdownOptions = getBreakdownOptions(coeffects);\n\n\tconst allBreakdowns =\n\t\tget(coeffects, 'properties.indicatorInfo.breakdowns') || [];\n\n\tconst breakdowns = selectedBreakdowns.map(br => ({\n\t\tsysId: br.sysId,\n\t\telementSysIds: br.elementSysIds && [...br.elementSysIds],\n\t\telementsFilterSysId: br.elementsFilterSysId,\n\t\toperator: br.elementsFilterSysId\n\t\t\t? BD_OPERATORS.DYNAMIC\n\t\t\t: br.elementSysIds && br.elementSysIds.length > 1\n\t\t\t? BD_OPERATORS.MULTI\n\t\t\t: BD_OPERATORS.DEFAULT,\n\t\toperatorOptions: getOperatorOptions(indicatorInfo, allBreakdowns, br.sysId),\n\t\tbreakdownOptions,\n\t}));\n\n\tif (breakdowns.length == 0) {\n\t\tbreakdowns.push({\n\t\t\toperator: BD_OPERATORS.DEFAULT,\n\t\t\tbreakdownOptions,\n\t\t});\n\t}\n\n\tcoeffects.updateState({\n\t\tindicator: uuid.indicator,\n\t\tbreakdowns,\n\t});\n\n\tcoeffects.dispatch(LOAD_REQUIRED_DATA);\n}\n\nfunction getBreakdownOptions(coeffects: Coeffects<State, any>) {\n\tconst {\n\t\tproperties: { indicatorInfo },\n\t} = coeffects.state;\n\n\treturn indicatorInfo.breakdowns.map(x => ({\n\t\tlabel: x.name,\n\t\tid: x.sysId,\n\t}));\n}\n\nfunction getOperatorOptions(\n\tindicatorInfo: IndicatorInfo,\n\tbreakDowns: Breakdown[],\n\tsysID: string\n): OptionItem[] {\n\tconst indicatorType = indicatorInfo.type.value;\n\tconst aggregate = indicatorInfo.aggregate.value;\n\tconst doMultiElementsApply =\n\t\t(indicatorType === INDICATOR_TYPE.AUTOMATED &&\n\t\t\t(aggregate === AGGREGATE_TYPE.COUNT ||\n\t\t\t\taggregate === AGGREGATE_TYPE.SUM ||\n\t\t\t\taggregate === AGGREGATE_TYPE.MIN ||\n\t\t\t\taggregate === AGGREGATE_TYPE.MAX)) ||\n\t\tindicatorType === INDICATOR_TYPE.MANUAL ||\n\t\tindicatorType === INDICATOR_TYPE.EXTERNAL;\n\tconst isElementFilterExists = getElementFilters(breakDowns, sysID).length > 0;\n\tconst options = [{ id: BD_OPERATORS.DEFAULT, label: t('is') }];\n\n\tdoMultiElementsApply &&\n\t\toptions.push({ id: BD_OPERATORS.MULTI, label: t('is one of') });\n\tisElementFilterExists &&\n\t\toptions.push({ id: BD_OPERATORS.DYNAMIC, label: t('is (dynamic)') });\n\treturn options;\n}\n\nfunction getElementFilters(\n\tbreakDowns: Breakdown[],\n\tsysID: string\n): ElementFilter[] {\n\tconst breakdown = breakDowns.find(bd => bd.sysId === sysID);\n\n\tif (!breakdown) return [];\n\n\tif (!breakdown.elementFilters || breakdown.elementFilters.length <= 0)\n\t\treturn [];\n\n\treturn breakdown.elementFilters;\n}\n\nfunction getElementFilterOptions(\n\tbreakDowns: Breakdown[],\n\tsysID: string\n): OptionItem[] {\n\tconst elementFilters = getElementFilters(breakDowns, sysID);\n\n\treturn elementFilters.map(x => ({\n\t\tlabel: x.title,\n\t\tid: x.sysId,\n\t}));\n}\n\nfunction handleFilters(\n\tcoeffects: Coeffects<State, any>,\n\tnewBreakdowns,\n\tkeyUuid: string\n) {\n\tlet isSomethingRequired = false;\n\n\tconst breakdownProps: BreakdownPropInfo[] = [];\n\n\tfor (const br of newBreakdowns) {\n\t\tif (!br.sysId) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\t!br.elementsFilterSysId &&\n\t\t\t(!br.elementSysIds || br.elementSysIds.length === 0)\n\t\t) {\n\t\t\tisSomethingRequired = true;\n\t\t\tcoeffects.updateState(\n\t\t\t\tcreateBreakdownAttrUpdateStatePatch(\n\t\t\t\t\tcoeffects.state.breakdowns,\n\t\t\t\t\tbr.sysId,\n\t\t\t\t\t'isElementRequired',\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (br.sysId && br.elementSysIds && br.elementSysIds.length > 0) {\n\t\t\tbreakdownProps.push({\n\t\t\t\tsysId: br.sysId,\n\t\t\t\telementSysIds: [...br.elementSysIds],\n\t\t\t});\n\t\t} else if (br.sysId && br.elementsFilterSysId) {\n\t\t\tbreakdownProps.push({\n\t\t\t\tsysId: br.sysId,\n\t\t\t\telementsFilterSysId: br.elementsFilterSysId,\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!isSomethingRequired) {\n\t\tcoeffects.dispatch(BREAKDOWN_CHANGED, {\n\t\t\t[keyUuid]: {\n\t\t\t\tbreakdowns: breakdownProps,\n\t\t\t\tindicator:\n\t\t\t\t\tcoeffects.state.properties.selectedIndicatorInfo.uuid.indicator,\n\t\t\t},\n\t\t});\n\t}\n}\n\nfunction handleButtonClicked(coeffects: Coeffects<State, any>) {\n\tconst actionType: string = coeffects.action.payload.payloadActionType;\n\n\tswitch (actionType) {\n\t\tcase 'btnAddNewBreakdown': {\n\t\t\tcoeffects.updateState({\n\t\t\t\toperation: 'push',\n\t\t\t\tpath: `breakdowns`,\n\t\t\t\tvalue: {},\n\t\t\t});\n\t\t\tcoeffects.dispatch(LOAD_REQUIRED_DATA);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'removeBreakdown': {\n\t\t\tconst indexToDelete = coeffects.action.payload.breakdownIndex;\n\t\t\tconst newBreakdowns = coeffects.state.breakdowns\n\t\t\t\t.map((br, i) =>\n\t\t\t\t\ti < indexToDelete\n\t\t\t\t\t\t? br\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t// Reset breakdownOptions and elementOptions for dependent breakdowns\n\t\t\t\t\t\t\t\tsysId: br.sysId,\n\t\t\t\t\t\t\t\telementSysIds: br.elementSysIds,\n\t\t\t\t\t\t\t\telementsFilterSysId: br.elementsFilterSysId,\n\t\t\t\t\t\t\t\toperator: br.operator,\n\t\t\t\t\t\t\t\toperatorOptions: br.operatorOptions,\n\t\t\t\t\t\t  }\n\t\t\t\t)\n\t\t\t\t.filter((el, i) => i !== indexToDelete);\n\n\t\t\tif (newBreakdowns.length === 0) {\n\t\t\t\tnewBreakdowns.push({});\n\t\t\t}\n\n\t\t\tcoeffects.updateState({ breakdowns: newBreakdowns });\n\t\t\tcoeffects.dispatch(LOAD_REQUIRED_DATA);\n\n\t\t\thandleFilters(coeffects, newBreakdowns, 'uuid');\n\n\t\t\tbreak;\n\t\t}\n\t\tcase 'cancelFilter': {\n\t\t\tcoeffects.updateState({ breakdowns: [{}] });\n\t\t\tcoeffects.dispatch(LOAD_REQUIRED_DATA);\n\t\t\tcoeffects.dispatch(BREAKDOWN_CHANGED, {\n\t\t\t\tuuid: {\n\t\t\t\t\tbreakdowns: [],\n\t\t\t\t\tindicator:\n\t\t\t\t\t\tcoeffects.state.properties.selectedIndicatorInfo.uuid.indicator,\n\t\t\t\t},\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase 'applyFilter': {\n\t\t\tconst breakdowns = coeffects.state.breakdowns;\n\n\t\t\thandleFilters(coeffects, breakdowns, 'previewUuid');\n\n\t\t\tif (coeffects.host.shadowRoot) {\n\t\t\t\tconst buttonUpdatePreview = coeffects.host.shadowRoot.querySelector(\n\t\t\t\t\t'.btn-update-preview'\n\t\t\t\t);\n\n\t\t\t\tif (buttonUpdatePreview) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbuttonUpdatePreview.scrollIntoView({\n\t\t\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 500);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'editFilter': {\n\t\t\tcoeffects.dispatch(BREAKDOWN_CHANGED, {\n\t\t\t\tisEditMode: true,\n\t\t\t\tisExpanded: true,\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction handleSelectElements(\n\tselectedElementWithType: any,\n\tcoeffects: Coeffects<State, any>\n) {\n\tconst { state } = coeffects;\n\tconst index = coeffects.action.payload.breakdownIndex;\n\n\tconst brData: BreakdownData = {\n\t\t...state.breakdowns[index],\n\t\t...selectedElementWithType,\n\t\tisElementRequired: false,\n\t};\n\n\tcoeffects.updateState({\n\t\toperation: 'set',\n\t\tpath: `breakdowns[${index}]`,\n\t\tvalue: brData,\n\t});\n\n\tconst breakdowns = [...coeffects.state.breakdowns];\n\n\tbreakdowns[index] = brData;\n\n\thandleFilters(coeffects, breakdowns, 'uuid');\n}\n\nfunction handleTypeaheadMultiItemsSelected(coeffects: Coeffects<State, any>) {\n\tconst actionType = coeffects.action.payload.payloadActionType;\n\n\tswitch (actionType) {\n\t\tcase 'elementSelectTypeahead': {\n\t\t\tconst selectedElementWithType = {\n\t\t\t\telementSysIds: coeffects.action.payload.value.map(value => value.id),\n\t\t\t};\n\n\t\t\thandleSelectElements(selectedElementWithType, coeffects);\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\nexport const fetchElementsEffect = createGraphQLEffect(\n\t`query($sysID: String!, $elementStart: Int, $elementCount: Int, $elementContains: String) {\n            AppPARConfig_Query {\n                breakdownDetails(\n                    sysID: $sysID\n                    elementStart: $elementStart\n                    elementCount: $elementCount\n                    elementContains: $elementContains\n                ) {\n                    breakdownSource {\n                        elements {\n                            sysID\n                            label\n                        }\n                        unmatchedElement {\n                            sysID\n                            label\n                        }\n                    }\n                    result\n                }\n            }\n        }`,\n\t{\n\t\tvariableList: ['sysID'],\n\t\tsuccessActionType: FETCH_ELEMENTS_SUCCEEDED,\n\t}\n);\n\nexport const actionHandlers = {\n\t[actionTypes.COMPONENT_BOOTSTRAPPED]: (coeffects: Coeffects<State, void>) => {\n\t\tupdateStateFromProps(coeffects);\n\t},\n\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: (\n\t\tcoeffects: Coeffects<State, any>\n\t) => {\n\t\tupdateStateFromProps(coeffects);\n\t},\n\t[actionTypes.COMPONENT_DISCONNECTED]: () => {\n\t\tinvalidateCache();\n\t},\n\t[LOAD_REQUIRED_DATA]: (coeffects: Coeffects<State, any>) => {\n\t\tconst { indicator, breakdowns } = coeffects.state;\n\n\t\tlet baseUuid = indicator;\n\n\t\tfor (const br of breakdowns) {\n\t\t\tif (!br.breakdownOptions) {\n\t\t\t\tconst breakdownOptions = getBreakdownOptions(coeffects);\n\n\t\t\t\tcoeffects.updateState(\n\t\t\t\t\tcreateBreakdownAttrUpdateStatePatch(\n\t\t\t\t\t\tcoeffects.state.breakdowns,\n\t\t\t\t\t\tbr.sysId,\n\t\t\t\t\t\t'breakdownOptions',\n\t\t\t\t\t\tbreakdownOptions\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t(br.operator === BD_OPERATORS.DEFAULT ||\n\t\t\t\t\tbr.operator === BD_OPERATORS.MULTI) &&\n\t\t\t\t!br.elementOptions &&\n\t\t\t\tbr.sysId\n\t\t\t) {\n\t\t\t\tconst optsFromCache = getElementOptionsFromCache(baseUuid, br.sysId);\n\n\t\t\t\tif (optsFromCache) {\n\t\t\t\t\tcoeffects.updateState(\n\t\t\t\t\t\tcreateBreakdownAttrUpdateStatePatch(\n\t\t\t\t\t\t\tcoeffects.state.breakdowns,\n\t\t\t\t\t\t\tbr.sysId,\n\t\t\t\t\t\t\t'elementOptions',\n\t\t\t\t\t\t\toptsFromCache\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tcoeffects.dispatch(FETCH_ELEMENTS_FINISHED, {\n\t\t\t\t\t\tsysID: br.sysId,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcoeffects.dispatch(\n\t\t\t\t\t\tFETCH_ELEMENTS,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsysID: br.sysId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsysID: br.sysId,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (br.operator === BD_OPERATORS.DYNAMIC && br.sysId) {\n\t\t\t\tconst breakdowns =\n\t\t\t\t\tget(coeffects, 'properties.indicatorInfo.breakdowns') || [];\n\t\t\t\tconst elementFilterOptions = getElementFilterOptions(\n\t\t\t\t\tbreakdowns,\n\t\t\t\t\tbr.sysId || ''\n\t\t\t\t);\n\n\t\t\t\tcoeffects.dispatch(FETCH_ELEMENTS_FINISHED, {\n\t\t\t\t\tsysID: br.sysId,\n\t\t\t\t});\n\n\t\t\t\tcoeffects.updateState(\n\t\t\t\t\tcreateBreakdownAttrUpdateStatePatch(\n\t\t\t\t\t\tcoeffects.state.breakdowns,\n\t\t\t\t\t\tbr.sysId,\n\t\t\t\t\t\t'elementOptions',\n\t\t\t\t\t\telementFilterOptions\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (br.sysId && br.elementSysIds && br.elementSysIds.length > 0) {\n\t\t\t\tbaseUuid = baseUuid + ':' + br.sysId + ':' + br.elementSysIds[0];\n\t\t\t}\n\t\t}\n\t},\n\n\t[FETCH_ELEMENTS]: effectProxy(fetchElementsEffect),\n\n\t[FETCH_ELEMENTS_SUCCEEDED]: (coeffects: Coeffects<State, any>) => {\n\t\tconst elements = get(\n\t\t\tcoeffects.action.payload,\n\t\t\t'data.AppPARConfig_Query.breakdownDetails.breakdownSource.elements'\n\t\t);\n\n\t\tconst unMatchedElement = get(\n\t\t\tcoeffects.action.payload,\n\t\t\t'data.AppPARConfig_Query.breakdownDetails.breakdownSource.unmatchedElement'\n\t\t);\n\n\t\tconst { indicator, breakdowns } = coeffects.state;\n\n\t\tconst sysID = coeffects.action.meta.sysID;\n\t\tconst elementOptions = elements.map(x => ({\n\t\t\tlabel: x.label,\n\t\t\tid: x.sysID,\n\t\t}));\n\n\t\tif (unMatchedElement && unMatchedElement.label) {\n\t\t\telementOptions.unshift({\n\t\t\t\tlabel: unMatchedElement.label,\n\t\t\t\tid: unMatchedElement.sysID,\n\t\t\t});\n\t\t}\n\n\t\tsetElementOptionsToCache(indicator, sysID, elementOptions);\n\t\tcoeffects.updateState(\n\t\t\tcreateBreakdownAttrUpdateStatePatch(\n\t\t\t\tbreakdowns,\n\t\t\t\tsysID,\n\t\t\t\t'elementOptions',\n\t\t\t\telementOptions\n\t\t\t)\n\t\t);\n\t\tcoeffects.dispatch(FETCH_ELEMENTS_FINISHED, {\n\t\t\tsysID,\n\t\t});\n\t},\n\t'DEVX_TYPEAHEAD#ITEM_CLICKED': (coeffects: Coeffects<State, any>) => {\n\t\tconst actionType: string = coeffects.action.payload.payloadActionType;\n\t\tconst { state } = coeffects;\n\n\t\tswitch (actionType) {\n\t\t\tcase 'breakdownSelectTypeahead': {\n\t\t\t\tconst index = coeffects.action.payload.breakdownIndex;\n\t\t\t\tconst sysId = coeffects.action.payload.option.id;\n\t\t\t\tconst breakdowns =\n\t\t\t\t\tget(coeffects, 'properties.indicatorInfo.breakdowns') || [];\n\t\t\t\tconst indicatorInfo = get(coeffects, 'properties.indicatorInfo') || {};\n\t\t\t\tconst operatorOptions = getOperatorOptions(\n\t\t\t\t\tindicatorInfo,\n\t\t\t\t\tbreakdowns,\n\t\t\t\t\tsysId\n\t\t\t\t);\n\t\t\t\tconst brData: BreakdownData = {\n\t\t\t\t\t...state.breakdowns[index],\n\t\t\t\t\tsysId,\n\t\t\t\t\telementSysIds: [],\n\t\t\t\t\toperator: BD_OPERATORS.DEFAULT,\n\t\t\t\t\toperatorOptions,\n\t\t\t\t\telementOptions: undefined,\n\t\t\t\t};\n\n\t\t\t\tcoeffects.updateState({\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `breakdowns[${index}]`,\n\t\t\t\t\tvalue: brData,\n\t\t\t\t});\n\t\t\t\tcoeffects.dispatch(LOAD_REQUIRED_DATA);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'breakdownOperator': {\n\t\t\t\tconst index = coeffects.action.payload.breakdownIndex;\n\t\t\t\tconst operator = coeffects.action.payload.option.id;\n\t\t\t\tconst brData: BreakdownData = {\n\t\t\t\t\t...state.breakdowns[index],\n\t\t\t\t\toperator,\n\t\t\t\t\telementSysIds: [],\n\t\t\t\t\telementsFilterSysId: undefined,\n\t\t\t\t\telementOptions: undefined,\n\t\t\t\t};\n\n\t\t\t\tcoeffects.updateState({\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `breakdowns[${index}]`,\n\t\t\t\t\tvalue: brData,\n\t\t\t\t});\n\n\t\t\t\tcoeffects.dispatch(LOAD_REQUIRED_DATA);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'elementSelectTypeahead': {\n\t\t\t\tconst index = coeffects.action.payload.breakdownIndex;\n\t\t\t\tconst elementId = coeffects.action.payload.option.id;\n\t\t\t\tconst { operator } = state.breakdowns[index];\n\n\t\t\t\tconst selectedElementWithType =\n\t\t\t\t\toperator === BD_OPERATORS.DEFAULT\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\telementSysIds: [elementId],\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\telementsFilterSysId: elementId,\n\t\t\t\t\t\t  };\n\n\t\t\t\thandleSelectElements(selectedElementWithType, coeffects);\n\t\t\t}\n\t\t}\n\t},\n\t'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET': handleTypeaheadMultiItemsSelected,\n\t'NOW_BUTTON_ICONIC#CLICKED': handleButtonClicked,\n\t'NOW_BUTTON#CLICKED': handleButtonClicked,\n\t'NOW_BUTTON_BARE#CLICKED': handleButtonClicked,\n};\n","//@flow\nimport { type OptionItem } from './state';\n\nlet cache: { [key: string]: OptionItem[] } = {};\n\nexport function invalidateCache() {\n\tcache = {};\n}\n\nexport function getBreakdownOptionsFromCache(uuid: string) {\n\treturn cache[uuid];\n}\n\nexport function setBreakdownOptionsToCache(\n\tuuid: string,\n\toptions: OptionItem[]\n) {\n\tcache[uuid] = options;\n}\n\nexport function getElementOptionsFromCache(uuid: string, sysId: string) {\n\treturn cache[uuid + '->' + sysId];\n}\n\nexport function setElementOptionsToCache(\n\tuuid: string,\n\tsysId: string,\n\toptions: OptionItem[]\n) {\n\tcache[uuid + '->' + sysId] = options;\n}\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.breakdown-selector{margin-bottom:2rem}.breakdown-selector .filter-accordion{border:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.breakdown-selector .filter-accordion .filter-header{height:45px;display:flex}.breakdown-selector .filter-accordion .filter-header .filter-header-label{cursor:pointer;flex-basis:100%;display:flex;padding:.5rem;padding-inline-start:1.5rem;padding-inline-end:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;font:unset;background-color:unset;color:unset}.breakdown-selector .filter-accordion .filter-header .filter-header-label::-moz-focus-inner{border-style:none}.breakdown-selector .filter-accordion .filter-header .filter-header-label:focus{box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px 2px 0 rgba(0,0,0,.3);outline:none}.breakdown-selector .filter-accordion .filter-header .filter-header-label .icon-filter{color:RGB(var(--now-color--neutral-11,73,88,90));margin-top:5px}.breakdown-selector .filter-accordion .filter-header .filter-header-label .filter-title{color:RGB(var(--now-color--neutral-12,66,80,81));font-size:1.25rem;margin-inline-start:.5rem;margin-inline-end:1rem}.breakdown-selector .filter-accordion .filter-header .filter-header-label .filter-subtitle{color:RGB(var(--now-color--neutral-6,154,164,165));font-size:1rem;padding-top:.25rem}.breakdown-selector .filter-accordion .filter-header .filter-header-label .filter-tag{padding:0 .25rem;font-size:.75rem;border-radius:.125rem;background-color:RGB(var(--now-color--alert-info-0,195,221,240));margin-top:6px}.breakdown-selector .filter-accordion .filter-header .filter-header-label.disabled{cursor:not-allowed}.breakdown-selector .filter-accordion .filter-header .filter-header-label.disabled .icon-arrow{color:RGB(var(--now-color--neutral-4,191,197,198))}.breakdown-selector .filter-accordion .filter-header .filter-header-action now-button-bare{margin:.75rem 1.5rem}.breakdown-selector .filter-accordion .filter-content{padding:0 1.5rem 1.5rem}.breakdown-selector .filter-accordion .filter-content .edit-filter .msg-filter-header{margin-bottom:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116));font-size:.75rem}.breakdown-selector .filter-accordion .filter-content .edit-filter .edit-filter-actions{margin-top:.75rem}.breakdown-selector .filter-accordion .filter-content .edit-filter .edit-filter-actions now-button:not(:first-of-type){margin-inline-start:1rem}.breakdown-selector .filter-accordion .filter-content .display-filter .condition-title{font-weight:600;font-size:1rem}.breakdown-selector .breakdown-row{display:flex;flex-direction:row;background-color:RGB(var(--now-color--neutral-1,246,247,247));margin-bottom:.5rem;padding:.25rem .5rem .5rem;clear:both}.breakdown-selector .breakdown-row .breakdown-typeahead{width:280px}.breakdown-selector .breakdown-row .operator-typeahead{margin-inline-start:1.5rem}.breakdown-selector .breakdown-row .element-typeahead{width:280px;margin-inline-start:1.5rem}.breakdown-selector .breakdown-row .row-buttons{margin-inline-start:.75rem;display:flex;flex-direction:row;align-items:flex-end;margin-left:auto;padding-bottom:7px}.breakdown-selector .breakdown-row .row-buttons .btn-add-container{padding-top:4px}.breakdown-selector .breakdown-row .row-buttons now-button,.breakdown-selector .breakdown-row .row-buttons now-button-bare,.breakdown-selector .breakdown-row .row-buttons now-button-iconic{margin-inline-start:.75rem}.breakdown-selector .bottom-buttons-row{margin-top:2rem;display:flex;flex-direction:row}\", \"\"]);\n\n// exports\n","// @flow\n\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { hasPropertyChanged } from '../helpers/props';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { effectProxy } from '../helpers/seismic';\nimport { type State } from './state';\nimport {\n\tINDICATOR_INFO_REQUESTED,\n\tINDICATOR_INFO_SUCCESS,\n\tINDICATOR_INFO_FAILURE,\n\tTOGGLE_INDICATOR_SOURCE_DETAILS,\n} from './constants';\nimport {\n\tFETCH_ELEMENTS_FINISHED,\n\tBREAKDOWN_CHANGED,\n} from '../breakdown-selector/constants';\nimport {\n\ttype IndicatorInfo,\n\ttype Condition,\n\ttype Breakdown,\n} from '../common/types/indicator';\nimport { INDICATOR_TYPE, AGGREGATE_TYPE } from '../common/types/data-source';\nimport { type Uuid } from '../common/types/uuid';\n\nconst handleBootstrap = (coeffects: Coeffects<State, void>) => {\n\tloadIndicatorInfo(coeffects);\n};\n\nconst handlePropertyChange = (coeffects: Coeffects<State, any>) => {\n\tif (\n\t\thasPropertyChanged(coeffects, 'selectedIndicatorInfo', [\n\t\t\t'previewUuid.indicator',\n\t\t])\n\t) {\n\t\tloadIndicatorInfo(coeffects);\n\t}\n};\n\nconst loadIndicatorInfo = (coeffects: Coeffects<State, any>) => {\n\tcoeffects.updateState({\n\t\tindicatorInfo: undefined,\n\t\tbreakdownElementsLoading: {},\n\t});\n\tconst { indicator } = coeffects.state.properties.selectedIndicatorInfo.uuid;\n\n\tcoeffects.dispatch(INDICATOR_INFO_REQUESTED, {\n\t\tsysID: indicator,\n\t\tconfig: JSON.stringify({ indicator }),\n\t});\n};\n\nexport const handleIndicatorInfoRequested = createGraphQLEffect(\n\t`query($sysID: String!, $config: String!) {\n\t\tquery: AppPARConfig_Query {\n\t\t\tindicatorDetails (sysID: $sysID) {\n\t\t\t\ttype {\n\t\t\t\t\tvalue\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t\tdirection {\n\t\t\t\t\tvalue\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t\tformula {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tunit {\n\t\t\t\t\tsysID\n\t\t\t\t\tname\n\t\t\t\t\tformat\n\t\t\t\t}\n\t\t\t\tprecision\n\t\t\t\tfrequency {\n\t\t\t\t\tvalue\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t\tfield\n\t\t\t\taggregate {\n\t\t\t\t\tvalue\n\t\t\t\t\tname\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t\tscripted\n\t\t\t\tscript {\n\t\t\t\t\tsysID\n\t\t\t\t\tname\n\t\t\t\t\tscript\n\t\t\t\t}\n\t\t\t\tconditions {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tindicatorSource {\n\t\t\t\t\tsysID\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\ttable {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tlabel\n\t\t\t\t\t}\n\t\t\t\t\tconditions {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t\tbreakdowns(uuid: $sysID) {\n\t\t\t\tvalues {\n\t\t\t\t\tsysId: sysID\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t},\n\t\telementFilter: AppDetailedScorecard_Query {\n\t\t\tresult: uuidQuery(config:$config) {\n\t\t\t  breakdowns {\n\t\t\t\t  sysId\n\t\t\t\t  elementFilters {\n\t\t\t\t\tsysId\n\t\t\t\t\ttitle\n\t\t\t\t  }\n\t\t\t  },\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['sysID', 'config'],\n\t\tsuccessActionType: INDICATOR_INFO_SUCCESS,\n\t\terrorActionType: INDICATOR_INFO_FAILURE,\n\t}\n);\n\nconst getReadableConditions = (conditions: ?Condition): ?Condition => {\n\tif (!conditions) return undefined;\n\n\tconst { value, displayValue = '' } = conditions;\n\n\tconst readableValue = displayValue\n\t\t.replace(/\\.and\\./gi, 'and')\n\t\t.replace(/\\.or\\./gi, 'or');\n\n\treturn {\n\t\tvalue,\n\t\tdisplayValue: readableValue,\n\t};\n};\n\n/***\n * Updates breakdowns with element filters if exists\n * @param { Breakdown[] } breakdowns - Breakdowns fetched using AppPARConfig_Query\n * @param { Breakdown[] } breakdownsWithElementFilters - Breakdowns fetched using AppDetailedScorecard_Query\n * @param { IndicatorInfo } indicatorInfo - Indicator Information\n */\nconst updateBreakdownsWithElementFilters = (\n\tbreakdowns: Breakdown[],\n\tbreakdownsWithElementFilters: Breakdown[],\n\tindicatorInfo: IndicatorInfo\n): Breakdown[] => {\n\tif (!shouldAddElementFilters(indicatorInfo)) return breakdowns;\n\n\tconst elementFilterMap = breakdownsWithElementFilters.reduce((map, bd) => {\n\t\tmap[bd.sysId] = bd.elementFilters;\n\t\treturn map;\n\t}, {});\n\n\treturn breakdowns.map(bd => {\n\t\tconst elementFilters = elementFilterMap[bd.sysId];\n\n\t\treturn elementFilters.length ? { ...bd, elementFilters } : bd;\n\t});\n};\n\nconst shouldAddElementFilters = (indicatorInfo: IndicatorInfo): boolean => {\n\tconst type = indicatorInfo.type.value;\n\tconst aggregate = indicatorInfo.aggregate.value;\n\n\tif (\n\t\ttype === INDICATOR_TYPE.AUTOMATED &&\n\t\t(aggregate === AGGREGATE_TYPE.COUNT ||\n\t\t\taggregate === AGGREGATE_TYPE.SUM ||\n\t\t\taggregate === AGGREGATE_TYPE.MIN ||\n\t\t\taggregate === AGGREGATE_TYPE.MAX)\n\t) {\n\t\treturn true;\n\t} else if (type === INDICATOR_TYPE.MANUAL || type === INDICATOR_TYPE.EXTERNAL)\n\t\treturn true;\n\n\treturn false;\n};\n\nconst removeDisabledBreakdowns = (uuid: Uuid, indicatorInfo: IndicatorInfo) => {\n\tconst activeBreakdowns = indicatorInfo.breakdowns;\n\n\tconst breakdowns = (uuid.breakdowns || []).filter(breakdown => {\n\t\tconst breakdownFound = activeBreakdowns.find(\n\t\t\tab => ab.sysId === breakdown.sysId\n\t\t);\n\n\t\tif (!breakdownFound) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!breakdown.elementsFilterSysId) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst elementFilters = breakdownFound.elementFilters || [];\n\n\t\treturn !!elementFilters.find(\n\t\t\tef => ef.sysId === breakdown.elementsFilterSysId\n\t\t);\n\t});\n\n\treturn {\n\t\t...uuid,\n\t\tbreakdowns,\n\t};\n};\n\nconst getBreakdownsLoading = (\n\tcoeffects: Coeffects<State, any>,\n\tindicatorInfo: IndicatorInfo\n) => {\n\tconst {\n\t\tselectedIndicatorInfo: { uuid, previewUuid },\n\t} = coeffects.state.properties;\n\n\tconst validUuid = removeDisabledBreakdowns(uuid, indicatorInfo);\n\tconst validPreviewUuid = removeDisabledBreakdowns(previewUuid, indicatorInfo);\n\n\tif (!isEqual(uuid, validUuid) || !isEqual(previewUuid, validPreviewUuid)) {\n\t\tcoeffects.dispatch(BREAKDOWN_CHANGED, {\n\t\t\tuuid: validUuid,\n\t\t\tpreviewUuid: validPreviewUuid,\n\t\t});\n\t}\n\n\tconst breakdownElementsLoading = validUuid.breakdowns.reduce(\n\t\t(acc, { sysId }) => {\n\t\t\tacc[sysId] = true;\n\t\t\treturn acc;\n\t\t},\n\t\t{}\n\t);\n\n\treturn breakdownElementsLoading;\n};\n\nconst handleIndicatorInfoSuccess = (coeffects: Coeffects<State, any>) => {\n\tconst indicatorInfo: IndicatorInfo =\n\t\tget(coeffects.action, 'payload.data.query.indicatorDetails') || {};\n\n\tconst breakdowns =\n\t\tget(coeffects.action, 'payload.data.query.breakdowns.values') || [];\n\n\tconst breakdownsWithElementFilters =\n\t\tget(coeffects.action, 'payload.data.elementFilter.result.breakdowns') || [];\n\n\tindicatorInfo.breakdowns = updateBreakdownsWithElementFilters(\n\t\tbreakdowns,\n\t\tbreakdownsWithElementFilters,\n\t\tindicatorInfo\n\t);\n\n\tconst { indicatorSource, conditions } = indicatorInfo;\n\n\tindicatorInfo.conditions = getReadableConditions(conditions);\n\n\tif (indicatorSource) {\n\t\tindicatorSource.conditions = getReadableConditions(\n\t\t\tindicatorSource.conditions\n\t\t);\n\t}\n\n\tconst breakdownElementsLoading = getBreakdownsLoading(\n\t\tcoeffects,\n\t\tindicatorInfo\n\t);\n\n\tcoeffects.updateState({\n\t\tindicatorInfo,\n\t\tbreakdownElementsLoading: breakdownElementsLoading,\n\t});\n};\n\nconst handleIndicatorInfoFailure = () => {\n\t//TODO: create some good error-handling strategy\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: handleBootstrap,\n\t\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: handlePropertyChange,\n\t\t[INDICATOR_INFO_REQUESTED]: effectProxy(handleIndicatorInfoRequested),\n\t\t[INDICATOR_INFO_SUCCESS]: handleIndicatorInfoSuccess,\n\t\t[INDICATOR_INFO_FAILURE]: handleIndicatorInfoFailure,\n\t\t'NOW_BUTTON_BARE#CLICKED': (coeffects: Coeffects<State, any>) => {\n\t\t\tswitch (coeffects.action.payload.payloadActionType) {\n\t\t\t\tcase TOGGLE_INDICATOR_SOURCE_DETAILS: {\n\t\t\t\t\tcoeffects.action.stopPropagation();\n\t\t\t\t\tif (coeffects.state.indicatorInfo) {\n\t\t\t\t\t\tcoeffects.updateState({\n\t\t\t\t\t\t\tdisplaySourceDetails: !coeffects.state.displaySourceDetails,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[FETCH_ELEMENTS_FINISHED]: (coeffects: Coeffects<State, any>) => {\n\t\t\tconst { sysID } = coeffects.action.payload;\n\n\t\t\tcoeffects.updateState({\n\t\t\t\tpath: `breakdownElementsLoading[${sysID}]`,\n\t\t\t\tvalue: false,\n\t\t\t\toperation: 'set',\n\t\t\t});\n\t\t},\n\t},\n};\n","export const QUERY_LENGTH_LIMIT = 100;\n\nconst PREFIX = 'INDICATOR_CONFIGURATION#';\n\nexport const INDICATOR_INFO_REQUESTED = PREFIX + 'INDICATOR_INFO_REQUESTED';\nexport const INDICATOR_INFO_SUCCESS = PREFIX + 'INDICATOR_INFO_SUCCESS';\nexport const INDICATOR_INFO_FAILURE = PREFIX + 'INDICATOR_INFO_FAILURE';\nexport const INDICATOR_CONFIG_CHANGED = PREFIX + 'INDICATOR_CONFIG_CHANGED';\nexport const TOGGLE_INDICATOR_SOURCE_DETAILS =\n\tPREFIX + 'TOGGLE_INDICATOR_SOURCE_DETAILS';\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".indicator-config.is-loading{visibility:hidden}.loading-container{padding:2.5rem}\", \"\"]);\n\n// exports\n","// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport '@servicenow/now-message';\nimport '@servicenow/now-illustration';\n\nexport default function EmptyStateView({ properties }) {\n\treturn (\n\t\t<now-message className=\"viz-config-empty\" alignment=\"vertical-centered\">\n\t\t\t<div\n\t\t\t\tslot=\"media\"\n\t\t\t\tclass={{\n\t\t\t\t\t'viz-config-empty__image': true,\n\t\t\t\t\t'viz-config-empty__image--auto-size': !properties.forceSize,\n\t\t\t\t}}>\n\t\t\t\t<now-illustration\n\t\t\t\t\tillustration={properties.illustration}\n\t\t\t\t\tsize={properties.forceSize || 'auto'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div slot=\"message\" className=\"viz-config-empty__messages\">\n\t\t\t\t<h2 className=\"viz-config-empty__messages__title\">\n\t\t\t\t\t<slot name=\"title\" />\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"viz-config-empty__messages__primary\">\n\t\t\t\t\t<slot name=\"primary\" />\n\t\t\t\t</p>\n\t\t\t\t<p className=\"viz-config-empty__messages__secondary\">\n\t\t\t\t\t<slot name=\"secondary\" />\n\t\t\t\t</p>\n\t\t\t\t<slot name=\"actions\" />\n\t\t\t</div>\n\t\t</now-message>\n\t);\n}\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".viz-config-empty{text-align:center;margin:auto}.viz-config-empty__image{width:100%}.viz-config-empty__image now-illustration{display:block;height:100px}@media (min-width:768px){.viz-config-empty__image--auto-size now-illustration{height:220px}}@media (min-width:992px){.viz-config-empty__image--auto-size now-illustration{height:360px}}.viz-config-empty__messages__title{margin:0;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif;font-weight:600}.viz-config-empty__messages__primary,.viz-config-empty__messages__title{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.viz-config-empty__messages__secondary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}.viz-config-empty__messages__primary,.viz-config-empty__messages__secondary{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif;padding:0 1rem;font-weight:400;font-size:.75rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flex-grid{display:flex;height:calc(100vh - 11rem);overflow-y:hidden}.flex-grid .source-selector-container{margin-right:20px;flex:0 0 320px;overflow:hidden}@media screen and (min-width:1440px){.flex-grid .source-selector-container{flex-basis:450px}}.flex-grid .source-configuration-panel{flex-grow:1;display:flex;flex-direction:column}.flex-grid .source-configuration-panel .source-preview-header{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)));font-size:1rem;font-weight:600}.flex-grid .source-configuration-panel .source-configuration-panel-content{position:relative;min-width:900px;overflow:auto}viz-config-empty-state{display:block;margin-top:4.375rem}\", \"\"]);\n\n// exports\n","// @flow\n// @jsx snabbdom.createElement\nimport '../empty-state';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\n\nimport { ADD_DATA_SOURCE_SELECTED } from './constants';\n\nexport function ConfigPanelEmptyStateView() {\n\treturn (\n\t\t<viz-config-empty-state illustration=\"unconfigured\" force-size=\"sm\">\n\t\t\t<span slot=\"primary\">{t('No data source yet')}</span>\n\t\t\t<span slot=\"secondary\">\n\t\t\t\t{t('Add a data source to start creating your visualization')}\n\t\t\t</span>\n\t\t\t<div slot=\"actions\">\n\t\t\t\t<now-button\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: ADD_DATA_SOURCE_SELECTED,\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"btn-link-source\"\n\t\t\t\t\tlabel={t('Add data source')}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</viz-config-empty-state>\n\t);\n}\n","//@flow\n\nexport const setWebcomponentFocus = (\n\telm: WebComponentElement,\n\telemGetter: (elm: ShadowRoot) => ?HTMLElement\n): void => {\n\trequestAnimationFrame(() => {\n\t\telm.shadowRoot &&\n\t\t\tsetTimeout(\n\t\t\t\tshadowRoot => {\n\t\t\t\t\tconst element = elemGetter(shadowRoot);\n\n\t\t\t\t\telement && element.focus();\n\t\t\t\t},\n\t\t\t\t0,\n\t\t\t\telm.shadowRoot\n\t\t\t);\n\t});\n};\n\nexport const createSetFocusHandler = (\n\telemGetter: (elm: ShadowRoot) => ?HTMLElement\n) => ({ elm }: any) => setWebcomponentFocus(elm, elemGetter);\n","// @flow\n\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\n\nimport { dispatchCloseRequestEvent } from '@now-par-components/sn-par-popover';\nimport { actionTypesSourceConfiguration } from './../source-configuration/actions';\n\nimport {\n\tSN_PAR_PILLAR_CLICKED,\n\tSN_PAR_PILLAR_ACTION_CLICKED,\n} from '@now-par-components/sn-par-pillar';\nimport { SN_PAR_POPOVER_CLOSE_REQUEST } from '@now-par-components/sn-par-popover';\nimport {\n\tADD_DATA_SOURCE_SELECTED,\n\tADD_NEW_DATA_SOURCE,\n\tCHANGE_DATA_SOURCE_LABEL,\n\tSAVE_LABEL,\n} from './constants';\nimport { REMOVE_DATA_SOURCE } from '../visualizations-config-panel/actions/action-constants';\n\nconst handleAddDataSourceSelected = (coeffects: Coeffects<State, any>) => {\n\tlet stateChanges = {};\n\n\tswitch (coeffects.action.payload.payloadActionType) {\n\t\tcase ADD_DATA_SOURCE_SELECTED:\n\t\tcase ADD_NEW_DATA_SOURCE:\n\t\t\tstateChanges = {\n\t\t\t\tsourceConfigurationOpened: true,\n\t\t\t\taddNewDataSource: true,\n\t\t\t};\n\t\t\tbreak;\n\t}\n\n\tdispatchCloseRequestEvent(SN_PAR_POPOVER_CLOSE_REQUEST);\n\tcoeffects.updateState(stateChanges);\n};\n\nconst handlePillarSourceClick = (coeffects: Coeffects<State, any>) => {\n\tconst { updateState, dispatch, action } = coeffects;\n\tconst { id, dataSource, dataSourceIndex } = action.payload;\n\n\tswitch (id) {\n\t\tcase 'remove':\n\t\t\tdispatch(REMOVE_DATA_SOURCE, { dataSource, dataSourceIndex });\n\t\t\tbreak;\n\n\t\tcase 'rename':\n\t\t\tupdateState({\n\t\t\t\tlabelEditingOnIndex: dataSourceIndex,\n\t\t\t\tlabelEditingValue: undefined,\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase 'save-label':\n\t\t\thandleSaveLabel(coeffects);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tdispatchCloseRequestEvent(SN_PAR_POPOVER_CLOSE_REQUEST);\n\n\t\t\tupdateState({\n\t\t\t\tsourceConfigurationOpened: true,\n\t\t\t\taddNewDataSource: false,\n\t\t\t\teditDataSource: dataSource,\n\t\t\t\teditDataSourceIndex: dataSourceIndex,\n\t\t\t\tlabelEditingOnIndex: undefined,\n\t\t\t});\n\t}\n};\n\nconst handleSaveLabel = ({\n\tstate,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { labelEditingValue, labelEditingOnIndex } = state;\n\n\tupdateState({\n\t\tlabelEditingOnIndex: undefined,\n\t});\n\n\tif (labelEditingValue) {\n\t\tdispatch(CHANGE_DATA_SOURCE_LABEL, {\n\t\t\tlabelEditingValue,\n\t\t\tlabelEditingOnIndex,\n\t\t});\n\t}\n};\n\nconst handleDevxInputChanged = ({\n\tupdateState,\n\taction,\n}: Coeffects<State, any>) =>\n\tupdateState({\n\t\tlabelEditingValue: action.payload.value,\n\t});\n\nexport default {\n\tactions: {},\n\tactionHandlers: {\n\t\t'NOW_BUTTON#CLICKED': handleAddDataSourceSelected,\n\t\t/**\n\t\t * For now the only aciton is the \"edit\"\n\t\t * which is also the same action when the user clicks in the entire pillar\n\t\t * @TODO if needed, change the handler of actions to check the action id in case of multiple\n\t\t */\n\t\t[SN_PAR_PILLAR_ACTION_CLICKED]: handlePillarSourceClick,\n\t\t[SN_PAR_PILLAR_CLICKED]: handlePillarSourceClick,\n\n\t\t'DEVX_INPUT#INPUT_CHANGED': handleDevxInputChanged,\n\t\t[SAVE_LABEL]: handleSaveLabel,\n\n\t\t[actionTypesSourceConfiguration.ADD_SOURCE]: (\n\t\t\tcoeffects: Coeffects<State, any>\n\t\t) => {\n\t\t\tcoeffects.updateState({ sourceConfigurationOpened: false });\n\t\t},\n\n\t\t[actionTypesSourceConfiguration.CANCEL]: (\n\t\t\tcoeffects: Coeffects<State, any>\n\t\t) => {\n\t\t\tcoeffects.updateState({ sourceConfigurationOpened: false });\n\t\t},\n\t},\n};\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.source-list-container{background-color:RGB(var(--now-color--neutral-2,228,230,231));padding:.5rem .4375rem;border-radius:.25rem;box-shadow:inset 0 1px 1px 1px RGB(var(--now-color--neutral-4,191,197,198));margin:.4rem .4rem 0}.source-list-container .source-list-title{padding:.5rem}.source-list-container .btn-add-data-source{margin-top:.5rem;width:100%}.source-list-container sn-par-pillar{display:block;margin-bottom:.25rem}.source-list-container sn-par-pillar .source-list--ds-name{word-break:break-word}.source-list-container sn-par-pillar .source-list__label-edit{margin-top:-.125rem;margin-bottom:.125rem;margin-left:.5rem;background-color:RGB(var(--now-color--secondary-0,217,235,238))}now-accordion{margin:0 -.75rem}viz-config-empty-state{display:block;width:15.625rem;margin:5rem auto}viz-config-empty-state .btn-link-source{margin-top:1.5rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport { GroupByView } from './view';\nimport groupBySelectorActions from './actions';\nimport { initialState } from './state';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-group-by-selector', {\n\trenderer: { type: snabbdom },\n\tview: GroupByView,\n\tinitialState,\n\tproperties: {\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdataSourceInfos: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdotWalkFieldDefinition: {\n\t\t\tdefault: {},\n\t\t},\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tstyles,\n\t...groupBySelectorActions,\n});\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport 'sn-devx-components';\nimport '../toggle';\nimport { type State } from './state';\nimport '@servicenow/now-accordion';\nimport '@servicenow/now-popover';\n\nimport './group-by-popover';\nimport './stack-by-popover';\n\nimport {\n\tGROUP_BY_NOT_SUPPORTED,\n\tSTACK_BY_NOT_SUPPORTED,\n\tGROUP_BY_MANDATORY,\n\tTIMESERIES_CHART_TYPES,\n\tPIES_CHART_TYPES,\n} from '../common/chart-settings';\n\nimport { SOURCE_TYPE_INDICATOR } from '../common/types/data-source';\n\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport {\n\tgetGroupBySupport,\n\tgetStackBySupport,\n} from '../visualizations-config-panel/actions/model-validators';\nimport {\n\thasGroupByOptions,\n\thasStackByOptions,\n} from '../visualizations-config-panel/actions/model-options';\n\nimport {\n\tGROUP_BY_FIELD,\n\tGROUP_BY_MAX_NUMBER_ALL,\n\tPILLAR_GROUP_BY,\n\tPILLAR_STACK_BY,\n\tCLICK_BUTTON_ADD_GROUP_BY,\n\tPOPOVER_CONTENT_GROUP_BY,\n\tPOPOVER_CONTENT_STACK_BY,\n\tPILLAR_EDIT_ACTION,\n\tPILLAR_REMOVE_ACTION,\n\tMAIN_POPOVER,\n\tCHART_VARIATIONS,\n\tSET_CHART_VARIATION,\n} from './constants';\n\nimport { SIDE_BY_SIDE } from '../common/chart-settings';\n\nimport { doesShowChartVariation } from '../helpers/display-settings/helpers';\n\nimport { autoScrollToVisibility } from '../helpers/now-accordion/auto-scroll-to-visibility';\nimport { nowPopoverAllowedPositions } from '../common/popover-config';\n\nimport { isFieldReportRangeForDataSource } from '../helpers/data-source/index';\nimport { getMissingGroupByIcon } from './helpers';\n\nconst preventClickFromOpenPopover = e => e.stopPropagation();\n\nconst getNoMatchingBreakdownsError = () => {\n\treturn (\n\t\t<div slot=\"content\" className=\"now-accordion-content\">\n\t\t\t<div className=\"error-message\">\n\t\t\t\t<now-icon icon=\"circle-exclamation-outline\" size=\"md\"></now-icon>\n\t\t\t\t<label>\n\t\t\t\t\t{t('There are no matching breakdowns for the selected indicators.')}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst getAccordionContent = (state: State, groupBySupport: string) => {\n\tconst {\n\t\tproperties: { chartModel, dataSourceInfos },\n\t\tstackByLabel,\n\t} = state;\n\n\tconst { dataSources, isStacked } = chartModel;\n\tconst stackBySupport = getStackBySupport(chartModel);\n\tconst isIndicator = dataSources.some(\n\t\tds => ds.sourceType === SOURCE_TYPE_INDICATOR\n\t);\n\n\tconst hasGroupBy = dataSources.some(ds => ds.groupByField);\n\n\tlet allowedElements = 2;\n\tlet infoMessage = '';\n\tlet selectedElements = 0;\n\tlet pillarActions = [];\n\tlet hasStackBy = false;\n\n\tif (isTimeseriesWithMultipleMetrics(chartModel)) {\n\t\tinfoMessage = t(\n\t\t\t'Group by is not available for time series visualizations with more than one metric.'\n\t\t);\n\t\tallowedElements = 0;\n\t} else if (\n\t\t!hasGroupByOptions(\n\t\t\tdataSources,\n\t\t\tdataSourceInfos,\n\t\t\tstate.properties.dotWalkFieldDefinition\n\t\t)\n\t) {\n\t\tif (dataSources.length === 1 || !isIndicator) {\n\t\t\tinfoMessage = isIndicator\n\t\t\t\t? t('This data source doesn’t have breakdowns to group by.')\n\t\t\t\t: t('This data source doesn’t have fields to group by.');\n\t\t\tallowedElements = 0;\n\t\t} else {\n\t\t\treturn getNoMatchingBreakdownsError();\n\t\t}\n\t} else if (stackBySupport === STACK_BY_NOT_SUPPORTED) {\n\t\tallowedElements = 1;\n\t} else if (!hasStackByOptions(dataSources, dataSourceInfos)) {\n\t\tinfoMessage = t('This data source has only one field to group by.');\n\n\t\tallowedElements = 1;\n\t}\n\n\tif (hasGroupBy) {\n\t\tpillarActions.push({\n\t\t\ticon: 'pencil-outline',\n\t\t\tid: PILLAR_EDIT_ACTION,\n\t\t\tlabel: t('Edit group by'),\n\t\t});\n\n\t\tif (\n\t\t\t!(\n\t\t\t\tgroupBySupport === GROUP_BY_MANDATORY &&\n\t\t\t\tstackBySupport === STACK_BY_NOT_SUPPORTED\n\t\t\t)\n\t\t) {\n\t\t\tpillarActions.push({\n\t\t\t\ticon: 'circle-close-outline',\n\t\t\t\tid: PILLAR_REMOVE_ACTION,\n\t\t\t\tdisabled: groupBySupport === GROUP_BY_MANDATORY && !stackByLabel,\n\t\t\t\tlabel: t('Remove group by'),\n\t\t\t});\n\t\t}\n\n\t\thasStackBy = dataSources.some(ds => ds.stackByField);\n\n\t\tselectedElements++;\n\n\t\tif (hasStackBy) {\n\t\t\tselectedElements++;\n\t\t}\n\t}\n\n\tconst allowGroupBy = selectedElements < allowedElements;\n\n\tconst groupBySelectorClass =\n\t\tstackBySupport === STACK_BY_NOT_SUPPORTED\n\t\t\t? 'group-by-selector'\n\t\t\t: 'group-by-selector pillar-box';\n\n\tconst showChartVariation = doesShowChartVariation(chartModel);\n\n\treturn (\n\t\t<div slot=\"content\" className=\"now-accordion-content\">\n\t\t\t<div className={groupBySelectorClass}>\n\t\t\t\t{getGroupByPopover(state, pillarActions, allowGroupBy && !hasGroupBy)}\n\t\t\t\t{getStackByPopover(state, allowGroupBy && !hasStackBy && hasGroupBy)}\n\t\t\t\t{infoMessage ? (\n\t\t\t\t\t<now-button\n\t\t\t\t\t\tid=\"btn-add-group-by\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: CLICK_BUTTON_ADD_GROUP_BY,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ticon=\"plus-fill\"\n\t\t\t\t\t\tlabel={t('Add')}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={!!infoMessage}\n\t\t\t\t\t\tvariant=\"secondary\"></now-button>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t{showChartVariation ? (\n\t\t\t\t<div className=\"chart-variation\">\n\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\tlabel={t('Chart variation')}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tid=\"chart-variation-dropdown\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_CHART_VARIATION,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={CHART_VARIATIONS}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[isStacked || SIDE_BY_SIDE]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Chart variation'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t\t{infoMessage ? (\n\t\t\t\t<div className=\"info-message\">\n\t\t\t\t\t<now-icon icon=\"circle-info-outline\" size=\"md\"></now-icon>\n\t\t\t\t\t<label>{infoMessage}</label>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nconst getGroupByPopover = (\n\tstate: State,\n\tpillarActions: any[],\n\tshowButton: boolean\n) => {\n\tconst {\n\t\tproperties: { chartModel, dataSourceInfos, dotWalkFieldDefinition },\n\t\tpopoverContent,\n\t\tpopoverOpened,\n\t\tpopoverClosedAt,\n\t\tpopoverTarget,\n\t\tgroupByLabel,\n\t\tdataToApply,\n\t\terrorMessages,\n\t\tlocalOptions,\n\t} = state;\n\n\tconst { dataSources } = chartModel;\n\n\tconst isFirstGroupByReportRange = isFieldReportRangeForDataSource(\n\t\tdataToApply[`${GROUP_BY_FIELD}${0}`],\n\t\tdataSources[0],\n\t\tdataSourceInfos\n\t);\n\n\tlet triggerContent;\n\n\tif (\n\t\tisFirstGroupByReportRange &&\n\t\tdataToApply.groupByMax !== GROUP_BY_MAX_NUMBER_ALL\n\t)\n\t\tdataToApply.groupByMax = GROUP_BY_MAX_NUMBER_ALL;\n\n\tif (isFirstGroupByReportRange) dataToApply.showOthers = false;\n\n\tif (dataSources.some(ds => ds.groupByField)) {\n\t\ttriggerContent = (\n\t\t\t<sn-par-pillar\n\t\t\t\tslot=\"trigger\"\n\t\t\t\tid={PILLAR_GROUP_BY}\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: PILLAR_GROUP_BY,\n\t\t\t\t}}\n\t\t\t\tclickable\n\t\t\t\tellipsis\n\t\t\t\tactions={pillarActions}\n\t\t\t\ton-click={preventClickFromOpenPopover}>\n\t\t\t\t{getMissingGroupByIcon(dataSources)}\n\t\t\t\t{groupByLabel}\n\t\t\t</sn-par-pillar>\n\t\t);\n\t} else if (showButton) {\n\t\ttriggerContent = (\n\t\t\t<now-button\n\t\t\t\tslot=\"trigger\"\n\t\t\t\tid=\"btn-add-group-by\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: CLICK_BUTTON_ADD_GROUP_BY,\n\t\t\t\t}}\n\t\t\t\ticon=\"plus-fill\"\n\t\t\t\tlabel={t('Add')}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"secondary\"\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<now-popover\n\t\t\tappend-to-payload={{ type: MAIN_POPOVER }}\n\t\t\topened={popoverOpened && popoverContent === POPOVER_CONTENT_GROUP_BY}\n\t\t\tpositions={nowPopoverAllowedPositions}\n\t\t\tposition-target={popoverTarget}\n\t\t\tmanage-opened>\n\t\t\t{triggerContent}\n\t\t\t<viz-config-group-by-popover-content\n\t\t\t\tslot=\"content\"\n\t\t\t\tshared-state={{\n\t\t\t\t\tchartModel,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tpopoverClosedAt,\n\t\t\t\t\tdataToApply,\n\t\t\t\t\terrorMessages,\n\t\t\t\t\tlocalOptions,\n\t\t\t\t\tdotWalkFieldDefinition,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</now-popover>\n\t);\n};\n\nconst getStackByPopover = (state: State, showButton: boolean) => {\n\tconst {\n\t\tproperties: {\n\t\t\tchartModel: { dataSources },\n\t\t},\n\t\tstackByLabel,\n\t\tpopoverContent,\n\t\tpopoverOpened,\n\t\tpopoverTarget,\n\t} = state;\n\n\tlet triggerContent;\n\n\tif (dataSources.some(ds => ds.stackByField)) {\n\t\ttriggerContent = (\n\t\t\t<sn-par-pillar\n\t\t\t\tslot=\"trigger\"\n\t\t\t\tid={PILLAR_STACK_BY}\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: PILLAR_STACK_BY,\n\t\t\t\t}}\n\t\t\t\tclickable\n\t\t\t\tellipsis\n\t\t\t\ton-click={preventClickFromOpenPopover}\n\t\t\t\tactions={[\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: 'pencil-outline',\n\t\t\t\t\t\tid: PILLAR_EDIT_ACTION,\n\t\t\t\t\t\tlabel: t('Edit group by'),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: 'circle-close-outline',\n\t\t\t\t\t\tid: PILLAR_REMOVE_ACTION,\n\t\t\t\t\t\tlabel: t('Remove group by'),\n\t\t\t\t\t},\n\t\t\t\t]}>\n\t\t\t\t{stackByLabel}\n\t\t\t</sn-par-pillar>\n\t\t);\n\t} else if (showButton) {\n\t\ttriggerContent = (\n\t\t\t<now-button\n\t\t\t\tslot=\"trigger\"\n\t\t\t\tid=\"btn-add-group-by\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tpayloadActionType: CLICK_BUTTON_ADD_GROUP_BY,\n\t\t\t\t}}\n\t\t\t\ticon=\"plus-fill\"\n\t\t\t\tlabel={t('Add')}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"secondary\"\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<now-popover\n\t\t\tappend-to-payload={{ type: MAIN_POPOVER }}\n\t\t\topened={popoverOpened && popoverContent === POPOVER_CONTENT_STACK_BY}\n\t\t\tpositions={nowPopoverAllowedPositions}\n\t\t\tposition-target={popoverTarget}\n\t\t\tmanage-opened>\n\t\t\t{triggerContent}\n\t\t\t<viz-config-stack-by-popover-content\n\t\t\t\tslot=\"content\"\n\t\t\t\tshared-state={state}\n\t\t\t/>\n\t\t</now-popover>\n\t);\n};\n\nconst isTimeseriesWithMultipleMetrics = (chartModel: ChartModel) =>\n\tTIMESERIES_CHART_TYPES.includes(chartModel.chartType) &&\n\tchartModel.metrics.length > 1;\n\nexport const GroupByView = (state: State) => {\n\tconst {\n\t\tproperties: { chartModel, expanded },\n\t} = state;\n\n\tconst groupBySupport = getGroupBySupport(chartModel);\n\n\t// Timeseries with multiple metrics don't support support but needs to display error message\n\n\tif (\n\t\tgroupBySupport === GROUP_BY_NOT_SUPPORTED &&\n\t\t!isTimeseriesWithMultipleMetrics(chartModel)\n\t) {\n\t\treturn;\n\t}\n\n\tconst groupByAccordionLabel = PIES_CHART_TYPES.includes(chartModel.chartType)\n\t\t? t('Group by (Slices)')\n\t\t: t('Group by');\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={groupByAccordionLabel}\n\t\t\texpanded={expanded}\n\t\t\tappend-to-payload={{ accordionItem: 'groupBy' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t{getAccordionContent(state, groupBySupport)}\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport '../dot-walk';\n\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\n\nimport styles from './styles.scss';\n\nimport { type DataSource } from '../common/types/data-source';\nimport { type FieldDefinition } from '../common/types/field';\nimport { isFieldReportRangeForDataSource } from '../helpers/data-source';\nimport {\n\tgetGroupByOptionsFilter,\n\tgetTableReferenceFields,\n} from '../visualizations-config-panel/actions/model-options';\nimport { TIMESERIES_CHART_TYPES } from '../common/chart-settings';\n\nimport {\n\tAPPLY_GROUP_BY_POPOVER,\n\tSHOW_OTHERS,\n\tGROUP_BY_MAX_NUMBER,\n\tGROUP_BY_MAX,\n\tNO_OF_GROUP_BASED_ON,\n\tSET_GROUP_BY_MAX,\n\tSET_NO_OF_GROUP_BASED_ON,\n\tGROUP_BY_FIELD,\n\tCLOSE_GROUP_BY_POPOVER,\n\tGROUP_BY_MAX_NUMBER_ALL,\n\tNO_OF_GROUP_BASED_ON_OPTIONS,\n\tNO_OF_GROUP_BASED_ON_FIRST_METRIC,\n} from './constants';\n\nimport {\n\tSOURCE_TYPE_INDICATOR,\n\tSOURCE_TYPE_TABLE,\n} from '../common/types/data-source';\nimport {\n\tcreateTransformMetadataFn,\n\tupdateModelWithGroupByValues,\n} from './helpers/transform-metadata';\n\ncreateCustomElement('viz-config-group-by-popover-content', {\n\trenderer: { type: snabbdom },\n\tview: state => {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tsharedState: {\n\t\t\t\t\tchartModel,\n\t\t\t\t\terrorMessages,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tdataToApply,\n\t\t\t\t\tlocalOptions,\n\t\t\t\t\tdotWalkFieldDefinition,\n\t\t\t\t},\n\t\t\t},\n\t\t} = state;\n\n\t\tconst { chartType, dataSources } = chartModel;\n\n\t\tconst patchedChartModel = updateModelWithGroupByValues(\n\t\t\tcloneDeep(chartModel),\n\t\t\tdataToApply\n\t\t);\n\n\t\tconst transformMetadataFilter = (\n\t\t\tdataSource: DataSource,\n\t\t\tfieldDefinition: FieldDefinition\n\t\t) =>\n\t\t\tgetGroupByOptionsFilter(\n\t\t\t\tdataSource,\n\t\t\t\tpatchedChartModel.dataSources,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tdotWalkFieldDefinition\n\t\t\t)(fieldDefinition);\n\n\t\tconst transformMetadata = createTransformMetadataFn(\n\t\t\ttransformMetadataFilter\n\t\t);\n\n\t\tconst isIndicator = dataSources.some(\n\t\t\tdataSource => dataSource.sourceType === SOURCE_TYPE_INDICATOR\n\t\t);\n\t\tconst isTimeseries = TIMESERIES_CHART_TYPES.includes(chartType);\n\n\t\tconst showNumberOfGroups = !isTimeseries || (isTimeseries && isIndicator);\n\n\t\tconst showNoOfGroupBasedOn = dataSources.length > 1;\n\n\t\tconst isApplyDisabled = dataSources.some((ds, index) => {\n\t\t\t// Indicator displays only one group by field\n\t\t\tif (index > 0 && ds.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst fieldName = `${GROUP_BY_FIELD}${index}`;\n\n\t\t\treturn !dataToApply[fieldName];\n\t\t});\n\n\t\tconst isFirstGroupByReportRange = isFieldReportRangeForDataSource(\n\t\t\tdataToApply[`${GROUP_BY_FIELD}${0}`],\n\t\t\tdataSources[0],\n\t\t\tdataSourceInfos\n\t\t);\n\n\t\tif (\n\t\t\tisFirstGroupByReportRange &&\n\t\t\tdataToApply.groupByMax !== GROUP_BY_MAX_NUMBER_ALL\n\t\t)\n\t\t\tdataToApply.groupByMax = GROUP_BY_MAX_NUMBER_ALL;\n\n\t\tif (isFirstGroupByReportRange) dataToApply.showOthers = false;\n\t\telse if (\n\t\t\tdataToApply.noOfGroupBasedOn === NO_OF_GROUP_BASED_ON_FIRST_METRIC &&\n\t\t\tdataSources.length > 1\n\t\t)\n\t\t\tdataToApply.showOthers = false;\n\n\t\tconst showOthersToggle =\n\t\t\tdataToApply.groupByMax !== GROUP_BY_MAX_NUMBER_ALL &&\n\t\t\t(dataSources.length == 1 ||\n\t\t\t\tdataToApply.noOfGroupBasedOn !== NO_OF_GROUP_BASED_ON_FIRST_METRIC) &&\n\t\t\t!isIndicator &&\n\t\t\t!isTimeseries;\n\n\t\treturn (\n\t\t\t<div className=\"viz-config-group-by-popover\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={t('Group by')}\n\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\tvariant=\"title-secondary\"\n\t\t\t\t/>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tbare\n\t\t\t\t\ticon=\"close-fill\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: CLOSE_GROUP_BY_POPOVER,\n\t\t\t\t\t}}\n\t\t\t\t\tconfig-aria={{ 'aria-label': t('Close') }}\n\t\t\t\t/>\n\t\t\t\t{dataSources.map((dataSource, index) => {\n\t\t\t\t\tif (index > 0 && dataSource.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tableName = dataSource.tableName;\n\t\t\t\t\tconst fieldName = `${GROUP_BY_FIELD}${index}`;\n\t\t\t\t\tconst options = localOptions[fieldName] || [];\n\t\t\t\t\tconst noOptions = options.length === 0;\n\n\t\t\t\t\tconst label =\n\t\t\t\t\t\tdataSource.sourceType === SOURCE_TYPE_TABLE\n\t\t\t\t\t\t\t? t('Field for {0}', dataSource.label)\n\t\t\t\t\t\t\t: t('Breakdown');\n\n\t\t\t\t\tconst placeholder = noOptions\n\t\t\t\t\t\t? t('No matches')\n\t\t\t\t\t\t: dataSource.sourceType === SOURCE_TYPE_TABLE\n\t\t\t\t\t\t? t('Select a field')\n\t\t\t\t\t\t: t('Select a breakdown');\n\n\t\t\t\t\tconst errorMessage = noOptions\n\t\t\t\t\t\t? t('There are no related matches to the first field')\n\t\t\t\t\t\t: errorMessages[fieldName];\n\n\t\t\t\t\tconst messages = errorMessage\n\t\t\t\t\t\t? [{ status: 'critical', content: errorMessage }]\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\tif (isIndicator) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<now-select\n\t\t\t\t\t\t\t\tdisabled={noOptions}\n\t\t\t\t\t\t\t\tid={fieldName}\n\t\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tfieldName,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\titems={options}\n\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\tselected-item={\n\t\t\t\t\t\t\t\t\tdataToApply[fieldName] || dataSource.groupByField\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst hasReferenceFields =\n\t\t\t\t\t\tgetTableReferenceFields(chartModel, dataSourceInfos[dataSource.id])\n\t\t\t\t\t\t\t.length > 0;\n\n\t\t\t\t\tconst dotWalkError =\n\t\t\t\t\t\t!dataToApply[fieldName] && noOptions && hasReferenceFields\n\t\t\t\t\t\t\t? t('Please select field for group by')\n\t\t\t\t\t\t\t: null;\n\n\t\t\t\t\tconst dotWalkErrorMessage = dotWalkError || errorMessages[fieldName];\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<viz-config-dot-walk\n\t\t\t\t\t\t\tkey={fieldName}\n\t\t\t\t\t\t\tid={fieldName}\n\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\ttableName={tableName}\n\t\t\t\t\t\t\tdotWalkPath={dotWalkErrorMessage ? null : dataToApply[fieldName]}\n\t\t\t\t\t\t\ttransform-metadata={transformMetadata.bind(null, dataSource)}\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t!dataToApply[fieldName] && noOptions && !hasReferenceFields\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terror-message={dotWalkErrorMessage}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tfieldName,\n\t\t\t\t\t\t\t\tdataSource,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{showNumberOfGroups ? (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className=\"section-prop-size\">\n\t\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\t\t\tlabel={t('Max number of groups')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\tid=\"groupByMax\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: SET_GROUP_BY_MAX,\n\t\t\t\t\t\t\t\t\tfieldName: GROUP_BY_MAX,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tplaceholder={t('Select a value')}\n\t\t\t\t\t\t\t\titems={GROUP_BY_MAX_NUMBER}\n\t\t\t\t\t\t\t\tselected-items={\n\t\t\t\t\t\t\t\t\tdataToApply.groupByMax ? [dataToApply.groupByMax] : []\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisabled={isFirstGroupByReportRange}\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t\t'aria-label': t('Max number of groups'),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{showNoOfGroupBasedOn ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\t\t\t\t\tlabel={t('Number of groups based on')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\t\t\tid=\"noOfGroupBasedOn\"\n\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: SET_NO_OF_GROUP_BASED_ON,\n\t\t\t\t\t\t\t\t\t\t\tfieldName: NO_OF_GROUP_BASED_ON,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\titems={NO_OF_GROUP_BASED_ON_OPTIONS}\n\t\t\t\t\t\t\t\t\t\tselected-items={[dataToApply.noOfGroupBasedOn]}\n\t\t\t\t\t\t\t\t\t\tdisabled={isFirstGroupByReportRange}\n\t\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t\t\t\t'aria-label': t('Number of groups based on'),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t) : (\n\t\t\t\t\tundefined\n\t\t\t\t)}\n\t\t\t\t{showOthersToggle ? (\n\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\tid=\"showOthersToggle\"\n\t\t\t\t\t\tappend-to-payload={{ fieldName: SHOW_OTHERS }}\n\t\t\t\t\t\tchecked={dataToApply.showOthers}\n\t\t\t\t\t\tlabel={t('Show others')}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\tundefined\n\t\t\t\t)}\n\t\t\t\t<now-button\n\t\t\t\t\tid=\"apply-group-by\"\n\t\t\t\t\tlabel={t('Apply')}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tdisabled={isApplyDisabled}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: APPLY_GROUP_BY_POPOVER,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tsharedState: {\n\t\t\tdefault: {},\n\t\t},\n\t},\n\tstyles,\n});\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-button';\nimport '@servicenow/now-dot-walk';\nimport '@servicenow/now-tooltip';\nimport '@servicenow/now-popover';\n\nimport snabbdom from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type State } from './state';\nimport { type Helpers } from '@servicenow/ui-core';\nimport { nowPopoverDropdownPositions } from '../common/popover-config';\n\nexport default (state: State, { updateState }: Helpers<State>) => {\n\tconst {\n\t\tproperties: {\n\t\t\tdotWalkPath,\n\t\t\tdisabled,\n\t\t\tplaceholder,\n\t\t\ttableName,\n\t\t\tlabel,\n\t\t\ttransformMetadata,\n\t\t\terrorMessage,\n\t\t},\n\t\topened,\n\t\tdotWalkLabel,\n\t} = state;\n\n\tconst triggerLabel = dotWalkPath ? dotWalkLabel : placeholder;\n\n\treturn (\n\t\t<div class={{ 'dot-walk-container': true, error: Boolean(errorMessage) }}>\n\t\t\t<label id=\"dot-walk-label\" className=\"dot-walk-label\">\n\t\t\t\t{label}\n\t\t\t</label>\n\n\t\t\t<now-popover\n\t\t\t\topened={opened}\n\t\t\t\tmanaged-opened\n\t\t\t\tinteraction-type=\"listbox\"\n\t\t\t\tpositions={nowPopoverDropdownPositions}\n\t\t\t\thide-tail>\n\t\t\t\t<button\n\t\t\t\t\tslot=\"trigger\"\n\t\t\t\t\tclass={{ 'btn-trigger': true, 'is-open': opened, disabled: disabled }}\n\t\t\t\t\taria-haspopup=\"listbox\"\n\t\t\t\t\taria-labelledby=\"dot-walk-label trigger-label\"\n\t\t\t\t\taria-expanded={String(opened)}\n\t\t\t\t\taria-describedby=\"dot-walk-tooltip\"\n\t\t\t\t\ton-click={e => {\n\t\t\t\t\t\te.stopPropagation(); // avoid now-popover to open/close (even with manage-opened)\n\n\t\t\t\t\t\tif (disabled || e.detail > 1) return;\n\n\t\t\t\t\t\tupdateState({ opened: !opened });\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={disabled}>\n\t\t\t\t\t<span\n\t\t\t\t\t\tid=\"trigger-label\"\n\t\t\t\t\t\tclass={{ 'trigger-label': true, placeholder: !dotWalkPath }}>\n\t\t\t\t\t\t{triggerLabel}\n\t\t\t\t\t</span>\n\t\t\t\t\t<now-icon\n\t\t\t\t\t\tclass={{ disabled: disabled }}\n\t\t\t\t\t\ticon=\"caret-down-outline\"></now-icon>\n\t\t\t\t</button>\n\t\t\t\t<now-dot-walk-connected\n\t\t\t\t\tstyle={{ minHeight: '300px', minWidth: '250px', display: 'block' }}\n\t\t\t\t\tclassName=\"dot-walk-panel\"\n\t\t\t\t\tslot=\"content\"\n\t\t\t\t\tdot-walk-path={dotWalkPath}\n\t\t\t\t\ttable-name={tableName}\n\t\t\t\t\tdotWalkEnabledFieldTypes={['reference']}\n\t\t\t\t\ttransformMetadata={transformMetadata}\n\t\t\t\t/>\n\t\t\t</now-popover>\n\n\t\t\t{errorMessage ? (\n\t\t\t\t<span className=\"dot-walk-error\">{errorMessage}</span>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_dot_walk;","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.dot-walk-error{color:RGB(var(--now-color--alert-critical-2,200,60,54));font-size:.75rem;display:block;margin-bottom:1rem;padding-left:.5rem;padding-right:.5rem}:host{display:block;margin-top:.25rem;margin-bottom:.25rem}.dot-walk-label{padding-inline-start:.25rem;font-size:.75rem;display:block;margin:.125rem 0;color:RGB(var(--now-color--neutral-9,99,114,116))}.dot-walk-panel{position:fixed;z-index:6000}.btn-trigger{width:100%;height:2rem;border:none;box-shadow:0 1px 0 0 RGB(var(--now-color--neutral-5,172,180,181));font-size:1rem;outline:none;display:flex;align-items:center;justify-content:space-between;background-color:RGB(var(--now-color--neutral-0,255,255,255));color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)));cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding-left:.5rem;padding-right:.5rem}.btn-trigger:hover{background-color:RGB(var(--now-color--neutral-2,228,230,231))}.btn-trigger.is-open,.btn-trigger:focus{box-shadow:0 2px 0 0 RGB(var(--now-color--primary-1,30,133,109));background-color:RGB(var(--now-color--primary-0,221,237,233))}.btn-trigger.disabled{box-shadow:0 1px 0 0 RGBA(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.3);pointer-events:auto;cursor:not-allowed;color:RGBA(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.3)}.btn-trigger::-moz-focus-inner{border:0}.btn-trigger now-icon{color:RGB(var(--now-color--secondary-1,1,119,142))}.btn-trigger now-icon.disabled{color:RGBA(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.3)}.btn-trigger .trigger-label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}.btn-trigger .trigger-label.placeholder{color:RGBA(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.45)}.dot-walk-container{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}.dot-walk-container.error .btn-trigger{box-shadow:0 1px 0 0 RGB(var(--now-color--alert-critical-2,200,60,54))}.dot-walk-container.error .dot-walk-label{color:RGB(var(--now-color--alert-critical-2,200,60,54))}.dot-walk-container .dot-walk-error{margin-top:.25rem}\", \"\"]);\n\n// exports\n","// @flow\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\nimport { t } from 'sn-translate';\nimport get from 'lodash/get';\n\nimport { type FieldDefinition } from '../common/types/field';\n\nimport {\n\tDOT_WALK_PATH_UPDATED,\n\tRETRIEVE_FIELD_LABEL,\n\tRETRIEVE_FIELD_LABEL_SUCCESS,\n\tDOT_WALK_SEPARATOR,\n\tRETRIEVE_FIELD_DATA_SUCCESS,\n\tRETRIEVE_FIELD_DATA_FAILURE,\n\tRETRIEVE_FIELD_DATA,\n} from './constants';\n\nimport { getFieldLabelFromCache, setFieldLabelToCache } from './cache';\n\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { effectProxy } from '../helpers/seismic';\nimport { hasPropertyChanged } from '../helpers/props';\nimport { RETRIEVE_FIELD_METADATA_SUCCESS } from '../visualizations-config-panel/actions/action-constants';\n\nconst handlePropertyChanged = (coeffects: Coeffects<State, any>) => {\n\tif (\n\t\thasPropertyChanged(coeffects, 'tableName') ||\n\t\thasPropertyChanged(coeffects, 'dotWalkPath')\n\t) {\n\t\tloadDotWalkLabel(coeffects);\n\t}\n};\n\nconst loadDotWalkLabel = ({\n\tstate,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { tableName, dotWalkPath } = state.properties;\n\n\tif (tableName && dotWalkPath) {\n\t\tconst fieldLabel = getFieldLabelFromCache(tableName, dotWalkPath);\n\n\t\tif (fieldLabel) {\n\t\t\tupdateState({\n\t\t\t\tdotWalkLabel: fieldLabel,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tupdateState({\n\t\t\tdotWalkLabel: t('Loading...'),\n\t\t});\n\n\t\tdispatch(RETRIEVE_FIELD_LABEL, {\n\t\t\ttable: tableName,\n\t\t\tfield: dotWalkPath,\n\t\t\tseparator: DOT_WALK_SEPARATOR,\n\t\t});\n\t}\n};\n\nconst dotWalkPathUpdated = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\n\tconst { path } = action.payload;\n\n\tif (path && path.length) {\n\t\tconst dotWalkPath = path.map(p => p.field).join('.');\n\t\tconst dotWalkLabel = path.map(p => p.displayValue).join(DOT_WALK_SEPARATOR);\n\t\tconst fields = [\n\t\t\t{ tableName: state.properties.tableName, fieldName: dotWalkPath },\n\t\t];\n\n\t\tdispatch(\n\t\t\tRETRIEVE_FIELD_DATA,\n\t\t\t{ fields: JSON.stringify(fields) },\n\t\t\t{\n\t\t\t\tfields,\n\t\t\t\tdotWalkPath,\n\t\t\t\tdotWalkLabel,\n\t\t\t\tpath,\n\t\t\t}\n\t\t);\n\n\t\tsetFieldLabelToCache(state.properties.tableName, dotWalkPath, dotWalkLabel);\n\n\t\tupdateState({\n\t\t\tdotWalkLabel: t('Loading...'),\n\t\t\topened: false,\n\t\t});\n\t}\n};\n\nconst handleClickOutside = ({\n\tstate,\n\taction,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst { opened } = state;\n\n\tif (!opened) {\n\t\treturn;\n\t}\n\n\tconst { event } = action.payload;\n\tconst path = event.composedPath ? event.composedPath() : event.path;\n\n\tconst panelInPath = path.some(\n\t\tel => el.classList && el.classList.contains('dot-walk-panel')\n\t);\n\n\tif (!panelInPath) {\n\t\tupdateState({ opened: false });\n\t}\n};\n\nexport const handleRequestFieldLabel = createGraphQLEffect(\n\t`query($table: String!, $field: String!, $separator: String){\n\t\tAppPARConfig_Query {\n\t\t\tfieldLabel(table: $table, field: $field, separator: $separator) {\n\t\t\t\tlabel\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['table', 'field', 'separator'],\n\t\tsuccessActionType: RETRIEVE_FIELD_LABEL_SUCCESS,\n\t\terrorActionType: RETRIEVE_FIELD_LABEL_SUCCESS,\n\t}\n);\n\nconst handleFieldDataRetrieval = createGraphQLEffect(\n\t`query($fields: String!){\n\t\tAppPARConfig_Query {\n\t\t\tfieldDefinitions(fields: $fields) {\n\t\t\t\tvalue {\n\t\t\t\t\tfield {\n\t\t\t\t\t\tlabel\n\t\t\t\t\t\tname\n\t\t\t\t\t\ttype\n\t\t\t\t\t\tinternalType\n\t\t\t\t\t\treference\n\t\t\t\t\t\tcanCountDistinct\n\t\t\t\t\t\tcanGroupBy\n\t\t\t\t\t\tcanSum\n\t\t\t\t\t\tcanTrendBy\n\t\t\t\t\t\tisRange\n\t\t\t\t\t\tunit\n\t\t\t\t\t}\n\t\t\t\t\tresult\n\t\t\t\t}\n\t\t\t\tresult\n\t\t\t}\n\t\t}\n\t}`,\n\t{\n\t\tvariableList: ['fields'],\n\t\tsuccessActionType: RETRIEVE_FIELD_DATA_SUCCESS,\n\t\terrorActionType: RETRIEVE_FIELD_DATA_FAILURE,\n\t}\n);\n\nexport const handleRequestFieldLabelSuccess = ({\n\taction,\n\tupdateState,\n\tstate,\n}: Coeffects<State, any>) => {\n\tconst { tableName, dotWalkPath } = state.properties;\n\tconst dotWalkLabel = get(\n\t\taction.payload,\n\t\t'data.AppPARConfig_Query.fieldLabel.label'\n\t);\n\n\tsetFieldLabelToCache(tableName, dotWalkPath, dotWalkLabel);\n\n\tupdateState({\n\t\tdotWalkLabel,\n\t});\n};\n\nconst handleFieldDataRetrievalSuccess = (coeffects: Coeffects<State, any>) => {\n\tconst definition: { field: FieldDefinition, result: string } = get(\n\t\tcoeffects.action.payload,\n\t\t'data.AppPARConfig_Query.fieldDefinitions.value[0]'\n\t);\n\n\tconst { dotWalkPath, dotWalkLabel, path } = coeffects.action.meta;\n\n\tif (definition.result !== 'SUCCESS') {\n\t\treturn;\n\t}\n\n\tcoeffects.dispatch(\n\t\tRETRIEVE_FIELD_METADATA_SUCCESS,\n\t\tcoeffects.action.payload,\n\t\tcoeffects.action.meta\n\t);\n\n\tcoeffects.dispatch(DOT_WALK_PATH_UPDATED, {\n\t\tdefinition,\n\t\tdotWalkPath,\n\t\tdotWalkLabel,\n\t\tpath,\n\t});\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: loadDotWalkLabel,\n\t\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: handlePropertyChanged,\n\t\t'NOW_DOT_WALK_CONNECTED#PATH_UPDATED': dotWalkPathUpdated,\n\t\t[RETRIEVE_FIELD_LABEL]: effectProxy(handleRequestFieldLabel),\n\t\t[RETRIEVE_FIELD_LABEL_SUCCESS]: handleRequestFieldLabelSuccess,\n\t\t[RETRIEVE_FIELD_DATA]: handleFieldDataRetrieval,\n\t\t[RETRIEVE_FIELD_DATA_SUCCESS]: handleFieldDataRetrievalSuccess,\n\t},\n\teventHandlers: [\n\t\t{\n\t\t\tevents: ['click'],\n\t\t\ttarget: document,\n\t\t\teffect: handleClickOutside,\n\t\t},\n\t],\n\tbehaviors: [{ behavior: rtlBehavior }],\n};\n","//@flow\n\nlet cache: { [key: string]: string } = {};\n\nexport function getFieldLabelFromCache(table: string, field: string) {\n\treturn cache[table + '->' + field];\n}\n\nexport function setFieldLabelToCache(\n\ttable: string,\n\tfield: string,\n\tlabel: string\n) {\n\treturn (cache[table + '->' + field] = label);\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}#btn-add-group-by{margin-top:.5rem}.group-by-selector.pillar-box{background-color:RGB(var(--now-color--neutral-2,228,230,231));padding:.5rem .4375rem;margin:0 -.4rem 1rem;border-radius:.25rem;box-shadow:inset 0 1px 1px 1px RGB(var(--now-color--neutral-4,191,197,198))}.group-by-selector sn-par-pillar{display:block}.group-by-selector now-popover:not(:first-child) sn-par-pillar{margin-top:.25rem}.group-by-selector now-button{width:100%}.group-by-selector sn-par-pillar+now-button{margin-top:.5rem}.pillar-error-icon{color:RGB(var(--now-color--alert-critical-2,200,60,54));margin-inline-end:.25rem}.chart-variation{margin-top:1rem}.chart-variation now-label-value-inline{display:block;margin-block-end:.5rem}.chart-variation now-dropdown{margin-block-end:.75rem}.info-message{margin-top:.5rem;display:flex}.info-message now-icon{margin-inline-start:.125rem;margin-inline-end:.125rem;margin-top:.125rem;color:RGB(var(--now-color--primary-1,30,133,109))}.info-message label{font-size:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116))}.error-message{padding:.25rem;background-color:RGB(var(--now-color--alert-critical-0,241,206,205));border-radius:.125rem;display:flex;align-items:center}.error-message now-icon{margin-inline-start:.125rem;margin-inline-end:.25rem}.error-message label{font-size:.75rem}.group-by-max-selector{margin-bottom:30px}.group-by-max-selector label{font-size:.75rem;color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.group-by-max-selector now-dropdown{width:100%;margin-top:.5rem}.viz-config-group-by-popover{position:relative;padding:.75rem;width:300px}.viz-config-group-by-popover now-button-iconic{position:absolute;right:.25rem;top:.25rem}.viz-config-group-by-popover now-select{width:100%}.viz-config-group-by-popover now-button{width:100%;display:block}.viz-config-group-by-popover now-label-value-inline{display:block}.viz-config-group-by-popover viz-config-dot-walk{margin-bottom:.5rem}.viz-config-group-by-popover now-label-value-inline{margin-top:1rem}.section-prop-size{margin-top:1rem;margin-bottom:1rem}.section-prop-size now-dropdown{margin-top:.25rem}\", \"\"]);\n\n// exports\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-select';\nimport '../dot-walk';\n\nimport { type FieldDefinition } from '../common/types/field';\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\n\nimport styles from './styles.scss';\n\nimport {\n\tAPPLY_GROUP_BY_POPOVER,\n\tCLOSE_GROUP_BY_POPOVER,\n\tPILLAR_ADD_ACTION,\n\tSTACK_BY_FIELD,\n} from './constants';\n\nimport { SOURCE_TYPE_INDICATOR } from '../common/types/data-source';\n\nimport { createTransformMetadataFn } from './helpers/transform-metadata';\n\ncreateCustomElement('viz-config-stack-by-popover-content', {\n\trenderer: { type: snabbdom },\n\tview: state => {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tsharedState: {\n\t\t\t\t\tproperties: { chartModel },\n\t\t\t\t\tpopoverAction,\n\t\t\t\t\tdataToApply,\n\t\t\t\t\terrorMessages,\n\t\t\t\t\tlocalOptions,\n\t\t\t\t},\n\t\t\t},\n\t\t} = state;\n\n\t\tconst { dataSources } = chartModel;\n\n\t\tconst transformMetadataFilter = (_, fieldDefinition: FieldDefinition) =>\n\t\t\tfieldDefinition.canGroupBy;\n\n\t\tconst transformMetadata = createTransformMetadataFn(\n\t\t\ttransformMetadataFilter\n\t\t);\n\n\t\tconst isIndicator = dataSources.some(\n\t\t\tdataSource => dataSource.sourceType === SOURCE_TYPE_INDICATOR\n\t\t);\n\n\t\tconst isApplyDisabled = dataSources.some((ds, index) => {\n\t\t\tconst fieldName = `${STACK_BY_FIELD}${index}`;\n\n\t\t\treturn !dataToApply[fieldName];\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"viz-config-group-by-popover\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={\n\t\t\t\t\t\tpopoverAction === PILLAR_ADD_ACTION\n\t\t\t\t\t\t\t? t('Add group by')\n\t\t\t\t\t\t\t: t('Edit group by')\n\t\t\t\t\t}\n\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\tvariant=\"title-secondary\"\n\t\t\t\t/>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tbare\n\t\t\t\t\ticon=\"close-fill\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: CLOSE_GROUP_BY_POPOVER,\n\t\t\t\t\t}}\n\t\t\t\t\tconfig-aria={{ 'aria-label': t('Close') }}\n\t\t\t\t/>\n\t\t\t\t{dataSources.map((dataSource, index) => {\n\t\t\t\t\tconst fieldName = `${STACK_BY_FIELD}${index}`;\n\t\t\t\t\tconst options = localOptions[fieldName] || [];\n\t\t\t\t\tconst message = errorMessages[fieldName];\n\t\t\t\t\tconst messages = message\n\t\t\t\t\t\t? [{ status: 'critical', content: message }]\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\tif (isIndicator) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<now-select\n\t\t\t\t\t\t\t\tid={fieldName}\n\t\t\t\t\t\t\t\tlabel={t('Field for {0}', dataSource.label)}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tfieldName,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\titems={options}\n\t\t\t\t\t\t\t\tplaceholder={t('Select a field')}\n\t\t\t\t\t\t\t\tselected-item={\n\t\t\t\t\t\t\t\t\tdataToApply[fieldName] || dataSource.stackByField\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<viz-config-dot-walk\n\t\t\t\t\t\t\tkey={fieldName}\n\t\t\t\t\t\t\tid={fieldName}\n\t\t\t\t\t\t\tlabel={t('Field for {0}', dataSource.label)}\n\t\t\t\t\t\t\tplaceholder={t('Select a field')}\n\t\t\t\t\t\t\ttableName={dataSource.tableName}\n\t\t\t\t\t\t\tdotWalkPath={dataToApply[fieldName]}\n\t\t\t\t\t\t\ttransform-metadata={transformMetadata.bind(null, dataSource)}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tfieldName,\n\t\t\t\t\t\t\t\tdataSource,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<now-button\n\t\t\t\t\tid=\"apply-stack-by\"\n\t\t\t\t\tlabel={t('Apply')}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tdisabled={isApplyDisabled}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: APPLY_GROUP_BY_POPOVER,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tsharedState: {\n\t\t\tdefault: {},\n\t\t},\n\t},\n\tstyles,\n});\n","// @flow\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\n\nimport {\n\tSET_GROUP_BY,\n\tSET_GROUP_BY_MAX,\n\tCLOSE_GROUP_BY_POPOVER,\n\tAPPLY_GROUP_BY_POPOVER,\n\tPILLAR_GROUP_BY,\n\tCLICK_BUTTON_ADD_GROUP_BY,\n\tPOPOVER_CONTENT_GROUP_BY,\n\tPOPOVER_CONTENT_STACK_BY,\n\tPILLAR_ADD_ACTION,\n\tPILLAR_EDIT_ACTION,\n\tPILLAR_REMOVE_ACTION,\n\tGROUP_BY_MAX_NUMBER_ALL,\n\tGROUP_BY_FIELD,\n\tSTACK_BY_FIELD,\n\tGROUP_BY_MAX,\n\tMAIN_POPOVER,\n\tSET_NO_OF_GROUP_BASED_ON,\n\tNO_OF_GROUP_BASED_ON,\n\tSET_CHART_VARIATION,\n} from './constants';\nimport { DOT_WALK_PATH_UPDATED } from '../dot-walk/constants';\nimport { hasPropertyChanged } from '../helpers/props';\n\nimport get from 'lodash/get';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport {\n\tSN_PAR_PILLAR_CLICKED,\n\tSN_PAR_PILLAR_ACTION_CLICKED,\n} from '@now-par-components/sn-par-pillar';\n\nimport { t } from 'sn-translate';\nimport {\n\tSOURCE_TYPE_TABLE,\n\tSOURCE_TYPE_INDICATOR,\n} from '../common/types/data-source';\n\nimport {\n\tgetGroupByOptions,\n\tgetStackByOptions,\n\tgetGroupByOptionsFilter,\n} from '../visualizations-config-panel/actions/model-options';\nimport { getValidGroupByField } from '../visualizations-config-panel/actions/model-validators';\n\nimport { formatMultipleLabels } from '../helpers/string-utils';\nimport { RETRIEVE_FIELD_METADATA } from '../visualizations-config-panel/actions/action-constants';\nimport { extractTableFieldsFromDataToApply } from './helpers';\nimport { getFieldDefinition, getFieldDefinitionKey } from '../helpers/field';\nimport { type FieldDefinition } from '../common/types/field';\nimport { updateModelWithGroupByValues } from './helpers/transform-metadata';\n\nconst handleComponentBootstrap = (coeffects: Coeffects<State, any>) => {\n\tcoeffects.updateState({ componentHost: coeffects.action.payload.host });\n\n\tloadFieldLabels(coeffects);\n};\n\nconst handlePropertyChanged = (coeffects: Coeffects<State, any>) => {\n\tif (\n\t\thasPropertyChanged(coeffects, 'chartModel', ['dataSources']) ||\n\t\thasPropertyChanged(coeffects, 'dataSourceInfos')\n\t) {\n\t\tloadFieldLabels(coeffects);\n\t}\n};\n\nconst handleNowSelectSelection = (coeffects: Coeffects<State, any>) => {\n\tcoeffects.action.stopPropagation();\n\tconst selectedValue = get(coeffects, 'action.payload.value');\n\tconst fieldName: string = get(coeffects, 'action.payload.fieldName');\n\n\tif (fieldName) {\n\t\tconst {\n\t\t\tdataToApply,\n\t\t\tlocalOptions,\n\t\t} = getDataToApplyAndOptionsAfterFieldChange(\n\t\t\tcoeffects,\n\t\t\tfieldName,\n\t\t\tselectedValue\n\t\t);\n\n\t\tcoeffects.updateState({\n\t\t\tdataToApply,\n\t\t\tlocalOptions,\n\t\t\tselectInvalid: {\n\t\t\t\t...coeffects.state.selectInvalid,\n\t\t\t\t[fieldName]: false,\n\t\t\t},\n\t\t\terrorMessages: {\n\t\t\t\t...coeffects.state.errorMessages,\n\t\t\t\t[fieldName]: undefined,\n\t\t\t},\n\t\t});\n\t}\n};\n\nconst handleGroupByMaxSelection = (coeffects: Coeffects<State, any>) => {\n\tcoeffects.action.stopPropagation();\n\tconst groupByMax = coeffects.action.payload.value[0];\n\tconst {\n\t\tdataToApply,\n\t\tlocalOptions,\n\t} = getDataToApplyAndOptionsAfterFieldChange(\n\t\tcoeffects,\n\t\tGROUP_BY_MAX,\n\t\tgroupByMax\n\t);\n\n\tconst previousGroupByMax = coeffects.state.dataToApply.groupByMax;\n\n\tif (previousGroupByMax === GROUP_BY_MAX_NUMBER_ALL)\n\t\tdataToApply.showOthers = true;\n\n\tcoeffects.updateState({\n\t\tdataToApply,\n\t\tlocalOptions,\n\t});\n};\n\nconst handleNoOfGroupBasedOnSelection = (coeffects: Coeffects<State, any>) => {\n\tcoeffects.action.stopPropagation();\n\n\tconst noOfGroupBasedOn = coeffects.action.payload.value[0];\n\n\tconst {\n\t\tdataToApply,\n\t\tlocalOptions,\n\t} = getDataToApplyAndOptionsAfterFieldChange(\n\t\tcoeffects,\n\t\tNO_OF_GROUP_BASED_ON,\n\t\tnoOfGroupBasedOn\n\t);\n\n\tcoeffects.updateState({\n\t\tdataToApply,\n\t\tlocalOptions,\n\t});\n};\n\nconst getDataToApplyAndOptionsAfterFieldChange = (\n\tcoeffects: Coeffects<State, any>,\n\tfieldName: string,\n\tselectedValue: string,\n\tfieldDefinition?: FieldDefinition\n) => {\n\tconst {\n\t\tproperties: { chartModel, dataSourceInfos },\n\t\tdataToApply,\n\t\tlocalOptions,\n\t} = coeffects.state;\n\n\tconst newDataToApply = {\n\t\t...dataToApply,\n\t\t[fieldName]: selectedValue,\n\t};\n\n\tconst newLocalOptions = { ...localOptions };\n\n\tconst firstGroupByField = `${GROUP_BY_FIELD}0`;\n\n\tif (\n\t\tfieldName === firstGroupByField &&\n\t\tchartModel.dataSources[0].sourceType === SOURCE_TYPE_TABLE\n\t) {\n\t\tconst clonedChartModel = cloneDeep(chartModel);\n\n\t\tconst definitions = fieldDefinition\n\t\t\t? {\n\t\t\t\t\t...coeffects.state.properties.dotWalkFieldDefinition,\n\t\t\t\t\t[getFieldDefinitionKey({\n\t\t\t\t\t\ttableName: chartModel.dataSources[0].tableName,\n\t\t\t\t\t\tfieldName: selectedValue,\n\t\t\t\t\t})]: fieldDefinition,\n\t\t\t  }\n\t\t\t: coeffects.state.properties.dotWalkFieldDefinition;\n\n\t\tclonedChartModel.dataSources[0].groupByField = selectedValue;\n\t\tclonedChartModel.dataSources.forEach((ds, index) => {\n\t\t\tif (index === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fieldName = `${GROUP_BY_FIELD}${index}`;\n\n\t\t\tnewLocalOptions[fieldName] = getGroupByOptions(\n\t\t\t\tds,\n\t\t\t\tclonedChartModel.dataSources,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tdefinitions\n\t\t\t);\n\n\t\t\tnewDataToApply[fieldName] = getValidGroupByField(\n\t\t\t\tds,\n\t\t\t\tclonedChartModel,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tdefinitions\n\t\t\t);\n\t\t});\n\t}\n\n\treturn {\n\t\tdataToApply: newDataToApply,\n\t\tlocalOptions: newLocalOptions,\n\t};\n};\n\nconst getInitialDataToApplyAndOptions = (\n\tstate: State,\n\tisPillarGroupBy: boolean\n): $Shape<State> => {\n\tconst { chartModel, dataSourceInfos } = state.properties;\n\tconst { dataSources, groupByMax, noOfGroupBasedOn, showOthers } = chartModel;\n\tconst dataToApply = {};\n\tconst localOptions = {};\n\n\tif (isPillarGroupBy) {\n\t\tdataToApply.groupByMax = groupByMax;\n\t\tdataToApply.noOfGroupBasedOn = noOfGroupBasedOn;\n\t\tdataToApply.showOthers = showOthers;\n\t\tdataSources.forEach((ds, index) => {\n\t\t\tif (index > 0 && ds.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fieldName = `${GROUP_BY_FIELD}${index}`;\n\t\t\tconst options = getGroupByOptions(\n\t\t\t\tds,\n\t\t\t\tchartModel.dataSources,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tstate.properties.dotWalkFieldDefinition\n\t\t\t);\n\n\t\t\tdataToApply[fieldName] = ds.groupByField;\n\t\t\tlocalOptions[fieldName] = options;\n\t\t});\n\t} else {\n\t\tdataSources.forEach((ds, index) => {\n\t\t\tconst fieldName = `${STACK_BY_FIELD}${index}`;\n\t\t\tconst options = getStackByOptions(ds, dataSourceInfos);\n\n\t\t\tdataToApply[fieldName] = ds.stackByField;\n\t\t\tlocalOptions[fieldName] = options;\n\t\t});\n\t}\n\n\treturn {\n\t\tdataToApply,\n\t\tlocalOptions,\n\t};\n};\n\nconst handlePillarClicked = ({ state, action, updateState, dispatch }) => {\n\tconst {\n\t\tpayload: { id, payloadActionType },\n\t} = action;\n\n\tconst {\n\t\tcomponentHost,\n\t\tproperties: { chartModel },\n\t} = state;\n\n\tconst isPillarGroupBy = payloadActionType === PILLAR_GROUP_BY;\n\n\taction.stopPropagation();\n\n\tif (id === PILLAR_REMOVE_ACTION) {\n\t\tupdateState(createCleanPopoverState());\n\t\tconst dataToApply: $PropertyType<State, 'dataToApply'> = {};\n\n\t\tchartModel.dataSources.forEach((ds, index) => {\n\t\t\tconst groupByFieldName = `${GROUP_BY_FIELD}${index}`;\n\t\t\tconst stackByFieldName = `${STACK_BY_FIELD}${index}`;\n\n\t\t\tif (isPillarGroupBy) {\n\t\t\t\tif (ds.stackByField) {\n\t\t\t\t\tdataToApply[groupByFieldName] = ds.stackByField;\n\t\t\t\t\tdataToApply[stackByFieldName] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tdataToApply[groupByFieldName] = undefined;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataToApply[stackByFieldName] = undefined;\n\t\t\t}\n\t\t});\n\n\t\tdispatch(SET_GROUP_BY, {\n\t\t\t...dataToApply,\n\t\t});\n\t} else {\n\t\tconst popoverTarget = componentHost.shadowRoot.querySelector(\n\t\t\t`#${payloadActionType}`\n\t\t);\n\t\tconst popoverContent = isPillarGroupBy\n\t\t\t? POPOVER_CONTENT_GROUP_BY\n\t\t\t: POPOVER_CONTENT_STACK_BY;\n\n\t\tupdateState({\n\t\t\tpopoverContent,\n\t\t\tpopoverAction: PILLAR_EDIT_ACTION,\n\t\t\tpopoverOpened: true,\n\t\t\tpopoverTarget,\n\t\t\t...getInitialDataToApplyAndOptions(state, isPillarGroupBy),\n\t\t});\n\t}\n};\n\nconst createCleanPopoverState = () => ({\n\tpopoverOpened: false,\n\tpopoverClosedAt: new Date().getTime(),\n\tpopoverContent: undefined,\n\tpopoverAction: undefined,\n\tdataToApply: {},\n\tselectInvalid: {},\n\terrorMessages: {},\n});\n\nconst handleButtonClicked = ({\n\tstate,\n\taction: { payload },\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst {\n\t\tdataToApply,\n\t\tcomponentHost,\n\t\tproperties: {\n\t\t\tchartModel: { dataSources },\n\t\t},\n\t\tselectInvalid,\n\t} = state;\n\n\tif (payload.payloadActionType === CLOSE_GROUP_BY_POPOVER) {\n\t\tupdateState(createCleanPopoverState());\n\t} else if (payload.payloadActionType === APPLY_GROUP_BY_POPOVER) {\n\t\tconst { errorMessages, valid } = validateTypeaheads(selectInvalid);\n\n\t\tif (!valid) {\n\t\t\treturn updateState({ errorMessages });\n\t\t}\n\n\t\tupdateState(createCleanPopoverState());\n\n\t\tif (dataSources.some(ds => ds.sourceType === SOURCE_TYPE_INDICATOR)) {\n\t\t\treturn dispatch(SET_GROUP_BY, {\n\t\t\t\t...dataToApply,\n\t\t\t});\n\t\t}\n\n\t\tconst fields = extractTableFieldsFromDataToApply(dataToApply, dataSources);\n\n\t\tdispatch(\n\t\t\tRETRIEVE_FIELD_METADATA,\n\t\t\t{ fields },\n\t\t\t{\n\t\t\t\tactionName: SET_GROUP_BY,\n\t\t\t\tpayload: dataToApply,\n\t\t\t}\n\t\t);\n\t} else if (\n\t\tpayload.payloadActionType === CLICK_BUTTON_ADD_GROUP_BY &&\n\t\tcomponentHost &&\n\t\tcomponentHost.shadowRoot\n\t) {\n\t\tconst hasGroupBy = dataSources.some(ds => ds.groupByField);\n\t\tconst popoverContent = hasGroupBy\n\t\t\t? POPOVER_CONTENT_STACK_BY\n\t\t\t: POPOVER_CONTENT_GROUP_BY;\n\n\t\tupdateState({\n\t\t\tpopoverContent,\n\t\t\tpopoverAction: PILLAR_ADD_ACTION,\n\t\t\tdataToApply: {},\n\t\t\tpopoverOpened: true,\n\t\t\tpopoverTarget: componentHost.shadowRoot.querySelector(\n\t\t\t\t'#btn-add-group-by'\n\t\t\t),\n\t\t\t...getInitialDataToApplyAndOptions(state, !hasGroupBy),\n\t\t});\n\t}\n};\n\nconst validateTypeaheads = (\n\tselectInvalid: $PropertyType<State, 'selectInvalid'>\n) => {\n\tconst errorMessages = {};\n\n\tfor (const fieldName in selectInvalid) {\n\t\tif (selectInvalid[fieldName]) {\n\t\t\terrorMessages[fieldName] = t('Please select a value');\n\t\t}\n\t}\n\n\treturn {\n\t\tvalid: !Object.keys(errorMessages).length,\n\t\terrorMessages,\n\t};\n};\n\nconst handleToggleCheckedSet = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst { value, fieldName } = action.payload;\n\n\tif (fieldName) {\n\t\tupdateState({\n\t\t\tdataToApply: {\n\t\t\t\t...state.dataToApply,\n\t\t\t\t[fieldName]: value,\n\t\t\t},\n\t\t});\n\t}\n};\n\nconst handleDotWalkPathUpdated = (coeffects: Coeffects<State, any>) => {\n\tconst {\n\t\taction,\n\t\tstate: { dataToApply },\n\t\tproperties: { chartModel, dataSourceInfos, dotWalkFieldDefinition },\n\t} = coeffects;\n\n\tconst { dotWalkPath, fieldName, definition, dataSource } = action.payload;\n\n\tconst patchedChartModel = updateModelWithGroupByValues(\n\t\tcloneDeep(chartModel),\n\t\tdataToApply\n\t);\n\n\tif (fieldName) {\n\t\tconst groupByFieldFilter = getGroupByOptionsFilter(\n\t\t\tdataSource,\n\t\t\tpatchedChartModel.dataSources,\n\t\t\tdataSourceInfos,\n\t\t\tdotWalkFieldDefinition\n\t\t);\n\n\t\tif (definition && !groupByFieldFilter(definition.field)) {\n\t\t\treturn coeffects.updateState([\n\t\t\t\t{\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `errorMessages[${fieldName}]`,\n\t\t\t\t\tvalue: t('Selected field is invalid'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `selectInvalid[${fieldName}]`,\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\tconst {\n\t\t\tdataToApply,\n\t\t\tlocalOptions,\n\t\t} = getDataToApplyAndOptionsAfterFieldChange(\n\t\t\tcoeffects,\n\t\t\tfieldName,\n\t\t\tdotWalkPath,\n\t\t\tdefinition.field\n\t\t);\n\n\t\tcoeffects.updateState({\n\t\t\tdataToApply,\n\t\t\tlocalOptions,\n\t\t\tselectInvalid: {\n\t\t\t\t...coeffects.state.selectInvalid,\n\t\t\t\t[fieldName]: false,\n\t\t\t},\n\t\t\terrorMessages: {\n\t\t\t\t...coeffects.state.errorMessages,\n\t\t\t\t[fieldName]: undefined,\n\t\t\t},\n\t\t});\n\t}\n};\n\nconst getFieldLabel = (\n\tcoeffects: Coeffects<State, any>,\n\tfieldName: string\n): string => {\n\tconst {\n\t\tchartModel: { dataSources },\n\t\tdataSourceInfos,\n\t} = coeffects.state.properties;\n\n\tconst hasField = dataSources.some(ds => ds[fieldName]);\n\n\tif (!hasField) {\n\t\treturn '';\n\t}\n\n\tconst labels = dataSources.reduce((acc, ds) => {\n\t\tconst fieldValue = ds[fieldName];\n\n\t\tif (!fieldValue || !ds.id || !dataSourceInfos[ds.id]) {\n\t\t\treturn acc;\n\t\t}\n\n\t\tif (ds.sourceType === SOURCE_TYPE_TABLE && ds.tableName) {\n\t\t\tconst field = getFieldDefinition(\n\t\t\t\tfieldValue,\n\t\t\t\tdataSourceInfos[ds.id],\n\t\t\t\tds,\n\t\t\t\tcoeffects.state.properties.dotWalkFieldDefinition\n\t\t\t);\n\n\t\t\tif (field) {\n\t\t\t\tacc.push(field.label);\n\t\t\t}\n\t\t} else if (ds.sourceType === SOURCE_TYPE_INDICATOR) {\n\t\t\tconst breakdowns = dataSourceInfos[ds.id].breakdowns || [];\n\t\t\tconst breakdown = breakdowns.find(b => b.sysId === fieldValue);\n\n\t\t\tif (breakdown) {\n\t\t\t\tacc.push(breakdown.name);\n\t\t\t}\n\t\t}\n\n\t\treturn acc;\n\t}, []);\n\n\treturn formatMultipleLabels(labels);\n};\n\nconst loadFieldLabels = (coeffects: Coeffects<State, any>) => {\n\tlet groupByLabel = getFieldLabel(coeffects, 'groupByField');\n\tlet stackByLabel = getFieldLabel(coeffects, 'stackByField');\n\n\tcoeffects.updateState({\n\t\tgroupByLabel,\n\t\tstackByLabel,\n\t});\n};\n\nconst handleNowDropdownItemSelected = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.payloadActionType) {\n\t\tcase SET_GROUP_BY_MAX:\n\t\t\thandleGroupByMaxSelection(coeffects);\n\t\t\tbreak;\n\n\t\tcase SET_NO_OF_GROUP_BASED_ON:\n\t\t\thandleNoOfGroupBasedOnSelection(coeffects);\n\t\t\tbreak;\n\t\tcase SET_CHART_VARIATION: {\n\t\t\tcoeffects.dispatch(SET_CHART_VARIATION, {\n\t\t\t\tisStacked: coeffects.action.payload.value[0],\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: handleComponentBootstrap,\n\t\t[actionTypes.COMPONENT_PROPERTY_CHANGED]: handlePropertyChanged,\n\t\t[SN_PAR_PILLAR_ACTION_CLICKED]: handlePillarClicked,\n\t\t[SN_PAR_PILLAR_CLICKED]: handlePillarClicked,\n\t\t'NOW_BUTTON_ICONIC#CLICKED': handleButtonClicked,\n\t\t'NOW_BUTTON#CLICKED': handleButtonClicked,\n\t\t'VIZ_CONFIG_TOGGLE#CHECKED_SET': handleToggleCheckedSet,\n\t\t'NOW_SELECT#SELECTED_ITEM_SET': handleNowSelectSelection,\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': handleNowDropdownItemSelected,\n\t\t'NOW_POPOVER#OPENED_SET': ({\n\t\t\tupdateState,\n\t\t\taction,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tif (action.payload.type === MAIN_POPOVER && !action.payload.value) {\n\t\t\t\tupdateState(createCleanPopoverState());\n\t\t\t}\n\t\t},\n\t\t[DOT_WALK_PATH_UPDATED]: handleDotWalkPathUpdated,\n\t},\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"uniq\"];","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport { metricView } from './view';\nimport aggregateSelectorActions from './actions';\nimport { initialState } from './state';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-metric-configuration', {\n\trenderer: { type: snabbdom },\n\tview: metricView,\n\tinitialState,\n\tproperties: {\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdataSourceInfos: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdotWalkFieldDefinition: {\n\t\t\tdefault: {},\n\t\t},\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tstyles,\n\t...aggregateSelectorActions,\n});\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\n\nimport '@servicenow/now-heading';\nimport '@servicenow/now-button';\nimport 'sn-devx-components';\nimport '@now-par-components/sn-par-pillar';\nimport '@servicenow/now-accordion';\nimport '@servicenow/now-select';\nimport '@servicenow/now-popover';\nimport './metric-popover-content';\n\nimport { type State } from './state';\n\nimport {\n\tAGGREGATE_CONFIG,\n\tBTN_ADD_METRIC,\n\tMETRIC_POPOVER,\n\tPILLAR_ACTION_EDIT,\n\tPILLAR_ACTION_DELETE,\n\tPILLAR_ACTION_ADD_NEW_AXIS,\n} from './constants';\n\nimport { t } from 'sn-translate';\nimport { type Metric } from '../common/types/metric';\nimport { type ChartModel } from '../visualizations-config-panel/model/chart-model';\nimport { type DataSourceInfos } from '../common/types/data-source';\n\nimport { nowPopoverAllowedPositions } from '../common/popover-config';\nimport { getAggregateOptionsIndicator } from '../visualizations-config-panel/actions/model-options';\n\nimport { getOptionLabel } from '../common/options';\n\nimport {\n\tisTableMetric,\n\tisIndicatorMetric,\n\tgetMetricUnit,\n} from '../helpers/metric';\n\nimport {\n\tgetAxisLabel,\n\tgetAxisUnit,\n\tsupportMultipleAxis,\n} from '../helpers/axis';\n\nimport { autoScrollToVisibility } from '../helpers/now-accordion/auto-scroll-to-visibility';\nimport { MULTIPLE_DS_UNSUPPORTED } from '../common/types/chart-type';\nimport {\n\tCHART_TYPES_CONFIG,\n\tTIMESERIES_CHART_TYPES,\n\tgetChartConfig,\n} from '../common/chart-settings';\nimport { getMetricFrequency } from '../helpers/metric';\nimport { getMetricLabel } from '../helpers/metric/metric-label';\n\nconst getPillarModifier = (state: State, metric: Metric) => {\n\tconst { chartModel, dataSourceInfos } = state.properties;\n\tconst { dataSources } = chartModel;\n\n\tif (isTableMetric(metric, dataSources)) {\n\t\tconst aggregateFunction = AGGREGATE_CONFIG.find(\n\t\t\ta => a.id === metric.aggregateFunction\n\t\t);\n\n\t\treturn aggregateFunction && aggregateFunction.label;\n\t} else if (isIndicatorMetric(metric, dataSources) && metric.dataSource) {\n\t\tconst aggregateOptions = getAggregateOptionsIndicator(\n\t\t\tmetric.dataSource,\n\t\t\tchartModel,\n\t\t\tdataSourceInfos\n\t\t);\n\t\tconst { aggregateIndicator = '' } = metric;\n\n\t\treturn getOptionLabel(aggregateOptions, aggregateIndicator);\n\t}\n\n\treturn '';\n};\n\nexport const getInvalidAggregationIcon = (\n\tchartModel: ChartModel,\n\tdataSourceInfos: DataSourceInfos,\n\tmetricIndex: number\n) => {\n\tconst { metrics, dataSources, chartType } = chartModel;\n\n\tif (\n\t\tmetricIndex > 0 &&\n\t\tisIndicatorMetric(metrics[metricIndex], dataSources) &&\n\t\tTIMESERIES_CHART_TYPES.includes(chartType)\n\t) {\n\t\tconst metricFrequency1 = getMetricFrequency(metrics[0], dataSourceInfos);\n\t\tconst metricFrequency2 = getMetricFrequency(\n\t\t\tmetrics[metricIndex],\n\t\t\tdataSourceInfos\n\t\t);\n\n\t\tif (metricFrequency1 !== metricFrequency2) {\n\t\t\treturn (\n\t\t\t\t<now-icon\n\t\t\t\t\tclassName=\"invalid-aggregation-icon\"\n\t\t\t\t\ticon=\"circle-exclamation-fill\"></now-icon>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\nconst getPillars = (state: State) => {\n\tconst {\n\t\tchartModel,\n\t\tdataSourceInfos,\n\t\tdotWalkFieldDefinition,\n\t} = state.properties;\n\n\tconst { dataSources, metrics, chartType, yAxisConfigs } = chartModel;\n\n\treturn metrics.map((metric, index) => {\n\t\tconst metricsPerDataSource = metrics.filter(\n\t\t\tm => m.dataSource === metric.dataSource\n\t\t).length;\n\n\t\tconst contextMenuActions = [\n\t\t\t{\n\t\t\t\tid: 'editSection',\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: 'sliders-outline',\n\t\t\t\t\t\tid: PILLAR_ACTION_EDIT,\n\t\t\t\t\t\tlabel: t('Edit'),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\n\t\tconst actions = [];\n\n\t\tif (supportMultipleAxis(chartModel) && metrics.length > 1) {\n\t\t\tconst axisOptions = yAxisConfigs.map((axisConfig, axisIndex) => {\n\t\t\t\tconst axisUnit = getAxisUnit(\n\t\t\t\t\taxisConfig.id,\n\t\t\t\t\tchartModel,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tdotWalkFieldDefinition\n\t\t\t\t);\n\n\t\t\t\tconst metricUnic = getMetricUnit(\n\t\t\t\t\tmetric,\n\t\t\t\t\tdataSources,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tdotWalkFieldDefinition\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\ticon: axisConfig.id === metric.axisId ? 'check-outline' : '',\n\t\t\t\t\tid: axisConfig.id,\n\t\t\t\t\tlabel: getAxisLabel(axisIndex),\n\t\t\t\t\tdisabled: axisUnit !== metricUnic,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst metricsWithSameAxis = metrics.filter(\n\t\t\t\tm => m.axisId === metric.axisId\n\t\t\t);\n\n\t\t\tif (metricsWithSameAxis.length > 1) {\n\t\t\t\taxisOptions.push({\n\t\t\t\t\ticon: 'plus-outline',\n\t\t\t\t\tid: PILLAR_ACTION_ADD_NEW_AXIS,\n\t\t\t\t\tlabel: t('Add new axis'),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcontextMenuActions.push({\n\t\t\t\tid: 'axisSection',\n\t\t\t\tlabel: 'DEFINE Y AXIS',\n\t\t\t\tchildren: axisOptions,\n\t\t\t});\n\t\t}\n\n\t\tif (TIMESERIES_CHART_TYPES.includes(chartType) && metrics.length > 1) {\n\t\t\tconst metricChartTypes = CHART_TYPES_CONFIG.filter(\n\t\t\t\tc => c.menuGroup === 'time'\n\t\t\t).map(c => ({\n\t\t\t\tid: c.id,\n\t\t\t\tlabel: c.label,\n\t\t\t\ticon: c.chartIcon,\n\t\t\t}));\n\n\t\t\tconst metricChartType = metric.chartType || chartType;\n\t\t\tconst chartConfig = getChartConfig(metricChartType);\n\n\t\t\tactions.push({\n\t\t\t\tid: 'changeChartType',\n\t\t\t\ticon: chartConfig.chartIcon,\n\t\t\t\tlabel: t('Change chart type'),\n\t\t\t\ttype: 'dropdown',\n\t\t\t\titems: metricChartTypes,\n\t\t\t});\n\t\t}\n\n\t\tcontextMenuActions.push({\n\t\t\tid: 'deleteSection',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ticon: 'trash-outline',\n\t\t\t\t\tid: PILLAR_ACTION_DELETE,\n\t\t\t\t\tlabel: t('Delete'),\n\t\t\t\t\tdisabled: metricsPerDataSource === 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn (\n\t\t\t<sn-par-pillar\n\t\t\t\tid={`metric-pillar-${index}`}\n\t\t\t\tclickable\n\t\t\t\tmodifier-label={getPillarModifier(state, metric)}\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tmetricIndex: index,\n\t\t\t\t}}\n\t\t\t\tactions={actions}\n\t\t\t\tcontext-menu-actions={contextMenuActions}>\n\t\t\t\t{getInvalidAggregationIcon(chartModel, dataSourceInfos, index)}\n\t\t\t\t{getMetricLabel(\n\t\t\t\t\tdataSources,\n\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\tmetric,\n\t\t\t\t\tdotWalkFieldDefinition\n\t\t\t\t)}\n\t\t\t</sn-par-pillar>\n\t\t);\n\t});\n};\n\nexport const metricView = (state: State) => {\n\tconst { popoverOpened, popoverTarget } = state;\n\n\tconst {\n\t\tchartModel: { chartType },\n\t\texpanded,\n\t} = state.properties;\n\n\tconst supportMultipleMetrics = !MULTIPLE_DS_UNSUPPORTED.includes(chartType);\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\texpanded={expanded}\n\t\t\tappend-to-payload={{ accordionItem: 'metric' }}\n\t\t\theader={t('Metric')}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div\n\t\t\t\tslot=\"content\"\n\t\t\t\tclassName=\"metric-configuration now-accordion-content\">\n\t\t\t\t<div class={{ 'pillar-box': supportMultipleMetrics }}>\n\t\t\t\t\t{getPillars(state)}\n\t\t\t\t\t{supportMultipleMetrics ? (\n\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\tid=\"btn-add-metric\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tid: BTN_ADD_METRIC,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticon=\"plus-fill\"\n\t\t\t\t\t\t\tlabel={t('Add')}\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tvariant=\"secondary\"></now-button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tundefined\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<now-popover\n\t\t\t\t\tappend-to-payload={{ type: METRIC_POPOVER }}\n\t\t\t\t\topened={popoverOpened}\n\t\t\t\t\tpositions={nowPopoverAllowedPositions}\n\t\t\t\t\tposition-target={popoverTarget}\n\t\t\t\t\tmanage-opened>\n\t\t\t\t\t<viz-config-metric-popover-content\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tshared-state={state}\n\t\t\t\t\t/>\n\t\t\t\t</now-popover>\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { createCustomElement } from '@servicenow/ui-core';\nimport styles from './styles.scss';\nimport { type State } from './state';\n\nimport { t } from 'sn-translate';\nimport { isTableMetric } from '../helpers/metric';\nimport { getAggregateFields } from './aggregate-fields-view';\n\nimport {\n\tBTN_POPOVER_CLOSE,\n\tFIELD_DATA_SOURCE,\n\tFIELD_LABEL,\n\tBTN_POPOVER_APPLY,\n} from './constants';\n\ntype SharedState = { properties: { sharedState: State } };\n\nconst view = ({ properties }: SharedState) => {\n\tconst { sharedState } = properties;\n\n\tconst {\n\t\tdataToApply,\n\t\terrorMessages,\n\t\tdataSourceOptions,\n\t\teditMetricIndex,\n\t\tproperties: {\n\t\t\tchartModel: { dataSources },\n\t\t},\n\t} = sharedState;\n\n\tconst dataSourceSelectMessages =\n\t\terrorMessages && errorMessages.dataSource\n\t\t\t? [{ status: 'critical', content: errorMessages.dataSource }]\n\t\t\t: undefined;\n\n\treturn (\n\t\t<div\n\t\t\tclass={{\n\t\t\t\t'viz-config-metric-popover': true,\n\t\t\t\t'viz-config-metric-popover--table': isTableMetric(\n\t\t\t\t\tdataToApply,\n\t\t\t\t\tdataSources\n\t\t\t\t),\n\t\t\t}}>\n\t\t\t<now-heading label={t('Metric')} level=\"3\" variant=\"title-secondary\" />\n\t\t\t<now-button-iconic\n\t\t\t\tbare\n\t\t\t\ticon=\"close-fill\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tid: BTN_POPOVER_CLOSE,\n\t\t\t\t}}\n\t\t\t\tconfig-aria={{ 'aria-label': t('Close') }}\n\t\t\t/>\n\t\t\t{dataSources.length > 1 ? (\n\t\t\t\t<now-select\n\t\t\t\t\tdisabled={editMetricIndex !== undefined}\n\t\t\t\t\tclassName=\"viz-config-metric-data-source\"\n\t\t\t\t\tlabel={t('Data source')}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tfield: FIELD_DATA_SOURCE,\n\t\t\t\t\t}}\n\t\t\t\t\titems={dataSourceOptions}\n\t\t\t\t\tplaceholder={t('Select the data source')}\n\t\t\t\t\tselected-item={dataToApply.dataSource}\n\t\t\t\t\tmessages={dataSourceSelectMessages}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t<devx-input\n\t\t\t\tclassName=\"viz-config-metric-label\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tfield: FIELD_LABEL,\n\t\t\t\t}}\n\t\t\t\tlabel={t('Label')}\n\t\t\t\tinputValue={dataToApply.label || ''}\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tplaceholder={t('Default')}\n\t\t\t\ttransparent={true}\n\t\t\t\tmaxlength={100}\n\t\t\t/>\n\t\t\t{getAggregateFields(sharedState)}\n\t\t\t<now-button\n\t\t\t\tclassName=\"viz-config-metric-apply-button\"\n\t\t\t\tlabel={t('Apply')}\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tid: BTN_POPOVER_APPLY,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\ncreateCustomElement('viz-config-metric-popover-content', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tsharedState: {\n\t\t\tdefault: {},\n\t\t},\n\t},\n\tstyles,\n});\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}.metric-configuration .pillar-box{background-color:RGB(var(--now-color--neutral-2,228,230,231));padding:.5rem .4375rem;margin:0 -.4rem 1rem;border-radius:.25rem;box-shadow:inset 0 1px 1px 1px RGB(var(--now-color--neutral-4,191,197,198))}.metric-configuration sn-par-pillar{display:block;word-break:break-word}.metric-configuration sn-par-pillar:not(:first-child){margin-top:.25rem}.metric-configuration now-button{width:100%}.metric-configuration sn-par-pillar+now-button{margin-top:.5rem}.metric-configuration .invalid-aggregation-icon{color:RGB(var(--now-color--alert-critical-2,200,60,54));margin-inline-end:.25rem}.viz-config-metric-popover{position:relative;padding:.75rem;font-size:1rem;width:300px;min-height:186px}.viz-config-metric-popover--table{min-height:250px}.viz-config-metric-popover now-button-iconic{position:absolute;right:.25rem;top:.25rem}.viz-config-metric-popover .viz-config-metric-data-source{margin-top:.25rem;margin-bottom:1rem}.viz-config-metric-popover .viz-config-metric-apply-button{width:100%;display:block;margin-top:.75rem}.viz-config-metric-popover now-label-value-inline{margin-top:1rem;display:block}.viz-config-metric-popover now-select{display:block}.section-prop-size{margin-top:.25rem;margin-bottom:1rem}.section-prop-size now-dropdown{margin-top:.25rem}\", \"\"]);\n\n// exports\n","// @flow\nimport isArray from 'lodash/isArray';\n\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\n\nimport { t } from 'sn-translate';\n\nimport {\n\tFIELD_LABEL,\n\tBTN_POPOVER_APPLY,\n\tBTN_POPOVER_CLOSE,\n\tINDICATOR_EMPTY_STRING_ID_REPLACEMENT,\n\tFIELD_AGGREGATE_FUNCTION,\n\tSET_METRICS,\n\tBTN_ADD_METRIC,\n\tPILLAR_ACTION_EDIT,\n\tPILLAR_ACTION_DELETE,\n\tSET_AGGREGATION_SOURCE,\n\tPILLAR_ACTION_ADD_NEW_AXIS,\n\tADD_NEW_AXIS_TO_METRIC,\n\tMETRIC_POPOVER,\n\tAGGREGATE_FUNCTION_COUNT,\n\tFIELD_AGGREGATE_FIELD,\n} from './constants';\n\nimport {\n\tSN_PAR_PILLAR_CLICKED,\n\tSN_PAR_PILLAR_ACTION_CLICKED,\n} from '@now-par-components/sn-par-pillar';\n\nimport { getValidMetric } from '../visualizations-config-panel/actions/model-validators';\nimport {\n\tgetAggregateOptionsTable,\n\tgetAggregateOptionsIndicator,\n} from '../visualizations-config-panel/actions/model-options';\nimport {\n\tisTableMetric,\n\tisIndicatorMetric,\n\tgetAggregateWithSameFrequency,\n} from '../helpers/metric';\nimport { type Metric } from '../common/types/metric';\nimport { type DataSource } from '../common/types/data-source';\nimport { type Option } from '../common/types/option';\nimport { PRIMARY_AXIS, AXIS_PREFIX } from '../common/types/axis';\n\nimport { TIMESERIES_CHART_TYPES } from '../common/chart-settings';\nimport { DOT_WALK_PATH_UPDATED } from '../dot-walk/constants';\nimport { createFieldDefinitionFilter } from './aggregate-fields-view';\n\nconst getAggregateIndicatorRealValue = value =>\n\tvalue === INDICATOR_EMPTY_STRING_ID_REPLACEMENT ? '' : value;\n\nconst getAggregateOptions = (dataToApply: Metric, state: State) => {\n\tconst {\n\t\tproperties: { dataSourceInfos, chartModel },\n\t} = state;\n\tconst { dataSources } = chartModel;\n\tconst { aggregateFunction, dataSource } = dataToApply;\n\tconst dataSourceInfo = dataSource && dataSourceInfos[dataSource];\n\n\tlet localAggregateOptions = [];\n\n\tif (isTableMetric(dataToApply, dataSources)) {\n\t\tlocalAggregateOptions =\n\t\t\taggregateFunction && dataSourceInfo\n\t\t\t\t? getAggregateOptionsTable(aggregateFunction, dataSourceInfo)\n\t\t\t\t: [];\n\t} else if (isIndicatorMetric(dataToApply, dataSources) && dataSource) {\n\t\tlocalAggregateOptions = getAggregateOptionsIndicator(\n\t\t\tdataSource,\n\t\t\tchartModel,\n\t\t\tdataSourceInfos,\n\t\t\tINDICATOR_EMPTY_STRING_ID_REPLACEMENT\n\t\t);\n\t}\n\n\treturn localAggregateOptions;\n};\n\nconst getDataSourceOptions = (dataSources: DataSource[]): Option[] => {\n\treturn dataSources.reduce((acc, ds) => {\n\t\tif (ds.id) {\n\t\t\tacc.push({\n\t\t\t\tid: ds.id,\n\t\t\t\tlabel: ds.label,\n\t\t\t});\n\t\t}\n\n\t\treturn acc;\n\t}, []);\n};\n\nconst handleDropdownSelection = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\n\tconst {\n\t\tproperties: { dataSourceInfos, chartModel, dotWalkFieldDefinition },\n\t\tdataToApply: dataToApplyOld,\n\t\ttypingTrack: typingTrackOld,\n\t\terrorMessages: errorMessagesOld,\n\t\tcomponentHost,\n\t} = state;\n\n\tconst { dataSources } = chartModel;\n\n\t// DotWalk OR Dropdown seletion OR devx-typeahead\n\tconst selectedValue =\n\t\taction.payload.dotWalkPath ||\n\t\t(isArray(action.payload.value)\n\t\t\t? action.payload.value[0]\n\t\t\t: action.payload.value);\n\n\tconst field = action.payload.fieldName || action.payload.field;\n\n\tif (field) {\n\t\tconst { aggregateFunction } = dataToApplyOld;\n\t\tconst filter = createFieldDefinitionFilter(aggregateFunction);\n\n\t\tif (\n\t\t\tfield === FIELD_AGGREGATE_FIELD &&\n\t\t\taction.payload.definition &&\n\t\t\t!filter(null, action.payload.definition.field)\n\t\t) {\n\t\t\treturn updateState([\n\t\t\t\t{\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `errorMessages[${field}]`,\n\t\t\t\t\tvalue: t('Selected field is invalid'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `dataToApply[${field}]`,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\tlet dataToApply = {\n\t\t\t...dataToApplyOld,\n\t\t\t[field]: selectedValue,\n\t\t};\n\n\t\tif (isTableMetric(dataToApply, dataSources)) {\n\t\t\tdataToApply = getValidMetric(\n\t\t\t\tchartModel,\n\t\t\t\tdataSourceInfos,\n\t\t\t\tdotWalkFieldDefinition,\n\t\t\t\tdataToApply\n\t\t\t);\n\t\t}\n\n\t\tconst typingTrack = {\n\t\t\t...typingTrackOld,\n\t\t\t[field]: undefined,\n\t\t};\n\t\tconst errorMessages = {\n\t\t\t...errorMessagesOld,\n\t\t\t[field]: undefined,\n\t\t};\n\n\t\tif (field === FIELD_AGGREGATE_FUNCTION) {\n\t\t\terrorMessages.aggregateField = undefined;\n\t\t\ttypingTrack.aggregateField = undefined;\n\t\t}\n\n\t\tupdateState({\n\t\t\tdataToApply,\n\t\t\ttypingTrack,\n\t\t\terrorMessages,\n\t\t\tlocalAggregateOptions: getAggregateOptions(dataToApply, state),\n\t\t});\n\n\t\tconst parPopover: any =\n\t\t\tcomponentHost &&\n\t\t\tcomponentHost.shadowRoot &&\n\t\t\tcomponentHost.shadowRoot.querySelector('now-popover');\n\n\t\tsetTimeout(() => {\n\t\t\tparPopover && parPopover.refit && parPopover.refit();\n\t\t}, 100);\n\t}\n};\n\nconst handleInputBlured = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tswitch (action.payload.field) {\n\t\tcase FIELD_LABEL:\n\t\t\taction.stopPropagation();\n\t\t\tupdateState({\n\t\t\t\tdataToApply: {\n\t\t\t\t\t...state.dataToApply,\n\t\t\t\t\tlabel: action.payload.value,\n\t\t\t\t},\n\t\t\t});\n\t\t\tbreak;\n\t}\n};\n\nconst handlePillarAction = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.id) {\n\t\tcase PILLAR_ACTION_EDIT:\n\t\t\ttoggleMetricPopover(coeffects);\n\t\t\tbreak;\n\t\tcase PILLAR_ACTION_DELETE:\n\t\t\thandleDeleteAction(coeffects);\n\t\t\tbreak;\n\t\tcase PILLAR_ACTION_ADD_NEW_AXIS:\n\t\t\tcoeffects.dispatch(\n\t\t\t\tADD_NEW_AXIS_TO_METRIC,\n\t\t\t\tcoeffects.action.payload.metricIndex\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault: {\n\t\t\thandleDynamicActions(coeffects);\n\t\t}\n\t}\n};\n\nconst handleDynamicActions = ({\n\tstate,\n\taction,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { metrics } = state.properties.chartModel;\n\tconst { id = '' } = action.payload;\n\tconst { metricIndex } = action.payload;\n\n\tconst updatedMetrics = metrics.map((m, index) => {\n\t\tif (index === metricIndex) {\n\t\t\tconst updateMetric = { ...m };\n\t\t\tconst isValidAxisId =\n\t\t\t\tid === PRIMARY_AXIS || id.indexOf(AXIS_PREFIX) === 0;\n\n\t\t\tif (isValidAxisId) {\n\t\t\t\tupdateMetric.axisId = id;\n\t\t\t} else {\n\t\t\t\tupdateMetric.chartType = id;\n\t\t\t}\n\n\t\t\treturn updateMetric;\n\t\t}\n\n\t\treturn m;\n\t});\n\n\tdispatch(SET_METRICS, updatedMetrics);\n};\n\nconst handleDeleteAction = ({\n\tstate,\n\taction,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { metricIndex } = action.payload;\n\n\tif (metricIndex === undefined) {\n\t\treturn;\n\t}\n\n\tconst metrics = state.properties.chartModel.metrics.filter(\n\t\t(m, i) => i !== metricIndex\n\t);\n\n\tdispatch(SET_METRICS, metrics);\n};\n\nconst toggleMetricPopover = ({\n\tstate,\n\tupdateState,\n\taction,\n}: Coeffects<State, any>) => {\n\tconst {\n\t\tpopoverOpened: popoverOpenedOld,\n\t\tpopoverClosedAt,\n\t\tcomponentHost,\n\t\tproperties: {\n\t\t\tchartModel: { metrics, dataSources },\n\t\t},\n\t} = state;\n\n\tconst { metricIndex } = action.payload;\n\tconst dataToApply =\n\t\tmetricIndex === undefined\n\t\t\t? {\n\t\t\t\t\tdataSource: dataSources[0].id,\n\t\t\t  }\n\t\t\t: { ...metrics[metricIndex] };\n\n\tconst selectorPopoverTarget =\n\t\tmetricIndex === undefined\n\t\t\t? '#btn-add-metric'\n\t\t\t: `#metric-pillar-${metricIndex}`;\n\n\tconst popoverOpened = !popoverOpenedOld;\n\n\tupdateState({\n\t\tdataToApply,\n\t\teditMetricIndex: metricIndex,\n\t\tlocalAggregateOptions: getAggregateOptions(dataToApply, state),\n\t\tdataSourceOptions: getDataSourceOptions(dataSources),\n\t\tpopoverClosedAt: popoverOpened ? new Date().getTime() : popoverClosedAt,\n\t\tpopoverTarget:\n\t\t\tcomponentHost &&\n\t\t\tcomponentHost.shadowRoot &&\n\t\t\tcomponentHost.shadowRoot.querySelector(selectorPopoverTarget),\n\t\t...(!popoverOpened && { popoverOpened: false }),\n\t});\n\n\tif (popoverOpened) {\n\t\tsetTimeout(() => {\n\t\t\tupdateState({\n\t\t\t\tpopoverOpened,\n\t\t\t});\n\t\t}, 100);\n\t}\n};\n\nconst createCleanClosedPopoverState = () => ({\n\tpopoverOpened: false,\n\tpopoverClosedAt: new Date().getTime(),\n\tdataToApply: {},\n\terrorMessages: {},\n\ttypingTrack: {},\n});\n\nconst validateTypeaheads = (\n\ttypingTrack: $PropertyType<State, 'typingTrack'>\n) => {\n\tconst errorMessages = {};\n\tconst valid =\n\t\t!typingTrack.dataSource &&\n\t\t!typingTrack.aggregateFunction &&\n\t\t!typingTrack.aggregateField &&\n\t\t!typingTrack.aggregateIndicator;\n\n\tif (typingTrack.dataSource) {\n\t\terrorMessages.dataSource = t('Please select a data source');\n\t}\n\n\tif (typingTrack.aggregateFunction) {\n\t\terrorMessages.aggregateFunction = t('Please select a function');\n\t}\n\n\tif (typingTrack.aggregateField) {\n\t\terrorMessages.aggregateField = t('Please select a field');\n\t}\n\n\tif (typingTrack.aggregateIndicator) {\n\t\terrorMessages.aggregateIndicator = t('Please select an aggregation');\n\t}\n\n\treturn { valid, errorMessages };\n};\n\nconst getMetricsToBeApplied = (\n\tstate: State,\n\teditMetricIndex?: number,\n\tmetric: Metric\n): Metric[] => {\n\tconst {\n\t\tproperties: {\n\t\t\tchartModel: { metrics, dataSources, chartType },\n\t\t\tdataSourceInfos,\n\t\t},\n\t} = state;\n\n\tconst metricsToBeApplied = [...metrics];\n\n\tif (editMetricIndex === undefined) {\n\t\tmetricsToBeApplied.push(metric);\n\t} else {\n\t\tmetricsToBeApplied[editMetricIndex] = metric;\n\t}\n\n\tif (\n\t\tisIndicatorMetric(metric, dataSources) &&\n\t\tTIMESERIES_CHART_TYPES.includes(chartType)\n\t) {\n\t\tconst newMetricIndex =\n\t\t\teditMetricIndex === undefined\n\t\t\t\t? metricsToBeApplied.length\n\t\t\t\t: editMetricIndex;\n\n\t\t// Validate if other metrics have same frequency\n\t\treturn metricsToBeApplied.map((m, index) => {\n\t\t\tif (index === newMetricIndex) {\n\t\t\t\treturn m;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...m,\n\t\t\t\taggregateIndicator: getAggregateWithSameFrequency(\n\t\t\t\t\tmetric,\n\t\t\t\t\tm,\n\t\t\t\t\tdataSourceInfos\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\t}\n\n\treturn metricsToBeApplied;\n};\n\nconst handleApply = ({\n\tstate,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst {\n\t\tproperties: {\n\t\t\tchartModel: { metrics, dataSources },\n\t\t},\n\t\tdataToApply,\n\t\ttypingTrack,\n\t\teditMetricIndex,\n\t} = state;\n\n\tconst { errorMessages, valid } = validateTypeaheads(typingTrack);\n\tconst validAggregationField =\n\t\tisIndicatorMetric(metrics[editMetricIndex || 0], dataSources) ||\n\t\tdataToApply.aggregateField ||\n\t\tdataToApply.aggregateFunction === AGGREGATE_FUNCTION_COUNT;\n\n\tif (!valid || !validAggregationField) {\n\t\treturn updateState({ errorMessages });\n\t}\n\n\tconst newMetrics = getMetricsToBeApplied(state, editMetricIndex, {\n\t\t...dataToApply,\n\t\taggregateIndicator: getAggregateIndicatorRealValue(\n\t\t\tdataToApply.aggregateIndicator\n\t\t),\n\t});\n\n\tdispatch(SET_METRICS, newMetrics);\n\n\tupdateState(createCleanClosedPopoverState());\n};\n\nconst handleButtonClick = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.id) {\n\t\tcase BTN_POPOVER_APPLY:\n\t\t\thandleApply(coeffects);\n\t\t\tbreak;\n\t\tcase BTN_ADD_METRIC:\n\t\t\ttoggleMetricPopover(coeffects);\n\t\t\tbreak;\n\t}\n};\n\nconst updateDataToApplyNowDropdownItemSelected = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst {\n\t\tproperties: { dataSourceInfos, chartModel, dotWalkFieldDefinition },\n\t\tdataToApply: dataToApplyOld,\n\t} = state;\n\n\tconst field = action.payload.field;\n\n\tif (!field) return;\n\n\tconst { dataSources } = chartModel;\n\tconst selectedValue = action.payload.value[0];\n\n\tlet dataToApply = {\n\t\t...dataToApplyOld,\n\t\t[field]: selectedValue,\n\t};\n\n\tif (isTableMetric(dataToApply, dataSources))\n\t\tdataToApply = getValidMetric(\n\t\t\tchartModel,\n\t\t\tdataSourceInfos,\n\t\t\tdotWalkFieldDefinition,\n\t\t\tdataToApply\n\t\t);\n\n\tupdateState({\n\t\tdataToApply,\n\t\tlocalAggregateOptions: getAggregateOptions(dataToApply, state),\n\t});\n};\n\nconst handleNowDropdownItemSelected = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.payloadActionType) {\n\t\tcase SET_AGGREGATION_SOURCE:\n\t\t\tupdateDataToApplyNowDropdownItemSelected(coeffects);\n\t\t\tbreak;\n\t\tcase FIELD_AGGREGATE_FUNCTION:\n\t\t\thandleDropdownSelection(coeffects);\n\t\t\tbreak;\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: ({\n\t\t\taction,\n\t\t\tupdateState,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tupdateState({ componentHost: action.payload.host });\n\t\t},\n\n\t\t[SN_PAR_PILLAR_ACTION_CLICKED]: handlePillarAction,\n\t\t[SN_PAR_PILLAR_CLICKED]: toggleMetricPopover,\n\n\t\t'NOW_SELECT#SELECTED_ITEM_SET': handleDropdownSelection,\n\t\t[DOT_WALK_PATH_UPDATED]: handleDropdownSelection,\n\n\t\t'NOW_BUTTON_ICONIC#CLICKED': ({\n\t\t\taction: { payload },\n\t\t\tupdateState,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tif (payload.id === BTN_POPOVER_CLOSE) {\n\t\t\t\tupdateState(createCleanClosedPopoverState());\n\t\t\t}\n\t\t},\n\n\t\t'NOW_BUTTON#CLICKED': handleButtonClick,\n\n\t\t'NOW_POPOVER#OPENED_SET': ({\n\t\t\tupdateState,\n\t\t\taction,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tif (action.payload.type === METRIC_POPOVER && !action.payload.value) {\n\t\t\t\tupdateState(createCleanClosedPopoverState());\n\t\t\t}\n\t\t},\n\n\t\t'DEVX_INPUT#INPUT_BLUR': handleInputBlured,\n\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': handleNowDropdownItemSelected,\n\t},\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"isArray\"];","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport additionalSettingsActions from './actions';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport styles from './styles.scss';\nimport { initialState } from './state';\n\ncreateCustomElement('viz-config-additional-settings', {\n\trenderer: { type: snabbdom },\n\tview,\n\tproperties: {\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdataSourceInfos: {\n\t\t\tdefault: {},\n\t\t},\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tstyles,\n\t...additionalSettingsActions,\n\tinitialState,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '../toggle';\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { getBooleanSettings } from './settings';\nimport { type State } from './state';\nimport { type Helpers } from '@servicenow/ui-core';\nimport '@servicenow/now-accordion';\nimport { autoScrollToVisibility } from '../helpers/now-accordion/auto-scroll-to-visibility';\nimport { isChecked, isDisabled } from './settings-helpers';\nimport { MetricLabelPosition } from './sub-settings/metric-label-position';\nimport { CHART_TYPES } from '../common/types/chart-type';\n\nconst renderSubSettings = (item, state, helpers) => {\n\tconst {\n\t\tproperties: { chartModel },\n\t} = state;\n\n\tswitch (item.id) {\n\t\tcase 'showMetricLabel':\n\t\t\treturn chartModel.chartType === CHART_TYPES.SINGLE_SCORE\n\t\t\t\t? MetricLabelPosition(item, state, helpers)\n\t\t\t\t: undefined;\n\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport default (state: State, helpers: Helpers<State>) => {\n\tconst {\n\t\tproperties: { chartModel, dataSourceInfos, expanded },\n\t} = state;\n\n\tconst settings = getBooleanSettings(chartModel, dataSourceInfos);\n\n\tif (!settings.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={t('Additional settings')}\n\t\t\texpanded={expanded}\n\t\t\tappend-to-payload={{ accordionItem: 'additionalSettings' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t{settings.map(item => (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tappend-to-payload={{ id: item.id }}\n\t\t\t\t\t\t\tchecked={isChecked(item.id, chartModel)}\n\t\t\t\t\t\t\tdisabled={isDisabled(item.id, chartModel)}\n\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"add-settings__sub-settings\">\n\t\t\t\t\t\t\t{renderSubSettings(item, state, helpers)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\nimport { type Coeffects } from '@servicenow/ui-core';\nimport {\n\tADDITIONAL_SETTINGS_CHANGE,\n\tSET_XENOLITH_PROPERTIES,\n} from './constants';\nimport { SET_METRIC_LABEL_POSITION } from './sub-settings/metric-label-position';\n\nexport default {\n\tactions: {\n\t\t[ADDITIONAL_SETTINGS_CHANGE]: {},\n\t},\n\tactionHandlers: {\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': ({\n\t\t\tdispatch,\n\t\t\taction,\n\t\t}: Coeffects<any, any>) => {\n\t\t\tswitch (action.payload.payloadActionType) {\n\t\t\t\tcase SET_METRIC_LABEL_POSITION:\n\t\t\t\t\tdispatch(SET_XENOLITH_PROPERTIES, {\n\t\t\t\t\t\theadingPosition: action.payload.value[0],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t'VIZ_CONFIG_TOGGLE#CHECKED_SET': ({\n\t\t\tdispatch,\n\t\t\taction,\n\t\t}: Coeffects<any, any>) => {\n\t\t\tdispatch(ADDITIONAL_SETTINGS_CHANGE, { ...action.payload });\n\t\t},\n\t},\n};\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}.viz-config-collapsable-header{margin:0 -10px 10px;padding:15px 10px;display:flex;align-items:center;justify-content:space-between;background-color:RGB(var(--now-color--neutral-0,255,255,255));color:RGB(var(--now-color--neutral-10,80,97,99));font-weight:600;font-size:1rem;cursor:pointer}.add-settings__sub-settings{padding-inline-start:2.625rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport { initialState } from './state';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\n\nimport view from './view';\nimport styles from './styles.scss';\nimport filtersSettingsActions from './actions';\n\ncreateCustomElement('viz-config-data-update-settings', {\n\trenderer: { type: snabbdom },\n\tview,\n\tinitialState,\n\tproperties: {\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t\tdataSourceInfos: {\n\t\t\tdefault: {},\n\t\t},\n\t\tsecurity: {\n\t\t\tdefault: {},\n\t\t},\n\t\tminRefreshFrequency: {\n\t\t\tdefault: undefined,\n\t\t},\n\t},\n\t...filtersSettingsActions,\n\tstyles,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-tooltip';\nimport '@servicenow/now-accordion';\n\nimport '../toggle';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { autoScrollToVisibility } from '../helpers/now-accordion/auto-scroll-to-visibility';\nimport { type State } from './state';\nimport {\n\tSET_REALTIME,\n\tSET_CAN_CLICK,\n\tSET_REALTIME_INDICATOR,\n} from '../visualizations-config-panel/actions/action-constants';\nimport { isRealtimeRelevant } from '../visualizations-config-panel/actions/model-validators'; // eslint-disable-line no-unused-vars\nimport { jsxif } from '../helpers/seismic';\nimport { isRefreshFrequencyRelevant } from '../visualizations-config-panel/actions/model-validators'; // eslint-disable-line no-unused-vars\nimport { FIELD_REFRESH_FREQUENCY } from './constants';\nimport './../common/popover-content';\n\nexport default (state: State) => {\n\tconst {\n\t\tproperties: { chartModel, expanded, dataSourceInfos, security },\n\t\terrorMessages,\n\t} = state;\n\tconst {\n\t\tfiltersSettings: { followFilters, hideFiltersInfo },\n\t} = chartModel;\n\t// TODO: disabled should be true if there are no filters on the page\n\tconst disabled = false;\n\n\tconst showRealTime =\n\t\tdataSourceInfos && isRealtimeRelevant(chartModel, dataSourceInfos);\n\n\tconst showRefreshFrequency =\n\t\tdataSourceInfos &&\n\t\tisRefreshFrequencyRelevant(\n\t\t\tsecurity && security.isAdmin,\n\t\t\tchartModel,\n\t\t\tdataSourceInfos\n\t\t);\n\n\tconst followFiltersPopOverContent = t(\n\t\t'Enable to filter the current data visualization'\n\t);\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\texpanded={expanded}\n\t\t\tappend-to-payload={{ accordionItem: 'filterSettings' }}\n\t\t\theader={t('Data update settings')}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t<div className=\"settings-item\">\n\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\tclassName=\"settings-toggle\"\n\t\t\t\t\t\tappend-to-payload={{ id: 'followFilters' }}\n\t\t\t\t\t\tchecked={followFilters}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tlabel={t('Follow filters')}\n\t\t\t\t\t\tinfoTooltip={followFiltersPopOverContent}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<viz-config-toggle\n\t\t\t\t\tclassName=\"settings-toggle\"\n\t\t\t\t\tappend-to-payload={{ id: 'hideFiltersInfo' }}\n\t\t\t\t\tchecked={!hideFiltersInfo && followFilters}\n\t\t\t\t\tdisabled={!followFilters}\n\t\t\t\t\tlabel={t('Show filter icon')}\n\t\t\t\t/>\n\t\t\t\t{jsxif(showRealTime) && (\n\t\t\t\t\t<div key=\"section-prop-realtime\" className=\"section-prop-realtime\">\n\t\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\t\tappend-to-payload={{ payloadActionType: SET_REALTIME }}\n\t\t\t\t\t\t\tchecked={chartModel.realtime}\n\t\t\t\t\t\t\tlabel={t('Real time update')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{jsxif(chartModel.realtime) && (\n\t\t\t\t\t\t\t<viz-config-toggle\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: SET_REALTIME_INDICATOR,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tchecked={chartModel.showRealtimeIndicator}\n\t\t\t\t\t\t\t\tlabel={t('Show score update time')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<viz-config-toggle\n\t\t\t\t\tlabel={t('Enable drilldown')}\n\t\t\t\t\tchecked={\n\t\t\t\t\t\tchartModel.canClick === undefined ? true : chartModel.canClick\n\t\t\t\t\t}\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: SET_CAN_CLICK,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"section-prop-refreshinterval\">\n\t\t\t\t\t<now-input\n\t\t\t\t\t\tid=\"refresh-interval-input\"\n\t\t\t\t\t\tlabel={t('Background refresh interval (minutes)')}\n\t\t\t\t\t\tname=\"refreshInterval\"\n\t\t\t\t\t\tvalue={chartModel.refreshInterval}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmanageValue={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{jsxif(showRefreshFrequency) && (\n\t\t\t\t\t<div className=\"section-prop-refreshFrequency\">\n\t\t\t\t\t\t<now-input\n\t\t\t\t\t\t\tid=\"refresh-rate-input\"\n\t\t\t\t\t\t\tlabel={t('Live refresh rate (seconds)')}\n\t\t\t\t\t\t\tname={FIELD_REFRESH_FREQUENCY}\n\t\t\t\t\t\t\tvalue={chartModel.refreshFrequency}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmanageInvalid={true}\n\t\t\t\t\t\t\tinvalid={errorMessages.refreshFrequency !== undefined}\n\t\t\t\t\t\t\tmessages={\n\t\t\t\t\t\t\t\terrorMessages.refreshFrequency\n\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstatus: 'critical',\n\t\t\t\t\t\t\t\t\t\t\t\tcontent: errorMessages.refreshFrequency,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}:host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.section-prop-realtime{margin-bottom:1rem}.section-prop-refreshinterval now-input{width:100%;margin-bottom:1rem}.section-prop-refreshFrequency now-input{width:100%}.settings-item{display:flex}\", \"\"]);\n\n// exports\n","// @flow\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\nimport { FILTERS_SETTINGS_CHANGE, FIELD_REFRESH_FREQUENCY } from './constants';\nimport { t } from 'sn-translate';\nimport { SET_MODEL_PROPS } from '../visualizations-config-panel/actions/action-constants';\n\nconst refreshFrequencyErrorMessage = (\n\trefreshFrequency: string,\n\tminRefreshFrequency: string\n) => {\n\tif (!refreshFrequency || refreshFrequency === '0') return undefined;\n\n\tif (Number(refreshFrequency) < Number(minRefreshFrequency))\n\t\treturn minRefreshFrequency === '1'\n\t\t\t? t('Minimum allowed value is 1 second')\n\t\t\t: t('Minimum allowed value is {0} seconds', minRefreshFrequency);\n\n\treturn undefined;\n};\n\nconst handleNowInputValueSet = ({\n\taction,\n\tstate,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { name } = action.payload;\n\n\tconst value =\n\t\taction.type === 'NOW_INPUT#INVALID_SET'\n\t\t\t? action.payload.fieldValue\n\t\t\t: action.payload.value;\n\n\taction.stopPropagation();\n\n\tswitch (name) {\n\t\tcase FIELD_REFRESH_FREQUENCY: {\n\t\t\tconst {\n\t\t\t\terrorMessages,\n\t\t\t\tproperties: { minRefreshFrequency },\n\t\t\t} = state;\n\n\t\t\tconst errorMessage = refreshFrequencyErrorMessage(\n\t\t\t\tvalue,\n\t\t\t\tminRefreshFrequency\n\t\t\t);\n\n\t\t\tif (!errorMessage) {\n\t\t\t\tdispatch(SET_MODEL_PROPS, {\n\t\t\t\t\t[FIELD_REFRESH_FREQUENCY]: value,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tupdateState({\n\t\t\t\terrorMessages: {\n\t\t\t\t\t...errorMessages,\n\t\t\t\t\trefreshFrequency: errorMessage,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nexport default {\n\tactions: {\n\t\t[FILTERS_SETTINGS_CHANGE]: {},\n\t},\n\tactionHandlers: {\n\t\t'VIZ_CONFIG_TOGGLE#CHECKED_SET': ({\n\t\t\tdispatch,\n\t\t\taction,\n\t\t}: Coeffects<any, any>) => {\n\t\t\tlet { id, value } = action.payload;\n\n\t\t\tif (id === 'hideFiltersInfo') {\n\t\t\t\tvalue = !value;\n\t\t\t}\n\n\t\t\tconst updates = [{ id, value }];\n\n\t\t\tif (id === 'followFilters') {\n\t\t\t\tupdates.push({\n\t\t\t\t\tid: 'hideFiltersInfo',\n\t\t\t\t\tvalue: !value,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdispatch(FILTERS_SETTINGS_CHANGE, { updates });\n\t\t},\n\n\t\t'NOW_INPUT#VALUE_SET': handleNowInputValueSet,\n\t\t'NOW_INPUT#INVALID_SET': handleNowInputValueSet,\n\t},\n};\n","import './trendby-selector';\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport view from './view';\nimport actions from './actions';\nimport { initialState } from './state';\nimport styles from './styles.scss';\n\ncreateCustomElement('viz-config-trend-by-selector', {\n\tproperties: {\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdataSourceInfos: {\n\t\t\tdefault: {},\n\t\t},\n\t\tfieldDefinitions: {\n\t\t\tdefault: {},\n\t\t},\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tinitialState,\n\tstyles,\n\tview,\n\trenderer: {\n\t\ttype: snabbdom,\n\t},\n\t...actions,\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { type State } from './state';\n\nimport '@now-par-components/sn-par-pillar';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-button';\nimport '@servicenow/now-popover';\nimport 'sn-devx-components';\nimport '@servicenow/now-accordion';\nimport './trendby-popover-content';\n\nimport {\n\tTREND_BY_NOT_SUPPORTED,\n\tgetChartConfig,\n} from '../common/chart-settings';\n\nimport { t } from 'sn-translate';\n\nimport { FREQUENCY_OPTIONS, TREND_BY_POPOVER } from './constants';\n\nimport { SOURCE_TYPE_TABLE } from '../common/types/data-source';\nimport { getOptionLabel } from '../common/options';\nimport { nowPopoverAllowedPositions } from '../common/popover-config';\nimport { autoScrollToVisibility } from '../helpers/now-accordion/auto-scroll-to-visibility';\nimport { getTrendByOptions } from '../visualizations-config-panel/actions/model-options';\nimport { formatMultipleLabels } from '../helpers/string-utils';\nimport { type Metric } from '../common/types/metric';\nimport { getFieldDefinitionKey } from '../helpers/field';\nimport { getMetricDataSource } from '../helpers/metric';\n\nconst getMissingTrendByIcon = (metrics: Metric[]) => {\n\tif (metrics.some(ds => !ds.trendByField)) {\n\t\treturn (\n\t\t\t<now-icon\n\t\t\t\tclassName=\"pillar-error-icon\"\n\t\t\t\ticon=\"circle-exclamation-fill\"></now-icon>\n\t\t);\n\t}\n\n\treturn undefined;\n};\n\nexport default (state: State) => {\n\tconst { chartModel, dataSourceInfos, expanded } = state.properties;\n\n\tconst { chartType, trendByFrequency, dataSources, metrics } = chartModel;\n\n\tconst { popoverOpened, popoverTarget } = state;\n\n\tconst chartTypeConfig = getChartConfig(chartType);\n\n\tif (\n\t\tchartTypeConfig.trendBy === TREND_BY_NOT_SUPPORTED ||\n\t\tdataSources[0].sourceType !== SOURCE_TYPE_TABLE\n\t) {\n\t\treturn;\n\t}\n\n\tconst frequencyLabel = getOptionLabel(FREQUENCY_OPTIONS, trendByFrequency);\n\n\tconst getOptionsForMetric = metric =>\n\t\tgetTrendByOptions(chartModel, dataSourceInfos[metric.dataSource || '']);\n\n\tconst getTrendByLabel = (trendByOptions, trendByField) =>\n\t\tgetOptionLabel(trendByOptions, trendByField);\n\n\tconst getFieldDefinitionLabel = metric => {\n\t\tconst dataSource = getMetricDataSource(metric, dataSources);\n\t\tconst key = getFieldDefinitionKey({\n\t\t\ttableName: dataSource.tableName,\n\t\t\tfieldName: metric.trendByField,\n\t\t});\n\n\t\treturn state.properties.fieldDefinitions[key].label;\n\t};\n\n\tconst pillarLabel = formatMultipleLabels(\n\t\tmetrics\n\t\t\t.map(metric =>\n\t\t\t\t/\\./g.test(metric.trendByField || '')\n\t\t\t\t\t? getFieldDefinitionLabel(metric)\n\t\t\t\t\t: getTrendByLabel(getOptionsForMetric(metric), metric.trendByField)\n\t\t\t)\n\t\t\t.filter(label => label)\n\t);\n\n\treturn (\n\t\t<now-accordion-item\n\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\theader={t('Trend by')}\n\t\t\texpanded={expanded}\n\t\t\tappend-to-payload={{ accordionItem: 'trendBy' }}\n\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t<sn-par-pillar\n\t\t\t\t\tellipsis\n\t\t\t\t\tclickable\n\t\t\t\t\tactions={[\n\t\t\t\t\t\t{ icon: 'pencil-outline', id: 'edit', label: t('Edit trend by') },\n\t\t\t\t\t]}>\n\t\t\t\t\t{getMissingTrendByIcon(metrics)}\n\t\t\t\t\t{t('{0} by', frequencyLabel)} {pillarLabel}\n\t\t\t\t</sn-par-pillar>\n\n\t\t\t\t<now-popover\n\t\t\t\t\tappend-to-payload={{ type: TREND_BY_POPOVER }}\n\t\t\t\t\topened={popoverOpened}\n\t\t\t\t\tpositions={nowPopoverAllowedPositions}\n\t\t\t\t\tposition-target={popoverTarget}\n\t\t\t\t\tmanage-opened>\n\t\t\t\t\t<viz-config-trend-by-popover-content\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tsharedState={state}\n\t\t\t\t\t\tgetOptionsForMetric={getOptionsForMetric}\n\t\t\t\t\t/>\n\t\t\t\t</now-popover>\n\t\t\t</div>\n\t\t</now-accordion-item>\n\t);\n};\n","// @flow\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { createCustomElement } from '@servicenow/ui-core';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport styles from './styles.scss';\nimport { t } from 'sn-translate';\n\nimport '../dot-walk';\nimport '@servicenow/now-select';\n\nimport { type State } from './state';\nimport { type FieldDefinition } from '../common/types/field';\n\nimport {\n\tTREND_BY_SELECTED,\n\tFREQUENCY_OPTIONS,\n\tTREND_BY_FREQUENCY_SELECTED,\n\tBTN_APPLY_ID,\n\tBTN_TRENDBY_POPOVER_CLOSE_ID,\n} from './constants';\n\nimport { SOURCE_TYPE_INDICATOR } from '../common/types/data-source';\nimport { createTransformMetadataFn } from '../group-by-selector/helpers/transform-metadata';\n\ntype SharedState = {\n\tproperties: {\n\t\tsharedState: State,\n\t\tgetOptionsForMetric: Function,\n\t},\n};\n\ncreateCustomElement('viz-config-trend-by-popover-content', {\n\tview: ({ properties: { sharedState, getOptionsForMetric } }: SharedState) => {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tchartModel: { dataSources, trendByFrequency, metrics },\n\t\t\t},\n\t\t\tdataToApply,\n\t\t\terrorMessages,\n\t\t\tlocalTrendByList,\n\t\t} = sharedState;\n\n\t\tconst isIndicator = dataSources.some(\n\t\t\tdataSource => dataSource.sourceType === SOURCE_TYPE_INDICATOR\n\t\t);\n\n\t\tconst getTrendByFieldValue = index =>\n\t\t\tmetrics[index] && getOptionsForMetric(metrics[index]).length\n\t\t\t\t? metrics[index].trendByField\n\t\t\t\t: false;\n\n\t\tconst getLocalTrendByField = index =>\n\t\t\tdataToApply && dataToApply.trendByField && dataToApply.trendByField[index]\n\t\t\t\t? dataToApply.trendByField[index]\n\t\t\t\t: getTrendByFieldValue(index);\n\n\t\tconst localTrendByFrequency =\n\t\t\tdataToApply && dataToApply.trendByFrequency\n\t\t\t\t? dataToApply.trendByFrequency\n\t\t\t\t: trendByFrequency;\n\n\t\tconst transformMetadata = createTransformMetadataFn(\n\t\t\t(_, field: FieldDefinition) => field.canTrendBy\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"viz-config-trendby-popover\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={t('Trend by')}\n\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\tvariant=\"title-secondary\"\n\t\t\t\t/>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tbare\n\t\t\t\t\ticon=\"close-fill\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tid: BTN_TRENDBY_POPOVER_CLOSE_ID,\n\t\t\t\t\t}}\n\t\t\t\t\tconfig-aria={{ 'aria-label': t('Close') }}\n\t\t\t\t/>\n\n\t\t\t\t<now-label-value-inline label={t('Aggregation period')} />\n\t\t\t\t<now-dropdown\n\t\t\t\t\tid=\"aggregation-period-dropdown\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tpayloadActionType: TREND_BY_FREQUENCY_SELECTED,\n\t\t\t\t\t}}\n\t\t\t\t\titems={FREQUENCY_OPTIONS}\n\t\t\t\t\tselect=\"single\"\n\t\t\t\t\tselected-items={[localTrendByFrequency]}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t'aria-label': t('Aggregation period'),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{localTrendByList.map((data, index) => {\n\t\t\t\t\tconst noOptions = data.options.length === 0;\n\t\t\t\t\tconst noOptionsMessage = t('There are no date fields available');\n\t\t\t\t\tconst value = getLocalTrendByField(index);\n\n\t\t\t\t\tconst placeholder =\n\t\t\t\t\t\t(noOptions && isIndicator) ||\n\t\t\t\t\t\t(noOptions && !data.hasReferenceFields)\n\t\t\t\t\t\t\t? t('No date fields')\n\t\t\t\t\t\t\t: t('Select a field');\n\n\t\t\t\t\tconst errorMessage = noOptions\n\t\t\t\t\t\t? noOptionsMessage\n\t\t\t\t\t\t: errorMessages &&\n\t\t\t\t\t\t  errorMessages.fieldError &&\n\t\t\t\t\t\t  errorMessages.fieldError[index];\n\n\t\t\t\t\tconst messages = errorMessage\n\t\t\t\t\t\t? [{ status: 'critical', content: errorMessage }]\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\tif (isIndicator) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<now-select\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName=\"viz-config-metric-data-source\"\n\t\t\t\t\t\t\t\tlabel={t('Date field for {0}', data.label)}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: TREND_BY_SELECTED,\n\t\t\t\t\t\t\t\t\tpayloadActionMetricIndex: index,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\titems={data.options}\n\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\tselected-item={value}\n\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst dotWalkError =\n\t\t\t\t\t\t!value && data.hasReferenceFields\n\t\t\t\t\t\t\t? t('Please select a date field')\n\t\t\t\t\t\t\t: !value && !data.hasReferenceFields\n\t\t\t\t\t\t\t? noOptionsMessage\n\t\t\t\t\t\t\t: null;\n\n\t\t\t\t\tconst dotWalkMessage = dotWalkError\n\t\t\t\t\t\t? dotWalkError\n\t\t\t\t\t\t: errorMessages.fieldError && errorMessages.fieldError[index];\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<viz-config-dot-walk\n\t\t\t\t\t\t\t\tkey={`trendby-dot-walk-${index}`}\n\t\t\t\t\t\t\t\tclassName=\"viz-config-metric-data-source\"\n\t\t\t\t\t\t\t\tlabel={t('Date field for {0}', data.label)}\n\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\ttableName={data.dataSource.tableName}\n\t\t\t\t\t\t\t\tdotWalkPath={dotWalkMessage ? undefined : value}\n\t\t\t\t\t\t\t\tdisabled={noOptions && !data.hasReferenceFields}\n\t\t\t\t\t\t\t\terror-message={dotWalkMessage}\n\t\t\t\t\t\t\t\ttransform-metadata={transformMetadata.bind(\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\tdata.dataSource\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tpayloadActionType: TREND_BY_SELECTED,\n\t\t\t\t\t\t\t\t\tpayloadActionMetricIndex: index,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t<now-button\n\t\t\t\t\tlabel={t('Apply')}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tid: BTN_APPLY_ID,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tsharedState: {\n\t\t\tdefault: {},\n\t\t},\n\t\tgetOptionsForMetric: {},\n\t},\n\tstyles,\n\trenderer: { type: snabbdom },\n\tbehaviors: [{ behavior: rtlBehavior }],\n});\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dot-walk-error{color:RGB(var(--now-color--alert-critical-2,200,60,54));font-size:.75rem;display:block;margin-bottom:1rem;padding-left:.5rem;padding-right:.5rem}.now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}.viz-config-trendby-popover{position:relative;padding:.75rem;width:300px;max-height:65vh;min-height:200px;overflow:auto}.viz-config-trendby-popover now-button-iconic{position:absolute;right:.25rem;top:.25rem}.viz-config-trendby-popover now-button{width:100%;display:block}.viz-config-trendby-popover now-select{display:block;margin-bottom:1rem}.viz-config-trendby-popover viz-config-dot-walk{margin-bottom:1rem}.viz-config-trendby-popover now-label-value-inline{margin-top:1rem;display:block}.viz-config-trendby-popover now-dropdown{margin-top:.5rem;margin-bottom:.75rem}.now-accordion-content sn-par-pillar{display:block}.pillar-error-icon{color:RGB(var(--now-color--alert-critical-2,200,60,54));margin-inline-end:.25rem}\", \"\"]);\n\n// exports\n","// @flow\nimport { t } from 'sn-translate';\nimport get from 'lodash/get';\n\nimport { type Coeffects, actionTypes } from '@servicenow/ui-core';\nimport { type State, type TrendbyTypeTrack } from './state';\nimport { SN_PAR_POPOVER_OPENED_SET } from '@now-par-components/sn-par-popover';\nimport {\n\tSN_PAR_PILLAR_CLICKED,\n\tSN_PAR_PILLAR_ACTION_CLICKED,\n} from '@now-par-components/sn-par-pillar';\nimport {\n\tTREND_BY_SELECTED,\n\tSET_TREND_BY,\n\tTREND_BY_FREQUENCY_SELECTED,\n\tBTN_APPLY_ID,\n\tBTN_TRENDBY_POPOVER_CLOSE_ID,\n\tTREND_BY_POPOVER,\n} from './constants';\n\nimport { getMetricDataSource } from '../helpers/metric/metric-datasource';\nimport { getMetricLabel } from '../helpers/metric';\nimport {\n\tgetTrendByOptions,\n\tgetTableReferenceFields,\n} from '../visualizations-config-panel/actions/model-options';\nimport { DOT_WALK_PATH_UPDATED } from '../dot-walk/constants';\n\nconst createCleanPopoverState = () => ({\n\tpopoverOpened: false,\n\tpopoverClosedAt: new Date().getTime(),\n\tdataToApply: undefined,\n\terrorMessages: {},\n\ttypingTrack: {},\n});\n\nconst toggleTrendbyPopover = ({\n\tstate: { popoverOpened, popoverClosedAt, componentHost, properties },\n\tupdateState,\n}) => {\n\tconst { chartModel } = properties;\n\n\tconst {\n\t\tchartModel: { metrics, dataSources },\n\t\tdataSourceInfos,\n\t\tfieldDefinitions,\n\t} = properties;\n\n\tconst normalizeMetrics = (metric, dataSource) => ({\n\t\tdataSource,\n\t\tlabel:\n\t\t\tgetMetricLabel(dataSources, dataSourceInfos, metric, fieldDefinitions) ||\n\t\t\tdataSource.id ||\n\t\t\t'',\n\t\toptions: getTrendByOptions(\n\t\t\tchartModel,\n\t\t\tdataSourceInfos[metric.dataSource || '']\n\t\t),\n\t\thasReferenceFields:\n\t\t\tgetTableReferenceFields(\n\t\t\t\tchartModel,\n\t\t\t\tdataSourceInfos[metric.dataSource || '']\n\t\t\t).length > 0,\n\t});\n\n\tupdateState({\n\t\tdataToApply: undefined,\n\t\tlocalTrendByList: metrics.map(metric =>\n\t\t\tnormalizeMetrics(metric, getMetricDataSource(metric, dataSources))\n\t\t),\n\t});\n\n\tsetTimeout(() => {\n\t\tupdateState({\n\t\t\tpopoverOpened: !popoverOpened,\n\t\t\tpopoverClosedAt: popoverOpened ? new Date().getTime() : popoverClosedAt,\n\t\t\tpopoverTarget: componentHost.shadowRoot.querySelector('sn-par-pillar'),\n\t\t});\n\t}, 100);\n};\n\nconst handleDropdownSelection = ({\n\taction,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\taction.stopPropagation();\n\n\tswitch (action.payload.payloadActionType) {\n\t\tcase TREND_BY_SELECTED: {\n\t\t\tconst index = action.payload.payloadActionMetricIndex;\n\n\t\t\t/**\n\t\t\t * If the user clicks on dot-walk breadcrumb, this validation needs to happen\n\t\t\t * otherwise invalid fields can be selecteed\n\t\t\t */\n\t\t\tif (\n\t\t\t\taction.payload.definition &&\n\t\t\t\t!get(action.payload, 'definition.field.canTrendBy')\n\t\t\t) {\n\t\t\t\treturn updateState([\n\t\t\t\t\t{\n\t\t\t\t\t\toperation: 'set',\n\t\t\t\t\t\tpath: `dataToApply.trendByField[${index}]`,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\toperation: 'set',\n\t\t\t\t\t\tpath: `errorMessages.fieldError[${index}]`,\n\t\t\t\t\t\tvalue: t('Selected field is invalid for trend by'),\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tupdateState([\n\t\t\t\t{\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `dataToApply.trendByField[${index}]`,\n\t\t\t\t\tvalue: action.payload.dotWalkPath || action.payload.value,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: `errorMessages.fieldError[${index}]`,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t},\n\t\t\t]);\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nconst validateTrendbyValues = (typingTrack: TrendbyTypeTrack) => {\n\tconst errorMessages = {};\n\tconst valid = !typingTrack.fieldTyped && !typingTrack.frequencyTyped;\n\n\tif (typingTrack.fieldTyped) {\n\t\terrorMessages.fieldError = typingTrack.fieldTyped.map(() =>\n\t\t\tt('Please select a trend by field')\n\t\t);\n\t}\n\n\tif (typingTrack.frequencyTyped) {\n\t\terrorMessages.frequencyError = t('Please select a frequency');\n\t}\n\n\treturn { valid, errorMessages };\n};\n\nconst handleDropdownSelectedItem = ({\n\tstate: { dataToApply },\n\taction,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tswitch (action.payload.payloadActionType) {\n\t\tcase TREND_BY_FREQUENCY_SELECTED: {\n\t\t\tconst trendByFrequency = action.payload.value[0];\n\n\t\t\tupdateState({\n\t\t\t\tdataToApply: { ...dataToApply, trendByFrequency },\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: ({\n\t\t\taction,\n\t\t\tupdateState,\n\t\t}: Coeffects<State, any>) =>\n\t\t\tupdateState({ componentHost: action.payload.host }),\n\n\t\t[SN_PAR_POPOVER_OPENED_SET]: ({ updateState }: Coeffects<State, any>) =>\n\t\t\tupdateState(createCleanPopoverState()),\n\n\t\t[SN_PAR_PILLAR_ACTION_CLICKED]: toggleTrendbyPopover,\n\t\t[SN_PAR_PILLAR_CLICKED]: toggleTrendbyPopover,\n\n\t\t[DOT_WALK_PATH_UPDATED]: handleDropdownSelection,\n\n\t\t'NOW_SELECT#SELECTED_ITEM_SET': handleDropdownSelection,\n\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': handleDropdownSelectedItem,\n\t\t'NOW_BUTTON#CLICKED': ({\n\t\t\taction: { payload },\n\t\t\tstate: { dataToApply, typingTrack },\n\t\t\tdispatch,\n\t\t\tupdateState,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tif (payload.id === BTN_APPLY_ID) {\n\t\t\t\tconst { valid, errorMessages } = validateTrendbyValues(typingTrack);\n\n\t\t\t\tif (!valid) {\n\t\t\t\t\treturn updateState({ errorMessages });\n\t\t\t\t}\n\n\t\t\t\tif (dataToApply) {\n\t\t\t\t\tdispatch(SET_TREND_BY, dataToApply);\n\t\t\t\t}\n\n\t\t\t\tupdateState(createCleanPopoverState());\n\t\t\t}\n\t\t},\n\n\t\t'NOW_POPOVER#OPENED_SET': ({\n\t\t\tupdateState,\n\t\t\taction,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tif (action.payload.type === TREND_BY_POPOVER && !action.payload.value) {\n\t\t\t\tupdateState(createCleanPopoverState());\n\t\t\t}\n\t\t},\n\n\t\t'NOW_BUTTON_ICONIC#CLICKED': ({\n\t\t\taction: { payload },\n\t\t\tupdateState,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tif (payload.id === BTN_TRENDBY_POPOVER_CLOSE_ID) {\n\t\t\t\tupdateState(createCleanPopoverState());\n\t\t\t}\n\t\t},\n\t},\n};\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport { colorPaletteView } from './view';\nimport colorPaletteActions from './action';\n\ncreateCustomElement('viz-config-color-palette', {\n\trenderer: { type: snabbdom },\n\tview: colorPaletteView,\n\tproperties: {\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\tdataSourceInfos: {\n\t\t\tdefault: {},\n\t\t},\n\t\tsingleColors: {\n\t\t\tdefault: {},\n\t\t},\n\t\tpaletteColors: {\n\t\t\tdefault: {},\n\t\t},\n\t\tfieldDefinitions: {\n\t\t\tdefault: {},\n\t\t},\n\t\taccordionState: {\n\t\t\tdefault: [],\n\t\t},\n\t},\n\tstyles,\n\t...colorPaletteActions,\n});\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}.now-accordion-content now-label-value-inline{display:block;margin-bottom:.25rem}.now-accordion-content now-dropdown{margin-bottom:.5rem}.color-and-rules now-select{width:100%}\", \"\"]);\n\n// exports\n","// @flow\n\n// @jsx snabbdom.createElement\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\nimport { type State } from './state';\nimport '@servicenow/now-accordion';\nimport '@servicenow/now-dropdown';\nimport { autoScrollToVisibility } from '../helpers/now-accordion/auto-scroll-to-visibility';\nimport 'sn-devx-components';\nimport {\n\tCOLOR_TYPE_SINGLE,\n\tCOLOR_TYPE_PALETTE,\n\tCOLOR_CHOICES,\n\tCOLOR_TYPE_REQUESTED,\n\tLOAD_COLOR_REQUESTED,\n} from './constants';\nimport { CHART_TYPES } from '../common/types/chart-type';\nimport { SOURCE_TYPE_INDICATOR } from '../common/types/data-source';\nimport { getMetricLabel } from '../helpers/metric/metric-label';\n\nimport '../color-rules';\n\nimport { type Metric } from '../common/types/metric';\n\nexport const colorPaletteView = (state: State) => {\n\tconst {\n\t\tproperties: {\n\t\t\tchartModel: { chartType, chartSettings, dataSources, metrics },\n\t\t\taccordionState,\n\t\t\tdataSourceInfos,\n\t\t\tsingleColors,\n\t\t\tpaletteColors,\n\t\t\tfieldDefinitions,\n\t\t},\n\t} = state;\n\n\tconst colorType =\n\t\tchartSettings && chartSettings.color && chartSettings.color.type;\n\tconst colorId =\n\t\tchartSettings && chartSettings.color && chartSettings.color.sys_id;\n\tconst singleScoreAndIndicator =\n\t\tdataSources[0].sourceType === SOURCE_TYPE_INDICATOR &&\n\t\tchartType === CHART_TYPES.SINGLE_SCORE;\n\tconst singleScoreAndReport =\n\t\tdataSources[0].sourceType !== SOURCE_TYPE_INDICATOR &&\n\t\tchartType === CHART_TYPES.SINGLE_SCORE;\n\n\tconst colorItems = COLOR_CHOICES.filter(o => {\n\t\treturn (\n\t\t\t!o.extraVerification || o.extraVerification(state.properties.chartModel)\n\t\t);\n\t});\n\n\tlet numberOfColorSeries: Metric[] =\n\t\tcolorType === COLOR_TYPE_PALETTE\n\t\t\t? [{ colorSysID: colorId, dataSource: dataSources[0].id }]\n\t\t\t: metrics;\n\n\tif (!singleScoreAndIndicator) {\n\t\treturn (\n\t\t\t<now-accordion-item\n\t\t\t\tid=\"color-accordion\"\n\t\t\t\tdividers={{ top: false, bottom: true }}\n\t\t\t\theader={t('Colors')}\n\t\t\t\texpanded={accordionState.color}\n\t\t\t\tappend-to-payload={{ accordionItem: 'color' }}\n\t\t\t\ton-click={autoScrollToVisibility}>\n\t\t\t\t<div className=\"now-accordion-content\" slot=\"content\">\n\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\tlabel={t('Set color type')}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tclassName=\"set-color-type-dropdown\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: COLOR_TYPE_REQUESTED,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={colorItems}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[colorType]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Select color type'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{colorType === COLOR_TYPE_SINGLE || colorType === COLOR_TYPE_PALETTE\n\t\t\t\t\t\t? numberOfColorSeries.map((metric, index) => {\n\t\t\t\t\t\t\t\tconst metricLabel = getMetricLabel(\n\t\t\t\t\t\t\t\t\tdataSources,\n\t\t\t\t\t\t\t\t\tdataSourceInfos,\n\t\t\t\t\t\t\t\t\tmetric,\n\t\t\t\t\t\t\t\t\tfieldDefinitions\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"color-and-rules\">\n\t\t\t\t\t\t\t\t\t\t<now-select\n\t\t\t\t\t\t\t\t\t\t\tid={`color-select-${index}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t\tcolorType === COLOR_TYPE_SINGLE\n\t\t\t\t\t\t\t\t\t\t\t\t\t? metrics.length > 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? t('Color for ') + metricLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: t('Color')\n\t\t\t\t\t\t\t\t\t\t\t\t\t: t('Palette')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\t\t\t\tpayloadActionType: LOAD_COLOR_REQUESTED,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: colorType,\n\t\t\t\t\t\t\t\t\t\t\t\tmetricIndex: index,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\titems={\n\t\t\t\t\t\t\t\t\t\t\t\tcolorType === COLOR_TYPE_SINGLE\n\t\t\t\t\t\t\t\t\t\t\t\t\t? singleColors\n\t\t\t\t\t\t\t\t\t\t\t\t\t: paletteColors\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('Set color')}\n\t\t\t\t\t\t\t\t\t\t\tselected-item={metric.colorSysID}\n\t\t\t\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{singleScoreAndReport ? (\n\t\t\t\t\t\t\t\t\t\t\t<viz-config-color-rules\n\t\t\t\t\t\t\t\t\t\t\t\tsingleColors={singleColors}\n\t\t\t\t\t\t\t\t\t\t\t\tchartModel={state.properties.chartModel}\n\t\t\t\t\t\t\t\t\t\t\t\tmetric={metric}\n\t\t\t\t\t\t\t\t\t\t\t\tmetricIndex={index}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: ''}\n\t\t\t\t</div>\n\t\t\t</now-accordion-item>\n\t\t);\n\t}\n};\n","// @flow\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport { colorRuleView } from './view';\nimport { initialState } from './state';\nimport styles from './styles.scss';\nimport colorRuleActions from './actions';\n\ncreateCustomElement('viz-config-color-rules', {\n\trenderer: { type: snabbdom },\n\tview: colorRuleView,\n\tinitialState,\n\tproperties: {\n\t\texpanded: {\n\t\t\tdefault: false,\n\t\t},\n\t\tchartModel: {\n\t\t\tdefault: {},\n\t\t},\n\t\tsingleColors: {\n\t\t\tdefault: [],\n\t\t},\n\t\tmetric: {\n\t\t\tdefault: {},\n\t\t},\n\t\tmetricIndex: {\n\t\t\tdefault: 0,\n\t\t},\n\t},\n\tstyles,\n\t...colorRuleActions,\n});\n","// @flow\n// @jsx snabbdom.createElement\n\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\n\nimport { type State } from './state';\nimport { t } from 'sn-translate';\n\nimport '@servicenow/now-popover';\nimport '@servicenow/now-button';\nimport '@servicenow/now-input';\n\nimport '@servicenow/now-accordion';\nimport 'sn-devx-components';\nimport './color-rule-popover';\n\nimport { type ColorRule } from '../common/types/color-rules';\nimport { type Metric } from '../common/types/metric';\n\nimport {\n\tBTN_ADD_COLOR_RULE,\n\tCOLOR_RULE_EDIT,\n\tCOLOR_RULE_DELETE,\n\tRULE_POPOVER,\n} from './constants';\n\nimport { nowPopoverAllowedPositions } from '../common/popover-config';\n\nconst colorRuleLabel = (rule: ColorRule) => {\n\tlet displayRule = '';\n\n\tswitch (rule.operator) {\n\t\tcase '<':\n\t\t\tdisplayRule = 'lower than';\n\t\t\tbreak;\n\n\t\tcase '<=':\n\t\t\tdisplayRule = 'lower than or is';\n\t\t\tbreak;\n\n\t\tcase '=':\n\t\t\tdisplayRule = 'is';\n\t\t\tbreak;\n\n\t\tcase '>':\n\t\t\tdisplayRule = 'greater than';\n\t\t\tbreak;\n\n\t\tcase '>=':\n\t\t\tdisplayRule = 'greater than or is';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tif (rule.operator !== 'between') return displayRule + ' ' + rule.value1;\n\n\treturn 'between ' + rule.value1 + ' and ' + (!rule.value2 ? '' : rule.value2);\n};\n\nconst colorRulePillar = (rule: ColorRule, index: number) => {\n\tconst contextMenuActions = [\n\t\t{\n\t\t\tid: 'editColorRule',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ticon: 'sliders-outline',\n\t\t\t\t\tid: COLOR_RULE_EDIT,\n\t\t\t\t\tlabel: t('Edit'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: 'sliders-outline',\n\t\t\t\t\tid: COLOR_RULE_DELETE,\n\t\t\t\t\tlabel: t('Delete'),\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t];\n\n\treturn (\n\t\t<sn-par-pillar\n\t\t\tid={`color-rule-pillar-${index}`}\n\t\t\tappend-to-payload={{ colorRuleIndex: index }}\n\t\t\tclickable\n\t\t\tcontext-menu-actions={contextMenuActions}>\n\t\t\t{colorRuleLabel(rule)}\n\t\t</sn-par-pillar>\n\t);\n};\n\nconst renderColorRules = (metric: Metric) => {\n\tconst { colorRules } = metric;\n\n\tif (!colorRules) return null;\n\n\tconst pillars = colorRules.map((rule, index) => {\n\t\treturn colorRulePillar(rule, index);\n\t});\n\n\treturn pillars;\n};\n\nconst colorRulePopover = (state: State) => {\n\tconst { popoverOpened, popoverTarget } = state;\n\n\treturn (\n\t\t<now-popover\n\t\t\tappend-to-payload={{ type: RULE_POPOVER }}\n\t\t\topened={popoverOpened}\n\t\t\tpositions={nowPopoverAllowedPositions}\n\t\t\tpositionTarget={popoverTarget}\n\t\t\tmanage-opened>\n\t\t\t<viz-config-color-rule-popover slot=\"content\" sharedState={state} />\n\t\t</now-popover>\n\t);\n};\n\nconst addColorRuleButton = () => {\n\treturn (\n\t\t<now-button\n\t\t\tid=\"btn-add-color-rule\"\n\t\t\tappend-to-payload={{\n\t\t\t\tid: BTN_ADD_COLOR_RULE,\n\t\t\t}}\n\t\t\ticon=\"plus-fill\"\n\t\t\tlabel={t('Add rule')}\n\t\t\tsize=\"sm\"\n\t\t\tvariant=\"secondary\"\n\t\t/>\n\t);\n};\n\nexport const colorRuleViewContent = (state: State) => {\n\tconst {\n\t\tproperties: { metric },\n\t} = state;\n\n\tif (!metric.colorRules || metric.colorRules.length === 0)\n\t\treturn (\n\t\t\t<div className=\"viz-config-color-rule-empty-state\">\n\t\t\t\t<div className=\"viz-config-color-rule-text-title\">\n\t\t\t\t\t{t('Define a dynamic color')}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"viz-config-color-rule-text\">\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'You can define specific colors based on rules like \"Blue if metric is higher that 100\"'\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{addColorRuleButton()}\n\t\t\t\t{colorRulePopover(state)}\n\t\t\t</div>\n\t\t);\n\n\treturn (\n\t\t<div className=\"viz-config-color-rule\">\n\t\t\t{renderColorRules(state.properties.metric)}\n\t\t\t{addColorRuleButton()}\n\t\t\t{colorRulePopover(state)}\n\t\t</div>\n\t);\n};\n\nexport const colorRuleView = (state: State) => {\n\treturn (\n\t\t<div>\n\t\t\t<now-label-value-inline\n\t\t\t\tclassName=\"section-heading\"\n\t\t\t\tlabel={t('Color rules')}\n\t\t\t/>\n\t\t\t<div className=\"viz-config-color-rule-container\">\n\t\t\t\t{colorRuleViewContent(state)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_input;","// @flow\n// @jsx snabbdom.createElement\nimport '@servicenow/now-heading';\n\nimport { type State } from './state';\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom, { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line no-unused-vars\nimport { t } from 'sn-translate';\n\nimport styles from './styles.scss';\n\nimport {\n\tBTN_POPOVER_CLOSE,\n\tBTN_POPOVER_APPLY,\n\tSET_OPERATOR,\n\tFIELD_OPERATOR,\n\tOPERATOR_CONFIG,\n\tFIELD_VALUE1,\n\tFIELD_VALUE2,\n\tFIELD_COLOR,\n\tFIELD_ORDER,\n\tFIELD_OPERATOR_LESS_THAN,\n\tFIELD_OPERATOR_BETWEEN,\n} from './constants';\n\ntype SharedState = {\n\tproperties: {\n\t\tsharedState: State,\n\t},\n};\n\ncreateCustomElement('viz-config-color-rule-popover', {\n\trenderer: { type: snabbdom },\n\tview: (state: SharedState) => {\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\tsharedState: {\n\t\t\t\t\tdataToApply,\n\t\t\t\t\tproperties: { singleColors },\n\t\t\t\t\tinvalidInput,\n\t\t\t\t},\n\t\t\t},\n\t\t} = state;\n\n\t\tif (!dataToApply) return null;\n\n\t\tif (!dataToApply.operator) dataToApply.operator = '<';\n\n\t\tif (dataToApply.order === undefined) dataToApply.order = 100;\n\n\t\tif (!dataToApply.color && singleColors) {\n\t\t\tconst firstColor = singleColors.find(color => !color.disabled);\n\n\t\t\tif (firstColor) dataToApply.color = firstColor.id;\n\t\t}\n\n\t\tconst { operator, value1, value2, color, order } = dataToApply;\n\n\t\tconst labelValue1 =\n\t\t\toperator === FIELD_OPERATOR_BETWEEN ? 'Value1' : 'Value';\n\n\t\treturn (\n\t\t\t<div className=\"viz-config-color-rule-popover\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={t('Color rule')}\n\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\tvariant=\"title-secondary\"\n\t\t\t\t/>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tbare\n\t\t\t\t\ticon=\"close-fill\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tid: BTN_POPOVER_CLOSE,\n\t\t\t\t\t}}\n\t\t\t\t\tconfig-aria={{ 'aria-label': t('Close') }}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"section-prop-size\">\n\t\t\t\t\t<now-label-value-inline\n\t\t\t\t\t\tclassName=\"section-heading\"\n\t\t\t\t\t\tlabel={t('Operator')}\n\t\t\t\t\t/>\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tpayloadActionType: SET_OPERATOR,\n\t\t\t\t\t\t\tfield: FIELD_OPERATOR,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={OPERATOR_CONFIG}\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tselected-items={[operator ? operator : FIELD_OPERATOR_LESS_THAN]}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t'aria-label': t('Operator'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"section-prop-size section-flex-inputs\">\n\t\t\t\t\t<now-input\n\t\t\t\t\t\tid=\"rule-value1\"\n\t\t\t\t\t\tlabel={t(labelValue1)}\n\t\t\t\t\t\tname={FIELD_VALUE1}\n\t\t\t\t\t\tvalue={value1}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tinvalid={invalidInput.value1}\n\t\t\t\t\t\tmanageValue={true}\n\t\t\t\t\t\tplaceholder={0}\n\t\t\t\t\t/>\n\t\t\t\t\t{operator === FIELD_OPERATOR_BETWEEN ? (\n\t\t\t\t\t\t<now-input\n\t\t\t\t\t\t\tid=\"rule-value2\"\n\t\t\t\t\t\t\tlabel={t('Value2')}\n\t\t\t\t\t\t\tname={FIELD_VALUE2}\n\t\t\t\t\t\t\tvalue={value2}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmanageValue={true}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\tinvalid={invalidInput.value2}\n\t\t\t\t\t\t\tmessages={\n\t\t\t\t\t\t\t\tvalue1 !== undefined && value2 !== undefined && value1 > value2\n\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstatus: 'critical',\n\t\t\t\t\t\t\t\t\t\t\t\tcontent: t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'value2 must be greater than or equal to value1'\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"section-prop-size\">\n\t\t\t\t\t<now-select\n\t\t\t\t\t\tid=\"color-select\"\n\t\t\t\t\t\tlabel={t('Color')}\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tfield: FIELD_COLOR,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={singleColors}\n\t\t\t\t\t\tplaceholder={t('Select a color')}\n\t\t\t\t\t\tselected-item={color}\n\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<now-input\n\t\t\t\t\tid=\"rule-order\"\n\t\t\t\t\tlabel={t('Order')}\n\t\t\t\t\tname={FIELD_ORDER}\n\t\t\t\t\tvalue={order}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder={0}\n\t\t\t\t\trequired={true}\n\t\t\t\t\tinvalid={invalidInput.order}\n\t\t\t\t\tmanageValue={true}\n\t\t\t\t\tmanageInvalid={true}\n\t\t\t\t/>\n\n\t\t\t\t<now-button\n\t\t\t\t\tid=\"rule-apply-btn\"\n\t\t\t\t\tlabel={t('Apply')}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tid: BTN_POPOVER_APPLY,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\tproperties: {\n\t\tsharedState: {\n\t\t\tdefault: {},\n\t\t},\n\t},\n\tstyles,\n});\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}.viz-config-color-rule-title{margin-bottom:.25rem;font-size:.75rem;color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}.viz-config-color-rule-container{background-color:RGB(var(--now-color--neutral-2,228,230,231));padding:.5rem .4375rem;margin:0 -.4rem 1rem;border-radius:.25rem;box-shadow:inset 0 1px 1px 1px RGB(var(--now-color--neutral-4,191,197,198))}.viz-config-color-rule-empty-state .viz-config-color-rule-text-title{font-weight:700}.viz-config-color-rule-empty-state .viz-config-color-rule-text,.viz-config-color-rule-empty-state .viz-config-color-rule-text-title{display:flex;flex-direction:column;align-items:center;text-align:center;font-size:.75rem;margin:auto auto 1.5rem;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.viz-config-color-rule-empty-state now-button{width:100%;margin-bottom:.25rem}.viz-config-color-rule sn-par-pillar{display:block;word-break:break-word}.viz-config-color-rule sn-par-pillar:not(:first-child){margin-top:.25rem}.viz-config-color-rule sn-par-pillar+now-button{margin-top:.5rem}.viz-config-color-rule now-button{width:100%;margin-bottom:.25rem}.viz-config-color-rule-popover{min-width:360px;min-height:300px;position:relative;padding:.75rem}.viz-config-color-rule-popover now-button-iconic{position:absolute;right:.25rem;top:.25rem}.viz-config-color-rule-popover now-button{width:100%;display:block}.viz-config-color-rule-popover now-label-value-inline{margin-top:1rem;display:block}.section-prop-size{margin-top:1rem;margin-bottom:1rem}.section-prop-size now-dropdown{margin-top:.25rem}.section-prop-size now-select{display:block}.section-prop-size.section-flex-inputs{display:flex}.section-prop-size.section-flex-inputs now-input{flex:0 1 auto;margin-inline-end:.5rem}.section-prop-size.section-flex-inputs now-input:last-child{margin-inline-end:0}.viz-config-popover-content{padding:.3125rem;width:12.5rem;font-size:.75rem}\", \"\"]);\n\n// exports\n","//@flow\n\nimport { actionTypes, type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\nimport { type ColorRule } from '../common/types/color-rules';\nimport {\n\tADD_COLOR_RULE,\n\tSET_OPERATOR,\n\tBTN_ADD_COLOR_RULE,\n\tBTN_POPOVER_APPLY,\n\tBTN_POPOVER_CLOSE,\n\tCOLOR_RULE_EDIT,\n\tCOLOR_RULE_DELETE,\n\tDELETE_COLOR_RULE,\n\tEDIT_COLOR_RULE,\n\tFIELD_OPERATOR_BETWEEN,\n\tFIELD_VALUE2,\n\tRULE_POPOVER,\n} from './constants';\n\nimport {\n\tSN_PAR_PILLAR_CLICKED,\n\tSN_PAR_PILLAR_ACTION_CLICKED,\n} from '@now-par-components/sn-par-pillar';\n\nconst isValue1GreaterThanValue2 = ({\n\toperator,\n\tvalue1,\n\tvalue2,\n}: $Shape<ColorRule>) => {\n\treturn (\n\t\toperator === FIELD_OPERATOR_BETWEEN &&\n\t\tvalue1 !== undefined &&\n\t\tvalue2 !== undefined &&\n\t\tvalue1 > value2\n\t);\n};\n\nconst handleApply = ({\n\tstate,\n\tupdateState,\n\tdispatch,\n}: Coeffects<State, any>) => {\n\tconst { dataToApply, colorRuleIndex } = state;\n\n\tconst { order, value1, value2, operator } = dataToApply;\n\n\tconst newInvalidInput = {\n\t\torder: order === undefined,\n\t\tvalue1: value1 === undefined,\n\t\tvalue2:\n\t\t\toperator === FIELD_OPERATOR_BETWEEN &&\n\t\t\t(value2 === undefined || isValue1GreaterThanValue2(dataToApply)),\n\t};\n\n\tif (\n\t\tnewInvalidInput.order ||\n\t\tnewInvalidInput.value1 ||\n\t\tnewInvalidInput.value2\n\t) {\n\t\tupdateState({\n\t\t\tinvalidInput: newInvalidInput,\n\t\t});\n\t\treturn;\n\t}\n\n\tif (colorRuleIndex === undefined)\n\t\tdispatch(ADD_COLOR_RULE, {\n\t\t\tcolorRule: dataToApply,\n\t\t\tmetricIndex: state.properties.metricIndex,\n\t\t});\n\telse\n\t\tdispatch(EDIT_COLOR_RULE, {\n\t\t\tcolorRule: dataToApply,\n\t\t\tmetricIndex: state.properties.metricIndex,\n\t\t\tcolorRuleIndex: colorRuleIndex,\n\t\t});\n\n\tupdateState(getDefaultClosedPopoverState(state));\n};\n\nconst deleteColorRule = ({\n\tstate,\n\tupdateState,\n\tdispatch,\n\taction,\n}: Coeffects<State, any>) => {\n\tconst colorRuleIndex = action.payload.colorRuleIndex;\n\n\tdispatch(DELETE_COLOR_RULE, {\n\t\tcolorRuleIndex,\n\t\tmetricIndex: state.properties.metricIndex,\n\t});\n\n\tupdateState(getDefaultClosedPopoverState(state));\n};\n\nconst getDefaultClosedPopoverState = (state: State) => {\n\treturn {\n\t\t...state,\n\t\tpopoverOpened: false,\n\t\tpopoverClosedAt: new Date().getTime(),\n\t\tcolorRuleIndex: undefined,\n\t\tdataToApply: {},\n\t\tinvalidInput: {\n\t\t\tvalue1: false,\n\t\t\tvalue2: false,\n\t\t\torder: false,\n\t\t},\n\t};\n};\n\nconst toggleColorRulePopover = ({\n\tstate,\n\tupdateState,\n\taction,\n}: Coeffects<State, any>) => {\n\tconst { colorRuleIndex } = action.payload;\n\tconst {\n\t\tproperties: { metric },\n\t\tcomponentHost,\n\t\tpopoverOpened,\n\t} = state;\n\tconst selectorPopoverTarget =\n\t\tcolorRuleIndex === undefined\n\t\t\t? '#btn-add-color-rule'\n\t\t\t: `#color-rule-pillar-${colorRuleIndex}`;\n\n\tlet dataToApply;\n\n\tif (\n\t\tcolorRuleIndex === undefined ||\n\t\t!metric.colorRules ||\n\t\tmetric.colorRules.length <= colorRuleIndex\n\t)\n\t\tdataToApply = {};\n\telse dataToApply = metric.colorRules[colorRuleIndex];\n\n\tupdateState({\n\t\tdataToApply,\n\t\tcolorRuleIndex,\n\t\tpopoverTarget:\n\t\t\tcomponentHost &&\n\t\t\tcomponentHost.shadowRoot &&\n\t\t\tcomponentHost.shadowRoot.querySelector(selectorPopoverTarget),\n\t\tpopoverOpened: !popoverOpened,\n\t});\n};\n\nconst handleButtonClicked = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.id) {\n\t\tcase BTN_POPOVER_APPLY:\n\t\t\thandleApply(coeffects);\n\t\t\tbreak;\n\n\t\tcase BTN_ADD_COLOR_RULE:\n\t\t\ttoggleColorRulePopover(coeffects);\n\t\t\tbreak;\n\t}\n};\n\nconst handleButtonIconicClicked = (coeffects: Coeffects<State, any>) => {\n\tconst { updateState, state } = coeffects;\n\n\tswitch (coeffects.action.payload.id) {\n\t\tcase BTN_POPOVER_CLOSE:\n\t\t\tupdateState(getDefaultClosedPopoverState(state));\n\t\t\tbreak;\n\t}\n};\n\nconst handleInputValueSet = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tif (!action.payload.name) return;\n\n\tconst { dataToApply, invalidInput } = state;\n\n\taction.stopPropagation();\n\n\tconst { name, value } = action.payload;\n\n\tif (!name || value === undefined) return;\n\n\tconst newDataToApply = {\n\t\t...dataToApply,\n\t\t[name]: Number(value),\n\t};\n\n\tupdateState({\n\t\tdataToApply: newDataToApply,\n\t\tinvalidInput: {\n\t\t\t...invalidInput,\n\t\t\t[name]:\n\t\t\t\tname === FIELD_VALUE2 && isValue1GreaterThanValue2(newDataToApply),\n\t\t},\n\t});\n};\n\nconst handleInvalidInputValueSet = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tif (!action.payload.name) return;\n\n\tconst { dataToApply, invalidInput } = state;\n\n\taction.stopPropagation();\n\n\tconst { name, value, fieldValue } = action.payload;\n\n\tif (!name || !value || fieldValue === undefined) return;\n\n\tupdateState({\n\t\tdataToApply: {\n\t\t\t...dataToApply,\n\t\t\t[name]: undefined,\n\t\t},\n\t\tinvalidInput: {\n\t\t\t...invalidInput,\n\t\t\t[name]: true,\n\t\t},\n\t});\n};\n\nconst handleSetOperator = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst { dataToApply } = state;\n\tconst field = action.payload.field;\n\n\tif (!field) return;\n\n\tupdateState({\n\t\tdataToApply: {\n\t\t\t...dataToApply,\n\t\t\t[field]: action.payload.value[0],\n\t\t},\n\t});\n};\n\nconst handleNowDropdownItemSelected = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.payloadActionType) {\n\t\tcase SET_OPERATOR:\n\t\t\thandleSetOperator(coeffects);\n\t\t\tbreak;\n\t}\n};\n\nconst handleDropdownSelection = ({\n\taction,\n\tstate,\n\tupdateState,\n}: Coeffects<State, any>) => {\n\tconst { dataToApply } = state;\n\n\taction.stopPropagation();\n\n\tconst field = action.payload.field;\n\n\tif (!field) return;\n\n\tupdateState({\n\t\tdataToApply: {\n\t\t\t...dataToApply,\n\t\t\t[field]: action.payload.value,\n\t\t},\n\t});\n};\n\nconst handlePillarActionClicked = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.id) {\n\t\tcase COLOR_RULE_EDIT:\n\t\t\ttoggleColorRulePopover(coeffects);\n\t\t\tbreak;\n\n\t\tcase COLOR_RULE_DELETE:\n\t\t\tdeleteColorRule(coeffects);\n\t\t\tbreak;\n\t}\n};\n\nconst handlePopoverOpenedSet = ({\n\tupdateState,\n\taction,\n}: Coeffects<State, any>) => {\n\tif (action.payload.type === RULE_POPOVER && !action.payload.value) {\n\t\tupdateState({\n\t\t\tpopoverOpened: false,\n\t\t\tdataToApply: {},\n\t\t});\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[actionTypes.COMPONENT_BOOTSTRAPPED]: ({\n\t\t\taction,\n\t\t\tupdateState,\n\t\t}: Coeffects<State, any>) => {\n\t\t\tupdateState({ componentHost: action.payload.host });\n\t\t},\n\t\t'NOW_POPOVER#OPENED_SET': handlePopoverOpenedSet,\n\t\t'NOW_BUTTON#CLICKED': handleButtonClicked,\n\t\t'NOW_BUTTON_ICONIC#CLICKED': handleButtonIconicClicked,\n\t\t'NOW_INPUT#VALUE_SET': handleInputValueSet,\n\t\t'NOW_INPUT#INVALID_SET': handleInvalidInputValueSet,\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': handleNowDropdownItemSelected,\n\t\t'NOW_SELECT#SELECTED_ITEM_SET': handleDropdownSelection,\n\t\t[SN_PAR_PILLAR_ACTION_CLICKED]: handlePillarActionClicked,\n\t\t[SN_PAR_PILLAR_CLICKED]: toggleColorRulePopover,\n\t},\n};\n","//@flow\nimport { type Coeffects } from '@servicenow/ui-core';\nimport { type State } from './state';\n\nimport {\n\tCOLOR_TYPE_REQUESTED,\n\tLOAD_COLOR_REQUESTED,\n\tSET_COLOR_REQUESTED,\n} from './constants';\n\nconst handleSelectedItemSet = (coeffects: Coeffects<State, any>) => {\n\tswitch (coeffects.action.payload.payloadActionType) {\n\t\tcase COLOR_TYPE_REQUESTED: {\n\t\t\tcoeffects.action.stopPropagation();\n\t\t\tcoeffects.dispatch(SET_COLOR_REQUESTED, {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: coeffects.action.payload.value[0],\n\t\t\t\t},\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\n\t\tcase LOAD_COLOR_REQUESTED: {\n\t\t\tcoeffects.action.stopPropagation();\n\t\t\tcoeffects.dispatch(SET_COLOR_REQUESTED, {\n\t\t\t\tmetricIndex: coeffects.action.payload.metricIndex,\n\t\t\t\tcolor: {\n\t\t\t\t\tsys_id: coeffects.action.payload.item.id,\n\t\t\t\t\ttype: coeffects.action.payload.type,\n\t\t\t\t},\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t'NOW_SELECT#SELECTED_ITEM_SET': handleSelectedItemSet,\n\t\t'NOW_DROPDOWN#SELECTED_ITEMS_SET': handleSelectedItemSet,\n\t},\n};\n","module.exports = __TECTONIC__$servicenow_now_tabs;","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-accordion-content{padding:.75rem;margin-inline-start:0}.now-accordion-no-border-content{margin-inline-start:0}now-label-value-inline{display:block}.main-loading-container{padding:2.5rem}.main-section{padding-bottom:.75rem}.chart-type-view{margin-top:.5rem;margin-bottom:.5rem}.chart-type-view label{font-size:.75rem;margin-right:.5rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.chart-type-view now-dropdown{width:100%}.viz-config-white-bg{background-color:RGB(var(--now-color--neutral-0,255,255,255))}.viz-config-title-label{padding:.5rem}.legend-position{margin-top:.75rem}.legend-position now-dropdown{margin-top:.5rem}.chart-variation label,.sort-by-container label{font-size:.75rem;margin-right:.5rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.chart-variation now-dropdown,.sort-by-container now-dropdown{margin-top:.5rem}.chart-variation{margin-bottom:1.0625rem}.sort-by-container{margin-bottom:1.3125rem;display:flex;flex-direction:row}.sort-by-container .sort-by-column{display:flex;flex-direction:column}.sort-by-container .sort-by-column now-dropdown{margin-top:.5rem;width:10.6875rem}.sort-by-container .order-by-column{display:flex;flex-direction:column;padding-inline-start:1.5rem}.sort-by-container .order-by-column .order-by-buttons{margin-top:.5rem}.score-size-container label{font-size:.75rem;margin-right:.5rem;color:RGB(var(--now-color--neutral-12,66,80,81));display:block;margin-bottom:.5rem}.tabs-container,now-accordion{margin:0 -.75rem}.stacked-label-value-container now-dropdown{width:8.125rem}.data-label-position-container now-dropdown{margin-top:.5rem;width:7.5rem}.data-label-position-container,.stacked-label-value-container{margin-bottom:1rem;display:flex;flex-direction:column}.show-data-label-as-container now-dropdown,.stacked-label-value-container now-dropdown{margin-top:.5rem}.section-label-dropdown{margin-bottom:.75rem}.section-label-dropdown now-label-value-inline{display:block;margin-bottom:.5rem}viz-config-empty-state{display:block;padding:2.5rem;margin-top:2rem}.viz-config-popover-content{padding:.3125rem;width:12.5rem;font-size:.75rem}.viz-config-popover-content .popover-container{padding:.3125rem}.viz-config-popover-content .popover-container .popover-title{display:flex;align-items:center;padding-bottom:.1875rem}.viz-config-popover-content .popover-container .popover-title .popover-title-label{padding-left:.375rem}.viz-config-popover-content .popover-container .popover-title.popover-conditions,.viz-config-popover-content .popover-container .popover-title.popover-tables{padding-top:1.25rem}.viz-config-select-range{display:flex;align-items:flex-end}.viz-config-select-range devx-input,.viz-config-select-range devx-select,.viz-config-select-range now-dropdown{flex:1 1 50%;margin-right:.75rem}.viz-config-select-range devx-input:last-child,.viz-config-select-range devx-select:last-child,.viz-config-select-range now-dropdown:last-child{margin-right:0}.viz-config-select-range now-dropdown{margin-bottom:1.5rem}.viz-config-section-divider{margin:1.5rem -.75rem .75rem;padding:0 .75rem .5rem;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214));text-transform:uppercase;color:#637274;font-size:.75rem;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif;display:flex;align-items:center}.viz-config-section-divider now-icon{margin-left:.5rem}.axis-range span.range-input,.viz-config-input-container{width:100%;display:inline-block;margin-bottom:1rem}.axis-range :host(:not([dir=rtl])) span.range-input now-label-value-inline,.axis-range :root:not([dir=rtl]) span.range-input now-label-value-inline,:host(:not([dir=rtl])) .axis-range span.range-input now-label-value-inline,:host(:not([dir=rtl])) .viz-config-input-container now-label-value-inline,:root:not([dir=rtl]) .axis-range span.range-input now-label-value-inline,:root:not([dir=rtl]) .viz-config-input-container now-label-value-inline{padding-left:.25rem}.axis-range :host([dir=rtl]) span.range-input now-label-value-inline,.axis-range :root[dir=rtl] span.range-input now-label-value-inline,:host([dir=rtl]) .axis-range span.range-input now-label-value-inline,:host([dir=rtl]) .viz-config-input-container now-label-value-inline,:root[dir=rtl] .axis-range span.range-input now-label-value-inline,:root[dir=rtl] .viz-config-input-container now-label-value-inline{padding-right:.25rem}.axis-range span.range-input .range-input-text,.viz-config-input-text{width:100%;height:2rem;border:none;border-bottom:1px solid rgb(var(--now-color--neutral-5,172,180,181));font-size:1rem;outline:none;background-color:transparent}.axis-range span.range-input :host(:not([dir=rtl])) .range-input-text,.axis-range span.range-input :root:not([dir=rtl]) .range-input-text,:host(:not([dir=rtl])) .axis-range span.range-input .range-input-text,:host(:not([dir=rtl])) .viz-config-input-text,:root:not([dir=rtl]) .axis-range span.range-input .range-input-text,:root:not([dir=rtl]) .viz-config-input-text{padding-left:.25rem}.axis-range span.range-input :host([dir=rtl]) .range-input-text,.axis-range span.range-input :root[dir=rtl] .range-input-text,:host([dir=rtl]) .axis-range span.range-input .range-input-text,:host([dir=rtl]) .viz-config-input-text,:root[dir=rtl] .axis-range span.range-input .range-input-text,:root[dir=rtl] .viz-config-input-text{padding-right:.25rem}.axis-range span.range-input .range-input-text:required,.viz-config-input-text:required{box-shadow:none}.axis-range span.range-input .range-input-text:focus,.viz-config-input-text:focus{border-width:2px;border-color:RGB(var(--now-color--primary-1,30,133,109));padding-top:1px;padding-bottom:0;background-color:RGB(var(--now-color--primary-0,221,237,233))}.axis-range span.range-input .range-input-text:-moz-read-only,.viz-config-input-text:-moz-read-only{border:none;pointer-events:none}.axis-range span.range-input .range-input-text:read-only,.viz-config-input-text:read-only{border:none;pointer-events:none}.axis-range span.range-input .range-input-text:disabled,.viz-config-input-text:disabled{border-bottom:1px solid rgba(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.3);pointer-events:auto;cursor:not-allowed;color:RGBA(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.3)}.axis-range span.range-input .range-input-text::placeholder,.viz-config-input-text::placeholder{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif;color:RGBA(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)),.45)}.axis-range span.range-input .range-input-text:hover:enabled,.viz-config-input-text:hover:enabled{background-color:RGB(var(--now-color--neutral-2,228,230,231))}.axis-range span.range-input .range-input-text ::-ms-clear,.viz-config-input-text ::-ms-clear{display:none}.axis-range span.range-input .-sm.range-input-text,.viz-config-input-text.-sm{width:4.5rem}.axis-range span.range-input .-md.range-input-text,.viz-config-input-text.-md{width:18.75rem}.axis-range span.range-input .-lg.range-input-text,.viz-config-input-text.-lg{width:36.25rem}.axis-range span.range-input .-fullwidth.range-input-text,.viz-config-input-text.-fullwidth{width:100%}.axis-range span.range-input{width:40%}.axis-range span.text-separator{display:inline-block;text-align:center;width:20%}.y-axis-position-container{margin-bottom:1rem;display:flex;flex-direction:column}.y-axis-position-container now-label-value-inline{display:block}.y-axis-position-container now-dropdown{width:6.25rem;margin-top:.5rem}.axis-label-container{border-bottom:1px solid rgb(var(--now-color--neutral-2,228,230,231))}.axis-label-container label{margin:.25rem 1rem;display:inline-block;color:RGB(var(--now-color--neutral-9,99,114,116));font-size:1rem;text-transform:uppercase}.axis-container{padding:.75rem}.section-prop-size{margin-top:1rem}.section-prop-size now-label-value-inline{display:block}.section-prop-size now-dropdown{margin-top:.5rem}.section-hide-header{display:flex}.section-prop-label now-input{width:100%;margin-bottom:1rem}.viz-config-auto-update{display:block;height:40px}.viz-config-auto-update__container{display:flex;justify-content:space-between;align-items:center;position:absolute;bottom:0;left:0;right:0;background-color:RGB(var(--now-color--neutral-1,246,247,247));padding:10px;box-shadow:0 -4px 5px -4px rgba(0,0,0,.3);z-index:5}\", \"\"]);\n\n// exports\n"],"sourceRoot":""}