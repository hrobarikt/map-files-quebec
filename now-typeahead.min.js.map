{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_typeahead/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__lodash_4_17_4\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_library_enhanced_element_19_8_3\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_library_enhanced_utils_19_8_3\"","webpack://__TECTONIC__$servicenow_now_typeahead/./src/_now-typeahead.scss?abe1","webpack://__TECTONIC__$servicenow_now_typeahead/./src/utils/typeahead.js","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_now_popover\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_behavior_focus_19_8_3\"","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_now_input\"","webpack://__TECTONIC__$servicenow_now_typeahead/./src/index.js","webpack://__TECTONIC__$servicenow_now_typeahead/./src/now-typeahead.js","webpack://__TECTONIC__$servicenow_now_typeahead/./src/_now-typeahead.scss","webpack://__TECTONIC__$servicenow_now_typeahead//mnt/jenkins/workspace/motive_design-system_quebec-LAU4EC4LTND4QOM764JRONU2HSYHYZ6QDWUSLZIXTBP7KKZ7BWQQ/target/checkout/node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_typeahead/./src/now-typeahead-multi.js","webpack://__TECTONIC__$servicenow_now_typeahead/./src/utils/pill-focus.js","webpack://__TECTONIC__$servicenow_now_typeahead/external \"__TECTONIC__$servicenow_now_pill\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__lodash_4_17_4","__TECTONIC__$servicenow_now_dropdown","__TECTONIC__$servicenow_ui_core","__TECTONIC__$servicenow_library_enhanced_element_19_8_3","__TECTONIC__$servicenow_library_enhanced_utils_19_8_3","result","toString","autoSelectMatch","items","selected","selectedIds","Array","isArray","map","item","id","exactMatches","flattenItems","filter","label","toLowerCase","length","includes","getItemById","find","moveActiveItem","event","updateState","optionPrefix","preventDefault","input","target","state","properties","opened","activeItemId","disabled","readonly","search","CANCEL_UPDATE","filteredItems","getSearchMatches","operation","path","nextItem","getItemForKeypress","updateActiveDescendant","togglePanel","CONSTRAIN_DEFAULTS","maxHeight","width","CANCEL_DISPATCH","shouldDispatch","shouldUpdate","getDropdownListConstrain","constrain","transform","isNumber","flatMap","children","toggleSelectedItem","selectedItems","xorBy","matchesLabel","reduce","push","sublabel","lowerValue","method","sort","a","b","handleBlur","dispatch","shouldRender","type","payload","handleFocus","__TECTONIC__$servicenow_now_popover","__TECTONIC__$servicenow_behavior_focus_19_8_3","__TECTONIC__$servicenow_now_input","createNowTypeaheadDriver","createNowTypeaheadMultiDriver","COMPONENT_DOM_TREE_READY","actionTypes","createEnhancedElement","default","schema","itemsSchema","selectedItem","manageable","dependencies","itemsListConstrain","constrainSchema","autofocus","enum","helperContent","invalid","messages","messagesSchema","optional","placeholder","required","hideRequiredIndicator","initialState","hasFocus","actionHandlers","host","shadowRoot","querySelector","focus","stopPropagation","effect","action","autoSelected","isInvalid","fieldValue","dispatches","slots","end","behaviors","behavior","focusBehavior","styles","view","componentId","listId","Fragment","renderFormFieldLabel","hide-tail","pick","manage-opened","append-to-payload","interaction-type","slot","role","aria-expanded","String","aria-haspopup","aria-owns","aria-controls","on-click","class","aria-autocomplete","aria-activedescendant","undefined","aria-describedby","getFormFieldMessageIds","className","on-keydown","handleKeydown","on-input","handleInput","handleClick","on-blur","on-focus","e","style","select","hide-checkmark","selected-items","toArray","manage-selected-items","active-item","search-term","screen-reader-id","config-aria","panel","renderFormFieldMessages","useSourceMap","list","this","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","COMPONENT_PROPERTY_CHANGED","handleKeydownPill","activePill","pills","getRootNode","querySelectorAll","focusNext","focusPrevious","jumpFocusPrevious","jumpFocusNext","focusFirstPill","focusLastPill","itemSchema","previousValue","removedPill","itemId","removedPillIndex","indexOf","disable-scroll","handleClickTrigger","aria-labelledby","index","avatarImage","avatarProps","imageSrc","tabindex","size","image-src","can-dismiss","manage-selected","renderPills","handleKeydownInput","isPillLabelFocused","isPillDismissButtonFocused","focusPillDismissButton","focusNextPill","focusPreviousPill","focusPreviousPillDismissButton","focusNextPillDismissButton","getActiveElement","classList","contains","pill","focusedPillIndex","findIndex","node","activePillIndex","__TECTONIC__$servicenow_now_pill"],"mappings":"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","file":"now-typeahead.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__lodash_4_17_4;","module.exports = __TECTONIC__$servicenow_now_dropdown;","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__$servicenow_library_enhanced_element_19_8_3;","module.exports = __TECTONIC__$servicenow_library_enhanced_utils_19_8_3;","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./_now-typeahead.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {transform, isNumber, xorBy} from 'lodash';\nimport {\n\tgetItemForKeypress,\n\tupdateActiveDescendant\n} from '@servicenow/now-dropdown';\n\n/**\n * Default values for the `constrain` property in both single and multi\n */\nexport const CONSTRAIN_DEFAULTS = {\n\tmaxHeight: 300,\n\twidth: 'target'\n};\n\n/**\n * A returnable value to cancel a Seismic dispatch. Used when we need to\n * conditionally dispatch something and that condition is not met.\n */\nexport const CANCEL_DISPATCH = {\n\tshouldDispatch: false\n};\n\n/**\n * A returnable value to cancel a Seismic updateState. Used when we need to\n * conditionally update component state and that condition is not met.\n */\nexport const CANCEL_UPDATE = {\n\tshouldUpdate: false\n};\n\n/**\n * We have to inline the height styles onto dropdown-list to correctly render\n * the scrollbar within the border of the popover. The width dimensions are set\n * through now-popover's `constrain` prop\n * @param {ItemsListConstrain} constrain - the original `constrain` property\n * provided to the typeahead\n */\nexport const getDropdownListConstrain = (constrain) => {\n\treturn transform(constrain, (result, value, key) => {\n\t\tif (key === 'height' || key === 'minHeight' || key === 'maxHeight') {\n\t\t\tresult[key] = isNumber(value) ? `${value}px` : value;\n\t\t}\n\t});\n};\n\n/**\n * Flattens out any DropdownListSections with `children` into a flat array\n * containing only the items.\n * @param {Array<DropdownListSection>} items - the items to flatten out\n */\nexport const flattenItems = (items) =>\n\titems.flatMap((item) => item.children || item);\n\n/**\n * For typeahead-multi: if the item is in the selectedItems array already\n * remove that item, otherwise add it\n * @param {Array.<DropdownListItem>} selectedItems - currently selected items\n * @param {DropdownListItem} item - item to add (if not present in\n * selectedItems) or remove (if present in selectedItems)\n */\nexport const toggleSelectedItem = (selectedItems, item) => {\n\treturn xorBy(selectedItems, [item], (item) => item.id);\n};\n\n/**\n * Internal search for typeaheads. Searches on label and sublabel.\n * @param {Array<DropdownListItem>} items - items to search through\n * @param {string} value - substring to match the items' label and sublabel against\n * @param {(\"managed\"|\"initial\"|\"contains\")} search - what type of search to\n * perform. Should match the typeaheads' `search` property.\n */\nexport const getSearchMatches = (items, value, search) => {\n\tif (!items || !items.length) {\n\t\treturn [];\n\t}\n\n\tif (!value || search === 'managed') {\n\t\treturn items;\n\t}\n\n\tconst matchesLabel = {};\n\n\treturn (\n\t\titems\n\t\t\t.reduce((result, item) => {\n\t\t\t\tconst children = getSearchMatches(item.children, value, search);\n\t\t\t\tif (children.length) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tchildren\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst label = item.label ? item.label.toLowerCase() : '';\n\t\t\t\t\tconst sublabel = item.sublabel ? item.sublabel.toLowerCase() : '';\n\t\t\t\t\tconst lowerValue = value.toLowerCase();\n\n\t\t\t\t\tconst method = search === 'contains' ? 'includes' : 'startsWith';\n\n\t\t\t\t\tif (label[method](lowerValue)) {\n\t\t\t\t\t\tmatchesLabel[item.id] = true;\n\t\t\t\t\t\tresult.push(item);\n\t\t\t\t\t} else if (sublabel[method](lowerValue)) {\n\t\t\t\t\t\tmatchesLabel[item.id] = false;\n\t\t\t\t\t\tresult.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t// sort the items so that matches on primary label come\n\t\t\t// before matches on sublabel\n\t\t\t.sort((a, b) => matchesLabel[b.id] - matchesLabel[a.id])\n\t);\n};\n\n/**\n * Returns an item whose label matches the value (case-insensitively), - the items to flatten out\n * but only if that item is not already selected.\n *\n * @param {(Array.<DropdownListItem> | Array.<DropdownListSection>)} items\n * @param {string|number|Array<DropdownListItem>} selected - already\n * selected items.  for typeahead single, this is just an item ID. For\n * multi, this is an array of item objects.\n * @param {string} value - the value to compare against item labels\n */\nexport function autoSelectMatch(items, selected, value) {\n\tif (!value) return null;\n\n\tconst selectedIds = Array.isArray(selected)\n\t\t? selected.map((item) => item.id)\n\t\t: [selected];\n\tconst exactMatches = flattenItems(items).filter(\n\t\t(item) => item.label && item.label.toLowerCase() === value.toLowerCase()\n\t);\n\n\tif (exactMatches.length === 1 && !selectedIds.includes(exactMatches[0].id)) {\n\t\treturn exactMatches[0];\n\t}\n\n\treturn null;\n}\n\n/**\n * Finds a item in the `items` array that has the matching id\n * @param {Array<DropdownListSection>} items - the items to search through\n * @param {string|number} id - the item ID to search for\n */\nexport function getItemById(items, id) {\n\tconst flattenedItems = flattenItems(items);\n\treturn flattenedItems.find((item) => item.id === id);\n}\n\n/**\n * Shared handler for Arrow + Home/End keys, to move the active item within\n * the dropdown list:\n * - ArrowDown: make the next item the active item, or opens the panel if not yet opened\n * - ArrowUp: make the previous item the active item\n * - Home: make the first item active\n * - End: make the last item active\n * @param {Event} event - the event for the keypress\n * @param {Function} updateState - Seismic helper function for the component\n * @param {string} optionPrefix - ID prefix used for each item in the dropdown list\n */\nexport function moveActiveItem(event, updateState, optionPrefix) {\n\tevent.preventDefault();\n\n\tconst {key} = event;\n\tconst input = event.target;\n\n\tupdateState(({state, properties}) => {\n\t\tconst {opened, activeItemId} = state;\n\t\tconst {disabled, readonly, items, search} = properties;\n\n\t\t// single uses value from props. multi uses value from input\n\t\tconst value = properties.value || input.value;\n\n\t\t// ArrowDown is the only one that does something when the panel is closed.\n\t\tif (key !== 'ArrowDown' && !opened) {\n\t\t\treturn CANCEL_UPDATE;\n\t\t}\n\n\t\tconst filteredItems = getSearchMatches(items, value, search);\n\n\t\tif (key === 'ArrowUp') {\n\t\t\t// up arrow when nothing is focused closes the panel\n\t\t\tif (!activeItemId) {\n\t\t\t\treturn {\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: 'opened',\n\t\t\t\t\tvalue: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// up arrow when the first item is focused removes focus\n\t\t\tif (activeItemId === flattenItems(filteredItems)[0].id) {\n\t\t\t\treturn {\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: 'activeItemId',\n\t\t\t\t\tvalue: null\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// down arrow opens the panel if closed\n\t\tif (key === 'ArrowDown') {\n\t\t\tif (!opened && !disabled && !readonly) {\n\t\t\t\treturn {\n\t\t\t\t\toperation: 'set',\n\t\t\t\t\tpath: 'opened',\n\t\t\t\t\tvalue: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// for all other cases, move focus to the next item\n\t\tconst nextItem = getItemForKeypress(filteredItems, activeItemId, key);\n\t\tif (!nextItem) {\n\t\t\treturn CANCEL_UPDATE;\n\t\t}\n\n\t\t// TODO: Hacks/workaround for Safari + VoiceOver. See comment in function\n\t\t// definition\n\t\tupdateActiveDescendant(input, `${optionPrefix}-${nextItem.id}`);\n\n\t\treturn {\n\t\t\toperation: 'set',\n\t\t\tpath: 'activeItemId',\n\t\t\tvalue: nextItem.id\n\t\t};\n\t});\n}\n\n/**\n * Toggles the `opened` state for the component, which corresponds to whether\n * or not the panel is rendered\n * @param {Function} updateState - Seismic helper for the component\n */\nexport function togglePanel(updateState) {\n\tupdateState(({state, properties}) => {\n\t\tconst {opened} = state;\n\t\tconst {disabled, readonly} = properties;\n\n\t\tif (readonly || disabled) {\n\t\t\treturn CANCEL_UPDATE;\n\t\t}\n\n\t\treturn {\n\t\t\toperation: 'assign',\n\t\t\tvalue: {\n\t\t\t\topened: !opened,\n\t\t\t\tactiveItemId: null\n\t\t\t}\n\t\t};\n\t});\n}\n\n/**\n * Shared blur event handler for single and multi. Updates the `hasFocus` state\n * and will perform any validation if the panel is already closed.\n * @param {Function} dispatch - Seismic helper for the component\n * @param {Function} updateState - Seismic helper for the component\n */\nexport const handleBlur = (dispatch, updateState) => {\n\tupdateState({\n\t\tshouldRender: false,\n\t\toperation: 'set',\n\t\tpath: 'hasFocus',\n\t\tvalue: false\n\t});\n\n\t// when the panel is closed, we can do immediate validation. This is used\n\t// when the user tabs through the field without activating the panel.\n\t//\n\t// when the panel is opened, don't do anything on input blur. Instead, wait\n\t// until we get a popover close event (see NOW_POPOVER#OPENED_SET\n\t// actionHandler)\n\tdispatch(({state}) => {\n\t\tconst {opened} = state;\n\n\t\tif (opened) {\n\t\t\treturn CANCEL_DISPATCH;\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'PRIVATE#BLUR',\n\t\t\tpayload: {}\n\t\t};\n\t});\n};\n\n/**\n * Shared focus event handler for single and multi. Updates the `hasFocus` state\n * @param {Function} updateState - Seismic helper for the component\n */\nexport const handleFocus = (updateState) => {\n\tupdateState(() => ({\n\t\toperation: 'set',\n\t\tpath: 'hasFocus',\n\t\tvalue: true,\n\t\tshouldRender: false\n\t}));\n};\n","module.exports = __TECTONIC__$servicenow_now_popover;","module.exports = __TECTONIC__$servicenow_behavior_focus_19_8_3;","module.exports = __TECTONIC__$servicenow_now_input;","import './now-typeahead';\nimport './now-typeahead-multi';\nexport {\n\tcreateNowTypeaheadDriver,\n\tcreateNowTypeaheadMultiDriver\n} from '../drivers';\n","import {pick} from 'lodash';\nimport {actionTypes} from '@servicenow/ui-core';\nimport {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport {toArray} from '@servicenow/library-enhanced-utils';\nimport {Fragment} from '@servicenow/ui-renderer-snabbdom';\nimport styles from './_now-typeahead.scss';\nimport {\n\tCONSTRAIN_DEFAULTS,\n\tCANCEL_DISPATCH,\n\tCANCEL_UPDATE,\n\tautoSelectMatch,\n\tmoveActiveItem,\n\tgetSearchMatches,\n\tgetItemById,\n\tgetDropdownListConstrain,\n\ttogglePanel,\n\thandleBlur,\n\thandleFocus\n} from './utils/typeahead';\nimport '@servicenow/now-dropdown';\nimport {itemsSchema, constrainSchema} from '@servicenow/now-dropdown';\nimport '@servicenow/now-popover';\nimport focusBehavior from '@servicenow/behavior-focus';\nimport {\n\trenderFormFieldLabel,\n\trenderFormFieldMessages,\n\tgetFormFieldMessageIds\n} from '@servicenow/now-input';\nimport {messagesSchema} from '@servicenow/now-input';\n\nconst {COMPONENT_DOM_TREE_READY} = actionTypes;\n\nconst handleKeydown = (event, dispatch, updateState, optionPrefix) => {\n\tconst {key} = event;\n\n\tif (\n\t\tkey === 'ArrowUp' ||\n\t\tkey === 'ArrowDown' ||\n\t\tkey === 'Home' ||\n\t\tkey === 'End'\n\t) {\n\t\tmoveActiveItem(event, updateState, optionPrefix);\n\t}\n\n\tif (key === 'Enter') {\n\t\t// Select the item\n\t\t// 1. If the panel is open and there is an activeItemId\n\t\t// 2. If the panel input exactly matches the label of only one item\n\t\tdispatch(({state, properties}) => {\n\t\t\tconst {items, selectedItem, value} = properties;\n\t\t\tconst {activeItemId} = state;\n\n\t\t\tconst nextItem = activeItemId\n\t\t\t\t? getItemById(items, activeItemId)\n\t\t\t\t: autoSelectMatch(items, selectedItem, value);\n\n\t\t\tif (nextItem) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'PRIVATE#SET_ITEM',\n\t\t\t\t\tpayload: nextItem\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn CANCEL_DISPATCH;\n\t\t});\n\n\t\ttogglePanel(updateState);\n\t}\n};\n\nconst handleInput = (event, dispatch, updateState) => {\n\tconst {value} = event.target;\n\n\t// while typing, if the input field has some text, open the panel\n\tupdateState(({state}) => {\n\t\treturn {\n\t\t\toperation: 'assign',\n\t\t\tvalue: {\n\t\t\t\t// input event will fire when clearing out the field. In that case we\n\t\t\t\t// want to maintain the current `opened` state of the panel rather than\n\t\t\t\t// forcing it open.\n\t\t\t\topened: value ? true : state.opened\n\t\t\t}\n\t\t};\n\t});\n\n\t// typing into the input always unsets the current item, user will need to\n\t// select again from the panel.\n\tdispatch('PRIVATE#SET_ITEM', {\n\t\tid: null,\n\t\tlabel: value\n\t});\n};\n\nconst handleClick = (updateState) => {\n\t// clicks open the panel unless disabled/readonly\n\tupdateState(({properties}) => {\n\t\tconst {disabled, readonly} = properties;\n\n\t\tif (disabled || readonly) {\n\t\t\treturn CANCEL_UPDATE;\n\t\t}\n\n\t\treturn {\n\t\t\toperation: 'set',\n\t\t\tpath: 'opened',\n\t\t\tvalue: true\n\t\t};\n\t});\n};\n\nconst view = (state, {dispatch, updateState}) => {\n\tconst {componentId, activeItemId, opened} = state;\n\tconst {\n\t\tautofocus,\n\t\tdisabled,\n\t\thelperContent,\n\t\thideRequiredIndicator,\n\t\tinvalid,\n\t\titemsListConstrain,\n\t\tlabel,\n\t\tmessages,\n\t\titems,\n\t\tselectedItem,\n\t\tsearch,\n\t\tname = `typeahead-${componentId}`,\n\t\toptional,\n\t\tplaceholder,\n\t\treadonly,\n\t\trequired,\n\t\tvalue\n\t} = state.properties;\n\n\tconst constrain = {...CONSTRAIN_DEFAULTS, ...itemsListConstrain};\n\tconst filteredItems = getSearchMatches(items, value, search);\n\n\tconst listId = `now-dropdown-list-${componentId}`;\n\tconst optionPrefix = `${listId}-option`;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{renderFormFieldLabel(\n\t\t\t\tcomponentId,\n\t\t\t\tinvalid,\n\t\t\t\trequired,\n\t\t\t\toptional,\n\t\t\t\tlabel,\n\t\t\t\thelperContent,\n\t\t\t\thideRequiredIndicator\n\t\t\t)}\n\t\t\t<now-popover\n\t\t\t\thide-tail\n\t\t\t\tconstrain={pick(constrain, ['width', 'minWidth', 'maxWidth'])}\n\t\t\t\tmanage-opened\n\t\t\t\topened={opened}\n\t\t\t\tappend-to-payload={{id: 'now-dropdown-list'}}\n\t\t\t\tinteraction-type=\"listbox\">\n\t\t\t\t<div\n\t\t\t\t\tslot=\"trigger\"\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\taria-expanded={String(opened)}\n\t\t\t\t\taria-haspopup=\"listbox\"\n\t\t\t\t\taria-owns={`${listId}-listbox`}\n\t\t\t\t\taria-controls={`${listId}-listbox`}\n\t\t\t\t\ton-click={(event) => {\n\t\t\t\t\t\tif (disabled || readonly) {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tclass={{\n\t\t\t\t\t\t'now-typeahead-field': true,\n\t\t\t\t\t\t'now-form-field': true,\n\t\t\t\t\t\t'is-invalid': invalid,\n\t\t\t\t\t\t'is-disabled': disabled,\n\t\t\t\t\t\t'is-readonly': readonly\n\t\t\t\t\t}}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={`form-field-${componentId}`}\n\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\tactiveItemId ? `${optionPrefix}-${activeItemId}` : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-describedby={getFormFieldMessageIds(componentId, messages)}\n\t\t\t\t\t\tclassName=\"now-typeahead-native-input\"\n\t\t\t\t\t\tautofocus={autofocus}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\treadonly={readonly}\n\t\t\t\t\t\trequired={required}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\ton-keydown={(event) =>\n\t\t\t\t\t\t\thandleKeydown(event, dispatch, updateState, optionPrefix)\n\t\t\t\t\t\t}\n\t\t\t\t\t\ton-input={(event) => handleInput(event, dispatch, updateState)}\n\t\t\t\t\t\ton-click={() => handleClick(updateState)}\n\t\t\t\t\t\ton-blur={() => handleBlur(dispatch, updateState)}\n\t\t\t\t\t\ton-focus={() => handleFocus(updateState)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"now-align\">\n\t\t\t\t\t\t<slot\n\t\t\t\t\t\t\tname=\"end\"\n\t\t\t\t\t\t\ton-click={(e) => {\n\t\t\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttogglePanel(updateState);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{opened ? (\n\t\t\t\t\t<now-dropdown-list\n\t\t\t\t\t\tstyle={getDropdownListConstrain(constrain)}\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\thide-checkmark\n\t\t\t\t\t\titems={filteredItems}\n\t\t\t\t\t\tselected-items={toArray(selectedItem)}\n\t\t\t\t\t\tmanage-selected-items\n\t\t\t\t\t\tactive-item={activeItemId === null ? undefined : activeItemId}\n\t\t\t\t\t\tsearch-term={value}\n\t\t\t\t\t\tscreen-reader-id={listId}\n\t\t\t\t\t\tconfig-aria={{panel: {'aria-label': label}}}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\tundefined\n\t\t\t\t)}\n\t\t\t</now-popover>\n\t\t\t{renderFormFieldMessages(componentId, messages)}\n\t\t</Fragment>\n\t);\n};\n\n/**\n *\n * Supplements an input field with a dropdown panel of relevant options and highlights \n * matching values as the user enters characters into the input field.  \n *\n * ```jsx\n * const items = [\n *   {\n *     id: \"ablumsondi\",\n *     label: \"Ab Blumson\",\n *     sublabel: \"ablumsondi@scribd.com\",\n *   },\n *   {\n *     id: \"amolfinofi\",\n *     label: \"Abagael Molfino\",\n *     sublabel: \"amolfinofi@reverbnation.com\",\n *   },\n *   {\n *     id: \"aolynn99\",\n *     label: \"Abbot O'Lynn\",\n *     sublabel: \"aolynn99@shop-pro.jp\",\n *   }\n * ];\n *\n * <now-typeahead label=\"User\" items={items} />\n *\n * <now-typeahead label=\"User\" items={items} invalid required messages={[\n *   {\n *    status: 'critical',\n *    icon: 'circle-close-outline',\n *    content: 'Please fill out this required field.'\n *   }\n * ]}/>\n *\n * <now-typeahead label=\"User\" items={items}>\n *   <now-button-iconic slot=\"end\" icon=\"circle-info-outline\" tooltip-content=\"Preview record\" />\n * </now-typeahead>\n * ```\n *\n * @seismicElement now-typeahead\n * @summary Form element for text input fields with a dropdown to show relevant or suggested values.\n * @uib.label Typeahead\n * @uib.icon typeahead\n * @uib.description Form element for text input fields with a dropdown to show relevant or suggested values\n * @uib.category primitives\n * @uib.associatedTypes global.core\n * @uib.properties label, placeholder, items, value, readonly, optional, required, hideRequiredIndicator, disabled, helperContent, search, invalid, autofocus, selectedItem, name, messages, itemsListConstrain\n * @uib.actions NOW_TYPEAHEAD#INVALID_SET, NOW_TYPEAHEAD#SELECTED_ITEM_SET, NOW_TYPEAHEAD#VALUE_SET\n * @uib.innerComponents now-button-iconic, now-dropdown-list, now-icon, now-popover, now-input\n */\ncreateEnhancedElement('now-typeahead', {\n\tproperties: {\n\t\t/**\n\t\t * An array of `DropdownListItem` or `DropdownListSection` objects that are used as\n\t\t * possible items that the user can select from.\n\t\t * @type {(Array.<DropdownListItem> | Array.<DropdownListSection>)}\n\t\t * @uib.description Array of possible items that the user can select from\n\t\t * @uib.defaultValue [{\"id\": \"usr1\",\"label\": \"User 1\",\"sublabel\": \"user1@servicenow.com\",\"avatarProps\": {\"userName\": \"User 1\",\"imageSrc\": \"http://i.pravatar.cc/24?u=33\",\"presence\": \"away\"}},{\"id\": \"usr2\",\"label\": \"User 2\",\"sublabel\": \"user2@servicenow.com\",\"avatarProps\": {\"userName\": \"User 2\",\"imageSrc\": \"http://i.pravatar.cc/24?u=34\",\"presence\": \"busy\"},\"disabled\": true},{\"id\": \"usr3\",\"label\": \"User 3\",\"sublabel\": \"user3@servicenow.com\",\"avatarProps\": {\"userName\": \"User 3\",\"imageSrc\": \"http://i.pravatar.cc/24?u=35\",\"presence\": \"offline\"}}]\n\t\t */\n\t\titems: {\n\t\t\tdefault: [],\n\t\t\tschema: itemsSchema\n\t\t},\n\t\t/**\n\t\t * The ID of the currently selected item. Use `manage-selected-item` to\n\t\t * override the default behavior and handle the\n\t\t * `NOW_TYPEAHEAD#SELECTED_ITEM_SET` action manually. Note: This does\n\t\t * not prevent the value from showing in the input field. To do so, use\n\t\t * `manage-value`.\n\t\t * @type {(string|number|null)}\n\t\t * @uib.description The ID of the selected item from the `items` array\n\t\t * @uib.fieldType string\n\t\t * @uib.typeMetadata.emptyStateBehavior NULL\n\t\t */\n\t\tselectedItem: {\n\t\t\tmanageable: true,\n\t\t\tschema: {type: ['string', 'number', 'null']},\n\t\t\tdependencies: ['items']\n\t\t},\n\t\t/**\n\t\t * An object describing additional sizing constrains for the items list popover.\n\t\t *\n\t\t * Valid keys are (all are optional):\n\t\t *\n\t\t *  - width\n\t\t *  - minWidth\n\t\t *  - maxWidth\n\t\t *  - height\n\t\t *  - minHeight\n\t\t *  - maxHeight\n\t\t *\n\t\t * The value for each property should be a positive integer representing\n\t\t * a pixel value to apply to the corresponding content style.\n\t\t * Alternatively, you can specify the string `\"target\"` for width,\n\t\t * minWidth, or maxWidth to have that property match the width of the\n\t\t * input element.\n\t\t *\n\t\t * For example, this value ensures that the items list is at least 400x200 pixels:\n\t\t *\n\t\t *  {\n\t\t *\t\tminWidth: 400,\n\t\t *\t\tminHeight: 200\n\t\t *  }\n\t\t *\n\t\t * The default values for this property are:\n\t\t *\n\t\t *  {\n\t\t *\t\twidth: \"target\",\n\t\t *\t\tmaxHeight: 300,\n\t\t *  }\n\t\t *\n\t\t * @private\n\t\t * @type {ItemsListConstrain}\n\t\t * @typedef {Object} ItemsListConstrain\n\t\t * @description Sizing constraints to enforce on the items list. For each\n\t\t * property, a number can be specified which sets that constraint in\n\t\t * pixels.  If the value is \"target\" for width, minWidth, or maxWidth,\n\t\t * the items list is sized to match the width of the input field.\n\t\t * @property {\"target\"|number} width\n\t\t * @property {\"target\"|number} minWidth\n\t\t * @property {\"target\"|number} maxWidth\n\t\t * @property {number} height\n\t\t * @property {number} minHeight\n\t\t * @property {number} maxHeight\n\t\t * @uib.label Item Size Constraints\n\t\t * @uib.description Sizing constraints to enforce on the items list. For each property, a number can be specified which sets that constraint in pixels.  If the value is \"target\" for width, minWidth, or maxWidth, the items list is sized to match the width of the input field\n\t\t */\n\t\titemsListConstrain: {schema: constrainSchema},\n\t\t/**\n\t\t * Indicates that focus should automatically be placed inside the input\n\t\t * on page load.\n\t\t * @type {boolean}\n\t\t * @uib.label Auto-focus\n\t\t * @uib.description Indicates that focus should automatically be placed inside the input on page load\n\t\t */\n\t\tautofocus: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Indicates that the user can interact with the field\n\t\t * and change its value. Field appears grayed out when disabled.\n\t\t * @type {boolean}\n\t\t * @uib.description Disable user click interactions\n\t\t */\n\t\tdisabled: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Controls how to filter the items as the user types into the input.\n\t\t * - \"managed\" (default): No filtering occurs. Use this to manually\n\t\t *   filter or search for items as the user types.\n\t\t * - \"initial\": Items whose label or sublabel begins with the\n\t\t *   input value are displayed. This is case-insensitive.\n\t\t * - \"contains\": Items whose label or sublabel contains the input value\n\t\t *   are displayed. This is case-insensitive.\n\t\t * @type {(\"managed\"|\"initial\"|\"contains\")}\n\t\t * @uib.label Search Behavior\n\t\t * @uib.description Controls how to filter the items as the user types into the integrated search input\n\t\t */\n\t\tsearch: {\n\t\t\tdefault: 'managed',\n\t\t\tschema: {type: 'string', enum: ['managed', 'initial', 'contains']}\n\t\t},\n\t\t/**\n\t\t * If set, an iconic button with popover appears next to the field\n\t\t * label for displaying additional hint text to the user, such as\n\t\t * password requirements or other instructions for completing the field.\n\t\t * @type {(string|JSX)}\n\t\t * @uib.label Helper text\n\t\t * @uib.description If set, an iconic button with popover appears next to the field label for displaying additional hint text to the user, such as password requirements or other instructions for completing the field. Use plain text to allow for translation\n\t\t * @uib.fieldType string\n\t\t * @uib.translatable true\n\t\t */\n\t\thelperContent: {},\n\t\t/**\n\t\t * Indicates that the field is in an incorrect state, which is\n\t\t * reflected in the field display. This property is set\n\t\t * automatically based on the current validity of the input field. Use\n\t\t * `manage-invalid` to override the default behavior and handle the\n\t\t * `NOW_TYPEAHEAD#INVALID_SET` action manually.\n\t\t * @type {boolean}\n\t\t * @uib.description Set to indicate that the field is in an incorrect state, which is reflected in the field display\n\t\t */\n\t\tinvalid: {manageable: true, schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Label describing the overall purpose of the input field.\n\t\t * @type {string}\n\t\t * @uib.description Label describing the overall purpose of the select field\n\t\t * @uib.defaultValue Label\n\t\t * @uib.translatable true\n\t\t */\n\t\tlabel: {schema: {type: 'string'}},\n\t\t/**\n\t\t * Array of inline alert messages that are displayed below the field.\n\t\t * @type {Array.<{status: ('critical'|'warning'|'positive'|'info'|'suggestion'), content: (string|JSX), icon: string}>}\n\t\t * @uib.description Array of inline alert messages that are displayed below the field\n\t\t * @uib.defaultValue []\n\t\t */\n\t\tmessages: {\n\t\t\tdefault: [],\n\t\t\tschema: messagesSchema\n\t\t},\n\t\t/**\n\t\t * Name of the field control. Dispatched along with the field value\n\t\t * on user interaction.\n\t\t * @type {string}\n\t\t * @uib.description Name of the field control which is included in dispatched actions\n\t\t */\n\t\tname: {schema: {type: 'string'}},\n\t\t/**\n\t\t * When true, the field is optional and not required to be completed by\n\t\t * the user before completing the form.\n\t\t * @type {boolean}\n\t\t * @uib.description Visually indicates that the field is optional\n\t\t * @uib.defaultValue false\n\t\t */\n\t\toptional: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Hint text displayed in the input when the user has not yet entered a\n\t\t * value.\n\t\t * @type {string}\n\t\t * @uib.label Placeholder text\n\t\t * @uib.description Placeholder text for the input field. This text should hint to the user what input is expected.\n\t\t * @uib.translatable true\n\t\t */\n\t\tplaceholder: {schema: {type: 'string'}},\n\t\t/**\n\t\t * When true, the user cannot modify the value of the field, but\n\t\t * it still appears enabled.\n\t\t * @type {boolean}\n\t\t * @uib.label Read-only\n\t\t * @uib.description Select to prevent the user from modifying the value of the input field. The input field is not disabled in this setting.\n\t\t */\n\t\treadonly: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * When true, the user must enter a value in the\n\t\t * input field before they can complete the form.\n\t\t * @type {boolean}\n\t\t * @uib.description Select to indicate that the user must enter a value in the field before proceeding.\n\t\t * @uib.defaultValue false\n\t\t */\n\t\trequired: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * When true, the required indicator is hidden. Use this for\n\t\t * forms where most fields are required, along with the `optional` flag\n\t\t * for any fields that are not required.\n\t\t * @type {boolean}\n\t\t * @uib.label Hide Required Indicator\n\t\t * @uib.description Select to hide the required indicator. Use this for forms where most fields are required, along with the `optional` flag for any fields that are not required\n\t\t */\n\t\thideRequiredIndicator: {default: false, schema: {type: 'boolean'}},\n\t\t/**\n\t\t * The value of the input field. This is updated automatically\n\t\t * as the user types. Use `manage-value` to override this and handle\n\t\t * the `NOW_TYPEAHEAD#VALUE_SET` action manually. Note: This does\n\t\t * not prevent the selected items from showing in the dropdown. To do\n\t\t * so, use `manage-selected-item`.\n\t\t * @type {string}\n\t\t * @uib.description Sets a value for the input field. Unless the input field has pre-populated data, this property should be left empty\n\t\t * @uib.translatable true\n\t\t */\n\t\tvalue: {manageable: true, schema: {type: 'string'}}\n\t},\n\n\tinitialState: {\n\t\t/**\n\t\t * The id of the currently focused item in the dropdown list.\n\t\t */\n\t\tactiveItemId: null,\n\t\t/**\n\t\t * Whether or not the popover is opened and the dropdown list is visible.\n\t\t */\n\t\topened: false,\n\t\t/**\n\t\t * Whether or not the input is focused\n\t\t */\n\t\thasFocus: false\n\t},\n\n\tactionHandlers: {\n\t\t// workaround for Firefox not playing nicely with the autofocus attribute\n\t\t[COMPONENT_DOM_TREE_READY]({host, properties}) {\n\t\t\tif (properties.autofocus) {\n\t\t\t\tconst input = host.shadowRoot.querySelector('input');\n\t\t\t\tinput.focus();\n\t\t\t}\n\t\t},\n\n\t\t// update both the selectedItem and value managed properties\n\t\t'PRIVATE#SET_ITEM': {\n\t\t\tstopPropagation: true,\n\t\t\teffect: ({dispatch, action, properties}) => {\n\t\t\t\tconst {name} = properties;\n\t\t\t\tconst {id, label} = action.payload;\n\n\t\t\t\t// talk about this during code review\n\t\t\t\tif (id !== properties.selectedItem) {\n\t\t\t\t\tdispatch('NOW_TYPEAHEAD#SELECTED_ITEM_SET', {\n\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\titem: action.payload\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (label !== properties.value) {\n\t\t\t\t\tdispatch('NOW_TYPEAHEAD#VALUE_SET', {value: label, name});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'PRIVATE#BLUR': {\n\t\t\tstopPropagation: true,\n\t\t\teffect: ({dispatch, properties}) => {\n\t\t\t\t// Check exact match if autoSelect\n\t\t\t\tdispatch(({properties}) => {\n\t\t\t\t\tconst {items, selectedItem, value} = properties;\n\t\t\t\t\tconst autoSelected = autoSelectMatch(items, selectedItem, value);\n\n\t\t\t\t\tif (autoSelected) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'PRIVATE#SET_ITEM',\n\t\t\t\t\t\t\tpayload: autoSelected ? autoSelected : {}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn CANCEL_DISPATCH;\n\t\t\t\t});\n\n\t\t\t\t// Run validation\n\t\t\t\tconst {required, selectedItem, invalid, value} = properties;\n\t\t\t\tconst isInvalid = !selectedItem;\n\t\t\t\tif ((required && isInvalid && !invalid) || (!isInvalid && invalid)) {\n\t\t\t\t\tdispatch(() => ({\n\t\t\t\t\t\ttype: 'NOW_TYPEAHEAD#INVALID_SET',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tname: properties.name,\n\t\t\t\t\t\t\tvalue: isInvalid,\n\t\t\t\t\t\t\tfieldValue: value\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\t// after checking exact match and validation, we can dispatch interaction finished\n\t\t\t\tdispatch(({properties}) => {\n\t\t\t\t\tconst {selectedItem, name, value} = properties;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'NOW_TYPEAHEAD#INTERACTION_FINISHED',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tselectedItem\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t'NOW_POPOVER#OPENED_SET'({dispatch, action, updateState}) {\n\t\t\tconst {id, value} = action.payload;\n\n\t\t\t// ignore the helperContent popover\n\t\t\tif (id !== 'now-dropdown-list') return;\n\n\t\t\tupdateState({\n\t\t\t\topened: value,\n\t\t\t\tactiveItemId: null\n\t\t\t});\n\n\t\t\tif (!value) {\n\t\t\t\tdispatch(({state}) => {\n\t\t\t\t\tconst {hasFocus} = state;\n\n\t\t\t\t\t// If we still have focus, that means the popover was dismissed\n\t\t\t\t\t// with focus still in the field (e.g.: user pressed `Escape`).\n\t\t\t\t\t// Don't want to do anything yet. See similar logic in handleBlur()\n\t\t\t\t\tif (hasFocus) {\n\t\t\t\t\t\treturn CANCEL_DISPATCH;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'PRIVATE#BLUR',\n\t\t\t\t\t\tpayload: {}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t'NOW_DROPDOWN_LIST#ITEM_CLICKED'({host, action, dispatch, updateState}) {\n\t\t\ttogglePanel(updateState);\n\n\t\t\tdispatch('PRIVATE#SET_ITEM', action.payload.item);\n\n\t\t\tconst input = host.shadowRoot.querySelector('input');\n\t\t\tif (input) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\t\t},\n\n\t\t'NOW_DROPDOWN_LIST#ACTIVE_ITEM_SET'({action, updateState}) {\n\t\t\tupdateState({activeItemId: action.payload.value});\n\t\t}\n\t},\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when the field no longer has focus and the user is not interacting\n\t\t * with the items list. This is similar to a native `blur` event, but is\n\t\t * deferred until both the input and the items list no longer have focus.\n\t\t * Payload contains the `name` and the current `value` and `selectedItem`.\n\t\t * @type {{name: string, value: string, selectedItem: (string|number)}}\n\t\t * @private\n\t\t */\n\t\t'NOW_TYPEAHEAD#INTERACTION_FINISHED': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'string'},\n\t\t\t\t\tselectedItem: {type: ['string', 'number']}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Dispatched when interaction with the field is complete and the validity\n\t\t * of the field has changed. Payload contains the `name` of the field and\n\t\t * the current validity of the field (`value` of the invalid property based\n\t\t * on the `required` properties), and the current `fieldValue` inside of\n\t\t * the input.  Set the `manage-invalid` property to override the default\n\t\t * behavior and handle this action manually.\n\t\t * @type {{name: string, value: boolean, fieldValue: string}}\n\t\t * @private\n\t\t */\n\t\t'NOW_TYPEAHEAD#INVALID_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'boolean'},\n\t\t\t\t\tfieldValue: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Dispatched when a user selects an item. Payload contains the `name` of the\n\t\t * field and ID of the selected item. If an item is deselected, the\n\t\t * `value` is `null.` Set the `manage-selected-item` property to\n\t\t * override the default behavior and handle this action manually.\n\t\t * Payload key `item` contains the `object` of the the item selected.\n\t\t * @type {{name: string, value: (string|number), item: Object}}\n\t\t */\n\t\t'NOW_TYPEAHEAD#SELECTED_ITEM_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: ['string', 'number']},\n\t\t\t\t\titem: {type: 'object'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Dispatched when the value of the input field changes. Payload\n\t\t * contains the `name` and the current `value` in the input. Set the\n\t\t * `manage-value` property to override the default behavior and handle this\n\t\t * action manually.\n\t\t * @type {{name: string, value: string}}\n\t\t */\n\t\t'NOW_TYPEAHEAD#VALUE_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: ['string', 'number']}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tslots: {\n\t\t/**\n\t\t * Slot for field decorators on the inline (normally right) side\n\t\t * of the input field.\n\t\t */\n\t\tend: {}\n\t},\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: focusBehavior\n\t\t}\n\t],\n\tstyles,\n\tview\n});\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-form-field{display:flex;align-items:center;border-width:var(--mv9-PvZT-PAtjp--kvZptZ-9Apz8,0);border-style:solid;border-color:RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ,var(--now-color_border--secondary,var(--now-color--neutral-5,172,180,181))));border-radius:var(--mv9-PvZT-PAtjp--kvZptZ-ZrpAW1,0);box-shadow:0 var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8,1px) 0 0 RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ,var(--now-color_border--secondary,var(--now-color--neutral-5,172,180,181))));background-color:RGBA(var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ,var(--now-color_background--primary,var(--now-color--neutral-0,255,255,255))),var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ-rjX8r,0))}.now-form-field.has-hover,.now-form-field:hover{border-color:RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--8vstZ,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ,var(--now-color_border--secondary,var(--now-color--neutral-5,172,180,181)))));box-shadow:0 calc(var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8, 1px)*2) 0 0 RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--8vstZ,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ,var(--now-color_border--secondary,var(--now-color--neutral-5,172,180,181)))));background-color:RGBA(var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ--8vstZ,var(--now-color_background--tertiary,var(--now-color--neutral-2,228,230,231))),var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ-rjX8r--8vstZ,1))}.now-form-field.is-invalid{border-color:RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54)));box-shadow:0 var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8,1px) 0 0 RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54)))}.now-form-field.is-invalid:hover{border-color:RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp_8vstZ,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))));box-shadow:0 calc(var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8, 1px)*2) 0 0 RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp_8vstZ,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))))}.now-form-field.is-invalid.has-focus,.now-form-field.is-invalid:focus,.now-form-field.is-invalid:focus-within{border-color:RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp_PvJW1,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))));box-shadow:0 calc(var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8, 1px)*2) 0 0 RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp_PvJW1,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))));background-color:RGB(var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ--AmsrjAp_PvJW1,var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ--AmsrjAp,var(--now-color_alert--critical-0,241,206,205))))}.now-form-field.is-invalid.is-disabled{border-color:RGBA(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp_pA1rkjtp,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))),.25);box-shadow:0 var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8,1px) 0 0 RGBA(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp_pA1rkjtp,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))),.25)}.now-form-field.is-disabled{border-color:RGBA(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--pA1rkjtp,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ,var(--now-color_border--secondary,var(--now-color--neutral-5,172,180,181)))),.25);box-shadow:0 var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8,1px) 0 0 RGBA(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--pA1rkjtp,var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ,var(--now-color_border--secondary,var(--now-color--neutral-5,172,180,181)))),.25)}.now-form-field.is-disabled:hover,.now-form-field.is-readonly{background-color:RGBA(var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ,var(--now-color_background--primary,var(--now-color--neutral-0,255,255,255))),var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ-rjX8r,0))}.now-form-field.is-readonly{box-shadow:none}.now-form-field .now-line-height-crop{flex-grow:1}.now-form-field .now-line-height-crop:after,.now-form-field .now-line-height-crop:before{content:\\\"\\\";display:block;height:0}.now-form-field .now-line-height-crop:before{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-form-field .now-line-height-crop:after{margin-block-end:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-form-field .now-line-height-crop+.now-form-field .now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1*-1)}.now-form-field-label{display:flex;align-items:center;min-width:0;margin-inline-start:.25rem;margin-inline-end:.25rem;font-style:var(--mv9-PvZT-PAtjp_jrktj--Pvmz-1zOjt,normal);font-weight:var(--mv9-PvZT-PAtjp_jrktj--Pvmz-9tAf8z,normal);font-size:.75rem;line-height:1.33333;font-family:var(--mv9-PvZT-PAtjp_jrktj--Pvmz-PrTAjO,var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif));text-transform:var(--mv9-PvZT-PAtjp_jrktj--ztuz-zZrm1PvZT,none);color:RGB(var(--mv9-PvZT-PAtjp_jrktj--JvjvZ,var(--now-color_text--tertiary,var(--now-color--neutral-9,99,114,116))))}.now-form-field-label.is-invalid{color:RGB(var(--mv9-PvZT-PAtjp_jrktj--JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54)))}.now-form-field-label .now-line-height-crop:after,.now-form-field-label .now-line-height-crop:before{content:\\\"\\\";display:block;height:0}.now-form-field-label .now-line-height-crop:before{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-form-field-label .now-line-height-crop:after{margin-block-end:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-form-field-label .now-line-height-crop+.now-form-field-label .now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667*-1)}.now-form-field-label .now-line-height-crop:first-of-type{min-width:0}.now-form-field-label .will-truncate{display:block;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.now-form-field-message{display:flex;width:100%;min-height:1rem;margin-block-start:.25rem;border-radius:.125rem;padding:calc(0.125rem*var(--mv9-PvZT-PAtjp_Tt11rft--8tAf8z-1Jrjt, 1)) calc(0.25rem*var(--mv9-PvZT-PAtjp_Tt11rft--9Apz8-1Jrjt, 1));font-style:var(--mv9-PvZT-PAtjp_Tt11rft--Pvmz-1zOjt,normal);font-weight:var(--mv9-PvZT-PAtjp_Tt11rft--Pvmz-9tAf8z,normal);font-size:.75rem;line-height:1.33333;font-family:var(--mv9-PvZT-PAtjp_Tt11rft--Pvmz-PrTAjO,var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif));text-transform:var(--mv9-PvZT-PAtjp_Tt11rft--ztuz-zZrm1PvZT,none);word-break:break-word}:host(:not([dir=rtl])) .now-form-field-message,:root:not([dir=rtl]) .now-form-field-message{text-align:left}:host([dir=rtl]) .now-form-field-message,:root[dir=rtl] .now-form-field-message{text-align:right}.now-form-field-message.-critical{color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--JZAzAJrj--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28))));background-color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--JZAzAJrj--krJUfZvWmp-JvjvZ,var(--now-color_alert--critical-0,241,206,205)))}.now-form-field-message.-warning{color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--9rZmAmf--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28))));background-color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--9rZmAmf--krJUfZvWmp-JvjvZ,var(--now-color_alert--warning-0,242,237,179)))}.now-form-field-message.-positive{color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--Xv1AzAst--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28))));background-color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--Xv1AzAst--krJUfZvWmp-JvjvZ,var(--now-color_alert--positive-0,201,224,202)))}.now-form-field-message.-info{color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--AmPv--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28))));background-color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--AmPv--krJUfZvWmp-JvjvZ,var(--now-color_alert--info-0,195,221,240)))}.now-form-field-message.-suggestion{color:RGB(var(--mv9-PvZT-PAtjp_Tt11rft--1Wfft1zAvm--JvjvZ,var(--now-color_text--tertiary,var(--now-color--neutral-9,99,114,116))));background-color:RGBA(var(--mv9-PvZT-PAtjp_Tt11rft--1Wfft1zAvm--krJUfZvWmp-JvjvZ,var(--now-color_background--primary,var(--now-color--neutral-0,255,255,255))),var(--mv9-PvZT-PAtjp_Tt11rft--1Wfft1zAvm--krJUfZvWmp-JvjvZ-rjX8r,0))}.now-form-field-message .now-line-height-crop{display:block}.now-form-field-message .now-line-height-crop:after,.now-form-field-message .now-line-height-crop:before{content:\\\"\\\";display:block;height:0}.now-form-field-message .now-line-height-crop:before{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-form-field-message .now-line-height-crop:after{margin-block-end:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-form-field-message .now-line-height-crop+.now-form-field-message .now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667*-1)}.now-form-field-message-label{align-self:center;margin-block-start:0;margin-block-end:0}.now-form-field-popover{display:inline-block;line-height:0}.now-form-field-button.is-invalid{--mv9-kWzzvm--ztZzArZO--JvjvZ:var(--mv9-PvZT-PAtjp_jrktj--JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54));--mv9-kWzzvm--ztZzArZO--JvjvZ--8vstZ:var(--mv9-PvZT-PAtjp_jrktj--JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54));--mv9-kWzzvm--ztZzArZO--JvjvZ--rJzAst:var(--mv9-PvZT-PAtjp_jrktj--JvjvZ--AmsrjAp,var(--now-color_alert--critical-2,200,60,54))}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}:host{display:inline-block;margin-block-start:.5rem;margin-block-end:.5rem}.now-typeahead-field{color:RGB(var(--mv9-PvZT-PAtjp--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28))))}.now-typeahead-field.-multi{overflow:auto;flex-wrap:wrap;padding-block-start:.25rem;padding-inline-start:.25rem}.now-typeahead-field:focus-within{border-color:RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--PvJW1,var(--now-color--secondary-1,1,119,142)));box-shadow:0 calc(var(--mv9-PvZT-PAtjp--kvZptZ-kjvJU-tmp-9Apz8, 1px)*2) 0 0 RGB(var(--mv9-PvZT-PAtjp--kvZptZ-JvjvZ--PvJW1,var(--now-color--secondary-1,1,119,142)));background-color:RGB(var(--mv9-PvZT-PAtjp--krJUfZvWmp-JvjvZ--PvJW1,var(--now-color--secondary-0,217,235,238)))}.now-typeahead-native-input-container{display:flex;flex-grow:1;align-items:center;max-width:100%}.now-typeahead-native-input{width:100%;min-width:0;height:calc(2rem*var(--mv9-PvZT-PAtjp--8tAf8z-1Jrjt, 1));border:none;padding:.25rem;box-shadow:none;font-style:var(--mv9-PvZT-PAtjp--Pvmz-1zOjt,normal);font-weight:var(--mv9-PvZT-PAtjp--Pvmz-9tAf8z,normal);font-size:1rem;font-family:var(--mv9-PvZT-PAtjp--Pvmz-PrTAjO,var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif));text-transform:var(--mv9-PvZT-PAtjp--ztuz-zZrm1PvZT,none);color:RGB(var(--mv9-PvZT-PAtjp--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28))));background:none;outline:none}.now-typeahead-native-input::placeholder{color:RGBA(var(--mv9-PvZT-PAtjp_XjrJt8vjptZ--JvjvZ,var(--mv9-PvZT-PAtjp--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)))),.5)}.now-typeahead-native-input:disabled,.now-typeahead-native-input:disabled::placeholder{cursor:not-allowed;color:RGBA(var(--mv9-PvZT-PAtjp--JvjvZ--pA1rkjtp,var(--mv9-PvZT-PAtjp--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)))),.25)}.is-invalid .now-typeahead-native-input{color:RGB(var(--mv9-PvZT-PAtjp--JvjvZ--AmsrjAp,var(--mv9-PvZT-PAtjp--JvjvZ,var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)))))}.now-typeahead-multi{display:flex;flex-direction:column;height:inherit;max-height:inherit}.now-popover{display:contents}.now-pill-grid-container{display:inline-block}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import {pick} from 'lodash';\nimport {actionTypes} from '@servicenow/ui-core';\nimport {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport styles from './_now-typeahead.scss';\nimport {\n\tCONSTRAIN_DEFAULTS,\n\tCANCEL_DISPATCH,\n\tautoSelectMatch,\n\tmoveActiveItem,\n\tgetItemById,\n\tgetDropdownListConstrain,\n\tgetSearchMatches,\n\ttoggleSelectedItem,\n\ttogglePanel,\n\thandleBlur,\n\thandleFocus\n} from './utils/typeahead';\nimport {\n\tfocusNext,\n\tfocusPrevious,\n\tfocusFirstPill,\n\tfocusLastPill,\n\tjumpFocusPrevious,\n\tjumpFocusNext\n} from './utils/pill-focus';\nimport '@servicenow/now-dropdown';\nimport {\n\titemsSchema,\n\titemSchema,\n\tconstrainSchema\n} from '@servicenow/now-dropdown';\nimport '@servicenow/now-pill';\nimport '@servicenow/now-popover';\nimport focusBehavior from '@servicenow/behavior-focus';\nimport {\n\trenderFormFieldLabel,\n\trenderFormFieldMessages,\n\tgetFormFieldMessageIds\n} from '@servicenow/now-input';\nimport {messagesSchema} from '@servicenow/now-input';\n\nconst {COMPONENT_DOM_TREE_READY, COMPONENT_PROPERTY_CHANGED} = actionTypes;\n\nconst handleClickTrigger = (event, disabled, readonly) => {\n\tif (disabled || readonly) {\n\t\tevent.stopPropagation();\n\t}\n\tconst input = event.target.getRootNode().querySelector('input');\n\tif (input && event.target !== input) {\n\t\tinput.focus();\n\t}\n};\n\nconst handleKeydownInput = (event, dispatch, updateState, optionPrefix) => {\n\tconst {key} = event;\n\tconst input = event.target;\n\tconst {value} = input;\n\n\tif (\n\t\tkey === 'ArrowUp' ||\n\t\tkey === 'ArrowDown' ||\n\t\tkey === 'Home' ||\n\t\tkey === 'End'\n\t) {\n\t\tmoveActiveItem(event, updateState, optionPrefix);\n\t}\n\n\tif (key === 'Enter') {\n\t\t// Select the item\n\t\t// 1. If the panel is open and there is an activeItemId\n\t\t// 2. If the panel input exactly matches the label of only one item\n\t\tdispatch(({state, properties}) => {\n\t\t\tconst {items, selectedItems, name} = properties;\n\t\t\tconst {activeItemId} = state;\n\n\t\t\tconst nextItem = activeItemId\n\t\t\t\t? getItemById(items, activeItemId)\n\t\t\t\t: autoSelectMatch(items, selectedItems, value);\n\n\t\t\tif (nextItem) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tvalue: toggleSelectedItem(selectedItems, nextItem)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn CANCEL_DISPATCH;\n\t\t});\n\n\t\ttogglePanel(updateState);\n\t}\n\n\t// If input is empty backspace key focuses the last added pill\n\tif (key === 'Backspace' && !value) {\n\t\tconst pills = [...event.target.getRootNode().querySelectorAll('now-pill')];\n\t\tif (pills.length > 0) {\n\t\t\tfocusLastPill(pills);\n\t\t}\n\t}\n};\n\nconst handleInput = (event, dispatch, updateState, name) => {\n\tconst {value} = event.target;\n\n\t// while typing, if the input field has some text, open the panel\n\tupdateState(({state}) => {\n\t\treturn {\n\t\t\toperation: 'assign',\n\t\t\tvalue: {\n\t\t\t\t// input event will fire when clearing out the field. In that case we\n\t\t\t\t// want to maintain the current `opened` state of the panel rather than\n\t\t\t\t// forcing it open.\n\t\t\t\tvalue: value,\n\t\t\t\topened: value ? true : state.opened\n\t\t\t}\n\t\t};\n\t});\n\n\tdispatch('NOW_TYPEAHEAD_MULTI#VALUE_SET', {name, value});\n};\n\nconst handleKeydownPill = (event) => {\n\tconst {key, target: activePill} = event;\n\tconst pills = [...event.target.getRootNode().querySelectorAll('now-pill')];\n\n\tif (\n\t\tkey === 'ArrowRight' ||\n\t\tkey === 'ArrowLeft' ||\n\t\tkey === 'ArrowUp' ||\n\t\tkey === 'ArrowDown' ||\n\t\tkey === 'Home' ||\n\t\tkey === 'End'\n\t) {\n\t\tevent.preventDefault();\n\t\tif (key === 'ArrowRight') {\n\t\t\tfocusNext(pills, activePill);\n\t\t}\n\t\tif (key === 'ArrowLeft') {\n\t\t\tfocusPrevious(pills, activePill);\n\t\t}\n\t\tif (key === 'ArrowUp') {\n\t\t\tjumpFocusPrevious(pills, activePill);\n\t\t}\n\t\tif (key === 'ArrowDown') {\n\t\t\tjumpFocusNext(pills, activePill);\n\t\t}\n\t\tif (key === 'Home') {\n\t\t\tfocusFirstPill(pills);\n\t\t}\n\t\tif (key === 'End') {\n\t\t\tfocusLastPill(pills);\n\t\t}\n\t}\n};\n\nconst renderPills = (selectedItems, disabled, readonly) => {\n\tif (!selectedItems) return;\n\treturn selectedItems.map((item, index) => {\n\t\tconst avatarImage =\n\t\t\titem.avatarProps && item.avatarProps.imageSrc\n\t\t\t\t? item.avatarProps.imageSrc\n\t\t\t\t: undefined;\n\t\treturn item ? (\n\t\t\t<div key={item.id} className=\"now-pill-grid-container\" role=\"row\">\n\t\t\t\t<div className=\"now-pill-grid-container\" role=\"gridcell\">\n\t\t\t\t\t<now-pill\n\t\t\t\t\t\ttabindex={index === 0 ? undefined : '-1'}\n\t\t\t\t\t\ton-keydown={handleKeydownPill}\n\t\t\t\t\t\ton-click={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"now-m-block-end--xs now-m-inline-end--xs\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\timage-src={avatarImage}\n\t\t\t\t\t\tcan-dismiss={!disabled && !readonly}\n\t\t\t\t\t\tmanage-selected\n\t\t\t\t\t\tappend-to-payload={{itemId: item.id}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\tundefined\n\t\t);\n\t});\n};\n\nconst view = (state, {dispatch, updateState}) => {\n\tconst {componentId, activeItemId, opened, value} = state;\n\tconst {\n\t\tautofocus,\n\t\tdisabled,\n\t\thelperContent,\n\t\thideRequiredIndicator,\n\t\tinvalid,\n\t\titems,\n\t\tsearch,\n\t\titemsListConstrain,\n\t\tlabel,\n\t\tmessages,\n\t\tname = `typeahead-multi-${componentId}`,\n\t\toptional,\n\t\tplaceholder,\n\t\treadonly,\n\t\trequired,\n\t\tselectedItems\n\t} = state.properties;\n\n\tconst constrain = {...CONSTRAIN_DEFAULTS, ...itemsListConstrain};\n\tconst filteredItems = getSearchMatches(items, value, search);\n\n\tconst listId = `now-dropdown-list-${componentId}`;\n\tconst optionPrefix = `${listId}-option`;\n\n\treturn (\n\t\t<div className=\"now-typeahead-multi\">\n\t\t\t{renderFormFieldLabel(\n\t\t\t\tcomponentId,\n\t\t\t\tinvalid,\n\t\t\t\trequired,\n\t\t\t\toptional,\n\t\t\t\tlabel,\n\t\t\t\thelperContent,\n\t\t\t\thideRequiredIndicator\n\t\t\t)}\n\t\t\t<now-popover\n\t\t\t\tclassName=\"now-popover\"\n\t\t\t\thide-tail\n\t\t\t\tconstrain={pick(constrain, ['width', 'minWidth', 'maxWidth'])}\n\t\t\t\tmanage-opened\n\t\t\t\topened={opened}\n\t\t\t\tappend-to-payload={{id: 'now-dropdown-list'}}\n\t\t\t\tinteraction-type=\"listbox\"\n\t\t\t\tdisable-scroll>\n\t\t\t\t<div\n\t\t\t\t\tslot=\"trigger\"\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\taria-expanded={String(opened)}\n\t\t\t\t\taria-haspopup=\"listbox\"\n\t\t\t\t\taria-owns={`${listId}-listbox`}\n\t\t\t\t\taria-controls={`${listId}-listbox`}\n\t\t\t\t\ton-click={(event) => handleClickTrigger(event, disabled, readonly)}\n\t\t\t\t\tclass={{\n\t\t\t\t\t\t'now-typeahead-field': true,\n\t\t\t\t\t\t'-multi': true,\n\t\t\t\t\t\t'now-form-field': true,\n\t\t\t\t\t\t'is-invalid': invalid,\n\t\t\t\t\t\t'is-disabled': disabled,\n\t\t\t\t\t\t'is-readonly': readonly\n\t\t\t\t\t}}>\n\t\t\t\t\t<div\n\t\t\t\t\t\trole=\"grid\"\n\t\t\t\t\t\tclassName=\"now-pill-grid-container\"\n\t\t\t\t\t\taria-labelledby={`form-field-${componentId}-label`}>\n\t\t\t\t\t\t{renderPills(selectedItems, disabled, readonly)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"now-typeahead-native-input-container\">\n\t\t\t\t\t\t{!readonly ? (\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid={`form-field-${componentId}`}\n\t\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\t\taria-activedescendant={\n\t\t\t\t\t\t\t\t\tactiveItemId ? `${optionPrefix}-${activeItemId}` : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-describedby={getFormFieldMessageIds(componentId, messages)}\n\t\t\t\t\t\t\t\tclassName=\"now-typeahead-native-input\"\n\t\t\t\t\t\t\t\tautofocus={autofocus}\n\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\treadonly={readonly}\n\t\t\t\t\t\t\t\trequired={required}\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\ton-keydown={(e) =>\n\t\t\t\t\t\t\t\t\thandleKeydownInput(e, dispatch, updateState, optionPrefix)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ton-input={(e) => handleInput(e, dispatch, updateState, name)}\n\t\t\t\t\t\t\t\ton-blur={() => handleBlur(dispatch, updateState)}\n\t\t\t\t\t\t\t\ton-focus={() => handleFocus(updateState)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"now-align\">\n\t\t\t\t\t\t\t<slot\n\t\t\t\t\t\t\t\tname=\"end\"\n\t\t\t\t\t\t\t\ton-click={(e) => {\n\t\t\t\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttogglePanel(updateState);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{opened ? (\n\t\t\t\t\t<now-dropdown-list\n\t\t\t\t\t\tstyle={getDropdownListConstrain(constrain)}\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\tselect=\"multi\"\n\t\t\t\t\t\titems={filteredItems}\n\t\t\t\t\t\tselectedItems={\n\t\t\t\t\t\t\tselectedItems && selectedItems.map((item) => item.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tactive-item={activeItemId === null ? undefined : activeItemId}\n\t\t\t\t\t\tsearch-term={value}\n\t\t\t\t\t\tscreen-reader-id={listId}\n\t\t\t\t\t\tmanage-selected-items\n\t\t\t\t\t\tconfig-aria={{panel: {'aria-label': label}}}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\tundefined\n\t\t\t\t)}\n\t\t\t</now-popover>\n\t\t\t{renderFormFieldMessages(componentId, messages)}\n\t\t</div>\n\t);\n};\n\n/**\n *\n * Form element for text input fields that includes a dropdown of relevant or\n * suggested values that a user can select multiple values from. As users type into the field,\n * the suggested values are filtered or recomputed.\n *\n * ```jsx\n * const items = [\n *   {\n *     id: \"ablumsondi\",\n *     label: \"Ab Blumson\",\n *     sublabel: \"ablumsondi@scribd.com\",\n *   },\n *   {\n *     id: \"amolfinofi\",\n *     label: \"Abagael Molfino\",\n *     sublabel: \"amolfinofi@reverbnation.com\",\n *   },\n *   {\n *     id: \"aolynn99\",\n *     label: \"Abbot O'Lynn\",\n *     sublabel: \"aolynn99@shop-pro.jp\",\n *   }\n * ];\n *\n * <now-typeahead-multi name=\"User\" label=\"User\" items={items} />\n *\n * <now-typeahead-multi name=\"User\" label=\"User\" items={items} invalid required messages={[\n *   {\n *    status: 'critical',\n *    icon: 'circle-close-outline',\n *    content: 'Please fill out this required field.'\n *   }\n * ]}/>\n *\n * <now-typeahead-multi name=\"User\" label=\"User\" items={items}>\n *   <now-button-iconic slot=\"end\" icon=\"circle-info-outline\" tooltip-content=\"Preview record\" />\n * </now-typeahead-multi>\n * ```\n *\n * @seismicElement now-typeahead-multi\n * @summary Supplements an input field with a dropdown panel of relevant options, where more than one option can be selected to fill the field.\n * @uib.label Typeahead multi\n * @uib.icon typeahead-multi\n * @uib.description Supplements an input field with a dropdown panel of relevant options, where more than one option can be selected to fill the field\n * @uib.category primitives\n * @uib.associatedTypes global.core\n * @uib.properties label, placeholder, items, readonly, optional, required, hideRequiredIndicator, disabled, helperContent, search, invalid, autofocus, selectedItems, name, messages, itemsListConstrain\n * @uib.actions NOW_TYPEAHEAD_MULTI#INVALID_SET, NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET, NOW_TYPEAHEAD_MULTI#VALUE_SET\n * @uib.innerComponents now-button-iconic, now-dropdown-list, now-icon, now-pill, now-popover, now-input\n */\ncreateEnhancedElement('now-typeahead-multi', {\n\tproperties: {\n\t\t/**\n\t\t * An array of `DropdownListItem` or `DropdownListSection` objects that are used as\n\t\t * possible items that the user can select from.\n\t\t * @type {(Array.<DropdownListItem> | Array.<DropdownListSection>)}\n\t\t * @uib.description Array of possible items that the user can select from\n\t\t * @uib.defaultValue [{\"id\": \"usr1\",\"label\": \"User 1\",\"sublabel\": \"user1@servicenow.com\",\"avatarProps\": {\"userName\": \"User 1\",\"imageSrc\": \"http://i.pravatar.cc/24?u=33\",\"presence\": \"away\"}},{\"id\": \"usr2\",\"label\": \"User 2\",\"sublabel\": \"user2@servicenow.com\",\"avatarProps\": {\"userName\": \"User 2\",\"imageSrc\": \"http://i.pravatar.cc/24?u=34\",\"presence\": \"busy\"},\"disabled\": true},{\"id\": \"usr3\",\"label\": \"User 3\",\"sublabel\": \"user3@servicenow.com\",\"avatarProps\": {\"userName\": \"User 3\",\"imageSrc\": \"http://i.pravatar.cc/24?u=35\",\"presence\": \"offline\"}}]\n\t\t */\n\t\titems: {\n\t\t\tdefault: [],\n\t\t\tschema: itemsSchema\n\t\t},\n\t\t/**\n\t\t * An array of `DropdownListItem` objects representing each selected item. Use\n\t\t * `manage-selected-items` to override the default behavior and handle the\n\t\t * `NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET` action manually.\n\t\t * @type {Array.<DropdownListItem>}\n\t\t * @uib.description An array of items representing each selected item\n\t\t * @uib.fieldType json\n\t\t * @uib.defaultValue []\n\t\t */\n\t\tselectedItems: {\n\t\t\tdefault: [],\n\t\t\tmanageable: true,\n\t\t\tschema: {type: 'array', items: itemSchema},\n\t\t\tdependencies: ['items']\n\t\t},\n\t\t/**\n\t\t * An object describing additional sizing constrains for the items list popover.\n\t\t *\n\t\t * Valid keys are (all are optional):\n\t\t *\n\t\t *  - width\n\t\t *  - minWidth\n\t\t *  - maxWidth\n\t\t *  - height\n\t\t *  - minHeight\n\t\t *  - maxHeight\n\t\t *\n\t\t * The value for each property should be a positive integer representing\n\t\t * a pixel value that is applied to the corresponding content style.\n\t\t * Alternatively, you can specify the string `\"target\"` for width,\n\t\t * minWidth, or maxWidth to have that property match the width of the\n\t\t * input element.\n\t\t *\n\t\t * For example, this value ensures that the items list is at least 400x200 pixels:\n\t\t *\n\t\t *  {\n\t\t *\t\tminWidth: 400,\n\t\t *\t\tminHeight: 200\n\t\t *  }\n\t\t *\n\t\t * The default values for this property are:\n\t\t *\n\t\t *  {\n\t\t *\t\twidth: \"target\",\n\t\t *\t\tmaxHeight: 300,\n\t\t *  }\n\t\t *\n\t\t * @private\n\t\t * @type {ItemsListConstrain}\n\t\t * @typedef {Object} ItemsListConstrain\n\t\t * @description Sizing constraints to enforce on the items list. For each\n\t\t * property, a number can be specified which sets that constraint in\n\t\t * pixels.  If the value is \"target\" for width, minWidth, or maxWidth,\n\t\t * the items list is sized to match the width of the input field.\n\t\t * @property {\"target\"|number} width\n\t\t * @property {\"target\"|number} minWidth\n\t\t * @property {\"target\"|number} maxWidth\n\t\t * @property {number} height\n\t\t * @property {number} minHeight\n\t\t * @property {number} maxHeight\n\t\t * @uib.label Item Size Constraints\n\t\t * @uib.description Sizing constraints to enforce on the items list. For each property, a number can be specified which sets that constraint in pixels. If the value is \"target\" for width, minWidth, or maxWidth, the items list is sized to match the width of the input field\n\t\t */\n\t\titemsListConstrain: {schema: constrainSchema},\n\t\t/**\n\t\t * Indicates that focus should automatically be placed inside the input\n\t\t * on page load.\n\t\t * @type {boolean}\n\t\t * @uib.label Auto-focus\n\t\t * @uib.description Indicates that focus should automatically be placed inside the input on page load\n\t\t */\n\t\tautofocus: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Indicates that the user can interact with the field\n\t\t * and change its value. Field appears grayed out when disabled.\n\t\t * @type {boolean}\n\t\t * @uib.description Disable user click interactions\n\t\t */\n\t\tdisabled: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Controls how to filter the items as the user types into the input.\n\t\t * - \"managed\" (default): No filtering occurs. Use this to manually\n\t\t *   filter or search for items as the user types.\n\t\t * - \"initial\": Items whose label or sublabel begins with the\n\t\t *   input value are displayed. This is case-insensitive.\n\t\t * - \"contains\": Items whose label or sublabel contains the input value\n\t\t *   are displayed. This is case-insensitive.\n\t\t * @type {(\"managed\"|\"initial\"|\"contains\")}\n\t\t * @uib.label Search Behavior\n\t\t * @uib.description Controls how to filter the items as the user types into the integrated search input\n\t\t */\n\t\tsearch: {\n\t\t\tdefault: 'managed',\n\t\t\tschema: {type: 'string', enum: ['managed', 'initial', 'contains']}\n\t\t},\n\t\t/**\n\t\t * If set, an iconic button with popover appears next to the field\n\t\t * label for displaying additional hint text to the user, such as\n\t\t * password requirements or other instructions for completing the field.\n\t\t * @type {(string|JSX)}\n\t\t * @uib.label Helper text\n\t\t * @uib.description If set, an iconic button with popover appears next to the field label for displaying additional hint text to the user, such as password requirements or other instructions for completing the field. Use plain text to allow for translation\n\t\t * @uib.fieldType string\n\t\t * @uib.translatable true\n\t\t */\n\t\thelperContent: {},\n\t\t/**\n\t\t * Indicates that the field is in an incorrect state, which is\n\t\t * reflected in the field display. This property is set\n\t\t * automatically based on the current validity of the input field. Use\n\t\t * `manage-invalid` to override the default behavior and handle the\n\t\t * `NOW_TYPEAHEAD_MULTI#INVALID_SET` action manually.\n\t\t * @type {boolean}\n\t\t * @uib.description Set this flag to indicate that the field is in an incorrect state, which is reflected in the field display\n\t\t */\n\t\tinvalid: {manageable: true, schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Label describing the overall purpose of the input field.\n\t\t * @type {string}\n\t\t * @uib.description Label describing the overall purpose of the select field\n\t\t * @uib.defaultValue Label\n\t\t * @uib.translatable true\n\t\t */\n\t\tlabel: {schema: {type: 'string'}},\n\t\t/**\n\t\t * Array of inline alert messages that are displayed below the field.\n\t\t * @type {Array.<{status: ('critical'|'warning'|'positive'|'info'|'suggestion'), content: (string|JSX), icon: string}>}\n\t\t * @uib.description Array of inline alert messages that are displayed below the field\n\t\t * @uib.defaultValue []\n\t\t */\n\t\tmessages: {\n\t\t\tdefault: [],\n\t\t\tschema: messagesSchema\n\t\t},\n\t\t/**\n\t\t * Name of the field control. Dispatched along with the field value\n\t\t * on user interaction.\n\t\t * @type {string}\n\t\t * @uib.description Name of the field control included in dispatched actions\n\t\t */\n\t\tname: {schema: {type: 'string'}},\n\t\t/**\n\t\t * When true, the field is optional and not required to be completed by\n\t\t * the user before completing the form.\n\t\t * @type {boolean}\n\t\t * @uib.description Visually indicates that the field is optional\n\t\t * @uib.defaultValue false\n\t\t */\n\t\toptional: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * Hint text displayed in the input when the user has not yet entered a\n\t\t * value.\n\t\t * @type {string}\n\t\t * @uib.label Placeholder text\n\t\t * @uib.description Placeholder text for the input field. This text should hint to the user what input is expected.\n\t\t * @uib.translatable true\n\t\t */\n\t\tplaceholder: {schema: {type: 'string'}},\n\t\t/**\n\t\t * When true, the user cannot modify the value of the field, but\n\t\t * it still appears enabled.\n\t\t * @type {boolean}\n\t\t * @uib.label Read-only\n\t\t * @uib.description By enabling this property, the user cannot modify the value of the input field. The input field is not disabled in this setting.\n\t\t */\n\t\treadonly: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * When true, the user must enter a value in the\n\t\t * input field before they can complete the form.\n\t\t * @type {boolean}\n\t\t * @uib.description Select to indicate that the user must enter a value in the field before proceeding\n\t\t * @uib.defaultValue false\n\t\t */\n\t\trequired: {schema: {type: 'boolean'}},\n\t\t/**\n\t\t * When true, the required indicator is hidden. Use this for\n\t\t * forms where most fields are required, along with the `optional` flag\n\t\t * for any fields that are not required.\n\t\t * @type {boolean}\n\t\t * @uib.label Hide Required Indicator\n\t\t * @uib.description Select to hide the required indicator. Use this for forms where most fields are required, along with the `optional` flag for any fields that are not required.\n\t\t */\n\t\thideRequiredIndicator: {default: false, schema: {type: 'boolean'}},\n\t\t/**\n\t\t * The value of the input field. This is updated automatically\n\t\t * as the user types. Use `manage-value` to override this and handle\n\t\t * the `NOW_TYPEAHEAD_MULTI#VALUE_SET` action manually. Note: This does\n\t\t * not prevent the selected items from showing in the dropdown. To do\n\t\t * so, use `manage-selected-items`.\n\t\t * @type {string}\n\t\t * @uib.description Sets a value for the input field. Unless the input field has pre-populated data, this property should be left empty.\n\t\t * @uib.translatable true\n\t\t */\n\t\tvalue: {manageable: true, schema: {type: 'string'}}\n\t},\n\tinitialState: {\n\t\t/**\n\t\t * The id of the currently focused item in the dropdown list.\n\t\t */\n\t\tactiveItemId: null,\n\t\t/**\n\t\t * Whether or not the popover is opened and the dropdown list is visible.\n\t\t */\n\t\topened: false,\n\t\t/**\n\t\t * Whether or not the input is focused\n\t\t */\n\t\thasFocus: false\n\t},\n\tactionHandlers: {\n\t\t// workaround for Firefox not playing nicely with the autofocus attribute\n\t\t[COMPONENT_DOM_TREE_READY]({host, properties}) {\n\t\t\tif (properties.autofocus) {\n\t\t\t\tconst input = host.shadowRoot.querySelector('input');\n\t\t\t\tinput.focus();\n\t\t\t}\n\t\t},\n\n\t\t[COMPONENT_PROPERTY_CHANGED]({action, dispatch, properties, updateState}) {\n\t\t\tconst {name, previousValue = [], value} = action.payload;\n\t\t\t// when selectedItems is added, clear out the value in the input\n\t\t\tif (name === 'selectedItems' && previousValue.length < value.length) {\n\t\t\t\tupdateState({\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t\tdispatch('NOW_TYPEAHEAD_MULTI#VALUE_SET', {\n\t\t\t\t\tname: properties.name,\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t'PRIVATE#BLUR': {\n\t\t\tstopPropagation: true,\n\t\t\teffect: ({dispatch}) => {\n\t\t\t\t// Check exact match if autoSelect\n\t\t\t\tdispatch(({state, properties}) => {\n\t\t\t\t\tconst {value} = state;\n\t\t\t\t\tconst {items, selectedItems = [], name} = properties;\n\n\t\t\t\t\tconst autoSelected = autoSelectMatch(items, selectedItems, value);\n\n\t\t\t\t\tif (autoSelected) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET',\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tvalue: toggleSelectedItem(selectedItems, autoSelected)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn CANCEL_DISPATCH;\n\t\t\t\t});\n\n\t\t\t\t// Run validation\n\t\t\t\tdispatch(({properties, state}) => {\n\t\t\t\t\tconst {required, selectedItems, invalid, name} = properties;\n\t\t\t\t\tconst isInvalid = selectedItems.length === 0;\n\t\t\t\t\tif ((required && isInvalid && !invalid) || (!isInvalid && invalid)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'NOW_TYPEAHEAD_MULTI#INVALID_SET',\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tvalue: isInvalid,\n\t\t\t\t\t\t\t\tfieldValue: state.value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn CANCEL_DISPATCH;\n\t\t\t\t});\n\n\t\t\t\t// after checking exact match and validation, we can dispatch interaction finished\n\t\t\t\tdispatch(({properties, state}) => {\n\t\t\t\t\tconst {value} = state;\n\t\t\t\t\tconst {selectedItems, name} = properties;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'NOW_TYPEAHEAD_MULTI#INTERACTION_FINISHED',\n\t\t\t\t\t\tpayload: {name, value, selectedItems}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t'NOW_POPOVER#OPENED_SET'({dispatch, action, updateState}) {\n\t\t\tconst {id, value} = action.payload;\n\n\t\t\t// ignore the helperContent popover\n\t\t\tif (id !== 'now-dropdown-list') return;\n\n\t\t\tupdateState({\n\t\t\t\topened: value,\n\t\t\t\tactiveItemId: null\n\t\t\t});\n\n\t\t\tif (!value) {\n\t\t\t\tdispatch(({state}) => {\n\t\t\t\t\tconst {hasFocus} = state;\n\n\t\t\t\t\t// If we still have focus, that means the popover was dismissed\n\t\t\t\t\t// with focus still in the field (e.g.: user pressed `Escape`).\n\t\t\t\t\t// Don't want to do anything yet. See similar logic in handleBlur()\n\t\t\t\t\tif (hasFocus) {\n\t\t\t\t\t\treturn CANCEL_DISPATCH;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'PRIVATE#BLUR',\n\t\t\t\t\t\tpayload: {}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t'NOW_DROPDOWN_LIST#ITEM_CLICKED': ({\n\t\t\thost,\n\t\t\taction,\n\t\t\tdispatch,\n\t\t\tupdateState\n\t\t}) => {\n\t\t\ttogglePanel(updateState);\n\n\t\t\tdispatch(({properties}) => {\n\t\t\t\tconst {selectedItems, name} = properties;\n\t\t\t\tconst input = host.shadowRoot.querySelector('input');\n\t\t\t\tif (input) {\n\t\t\t\t\tinput.focus();\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tvalue: toggleSelectedItem(selectedItems, action.payload.item)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\t'NOW_PILL#DISMISSED': {\n\t\t\tstopPropagation: true,\n\t\t\teffect: ({host, action, dispatch, updateState}) => {\n\t\t\t\tdispatch(({properties}) => {\n\t\t\t\t\tconst {selectedItems} = properties;\n\t\t\t\t\tconst removedPill = selectedItems.find((item) => {\n\t\t\t\t\t\treturn item.id === action.payload.itemId;\n\t\t\t\t\t});\n\t\t\t\t\tconst removedPillIndex = selectedItems.indexOf(removedPill);\n\t\t\t\t\tconst pills = host.shadowRoot.querySelectorAll('now-pill');\n\n\t\t\t\t\t// last pill deleted, focus input\n\t\t\t\t\tif (selectedItems.length === 1) {\n\t\t\t\t\t\tconst input = host.shadowRoot.querySelector('input');\n\t\t\t\t\t\tif (input) {\n\t\t\t\t\t\t\tinput.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// end pill was deleted, move focus to new end pill\n\t\t\t\t\telse if (removedPillIndex === selectedItems.length - 1) {\n\t\t\t\t\t\tpills[pills.length - 2].focus();\n\t\t\t\t\t}\n\t\t\t\t\t// pill deleted, move focus to next pill in array\n\t\t\t\t\telse if (selectedItems.length > 1) {\n\t\t\t\t\t\tpills[removedPillIndex + 1].focus();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tname: properties.name,\n\t\t\t\t\t\t\tvalue: toggleSelectedItem(selectedItems, removedPill)\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tupdateState({\n\t\t\t\t\topened: false,\n\t\t\t\t\tactiveItemId: null\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t'NOW_DROPDOWN_LIST#ACTIVE_ITEM_SET'({action, updateState}) {\n\t\t\tupdateState({activeItemId: action.payload.value});\n\t\t}\n\t},\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when the field no longer has focus and the user is not interacting\n\t\t * with the items list. This is similar to a native `blur` event, but is\n\t\t * deferred until both the input and the items list no longer have focus.\n\t\t * Payload contains the `name` and the current `value` and `selectedItems`.\n\t\t * @type {{name: string, value: string, selectedItems: string[]}}\n\t\t * @uib.description Dispatched when the field no longer has focus and the user is not interacting with the items list\n\t\t * @private\n\t\t */\n\t\t'NOW_TYPEAHEAD_MULTI#INTERACTION_FINISHED': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'string'},\n\t\t\t\t\tselectedItems: {type: 'array', items: {type: 'string'}}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Dispatched when interaction with the field is complete and the validity\n\t\t * of the field has changed. Payload contains the `name` of the field and\n\t\t * the current validity of the field (`value` of the invalid property based\n\t\t * on the `required` properties), and the current `fieldValue` inside of\n\t\t * the input.  Set the `manage-invalid` property to override the default\n\t\t * behavior and handle this action manually.\n\t\t * @type {{name: string, value: boolean, fieldValue: string}}\n\t\t * @uib.description Dispatched when interaction with the field is complete and the validity of the field has changed\n\t\t */\n\t\t'NOW_TYPEAHEAD_MULTI#INVALID_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'boolean'},\n\t\t\t\t\tfieldValue: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Dispatched when a user selects one or more items. Payload contains an array of IDs of\n\t\t * the currently selected items. Set the `manage-selected-items` property to\n\t\t * override the default behavior and handle this action manually.\n\t\t * @type {{name: string, value: string[]}}\n\t\t * @uib.description Dispatched when a user selects one or more items\n\t\t */\n\t\t'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'array', items: {type: 'string'}}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Dispatched when the value of the input field changes. Payload\n\t\t * contains the `name` and the current `value` in the input.\n\t\t * @type {{name: string, value: string}}\n\t\t * @uib.description Dispatched when the value of the input field has changed.\n\t\t */\n\t\t'NOW_TYPEAHEAD_MULTI#VALUE_SET': {\n\t\t\tschema: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {type: 'string'},\n\t\t\t\t\tvalue: {type: 'string'}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tslots: {\n\t\t/**\n\t\t * Slot for field decorators on the inline-end (normally right) side\n\t\t * of the input field.\n\t\t */\n\t\tend: {}\n\t},\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: focusBehavior\n\t\t}\n\t],\n\tstyles,\n\tview\n});\n","import {getActiveElement} from '@servicenow/library-enhanced-utils';\n\n// Returns a boolean indicating whether the pill's label is focused\nexport function isPillLabelFocused() {\n\tconst activeElement = getActiveElement().classList;\n\treturn activeElement.contains('now-pill-button');\n}\n\n// Returns a boolean indicating whether the pill's dismiss button is focused\n// (if one exists)\nexport function isPillDismissButtonFocused() {\n\tconst activeElement = getActiveElement().classList;\n\treturn activeElement.contains('now-button-iconic');\n}\n\n// Moves focus to the given pill's dismiss button\nexport function focusPillDismissButton(pill) {\n\tconst pillDismissButton = pill.shadowRoot.querySelector(\n\t\t'.now-pill-button-iconic'\n\t);\n\tpillDismissButton.focus();\n}\n\n// Moves focus to the first pill in the container\nexport function focusFirstPill(pills) {\n\tpills[0].focus();\n}\n// Moves focus to the last pill in the container\nexport function focusLastPill(pills) {\n\tpills[pills.length - 1].focus();\n}\n\n// Moves focus to the next pill in the container\nexport function focusNextPill(pills, activePill) {\n\tconst focusedPillIndex = pills.findIndex((node) => node === activePill);\n\tif (pills.length === focusedPillIndex + 1) {\n\t\t// last pill is focused, do nothing\n\t\treturn;\n\t}\n\t// otherwise, focus the next pill\n\tpills[focusedPillIndex + 1].focus();\n}\n\n// Moves focus to the previous pill in the container\nexport function focusPreviousPill(pills, activePill) {\n\tconst focusedPillIndex = pills.findIndex((node) => node === activePill);\n\tif (focusedPillIndex === 0) {\n\t\t// pill container or first pill is focused, do nothing\n\t\treturn;\n\t}\n\t// otherwise, focus the previous pill\n\tpills[focusedPillIndex - 1].focus();\n}\n\n// Moves focus to the pill's dismiss button if currently focused on the label,\n// or to the next pill's label if focused on the dismiss button.\nexport function focusNext(pills, activePill) {\n\tif (isPillLabelFocused()) {\n\t\tfocusPillDismissButton(activePill);\n\t} else {\n\t\tfocusNextPill(pills, activePill);\n\t}\n}\n\n// Moves focus to the pill's label if currently focused on the dismiss button,\n// or to the previous pill's dismiss button if focused on the label.\nexport function focusPrevious(pills, activePill) {\n\tif (isPillLabelFocused()) {\n\t\tfocusPreviousPillDismissButton(pills, activePill);\n\t} else {\n\t\tactivePill.focus();\n\t}\n}\n\n// Moves focus to the dismiss button of the next pill in the container\nexport function focusNextPillDismissButton(pills, activePill) {\n\tconst activePillIndex = pills.findIndex((node) => node === activePill);\n\tif (pills.length === activePillIndex + 1) {\n\t\t// last pill is focused, do nothing\n\t\treturn;\n\t}\n\t// otherwise, focus the dismiss button of the next pill\n\tfocusPillDismissButton(pills[activePillIndex + 1]);\n}\n\n// Moves focus to the dismiss button of the previous pill in the container\nexport function focusPreviousPillDismissButton(pills, activePill) {\n\tconst focusedPillIndex = pills.findIndex((node) => node === activePill);\n\tif (focusedPillIndex === 0) {\n\t\t// first pill is focused, do nothing\n\t\treturn;\n\t}\n\t// otherwise, focus the dismiss button of the previous pill\n\tfocusPillDismissButton(pills[focusedPillIndex - 1]);\n}\n\n// Moves focus to the next pill's label if focused on the current pill's label,\n// and to the next pill's dismiss button if focused on the current pill's dismiss\n// button.\nexport function jumpFocusNext(pills, activePill) {\n\tif (isPillDismissButtonFocused()) {\n\t\tfocusNextPillDismissButton(pills, activePill);\n\t\treturn;\n\t}\n\tfocusNextPill(pills, activePill);\n}\n\n// Moves focus to the previous pill's label if focused on the current pill's\n// label, and to the previous pill's dismiss button if focused on the current\n// pill's dismiss button.\nexport function jumpFocusPrevious(pills, activePill) {\n\tif (isPillDismissButtonFocused()) {\n\t\tfocusPreviousPillDismissButton(pills, activePill);\n\t\treturn;\n\t}\n\tfocusPreviousPill(pills, activePill);\n}\n","module.exports = __TECTONIC__$servicenow_now_pill;"],"sourceRoot":""}