{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_search_genius_cards/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__$devsnc_sn_search_genius_card_assist\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__lodash_4_17_4[\\\"compact\\\"]\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/index.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-user-card/index.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__$servicenow_behavior_media_query_19_2_10\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-user-card/view.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-user-card/utils.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-qa-card/index.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-qa-card/view.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-qa-card/utils.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__lodash_4_17_4[\\\"isEmpty\\\"]\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-catalog-card/index.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-catalog-card/view.js","webpack://__TECTONIC__$devsnc_sn_search_genius_cards/./src/sn-search-genius-catalog-card/utils.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__$servicenow_ui_core","__TECTONIC__$devsnc_sn_search_genius_card_assist","__TECTONIC__lodash_4_17_4","createCustomElement","renderer","type","snabbdom","view","initialState","timerId","time","properties","identifier","default","schema","identifierCriticalText","avatar","avatarName","heading","primaryDescription","secondaryDescription","additionalInfoLabelOne","additionalInfoValueOne","additionalInfoLabelTwo","additionalInfoValueTwo","additionalInfoLabelThree","additionalInfoValueThree","additionalInfoLabelFour","additionalInfoValueFour","actions","model","behaviors","behavior","mediaQueryBehavior","options","mobileQuery","__TECTONIC__$servicenow_behavior_media_query_19_2_10","state","isMobile","mediaQuery","userConfig","transformProps","align","labelValues","push","label","slice","marker","alt","description","values","labelValuesInfo","dispatch","answerConfig","formatIdentifier","__TECTONIC__sn_translate","markerType","enum","imageAlt","catalogConfig"],"mappings":"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","file":"sn-search-genius-cards.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__$devsnc_sn_search_genius_card_assist;","module.exports = __TECTONIC__lodash_4_17_4[\"compact\"];","import './sn-search-genius-user-card';\nimport './sn-search-genius-qa-card';\nimport './sn-search-genius-catalog-card';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport mediaQueryBehavior from '@servicenow/behavior-media-query';\n\nimport view from './view';\n\n/**\n * Card component to display User Genius Results.\n *\n * ```jsx\n * <sn-search-genius-user-card\n *     identifier=\"San Diego, USA\"\n *     avatar=\"45567543231112aa.iix\"\n *     heading=\"System Administrator\"\n *     identifierCriticalText=\"4:30 pm\"\n *     primaryDescription=\"Software Engineer, Dev - Search UX\"\n *     secondaryDescription=\"Web Interfaces\"\n *     additionalInfoLabelOne=\"E-mail\"\n *     additionalInfoValueOne=\"samina.arizmendi@acmetech.com\"\n *     additionalInfoLabelTwo=\"Mobile\"\n *     additionalInfoValueTwo=\"+91 (987)654-3210\"\n *     additionalInfoLabelThree=\"Office\"\n *     additionalInfoValueThree=\"+91 (987)654-3211\"\n *     additionalInfoLabelFour=\"Manager\"\n *     additionalInfoValueFour=\"Abel Tutor\"\n *     actions={[\n *         {\n *             assignmentId: '42fd3e5273511010c342d5fdbdf6a70e',\n *             name: 'activate_user',\n *             label: 'Activate',\n *         },\n *         {\n *             assignmentId: 'e3a173c073151010c342d5fdbdf6a7a2',\n *             name: 'call_number',\n *             label: 'Call Number',\n *         },\n *     ]}\n *     model={{\n *         name: 'Mac Marksberry',\n *         home_phone: '8581234567',\n *         location: 'Bockenheimer Landstraße 123, Frankfurt',\n *         department: 'Customer Support',\n *         sysId: 'fd826bf03710200044e0bfc8bcbe5d30',\n *         sys_id: 'fd826bf03710200044e0bfc8bcbe5d30',\n *         table: 'sys_user',\n *     }}\n * />\n * ```\n *\n * @seismicElement sn-search-genius-user-card\n * @summary Card component to display User Genius Results.\n */\ncreateCustomElement('sn-search-genius-user-card', {\n    renderer: { type: snabbdom },\n    view,\n    initialState: {\n        timerId: null,\n        time: null,\n    },\n    properties: {\n        /**\n         * This property specifies the identifier text to render.\n         * @type {string}\n         */\n        identifier: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies critical text to render next to the identifier.\n         * This text is rendered in red.\n         * @type {string}\n         */\n        identifierCriticalText: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the avatar source for the Person genius card.\n         * Renders `<now-avatar />`\n         * @type {string}\n         */\n        avatar: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Name of the user that the avatar represents.\n         * If no `avatar` is provided, then the initials of the first\n         * two names that are provided in the string appear in the avatar.\n         * @type {string}\n         */\n        avatarName: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the heading for the card.\n         * @type {string}\n         */\n        heading: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Description to place on the first line.\n         * @type {string}\n         */\n        primaryDescription: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Description to place on the second line.\n         * @type {string}\n         */\n        secondaryDescription: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the first person additional information label.\n         * @type {string}\n         */\n        additionalInfoLabelOne: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the first person additional information value.\n         * @type {string}\n         */\n        additionalInfoValueOne: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the second person additional information label.\n         * @type {string}\n         */\n        additionalInfoLabelTwo: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the second person additional information value.\n         * @type {string}\n         */\n        additionalInfoValueTwo: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the third person additional information label.\n         * @type {string}\n         */\n        additionalInfoLabelThree: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the third person additional information value.\n         * @type {string}\n         */\n        additionalInfoValueThree: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the fourth person additional information label.\n         * @type {string}\n         */\n        additionalInfoLabelFour: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the fourth person additional information value.\n         * @type {string}\n         */\n        additionalInfoValueFour: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the actions to render in the genius card at the footer.\n         * Declarative actions are used to configure actions.\n         * @type {array}\n         */\n        actions: {\n            default: [],\n            schema: {\n                type: 'array',\n            },\n        },\n        /**\n         * This is an object that contains data associated to the card.\n         * @type {object}\n         */\n        model: {\n            default: [],\n            schema: {\n                type: 'object',\n            },\n        },\n    },\n    behaviors: [\n        {\n            behavior: mediaQueryBehavior,\n            options: {\n                mobileQuery: '(max-width: 600px)',\n            },\n        },\n    ],\n});\n","module.exports = __TECTONIC__$servicenow_behavior_media_query_19_2_10;","import '@devsnc/sn-search-genius-card-assist';\nimport { transformProps } from './utils';\n\nconst view = state => {\n    const {\n        properties,\n        behaviors: { mediaQuery },\n    } = state;\n    const isMobile = mediaQuery.mobileQuery;\n    const userConfig = transformProps(properties, isMobile);\n    return <sn-search-genius-card-assist {...userConfig} />;\n};\n\nexport default view;\n","import compact from 'lodash/compact';\n\n/* eslint-disable import/prefer-default-export */\nconst MAX_COMPACT_PERSON_INFO = 2;\nconst HORIZONTAL = 'horizontal';\nconst VERTICAL = 'vertical';\n\nexport const transformProps = (properties, isMobile) => {\n    const {\n        identifier,\n        identifierCriticalText,\n        avatar,\n        avatarName,\n        heading,\n        primaryDescription,\n        secondaryDescription,\n        actions,\n        model,\n        additionalInfoLabelOne,\n        additionalInfoValueOne,\n        additionalInfoLabelTwo,\n        additionalInfoValueTwo,\n        additionalInfoLabelThree,\n        additionalInfoValueThree,\n        additionalInfoLabelFour,\n        additionalInfoValueFour,\n    } = properties;\n\n    let align = HORIZONTAL;\n    let labelValues = [];\n\n    if (additionalInfoLabelOne) {\n        labelValues.push({\n            label: additionalInfoLabelOne,\n            value: additionalInfoValueOne,\n        });\n    }\n\n    if (additionalInfoLabelTwo) {\n        labelValues.push({\n            label: additionalInfoLabelTwo,\n            value: additionalInfoValueTwo,\n        });\n    }\n\n    if (additionalInfoLabelThree) {\n        labelValues.push({\n            label: additionalInfoLabelThree,\n            value: additionalInfoValueThree,\n        });\n    }\n\n    if (additionalInfoLabelFour) {\n        labelValues.push({\n            label: additionalInfoLabelFour,\n            value: additionalInfoValueFour,\n        });\n    }\n\n    if (isMobile) {\n        align = VERTICAL;\n        labelValues = labelValues.slice(0, MAX_COMPACT_PERSON_INFO);\n    }\n\n    const descriptionValues = compact([\n        primaryDescription,\n        secondaryDescription,\n    ]);\n\n    return {\n        actions,\n        model,\n        identifier,\n        identifierCriticalText,\n        heading,\n        marker: {\n            type: 'avatar',\n            value: avatar,\n            alt: avatarName,\n        },\n        description: {\n            type: 'stacked',\n            values: descriptionValues,\n        },\n        labelValuesInfo: {\n            labelValues,\n            align,\n        },\n    };\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\n\n/**\n * Card component to display Q&A Genius Results.\n *\n * ```jsx\n *  <sn-search-genius-qa-card\n *      identifier={identifier}\n *      heading={heading}\n *      description={description}\n *      actions={actions}\n *      model={model}\n *  />\n * ```\n *\n * @seismicElement sn-search-genius-qa-card\n * @summary Card component to display Q&A Genius Results.\n */\ncreateCustomElement('sn-search-genius-qa-card', {\n    renderer: { type: snabbdom },\n    view,\n    properties: {\n        /**\n         * This property specifies the identifier text to render.\n         * If an identifier is specified, it will always be interpolated in this template:\n         * Extracted from '${identifier}'.\n         * @type {string}\n         */\n        identifier: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the heading for the card.\n         * @type {string}\n         */\n        heading: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the description text(s) for the genius card. It supports HTML content.\n         * @type {string}\n         */\n        description: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the actions to render in the genius card at the footer.\n         * Declarative actions are used to configure actions.\n         * @type {array}\n         */\n        actions: {\n            default: [],\n            schema: {\n                type: 'array',\n            },\n        },\n        /**\n         * This is an object that contains data associated to the card.\n         * @type {object}\n         */\n        model: {\n            default: [],\n            schema: {\n                type: 'object',\n            },\n        },\n    },\n});\n","import '@devsnc/sn-search-genius-card-assist';\nimport { transformProps } from './utils';\n\nconst view = (state, { dispatch }) => {\n    const { properties } = state;\n    const answerConfig = transformProps(properties, dispatch);\n    return <sn-search-genius-card-assist {...answerConfig} />;\n};\nexport default view;\n","/* eslint-disable import/prefer-default-export */\nimport isEmpty from 'lodash/isEmpty';\nimport { t } from 'sn-translate';\n\nconst formatIdentifier = identifier =>\n    isEmpty(identifier) ? identifier : t(`Extracted from '{0}'`, identifier);\n\nexport const transformProps = properties => {\n    const { identifier, heading, description, actions, model } = properties;\n    const formattedIdentifier = formatIdentifier(identifier);\n\n    return {\n        actions,\n        model,\n        identifier: formattedIdentifier,\n        heading,\n        description: {\n            type: 'html',\n            values: [description],\n        },\n    };\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"isEmpty\"];","module.exports = __TECTONIC__sn_translate;","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nimport view from './view';\n\n/**\n * Card component to display Catalog Genius Results.\n *\n * ```jsx\n * <sn-search-genius-catalog-card\n *     identifier=\"Benefits\"\n *     marker=\"news-outline\"\n *     markerType=\"icon\"\n *     heading=\"Tuition preapproval\"\n *     primaryDescription=\"This is a description text\"\n *     secondaryDescription=\"This is a secondary text\"\n *     actions={[\n *         {\n *             assignmentId: '42fd3e5273511010c342d5fdbdf6a70e',\n *             name: 'view',\n *             label: 'View',\n *         },\n *     ]}\n *     model={{\n *         name: 'Tuition preapproval',\n *         description: 'This is a description text',\n *         sysId: 'fd826bf03710200044e0bfc8bcbe5d30',\n *         sys_id: 'fd826bf03710200044e0bfc8bcbe5d30',\n *         table: 'sc_cat_item',\n *     }}\n * />\n * ```\n *\n * @seismicElement sn-search-genius-catalog-card\n * @summary Card component to display Catalog Genius Results.\n */\ncreateCustomElement('sn-search-genius-catalog-card', {\n    renderer: { type: snabbdom },\n    view,\n    initialState: {\n        timerId: null,\n        time: null,\n    },\n    properties: {\n        /**\n         * This property specifies the identifier text to render.\n         * @type {string}\n         */\n        identifier: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the icon or image source to use for the card.\n         * If no icon and image is defined, then the component will default to the icon `pencil-page-outline`.\n         * @type {string}\n         */\n        marker: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Defines the type of marker to render the appropriate component.\n         * @type ('image'|'icon')\n         */\n        markerType: {\n            default: 'image',\n            schema: {\n                type: 'string',\n                enum: ['image', 'icon'],\n            },\n        },\n        /**\n         * Alternative text description of the image.\n         * @type {string}\n         */\n        imageAlt: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the heading for the card.\n         * @type {string}\n         */\n        heading: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Primary description for the catalog.\n         * @type {string}\n         */\n        primaryDescription: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Secondary description for the catalog.\n         * Renders below the primary description.\n         * @type {string}\n         */\n        secondaryDescription: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the actions to render in the genius card at the footer.\n         * Declarative actions are used to configure actions.\n         * @type {array}\n         */\n        actions: {\n            default: [],\n            schema: {\n                type: 'array',\n            },\n        },\n        /**\n         * This is an object that contains data associated to the card.\n         * @type {object}\n         */\n        model: {\n            default: [],\n            schema: {\n                type: 'object',\n            },\n        },\n    },\n});\n","import '@devsnc/sn-search-genius-card-assist';\nimport { transformProps } from './utils';\n\nconst view = (state, { dispatch }) => {\n    const { properties } = state;\n    const catalogConfig = transformProps(properties, dispatch);\n    return <sn-search-genius-card-assist {...catalogConfig} />;\n};\n\nexport default view;\n","import compact from 'lodash/compact';\n\nconst DEFAULT_ICON = 'pencil-page-outline';\n\n/* eslint-disable import/prefer-default-export */\nexport const transformProps = properties => {\n    const {\n        identifier,\n        marker,\n        markerType,\n        imageAlt,\n        heading,\n        primaryDescription,\n        secondaryDescription,\n        actions,\n        model,\n    } = properties;\n\n    const value = marker || DEFAULT_ICON;\n    const type = value === DEFAULT_ICON ? 'icon' : markerType;\n    const descriptionValues = compact([\n        primaryDescription,\n        secondaryDescription,\n    ]);\n\n    return {\n        actions,\n        model,\n        identifier,\n        heading,\n        marker: {\n            type,\n            value,\n            alt: imageAlt,\n        },\n        description: {\n            type: 'stacked',\n            values: descriptionValues,\n        },\n    };\n};\n"],"sourceRoot":""}