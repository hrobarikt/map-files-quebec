{"version":3,"sources":["webpack://__TECTONIC__manager_workspace_components/webpack/bootstrap","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"get\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__manager_workspace_components/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isEmpty\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_heading\"","webpack://__TECTONIC__manager_workspace_components/./node_modules/@devsnc/library-uxf/node_modules/@servicenow/ui-core/lib/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/common/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_ui_effect_http\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_empty_state\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__moment_2_24_0\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/logErrorEffect.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/common/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__sn_uxpage_presource_7_0_0\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/utils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_alert\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$devsnc_sn_scripting_environment\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/selectors.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_card\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_list_connected\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_list\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/common/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_icon\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__sn_user_preferences\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isEqual\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_tabs\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_label_value\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-groups/sn-manager-user-groups.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"forEach\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_avatar\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/actions/recordWatcherActions.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_highlighted_value\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__sn_component_filter\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_form_connected\"","webpack://__TECTONIC__manager_workspace_components/./node_modules/@devsnc/library-uxf/node_modules/@servicenow/ui-core/lib/effects/modifiers/types.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__reselect_4_0_0\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_loader\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__moment_timezone_0_5_5\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/teamUtils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_text_link\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/action.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"sortBy\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_typeahead\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/utils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/sn-manager-calendar.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/utils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"reduce\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/dateUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/common/coachingCommonUtils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__sn_component_visualization\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/action.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/action.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-kpis/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_uxf_visualization_connected\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/common/dataProviders/sn-manager-channel-supervisor-list-config/channel-supervisor-list-config.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-button-footer/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_ui_effect_amb\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_chart_bar\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_calendar\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_field_lookup_connected\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_date_picker\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-info/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-info/sn-manager-user-info.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/utils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isNil\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_input\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/utils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"uniqBy\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"cloneDeep\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"forIn\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isArray\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"uniq\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/renderer.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/coverageCalculator.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/behaviors/alertList.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/behaviors/dateChangeBehavior.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"merge\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/common/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/skillMatrixUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-coverage/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_tooltip\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/selectors.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/topAssignedSkillsUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card/action.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"map\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/userDetailUtils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_date_range_picker\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-skill-recommendation-card/skill-recommendation-card.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/helper.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/utils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/selectors.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/initialState.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/helper.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/home/sn-manager-home/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/home/sn-manager-home/styles.scss?0ad0","webpack://__TECTONIC__manager_workspace_components/./src/main/components/home/sn-manager-home/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/channel-overview-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/styles.scss?ebda","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/channel-indicators.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/styles.scss?6419","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/sn-manager-indicator-group-card.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/styles.scss?15e1","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-group-card/defaultProperties.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_collapse\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-indicators/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/channels-tabs.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/manual-assignment-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/workItemDetailsView.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/availableAgentsView.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/datasources/AvailableAgentsAndWorkItemDetailsQuery.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/datasources/ManualAssignmentWorkItemMutation.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/styles.scss?6d9a","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-manual-assignment-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/channels-header.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-last-refreshed-text/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-last-refreshed-text/lastRefreshed.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__sn_component_timeago\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-last-refreshed-text/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/styles.scss?c642","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-header/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/channel-list.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/queueUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/agentUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/styles.scss?c124","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-list/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/styles.scss?839d","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channels-tabs/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-groups/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-groups/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-groups/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/filter-config.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/query.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/styles.scss?15c8","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-filter-config/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-overview-container/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/queue-details-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/styles.scss?9ec5","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-kpis/channel-kpis.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-kpis/styles.scss?92e7","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-kpis/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-kpis/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/common/dataProviders/sn-manager-channel-supervisor-list-config/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/common/dataProviders/sn-manager-channel-supervisor-list-config/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/common/dataProviders/sn-manager-channel-supervisor-list-config/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-queue-details-container/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/sn-manager-schedule.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/sn-manager-schedule-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/schedules-contextual-panel.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-button-footer/styles.scss?91d5","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-button-footer/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/queries.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isFunction\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/list-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/detail-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/edit-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/create-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/shift-detail-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/shift-create-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/shift-edit-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/loading-view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/styles.scss?1f17","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedules-contextual-panel/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/demand-forecast-popover.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/utils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/styles.scss?6372","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-demand-forecast-popover/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/editEventModal.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_time\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/deleteEventModal.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"debounce\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/sn-manager-agent-shift-swapper.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-info/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-info/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/swapqueries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/styles.scss?558c","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-shift-swapper/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/sn-manager-event-request.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_textarea\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_toggle\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$devsnc_sn_declarative_actions\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/styles.scss?e552","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-event-request/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/sn-manager-agent-time-off-request.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/styles.scss?c551","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-time-off-request/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"mergeWith\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/apiProcessing.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"uniqWith\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/popover.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/styles.scss?0b93","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/constants.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"difference\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/forecast.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/styles.scss?1767","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-view/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/recordWatcherOverrideActions.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/styles.scss?7eea","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/sn-manager-schedule-preview.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/recordWatcherOverrideActions.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"indexOf\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/styles.scss?12ce","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-schedule-preview/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/sn-manager-agent-schedule.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/styles.scss?e00d","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-agent-schedule/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/sn-manager-teams.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/styles.scss?60ff","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-groups/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-groups/sn-manager-indicator-groups.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-groups/styles.scss?8398","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-groups/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-groups/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-indicator-groups/defaultProperties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-teams/defaultProperties.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isFinite\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/coaching-skill-matrix.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/actions.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"findIndex\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-coverage/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-tooltip-wrapper/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-tooltip-wrapper/styles.scss?af90","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-tooltip-wrapper/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-coverage/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-coverage/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-coverage/styles.scss?cf2a","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-coverage/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_record_list_panel\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/index.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_radio_buttons\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/styles.scss?ad30","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-assignment-popover/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/styles.scss?faa8","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-skill-matrix/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview/styles.scss?fabc","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$devsnc_sn_layout\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview-card/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview-card/styles.scss?c4f1","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview-card/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview-card/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview-card/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/coaching-top-assigned-skills.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/actions.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/styles.scss?613b","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-top-assigned-skills/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-timeseries/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-timeseries/styles.scss?28a3","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-timeseries/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-timeseries/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$devsnc_sn_form_controls\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-timeseries/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-timeseries/action.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-overview/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/actions.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/coachingUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/recordWatcherOverrideActions.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/styles.scss?42f1","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/styles.scss?8f53","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/styles.scss?9957","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-detail/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/logger.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/styles.scss?30c5","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card/styles.scss?f0e6","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-card-list/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-survey/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-survey/styles.scss?21e5","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-survey/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-survey/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"invoke\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-asmt-survey/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assessment/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/records/sn-manager-records/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/manager-user-overview.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/manager-user-details.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/styles.scss?383e","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"orderBy\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"filter\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"flow\\\"]\"","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"partialRight\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/actionHandler.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-details/userQuery.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"omit\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/manager-user-profile-card-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/styles.scss?1ffc","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/effects.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"partial\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-profile-card-container/indicatorGroupQuery.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/manager-user-skills-panel.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-skill-recommendation-card/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-skill-recommendation-card/styles.scss?40af","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-skill-recommendation-card/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/styles.scss?5278","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-skills-panel/recordWatcherActionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-embedded-list/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-embedded-list/manager-embedded-list.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-embedded-list/styles.scss?c521","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-embedded-list/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-embedded-list/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-embedded-list/defaultProperties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/dataproviders/sn-manager-user-groups/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/manager-user-channels-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/manager-user-override-capacity.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/overrideCapacityView.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/styles.scss?b256","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-override-capacity/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/styles.scss?d292","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-channels-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/manager-user-current-work-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/styles.scss?be86","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-current-work-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/agent-presence-history-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/view.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_chart_donut_pie\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/helpers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/styles.scss?df3c","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-agent-presence-history-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/styles.scss?c5ce","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/properties.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-overview/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-schedule-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-schedule-container/user-schedule-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-schedule-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/calendar/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-schedule-container/styles.scss?c43a","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-schedule-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-user-schedule-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-performance/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-performance/team-performance.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-performance/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/behaviors/chromeTabActive.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/domUtils.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-performance/styles.scss?2c3a","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-performance/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/team-drilldown.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__$servicenow_now_pagination\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/customRenderers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/utils/focusUtils.js","webpack://__TECTONIC__manager_workspace_components/external \"__TECTONIC__lodash_4_17_15[\\\"isBoolean\\\"]\"","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/styles.scss?efac","webpack://__TECTONIC__manager_workspace_components/./src/main/components/teams/sn-manager-team-drilldown/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/approval-request.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/styles.scss?411e","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-approval-request/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/channel-details-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/styles.scss?5d98","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-channel-details-container/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/training-article.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/styles.scss?b7d1","webpack://__TECTONIC__manager_workspace_components/./src/main/components/common/sn-manager-training-article/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assigned-training/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assigned-training/coaching-assigned-training.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/coaching/sn-manager-coaching-assigned-training/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/overlapping-requests.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/effects.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/queries.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/selectors.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/styles.scss?f008","webpack://__TECTONIC__manager_workspace_components/./src/main/components/schedule/sn-manager-overlapping-requests/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/manager-user-active-work-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/actionHandlers.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/styles.scss?5528","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-active-work-container/styles.scss","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-pending-work-container/index.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-pending-work-container/manager-user-pending-work-container.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-pending-work-container/view.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-pending-work-container/constants.js","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-pending-work-container/styles.scss?506e","webpack://__TECTONIC__manager_workspace_components/./src/main/components/channels/sn-manager-user-pending-work-container/styles.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","ITEM_SELECTED","PA_INDICATORS","SYS_USER_GROUP","SYS_USER","KPI_GROUP_M2M_PA_INDICATORS","MODULES","CHANNELS","TEAMS","COACHING","SHIFTS","BREAKDOWN_ASGN_GROUP","INDICATOR_GROUP_LABEL","GROUP_LABEL","INDICATOR_LABEL","SCORE_LABEL","SCORE_NA_LABEL","ASSIGNMENT_GROUP_LABEL","ONE_OF_MY_GROUPS_FILTER_ID","USER_IS_SHIFT_AGENT_FILTER_ID","SCHEDULE_MODULE_SYSID","COACHING_MODULE_SYSID","CHANNELS_MODULE_SYSID","NOW_CALENDAR_SET_CONTEXTUAL_PANEL_VIEW","APPLIED_FILTERS_OBJECT","BREAKDOWNS","assignment_group","assigned_to","BREAKDOWN_RELATIONS","members","SYS_PROP_TEAMS","BREAKDOWN_ASSIGNMENT_GROUP","BREAKDOWN_ASSIGNED_TO","BREAKDOWN_RELATION_MEMBERS","API_DATE_FORMAT","PAGINATION_PAGE_UPDATE","PAGINATION_LIMIT_UPDATE","HTTP_ERROR_OCCURRED","ITSM_MANAGER_VIEW","RECORD_WATCHER_UPDATED","RW_ACTIONS","SUBSCRIPTION_STARTED","SUBSCRIPTION_SUCCEEDED","SUBSCRIPTION_FAILED","MESSAGE_RECEIVED","SUBSCRIPTION_UNSUBSCRIBED","CALENDAR_SECTION_BACKGROUND_COLOR","CALENDAR_SECTION_TEXT_COLOR","CALENDAR_ROW_BACKGROUND_COLOR","CALENDAR_ROW_TEXT_COLOR","CALENDAR_EVENTS","WORK_SHIFT","SYS_ID","TYPE","CATEGORY","BREAK","TIME_OFF","CALENDAR_DRAFT_COLOR","CALENDAR_DRAFT_BREAK_COLOR","CALENDAR_DRAFT_TEXT_COLOR","CALENDAR_VIEWS","CALENDAR","DAY","WEEK","MONTH","TIMELINE","CALENDAR_ACTION_PREFIX","CALENDAR_VIEW_CONFIGS","view","viewProvider","label","type","CALENDAR_EVENT_MIN_WIDTH_MS","CALENDAR_INDIVIDUALLY_QUERIED_ID","CALENDAR_INDIVIDUALLY_QUERIED_LABEL","SCHEDULE_CALENDAR_VIEW","CALENDAR_ACTIONS","DATE_RANGE_CHANGED","GET_DEFAULT_EVENTS","DEFAULT_EVENTS_RETRIEVED","CHANGE_CONTEXT_DATE","FETCH_CALENDAR_DATA","RETRIEVED_CALENDAR_DATA","COULD_NOT_RETRIEVE_DATA","CHECK_FOR_SPAN_UPDATE","UPDATE_SCHEDULE_SPANS","LIVE_RELOAD_DATA","NEW_EVENT","NEW_EVENT_FROM_POPOVER","DROPDOWN_SELECTED_ITEM_SET","FETCH_FORECAST_DATA","FETCH_FORECAST_DATA_SUCCESS","SHOW_DEMAND_FORECAST_POPOVER","SCHEDULE_PROPERTY_DEFAULTS","ENDPOINT","AVAILABLE_TIMEZONES","TIMEZONE","TIMEFORMAT","DATE_FORMAT","XSTEP","XSIZE","XSTART","DATE_PICKER_TEMPLATE","CALENDAR_DAY","CALENDAR_WEEK","CALENDAR_MONTH","TIMELINE_DAY","TIMELINE_WEEK","SCHEDULE_DELETE_EVENT_API_ENDPOINT","SCHEDULE_TABBED_LISTS","SCHEDULE_RECORD_TABLE","SCHEDULES","APPROVALS","SCHEDULE_AGENT_CALENDAR_VIEW","SCHEDULE_TABBED_LIST_LABELS","SCHEDULE_TABBED_LIST_QUERIES","SCHEDULE_AGENT_TEAM_CALENDAR_VIEW","SCHEDULE_AGENT_TABBED_LISTS","SHIFT_SWAP","SCHEDULE_ACTION_PREFIX","SCHEDULE_AGENT_TABBED_LIST_LABELS","SCHEDULE_AGENT_TABBED_LIST_COLUMNS","SCHEDULE_AGENT_TABBED_LIST_QUERIES","MANAGER_WORKSPACE_VIEW","SCHEDULE_FIELDS","STATE","START_DATE","END_DATE","SCHEDULE_PLAN_STATE","DRAFT","QUEUED_FOR_PROCESSING","GENERATING_PREVIEW","READY_FOR_PREVIEW","PUBLISHED","SCHEDULE_AGENT_ACTION_PREFIX","SCHEDULE_ACTIONS","SELECTED_ITEM_SET","FETCH_CURRENT_USER_DATA","CURRENT_USER_DATA_OBTAINED","TABBED_LIST_FETCH_REQUESTED","FETCH_TABLE_RECORD_COUNTS","TABLE_RECORD_COUNTS_OBTAINED","SCHEDULE_STATE_DIRTY","SCHEDULE_STATE_UPDATED","SCHEDULE_AGENT_LABEL","SCHEDULE_AGENT_REQUEST_SHIFT_SWAP","SCHEDULE_AGENT_ACTIONS","SHIFT_SWAP_SUBMIT_SUCCESS","SCHEDULE_AGENT_REQUEST_TABLE","SCHEDULE_AGENT_REQUEST_TIME_OFF","USER_GROUP_ACTION_PREFIX","SCHEDULE_AGENT_UI_ACTIONS","REQUEST_SHIFT_SWAP","action","REQUEST_TIME_OFF","USER_INFO_ACTION_PREFIX","USER_GROUP_ACTIONS","GROUPS_FETCH","MANAGED_GROUPS_FETCH","GROUPS_FETCH_SUCCEEDED","GROUPS_FETCH_FAILED","GROUPS_READY","USER_INFO_ACTIONS","USER_INFO_FETCH","USER_INFO_FETCH_SUCCEEDED","USER_INFO_FETCH_FAILED","USER_INFO_READY","NOW_DATE_RANGE_PICKER_VALUE_CHANGED","USER_GROUPS_RESULT","USER_GROUPS_RESULT_NODE","USER_INFO_RESULT","USER_GROUPS_MANAGED_RESULT","USER_GROUPS_MANAGED_RESULT_NODE","USER_GROUPS_MANAGED_ADDITIONAL_RESULT","USER_GROUPS_MANAGED_ADDITIONAL_RESULT_NODE","PROPERTIES_SET","SN_VISUALIZATION_POINT_CLICKED","NOW_CARD_CLICKED","NOW_CARD_HEADER_ACTION_CLICKED","NOW_MODAL_OPENED_SET","NOW_MODAL_FOOTER_ACTION_CLICKED","NOW_POPOVER_OPENED_SET","RECOMMENDATION_ACTIONS","id","NOW_ALERT_ACTION_CLICKED","NOW_ALERT_LIST_ITEMS_SET","DISMISS_SWAP_ALERT","DISMISS_TIME_OFF_ALERT","NOW_DROPDOWN_ITEM_SELECTED","NOW_DROPDOWN_ITEM_CLICKED","NOW_RADIO_BUTTONS_VALUE_SET","ADMIN_EMPTY_ERROR_MESSAGE","USER_EMPTY_ERROR_MESSAGE","CONTACT_ADMIN_MESSAGE","EMPTY_STATE_TYPES","EMPTY","LOADING","KB_KNOWLEDGE_TABLE_NAME","TYPEAHEAD_DEBOUNCE_DELAY","TABLES","SYS_USER_HAS_SKILL","SYSAPPROVER_APPROVAL","CMN_SKILL","CELL_TYPES","BUTTON_ADD","BUTTON_RECOMMEND","SKILL_LEVEL","USER_SKILL","TEAM_COVERAGE","GRAPHQL_MAX_LIMIT","GFORM_ACTIONS","RELOAD","SHOW_ALERT_MESSAGE","HIDE_ALERT_MESSAGE","DEFAULT_ALERT_TIMEOUT","SCHEDULE_ADMIN_ROLES","ADMIN","SCHEDULE_ADMIN","FORM_RECORD_OPERATION_STATUS","inserted","updated","modified","__TECTONIC__lodash_4_17_15","__TECTONIC__sn_translate","__TECTONIC__$servicenow_ui_core","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","push","__TECTONIC__$servicenow_ui_effect_graphql","__TECTONIC__$servicenow_now_heading","PACKAGE_NAME","HELPERS_SCHEDULED","HELPERS_DEFER","HELPERS_IMMEDIATE","COMPONENT_INTERNAL_ACTION","SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED","ACTION_HANDLED","ACTION_DISPATCHED","STATE_UPDATED","NOW_UI_EVENT","NOW_METRICS_LEVEL_PROP","NOW_METRIC_TYPES_PROP","COMPONENT_MODE_SUSPEND","COMPONENT_MODE_ACTIVE","NOW_MODE_PROP","NOW_MODE_ATTR","NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP","NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR","NOW_COMPONENT_NAME_PROP","NOW_COMPONENT_NAME_ATTR","NOW_ID_PROP","NOW_ID_ATTR","NOW_HOIST_PREPEND_TO_PROP","NOW_HOIST_APPEND_TO_PROP","NOW_HOIST_PREPEND_TO_ATTR","NOW_HOIST_APPEND_TO_ATTR","NOW_HOIST_PROP","NOW_HOIST_ATTR","COMPONENT_ACTION_DISPATCHED","COMPONENT_STATE_UPDATED","COMPONENT_TREE_RENDERED","COMPONENT_DOM_TREE_READY","COMPONENT_RENDER_REQUESTED","COMPONENT_PROPERTY_UPDATE_REQUESTED","COMPONENT_DOM_READY","COMPONENT_RENDERED","COMPONENT_PROPERTY_CHANGED","COMPONENT_BOOTSTRAPPED","COMPONENT_DISCONNECTED","COMPONENT_CONNECTED","ON_BOOTSTRAP_LIFECYCLE","ON_DISCONNECT_LIFECYCLE","ON_CONNECT_LIFECYCLE","PROPERTIES_SET_LIFECYCLE","PROPERTY_SELECTOR_SIGIL","APPEND_TO_META_PROP_NAME","APPEND_TO_PAYLOAD_PROP_NAME","DEFER_ATTRIBUTE","HOIST_FIRST_SCROLL_PARENT","SEISMIC_HOIST_TAG_NAME","HOIST_ATTR","HOIST_APPEND_TO_ATTR","HOIST_APPEND_TO_PROP","COMPONENT_NAME_PROP","COMPONENT_NAME_ATTR","SET_INITIAL_STATE","PARSE_PROP_CONF_KEY","SHOULD_NOT_PROPAGATE","HANDLE_ACTIONS","STORE_UPDATED","ATTRIBUTE_SET","COMPONENT_ID_ATTRIBUTE","DISPATCH_EVENT","CARD_FIELDS","DEFAULT_ASMT_VIEW","COACHING_ASSESSMENT_TABLE","COACHING_RECOMMENDATION_TABLE_NAME","COACHING_ASSESSMENT_STATE_VALUES","Open","Resolved","ASSESSMENTS_LABEL","ASSESSMENT_LABEL","COMPLETE_ASMT_LABEL","SAVE_LABEL","CANCEL_LABEL","SUBMIT_LABEL","START_SURVEY_LABEL","OVERDUE_TRAINING_LABEL","ASSESSMENTS_PAST30DAYS_LABEL","AVERAGE_QUALITY_TIME_SERIES_TITLE","LOADING_ASSESSMENTS_MESSAGE","SAVE_BTN_ID","CANCEL_BTN_ID","SUBMIT_BTN_ID","CAS_SURVEY_BTN_CLICKED","OUTLINED_ICON","EXPERT_COLOR","USERS_WITH_THIS_SKILL","USERS_WITHOUT_THIS_SKILL","FETCH_USERS_REQUESTED","FETCH_USERS_SUCCEEDED","FETCH_SKILL_LEVEL_COUNTS","FETCH_USER_SKILLS_REQUESTED","FETCH_USER_SKILLS_SUCCEEDED","ERROR_OCCURED","FETCH_SKILL_LEVEL_SUCCEEDED","FETCH_SKILL_LEVEL_COUNTS_SUCCESS","FETCH_SKILL_LEVEL_REQUESTED","NOW_BUTTON_BARE_CLICKED","PAGINATION_LIMIT","GROUP_EMPTY_HEADER_MESSAGE","GROUP_EMPTY_MESSAGE","SKILL_EMPTY_HEADER_MESSAGE","SKILL_EMPTY_MESSAGE","SKILL_COUNT_EMPTY_MESSAGE","SKILL_TITLE","SWAP_AXES","ADD_SKILL","REFRESH_LIST","FILTER","NOW_BUTTON_CLICKED","BUTTON_SWAP_AXES","BUTTON_ADD_SKILL","BUTTON_REFRESH_LIST","BUTTON_FILTER","INDICATOR_QUALITY_ASSESSMENT_FEEDBACK_RATING","INDICATOR_QUALITY_TRAINEE_SURVEY_SCORE","__TECTONIC__$servicenow_ui_effect_http","__TECTONIC__$servicenow_now_empty_state","__TECTONIC__moment_2_24_0","coeffects","payload","console","error","__TECTONIC__$servicenow_now_button","FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG","FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG_SUCCESS","CHANNEL_SUPERVISOR_LIST_CONFIG_READY","SUPERVISOR_VIEW_NAME","FETCH_WORK_ITEM_TABLE_ALIAS","FETCH_WORK_ITEM_TABLE_ALIAS_SUCCESS","ALL_WORK_ITEMS_DEFAULT_COLUMN","WORK_ITEMS","WORK_ITEMS_DEFAULT_TAB","WORK_ITEMS_DEFAULT_LIST_DETAILS","table","columns","query","listTitle","AWA_WORK_ITEM_TABLE_DEFAULT_QUERY","RECORD_LIST_TYPE_QUEUE","RECORD_LIST_TYPE_AGENT","SYS_PROP_LIST_AUTO_REFRESH_ENABLE","SYS_PROP_LIST_AUTO_REFRESH_INTERVAL_SECONDS","SYS_PROP_KPI_AUTO_REFRESH_INTERVAL_SECONDS","SYS_PROP_CHANNEL_CARD_REFRESH_INTERVAL_SECONDS","SYS_PROP_CHANNELS_CARD_AUTO_REFRESH_ENABLE","SYS_PROP_FILTER_CONFIG_ENABLE","UPDATE_DEFAULT_SORT_ORDER","UPDATE_FILTERS","PAGE","OVERVIEW","CHANNEL","QUEUE","CHANNEL_MGMT_USER","NO_OF_VIEWS","INTERNAL_FORMAT","DATE","TIME","DATE_TIME","DATE_DISPLAY_FORMAT","TIME_DISPLAY_FORMAT","ARIA_DATE_FORMAT","ARIA_DATE_TIME_FORMAT","ONLY_DATE","DATE_MONTH_ABBR","WEEK_DAYS","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","DIRECTION","LTR","RTL","LEFT","RIGHT","UP","DOWN","POSITION","START","END","ACTION_PREFIX","FORECAST_STATUS","ACTIONS","INITIALIZED","VIEW_CHANGED","CONTEXT_DATE_CHANGED","RANGE_UPDATED","INTERNAL_STATE_SET","TOGGLE_POPOVER","EVENT_CLICKED","GRID_CLICKED_NEW_EVENT","EVENT_MOVED","DRAG_END_NEW_EVENT","EVENT_RESIZED","POPOVER_OPENED","POPOVER_CLOSED","TIMELINE_SECTION_TOGGLED","NOW_DROPDOWN_SELECTED_ITEMS_SET","SET_CONTEXTUAL_PANEL_VIEW","TIMEZONE_CHANGED","REJECTED_BY_BLOCKED_SPAN","NOW_DROPDOWN_OPENED_SET","VIEWS","COLUMN","TYPES","DEFAULT_TEMPLATES","DATE_PICKER_TEMPLATE_FOR_WEEK","MONTH_FIRST","DATE_FIRST","DATE_PICKER_TEMPLATE_FOR_DAY","DATE_PICKER_TEMPLATE_FOR_MONTH","WHEN_OUT_OF_MODE_OPTIONS","HIDE","DISABLE","POPOVERS","DATE_PICKER","EVENT","SETTINGS","FORECAST","POPOVER_STATE","READY","PENDING","RENDERED","DESTROYED","EVENTS","MOUSE_CLICKED","KEY_DOWN","EVENT_TYPES","MOVE","CREATE","RESIZE","CLICK_CREATE","AGENDA_DRAG","EVENT_STATES","ONDRAGSTART","ONDRAG","ONDRAGEND","ONDRAGLEAVE","ONCLICK","GRADIENT","ANGLE","LINE_WIDTH","KEYS","D","E","F","N","P","T","S","ENTER","ESC","TAB","FSLASH","MODIFIER","SHIFT","CTRL","ALT","META","INTERNAL_DATE_TIME_REGEX","NEW_EVENT_DROPDOWN_SOURCE_ID","EVENT_DELETE_ACTIONS","OPEN_DELETE_CONFIRMATION_DIALOG","SUBMIT_DELETE_CONFIRMATION_DIALOG","CANCEL_DELETE_CONFIRMATION_DIALOG","CLOSE_DELETE_CONFIRMATION_DIALOG","DELETE_EVENT","DELETE_EVENT_SUCCEDED","DELETE_EVENT_FAILED","SHIFT_EDITING_EVENTS","OPEN_SHIFT_EDIT_MODAL","OPEN_SHIFT_SWAP_MODAL","OPEN_SHIFT_TIMEOFF_MODAL","CLOSE_SHIFT_EDIT_MODAL","SHIFT_EDIT_MODAL_ACTION_CLICKED","SHIFT_EDIT_MODAL_VALUE_CHANGED","SET_TO_DELETE","SAVE_CHANGES","SAVE_CHANGES_SUCCESS","SAVE_CHANGES_ERROR","DISMISS_ALERT","SHIFT_EDITING_MODAL_CONSTANTS","BREAKS_LABEL","SHIFT_LABEL","MODAL_ACTION_LABEL_SAVE","MODAL_ACTION_LABEL_CANCEL","SECONDS_FORMAT","EDIT_AGENT_SCHEDULE_API_ENDPOINT","GENERIC_EDIT_SHIFT_ERROR","noForecast","noStaffed","underStaffed","overStaffed","misStaffed","wellStaffed","FORECAST_STATUS_LABEL","FORECAST_STATUS_BACKGROUND","FORECAST_STATUS_ICONS","FORECAST_STATUS_HIGHLIGHT","__TECTONIC__sn_uxpage_presource_7_0_0","COMPONENT_NAME","SAVE_BUTTON","FETCH_SCHEDULES","FETCH_SCHEDULES_START","FETCH_SCHEDULES_SUCCESS","FETCH_SCHEDULES_ERROR","FETCH_SCHEDULE","FETCH_SCHEDULE_START","FETCH_SCHEDULE_SUCCESS","OPEN_SCHEDULE","DUPLICATE_SCHEDULE","DUPLICATE_SCHEDULE_START","DUPLICATE_SCHEDULE_SUCCESS","DUPLICATE_SCHEDULE_ERROR","PUBLISH_SCHEDULE","PUBLISH_SCHEDULE_SUCCESS","PUBLISH_SCHEDULE_ERROR","UNPUBLISH_SCHEDULE","UNPUBLISH_SCHEDULE_SUCCESS","UNPUBLISH_SCHEDULE_ERROR","DELETE_SCHEDULE","DELETE_SCHEDULE_SUCCESS","DELETE_SCHEDULE_ERROR","DELETE_WORK_SHIFT","DELETE_WORK_SHIFT_SUCCESS","DELETE_WORK_SHIFT_ERROR","UPDATE_AGENTS_IN_WORK_SHIFT","UPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS","UPDATE_AGENTS_IN_WORK_SHIFT_ERROR","CHECK_IF_WORK_SHIFT_OVERLAPS","CHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS","CHECK_IF_WORK_SHIFT_OVERLAPS_ERROR","GO_TO_LOADING_VIEW","GO_TO_LIST_VIEW","GO_TO_DETAIL_VIEW","GO_TO_EDIT_VIEW","GO_TO_CREATE_VIEW","GO_TO_SHIFT_DETAIL_VIEW","GO_TO_SHIFT_CREATE_VIEW","GO_TO_SHIFT_EDIT_VIEW","TYPEAHEAD_FETCH_AGENTS","TYPEAHEAD_FETCH_AGENTS_SUCCEDED","ADD_AGENT_TO_SHIFT","DELETE_AGENT_FROM_SHIFT","NOW_TYPEAHEAD_MULTI_VALUE_SET","NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET","GET_NOTIFICATIONS_EFFECT","NOTIFICATIONS_EFFECT_HANDLER","CREATE_AGENT_SCHEDULES","DEBOUNCED_CREATE_SCHEDULES_EFFECT","CREATE_AGENT_SCHEDULES_SUCCESS","WATCH_SCHEDULE_PLAN","WATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED","WATCH_SCHEDULE_SHIFT","WATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED","VIEW","detail","edit","shiftDetail","shiftCreate","shiftEdit","loading","MODALS","deleteWorkShift","deleteSchedulePlan","CARD_DROPDOWN_ACTIONS","duplicate","unpublish","SHIFT_STATES","locked","unlocked","M2M_SHIFT_TO_AGENT_TABLE","variant","actions","GFORM_SAVE","PUBLISH_BUTTON","SCHEDULE_BUTTONS","Draft","DEBOUNCE_TIME_BEFORE_TRIGGER_SCHEDULES_CREATION","setSessionData","sessionData","window","sessionStorage","setItem","getSessionData","parse","getItem","__TECTONIC__$servicenow_now_alert","__TECTONIC__$devsnc_sn_scripting_environment","getPreUserData","preUserData","initialState","getUserDateFormat","createSelector","userData","toUpperCase","getUserTimeFormat","getAssignmentGroupBreakdown","getProperty","getAssignedToBreakdown","getMembersBreakdownRelation","__TECTONIC__$servicenow_now_card","__TECTONIC__$servicenow_now_record_list_connected","__TECTONIC__$servicenow_now_record_list","getSupervisorViewConfigQuery","workItemAlias","serviceChannelId","allQueuesIds","assignmentGroups","getWorkItemDefaultQuery","userSysId","sys_id","updateAppliedFilters","availableGroups","appliedGroups","filtersBucket","appliedFiltersBucket","gr","includes","getFilterDetails","page","sysId","allGroups","selectedGroups","data","filtersApplied","entries","managedGroups","split","channelGroupMap","filter","x","queueGroupMap","hasFilterChanged","groupsStr","sort","allGroupsStr","selectedGroupsStr","addReportToList","reportConfig","reportLabel","updateState","path","dataConfig","source_id","filter_query","source_type","aggregate_function","aggregate_field","list_ui_view","decimal_precision","getDataConfig","refreshFrequency","operation","GRAPHQL_ATTENDEES_MAX_LIMIT","TIME_OFF_REQUEST","NEW_TIME_OFF_REQUEST","AGENT","USERS","ATTENDEES","SAVE","EDIT","CONTEXTS","MANAGER_WS","AGENT_WS","TYPEAHEAD_FETCH_ATTENDEES","TYPEAHEAD_FETCH_ATTENDEES_SUCCEDED","TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES","TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED","NOW_TYPEAHEAD_MULTI_INVALID_SET","NOW_TOGGLE_CHECKED_SET","NOW_INPUT_CHANGED","NOW_TEXTAREA_INPUT_CHANGED","SN_RECORD_INPUT_VALUE_CHANGED","NOW_RECORD_FIELD_LOOKUP_CONNECTED_VALUE_CHANGED","DATE_PICKER_VALUE_CHANGED","EVENT_REQUEST_SAVE","EVENT_REQUEST_CANCEL","NOW_RECORD_TIME_VALUE_CHANGED","EVENT_REQUEST_MODAL_SET","EVENT_REQUEST_ENDPOINTS","CREATE_EVENT","EDIT_EVENT","EVENT_REQUEST_SUBMIT_CREATE","EVENT_REQUEST_SUBMIT_EDIT","EVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED","EVENT_REQUEST_SUBMIT_CREATE_FAILED","EVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED","EVENT_REQUEST_SUBMIT_EDIT_FAILED","EVENT_REQUEST_SUBMISSION_SUCCESSFUL","EVENT_REQUEST_SUBMISSION_FAILED","MGR_WORKSPACE_DATA","FETCH_INDICATORS_TO_GROUPS_DATA","FETCH_INDICATORS_TO_GROUP_START","FETCH_INDICATORS_TO_GROUPS_DATA_SUCCESS","FETCH_GROUP_INDICATOR_SCORES","FETCH_GROUP_INDICATOR_SCORES_SUCCESS","KPI_CARD_CLICKED","CHANGE_USER_GROUP","FETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS","FETCH_SKILLS_COUNT_AGGREGATOR_ERROR","FETCH_SKILLS_COUNT_AGGREGATOR_START","DRILLDOWN_SKILL_CARD","FETCH_SKILL_RECOMMENDATION","FETCH_SKILL_RECOMMENDATION_SUCCEEDED","FETCH_SKILL_RECOMMENDATION_STARTED","APPROVE_RECOMMENDATION","BUTTON_CLICKED","SKILL_ASSIGNED","FETCH_MULTI_INDICATOR_BREAKDOWNs_API_ENDPOINT","BTN_APPROVE","__TECTONIC__$servicenow_now_icon","__TECTONIC__$servicenow_now_modal","__TECTONIC__sn_user_preferences","TABBED_LIST_RECORD_COUNT_QUERY","CURRENT_USER_QUERY","DEFAULT_EVENT_TYPE_QUERY","GROUP_QUERY","MANAGED_GROUP_QUERY","FETCH_SCORES","FETCH_SCORES_START","FETCH_SCORES_SUCCESS","FETCH_SCORES_ERROR","FETCH_PARENT_INDICATORS","FETCH_PARENT_INDICATORS_START","FETCH_PARENT_INDICATORS_SUCCESS","FETCH_PARENT_INDICATORS_ERROR","FETCH_INDICATORS","FETCH_INDICATORS_START","FETCH_INDICATORS_SUCCESS","FETCH_INDICATORS_ERROR","FETCH_MEMBER_DATA","FETCH_MEMBER_DATA_START","FETCH_MEMBER_DATA_SUCCESS","FETCH_MEMBER_DATA_ERROR","FETCH_PRIMARY_MEMBERS","FETCH_PRIMARY_MEMBERS_START","FETCH_PRIMARY_MEMBERS_SUCCESS","FETCH_PRIMARY_MEMBERS_ERROR","STATUS","initial","indicatorsLoading","indicatorsLoaded","scoresLoading","scoresLoaded","primaryMembersLoading","primaryMembersLoaded","memberDataLoading","memberDataLoaded","MEMBER_NAME","DEFAULT_PAGE_SIZE","TIME_SERIES_CHART_HEIGHT","chartStyleConfig","accessibilityTable","accessibilityMode","extents","y","seriesConfig","data_0_0","trendlinesConfig","trend_0_0","for","forecastConfig","forecast_0_0","registerConfig","legendOnly","justifyItems","yAxisConfig","title","yFormat","width","height","FETCH_CHANNELS","FETCH_CHANNELS_SUCCESS","FETCH_ALL_KPI_SCORES","FETCH_KPI_SCORE","FETCH_KPI_SCORE_SUCCESS","MAX_REPORTS","CARD_CLICKED","AWA_SERVICE_CHANNEL","FETCH_QUEUES_AND_AGENTS_IDS","FETCH_QUEUES_AND_AGENTS_IDS_SUCCESS","FETCH_QUEUES_AND_AGENTS_IDS_ERROR","FETCH_GROUP_CHANEL_QUEUE_MAPPING","FETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS","ALL_WORK_ITEMS","ALL_QUEUES","ALL_AGENTS","TAB_ITEMS","TAB_LIST_DETAILS","isCustomList","__TECTONIC__$servicenow_now_tabs","FETCH_MANAGER_REQUESTED","FETCH_MANAGER_SUCCEEDED","COACHING_OVERVIEW","COACHING_ASSESSMENTS","COACHING_TRAINING","COACHING_SKILLS","items","ASSESSMENT_TABLE","ASSESSMENT_LIST_TITLE","ASSESSMENT_QUERY","TRAINING_TABLE","TRAINING_LIST_TITLE","TRAINING_QUERY","__TECTONIC__$servicenow_now_label_value","createCustomElement","renderer","snabbdom","userGroupView","userGroupProps","userGroupActionHandlers","default","__TECTONIC__$servicenow_now_avatar","recordWatcher","createAmbSubscriptionEffect","subscribeStartedActionType","subscribeSucceededActionType","subscribeFailedActionType","messageReceivedActionType","unsubscribeSucceededActionType","private","actionHandlers","FETCH_MAX_USERS_COLUMNS","FETCH_MAX_USERS_COLUMNS_SUCCESS","MAX_USERS_COLUMNS_DEFAULT","FETCH_START","TOGGLE_SIDE_PANEL","NOW_PANEL_OPENED_SET","loaded","SHOW_SKILL_ASSIGNMENT_POPOVER","ADD_SKILL_TO_USER","ADD_SKILL_TO_USER_SUCCESS","ADD_SKILL_TO_USER_ERROR","UPDATE_USER_SKILL_LEVEL","UPDATE_USER_SKILL_LEVEL_SUCCESS","UPDATE_USER_SKILL_LEVEL_ERROR","REMOVE_SKILL_FROM_USER","REMOVE_SKILL_FROM_USER_SUCCESS","REMOVE_SKILL_FROM_USER_ERROR","FETCH_SKILL_LEVEL_COLOR_MAP","FETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS","OKAY_CLICKED","CANCEL_CLICKED","SKILL_ASSIGNMENT_POPOVER_SUBMIT","__TECTONIC__$servicenow_now_highlighted_value","sortOrder","Map","NAME","columnName","columnData","AGENT_NAME_LABEL","isFilterable","isSortable","isGroupable","isChoice","internalType","STRING","isSorted","column","isDescending","PRESENCE","PRESENCE_LABEL","CAPACITY_RATIO","CAPACITY_LABEL","MATCHING_SKILLS_RATIO","MATCHING_SKILLS_LABEL","AVAILABILITY_DISPLAY_VALUE","AVAILABILITY_LABEL","ASSIGNMENT_GROUPS","ASSIGNMENT_GROUPS_LABEL","getAllSysIds","agents","sysIds","forEach","agent","agentSysID","getRowData","displayValue","queryRows","queryRowsMap","set","uniqueId","highlightedData","dbViewData","rowData","buildGridModel","allColumns","layoutQuery","allSysIds","orderByColumn","orderByIsDescending","encodedQuery","tableMetadata","groupedColumn","isGrouped","isDBView","isScriptableTable","capitalize","footerAction","isAssignDisabled","disabled","getModalHeader","document","description","getLabelsAndValues","state","channel","queue","workItemState","ASSIGNED_TO","assignedTo","getPaginationObj","rowCount","recordCount","limit","replace","charAt","slice","getAgentsAvailabilityMap","getAgentIds","agentIds","attachAvailabilityHours","allAgents","availabilityHours","obj","undefined","availability","availabilityHour","availabilityDisplayValue","availabilityHourDisplayValue","agentsAvailabilityMap","isValidResponse","agentSysId","schedules","totalAvailableDurationNow","timeConversion","duration","portions","hours","Math","trunc","minutes","compareValues","order","a","b","varA","varB","comparison","sortByColumn","col","MATCHING_SKILLS","AVAILABILITY","getErrorMessage","errorMessage","toLowerCase","MANUAL_ASSIGNMENT_ERROR_MESSAGE","AGENT_NOT_AVAILABLE","MANUAL_ASSIGNMENT_NOT_PROCESSED","getListProps","allRecordsSelected","selectedAgentSysIds","gridModel","props","selectedRecords","hideCheckboxHover","hideLastRefreshedText","hideTitleRowCount","hideRefreshButton","hideFilterPanel","hideDeclarativeActions","hideUnnecessaryRowSelectors","hideColumnGrouping","hidePanel","hideSelectAll","hidePagination","hideColumnFiltering","hideColumnSorting","hideCellFilter","hideQuickEdit","hideMenuButton","hideHeader","WORKITEM_ID","DESCRIPTION","AGENTS","CAPACITY","FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS","FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_SUCCEEDED","FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_FAILED","ASISGN_WORKITEM","MANUAL_ASSIGNMENT_SUCCEEDED","MANUAL_ASSIGNMENT_FAILED","FETCH_AGENT_AVAILABILITY","FETCH_AGENT_AVAILABILITY_SUCCEEDED","FETCH_AGENT_AVAILABILITY_FAILED","FOOTER_CLICKED","GRID_CHECKBOX_TOGGLED","LIST_UPDATE_SORT","MANDATORY_SKILLS_REQUIRED","OPTIONAL_SKILLS_REQUIRED","AGENT_AVAILABILITY_ENDPOINT","NOW_TABS_SELECTED_ITEM_SET","NOW_TABS_MODAL","NOW_TABS_ASSIGNMENT_UPDATE","NOW_TABS_RECORD_LIST_CONNECTED_COUNT","NOW_TABS_BUTTON_CLICKED","NOW_TABS_MODAL_OPENED_SET","NOW_TABS_ALERT_ACTION_CLICKED","NOW_TABS_ASSIGN_WORKITEM","NOW_TABS_REFRESH_REQUESTED","NOW_TABS_LIST_DATA_FETCH_COMPLETED","UPDATE_REFRESH_REQUESTED_DATA","__TECTONIC__sn_component_filter","__TECTONIC__$servicenow_now_record_form_connected","THROTTLE","TAKE_LATEST","DEBOUNCE","__TECTONIC__reselect_4_0_0","__TECTONIC__$servicenow_now_loader","__TECTONIC__moment_timezone_0_5_5","getScoreByDisplayAggregate","displayAggregate","score","teamDateChangeBehavior","createDateChangeBehavior","dateFormat","internal","external","shouldReloadDateRange","prop","__TECTONIC__$servicenow_now_text_link","REFRESH_ASSESSMENT_LIST","CAS_LOAD_ASSESSMENT","CAS_LOAD_ASSESSMENT_SUCCEEDED","CHANNEL_LABEL","CHANNEL_CAPACITY_LABEL","OVERRIDE_CAPACITY_LABEL","OVERRIDE_CAPACITY_INPUT_LABEL","SELECTED_AGENT_LABEL","NUMBER","APPLY","CANCEL","PRIMARY","SECONDARY","FETCH_USER_DATA","FETCH_USER_DATA_SUCCEEDED","NOW_INPUT","OVERRIDE_CAPACITY_REQUESTED","OVERRIDE_CAPACITY_SUCCEEDED","OVERRIDE_CAPACITY_FAILED","FETCH_OVERRIDE_CAPACITY_MESSAGE","FETCH_OVERRIDE_CAPACITY_MESSAGE_SUCCEEDED","FETCH_OVERRIDE_CAPACITY_MESSAGE_FAILED","OVERRIDE_AGENTS_CAPACITY_ENDPOINT","OVERRIDE_AGENTS_CAPACITY_MESSAGE_ENDPOINT","FETCH_TRAINING_RECORD","FETCH_TRAINING_RECORD_START","FETCH_TRAINING_RECORD_SUCCESS","FETCH_TRAINING_RECORD_ERROR","articleLoading","articleLoaded","FETCH_OVERLAPPING_REQUESTS","FETCH_OVERLAPPING_REQUESTS_START","FETCH_OVERLAPPING_REQUESTS_SUCCESS","FETCH_OVERLAPPING_REQUESTS_ERROR","overlappingRequestLoading","overlappingRequestLoaded","createSort","fieldName","sortUserPrefUpdate","nextOrderBy","getOrderByForColumn","columnsSorted","direction","getLabels","field","operator","field_label","operator_label","value_label","filterType","OPERATORS","getOperatorLabel","res","getValueLabel","constructParsedQueryModel","comparison_id_map","comparison_field_count_map","term_label","term_label_fields","subpredicates","values","count","keys","glideQuery","predicates","RECORD_DETAILS_REQUESTED","RECORD_DETAILS_REQUEST_SUCCEEDED","SYS_ID_REQUEST_FAILED","NOW_FILTER_CONNECTED_APPLIED_ITEMS","PARENT_UPDATED_FILTERS_OBJECT","RESET_FILTERS","FETCH_REPORTS","FETCH_REPORTS_SUCCESS","FETCH_ALL_KPI_REPORTCONFIG","FETCH_KPI_REPORTCONFIG","FETCH_KPI_REPORTCONFIG_SUCCESS","FFETCH_INTERACTIVE_REFERENCE_FIELD","FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS","QUEUE_DEFAULT_TAB_ITEMS","QUEUE_DEFAULT_TAB_LIST_DETAILS","FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD","FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS","__TECTONIC__$servicenow_now_typeahead","getScheduleStateHighlightedColor","getScheduleCardConfigAria","schedule","default_start_date","default_end_date","getShiftAriaConfig","shiftName","renderScheduleCard","cardProps","cardHeaderProps","startDate","endDate","defaultCardProps","size","interaction","className","configAria","defaultCardHeaderProps","heading","lines","align","wrapped","status","canPublishSchedule","shiftCount","canDeleteSchedule","canUnpublishSchedule","tomorrow","add","isAfter","createErrorMessageHandler","dispatch","message","icon","SHOW_ALL_CLICKED","STACKED_BAR_CHART_COLORS","base","understaffed","overstaffed","showShiftEditModal","showNewEventModal","editEvent","calendarControls","timeZones","forecastData","demandForecastPopoverProps","opened","manageOpened","positionTarget","positions","target","demandForecastPopoverContent","calendarView","calendarProps","calendarActionHandlers","styles","__TECTONIC__$servicenow_now_dropdown","SWAP_CONSTS","REQ_SWAP_CLICKED","REQ_SWAP_REQUESTED","CANCEL_SWAP_CLICKED","SUBMIT_SWAP_REQUEST","DATE_VALUE_CHANGED","REQUESTOR_SHIFT_FETCH","REQUESTEE_SHIFT_FETCH","RETRIEVED_REQUESTOR_SHIFT_SUCCESS","RETRIEVED_REQUESTEE_SHIFT_SUCCESS","FETCH_SWAP_TEAMMATES","FETCH_SWAP_TEAMMATES_SUCCESS","SWAP_REQUESTEE_SET","DROPDOWN_SHIFT_OBJ_SELECTED","POST_SWAP_REQUEST","POST_SWAP_REQUEST_SUCCESS","eventModalProps","eventCategoryId","eventTypeId","context","modalTitle","modalSchema","mandatory","readOnly","startTime","endTime","additionalSelectors","formData","titleValue","descriptionValue","startDateValue","endDateValue","startTimeValue","endTimeValue","selectedAttendees","AGENT_SCHEDULE_TIME_OFF_SUCCESS","convertAllEventTimes","events","calendarTimezone","convertBreaksOnly","setOriginalTimezone","event","start","convertEventTimeToCalendarTimeZone","readInTimezone","end","originalReadInTimezone","j","childEvent","childEvents","time","moment","tz","format","eventDataToUTC","eventData","timeZone","eventDataCopy","startDateTime","utc","endDateTime","isFilterEmpty","every","val","constructDataFramePayload","teams","dateRange","breakDownAssignmentGroup","dataFramePayload","uuid","filterGroups","team","assignment_groups","group","assignment_group_id","indicators","indicator","indicator_id","breakdown","sortDesc","elementsFilter","from","to","pageSize","generateCardDataForIndicatorGroup","indicatorGroup","indicatorData","getScoreForGroup","indicator_display_aggregate","display_unit","singleCard","headerHighlightLabel","primary","headerHighlightColor","headerText","cardId","indicatorGroupLabel","indicator_group","groupId","indicatorId","scoreStats","formatDateRange","fromFormat","toFormat","skillLevelFetchSucceeded","updateProperties","result","skillLevelValue","reduce","acc","skillLevel","levelType","color","colorDisplayValue","skillLevelType","skillLabel","valueKeys","rank","colorValue","userGroupFilter","userIDs","user","groupIDs","queryGroupScheduleData","groups","groupIds","__TECTONIC__sn_component_visualization","FETCH_SKILL_AND_COUNT_SUCCEEDED","FETCH_SKILL_AND_COUNT_REQUESTED","ADD_COLOR_COUNT_TO_SKILL_COUNT","NOW_TEXT_LINK_CLICKED","CAS_DETAIL_BACKBTN_CLICKED","CAS_START_SURVEY","CAS_DETAIL_SAVE_CLICKED","CAS_DETAIL_ACTION_PREFIX","CAS_DETAIL_COMPLETE_CLICKED","CAS_DETAIL_UPDATE_RELATED_ITEMS","CAS_DETAIL_UPDATE_RELATED_ITEMS_SUCCEEDED","CAS_DETAIL_UPDATE_RELATED_ITEMS_FAILED","CAS_DETAIL_FETCH_SKILL_TRAINING","CAS_DETAIL_FETCH_SKILL_TRAINING_SUCCEEDED","CAS_DETAIL_FETCH_SKILL_TRAINING_FAILED","CAS_DETAIL_FETCH_SKILLS","CAS_DETAIL_FETCH_SKILLS_SUCCEEDED","CAS_DETAIL_FETCH_SKILLS_FAILED","CAS_DETAIL_FETCH_TRAININGS","CAS_DETAIL_FETCH_TRAININGS_SUCCEEDED","CAS_DETAIL_FETCH_TRAININGS_FAILED","CAS_DETAIL_ASSESSMENT_COMPLETED","PROFILE_USER_DETAIL_FIELDS","USER_DETAILS_REQUESTED","USER_DETAILS_REQUEST_SUCCEEDED","USER_DETAILS_REQUEST_FAILED","STACKED_VALUE_LINK_CLICKED","EXPAND_TEAMMATES_LIST","SHOW_ALL_TEAMMATES_LINK_TEXT","SHOW_LESS_TEAMMATES_LINK_TEXT","USER_DETAILS_HEADER","FETCH_USER_CHANNEL_DATA","FETCH_USER_CHANNEL_DATA_SUCCEEDED","FETCH_USER_CHANNEL_DATA_FAILED","USER_CHANNEL_MODAL_CLOSED","USER_CHANNEL_REFRESH_REQUESTED","CHANNEL_CAPACITY_OVERRIDE_DONE","OPEN_RECORD","USER_CHANNEL_OVERRIDE_CLICKED","AGENTS_CHANNEL_INFO_ENDPOINT","TOTAL_CAPACITY","CAPACITY_IN_USE","UTILIZATION","CAN_TAKE_WORK","CHANNEL_HEADER","TOTAL_CAPACITY_LABEL","CAPACITY_IN_USE_LABEL","UTILIZATION_LABEL","CAN_TAKE_WORK_LABEL","SERVICE_CHANNEL_TABLE","CHANNEL_SYS_ID","REFERENCE","OVER_RIDE_CAPACITY","FETCH_AGENT_ASSOCIATION_WITH_AWA_ENDPOINT","RENDER_PRESENCE_HISTORY_COMPONENT","FETCH_AGENT_ASSOCIATION_WITH_AWA","FETCH_AGENT_ASSOCIATION_WITH_AWA_SUCCEEDED","USER_OVERVIEW_SHOW_OVERRIDE_MSG","ALERT_ACTION_CLICKED","CRITICAL","INFO","DISMISS","CHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT","CHANNEL_OVERVIEW_EXPAND_COLLAPSE_ID","REFRESH_OVERVIEW_DATA","REFRESH_OVERVIEW_DATA_ARIA_CONFIG","REFRESH_KPI_CARD_CONTAINER","BUILD_BOOTSTRAPPED_DATA","FETCH_QUEUES_REPORT_DATA","FETCH_QUEUES_REPORT_DATA_SUCCESS","FETCH_QUEUES_REPORT_DATA_ERROR","FETCH_AGENTS_REPORT_DATA","FETCH_AGENTS_REPORT_DATA_SUCCESS","FETCH_AGENTS_REPORT_DATA_ERROR","LIST_REFRESH_REQUESTED_INTERNAL","USER_PREF_UPDATE","USER_PREF_UPDATE_SUCCESS","USER_PREF_UPDATE_ERROR","ADD_FILTER_COMPARISON","MUTATE_FILTER_COMPARISON","DELETE_FILTER_COMPARISON","LIST_DELETE_CONDITION","generic","numeric","reference","MANAGED_GROUPS_PROPERTY","IS_REFRESH_REQUESTED_PROPERTY","__TECTONIC__$servicenow_now_uxf_visualization_connected","properties","queueId","supervisorConfig","buttonsConfig","buttons","btn","style","on-click","__TECTONIC__$servicenow_ui_effect_amb","__TECTONIC__$servicenow_now_chart_bar","__TECTONIC__$servicenow_now_calendar","__TECTONIC__$servicenow_now_record_field_lookup_connected","__TECTONIC__$servicenow_now_record_date_picker","userInfoProps","userInfoActionHandlers","TO","filterAndUpdateState","getWorkShiftsFromAPIData","shiftsData","date","apiFormattedDate","timeFormat","indexOf","agentSchedules","workShiftEvents","isEmpty","agentScheduleRecord","isExclusion","workEvent","workShiftObj","eventType","cmnSpanId","startTimeDisplayValue","startTimeSwapLabel","endTimeDisplayValue","endTimeSwapLabel","shiftLabel","getDropdownShifts","shiftObjArray","dropDownItems","isNil","shiftObj","dropDownItem","getTeamMatesForTypeAhead","teamMatesArr","teamMateObj","typeAheadObj","secondary","email","isHighlighted","searchTerm","options","teamMates","debouncedFilter","debounce","maxWait","onSearchTermChange","persist","newState","stopPropagation","selectedRequesteeObj","filterResults","requesteeSelectedShift","requesteeShifts","onSelectionChange","selectionValue","selectionDisplayValue","requesteeObj","individualAgents","requesteeDate","published","selectedRequesteeDisplayValue","updateRequesteeSelectedShift","selectedShiftObj","find","updateRequestorSelectedShift","requestorSelectedShift","getSwapPayload","requestor","requestee","requestor_date","requestee_date","requestor_schedule","requestee_schedule","requestor_shift_start","requestor_shift_end","requestee_shift_start","requestee_shift_end","__TECTONIC__$servicenow_now_input","generateEventRequestPayload","eventSpanId","currentUser","eventGroup","recordId","eventCategory","attendees","combineDateTime","additionalSelectorObj","index","dateValuetoDatePickerFormat","dateValue","dateFormatPreference","datePickerValuetoDateValue","datePickerValue","timeValuetoTimePickerFormat","timeValue","timeFormatPreference","timePickerValuetoTimeValue","timePickerValue","checkIfMandatoryDateFieldsAreFilled","checkIfStartDatetimeIsBeforeEndDateTime","isAnyTimeValueMissing","isSameOrBefore","isBefore","SchedulingRenderer","TimelineDayTemplateRenderer","layout","viewConfig","timelineEvent","parentEvent","tzViewStartMS","tzViewEndMS","timezoneOffset","rawEvent","startUTCOffsetMS","parentEventStartMS","startMS","parentEventEndMS","endMS","tzEventStartMS","tzEventEndMS","isOutOfView","posX","eventHeight","_getEventBodyTitle","ignoreIfWorkEvent","isPublished","workSchedule","renderEventBody","viewStartMS","viewEndMS","viewName","leftRightOffset","dir","calEvent","CalendarEvent","timezone","timelineEv","TimelineEvent","bgColor","top","position","backgroundColor","padding","fontSize","overflow","textOverflow","whiteSpace","maxWidth","display","verticalAlign","renderSectionTitle","showCoverageRow","showForecast","getHeaderTimeCellView","contextualPanelCurrentView","onFocusChange","aggregatorStyle","contextDate","sections","shouldShowForecast","coverageIndex","hour","day","barChartData","weekDayCoverage","forecastStatus","cellLabel","coverageSum","section","coverageArray","runtimeData","dayViewCache","has","getForecastInfoDayView","weekViewCache","getForecastInfoWeekView","coverageVsForecast","dayCoverage","dateCls","onDateClick","keyFocus","setLocale","tabindex","on-keydown","which","on-mousedown","mouseEvent","on-focus","aria-label","renderForecastCellWeekView","renderForecastCellDayView","renderSectionHeader","level","ARIA_LABEL_COLLAPSED","ariaLabel","iconName","isCollapsed","section_id","attrs","renderEventSectionHeader","cellwidth","noScrolling","xSize","eventAreaClientWidth","floor","tableCellStyle","allSections","coverageByViewKey","getCoverage","coverage","rawSection","renderRowTitle","row","titleStyle","nameStyle","aria-hidden","userName","preciseTime","numberOfSections","xStep","xUnitName","ch","children","at_work","excluded","work_intervals","exclude_intervals","ev","eventStart","eventEnd","childEventData","child","childData","intervalStart","startOf","intervalEnd","k","isSameOrAfter","intervalData","interval","agentWorkShifts","workData","agentExclusions","excludeData","showAlertMessage","autoHide","autoHideTimeout","alertItem","setTimeout","alertId","hideAlertMessage","indexFound","findIndex","deleteCount","handleAlertListItemsSet","remainingItems","alertItems","FETCH_TEAMS","FETCH_TEAMS_SUCCESS","FETCH_TEAMS_FAILED","FETCH_TEAM_SCORES_START","FETCH_ALL_TEAM_SCORES","FETCH_ALL_TEAM_SCORE_SUCCESS","FETCH_ALL_TEAM_SCORE_FAILED","FETCH_LAST_X_DAYS","FETCH_LAST_X_DAYS_START","FETCH_LAST_X_DAYS_SUCCESS","FETCH_LAST_X_DAYS_ERROR","LAST_X_DAYS_DEFAULT","dataStore","prefix","getDateRangeFromStore","lastUsedStart","lastUsedEnd","lastXDays","parseInt","momentStart","momentEnd","isValid","subtract","defaultOptions","propertyName","fetchLastXDaysEffect","createGraphQLEffect","startActionType","successActionType","errorActionType","opts","oldDateRange","newDateRange","fetchUserCountEffect","variableList","fetchSkillLevelEffect","fetchSkillLevelCounts","createHttpEffect","method","dataParam","buildRows","categoryKey","categories","skillSet","skillset","skillKeys","buildCell","skill","skillId","colorCount","userSkill","approval","skillLevelId","userId","colorMap","params","rows","buildSkillXRows","users","skillsObject","userSet","skills","skillName","category","e","element","flip","buildSkillXGridModel","buildSkillYGridModel","commonColumnProps","emptyState","accumulator","currentValue","skillColumns","summaryRow","groupRows","skillColor","summaryRowData","getGridGroup","Date","getTime","preferenceData","categoryKeys","getCategoryGridGroup","buildPopoverSkillLevels","cell","skillLevels","dispatchFetchUserSkillsRequested","customCellRenderer","renderIcon","href","popoverTargetRef","createRef","current","presetSkillLevelId","ref","show-icon","skillLevelRelatedCellRenderer","addSkillRenderer","userSkillsFetchSucceeded","appliedSkillsObject","skillLevelCounts","addSkillToCategory","userCount","userHasSkill","userCategories","userSkillId","skill_level","collectSkillsInCategoriesFromUser","userSkills","skillInRes","cmn_skill_level","cmn_skill","inRes","indexInRes","v","totalCount","pagination","insertUserSkillWithNullValue","u","userArray","splice","collectSkillsInCategoriesFromRecommendations","results","Set","groupBy","_query","queryWithUser","sys_user_has_skill","_results","groupByRes","recommendations","skillSets","model","offset","managerId","queryUser","queryUserHasSkill","queryCategory","querySkill","recommendationCondition","queryAppliedSkills","appliedSkills","sys_user_grmember","userGroup","cmn_skill_m2m_category","skillsCategories","queryAppliedCategories","cmnSkill","paginationLimit","approvalCondition","handleButtonClick","maxUsersColumns","handlePagination","min","ceil","setUserPreference","userFetchSucceeded","userDistinctCount","rowcount","Number","getUserPreference","skillLevelCountsFetchSucceeded","skill_name","skill_levels","skill_level_name","user_count","updateStatus","__TECTONIC__$servicenow_now_tooltip","getSkillLevels","getPresetSkillLevelId","getSelectedSkillLevelId","selectedSkillLevelId","getRadioButtonOptions","getSelectedSkillLevel","checked","getRadioButtonMessages","getRadioButtonsProps","messages","skillCount","sc","skillValue","append-to-payload","buildGridProps","hideRowSelector","queryString","queryCondition","skillCountFetchSucceeded","aggregateResult","addColorCount","levelCount","SKILL_MULTI_NAME","TRAINING_MULTI_NAME","LOG","createLog","printResponseErrorEffect","makeEffectTakeLatest","effect","modifier","prepRelatedItemsUpdateEffect","selectedSkillIds","awardedSkills","trainings","selectedTrainingIds","assignedTrainings","asmtId","sanitizedSkillsIds","initialSkillIds","skillsToDelete","skillsToAdd","sanitizedTraining","initialTrainingIds","training","trainingsToDelete","trainingsToAdd","httpRequestData","assessment","awardedSkillsCond","assignedTrainingsCond","subscribe","skillTrainingQuery","awarded","sourceTable","sourceId","isAssessmentSkill","sublabel","allSkills","allTrainings","delay","trim","cleanValue","skillCondition","kbCondition","trainingCondition","skillQuery","allSkillsIdSet","existing","resultSkills","trainingQuery","allTrainingsSet","resultKBs","number","short_description","resultTrainings","selected","trainingTable","trainingId","recordWatcherActions","asmtRecordStateValue","completed","RECORD_STATUS_CHANGED","CAS_CARD_CLICKED","MANAGER_WORKSPACE_CONFIG_ID","SHOW_ALL_TEAMMATES","DETAIL_TYPE","IMAGE","TEXT","CONTACT","WEBSITE","RATING","ADDRESS","PHONE","LIST","HIGHLIGHTED_TEXT","TEXTAREA","LOWER_THRESHOLD","UPPER_THRESHOLD","SELECTABLE_ITEM","DETAIL_SECTION_TYPE","DETAILS","MANAGER","GROUPS","TEAMMATES","LOCATION","DETAILS_METADATA","primary_group","emptyValue","other_groups","location","phone","mobile_phone","home_phone","manager_primary_group","getValue","formatColumns","__TECTONIC__$servicenow_now_date_range_picker","hideActions","temp","channelId","tableName","elementSysId","hasRole","roles","role","getHeaderProps","isOverrideButtonDisabled","dataUpdatedTime","userRoles","preUserRoles","noOfButtons","headerLabel","headerLevel","headerVariant","isButtonEnabled","assignButton","customConf","refreshEvent","assignEvent","removeChannelId","channelIds","getSelectedChannelObj","channelData","channelIfo","defaultCapacity","isApplyDisabled","AGENT_KPI_ENDPOINT","FETCH_AGENT_KPI","FETCH_AGENT_KPI_SUCCEEDED","FETCH_AGENT_KPI_FAILED","LOADING_HEADER_TEXT","LOADING_BODY_TEXT","HEADER","FETCH_AGENT_PRESENCE_STATE_HISTORY_ENDPONT","FETCH_AGENT_PRESENCE_STATE_HISTORY","FETCH_AGENT_PRESENCE_STATE_HISTORY_SUCCEDDED","FETCH_AGENT_PRESENCE_STATE_HISTORY_FAILED","AGENT_PRESENCE_HISTORY_PIE_CLICKED","AGENT_PRESENCE_HISTORY_REFRESH_REQUESTED","HOUR","MINUTE","HOURS","MINUTES","AWA_AGENT_PRESENCE_TABLE","TITLE","COLUMNS","createColumn","createCell","member","FIRST_COLUMN","createTableColumns","createTableRows","primaryGroupLabel","memberNameCell","primaryMembersMap","scoreCells","scores","createTeam","createMemberFromJson","breakdowns","display_value","createIndicatorFromJson","kpi","display_aggregate","factsTableView","factsTable","m2mSysId","commonSelectors","commonTableProps","hideColumnResizing","getTeam","getMember","getMembers","getIndicator","getParentIndicators","parentIndicators","getChildIndicators","childIndicators","getSelectedDate","selectedDate","getPagination","getStatus","getDateRange","getPrimaryGroupLabel","getPrimaryBreakdown","getSecondaryBreakdown","getUuidString","isMemberPropProvided","getHeadingText","teamOrMemberName","indicatorName","primaryBreakdown","secondaryBreakdown","getUuidObject","element_sys_ids","getMemberIndicators","getSingleScoreValue","getTimeSeriesChartDataConfig","yesterday","includeForecast","start_time","end_time","include_statistics","include_trend","include_scores","include_forecast","getMemberScoreTableColumns","getMemberScoreTableRows","getMemberScoreTableModel","getTeamIndicators","getMemberScoreTableProps","getRecordTableProps","unshift","getTeamScoreGridColumns","getTeamScoreGridGroup","getTeamScoreGridModel","getTeamScoreTableProps","getPaginationProps","getDateRangePickerProps","userDateFormat","formattedDateRange","getMemberAvatarProps","ariaHidden","imageSrc","avatar","getRecordTableHeading","formattedDate","FETCH_QUEUES_IDS","FETCH_QUEUES_IDS_SUCCESS","QUEUES","CHANNEL_DEFAULT_TAB_ITEMS","CHANNEL_DEFAULT_TAB_LIST_DETAILS","FETCH_CHANNEL_SUPERVISOR_VIEW","FETCH_CHANNEL_SUPERVISOR_VIEW_SUCCESS","FETCH_CHANNEL_SUPERVISOR_VIEW_ERROR","documentId","DOCUMENT_ID","NUMBER_LABEL","DOC_TABLE","SHORT_DESC","SHORT_DESC_LABEL","QUEUE_LABEL","OPENED_FOR","OPENED_FOR_LABEL","PRIORITY","PRIORITY_LABEL","HELP_REQUESTED","HELP_REQUESTED_LABEL","WAIT_TIME","WAIT_TIME_LABEL","STATE_LABEL","UPDATED_AT","UPDATED_AT_LABEL","ASSIGNMENT_GROUP","DOCUMENT","documentIdReference","TABLE_NAME","allActiveWork","startIndex","endIndex","pageActiveWorkData","gridProps","paginatedActiveWork","buildPaginationModel","ACTIVE_WORK_REFRESH_REQUESTED","FETCH_ACTIVE_WORK","FETCH_ACTIVE_WORK_SUCCEEDED","FETCH_ACTIVE_WORK_FAILED","AGENTS_ACTIVE_WORK_ENDPOINT","channels","kpiScores","queuesIds","renderOverviewTabs","renderUserGroupFetcher","renderOverviewKpiContainer","isRefreshRequested","renderFilter","useDefaultSortOrder","useDefaultFilters","intervalId","isRequestCompleted","showFilter","active","fetchQueuesAndAgentsIds","fetchQueuesAndAgentsIdsSuccess","logErrorEffect","queryGroupQueueData","selectedGroupsCount","sn_wfo_manager_groups","grmember_group","updateDefaultSortOrderEffect","updateFiltersEffect","filtersAppliedEffect","fetchGroupChannelQueueMapping","fetchGroupChannelQueueMappingSuccess","_getFilterRelatedData","filterQuery","_renderIndicatorCardContainer","hasNoMargin","showTitle","overrideFilterConfig","filterRelatedData","resetFiltersOption","showLoadingIcon","tabItems","tabListDetails","selectedTab","_renderChannelsOverviewTabs","forManagedGroups","isAssignmentGroupUpdated","renderCards","cardData","cardItem","getAriaTextForIcon","expanded","generateCardDataForServiceChannels","overviewContainerExpanded","now","controls","ariaExpanded","aria-role","keyCode","tooltip-content","config-aria","icon-name","defaultProperties","renderKPIs","noIndicatorLabel","loadingScores","bodyText","renderMetaInfo","metaType","headerIcon","slot","getAriaTextForCard","itemName","cardHeight","headerSize","headerLines","underlined","INDICATOR_GROUP_CARD_PREFIX","__TECTONIC__$servicenow_now_collapse","getScore","report_id","reportData","reports","report","channel_id","fetchChannels","queryParams","fetchKpiScore","pathParams","batch","handleCardItemClick","requestChannelAPI","sysparm_query","addInterval","autoRefreshInterval","enableAutoRefresh","intervalInMillis","setInterval","removeInterval","clearInterval","interactive_parameters","interactive_filter","shouldRender","manualAssignment","showModal","selectedWorkItemId","isDone","alertStatus","workItemRowCount","refreshRequested","timestamp","background","selectedItem","listProps","headerProps","getAlertContent","workItemId","_renderTabContentWorkItem","variantHeader","component-id","_renderTabContent","mandatorySkills","optionalSkills","_renderList","_renderEmptyState","footer-actions","header-label","contentFullWidth","item-min-width","actionTypes","fetchAvailableAgentsAndWorkItemDetails","availableAgentsAndWorkItemDetailsQuery","handleManualAssignment","manualAssignmentWorkItemMutation","fetchAgentsAvailability","headers","Accept","host","workItemDetails","documentNumber","workItem","errors","GlideAWA_Mutation","GlideAWA_transfer","manual_assignment_work_item","agentsIds","record","Array","isArray","agentId","removeAgentId","columnToBeSorted","hideRowCount","hideRefreshText","getMainHeaderClass","getButtonClass","ARIA_CONFIG","timeAgo","dateBoth","systemTime","dateOnly","updateTimeAgo","remove","SnTimeAgo","setUpdateFn","tickTime","update","getTickTime","trimTimeAgo","__TECTONIC__sn_component_timeago","endsWith","loaderDuration","pageData","parsedQueryModel","list-model","hidePanelFooter","fetchQueuesReportData","maxPages","fetchAgentsReportData","buildQueuesGridModel","buildAgentsGridModel","userPrefUpdateEffect","userPrefUpdateQuery","filterComparisonEffect","filteredItems","filters","queuesData","buildQueuesParsedQueryModel","agentsData","buildAgentsParsedQueryModel","previousValue","newValue","prevValArray","newValArray","checkIfValueChanged","selectedTabIndex","nextDirection","updateOrderBy","updateUserPrefs","preferences","defaultSort","comparisonId","isFirstNonRef","service_channel","waiting_work_items","average_wait_time","available_agents","agents_not_available","work_items_assigned_today","work_items_cancelled_today","average_agent_utilization","service_level","getAllColumnsMap","currColumn","total_capacity","capacity_in_use","utilization","presence_state","can_take_work","getMomentRelativeTime","time_in_state","dateString","parsedDate","fromNow","selectionCount","labelsAvailable","groupFetchHandler","managedGroupFetchHandler","handlers","groupsData","managedGroupData","addManagedGroupData","sessionObject","groupsAvailable","userCondition","sessionStorageStringified","recordData","filterConfig","paddingRequired","recData","iterateRecords","tableNameField","typeField","filterName","filterConfiguration","appendToPayload","listMode","fieldType","selectedIds","configureFilter","wont-wrap","has-no-margin","bootstrapDetailsData","queryTableForRecords","recordRequestSuccess","dispForFilterSysIDReq","dispatchAppliedFiltersObject","resetFilters","stopPropagationOfPopoverEventSet","recordSysID","conditions","tableAndField","appliedItems","newFilter","nf","reduced","f","newFilterConfig","glideRecordQuery","managedQueues","groupQueues","fetchQueuesAndAgentsIdsQuery","queryConditions","groupsInAppliedBucket","groupsSelected","queueName","renderQueueTabs","renderSupervisorListConfigFetcher","supervisorListConfig","initializationDone","queuesysId","fetchReports","fetchReportsSuccess","fetchAllKpiReportConfig","fetchKpiReportConfig","fetchKpiReportConfigSuccess","FETCH_INTERACTIVE_REFERENCE_FIELD","fetchInteractiveReferenceField","fetchInteractiveReferenceFieldSuccess","fetchGroupInteractiveReferenceField","fetchGroupInteractiveReferenceFieldSuccess","updateSupervisorListConfig","_renderReportContainer","queueSysId","supervisorListConfigDetails","supervisorLists","supervisorList","tabTitle","supervisorListConfigQuery","_renderQueueTabs","renderReports","reportItem","dataConfigurations","border","fetchChannelSupervisorListConfig","fetchChannelSupervisorListConfigQuery","fetchWorkItemTableAlias","channelMgmtViews","configs","viewNames","channelMgmtView","tab_title","view_name","list_title","views","workItemAliases","config","queueReportsQuery","reportitem","report_name","referenceTable","referenceField","isUndefined","behaviors","alertListBehavior","scheduleView","scheduleProps","recordWatcherOverrideActions","scheduleActionHandlers","xStart","configAriaLive","dirtyState","showingCalendar","endpoint","showContextualPanel","_renderCalendar","hidden","_renderTabbedList","_renderContent","contextualPanel","activeView","availableViewTypes","availableTimezones","startingView","datePickerTemplates","spanColors","forecastEnabled","timelineDayTemplateRenderer","scheduleRenderer","timelineWeekTemplateRenderer","contextualPanelItems","allowEventCreation","_renderUserGroupFetcher","orderBy","orderByAsc","formView","agentTable","agentsQuery","currentSchedule","currentScheduleSysId","currentView","nextView","isLoading","modalOpened","transformState","recordWatcherInstances","fetchSchedules","onSuccess","fetchSchedule","scheduleSysId","watchScheduleAndShifts","actionsToDispatch","scheduleShiftIds","shift","unsubscribeAllRecordWatchers","pop","handleComponentBootstrapped","handleComponentDisconnected","handleFetchSchedulesStart","handleFetchSchedulesSuccess","meta","handleFetchSchedulesError","handleFetchScheduleSuccess","handleRecordStatusChanged","changeContextDate","newSchedule","removedAgents","addedAgents","isDirty","removeUnselectedAgentsFromShift","addAgentsToShift","addAgents","removeAgents","scheduleShift","handleNowCardClicked","handleNowCardHeaderActionClicked","dropdownAction","generatePreview","handleModalOpenedSet","modal","handleModalFooterActionClicked","handlePublishScheduleSuccess","handlePublishScheduleError","handleUnpublishScheduleSuccess","handleUnpublishScheduleError","handleDuplicateScheduleStart","handleDuplicateScheduleSuccess","newScheduleSysId","handleDuplicateScheduleError","handleDeleteWorkShiftSuccess","handleDeleteWorkShiftError","goToLoadingView","loadingState","goToListView","goToDetailView","goToEditView","goToCreateView","currentShift","existingAgentsIds","aid","handleAgentTypeaheadValueChanged","agentsCondition","handleDeleteScheduleSuccess","handleDeleteScheduleError","handleAgentUpdateSuccess","shiftId","workShift","handleAgentUpdateError","handleShiftOverlapCheckSuccess","handleShiftOverlapCheckError","fetchScheduleEffect","fetchSchedulesEffect","publishScheduleEffect","unpublishScheduleEffect","duplicateScheduleEffect","deleteWorkShiftEffect","selectedAgents","fetchAgentsEffect","agentsResult","currentAgentsIds","uniqueIdsSet","newAgent","addAgentToShiftEffect","deleteAgentFromShiftEffect","getNotificationsEffect","text","idx","createDebouncedShiftScheduleEffect","createShiftScheduleEffect","watchSchedulePlan","changes","watchScheduleShift","scheduleIndex","scheduleShiftIndex","deleteScheduleEffect","updateAgentsInWorkShift","checkIfWorkShiftOverlaps","fetchSchedulesQuery","templateVarList","fetchScheduleDetailQuery","FETCH_SCHEDULE_ERROR","fetchAgentsQuery","insertAgentsToShiftMutation","sessionNotifications","removeAgentFromShiftMutation","args","Error","renderError","renderLoading","renderNoSchedules","buildCardDropdown","dropdown","renderScheduleList","dropdowns","tooltipContent","hook-insert","elm","shadowRoot","querySelector","focus","_renderAgentAvatar","avatarProperties","scheduleState","maxAvatarsPerEntry","shifts","unpublishButton","duplicateButton","publishButton","deleteButton","footerButtons","footerActions","renderDeleteScheduleModal","iconStart","agentCount","isShiftLocked","shiftEntryAriaConfig","hiddenAgents","moreAgentsLabel","shiftCardEvent","spin","_renderShiftEntry","buttons-config","scheduleTitle","editable","scheduleName","itemMinWidth","delimiter","avatarProps","scheduleId","GFORM_INTERNAL_BATCH_ACTIONS","GFORM_SET_VALUE","getFooterButtons","placeholder","search","disable-auto-select","marginLeft","currentShiftSysId","workShiftSysId","renderDeleteShiftModal","selectedItems","loadingStateProps","dateTime","mismatchedTitle","mismatchedData","hasBarChart","hasShowAllLink","Fragment","bare","button","getBarChartProps","getBarChartData","getDateTime","seriesData","forecast","diff","hideYAxis","hideRegister","hideGridlines","extraMargin","bottom","right","left","xAxisConfig","tickConfig","strokeWidth","tickValues","chart","updateContextualPanelStyle","calendarElm","contextualPanelElm","calendarBounds","getBoundingClientRect","targetBounds","panelWidth","panelHeight","resizeHandler","removeResizeHandler","removeEventListener","_getViews","viewType","calendarRef","available-views","view-settings","eventMinWidthMS","hideAgendaView","security","allowCreate","customizableLabels","newButton","agendaEmptyState","current-view","popoverEnabled","popoverContentState","contextual-panel-items","justifyContent","select","trigger","manageSelectedItems","newEventItem","modalMode","modalEventSpanId","modalEventCategoryId","modalEventId","modalFormData","popoverTemplate","vnode","setupResizeHandler","addEventListener","hook-destroy","showAgentRequestIcons","marginRight","requestorDetails","_renderAction","renderEditEventModalComponent","renderDeleteEventModal","DAYS_LABEL","DAY_LABEL","START_LABEL","END_LABEL","_renderTimeRangeRow","isChildEvent","record_id","startMoment","endMoment","eventClass","labelStart","labelEnd","startId","endId","diffDays","ariaLabelDeleteBtn","high-contrast","_getModalDefaultActions","disallowSaveAction","eventTitle","_getModalTitle","modalId","_getModalId","spanId","header","textLinkProps","renderEditEventModalContent","__TECTONIC__$servicenow_now_record_time","showDeleteEventModal","ActionHandlers","_renderModal","defaultSwapTeamMates","requesteeValue","requestorSelectedShiftId","requesteeSelectedShiftId","_getFooterActions","fullName","readonly","componentId","requestorDate","selected-items","requestorShifts","required","onValueChange","onChange","isInValidSubmit","clickActionType","selectable","userFetchHandler","shiftSwapperProperties","handleFetchTeammates","swapTeammatesQuery","handleFetchTeammatesSuccess","responseData","userObj","teamMate","teamMatesData","retrieveRequestorShifts","retrieveRequesteeShifts","postSwapRequest","clearRequestorDetails","isEqual","requestorSelectedShiftObj","requestorDetailsObj","condition","pickerComponentId","newDate","newDateFormatted","dropDownId","swapPayload","swapReqNumber","suggestedAttendees","allDayEvent","_renderRequestModal","userSelectorLabel","titleInputRef","closeButton","manageInvalid","invalid","_getDateTimeSections","additionalSelectorsValue","addComponents","selector","fieldLabel","additionalQueryString","_renderAdditionalSelectors","manage-checked","disableSubmit","additionalSelectorData","selectorComponent","initialFormData","__TECTONIC__$servicenow_now_textarea","__TECTONIC__$servicenow_now_toggle","__TECTONIC__$devsnc_sn_declarative_actions","eventRequestModalProperties","upsertLabel","handleAttendeesTypeaheadValueChanged","allowAllUsers","attendeesCondition","handleNowInputValueChanged","fieldValue","handleNowTextAreaInputValueChanged","handleDynamicLookupFieldValueChanged","componentIndex","currentAdditionalSelectorData","copyCurrentAdditionalSelectorsData","newSelectedObject","handleUserInfo","currentUserDateFormat","currentUserDateTimeFormat","meridianMarker","handleDatePickerValueChanged","invalidDate","handleTimeValueChanged","invalidTime","handleRequestSave","operationMode","handleRequestCancel","handleEventRequestSubmitSuccess","handleEventRequestSubmitFailed","handleModalAlertActionCliked","handleAttendeesInvalid","fetchAttendeesEffect","currentSelectedAttendees","newAttendeesList","attendeeObj","uniqueSuggestions","fetchAllUsersAttendeesEffect","submitEventCreateEffect","submitEventEditEffect","fetchAttendeesQuery","fetchAllUsersAttendeesQuery","contextDateMoment","timeOffAttendee","dateTimeFormat","firstName","initials","language","lastName","handleComponentBootstrap","handleEventRequestModalSet","handleTimeOffSuccessful","timeOffRecords","timeOffRecord","startDateTimeMoment","endDateTimeMoment","CalendarProps","popoverShowEditButton","popoverShowDeleteButton","maxAttendeesToShow","fetchForecastData","fetchDefaultEvents","getEventCategories","eventCategoriesData","eventCategories","metadata","includeEvents","enclosedUnder","defaultEvent","eventCategoriesIncludedInOthers","flatMap","include_events","eventCategoriesEnclosedInOthers","enclosed_under","retrieveCalendarData","_getAssigneesForEvent","allEvents","eventId","_getEventOriginalSpanMetadata","filterOutEventsMarkedToDelete","handleSaveShiftChanges","_checkIfStartDatetimesAreBeforeEndDateTimes","edits","workStartMoment","workEndMoment","breakStartMoment","breakEndMoment","newEventSuccessHandler","actionInfo","alertMessage","handleDeleteEvent","allowedAdhocEvents","defaultEventTypes","newEventChoices","categoryId","userIsScheduleAdmin","eventsByEventType","eventMetadata","previousStartDate","previousEndDate","fail","forecastByGroup","groupForecastMap","timestampInCalendar","eventQueried","getTimeZones","dateFormatRegex","eventTypeKey","eventTypeValue","agentKey","agentValue","combinedEvents","objValue","srcValue","test","processedEvents","getEvents","getSections","isEventForCurrentUser","showTimeOffRequestIcon","showShiftSwapRequestIcon","getPopoverTemplate","updatedTimeZone","random","substring","convertedStartDateTime","convertedEndDateTime","startDateTimeSplit","endDateTimeSplit","eventSpan","newTime","eventToDelete","modalSource","actionType","stagedValue","agentScheduleSysId","breaks","evt","eventObj","breakInstance","_getShiftEditPayload","originalEntry","delete","swapEvent","timeOffEvent","requestPayload","endOf","dispatchFetchForecastData","showNewEvent","OPEN_NEW_EVENT_MODAL","today","clone","isSame","attendeesToUpdate","apiResponse","otherSection","textColor","parseEventsForUser","warn","ev1","ev2","schedulesForUserPerDay","spans","span","childSpans","getEventFromShift","participants","transformedTimeZones","CALENDAR_SHIFT_SWAP_LABEL","CALENDAR_TIME_OFF_LABEL","CALENDAR_EDIT_LABEL","CALENDAR_DELETE_LABEL","CALENDAR_BREAKS_LABEL","CALENDAR_HOURS_LABEL","CALENDAR_HOUR_LABEL","CALENDAR_DAYS_LABEL","CALENDAR_DAY_LABEL","CALENDAR_MINUTES_LABEL","CALENDAR_MINUTE_LABEL","getCalendarEventDurationString","__getChildEventDescription","getDurationString","durationType","durationString","getDurationFormatValue","showDurationAsHighlightedValue","getPopoverHtml","eventAriaLabel","getAriaDescriptionForEvent","wontWrap","getChildEventPopoverHtml","hasMore","renderEventParticipants","EM_DASH","String","fromCharCode","getForecastStatus","getMismatchedDataDayView","forecastSum","foundNullForecast","coverageKey","forecastKey","forecastByHour","fill","groupForecast","entireDayForecastStatus","momentContextDate","hasUnderstaffed","hasOverstaffed","coverageByHour","mismatched","coverageAtHour","forecastAtHour","getMismatchedDataWeekView","hourData","alignItems","onClick","ScheduleProps","bootstrap","fetchCurrentUserData","viewId","updateRecordCounts","fetchTableRecordCounts","handleComponentPropertyChanged","tab","recordCounts","log","previewActionHandlers","loadAllSchedules","fields","updatePreview","scheduleStateValue","scheduleStateDisplayValue","scheduleStartDate","scheduleStateUpdated","schedule_state","showSwapAlert","_renderSwapAlert","showTimeOffAlert","_renderTimeOffAlert","hiddenCalendar","hiddenTimeline","hiddenRequest","_renderUserGroup","_renderTimeline","actionLabel","teamConstants","teamProperties","teamsData","fetchTeamsHandler","handleFetchTeamsSuccess","errorHandler","handleFetchAllTeamScores","handleFetchAllTeamScoreSuccess","hasContent","renderIndicatorGroup","teamScores","skillMatrixLastRefresh","coachingView","coachingProps","coachingActionHandlers","isSkillMatrixTabSelected","qualityIndicatorJSON","_renderLoading","_renderOverview","manager-id","group-ids","_renderSkillMatrix","_renderOtherTabs","selected-item","userPreferencesBehavior","filterPanel","skillAssignmentPopoverProps","skillAssignmentPopoverContent","toggleSidePanel","refreshSkillMatrix","getAppliedFilters","groupsUsers","group_ids","showSkillAssignmentPopover","handlePopoverOpenedSet","SKILL_ASSIGNMENT_POPOVER","handleSkillAssignmentPopoverSubmit","userHasSkillId","newSkillLevel","handleAddSkillToUserSuccess","handleUpdateUserSkillLevelSuccess","updateSkillLevelId","handleRemoveSkillFromUserSuccess","modifiedCount","handleSkillAssignmentError","fetchMaxUsersColumnsEffect","fetchSkillLevelColorMapEffect","fetchUserSkillsEffect","addSkillToUserEffect","updateUserSkillLevelEffect","removeSkillFromUserEffect","_geticonUnit","_getIcons","CIRCLE_OUTLINED","icons","CIRCLE_QUARTER_FILL","CIRCLE_HALF_FILL","CIRCLE_THREE_QUARTER_FILL","_assignIcons","CIRCLE_FILL","setTargetRef","targetRef","tab-index","target-ref","addSkillToUserMutation","updateUserSkillLevelMutation","removeSkillFromUserMutation","containerRef","hook-update","old","childNode","firstChild","onscroll","panelTitle","renderHeader","renderPanelHeader","panelOpened","hidePadding","panelSize","isSkillMatrixVisible","offsetParent","isFilterPanelVisible","clientWidth","panelCloseBtn","__TECTONIC__$servicenow_now_record_list_panel","__TECTONIC__$servicenow_now_radio_buttons","radioButtonProps","selectedSkillLevel","oldValue","LAYOUT_MODEL","root","slotName","REPORTS","assessmentByState","reportTitle","reportId","styleConfigurations","dataLabelConfig","showTotal","totalLabel","showPercentages","assessmentByOpportunity","overdueTraining","autoClickBehavior","defaultQualityIndicatorProps","qualityIndicatorProps","indicator-ids","__TECTONIC__$devsnc_sn_layout","sys-id","auto-click-behavior","fetchSkillAndCountEffect","indicatorIds","selectedGroupId","__TECTONIC__$devsnc_sn_form_controls","managedGroupsQuery","fetchManagedGroupsGraphql","COACHING_VIS_FETCH_GROUPS_SUCCEEDED","directGroups","addGroups","CoachingProps","fetchManagerEffect","managerFetchSucceeded","changeTab","table_name","assessmentView","detailView","show","assessmentState","clicked","surveyView","triggerId","triggerTable","metricType","singleAsmt","loadingAssessments","assessments","asmtState","assessmentHeadingTag","purpose","currentTable","currentSysId","assessmentsState","trainee","assessment-view","asmt-id","survey-in-progress","assessments-state","task-id","task-table","surveyInProgress","allAwardedSkills","COMPLETE_BUTTON","getItemsWithHint","setMinHeightInCollapsedFormSection","childNodes","localName","minHeight","skillsSearchTerm","trainingsSearchTerm","skillItems","trainingItems","filter-type","awardedSkillQuery","enable","logLevel","LOG_LEVEL_ALL","LOG_LEVEL_ERROR","LOG_LEVEL_DEBUG","LOG_LEVEL_LOG","LOG_LEVEL_INFO","LOG_LEVEL_WARN","disable","_log","apply","debug","arguments","info","taskId","taskTable","asmtCards","asmt","renderListView","ASSESSMENTS_LIST_EMPTY_HEADER_MESSAGE","ASSESSMENTS_LIST_EMPTY_BODY_MESSAGE","renderCreateView","labelValueItems","truncated","due_date","SURVEY_BUTTONS","validationFunction","iframeRef","tabIndex","src","frame-border","iframeContentWindow","contentWindow","btnId","getElementById","click","actionId","getSurveyBtn","assessmentQuery","fetchAssessmentGraphql","canStartSurvey","survey","initialAssessmentsState","commonQuery","asmtQueryCondition","ASSIGNED_TO_ME_QUERY","ASSIGNED_MY_GROUP_QUERY","CAS_PAGE_LIMIT","showSurvey","trigger_id","trigger_table","metric_type","coach_survey","initialSurveyDetailViewState","capacityOverride","isError","__renderEmbeddedLists","lists","fixedQuery","__renderSubList","_renderCapacityOverrideMessage","node","scrollIntoView","behavior","sublists","agentDetails","isAgentAssociatedWithAwa","hasPermission","agentName","showAllTeammates","teammatesLimit","_renderUserEntry","avatarPayload","additionalIdentifier","_reduceGroups","commonLinkProps","keyTable","keyId","labelToShow","entry","_reduceDetailEntries","userDetail","_getSectionItems","userDetails","sys_Id","reducer","detailDisplayValue","detailValue","allowEmpty","layoutLabel","_reduceToItems","dataFlow","teammates","otherGroups","phoneEntries","_reducePhoneEntries","detailEntries","locationSection","showPresencePattern","userObject","_renderManager","_renderTeam","navigateToRelatedGroup","toggleTeammatesList","fetchUserDetailsEffect","processUserDetailsPayload","getUserDetails","templateVars","nestedQueryResults","queryResults","aggregates","reduceToFieldHighlightObject","_reference","render_type","skillRecomendationQuery","userDetailsQuery","CONFIG_KPI_LINK_TEXT","CONFIG_KPI_ARIA_LABEL","EMPTY_LABEL_PLACEHOLDER","_renderKPIErrorMessage","hasAdminRole","msg","opens-window","__getSelectedGroup","dropDownGroups","grp","cardDataTop","indicatorProfiles","rawData","selectedGroup","profile","indicatorMap","indicatorArray","indicatorMapObj","unit","cardLabel","__buildKPIMap","indicatorValueObj","kpiMap","aggregateType","normalizedValue","stats","formattedAverage","formattedSumOfScores","scoreIndicator","curr","next","_buildCardsPayload","containerClass","groupName","panel-fit-props","actionName","actionMetadata","ariaRole","__getAriaTextForCard","memberIdentifier","kpiCardProps","_renderUserIndicatorCard","effects","fetchGroupsAndIndicatorGroupsEffect","startLoadingState","fetchUserIndicatorGroups","handleFetchIndicatorToGroupsSuccess","fetchGroupIndicatorScoresEffect","handleFetchGroupIndicatorScoresSucceded","handleUpdateSelectedGroup","onComponentPropertyChanged","assignmentGroupBreakdown","assignedToBreakdown","breakdownRelation","fetchUserIndicatorData","dateRangeStart","dateRangeEnd","profiles","groupResult","indicatorGroups","_currentUserHasAccessToGroup","groupSysId","currentUserId","managedGroupsJSON","_excludeGroupsWhereCurrentUserIsNotManager","groupsPayload","groupPayload","updateStateValues","primaryGroup","previousStart","newStart","previousEnd","newEnd","recordWatcherActionHanders","ASSIGN_SKILLS_BUTTON_LABEL","_renderSkillCards","cards","card","skillData","proficiencyBreakdown","Proficiency","colorsAvailable","prev","showTooltip","tooltipConfig","smallSpacing","oneLine","oritentation","__renderProficiencyChart","recommendationLoading","hideRecommendation","_renderSkillRecommendation","recommendedSkill","hide-caret","hide-label","_renderRecommendationHeader","taskCount","rejectedCount","_renderRecommendationBody","_renderRecommendationFooter","fetchSkillCountDataEffect","fetchSkillCountHandlerEffect","fetchSkillRecommendations","skillRecommendationsHandler","updateLoadingState","assignSkill","handleDropdownItemSelectedEffect","proficiencyCondition","skillsCountArray","aggregateData","proficiencyData","aggregate","skillType","levelIntValue","accum","_processAggregatePayload","showSkillsModuleLink","skillsCountCards","drilldownIntoList","renderer_type","userPredictedSkill","task_count","rejectedTaskCount","rejected_task_count","approvalState","listType","maxColumns","hideTitle","channelsData","selectedChannelIds","overrideModal","channelInfo","agentInfo","len","cssClass","overridenCapacity","totalCapacity","step","handlOverrideCapacityRequested","handleFOverrideCapacityMessage","overridenCapacityValue","isInteger","parseFloat","buildBootstrapData","fetchUserChannelData","channelName","capacityInUse","_renderReports","data_configurations","totalNumberOfReports","fetchAgentKpi","agentPresenceHistory","_renderNowDonutChart","presenceStateHistory","registerPosition","interactions","getInteraction","orientation","disableGrid","labelTruncation","showDataLabels","valueType","labelSize","formatTime","locale","accessibilityConfig","monochrome","pie","__TECTONIC__$servicenow_now_chart_donut_pie","eventName","dispatchName","splittedValue","formattedString","fetchBootStrapData","handleFetchAgentPresenceHistory","presenceHistory","disableQuickEdit","gForm","fetchAgentAssociationWithAwa","FETCH_AGENT_ASSOCIATION_WITH_AWA_FAILED","userInfo","chromeTabActive","CHROME_TAB_ACTIVE_CHANGED","mutationObserver","WeakMap","setupObserver","chromeTab","closestElement","observer","MutationObserver","mutations","observe","attributes","attributeOldValue","attributeFilter","disconnect","helper","assignedSlot","found","closest","getRootNode","schema","visible","__TECTONIC__$servicenow_now_pagination","fetchScores","secondaryBreakDown","fetchPrimaryMembers","uncachedMembers","handleFetchIndicatorsSuccess","assignmentGroup","indicatorResult","parentIndicatorsResult","childIndicatorsResults","handleFetchScoresSuccess","teamJson","membersJson","handleFetchMemberDataSuccess","handleFetchPrimaryMembersSuccess","resultMap","newTeam","handleTimeSeriesClick","onComponentBootstrapped","handleErrors","fetchParentIndicatorsEffect","fetchIndicatorsEffect","fetchScoresEffect","fetchMemberDataEffect","fetchPrimaryMembersEffect","fetchParentIndicatorsQuery","fetchIndicatorsQuery","fetchMemberDataQuery","scoreTextStyles","customRenderer","rowCellIndex","checkFocusIn","focusIsWithin","focusWithinClassManager","el","on-blur","preventDefault","renderMemberName","groupIdentifier","groupParams","destination","renderScore","elementHasActiveElement","activeElement","contains","container","classList","renderContent","hasTeam","hasMember","hasMembers","hasIndicator","hasParentIndicators","hasChildIndicators","hasFactsTable","showHeader","showRibbon","showTeamScores","showMemberScores","showRecords","headingText","dateRangePickerProps","chartDataConfig","singleScoreValue","chartType","renderRibbon","paginationProps","renderTeamScoresTable","renderMemberScoresTable","recordTableProps","renderRecordsTable","source_table","approvingId","document_id","recommendationProps","renderBody","skillRecommendationQuery","renderChannelTabs","_renderChannelTabs","_renderSupervisorListConfigFetcher","fetchQueuesIdsSuccess","channelReportsQuery","fetchQueuesIds","fetchQueuesIdsQuery","channelSysId","some","isQueueRelatedToGroupsSelected","article","handleFetchTraingRecordSuccess","articleResult","contentHtml","learning_category","updatedOn","sys_updated_on","fetchTrainingRecordEffect","fetchTrainingRecordQuery","renderArticle","articleContentHtml","createElement","innerHTML","recommendationTable","recommendationId","overlappingRequests","requestSysId","handleFetchOverlappingRequestsSuccess","handleFetchOverlappingRequestsError","handleCardClick","approvalSysId","fetchOverlappingRequestsEffect","fetchOverlappingRequestsQuery","request","getCardAriaLabel","getCardStatus","requestState","fetchActiveWork","paginatedActiveWorkData","AWA_WORK_ITEM","LIST_TITLE"],"mappings":"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","file":"manager-workspace-components.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 145);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","import { t } from 'sn-translate';\n//common constants\n\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const PA_INDICATORS = 'pa_indicators';\nexport const SYS_USER_GROUP = 'sys_user_group';\nexport const SYS_USER = 'sys_user';\nexport const KPI_GROUP_M2M_PA_INDICATORS =\n\t'sn_team_perf_kpi_group_m2m_pa_indicators';\nexport const MODULES = {\n\tCHANNELS: 'channels',\n\tTEAMS: 'teams',\n\tCOACHING: 'coaching',\n\tSHIFTS: 'shifts'\n};\nexport const BREAKDOWN_ASGN_GROUP = 'baec0752bf130100b96dac808c0739ed';\nexport const INDICATOR_GROUP_LABEL = t('Indicator Group');\nexport const GROUP_LABEL = t('Group');\nexport const INDICATOR_LABEL = t('Indicator');\nexport const SCORE_LABEL = t('Score');\nexport const SCORE_NA_LABEL = t('N/A');\nexport const ASSIGNMENT_GROUP_LABEL = t('Assignment Group');\nexport const ONE_OF_MY_GROUPS_FILTER_ID = 'd6435e965f510100a9ad2572f2b47744';\nexport const USER_IS_SHIFT_AGENT_FILTER_ID = '0c57f109b3230010ed7fc9c316a8dcef';\nexport const SCHEDULE_MODULE_SYSID = '79397238b3210010ed7fc9c316a8dced';\nexport const COACHING_MODULE_SYSID = '247afe38b3210010ed7fc9c316a8dcca';\nexport const CHANNELS_MODULE_SYSID = 'a40a067a0f430010fe85fb8585767e3e';\n\nexport const NOW_CALENDAR_SET_CONTEXTUAL_PANEL_VIEW =\n\t'NOW_CALENDAR#SET_CONTEXTUAL_PANEL_VIEW';\n\nexport const APPLIED_FILTERS_OBJECT = 'APPLIED_FILTERS_OBJECT';\n\nexport const BREAKDOWNS = {\n\tassignment_group: 'baec0752bf130100b96dac808c0739ed',\n\tassigned_to: '99b05263eb00020065deac6aa206fe82'\n};\nexport const BREAKDOWN_RELATIONS = {\n\tmembers: 'e1419263eb00020065deac6aa206fe1d'\n};\n\n//TEAMS PA Properties\n\nexport const SYS_PROP_TEAMS = {\n\tBREAKDOWN_ASSIGNMENT_GROUP: 'sn_team_perf.breakdown.assignment_group_id',\n\tBREAKDOWN_ASSIGNED_TO: 'sn_team_perf.breakdown.assigned_to_id',\n\tBREAKDOWN_RELATION_MEMBERS: 'sn_team_perf.breakdown_relation.members'\n};\n\nexport const API_DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const PAGINATION_PAGE_UPDATE = 'NOW_PAGINATION#PAGE_UPDATE';\nexport const PAGINATION_LIMIT_UPDATE = 'NOW_PAGINATION#LIMIT_UPDATE';\n\nexport const HTTP_ERROR_OCCURRED = 'HTTP_ERROR_OCCURRED';\n\nexport const ITSM_MANAGER_VIEW = 'workspace';\n// record watcher constants\nexport const RECORD_WATCHER_UPDATED = 'RECORD_WATCHER_UPDATED';\nexport const RW_ACTIONS = {\n\tSUBSCRIPTION_STARTED: 'SUBSCRIPTION_STARTED',\n\tSUBSCRIPTION_SUCCEEDED: 'SUBSCRIPTION_SUCCEEDED',\n\tSUBSCRIPTION_FAILED: 'SUBSCRIPTION_FAILED',\n\tMESSAGE_RECEIVED: 'MESSAGE_RECEIVED',\n\tSUBSCRIPTION_UNSUBSCRIBED: 'SUBSCRIPTION_UNSUBSCRIBED'\n};\n\n// Constants for sn-manager-calendar\n\nexport const CALENDAR_SECTION_BACKGROUND_COLOR =\n\t'RGB(var(--now-color--neutral-2,228,230,231))';\nexport const CALENDAR_SECTION_TEXT_COLOR = '';\nexport const CALENDAR_ROW_BACKGROUND_COLOR = '#ffffff';\nexport const CALENDAR_ROW_TEXT_COLOR =\n\t'var(--now-color--text-primary,22,27,28)';\n\nexport const CALENDAR_EVENTS = {\n\tWORK_SHIFT: {\n\t\tSYS_ID: '8d03fd9b0f310010717cc562ff767e4a',\n\t\tTYPE: 'work',\n\t\tCATEGORY: '07e433f449a11010f877de942e7c1d18'\n\t},\n\tBREAK: {\n\t\tSYS_ID: '0b13fd9b0f310010717cc562ff767e2d',\n\t\tTYPE: 'break',\n\t\tCATEGORY: 'f8e6b3f449a11010f877de942e7c1db9'\n\t},\n\tTIME_OFF: {\n\t\tSYS_ID: '49891e0d0faf0010717cc562ff767e72',\n\t\tTYPE: 'time_off',\n\t\tCATEGORY: '066c33f849a11010f877de942e7c1d4b'\n\t}\n};\n\nexport const CALENDAR_DRAFT_COLOR = '#758284';\nexport const CALENDAR_DRAFT_BREAK_COLOR = '#2C3537';\nexport const CALENDAR_DRAFT_TEXT_COLOR = '#ffffff';\n\nexport const CALENDAR_VIEWS = {\n\tCALENDAR: {\n\t\tDAY: 'CALENDAR_DAY',\n\t\tWEEK: 'CALENDAR_WEEK',\n\t\tMONTH: 'CALENDAR_MONTH'\n\t},\n\tTIMELINE: {\n\t\tDAY: 'TIMELINE_DAY',\n\t\tWEEK: 'TIMELINE_WEEK'\n\t}\n};\n\nexport const CALENDAR_VIEW_CONFIGS = {\n\t[CALENDAR_VIEWS.CALENDAR.DAY]: {\n\t\tview: CALENDAR_VIEWS.CALENDAR.DAY,\n\t\tviewProvider: 'DAY',\n\t\tlabel: t('Day'),\n\t\ttype: 'Calendar'\n\t},\n\t[CALENDAR_VIEWS.CALENDAR.WEEK]: {\n\t\tview: CALENDAR_VIEWS.CALENDAR.WEEK,\n\t\tviewProvider: 'WEEK',\n\t\tlabel: t('Week'),\n\t\ttype: 'Calendar'\n\t},\n\t[CALENDAR_VIEWS.CALENDAR.MONTH]: {\n\t\tview: CALENDAR_VIEWS.CALENDAR.MONTH,\n\t\tviewProvider: 'MONTH',\n\t\tlabel: t('Month'),\n\t\ttype: 'Calendar'\n\t},\n\t[CALENDAR_VIEWS.TIMELINE.DAY]: {\n\t\tview: CALENDAR_VIEWS.TIMELINE.DAY,\n\t\tviewProvider: 'TIMELINE_DAY',\n\t\tlabel: t('Day'),\n\t\ttype: 'Timeline'\n\t},\n\t[CALENDAR_VIEWS.TIMELINE.WEEK]: {\n\t\tview: CALENDAR_VIEWS.TIMELINE.WEEK,\n\t\tviewProvider: 'TIMELINE_WEEK',\n\t\tlabel: t('Week'),\n\t\ttype: 'Timeline'\n\t}\n};\n\nexport const CALENDAR_EVENT_MIN_WIDTH_MS = 15 * 60 * 1000;\n\nexport const CALENDAR_INDIVIDUALLY_QUERIED_ID = 'user';\nexport const CALENDAR_INDIVIDUALLY_QUERIED_LABEL = t('Other');\n\nexport const CALENDAR_ACTION_PREFIX = 'SN_MANAGER_CALENDAR#';\nexport const CALENDAR_ACTIONS = {\n\tDATE_RANGE_CHANGED: `NOW_CALENDAR#RANGE_UPDATED`,\n\tGET_DEFAULT_EVENTS: `${CALENDAR_ACTION_PREFIX}GET_DEFAULT_EVENTS`,\n\tDEFAULT_EVENTS_RETRIEVED: `${CALENDAR_ACTION_PREFIX}DEFAULT_EVENTS_RETRIEVED`,\n\tCHANGE_CONTEXT_DATE: `${CALENDAR_ACTION_PREFIX}CHANGE_CONTEXT_DATE`,\n\tFETCH_CALENDAR_DATA: `${CALENDAR_ACTION_PREFIX}FETCH_CALENDAR_DATA`,\n\tRETRIEVED_CALENDAR_DATA: `${CALENDAR_ACTION_PREFIX}RETRIEVED_CALENDAR_DATA`,\n\tCOULD_NOT_RETRIEVE_DATA: `${CALENDAR_ACTION_PREFIX}COULD_NOT_RETRIEVE_DATA`,\n\tCHECK_FOR_SPAN_UPDATE: `${CALENDAR_ACTION_PREFIX}CHECK_FOR_SPAN_UPDATE`,\n\tUPDATE_SCHEDULE_SPANS: `${CALENDAR_ACTION_PREFIX}UPDATE_SCHEDULE_SPANS`,\n\tLIVE_RELOAD_DATA: `${CALENDAR_ACTION_PREFIX}LIVE_RELOAD_DATA`,\n\tNEW_EVENT: 'NOW_CALENDAR#GRID_CLICKED_NEW_EVENT',\n\tNEW_EVENT_FROM_POPOVER: `${CALENDAR_ACTION_PREFIX}NEW_EVENT_FROM_POPOVER`,\n\tDROPDOWN_SELECTED_ITEM_SET: 'NOW_DROPDOWN#SELECTED_ITEMS_SET',\n\tFETCH_FORECAST_DATA: `${CALENDAR_ACTION_PREFIX}FETCH_FORECAST_DATA`,\n\tFETCH_FORECAST_DATA_SUCCESS: `${CALENDAR_ACTION_PREFIX}FETCH_FORECAST_DATA_SUCCESS`,\n\tSHOW_DEMAND_FORECAST_POPOVER: `${CALENDAR_ACTION_PREFIX}SHOW_DEMAND_FORECAST_POPOVER`\n};\n\n// Constants for sn-manager-schedule\n\nexport const SCHEDULE_PROPERTY_DEFAULTS = {\n\tENDPOINT: '/api/sn_shift_planning/shift_planning/agent_schedules',\n\tAVAILABLE_TIMEZONES: [\n\t\t{\n\t\t\tname: 'GMT',\n\t\t\tlabel: t('GMT')\n\t\t},\n\t\t{\n\t\t\tname: 'America/Los_Angeles',\n\t\t\tlabel: t('America/Los_Angeles')\n\t\t},\n\t\t{\n\t\t\tname: 'US/Eastern',\n\t\t\tlabel: t('US/Eastern')\n\t\t}\n\t],\n\tTIMEZONE: 'America/Los_Angeles',\n\tTIMEFORMAT: 'HH:mm',\n\tDATE_FORMAT: 'YYYY-MM-DD',\n\tXSTEP: 60,\n\tXSIZE: 24,\n\tXSTART: 0,\n\t// prettier-ignore\n\tDATE_PICKER_TEMPLATE: {\n        CALENDAR_DAY: 'startMoment ? startMoment.format(\\'MMMM D, YYYY\\') : \\'\\'', // eslint-disable-line\n\t\tCALENDAR_WEEK:\n            'startMoment ? startMoment.format(\\'MMMM D\\') + \\' - \\' + endMoment.format(\\'MMMM D, YYYY\\') : \\'\\'', // eslint-disable-line\n\t\tCALENDAR_MONTH:\n            'startMoment ? startMoment.add(14, \\'days\\').format(\\'MMMM YYYY\\') : \\'\\'', // eslint-disable-line\n        TIMELINE_DAY: 'startMoment ? startMoment.format(\\'MMMM D, YYYY\\') : \\'\\'', // eslint-disable-line\n\t\tTIMELINE_WEEK:\n            'startMoment ? startMoment.format(\\'MMMM D\\') + \\' - \\' + endMoment.format(\\'MMMM D, YYYY\\') : \\'\\'' // eslint-disable-line\n\t}\n};\n\nexport const SCHEDULE_DELETE_EVENT_API_ENDPOINT =\n\t'/api/sn_shift_planning/shift_planning/delete_event';\n\nexport const SCHEDULE_CALENDAR_VIEW =\n\t'sn_manager_schedule_calendar_component_tab_view';\n\nexport const SCHEDULE_RECORD_TABLE = 'sn_shift_planning_agent_schedule';\n\nexport const SCHEDULE_TABBED_LISTS = {\n\tSCHEDULES: 'sn_shift_planning_schedule_plan',\n\tSHIFTS: 'sn_shift_planning_shift_plan',\n\tAPPROVALS: 'sysapproval_approver'\n};\n\nexport const SCHEDULE_TABBED_LIST_LABELS = {\n\t[SCHEDULE_CALENDAR_VIEW]: t('Calendar'),\n\t[SCHEDULE_TABBED_LISTS.SCHEDULES]: t('Schedules'),\n\t[SCHEDULE_TABBED_LISTS.SHIFTS]: t('Shifts'),\n\t[SCHEDULE_TABBED_LISTS.APPROVALS]: t('Shift Approvals')\n};\n\nexport const SCHEDULE_TABBED_LIST_QUERIES = {\n\t[SCHEDULE_TABBED_LISTS.APPROVALS]:\n\t\t'state=requested^source_table=sn_shift_planning_agent_schedule_request^ORsource_table=sn_shift_planning_shift_swap_request^approverDYNAMIC90d1921e5f510100a9ad2572f2b477fe'\n};\n\nexport const SCHEDULE_AGENT_CALENDAR_VIEW =\n\t'sn_manager_agent_schedule_calendar_component_tab_view';\n\nexport const SCHEDULE_AGENT_TEAM_CALENDAR_VIEW =\n\t'sn_manager_agent_schedule_timeline_component_tab_view';\n\nexport const SCHEDULE_AGENT_TABBED_LISTS = {\n\tTIME_OFF: 'sn_shift_planning_agent_schedule_request',\n\tSHIFT_SWAP: 'sn_shift_planning_shift_swap_request',\n\tAPPROVALS: 'sysapproval_approver'\n};\n\nexport const SCHEDULE_AGENT_TABBED_LIST_LABELS = {\n\t[SCHEDULE_AGENT_CALENDAR_VIEW]: t('My Calendar'),\n\t[SCHEDULE_AGENT_TEAM_CALENDAR_VIEW]: t('Team Calendar'),\n\t[SCHEDULE_AGENT_TABBED_LISTS.TIME_OFF]: t('Time Off Requests'),\n\t[SCHEDULE_AGENT_TABBED_LISTS.SHIFT_SWAP]: t('Shift Swap Requests'),\n\t[SCHEDULE_AGENT_TABBED_LISTS.APPROVALS]: t('Shift Approvals')\n};\n\nexport const SCHEDULE_AGENT_TABBED_LIST_COLUMNS = {\n\t[SCHEDULE_AGENT_TABBED_LISTS.TIME_OFF]: 'title,start,end,description,state',\n\t[SCHEDULE_AGENT_TABBED_LISTS.SHIFT_SWAP]:\n\t\t'number,requestor_shift_start,requestor_shift_end,requestee,requestee_shift_start,requestee_shift_end,state',\n\t[SCHEDULE_AGENT_TABBED_LISTS.APPROVALS]: 'state,document_id'\n};\n\nexport const SCHEDULE_AGENT_TABBED_LIST_QUERIES = {\n\t[SCHEDULE_AGENT_TABBED_LISTS.TIME_OFF]:\n\t\t'agentDYNAMIC90d1921e5f510100a9ad2572f2b477fe',\n\t[SCHEDULE_AGENT_TABBED_LISTS.SHIFT_SWAP]:\n\t\t'requestorDYNAMIC90d1921e5f510100a9ad2572f2b477fe',\n\t[SCHEDULE_AGENT_TABBED_LISTS.APPROVALS]:\n\t\t'state=requested^source_table=sn_shift_planning_agent_schedule_request^ORsource_table=sn_shift_planning_shift_swap_request^approverDYNAMIC90d1921e5f510100a9ad2572f2b477fe'\n};\n\nexport const MANAGER_WORKSPACE_VIEW = 'manager_workspace';\nexport const SCHEDULE_FIELDS = {\n\tSTATE: 'state',\n\tSTART_DATE: 'default_start_date',\n\tEND_DATE: 'default_end_date'\n};\nexport const SCHEDULE_PLAN_STATE = {\n\tDRAFT: '1',\n\tQUEUED_FOR_PROCESSING: '2',\n\tGENERATING_PREVIEW: '3',\n\tREADY_FOR_PREVIEW: '4',\n\tPUBLISHED: '5'\n};\n\nexport const SCHEDULE_ACTION_PREFIX = 'SN_MANAGER_SCHEDULE#';\nexport const SCHEDULE_ACTIONS = {\n\tSELECTED_ITEM_SET: 'NOW_TABS#SELECTED_ITEM_SET',\n\tFETCH_CURRENT_USER_DATA: `${SCHEDULE_ACTION_PREFIX}FETCH_CURRENT_USER_DATA`,\n\tCURRENT_USER_DATA_OBTAINED: `${SCHEDULE_ACTION_PREFIX}CURRENT_USER_DATA_OBTAINED`,\n\tTABBED_LIST_FETCH_REQUESTED:\n\t\t'NOW_RECORD_LIST_CONNECTED#DATA_FETCH_REQUESTED',\n\tFETCH_TABLE_RECORD_COUNTS: `${SCHEDULE_ACTION_PREFIX}FETCH_TABLE_RECORD_COUNTS`,\n\tTABLE_RECORD_COUNTS_OBTAINED: `${SCHEDULE_ACTION_PREFIX}TABLE_RECORD_COUNTS_OBTAINED`,\n\tCOULD_NOT_RETRIEVE_DATA: `${SCHEDULE_ACTION_PREFIX}COULD_NOT_RETRIEVE_DATA`,\n\tSCHEDULE_STATE_DIRTY: `${SCHEDULE_ACTION_PREFIX}SCHEDULE_STATE_DIRTY`,\n\tSCHEDULE_STATE_UPDATED: 'SCHEDULE_STATE_UPDATED'\n};\n\nexport const SCHEDULE_AGENT_LABEL = t('Calendar');\nexport const SCHEDULE_AGENT_ACTION_PREFIX = 'SN_MANAGER_AGENT_SCHEDULE#';\nexport const SCHEDULE_AGENT_ACTIONS = {\n\tSELECTED_ITEM_SET: 'NOW_TABS#SELECTED_ITEM_SET',\n\tTABBED_LIST_FETCH_REQUESTED:\n\t\t'NOW_RECORD_LIST_CONNECTED#DATA_FETCH_REQUESTED',\n\tFETCH_TABLE_RECORD_COUNTS: `${SCHEDULE_AGENT_ACTION_PREFIX}FETCH_TABLE_RECORD_COUNTS`,\n\tTABLE_RECORD_COUNTS_OBTAINED: `${SCHEDULE_AGENT_ACTION_PREFIX}TABLE_RECORD_COUNTS_OBTAINED`,\n\tCOULD_NOT_RETRIEVE_DATA: `${SCHEDULE_AGENT_ACTION_PREFIX}COULD_NOT_RETRIEVE_DATA`,\n\tSHIFT_SWAP_SUBMIT_SUCCESS: `SHIFT_SWAP_SUBMIT_SUCCESS`\n};\n\nexport const SCHEDULE_AGENT_REQUEST_TABLE =\n\t'sn_shift_planning_agent_schedule_request';\nexport const SCHEDULE_AGENT_REQUEST_SHIFT_SWAP =\n\t'SCHEDULE_AGENT_REQUEST_SHIFT_SWAP';\nexport const SCHEDULE_AGENT_REQUEST_TIME_OFF =\n\t'SCHEDULE_AGENT_REQUEST_TIME_OFF';\n\nexport const SCHEDULE_AGENT_UI_ACTIONS = {\n\tREQUEST_SHIFT_SWAP: {\n\t\tlabel: t('Request shift swap'),\n\t\taction: SCHEDULE_AGENT_REQUEST_SHIFT_SWAP\n\t},\n\tREQUEST_TIME_OFF: {\n\t\tlabel: t('Request time off'),\n\t\taction: SCHEDULE_AGENT_REQUEST_TIME_OFF\n\t}\n};\n\nexport const USER_GROUP_ACTION_PREFIX = 'SN_MANAGER_USER_GROUPS#';\nexport const USER_GROUP_ACTIONS = {\n\tGROUPS_FETCH: `${USER_GROUP_ACTION_PREFIX}GROUPS_FETCH`,\n\tMANAGED_GROUPS_FETCH: `${USER_GROUP_ACTION_PREFIX}MANAGED_GROUPS_FETCH`,\n\tGROUPS_FETCH_SUCCEEDED: `${USER_GROUP_ACTION_PREFIX}GROUPS_FETCH_SUCCEEDED`,\n\tGROUPS_FETCH_FAILED: `${USER_GROUP_ACTION_PREFIX}GROUPS_FETCH_FAILED`,\n\tGROUPS_READY: `${USER_GROUP_ACTION_PREFIX}GROUPS_READY`\n};\n\nexport const USER_INFO_ACTION_PREFIX = 'SN_USER_INFO#';\nexport const USER_INFO_ACTIONS = {\n\tUSER_INFO_FETCH: `${USER_INFO_ACTION_PREFIX}USER_INFO_FETCH`,\n\tUSER_INFO_FETCH_SUCCEEDED: `${USER_INFO_ACTION_PREFIX}USER_INFO_FETCH_SUCCEEDED`,\n\tUSER_INFO_FETCH_FAILED: `${USER_INFO_ACTION_PREFIX}USER_INFO_FETCH_FAILED`,\n\tUSER_INFO_READY: `${USER_INFO_ACTION_PREFIX}USER_INFO_READY`\n};\n\nexport const NOW_DATE_RANGE_PICKER_VALUE_CHANGED =\n\t'NOW_DATE_RANGE_PICKER#VALUE_CHANGED';\n\nexport const USER_GROUPS_RESULT =\n\t'payload.data.GlideRecord_Query.sys_user_grmember._results';\nexport const USER_GROUPS_RESULT_NODE = 'group.value';\n\nexport const USER_INFO_RESULT = 'payload.data.GlideDomain_Query.user';\n\nexport const USER_GROUPS_MANAGED_RESULT =\n\t'payload.data.GlideRecord_Query.sys_user_group._results';\nexport const USER_GROUPS_MANAGED_RESULT_NODE = 'sys_id.value';\n\nexport const USER_GROUPS_MANAGED_ADDITIONAL_RESULT =\n\t'payload.data.GlideRecord_Query.sn_wfo_add_manager._results';\nexport const USER_GROUPS_MANAGED_ADDITIONAL_RESULT_NODE =\n\t'assignment_group.value';\n\nexport const PROPERTIES_SET = 'PROPERTIES_SET';\n\nexport const SN_VISUALIZATION_POINT_CLICKED = 'SN_VISUALIZATION#POINT_CLICKED';\nexport const NOW_CARD_CLICKED = 'NOW_CARD#CLICKED';\nexport const NOW_CARD_HEADER_ACTION_CLICKED = 'NOW_CARD_HEADER#ACTION_CLICKED';\nexport const NOW_MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\nexport const NOW_MODAL_FOOTER_ACTION_CLICKED =\n\t'NOW_MODAL#FOOTER_ACTION_CLICKED';\nexport const NOW_POPOVER_OPENED_SET = 'NOW_POPOVER#OPENED_SET';\n\nexport const RECOMMENDATION_ACTIONS = [\n\t{ id: 0, label: t('Review') },\n\t{ id: 1, label: t('Add Skill') },\n\t{ id: 2, label: t('Reject') },\n\t{ id: 3, label: t('Hide') }\n];\n\nexport const NOW_ALERT_ACTION_CLICKED = 'NOW_ALERT#ACTION_CLICKED';\nexport const NOW_ALERT_LIST_ITEMS_SET = 'NOW_ALERT_LIST#ITEMS_SET';\nexport const DISMISS_SWAP_ALERT = 'dismiss_swap_alert';\nexport const DISMISS_TIME_OFF_ALERT = 'dismiss_timeoff_alert';\n\nexport const NOW_DROPDOWN_ITEM_SELECTED = 'NOW_DROPDOWN#SELECTED_ITEMS_SET';\nexport const NOW_DROPDOWN_ITEM_CLICKED = 'NOW_DROPDOWN#ITEM_CLICKED';\n\nexport const NOW_RADIO_BUTTONS_VALUE_SET = 'NOW_RADIO_BUTTONS#VALUE_SET';\n\nexport const ADMIN_EMPTY_ERROR_MESSAGE = t(\n\t'Please associate this user to a group with Team KPIs.'\n);\nexport const USER_EMPTY_ERROR_MESSAGE = t(\n\t'Please contact your administrator to setup Team KPIs.'\n);\nexport const CONTACT_ADMIN_MESSAGE = t(\n\t'Please contact your admin for more info.'\n);\n\nexport const EMPTY_STATE_TYPES = {\n\tEMPTY: 'empty',\n\tLOADING: 'loading'\n};\n\nexport const KB_KNOWLEDGE_TABLE_NAME = 'kb_knowledge';\n\nexport const TYPEAHEAD_DEBOUNCE_DELAY = 300;\n\nexport const TABLES = {\n\tSYS_USER_HAS_SKILL: 'sys_user_has_skill',\n\tSYSAPPROVER_APPROVAL: 'sysapproval_approver',\n\tCMN_SKILL: 'cmn_skill'\n};\n\nexport const CELL_TYPES = {\n\tBUTTON_ADD: 'BUTTON_ADD',\n\tBUTTON_RECOMMEND: 'BUTTON_RECOMMEND',\n\tSKILL_LEVEL: 'SKILL_LEVEL',\n\tUSER_SKILL: 'USER_SKILL',\n\tTEAM_COVERAGE: 'TEAM_COVERAGE'\n};\n\nexport const GRAPHQL_MAX_LIMIT = 1000;\n\nexport const GFORM_ACTIONS = {\n\tRELOAD: 'GFORM#RELOAD'\n};\n\nexport const SHOW_ALERT_MESSAGE = 'SN_MANAGER_WORKSPACE#SHOW_ALERT_MESSAGE';\nexport const HIDE_ALERT_MESSAGE = 'SN_MANAGER_WORKSPACE#HIDE_ALERT_MESSAGE';\nexport const DEFAULT_ALERT_TIMEOUT = 5000; // milliseconds\n\nexport const SCHEDULE_ADMIN_ROLES = {\n\tADMIN: 'admin',\n\tSCHEDULE_ADMIN: 'sn_shift_planning.admin'\n};\n\nexport const FORM_RECORD_OPERATION_STATUS = {\n\tinserted: 'inserted',\n\tupdated: 'updated',\n\tmodified: 'modified'\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"get\"];","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_ui_core;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __TECTONIC__lodash_4_17_15[\"isEmpty\"];","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","module.exports = __TECTONIC__$servicenow_now_heading;","/**\n * Copyright (c) 2020 ServiceNow, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *  \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *  \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PACKAGE_NAME = exports.HELPERS_SCHEDULED = exports.HELPERS_DEFER = exports.HELPERS_IMMEDIATE = exports.COMPONENT_INTERNAL_ACTION = exports.SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED = exports.ACTION_HANDLED = exports.ACTION_DISPATCHED = exports.STATE_UPDATED = exports.NOW_UI_EVENT = exports.NOW_METRICS_LEVEL_PROP = exports.NOW_METRIC_TYPES_PROP = exports.COMPONENT_MODE_SUSPEND = exports.COMPONENT_MODE_ACTIVE = exports.NOW_MODE_PROP = exports.NOW_MODE_ATTR = exports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP = exports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR = exports.NOW_COMPONENT_NAME_PROP = exports.NOW_COMPONENT_NAME_ATTR = exports.NOW_ID_PROP = exports.NOW_ID_ATTR = exports.NOW_HOIST_PREPEND_TO_PROP = exports.NOW_HOIST_APPEND_TO_PROP = exports.NOW_HOIST_PREPEND_TO_ATTR = exports.NOW_HOIST_APPEND_TO_ATTR = exports.NOW_HOIST_PROP = exports.NOW_HOIST_ATTR = exports.COMPONENT_ACTION_DISPATCHED = exports.COMPONENT_STATE_UPDATED = exports.COMPONENT_TREE_RENDERED = exports.COMPONENT_DOM_TREE_READY = exports.COMPONENT_RENDER_REQUESTED = exports.COMPONENT_PROPERTY_UPDATE_REQUESTED = exports.COMPONENT_DOM_READY = exports.COMPONENT_RENDERED = exports.COMPONENT_PROPERTY_CHANGED = exports.COMPONENT_BOOTSTRAPPED = exports.COMPONENT_DISCONNECTED = exports.COMPONENT_CONNECTED = exports.ON_BOOTSTRAP_LIFECYCLE = exports.ON_DISCONNECT_LIFECYCLE = exports.ON_CONNECT_LIFECYCLE = exports.PROPERTIES_SET_LIFECYCLE = exports.PROPERTY_SELECTOR_SIGIL = exports.APPEND_TO_META_PROP_NAME = exports.APPEND_TO_PAYLOAD_PROP_NAME = exports.DEFER_ATTRIBUTE = exports.HOIST_FIRST_SCROLL_PARENT = exports.SEISMIC_HOIST_TAG_NAME = exports.HOIST_ATTR = exports.HOIST_APPEND_TO_ATTR = exports.HOIST_APPEND_TO_PROP = exports.COMPONENT_NAME_PROP = exports.COMPONENT_NAME_ATTR = exports.SET_INITIAL_STATE = exports.PARSE_PROP_CONF_KEY = exports.SHOULD_NOT_PROPAGATE = exports.PROPERTIES_SET = exports.HANDLE_ACTIONS = exports.STORE_UPDATED = exports.ATTRIBUTE_SET = exports.COMPONENT_ID_ATTRIBUTE = exports.DISPATCH_EVENT = void 0;\nvar DISPATCH_EVENT = 'DISPATCH_CUSTOM_EVENT';\nexports.DISPATCH_EVENT = DISPATCH_EVENT;\nvar COMPONENT_ID_ATTRIBUTE = 'component-id';\nexports.COMPONENT_ID_ATTRIBUTE = COMPONENT_ID_ATTRIBUTE;\nvar ATTRIBUTE_SET = 'ATTRIBUTE_SET';\nexports.ATTRIBUTE_SET = ATTRIBUTE_SET;\nvar STORE_UPDATED = 'STORE_UPDATED';\nexports.STORE_UPDATED = STORE_UPDATED;\nvar HANDLE_ACTIONS = 'handle-actions';\nexports.HANDLE_ACTIONS = HANDLE_ACTIONS;\nvar PROPERTIES_SET = 'PROPERTIES_SET';\nexports.PROPERTIES_SET = PROPERTIES_SET;\nvar SHOULD_NOT_PROPAGATE = [PROPERTIES_SET, STORE_UPDATED];\nexports.SHOULD_NOT_PROPAGATE = SHOULD_NOT_PROPAGATE;\nvar PARSE_PROP_CONF_KEY = 'unstableParse';\nexports.PARSE_PROP_CONF_KEY = PARSE_PROP_CONF_KEY;\nvar SET_INITIAL_STATE = 'SET_INITIAL_STATE';\nexports.SET_INITIAL_STATE = SET_INITIAL_STATE;\nvar COMPONENT_NAME_ATTR = 'component-name';\nexports.COMPONENT_NAME_ATTR = COMPONENT_NAME_ATTR;\nvar COMPONENT_NAME_PROP = 'componentName';\nexports.COMPONENT_NAME_PROP = COMPONENT_NAME_PROP;\nvar HOIST_APPEND_TO_PROP = 'hoistAppendTo';\nexports.HOIST_APPEND_TO_PROP = HOIST_APPEND_TO_PROP;\nvar HOIST_APPEND_TO_ATTR = 'hoist-append-to';\nexports.HOIST_APPEND_TO_ATTR = HOIST_APPEND_TO_ATTR;\nvar HOIST_ATTR = 'hoist';\nexports.HOIST_ATTR = HOIST_ATTR;\nvar SEISMIC_HOIST_TAG_NAME = 'SEISMIC-HOIST';\nexports.SEISMIC_HOIST_TAG_NAME = SEISMIC_HOIST_TAG_NAME;\nvar HOIST_FIRST_SCROLL_PARENT = 'now-unstable-first-scroll-parent';\nexports.HOIST_FIRST_SCROLL_PARENT = HOIST_FIRST_SCROLL_PARENT;\nvar DEFER_ATTRIBUTE = 'defer';\nexports.DEFER_ATTRIBUTE = DEFER_ATTRIBUTE;\nvar APPEND_TO_PAYLOAD_PROP_NAME = 'appendToPayload';\nexports.APPEND_TO_PAYLOAD_PROP_NAME = APPEND_TO_PAYLOAD_PROP_NAME;\nvar APPEND_TO_META_PROP_NAME = 'appendToMeta';\nexports.APPEND_TO_META_PROP_NAME = APPEND_TO_META_PROP_NAME;\nvar PROPERTY_SELECTOR_SIGIL = '@';\nexports.PROPERTY_SELECTOR_SIGIL = PROPERTY_SELECTOR_SIGIL;\nvar PROPERTIES_SET_LIFECYCLE = 'onPropertiesSet'; // legacy life cycle functions\n\nexports.PROPERTIES_SET_LIFECYCLE = PROPERTIES_SET_LIFECYCLE;\nvar ON_CONNECT_LIFECYCLE = 'onConnect';\nexports.ON_CONNECT_LIFECYCLE = ON_CONNECT_LIFECYCLE;\nvar ON_DISCONNECT_LIFECYCLE = 'onDisconnect';\nexports.ON_DISCONNECT_LIFECYCLE = ON_DISCONNECT_LIFECYCLE;\nvar ON_BOOTSTRAP_LIFECYCLE = 'onBootstrap'; // public action types\n\nexports.ON_BOOTSTRAP_LIFECYCLE = ON_BOOTSTRAP_LIFECYCLE;\nvar COMPONENT_CONNECTED = 'SEISMIC_COMPONENT_CONNECTED';\nexports.COMPONENT_CONNECTED = COMPONENT_CONNECTED;\nvar COMPONENT_DISCONNECTED = 'SEISMIC_COMPONENT_DISCONNECTED';\nexports.COMPONENT_DISCONNECTED = COMPONENT_DISCONNECTED;\nvar COMPONENT_BOOTSTRAPPED = 'SEISMIC_COMPONENT_BOOTSTRAPPED';\nexports.COMPONENT_BOOTSTRAPPED = COMPONENT_BOOTSTRAPPED;\nvar COMPONENT_PROPERTY_CHANGED = 'SEISMIC_COMPONENT_PROPERTY_CHANGED';\nexports.COMPONENT_PROPERTY_CHANGED = COMPONENT_PROPERTY_CHANGED;\nvar COMPONENT_RENDERED = 'SEISMIC_COMPONENT_RENDERED';\nexports.COMPONENT_RENDERED = COMPONENT_RENDERED;\nvar COMPONENT_DOM_READY = 'SEISMIC_COMPONENT_DOM_READY';\nexports.COMPONENT_DOM_READY = COMPONENT_DOM_READY;\nvar COMPONENT_PROPERTY_UPDATE_REQUESTED = 'SEISMIC_COMPONENT_PROPERTY_UPDATE_REQUESTED';\nexports.COMPONENT_PROPERTY_UPDATE_REQUESTED = COMPONENT_PROPERTY_UPDATE_REQUESTED;\nvar COMPONENT_RENDER_REQUESTED = 'SEISMIC_COMPONENT_RENDER_REQUESTED';\nexports.COMPONENT_RENDER_REQUESTED = COMPONENT_RENDER_REQUESTED;\nvar COMPONENT_DOM_TREE_READY = 'SEISMIC_COMPONENT_DOM_TREE_READY';\nexports.COMPONENT_DOM_TREE_READY = COMPONENT_DOM_TREE_READY;\nvar COMPONENT_TREE_RENDERED = 'SEISMIC_COMPONENT_TREE_RENDERED';\nexports.COMPONENT_TREE_RENDERED = COMPONENT_TREE_RENDERED;\nvar COMPONENT_STATE_UPDATED = 'SEISMIC_COMPONENT_STATE_UPDATED';\nexports.COMPONENT_STATE_UPDATED = COMPONENT_STATE_UPDATED;\nvar COMPONENT_ACTION_DISPATCHED = 'SEISMIC_COMPONENT_ACTION_DISPATCHED'; // now namespace\n\nexports.COMPONENT_ACTION_DISPATCHED = COMPONENT_ACTION_DISPATCHED;\nvar NOW_HOIST_ATTR = 'now-hoist';\nexports.NOW_HOIST_ATTR = NOW_HOIST_ATTR;\nvar NOW_HOIST_PROP = 'nowHoist';\nexports.NOW_HOIST_PROP = NOW_HOIST_PROP;\nvar NOW_HOIST_APPEND_TO_ATTR = 'now-hoist-append-to';\nexports.NOW_HOIST_APPEND_TO_ATTR = NOW_HOIST_APPEND_TO_ATTR;\nvar NOW_HOIST_PREPEND_TO_ATTR = 'now-hoist-prepend-to';\nexports.NOW_HOIST_PREPEND_TO_ATTR = NOW_HOIST_PREPEND_TO_ATTR;\nvar NOW_HOIST_APPEND_TO_PROP = 'nowHoistAppendTo';\nexports.NOW_HOIST_APPEND_TO_PROP = NOW_HOIST_APPEND_TO_PROP;\nvar NOW_HOIST_PREPEND_TO_PROP = 'nowHoistPrependTo';\nexports.NOW_HOIST_PREPEND_TO_PROP = NOW_HOIST_PREPEND_TO_PROP;\nvar NOW_ID_ATTR = 'now-id';\nexports.NOW_ID_ATTR = NOW_ID_ATTR;\nvar NOW_ID_PROP = 'nowId';\nexports.NOW_ID_PROP = NOW_ID_PROP;\nvar NOW_COMPONENT_NAME_ATTR = 'now-name';\nexports.NOW_COMPONENT_NAME_ATTR = NOW_COMPONENT_NAME_ATTR;\nvar NOW_COMPONENT_NAME_PROP = 'nowName';\nexports.NOW_COMPONENT_NAME_PROP = NOW_COMPONENT_NAME_PROP;\nvar NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR = 'now-enable-property-setting-prevention';\nexports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR = NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR;\nvar NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP = 'nowEnablePropertySettingPrevention'; // modes\n\nexports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP = NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP;\nvar NOW_MODE_ATTR = 'now-mode';\nexports.NOW_MODE_ATTR = NOW_MODE_ATTR;\nvar NOW_MODE_PROP = 'nowMode';\nexports.NOW_MODE_PROP = NOW_MODE_PROP;\nvar COMPONENT_MODE_ACTIVE = 'active';\nexports.COMPONENT_MODE_ACTIVE = COMPONENT_MODE_ACTIVE;\nvar COMPONENT_MODE_SUSPEND = 'suspend'; // metrics\n\nexports.COMPONENT_MODE_SUSPEND = COMPONENT_MODE_SUSPEND;\nvar NOW_METRIC_TYPES_PROP = 'nowMetricTypes';\nexports.NOW_METRIC_TYPES_PROP = NOW_METRIC_TYPES_PROP;\nvar NOW_METRICS_LEVEL_PROP = 'nowMetricsLevel';\nexports.NOW_METRICS_LEVEL_PROP = NOW_METRICS_LEVEL_PROP;\nvar NOW_UI_EVENT = 'NOW_UI_EVENT'; // now event types\n\nexports.NOW_UI_EVENT = NOW_UI_EVENT;\nvar STATE_UPDATED = 'STATE_UPDATED';\nexports.STATE_UPDATED = STATE_UPDATED;\nvar ACTION_DISPATCHED = 'ACTION_DISPATCHED';\nexports.ACTION_DISPATCHED = ACTION_DISPATCHED;\nvar ACTION_HANDLED = 'ACTION_HANDLED';\nexports.ACTION_HANDLED = ACTION_HANDLED;\nvar SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED = 'SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED';\nexports.SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED = SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED;\nvar COMPONENT_INTERNAL_ACTION = 'NOW_COMPONENT_INTERNAL_ACTION';\nexports.COMPONENT_INTERNAL_ACTION = COMPONENT_INTERNAL_ACTION;\nvar HELPERS_IMMEDIATE = 'HELPERS_IMMEDIATE';\nexports.HELPERS_IMMEDIATE = HELPERS_IMMEDIATE;\nvar HELPERS_DEFER = 'HELPERS_DEFER';\nexports.HELPERS_DEFER = HELPERS_DEFER;\nvar HELPERS_SCHEDULED = 'HELPERS_SCHEDULED';\nexports.HELPERS_SCHEDULED = HELPERS_SCHEDULED;\nvar PACKAGE_NAME = '@servivcenow/ui-core';\nexports.PACKAGE_NAME = PACKAGE_NAME;\n//# sourceMappingURL=constants.js.map","import { t } from 'sn-translate';\n\nexport const CARD_FIELDS = ['number', 'assessment_of', 'state'];\nexport const DEFAULT_ASMT_VIEW = 'manager_workspace_side_panel';\nexport const COACHING_ASSESSMENT_TABLE = 'sn_coaching_assessment';\nexport const COACHING_RECOMMENDATION_TABLE_NAME = 'sn_coaching_recommendation';\nexport const COACHING_ASSESSMENT_STATE_VALUES = {\n\tOpen: '1',\n\t'Work in Progress': '2',\n\tResolved: '10',\n\t'Closed Complete': '3',\n\t'Closed Incomplete': '4'\n};\n\n//Translated labels and titles.\nexport const ASSESSMENTS_LABEL = t('Assessments');\nexport const ASSESSMENT_LABEL = t('Assessment');\nexport const COMPLETE_ASMT_LABEL = t('Complete assessment');\nexport const SAVE_LABEL = t('Save');\nexport const CANCEL_LABEL = t('Cancel');\nexport const SUBMIT_LABEL = t('Submit');\nexport const START_SURVEY_LABEL = t('Start survey');\nexport const OVERDUE_TRAINING_LABEL = t('Overdue training');\nexport const ASSESSMENTS_PAST30DAYS_LABEL = t('Assessments (past 30 days)');\nexport const AVERAGE_QUALITY_TIME_SERIES_TITLE = t(\n\t'Average quality (past 30 days)'\n);\nexport const LOADING_ASSESSMENTS_MESSAGE = t('Loading assessments...');\n\nexport const SAVE_BTN_ID = 'save';\nexport const CANCEL_BTN_ID = 'cancel';\nexport const SUBMIT_BTN_ID = 'submit';\nexport const CAS_SURVEY_BTN_CLICKED = 'CAS#SURVEY_BTN_CLICKED';\n\nexport const OUTLINED_ICON = 'empty';\nexport const EXPERT_COLOR = '#25832B';\nexport const USERS_WITH_THIS_SKILL = t('Users with this skill');\nexport const USERS_WITHOUT_THIS_SKILL = t('Users without this skill');\nexport const FETCH_USERS_REQUESTED = 'FETCH_USERS_REQUESTED';\nexport const FETCH_USERS_SUCCEEDED = 'FETCH_USERS_SUCCEEDED';\nexport const FETCH_SKILL_LEVEL_COUNTS = 'FETCH_SKILL_LEVEL_COUNTS';\nexport const FETCH_USER_SKILLS_REQUESTED = 'FETCH_USER_SKILLS_REQUESTED';\nexport const FETCH_USER_SKILLS_SUCCEEDED = 'FETCH_USER_SKILLS_SUCCEEDED';\nexport const ERROR_OCCURED = 'ERROR_OCCURED';\nexport const FETCH_SKILL_LEVEL_SUCCEEDED = 'FETCH_SKILL_LEVEL_SUCCEEDED';\nexport const FETCH_SKILL_LEVEL_COUNTS_SUCCESS =\n\t'FETCH_SKILL_LEVEL_COUNTS_SUCCESS';\nexport const FETCH_SKILL_LEVEL_REQUESTED = 'FETCH_SKILL_LEVEL_REQUESTED';\nexport const NOW_BUTTON_BARE_CLICKED = 'NOW_BUTTON_BARE#CLICKED';\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const PAGINATION_LIMIT = 1000;\nexport const GROUP_EMPTY_HEADER_MESSAGE = t('No groups configured yet');\nexport const GROUP_EMPTY_MESSAGE = t(\n\t'Please contact your admin for more info.'\n);\nexport const SKILL_EMPTY_HEADER_MESSAGE = t('No skills configured yet');\nexport const SKILL_EMPTY_MESSAGE = t(\n\t'Please contact your admin for more info.'\n);\nexport const SKILL_COUNT_EMPTY_MESSAGE = t(\n\t'No records have skills assigned in the past 30 days.'\n);\n\nexport const SKILL_TITLE = t('Skills');\nexport const SWAP_AXES = t('Swap axes');\nexport const ADD_SKILL = t('Add skill');\nexport const REFRESH_LIST = t('Refresh list');\nexport const FILTER = t('Filter');\nexport const NOW_BUTTON_CLICKED = 'NOW_BUTTON#CLICKED';\nexport const BUTTON_SWAP_AXES = 'BUTTON_SWAP_AXES';\nexport const BUTTON_ADD_SKILL = 'BUTTON_ADD_SKILL';\nexport const BUTTON_REFRESH_LIST = 'BUTTON_REFRESH_LIST';\nexport const BUTTON_FILTER = 'FILTER_ITEMS';\n\n//Quality Assessment - Feedback Rating\nexport const INDICATOR_QUALITY_ASSESSMENT_FEEDBACK_RATING =\n\t'fd8c3877b3f20010ed7fc9c316a8dcbb';\n//Quality - Average Trainee Survey Score\nexport const INDICATOR_QUALITY_TRAINEE_SURVEY_SCORE =\n\t'50ca147bb3030010ed7fc9c316a8dc30';\n","module.exports = __TECTONIC__$servicenow_ui_effect_http;","module.exports = __TECTONIC__$servicenow_now_empty_state;","module.exports = __TECTONIC__lodash_4_17_15;","module.exports = __TECTONIC__moment_2_24_0;","/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\nexport default coeffects => {\n\tconst {\n\t\taction: { type, payload }\n\t} = coeffects;\n\tconsole.error(type, payload);\n};\n","module.exports = __TECTONIC__$servicenow_now_button;","import { t } from 'sn-translate';\n\nexport const FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG =\n\t'FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG';\nexport const FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG_SUCCESS =\n\t'FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG_SUCCESS';\nexport const ERROR_OCCURED = 'ERROR_OCCURED';\nexport const CHANNEL_SUPERVISOR_LIST_CONFIG_READY =\n\t'CHANNEL_SUPERVISOR_LIST_CONFIG_READY';\nexport const SUPERVISOR_VIEW_NAME = 'supervisor';\nexport const FETCH_WORK_ITEM_TABLE_ALIAS = 'FETCH_WORK_ITEM_TABLE_ALIAS';\nexport const FETCH_WORK_ITEM_TABLE_ALIAS_SUCCESS =\n\t'FETCH_WORK_ITEM_TABLE_ALIAS_SUCCESS';\n\nexport const ALL_WORK_ITEMS_DEFAULT_COLUMN =\n\t'document_id,assigned_to,queue.service_channel,queue,state,sys_created_on,assignment_group';\n\nexport const WORK_ITEMS = 'WORK_ITEMS';\nexport const WORK_ITEMS_DEFAULT_TAB = [\n\t{\n\t\tid: WORK_ITEMS,\n\t\tlabel: t('Queued Work')\n\t}\n];\nexport const WORK_ITEMS_DEFAULT_LIST_DETAILS = {\n\tWORK_ITEMS: {\n\t\ttable: 'awa_work_item',\n\t\tcolumns: ALL_WORK_ITEMS_DEFAULT_COLUMN,\n\t\tquery: '',\n\t\tlistTitle: t('Queued Work')\n\t}\n};\nexport const AWA_WORK_ITEM_TABLE_DEFAULT_QUERY =\n\t'queue.active=true^queue.service_channel.active=true';\n\nexport const RECORD_LIST_TYPE_QUEUE = 'QUEUE';\nexport const RECORD_LIST_TYPE_AGENT = 'AGENT';\n\nexport const SYS_PROP_LIST_AUTO_REFRESH_ENABLE =\n\t'sn_channel_mgmt.list_auto_refresh.enable';\nexport const SYS_PROP_LIST_AUTO_REFRESH_INTERVAL_SECONDS =\n\t'sn_channel_mgmt.list_auto_refresh.interval.seconds';\nexport const SYS_PROP_KPI_AUTO_REFRESH_INTERVAL_SECONDS =\n\t'sn_channel_mgmt.kpi_auto_refresh.interval.seconds';\nexport const SYS_PROP_CHANNEL_CARD_REFRESH_INTERVAL_SECONDS =\n\t'sn_channel_mgmt.channel_card_auto_refresh.interval.seconds';\nexport const SYS_PROP_CHANNELS_CARD_AUTO_REFRESH_ENABLE =\n\t'sn_channel_mgmt.channels_card_auto_refresh.enable';\nexport const SYS_PROP_FILTER_CONFIG_ENABLE =\n\t'sn_channel_mgmt.filter_config.enable';\n\nexport const UPDATE_DEFAULT_SORT_ORDER = 'UPDATE_DEFAULT_SORT_ORDER';\nexport const UPDATE_FILTERS = 'UPDATE_FILTERS';\nexport const PAGE = {\n\tOVERVIEW: 'OVERVIEW',\n\tCHANNEL: 'CHANNEL',\n\tQUEUE: 'QUEUE'\n};\nexport const CHANNEL_MGMT_USER = 'sn_channel_mgmt.user';\nexport const NO_OF_VIEWS = 3;\n","import { t } from 'sn-translate';\n\nexport const INTERNAL_FORMAT = {\n\tDATE: 'YYYY-MM-DD',\n\tTIME: 'HH:mm:ss',\n\tDATE_TIME: 'YYYY-MM-DD HH:mm:ss',\n\tDATE_DISPLAY_FORMAT: 'ddd, MMM D',\n\tTIME_DISPLAY_FORMAT: 'HH:mm',\n\tARIA_DATE_FORMAT: 'dddd, MMMM Do YYYY',\n\tARIA_DATE_TIME_FORMAT: 'dddd, MMMM Do YYYY HH:mm',\n\tDAY: 'dddd',\n\tONLY_DATE: 'DD',\n\tDATE_MONTH_ABBR: 'MMM D'\n};\n\nexport const WEEK_DAYS = {\n\tSUNDAY: 0,\n\tMONDAY: 1,\n\tTUESDAY: 2,\n\tWEDNESDAY: 3,\n\tTHURSDAY: 4,\n\tFRIDAY: 5,\n\tSATURDAY: 6\n};\n\nexport const DIRECTION = {\n\tLTR: 'ltr',\n\tRTL: 'rtl',\n\tLEFT: 'left',\n\tRIGHT: 'right',\n\tUP: 'up',\n\tDOWN: 'down'\n};\n\nexport const POSITION = {\n\tSTART: 'start',\n\tEND: 'end'\n};\n\nconst ACTION_PREFIX = 'NOW_CALENDAR#';\nexport const ACTIONS = {\n\tINITIALIZED: `${ACTION_PREFIX}INITIALIZED`,\n\tVIEW_CHANGED: `${ACTION_PREFIX}VIEW_CHANGED`,\n\tCONTEXT_DATE_CHANGED: `${ACTION_PREFIX}CONTEXT_DATE_CHANGED`,\n\tRANGE_UPDATED: `${ACTION_PREFIX}RANGE_UPDATED`,\n\tINTERNAL_STATE_SET: `${ACTION_PREFIX}INTERNAL_STATE_SET`,\n\tTOGGLE_POPOVER: `${ACTION_PREFIX}TOGGLE_POPOVER`,\n\tEVENT_CLICKED: `${ACTION_PREFIX}EVENT_CLICKED`,\n\tGRID_CLICKED_NEW_EVENT: `${ACTION_PREFIX}GRID_CLICKED_NEW_EVENT`,\n\tEVENT_MOVED: `${ACTION_PREFIX}EVENT_MOVED`,\n\tDRAG_END_NEW_EVENT: `${ACTION_PREFIX}DRAG_END_NEW_EVENT`,\n\tEVENT_RESIZED: `${ACTION_PREFIX}EVENT_RESIZED`,\n\tPOPOVER_OPENED: `${ACTION_PREFIX}POPOVER_OPENED`,\n\tPOPOVER_CLOSED: `${ACTION_PREFIX}POPOVER_CLOSED`,\n\tTIMELINE_SECTION_TOGGLED: `${ACTION_PREFIX}TIMELINE_SECTION_TOGGLED`,\n\tNOW_DROPDOWN_SELECTED_ITEMS_SET: 'NOW_DROPDOWN#SELECTED_ITEMS_SET',\n\tSET_CONTEXTUAL_PANEL_VIEW: `${ACTION_PREFIX}SET_CONTEXTUAL_PANEL_VIEW`,\n\tTIMEZONE_CHANGED: `${ACTION_PREFIX}TIMEZONE_CHANGED`,\n\tREJECTED_BY_BLOCKED_SPAN: `${ACTION_PREFIX}REJECTED_BY_BLOCKED_SPAN`,\n\tNOW_DROPDOWN_OPENED_SET: 'NOW_DROPDOWN#OPENED_SET'\n};\n\nexport const VIEWS = {\n\tMONTH: 'MONTH',\n\tCOLUMN: 'COLUMN',\n\tWEEK: 'WEEK',\n\tDAY: 'DAY',\n\tTIMELINE_DAY: 'TIMELINE_DAY',\n\tTIMELINE_WEEK: 'TIMELINE_WEEK'\n};\n\nexport const TYPES = {\n\tCALENDAR: 'Calendar',\n\tTIMELINE: 'Timeline'\n};\n\nexport const DEFAULT_TEMPLATES = {\n\tDATE_PICKER_TEMPLATE_FOR_WEEK: {\n\t\tMONTH_FIRST:\n\t\t\t'startMoment ? startMoment.date() > endMoment.date() ? startMoment.month() == 11 ? startMoment.format(\\'MMMM DD YYYY\\') + \\' - \\' + endMoment.format(\\'MMMM DD YYYY\\') :  startMoment.format(\\'MMMM DD\\') + \\' - \\' + endMoment.format(\\'MMMM DD YYYY\\') : startMoment.format(\\'MMMM \\') + startMoment.format(\\'DD\\') + \\' - \\' + endMoment.format(\\'DD YYYY\\') : \\'\\'',\n\t\tDATE_FIRST:\n\t\t\t'startMoment ? startMoment.date() > endMoment.date() ? startMoment.month() == 11 ? startMoment.format(\\'DD MMMM YYYY\\') + \\' - \\' + endMoment.format(\\'DD MMMM YYYY\\') :  startMoment.format(\\'DD MMMM\\') + \\' - \\' + endMoment.format(\\'DD MMMM YYYY\\') : startMoment.format(\\'DD\\') + \\' - \\' + endMoment.format(\\'DD MMMM YYYY\\') : \\'\\''\n\t},\n\tDATE_PICKER_TEMPLATE_FOR_DAY: {\n\t\tMONTH_FIRST:\n\t\t\t'startMoment ? startMoment.format(\\'dddd  MMMM DD YYYY\\') : \\'\\'',\n\t\tDATE_FIRST:\n\t\t\t'startMoment ? startMoment.format(\\'dddd  DD MMMM YYYY\\') : \\'\\''\n\t},\n\tDATE_PICKER_TEMPLATE_FOR_MONTH: {\n\t\tMONTH_FIRST:\n\t\t\t'startMoment ? startMoment.clone().add(10, \\'days\\').format(\\'MMMM YYYY\\') : \\'\\'',\n\t\tDATE_FIRST:\n\t\t\t'startMoment ? startMoment.clone().add(10, \\'days\\').format(\\'MMMM YYYY\\') : \\'\\''\n\t}\n};\n\nexport const WHEN_OUT_OF_MODE_OPTIONS = {\n\tHIDE: 'hide',\n\tDISABLE: 'disable'\n};\n\nexport const POPOVERS = {\n\tDATE_PICKER: 'datePicker',\n\tEVENT: 'event',\n\tSETTINGS: 'settings',\n\tFORECAST: 'forecast'\n};\n\nexport const POPOVER_STATE = {\n\tREADY: 'ready',\n\tPENDING: 'pending',\n\tRENDERED: 'rendered',\n\tEMPTY: 'empty',\n\tDESTROYED: 'destroyed'\n};\n\nexport const EVENTS = {\n\tMOUSE_CLICKED: 'click',\n\tKEY_DOWN: 'keydown'\n};\n\nexport const EVENT_TYPES = {\n\tMOVE: 'move',\n\tCREATE: 'create',\n\tRESIZE: 'resize',\n\tCLICK_CREATE: 'click_create',\n\tAGENDA_DRAG: 'agenda_drag'\n};\n\nexport const EVENT_STATES = {\n\tONDRAGSTART: 'ondragstart',\n\tONDRAG: 'ondrag',\n\tONDRAGEND: 'ondragend',\n\tONDRAGLEAVE: 'ondragleave',\n\tONCLICK: 'onclick'\n};\n\nexport const GRADIENT = {\n\tANGLE: '45',\n\tLINE_WIDTH: '5'\n};\n\nexport const KEYS = {\n\tD: 68,\n\tE: 69,\n\tF: 70,\n\tN: 78,\n\tP: 80,\n\tT: 84,\n\tS: 83,\n\tENTER: 13,\n\tESC: 27,\n\tTAB: 9,\n\tLEFT: 37,\n\tUP: 38,\n\tRIGHT: 39,\n\tDOWN: 40,\n\tFSLASH: 191,\n\tMODIFIER: {\n\t\tSHIFT: 'shiftKey',\n\t\tCTRL: 'ctrlKey',\n\t\tALT: 'altKey',\n\t\tMETA: 'metaKey'\n\t}\n};\n\nexport const INTERNAL_DATE_TIME_REGEX = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n\nexport const NEW_EVENT_DROPDOWN_SOURCE_ID = 'new-event-type-dropdown';\nexport const EVENT_DELETE_ACTIONS = {\n\tOPEN_DELETE_CONFIRMATION_DIALOG:\n\t\t'EVENT_DELETE_ACTIONS#OPEN_DELETE_CONFIRMATION_DIALOG',\n\tSUBMIT_DELETE_CONFIRMATION_DIALOG:\n\t\t'EVENT_DELETE_ACTIONS#SUBMIT_DELETE_CONFIRMATION_DIALOG',\n\tCANCEL_DELETE_CONFIRMATION_DIALOG:\n\t\t'EVENT_DELETE_ACTIONS#CANCEL_DELETE_CONFIRMATION_DIALOG',\n\tCLOSE_DELETE_CONFIRMATION_DIALOG:\n\t\t'EVENT_DELETE_ACTIONS#CLOSE_DELETE_CONFIRMATION_DIALOG',\n\tDELETE_EVENT: 'EVENT_DELETE_ACTIONS#DELETE_EVENT',\n\tDELETE_EVENT_SUCCEDED: 'EVENT_DELETE_ACTIONS#DELETE_EVENT_SUCCEDED',\n\tDELETE_EVENT_FAILED: 'EVENT_DELETE_ACTIONS#DELETE_EVENT_FAILED'\n};\n\n// SHIFT EDITING MODAL CONSTANTS\nexport const SHIFT_EDITING_EVENTS = {\n\tOPEN_SHIFT_EDIT_MODAL: 'SHIFT_EDITING_EVENTS#OPEN_SHIFT_EDIT_MODAL',\n\tOPEN_SHIFT_SWAP_MODAL: 'SHIFT_EDITING_EVENTS#OPEN_SHIFT_SWAP_MODAL',\n\tOPEN_SHIFT_TIMEOFF_MODAL: 'SHIFT_EDITING_EVENTS#OPEN_SHIFT_TIMEOFF_MODAL',\n\tCLOSE_SHIFT_EDIT_MODAL: 'NOW_MODAL#OPENED_SET',\n\tSHIFT_EDIT_MODAL_ACTION_CLICKED: 'NOW_MODAL#FOOTER_ACTION_CLICKED',\n\tSHIFT_EDIT_MODAL_VALUE_CHANGED: 'NOW_RECORD_TIME#VALUE_CHANGED',\n\tSET_TO_DELETE: 'SHIFT_EDITING_EVENTS#SET_TO_DELETE',\n\tSAVE_CHANGES: 'SHIFT_EDITING_EVENTS#SAVE_CHANGES',\n\tSAVE_CHANGES_SUCCESS: 'SHIFT_EDITING_EVENTS#SAVE_CHANGES_SUCCESS',\n\tSAVE_CHANGES_ERROR: 'SHIFT_EDITING_EVENTS#SAVE_CHANGES_ERROR',\n\tDISMISS_ALERT: 'NOW_ALERT#ACTION_CLICKED'\n};\n\nexport const SHIFT_EDITING_MODAL_CONSTANTS = {\n\tBREAKS_LABEL: t('Breaks'),\n\tSHIFT_LABEL: t('Shift'),\n\tMODAL_ACTION_LABEL_SAVE: t('Save'),\n\tMODAL_ACTION_LABEL_CANCEL: t('Cancel'),\n\tSECONDS_FORMAT: ':ss',\n\tEDIT_AGENT_SCHEDULE_API_ENDPOINT:\n\t\t'/api/sn_shift_planning/shift_planning/edit_schedule'\n};\n\nexport const GENERIC_EDIT_SHIFT_ERROR = t(\n\t'Something went wrong, please contact your System Administrator.'\n);\n\nexport const FORECAST_STATUS = {\n\tnoForecast: -1,\n\tnoStaffed: 0,\n\tunderStaffed: 1,\n\toverStaffed: 2,\n\tmisStaffed: 3,\n\twellStaffed: 4\n};\n\nexport const FORECAST_STATUS_LABEL = {\n\t[FORECAST_STATUS.noStaffed]: t('No staff needed'),\n\t[FORECAST_STATUS.underStaffed]: t('Understaffed'),\n\t[FORECAST_STATUS.overStaffed]: t('Overstaffed'),\n\t[FORECAST_STATUS.misStaffed]: t('Misaligned staffing'),\n\t[FORECAST_STATUS.wellStaffed]: t('Well-staffed')\n};\n\nexport const FORECAST_STATUS_BACKGROUND = {\n\t[FORECAST_STATUS.noForecast]:\n\t\t'RGB(var(--now-color--neutral-2,228,230,231))',\n\t[FORECAST_STATUS.noStaffed]: 'RGB(var(--now-color--neutral-2,228,230,231))',\n\t[FORECAST_STATUS.underStaffed]:\n\t\t'RGB(var(--now-color--alert-critical-0,241,206,205))',\n\t[FORECAST_STATUS.overStaffed]:\n\t\t'RGB(var(--now-color--alert-high-0,245,222,189))',\n\t[FORECAST_STATUS.misStaffed]:\n\t\t'RGB(var(--now-color--alert-high-0,245,222,189))',\n\t[FORECAST_STATUS.wellStaffed]:\n\t\t'RGB(var(--now-color--alert-positive-0,201,224,202))'\n};\n\nexport const FORECAST_STATUS_ICONS = {\n\t[FORECAST_STATUS.noStaffed]: 'presence-fill',\n\t[FORECAST_STATUS.underStaffed]: 'arrow-down-outline',\n\t[FORECAST_STATUS.overStaffed]: 'arrow-up-outline',\n\t[FORECAST_STATUS.misStaffed]: 'arrow-up-down-outline',\n\t[FORECAST_STATUS.wellStaffed]: 'check-outline'\n};\n\nexport const FORECAST_STATUS_HIGHLIGHT = {\n\t[FORECAST_STATUS.underStaffed]: 'critical',\n\t[FORECAST_STATUS.overStaffed]: 'high',\n\t[FORECAST_STATUS.misStaffed]: 'high',\n\t[FORECAST_STATUS.wellStaffed]: 'positive'\n};\n","module.exports = __TECTONIC__sn_uxpage_presource_7_0_0;","import { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport { t } from 'sn-translate';\n\nexport const COMPONENT_NAME = 'SN_MANAGER_SCHEDULES_CONTEXTUAL_PANEL';\n\nexport const FETCH_SCHEDULES = COMPONENT_NAME + '#FETCH_SCHEDULES';\nexport const FETCH_SCHEDULES_START = COMPONENT_NAME + '#FETCH_SCHEDULES_START';\nexport const FETCH_SCHEDULES_SUCCESS =\n\tCOMPONENT_NAME + '#FETCH_SCHEDULES_SUCCESS';\nexport const FETCH_SCHEDULES_ERROR = COMPONENT_NAME + '#FETCH_SCHEDULES_ERROR';\n\nexport const FETCH_SCHEDULE = COMPONENT_NAME + '#FETCH_SCHEDULE';\nexport const FETCH_SCHEDULE_START = COMPONENT_NAME + '#FETCH_SCHEDULE_START';\nexport const FETCH_SCHEDULE_SUCCESS =\n\tCOMPONENT_NAME + '#FETCH_SCHEDULE_SUCCESS';\n\nexport const OPEN_SCHEDULE = COMPONENT_NAME + '#OPEN_SCHEDULE';\n\nexport const DUPLICATE_SCHEDULE = COMPONENT_NAME + '#DUPLICATE_SCHEDULE';\nexport const DUPLICATE_SCHEDULE_START =\n\tCOMPONENT_NAME + '#DUPLICATE_SCHEDULE_START';\nexport const DUPLICATE_SCHEDULE_SUCCESS =\n\tCOMPONENT_NAME + '#DUPLICATE_SCHEDULE_SUCCESS';\nexport const DUPLICATE_SCHEDULE_ERROR =\n\tCOMPONENT_NAME + '#DUPLICATE_SCHEDULE_ERROR';\n\nexport const PUBLISH_SCHEDULE = COMPONENT_NAME + '#PUBLISH_SCHEDULE';\nexport const PUBLISH_SCHEDULE_SUCCESS =\n\tCOMPONENT_NAME + '#PUBLISH_SCHEDULE_SUCCESS';\nexport const PUBLISH_SCHEDULE_ERROR =\n\tCOMPONENT_NAME + '#PUBLISH_SCHEDULE_ERROR';\n\nexport const UNPUBLISH_SCHEDULE = COMPONENT_NAME + '#UNPUBLISH_SCHEDULE';\nexport const UNPUBLISH_SCHEDULE_SUCCESS =\n\tCOMPONENT_NAME + '#UNPUBLISH_SCHEDULE_SUCCESS';\nexport const UNPUBLISH_SCHEDULE_ERROR =\n\tCOMPONENT_NAME + '#UNPUBLISH_SCHEDULE_ERROR';\n\nexport const DELETE_SCHEDULE = COMPONENT_NAME + '#DELETE_SCHEDULE';\nexport const DELETE_SCHEDULE_SUCCESS =\n\tCOMPONENT_NAME + '#DELETE_SCHEDULE_SUCCESS';\nexport const DELETE_SCHEDULE_ERROR = COMPONENT_NAME + '#DELETE_SCHEDULE_ERROR';\n\nexport const DELETE_WORK_SHIFT = COMPONENT_NAME + '#DELETE_WORK_SHIFT';\nexport const DELETE_WORK_SHIFT_SUCCESS =\n\tCOMPONENT_NAME + '#DELETE_WORK_SHIFT_SUCCESS';\nexport const DELETE_WORK_SHIFT_ERROR =\n\tCOMPONENT_NAME + '#DELETE_WORK_SHIFT_ERROR';\n\nexport const UPDATE_AGENTS_IN_WORK_SHIFT =\n\tCOMPONENT_NAME + '#UPDATE_AGENTS_IN_WORK_SHIFT';\nexport const UPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS =\n\tCOMPONENT_NAME + '#UPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS';\nexport const UPDATE_AGENTS_IN_WORK_SHIFT_ERROR =\n\tCOMPONENT_NAME + '#UPDATE_AGENTS_IN_WORK_SHIFT_ERROR';\n\nexport const CHECK_IF_WORK_SHIFT_OVERLAPS =\n\tCOMPONENT_NAME + '#CHECK_IF_WORK_SHIFT_OVERLAPS';\nexport const CHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS =\n\tCOMPONENT_NAME + '#CHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS';\nexport const CHECK_IF_WORK_SHIFT_OVERLAPS_ERROR =\n\tCOMPONENT_NAME + '#CHECK_IF_WORK_SHIFT_OVERLAPS_ERROR';\n\n// View schedule related actions\nexport const GO_TO_LOADING_VIEW = COMPONENT_NAME + '#GO_TO_LOADING_VIEW';\nexport const GO_TO_LIST_VIEW = COMPONENT_NAME + '#GO_TO_LIST_VIEW';\nexport const GO_TO_DETAIL_VIEW = COMPONENT_NAME + '#GO_TO_DETAIL_VIEW';\nexport const GO_TO_EDIT_VIEW = COMPONENT_NAME + '#GO_TO_EDIT_VIEW';\nexport const GO_TO_CREATE_VIEW = COMPONENT_NAME + '#GO_TO_CREATE_VIEW';\n\n// View shift related actions\nexport const GO_TO_SHIFT_DETAIL_VIEW =\n\tCOMPONENT_NAME + '#GO_TO_SHIFT_DETAIL_VIEW';\nexport const GO_TO_SHIFT_CREATE_VIEW =\n\tCOMPONENT_NAME + '#GO_TO_SHIFT_CREATE_VIEW';\nexport const GO_TO_SHIFT_EDIT_VIEW = COMPONENT_NAME + '#GO_TO_SHIFT_EDIT_VIEW';\n\n// Agent Typeahead related actions\nexport const TYPEAHEAD_FETCH_AGENTS =\n\tCOMPONENT_NAME + '#TYPEAHEAD_FETCH_AGENTS';\nexport const TYPEAHEAD_FETCH_AGENTS_SUCCEDED =\n\tCOMPONENT_NAME + '#TYPEAHEAD_FETCH_AGENTS_SUCCEDED';\nexport const ADD_AGENT_TO_SHIFT = COMPONENT_NAME + '#ADD_AGENT_TO_SHIFT';\nexport const DELETE_AGENT_FROM_SHIFT =\n\tCOMPONENT_NAME + '#DELETE_AGENT_FROM_SHIFT';\nexport const NOW_TYPEAHEAD_MULTI_VALUE_SET = 'NOW_TYPEAHEAD_MULTI#VALUE_SET';\nexport const NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET =\n\t'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET';\n\n// Notification and messages\nexport const GET_NOTIFICATIONS_EFFECT =\n\tCOMPONENT_NAME + '#GET_NOTIFICATIONS_EFFECT';\nexport const NOTIFICATIONS_EFFECT_HANDLER =\n\tCOMPONENT_NAME + '#NOTIFICATIONS_EFFECT_HANDLER';\n\n// Create Shifts\nexport const CREATE_AGENT_SCHEDULES =\n\tCOMPONENT_NAME + '#CREATE_AGENT_SCHEDULES';\nexport const DEBOUNCED_CREATE_SCHEDULES_EFFECT =\n\tCOMPONENT_NAME + '#DEBOUNCED_CREATE_SCHEDULES_EFFECT';\nexport const CREATE_AGENT_SCHEDULES_SUCCESS =\n\tCOMPONENT_NAME + '#CREATE_AGENT_SCHEDULES_SUCCESS';\n\nexport const NOW_CARD_HEADER_ACTION_CLICKED = 'NOW_CARD_HEADER#ACTION_CLICKED';\n\nexport const WATCH_SCHEDULE_PLAN = COMPONENT_NAME + '#WATCH_SCHEDULE_PLAN';\nexport const WATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED =\n\tCOMPONENT_NAME + '#WATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED';\n\nexport const WATCH_SCHEDULE_SHIFT = COMPONENT_NAME + '#WATCH_SCHEDULE_SHIFT';\nexport const WATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED =\n\tCOMPONENT_NAME + '#WATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED';\n\nexport const VIEW = {\n\tlist: 'list',\n\tdetail: 'detail',\n\tedit: 'edit',\n\tcreate: 'create',\n\tshiftDetail: 'shiftDetail',\n\tshiftCreate: 'shiftCreate',\n\tshiftEdit: 'shiftEdit',\n\tloading: 'loading'\n};\n\nexport const MODALS = {\n\tdeleteWorkShift: 'deleteWorkShift',\n\tdeleteSchedulePlan: 'deleteSchedulePlan'\n};\n\nexport const CARD_DROPDOWN_ACTIONS = {\n\tduplicate: { id: 'duplicate', label: t('Duplicate') },\n\tunpublish: { id: 'unpublish', label: t('Unpublish') }\n};\n\nexport const SHIFT_STATES = {\n\tlocked: '1',\n\tunlocked: '2'\n};\n\nexport const M2M_SHIFT_TO_AGENT_TABLE = 'sn_shift_planning_schedule_shift';\n\nconst SAVE_BUTTON = {\n\tlabel: t('Save'),\n\tvariant: 'secondary',\n\tactions: [\n\t\t{\n\t\t\tname: 'SCHEDULE_EDIT#SAVE'\n\t\t},\n\t\t{\n\t\t\tname: GFORM_ACTIONS.GFORM_SAVE,\n\t\t\tpayload: {}\n\t\t}\n\t]\n};\n\nconst PUBLISH_BUTTON = {\n\tlabel: t('Publish'),\n\tvariant: 'secondary',\n\tactions: [\n\t\t{\n\t\t\tname: 'SCHEDULE_EDIT#PUBLISH'\n\t\t},\n\t\t{\n\t\t\tname: 'save_placeholder',\n\t\t\tpayload: {}\n\t\t}\n\t]\n};\n\nexport const SCHEDULE_BUTTONS = {\n\tedit: [SAVE_BUTTON],\n\tcreate: [SAVE_BUTTON],\n\tDraft: [PUBLISH_BUTTON]\n};\n\nexport const DEBOUNCE_TIME_BEFORE_TRIGGER_SCHEDULES_CREATION = 300;\n","export const setSessionData = (key, sessionData) => {\n\twindow.sessionStorage.setItem(\n\t\t`sn-manager-${key}-data`,\n\t\tJSON.stringify(sessionData)\n\t);\n};\n\nexport const getSessionData = key => {\n\tlet sessionData = JSON.parse(\n\t\twindow.sessionStorage.getItem(`sn-manager-${key}-data`)\n\t);\n\tif (!sessionData) {\n\t\tsessionData = {};\n\t\twindow.sessionStorage.setItem(\n\t\t\t`sn-manager-${key}-data`,\n\t\t\tJSON.stringify(sessionData)\n\t\t);\n\t}\n\treturn sessionData;\n};\n","module.exports = __TECTONIC__$servicenow_now_alert;","module.exports = __TECTONIC__$devsnc_sn_scripting_environment;","import { preUserData, getProperty } from 'sn-uxpage-presource';\nimport { createSelector } from 'reselect';\nimport get from 'lodash/get';\nimport { SYS_PROP_TEAMS, BREAKDOWNS, BREAKDOWN_RELATIONS } from './constants';\n\nexport const getPreUserData = () => preUserData.initialState;\n\nexport const getUserDateFormat = createSelector(\n\tgetPreUserData,\n\tuserData => get(userData, 'dateFormat', 'YYYY-MM-DD').toUpperCase()\n);\n\nexport const getUserTimeFormat = createSelector(\n\tgetPreUserData,\n\tuserData => get(userData, 'timeFormat', 'h:mm a')\n);\n\nexport const getAssignmentGroupBreakdown = () => {\n\tconst assignmentGroupBreakdown = getProperty(\n\t\tSYS_PROP_TEAMS.BREAKDOWN_ASSIGNMENT_GROUP,\n\t\tBREAKDOWNS.assignment_group\n\t);\n\treturn assignmentGroupBreakdown;\n};\n\nexport const getAssignedToBreakdown = () => {\n\tconst assignedToBreakdown = getProperty(\n\t\tSYS_PROP_TEAMS.BREAKDOWN_ASSIGNED_TO,\n\t\tBREAKDOWNS.assigned_to\n\t);\n\treturn assignedToBreakdown;\n};\n\nexport const getMembersBreakdownRelation = () => {\n\tconst membersId = getProperty(\n\t\tSYS_PROP_TEAMS.BREAKDOWN_RELATION_MEMBERS,\n\t\tBREAKDOWN_RELATIONS.members\n\t);\n\treturn membersId;\n};\n","module.exports = __TECTONIC__$servicenow_now_card;","module.exports = __TECTONIC__$servicenow_now_record_list_connected;","module.exports = __TECTONIC__$servicenow_now_record_list;","import { AWA_WORK_ITEM_TABLE_DEFAULT_QUERY } from './constants';\nimport { preUserData } from 'sn-uxpage-presource';\nimport { getSessionData, setSessionData } from '../../utils/utils';\nimport { MODULES } from '../../common/constants';\nimport forEach from 'lodash/forEach';\nimport { PAGE } from './constants';\nimport { SYS_PROP_KPI_AUTO_REFRESH_INTERVAL_SECONDS } from './constants';\nimport { getProperty } from 'sn-uxpage-presource';\n\nexport const getSupervisorViewConfigQuery = (\n\tworkItemAlias,\n\tserviceChannelId,\n\tallQueuesIds,\n\tassignmentGroups\n) => {\n\tconst supervisorViewConfigQuery = `${workItemAlias}_queue.active=true^${workItemAlias}_queue.service_channel.active=true^${workItemAlias}_state=accepted^${workItemAlias}_queue.service_channel.sys_id=${serviceChannelId}^${workItemAlias}_assignment_group.sys_idIN${assignmentGroups}^${workItemAlias}_queue.sys_idIN${allQueuesIds}`;\n\n\treturn supervisorViewConfigQuery;\n};\n\nexport const getWorkItemDefaultQuery = (\n\tserviceChannelId,\n\tallQueuesIds,\n\tassignmentGroups\n) => {\n\tconst userSysId = preUserData.initialState.sys_id;\n\tconst queryWithAssignmentGroup = `${AWA_WORK_ITEM_TABLE_DEFAULT_QUERY}^state=pending_accept${\n\t\tserviceChannelId\n\t\t\t? `^queue.service_channel.sys_id=${serviceChannelId}`\n\t\t\t: ''\n\t}^assignment_group.sys_idIN${assignmentGroups}^queue.sys_idIN${allQueuesIds}`;\n\tconst queryWithQueueId = `${AWA_WORK_ITEM_TABLE_DEFAULT_QUERY}^state=queued${\n\t\tserviceChannelId\n\t\t\t? `^queue.service_channel.sys_id=${serviceChannelId}`\n\t\t\t: ''\n\t}^queue.sys_idIN${allQueuesIds}`;\n\tconst queryWithAllocatedBy = `${AWA_WORK_ITEM_TABLE_DEFAULT_QUERY}^state=pending_accept${\n\t\tserviceChannelId\n\t\t\t? `^queue.service_channel.sys_id=${serviceChannelId}`\n\t\t\t: ''\n\t}^queue.sys_idIN${allQueuesIds}^allocated_by=${userSysId}`;\n\tconst query =\n\t\tqueryWithAssignmentGroup +\n\t\t'^NQ' +\n\t\tqueryWithQueueId +\n\t\t'^NQ' +\n\t\tqueryWithAllocatedBy;\n\treturn query;\n};\n\nexport const updateAppliedFilters = (availableGroups, appliedGroups) => {\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tconst filtersBucket = sessionData.appliedFiltersBucket;\n\tforEach(availableGroups, gr => {\n\t\tsessionData.appliedFiltersBucket[gr] = appliedGroups.includes(gr)\n\t\t\t? 1\n\t\t\t: 0;\n\t});\n\tsessionData.appliedFiltersBucket = filtersBucket;\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n};\n\nexport const getFilterDetails = (page, sysId) => {\n\tvar allGroups;\n\tvar selectedGroups;\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tconst data = sessionData.appliedFiltersBucket || {};\n\t//Get all the selected groups but show only the once relevant to the page\n\tconst filtersApplied = [];\n\tfor (const [key, value] of Object.entries(data)) {\n\t\tif (value == 1) {\n\t\t\tfiltersApplied.push(key);\n\t\t}\n\t}\n\tswitch (page) {\n\tcase PAGE.OVERVIEW:\n\t\tallGroups = sessionData.managedGroups.split(',');\n\t\tselectedGroups = filtersApplied;\n\t\tbreak;\n\tcase PAGE.CHANNEL:\n\t\tallGroups = sessionData.channelGroupMap[sysId];\n\t\tselectedGroups = filtersApplied.filter(x => allGroups.includes(x));\n\t\tbreak;\n\tcase PAGE.QUEUE:\n\t\tallGroups = sessionData.queueGroupMap[sysId];\n\t\tselectedGroups = filtersApplied.filter(x => allGroups.includes(x));\n\t\tbreak;\n\t}\n\treturn {\n\t\tallGroups,\n\t\tselectedGroups\n\t};\n};\n\nexport const hasFilterChanged = (page, sysId, assignmentGroups) => {\n\tconst groupsStr = assignmentGroups.sort().join();\n\tconst { allGroups, selectedGroups } = getFilterDetails(page, sysId);\n\tconst allGroupsStr = allGroups.sort().join();\n\tconst selectedGroupsStr = selectedGroups.sort().join();\n\treturn (\n\t\tgroupsStr != (selectedGroups.length ? selectedGroupsStr : allGroupsStr)\n\t);\n};\n\nconst getDataConfig = reportConfig => {\n\tconst dataConfig = {};\n\n\tdataConfig.source_id = reportConfig.source_id;\n\tdataConfig.type = reportConfig.type;\n\tdataConfig.filter_query = reportConfig.filter_query;\n\tdataConfig.source_type = reportConfig.source_type;\n\tdataConfig.aggregate_function = reportConfig.aggregate_function;\n\tdataConfig.aggregate_field = reportConfig.aggregate_field;\n\tdataConfig.list_ui_view = reportConfig.list_ui_view;\n\tdataConfig.decimal_precision = reportConfig.decimal_precision;\n\treturn dataConfig;\n};\n\nexport const addReportToList = (reportConfig, reportLabel, updateState) => {\n\tconst dataConfig = getDataConfig(reportConfig);\n\tconst refreshFrequency = getProperty(\n\t\tSYS_PROP_KPI_AUTO_REFRESH_INTERVAL_SECONDS,\n\t\t'30'\n\t);\n\tupdateState({\n\t\tpath: 'reportData',\n\t\tvalue: { dataConfig, reportLabel, refreshFrequency },\n\t\toperation: 'push'\n\t});\n};\n","import { t } from 'sn-translate';\n\nexport const COMPONENT_NAME = 'SN_MANAGER_EVENT_REQUEST';\nexport const GRAPHQL_ATTENDEES_MAX_LIMIT = 15;\n\nexport const TIME_OFF_REQUEST = t('Time Off Request');\nexport const NEW_TIME_OFF_REQUEST = t('New Time Off Request');\nexport const AGENT = t('Agents');\nexport const USERS = t('Users');\nexport const ATTENDEES = t('Attendees');\nexport const SAVE = t('Save');\n\nexport const CREATE = 'create';\nexport const EDIT = 'edit';\n\nexport const CONTEXTS = {\n\tMANAGER_WS: 'manager_workspace',\n\tAGENT_WS: 'agent_workspace'\n};\n\nexport const USER_INFO_READY = 'SN_USER_INFO#USER_INFO_READY';\n\nexport const TYPEAHEAD_FETCH_ATTENDEES =\n\tCOMPONENT_NAME + '#TYPEAHEAD_FETCH_ATTENDEES';\nexport const TYPEAHEAD_FETCH_ATTENDEES_SUCCEDED =\n\tCOMPONENT_NAME + '#TYPEAHEAD_FETCH_ATTENDEES_SUCCEDED';\n\nexport const TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES =\n\tCOMPONENT_NAME + '#TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES';\nexport const TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED =\n\tCOMPONENT_NAME + '#TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED';\n\nexport const NOW_TYPEAHEAD_MULTI_VALUE_SET = 'NOW_TYPEAHEAD_MULTI#VALUE_SET';\nexport const NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET =\n\t'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET';\nexport const NOW_TYPEAHEAD_MULTI_INVALID_SET =\n\t'NOW_TYPEAHEAD_MULTI#INVALID_SET';\n\nexport const NOW_TOGGLE_CHECKED_SET = 'NOW_TOGGLE#CHECKED_SET';\nexport const NOW_INPUT_CHANGED = 'NOW_INPUT#INPUT';\nexport const NOW_TEXTAREA_INPUT_CHANGED = 'NOW_TEXTAREA#INPUT';\nexport const SN_RECORD_INPUT_VALUE_CHANGED = 'SN_RECORD_INPUT#VALUE_CHANGED';\nexport const NOW_RECORD_FIELD_LOOKUP_CONNECTED_VALUE_CHANGED =\n\t'NOW_RECORD_FIELD_LOOKUP_CONNECTED#VALUE_CHANGED';\n\nexport const DATE_PICKER_VALUE_CHANGED = 'NOW_RECORD_DATE_PICKER#VALUE_CHANGED';\n\nexport const EVENT_REQUEST_SAVE = COMPONENT_NAME + '#EVENT_REQUEST_SAVE';\nexport const EVENT_REQUEST_CANCEL = COMPONENT_NAME + '#EVENT_REQUEST_CANCEL';\n\nexport const NOW_RECORD_TIME_VALUE_CHANGED = 'NOW_RECORD_TIME#VALUE_CHANGED';\nexport const NOW_MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\n\nexport const EVENT_REQUEST_MODAL_SET = COMPONENT_NAME + '#MODAL_SET';\n\nexport const EVENT_REQUEST_ENDPOINTS = {\n\tCREATE_EVENT: '/api/sn_shift_planning/shift_planning/create_events',\n\tEDIT_EVENT: '/api/sn_shift_planning/shift_planning/edit_schedule'\n};\nexport const EVENT_REQUEST_SUBMIT_CREATE = COMPONENT_NAME + '#SUBMIT_CREATE';\nexport const EVENT_REQUEST_SUBMIT_EDIT = COMPONENT_NAME + '#SUBMIT_EDIT';\n\n//Internal Status Tracking\nexport const EVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED =\n\tCOMPONENT_NAME + '#SUBMIT_CREATE_SUCCEEDED';\nexport const EVENT_REQUEST_SUBMIT_CREATE_FAILED =\n\tCOMPONENT_NAME + '#SUBMIT_CREATE_FAILED';\nexport const EVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED =\n\tCOMPONENT_NAME + '#SUBMIT_EDIT_SUCCEEDED';\nexport const EVENT_REQUEST_SUBMIT_EDIT_FAILED =\n\tCOMPONENT_NAME + '#SUBMIT_EDIT_FAILED';\n\n//Emit to outside world\nexport const EVENT_REQUEST_SUBMISSION_SUCCESSFUL =\n\tCOMPONENT_NAME + '#SUBMIT_SUCCESSFUL';\n\nexport const EVENT_REQUEST_SUBMISSION_FAILED =\n\tCOMPONENT_NAME + '#SUBMIT_FAILED';\n","export const MGR_WORKSPACE_DATA = 'mgrWorkspaceData';\n\n/**\n * Constants used by the User Profile Overview components\n */\n\n/**\n * Fields that we're going to retrieve from the Agent's record to show it on the Profile Details section\n */\nexport const ACTIONS = {\n\t/**\n\t * FETCH ALL WFO KPI Profiles via REST\n\t */\n\tFETCH_INDICATORS_TO_GROUPS_DATA: 'FETCH_INDICATORS_TO_GROUPS_DATA',\n\n\t/**\n\t * handles the loading incon of the User details indicators card container\n\t */\n\tFETCH_INDICATORS_TO_GROUP_START: 'FETCH_INDICATORS_TO_GROUP_START',\n\t/**\n\t * Coeffect used to process the payload retrieved by FETCH_ALL_TEAM_PROFILES\n\t */\n\tFETCH_INDICATORS_TO_GROUPS_DATA_SUCCESS:\n\t\t'FETCH_INDICATORS_TO_GROUPS_DATA_SUCCESS',\n\n\t/**\n\t * Fetches the PA Data from all available KPI Profiles\n\t */\n\tFETCH_GROUP_INDICATOR_SCORES: 'FETCH_GROUP_INDICATOR_SCORES',\n\n\t/**\n\t * Coeffect that processes the payload retrieved by FETCH_GROUP_INDICATOR_SCORES\n\t */\n\tFETCH_GROUP_INDICATOR_SCORES_SUCCESS:\n\t\t'FETCH_GROUP_INDICATOR_SCORES_SUCCESS',\n\n\t/**\n\t * Coeffect used to handle data fetch error\n\t */\n\tCOULD_NOT_RETRIEVE_DATA: 'COULD_NOT_RETRIEVE_DATA',\n\n\t/**\n\t * Handler for KPI Score card.\n\t */\n\tKPI_CARD_CLICKED: 'NOW_CARD#CLICKED',\n\n\tCHANGE_USER_GROUP: 'NOW_DROPDOWN#SELECTED_ITEMS_SET',\n\n\t/**\n\t * Skill Container Actions:\n\t */\n\tFETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS:\n\t\t'FETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS',\n\tFETCH_SKILLS_COUNT_AGGREGATOR_ERROR: 'FETCH_SKILLS_COUNT_AGGREGATOR_ERROR',\n\tFETCH_SKILLS_COUNT_AGGREGATOR_START: 'FETCH_SKILLS_COUNT_AGGREGATOR_START',\n\tDRILLDOWN_SKILL_CARD: 'DRILLDOWN_SKILL_CARD',\n\n\t/**\n\t * Skill recommendation Actions\n\t */\n\tERROR_OCCURED: 'ERROR_OCCURED',\n\tFETCH_SKILL_RECOMMENDATION: 'FETCH_SKILL_RECOMMENDATION',\n\tFETCH_SKILL_RECOMMENDATION_SUCCEEDED:\n\t\t'FETCH_SKILL_RECOMMENDATION_SUCCEEDED',\n\tFETCH_SKILL_RECOMMENDATION_STARTED: 'FETCH_SKILL_RECOMMENDATION_STARTED',\n\tAPPROVE_RECOMMENDATION: 'APPROVE_RECOMMENDATION',\n\tBUTTON_CLICKED: 'NOW_BUTTON_BARE#CLICKED',\n\tSKILL_ASSIGNED: 'SKILL_ASSIGNED'\n};\n\n// EOF Constants used by the User Profile Overview components\n\n// Constants used by the effects of the user profile indicator cards container\nexport const BREAKDOWN_ASGN_GROUP = 'baec0752bf130100b96dac808c0739ed';\nexport const FETCH_MULTI_INDICATOR_BREAKDOWNs_API_ENDPOINT =\n\t'api/now/pa/scores/data_frame?multi_indicator_breakdowns=true';\n\nexport const BTN_APPROVE = 'approve';\n","module.exports = __TECTONIC__$servicenow_now_icon;","module.exports = __TECTONIC__$servicenow_now_modal;","module.exports = __TECTONIC__sn_user_preferences;","module.exports = __TECTONIC__lodash_4_17_15[\"isEqual\"];","import {\n\tSCHEDULE_TABBED_LIST_QUERIES,\n\tSCHEDULE_TABBED_LISTS,\n\tGRAPHQL_MAX_LIMIT\n} from './constants';\n\n//GraphQL query for obtaining number of records in tabbed lists for Scheduling module.\n\nexport const TABBED_LIST_RECORD_COUNT_QUERY = `query ($query: String) {\n\tquery: GlideRecord_Query {\n\t\tsn_shift_planning_schedule_plan(queryConditions: $query) {\n\t\t\t\t_rowCount\n\t\t}\n\t\tsn_shift_planning_shift_plan(queryConditions: $query) {\n\t\t\t\t_rowCount\n\t\t}\n\t\tsysapproval_approver(queryConditions: \"${\n\tSCHEDULE_TABBED_LIST_QUERIES[SCHEDULE_TABBED_LISTS.APPROVALS]\n}\") {\n\t\t\t\t_rowCount\n\t\t}\n\t}\n}`;\n\nexport const CURRENT_USER_QUERY = `{\n\tGlideDomain_Query {\n\t\tuser {\n\t\t\tsys_id\n\t\t\tuserName\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tfullName\n\t\t\tavatar\n\t\t\tinitials\n\t\t\tdateFormat\n\t\t\ttimeZone\n\t\t\tdateTimeFormat\n\t\t\tlanguage\n\t\t}\n\t}\n}`;\n\nexport const DEFAULT_EVENT_TYPE_QUERY = `query {\n\teventQuery: GlideRecord_Query {\n\t\ttable: sn_shift_planning_event(queryConditions: \"ORDERBYorder\") {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\torder {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tactive {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tcategory {\n\t\t\t\t\tvalue\n\t\t\t\t\t_reference {\n\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tname {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinclude_events {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tenclosed_under {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmetadata {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcategoryQuery: GlideRecord_Query {\n\t\ttable: sn_shift_planning_event_category(queryConditions: \"active=true\") {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tinclude_events {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tenclosed_under {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tmetadata {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuserRoles: GlideDomain_Query {\n\t\tuser {\n\t\t\troles\n\t\t\tallRoles\n\t\t}\n\t}\n}`;\n\nexport const GROUP_QUERY = `\n\tquery($userCondition: String!) {\n\t\tGlideRecord_Query {\n\t\t\tsys_user_grmember(queryConditions: $userCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tgroup {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`;\n\nexport const MANAGED_GROUP_QUERY = `\n\tquery($userCondition: String!) {\n\t\tGlideRecord_Query {\n\t\t\tsys_user_group(queryConditions: $userCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tsys_id {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsn_wfo_add_manager(queryConditions: $userCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tassignment_group {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`;\n","import { t } from 'sn-translate';\n\nexport const ACTION_PREFIX = 'SN_MANAGER_MEMBER_DRILLDOWN#';\n\nexport const FETCH_SCORES = ACTION_PREFIX + 'FETCH_SCORES';\nexport const FETCH_SCORES_START = ACTION_PREFIX + 'FETCH_SCORES_START';\nexport const FETCH_SCORES_SUCCESS = ACTION_PREFIX + 'FETCH_SCORES_SUCCESS';\nexport const FETCH_SCORES_ERROR = ACTION_PREFIX + 'FETCH_SCORES_ERROR';\n\nexport const FETCH_PARENT_INDICATORS =\n\tACTION_PREFIX + 'FETCH_PARENT_INDICATORS';\nexport const FETCH_PARENT_INDICATORS_START =\n\tACTION_PREFIX + 'FETCH_PARENT_INDICATORS_START';\nexport const FETCH_PARENT_INDICATORS_SUCCESS =\n\tACTION_PREFIX + 'FETCH_PARENT_INDICATORS_SUCCESS';\nexport const FETCH_PARENT_INDICATORS_ERROR =\n\tACTION_PREFIX + 'FETCH_PARENT_INDICATORS_ERROR';\n\nexport const FETCH_INDICATORS = ACTION_PREFIX + 'FETCH_INDICATORS';\nexport const FETCH_INDICATORS_START = ACTION_PREFIX + 'FETCH_INDICATORS_START';\nexport const FETCH_INDICATORS_SUCCESS =\n\tACTION_PREFIX + 'FETCH_INDICATORS_SUCCESS';\nexport const FETCH_INDICATORS_ERROR = ACTION_PREFIX + 'FETCH_INDICATORS_ERROR';\n\nexport const FETCH_MEMBER_DATA = ACTION_PREFIX + 'FETCH_MEMBER_DATA';\nexport const FETCH_MEMBER_DATA_START =\n\tACTION_PREFIX + 'FETCH_MEMBER_DATA_START';\nexport const FETCH_MEMBER_DATA_SUCCESS =\n\tACTION_PREFIX + 'FETCH_MEMBER_DATA_SUCCESS';\nexport const FETCH_MEMBER_DATA_ERROR =\n\tACTION_PREFIX + 'FETCH_MEMBER_DATA_ERROR';\n\nexport const FETCH_PRIMARY_MEMBERS = ACTION_PREFIX + 'FETCH_PRIMARY_MEMBERS';\nexport const FETCH_PRIMARY_MEMBERS_START =\n\tACTION_PREFIX + 'FETCH_PRIMARY_MEMBERS_START';\nexport const FETCH_PRIMARY_MEMBERS_SUCCESS =\n\tACTION_PREFIX + 'FETCH_PRIMARY_MEMBERS_SUCCESS';\nexport const FETCH_PRIMARY_MEMBERS_ERROR =\n\tACTION_PREFIX + 'FETCH_PRIMARY_MEMBERS_ERROR';\n\nexport const STATUS = {\n\tinitial: 'initial',\n\tindicatorsLoading: 'indicatorsLoading',\n\tindicatorsLoaded: 'indicatorsLoaded',\n\tscoresLoading: 'scoresLoading',\n\tscoresLoaded: 'scoresLoaded',\n\tprimaryMembersLoading: 'primaryMembersLoading',\n\tprimaryMembersLoaded: 'primaryMembersLoaded',\n\tmemberDataLoading: 'memberDataLoading',\n\tmemberDataLoaded: 'memberDataLoaded'\n};\n\nexport const MEMBER_NAME = 'MEMBER_NAME';\nexport const DEFAULT_PAGE_SIZE = 20;\nexport const TIME_SERIES_CHART_HEIGHT = 200;\n\nexport const chartStyleConfig = {\n\taccessibilityTable: false,\n\taccessibilityMode: false,\n\textents: { y: [0, 'dynamic'] },\n\tseriesConfig: {\n\t\tdata_0_0: {\n\t\t\tlabel: t('Actual'),\n\t\t\tx: 'x',\n\t\t\ty: 'data_0_0',\n\t\t\ttype: ['line', 'scatter']\n\t\t}\n\t},\n\ttrendlinesConfig: {\n\t\ttrend_0_0: {\n\t\t\tfor: 'data_0_0',\n\t\t\tlabel: t('Trend'),\n\t\t\tx: 'x',\n\t\t\ty: 'trend_0_0'\n\t\t}\n\t},\n\tforecastConfig: {\n\t\tforecast_0_0: {\n\t\t\tfor: 'data_0_0',\n\t\t\tlabel: t('Forecast'),\n\t\t\tx: 'x',\n\t\t\ty: 'forecast_0_0',\n\t\t\ttype: ['line']\n\t\t}\n\t},\n\tregisterConfig: {\n\t\tlegendOnly: true,\n\t\tjustifyItems: 'start'\n\t},\n\tyAxisConfig: { title: t('Performance') },\n\tyFormat: '.1f',\n\twidth: 'auto',\n\theight: 'auto'\n};\n","import { t } from 'sn-translate';\nimport {\n\tALL_WORK_ITEMS_DEFAULT_COLUMN,\n\tRECORD_LIST_TYPE_AGENT,\n\tRECORD_LIST_TYPE_QUEUE\n} from '../common/constants';\n\nexport const FETCH_CHANNELS = 'FETCH_CHANNELS';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_ALL_KPI_SCORES = 'FETCH_ALL_KPI_SCORES';\nexport const FETCH_KPI_SCORE = 'FETCH_KPI_SCORE';\nexport const FETCH_KPI_SCORE_SUCCESS = 'FETCH_KPI_SCORE_SUCCESS';\nexport const ERROR_OCCURED = 'ERROR_OCCURED';\nexport const MAX_REPORTS = 5;\nexport const CARD_CLICKED = 'SN_MANAGER_INDICATOR_GROUP_CARD#CARD_CLICKED';\nexport const AWA_SERVICE_CHANNEL = 'awa_service_channel';\nexport const FETCH_QUEUES_AND_AGENTS_IDS = 'FETCH_QUEUES_AND_AGENTS_IDS';\nexport const FETCH_QUEUES_AND_AGENTS_IDS_SUCCESS =\n\t'FETCH_QUEUES_AND_AGENTS_IDS_SUCCESS';\nexport const FETCH_QUEUES_AND_AGENTS_IDS_ERROR =\n\t'FETCH_QUEUES_AND_AGENTS_IDS_ERROR';\nexport const FETCH_GROUP_CHANEL_QUEUE_MAPPING =\n\t'FETCH_GROUP_CHANEL_QUEUE_MAPPING';\nexport const FETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS =\n\t'FETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS';\n\n// constants for sn-manager-channels-tabs\nexport const ALL_WORK_ITEMS = 'ALL_WORK_ITEMS';\nexport const ALL_QUEUES = 'ALL_QUEUES';\nexport const ALL_AGENTS = 'ALL_AGENTS';\nexport const TAB_ITEMS = [\n\t{ id: ALL_WORK_ITEMS, label: t('Queued Work') },\n\t{ id: ALL_QUEUES, label: t('All Queues') },\n\t{ id: ALL_AGENTS, label: t('All Agents') }\n];\nexport const TAB_LIST_DETAILS = {\n\tALL_WORK_ITEMS: {\n\t\ttable: 'awa_work_item',\n\t\tcolumns: ALL_WORK_ITEMS_DEFAULT_COLUMN,\n\t\tquery: '',\n\t\tlistTitle: t('Queued Work')\n\t},\n\tALL_QUEUES: {\n\t\tlistTitle: t('Queues'),\n\t\tisCustomList: true,\n\t\ttype: RECORD_LIST_TYPE_QUEUE\n\t},\n\tALL_AGENTS: {\n\t\tlistTitle: t('Agents'),\n\t\tisCustomList: true,\n\t\ttype: RECORD_LIST_TYPE_AGENT\n\t}\n};\nexport const AWA_WORK_ITEM_TABLE_DEFAULT_QUERY =\n\t'queue.active=true^queue.service_channel.active=true^stateINpending_accept,queued';\n","module.exports = __TECTONIC__$servicenow_now_tabs;","import { t } from 'sn-translate';\nexport const FETCH_MANAGER_REQUESTED = 'FETCH_MANAGER_REQUESTED';\nexport const FETCH_MANAGER_SUCCEEDED = 'FETCH_MANAGER_SUCCEEDED';\nexport const COACHING_OVERVIEW = 'coaching_overview';\nexport const COACHING_ASSESSMENTS = 'coaching_assessments';\nexport const COACHING_TRAINING = 'coaching_training';\nexport const COACHING_SKILLS = 'coaching_skills';\nexport const SELECTED_ITEM_SET = 'NOW_TABS#SELECTED_ITEM_SET';\nexport const items = [\n\t{ id: COACHING_OVERVIEW, label: t('Overview') },\n\t{ id: COACHING_ASSESSMENTS, label: t('Active Assessments') },\n\t{ id: COACHING_TRAINING, label: t('Training') },\n\t{ id: COACHING_SKILLS, label: t('Skills') }\n];\nexport const ASSESSMENT_TABLE = 'sn_coaching_assessment';\nexport const ASSESSMENT_LIST_TITLE = t('Assessments');\nexport const ASSESSMENT_QUERY = `assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe^state=1^ORstate=2^NQassignment_groupDYNAMICd6435e965f510100a9ad2572f2b47744^state=1^ORstate=2`;\nexport const TRAINING_TABLE = 'sn_coaching_assessment_recommended_learning';\nexport const TRAINING_LIST_TITLE = t('Training');\nexport const TRAINING_QUERY = `assessment.assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe^learning_finished=pending^ORDERBYsys_created_on`;\n","module.exports = __TECTONIC__$servicenow_now_label_value;","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nimport userGroupView from './view.js';\nimport userGroupProps from './properties.js';\nimport userGroupActionHandlers from './actionHandlers.js';\n\nexport default createCustomElement('sn-manager-user-groups', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\t...userGroupView,\n\t...userGroupProps,\n\t...userGroupActionHandlers\n});\n","export { default } from './filter-config';\n","module.exports = __TECTONIC__lodash_4_17_15[\"forEach\"];","module.exports = __TECTONIC__$servicenow_now_avatar;","//actions.js\nimport { createAmbSubscriptionEffect } from '@servicenow/ui-effect-amb';\nimport { RECORD_WATCHER_UPDATED, RW_ACTIONS } from '../constants';\n\nconst recordWatcher = createAmbSubscriptionEffect(\n\t'/rw/default/:table/:filter',\n\t{\n\t\tsubscribeStartedActionType: RW_ACTIONS.SUBSCRIPTION_STARTED,\n\t\tsubscribeSucceededActionType: RW_ACTIONS.SUBSCRIPTION_SUCCEEDED,\n\t\tsubscribeFailedActionType: RW_ACTIONS.SUBSCRIPTION_FAILED,\n\t\tmessageReceivedActionType: RW_ACTIONS.MESSAGE_RECEIVED,\n\t\tunsubscribeSucceededActionType: RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED\n\t}\n);\n\nexport default {\n\tactions: {\n\t\t[RECORD_WATCHER_UPDATED]: {\n\t\t\tprivate: true\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_STARTED]: {\n\t\t\tprivate: true\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_SUCCEEDED]: {\n\t\t\tprivate: true\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_FAILED]: {\n\t\t\tprivate: true\n\t\t},\n\t\t[RW_ACTIONS.MESSAGE_RECEIVED]: {\n\t\t\tprivate: true\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED]: {\n\t\t\tprivate: true\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[RECORD_WATCHER_UPDATED]: recordWatcher\n\t}\n};\n","export const PAGINATION_PAGE_UPDATE = 'NOW_PAGINATION#PAGE_UPDATE';\nexport const PAGINATION_LIMIT_UPDATE = 'NOW_PAGINATION#LIMIT_UPDATE';\nexport const FETCH_MAX_USERS_COLUMNS = 'FETCH_MAX_USERS_COLUMNS';\nexport const FETCH_MAX_USERS_COLUMNS_SUCCESS =\n\t'FETCH_MAX_USERS_COLUMNS_SUCCESS';\nexport const MAX_USERS_COLUMNS_DEFAULT = 50;\nexport const FETCH_START = 'FETCH_START';\nexport const TOGGLE_SIDE_PANEL = 'TOGGLE_SIDE_PANEL';\nexport const NOW_PANEL_OPENED_SET = 'NOW_PANEL#OPENED_SET';\nexport const STATUS = {\n\tinitial: 'initial',\n\tloading: 'loading',\n\tloaded: 'loaded'\n};\nexport const SHOW_SKILL_ASSIGNMENT_POPOVER = 'SHOW_SKILL_ASSIGNMENT_POPOVER';\n\nexport const ADD_SKILL_TO_USER = 'ADD_SKILL_TO_USER';\nexport const ADD_SKILL_TO_USER_SUCCESS = 'ADD_SKILL_TO_USER_SUCCESS';\nexport const ADD_SKILL_TO_USER_ERROR = 'ADD_SKILL_TO_USER_ERROR';\n\nexport const UPDATE_USER_SKILL_LEVEL = 'UPDATE_USER_SKILL_LEVEL';\nexport const UPDATE_USER_SKILL_LEVEL_SUCCESS =\n\t'UPDATE_USER_SKILL_LEVEL_SUCCESS';\nexport const UPDATE_USER_SKILL_LEVEL_ERROR = 'UPDATE_USER_SKILL_LEVEL_ERROR';\n\nexport const REMOVE_SKILL_FROM_USER = 'REMOVE_SKILL_FROM_USER';\nexport const REMOVE_SKILL_FROM_USER_SUCCESS = 'REMOVE_SKILL_FROM_USER_SUCCESS';\nexport const REMOVE_SKILL_FROM_USER_ERROR = 'REMOVE_SKILL_FROM_USER_ERROR';\n\nexport const FETCH_SKILL_LEVEL_COLOR_MAP = 'FETCH_SKILL_LEVEL_COLOR_MAP';\nexport const FETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS =\n\t'FETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS';\n","export const COMPONENT_NAME = 'sn-manager-coaching-skill-assignment-popover';\n\n// private actions\nexport const OKAY_CLICKED = `${COMPONENT_NAME}#OKAY_CLICKED`;\nexport const CANCEL_CLICKED = `${COMPONENT_NAME}#CANCEL_CLICKED`;\n\n// public actions\nexport const SKILL_ASSIGNMENT_POPOVER_SUBMIT = `${COMPONENT_NAME}#SUBMIT`;\n","module.exports = __TECTONIC__$servicenow_now_highlighted_value;","import {\n\tCHANNEL,\n\tQUEUE,\n\tSTATE,\n\tASSIGNED_TO,\n\tNAME,\n\tAVAILABILITY_DISPLAY_VALUE,\n\tAVAILABILITY,\n\tMATCHING_SKILLS,\n\tMATCHING_SKILLS_RATIO,\n\tCAPACITY_RATIO,\n\tASSIGNMENT_GROUPS,\n\tPRESENCE,\n\tAGENT_NAME_LABEL,\n\tPRESENCE_LABEL,\n\tMATCHING_SKILLS_LABEL,\n\tCAPACITY_LABEL,\n\tAVAILABILITY_LABEL,\n\tASSIGNMENT_GROUPS_LABEL,\n\tSTRING,\n\tMANUAL_ASSIGNMENT_ERROR_MESSAGE,\n\tAGENT_NOT_AVAILABLE,\n\tMANUAL_ASSIGNMENT_NOT_PROCESSED\n} from './constants';\nimport { t } from 'sn-translate';\nimport isEmpty from 'lodash/isEmpty';\n\nconst columns = sortOrder =>\n\tnew Map([\n\t\t[\n\t\t\tNAME,\n\t\t\t{\n\t\t\t\tcolumnName: NAME,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: AGENT_NAME_LABEL,\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: true,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false,\n\t\t\t\t\tinternalType: STRING\n\t\t\t\t},\n\t\t\t\tisSorted: sortOrder.column == NAME ? true : false,\n\t\t\t\tisDescending: sortOrder.isDescending\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tPRESENCE,\n\t\t\t{\n\t\t\t\tcolumnName: PRESENCE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: PRESENCE_LABEL,\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: true,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false,\n\t\t\t\t\tinternalType: STRING\n\t\t\t\t},\n\t\t\t\tisSorted: sortOrder.column == PRESENCE ? true : false,\n\t\t\t\tisDescending: sortOrder.isDescending\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tCAPACITY_RATIO,\n\t\t\t{\n\t\t\t\tcolumnName: CAPACITY_RATIO,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: CAPACITY_LABEL,\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: true,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false,\n\t\t\t\t\tinternalType: STRING\n\t\t\t\t},\n\t\t\t\tisSorted: sortOrder.column == CAPACITY_RATIO ? true : false,\n\t\t\t\tisDescending: sortOrder.isDescending\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tMATCHING_SKILLS_RATIO,\n\t\t\t{\n\t\t\t\tcolumnName: MATCHING_SKILLS_RATIO,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: MATCHING_SKILLS_LABEL,\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: true,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false,\n\t\t\t\t\tinternalType: STRING\n\t\t\t\t},\n\t\t\t\tisSorted:\n\t\t\t\t\tsortOrder.column == MATCHING_SKILLS_RATIO ? true : false,\n\t\t\t\tisDescending: sortOrder.isDescending\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tAVAILABILITY_DISPLAY_VALUE,\n\t\t\t{\n\t\t\t\tcolumnName: AVAILABILITY_DISPLAY_VALUE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: AVAILABILITY_LABEL,\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: true,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false,\n\t\t\t\t\tinternalType: STRING\n\t\t\t\t},\n\t\t\t\tisSorted:\n\t\t\t\t\tsortOrder.column == AVAILABILITY_DISPLAY_VALUE\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false,\n\t\t\t\tisDescending: sortOrder.isDescending\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tASSIGNMENT_GROUPS,\n\t\t\t{\n\t\t\t\tcolumnName: ASSIGNMENT_GROUPS,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: ASSIGNMENT_GROUPS_LABEL,\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: true,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false,\n\t\t\t\t\tinternalType: STRING\n\t\t\t\t},\n\t\t\t\tisSorted: sortOrder.column == ASSIGNMENT_GROUPS ? true : false,\n\t\t\t\tisDescending: sortOrder.isDescending\n\t\t\t}\n\t\t]\n\t]);\n\nconst getAllSysIds = agents => {\n\tlet sysIds = [];\n\tagents.forEach(agent => {\n\t\tsysIds.push(agent.agentSysID);\n\t});\n\treturn sysIds;\n};\n\nconst getRowData = agent => {\n\treturn new Map([\n\t\t[\n\t\t\tNAME,\n\t\t\t{\n\t\t\t\tcolumnName: NAME,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent[NAME],\n\t\t\t\t\tvalue: agent[NAME]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tPRESENCE,\n\t\t\t{\n\t\t\t\tcolumnName: PRESENCE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent[PRESENCE],\n\t\t\t\t\tvalue: agent[PRESENCE]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tCAPACITY_RATIO,\n\t\t\t{\n\t\t\t\tcolumnName: CAPACITY_RATIO,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent[CAPACITY_RATIO],\n\t\t\t\t\tvalue: agent[CAPACITY_RATIO]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tMATCHING_SKILLS_RATIO,\n\t\t\t{\n\t\t\t\tcolumnName: MATCHING_SKILLS_RATIO,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent[MATCHING_SKILLS_RATIO],\n\t\t\t\t\tvalue: agent[MATCHING_SKILLS_RATIO]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tAVAILABILITY_DISPLAY_VALUE,\n\t\t\t{\n\t\t\t\tcolumnName: AVAILABILITY_DISPLAY_VALUE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent[AVAILABILITY_DISPLAY_VALUE],\n\t\t\t\t\tvalue: agent[AVAILABILITY_DISPLAY_VALUE]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tASSIGNMENT_GROUPS,\n\t\t\t{\n\t\t\t\tcolumnName: ASSIGNMENT_GROUPS,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent[ASSIGNMENT_GROUPS],\n\t\t\t\t\tvalue: agent[ASSIGNMENT_GROUPS]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]);\n};\n\nconst queryRows = agents => {\n\tlet queryRowsMap = new Map();\n\tagents.forEach(agent => {\n\t\tqueryRowsMap.set(agent.agentSysID, {\n\t\t\tuniqueId: agent.agentSysID,\n\t\t\tdisplayValue: agent.name,\n\t\t\thighlightedData: new Map(),\n\t\t\tdbViewData: new Map(),\n\t\t\trowData: getRowData(agent)\n\t\t});\n\t});\n\treturn queryRowsMap;\n};\nexport const buildGridModel = (agents, sortOrder) => {\n\tconst model = {\n\t\tallColumns: columns(sortOrder),\n\t\tlayoutQuery: {\n\t\t\tallSysIds: getAllSysIds(agents),\n\t\t\torderByColumn: '',\n\t\t\torderByIsDescending: false,\n\t\t\tencodedQuery: '',\n\t\t\tqueryRows: queryRows(agents)\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false,\n\t\t\tisDBView: false,\n\t\t\tisScriptableTable: false\n\t\t}\n\t};\n\treturn model;\n};\n\nexport const footerAction = isAssignDisabled => {\n\treturn [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: 'Allocate',\n\t\t\tvariant: 'primary',\n\t\t\tdisabled: isAssignDisabled\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: 'Cancel',\n\t\t\tvariant: 'secondary',\n\t\t\tdisabled: false\n\t\t}\n\t];\n};\n\nexport const getModalHeader = (document, description) => {\n\tif (document !== '' && description != '')\n\t\treturn document + ' - ' + description;\n\tif (description === '') return document;\n\treturn '';\n};\n\nexport const getLabelsAndValues = state => {\n\treturn [\n\t\t{\n\t\t\tlabel: CHANNEL,\n\t\t\tvalue: { type: STRING, value: `${state.channel}` }\n\t\t},\n\t\t{\n\t\t\tlabel: QUEUE,\n\t\t\tvalue: { type: STRING, value: `${state.queue}` }\n\t\t},\n\t\t{\n\t\t\tlabel: STATE,\n\t\t\tvalue: {\n\t\t\t\ttype: STRING,\n\t\t\t\tvalue: `${capitalize(state.workItemState)}`\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tlabel: ASSIGNED_TO,\n\t\t\tvalue: { type: STRING, value: `${state.assignedTo}` }\n\t\t}\n\t];\n};\n\nexport const getPaginationObj = rowCount => {\n\tconst DEFAULT_LIMIT = 5;\n\tconst DEFAULT_PAGE = 1;\n\treturn {\n\t\trecordCount: rowCount,\n\t\tpage: DEFAULT_PAGE,\n\t\tlimit: DEFAULT_LIMIT\n\t};\n};\n\nconst capitalize = s => {\n\tif (typeof s !== STRING) return '';\n\ts = s.replace('_', ' ');\n\treturn s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const getAgentIds = agents => {\n\tlet agentIds = [];\n\tagents.forEach(agent => {\n\t\tagentIds.push(agent.agentSysID);\n\t});\n\treturn agentIds.join();\n};\n\nexport const attachAvailabilityHours = (allAgents, availabilityHours) => {\n\tconst map = getAgentsAvailabilityMap(availabilityHours);\n\tallAgents.forEach(agent => {\n\t\tconst obj = map.get(agent.agentSysID);\n\t\tif (obj != undefined) {\n\t\t\tagent.availability = obj.availabilityHour;\n\t\t\tagent.availabilityDisplayValue = obj.availabilityHourDisplayValue;\n\t\t} else {\n\t\t\tagent.availability = 0;\n\t\t\tagent.availabilityDisplayValue = '';\n\t\t}\n\t});\n\treturn allAgents;\n};\n\nconst getAgentsAvailabilityMap = availabilityHours => {\n\tlet agentsAvailabilityMap = new Map();\n\tif (isEmpty(availabilityHours)) return agentsAvailabilityMap;\n\tavailabilityHours.forEach(availability => {\n\t\tif (!isValidResponse(availability)) return;\n\t\tconst agentSysId = availability.sysId;\n\t\tif (!(agentSysId in agentsAvailabilityMap)) {\n\t\t\tlet availabilityHour =\n\t\t\t\tavailability.schedules.totalAvailableDurationNow;\n\t\t\tlet availabilityHourDisplayValue = timeConversion(availabilityHour);\n\t\t\tagentsAvailabilityMap.set(agentSysId, {\n\t\t\t\tavailabilityHour: availabilityHour,\n\t\t\t\tavailabilityHourDisplayValue: availabilityHourDisplayValue\n\t\t\t});\n\t\t}\n\t});\n\treturn agentsAvailabilityMap;\n};\n\nconst isValidResponse = availability => {\n\tif (\n\t\t!isEmpty(availability) &&\n\t\t!isEmpty(availability.sysId) &&\n\t\tavailability.schedules &&\n\t\tavailability.schedules.totalAvailableDurationNow\n\t)\n\t\treturn true;\n\treturn false;\n};\n\nconst timeConversion = duration => {\n\tconst portions = [];\n\tconst msInHour = 1000 * 60 * 60;\n\tconst hours = Math.trunc(duration / msInHour);\n\n\tif (hours > 0) {\n\t\tif (hours === 1) portions.push(hours + ' ' + t('Hour'));\n\t\telse portions.push(hours + ' ' + t('Hours'));\n\t\tduration = duration - hours * msInHour;\n\t}\n\n\tconst msInMinute = 1000 * 60;\n\tconst minutes = Math.trunc(duration / msInMinute);\n\tif (minutes > 0) {\n\t\tif (minutes == 1) portions.push(minutes + ' ' + t('Minute'));\n\t\telse portions.push(minutes + ' ' + t('Minutes'));\n\t\tduration = duration - minutes * msInMinute;\n\t}\n\tif (portions.length == 0) return 0 + ' ' + t('Second');\n\treturn portions.join(' ');\n};\n\nconst compareValues = (key, order = 'asc') => {\n\treturn (a, b) => {\n\t\tif (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n\t\t\t// property doesn't exist on either object\n\t\t\treturn 0;\n\t\t}\n\t\tlet varA, varB;\n\t\tif (key == ASSIGNMENT_GROUPS) {\n\t\t\tvarA = a[key].split(',');\n\t\t\tvarB = b[key].split(',');\n\t\t\tvarA = varA.length > 0 ? varA[0] : '';\n\t\t\tvarB = varB.length > 0 ? varB[0] : '';\n\t\t} else {\n\t\t\tvarA = typeof a[key] === STRING ? a[key].toUpperCase() : a[key];\n\t\t\tvarB = typeof b[key] === STRING ? b[key].toUpperCase() : b[key];\n\t\t}\n\n\t\tlet comparison = 0;\n\t\tif (varA > varB) comparison = 1;\n\t\telse if (varA < varB) comparison = -1;\n\n\t\treturn order === 'desc' ? comparison * -1 : comparison;\n\t};\n};\nexport const sortByColumn = (agents, column, isDescending) => {\n\tconst columnMap = new Map([\n\t\t[NAME, NAME],\n\t\t[PRESENCE, PRESENCE],\n\t\t[CAPACITY_RATIO, CAPACITY_RATIO],\n\t\t[MATCHING_SKILLS_RATIO, MATCHING_SKILLS],\n\t\t[AVAILABILITY_DISPLAY_VALUE, AVAILABILITY],\n\t\t[ASSIGNMENT_GROUPS, ASSIGNMENT_GROUPS]\n\t]);\n\tconst col = columnMap.get(column);\n\tif (isDescending) agents.sort(compareValues(col, 'desc'));\n\telse agents.sort(compareValues(col, 'asc'));\n};\n\nexport const getErrorMessage = errorMessage => {\n\tif (errorMessage.toLowerCase() === MANUAL_ASSIGNMENT_ERROR_MESSAGE)\n\t\treturn AGENT_NOT_AVAILABLE;\n\treturn MANUAL_ASSIGNMENT_NOT_PROCESSED;\n};\n\nexport const getListProps = state => {\n\tconst {\n\t\tallRecordsSelected,\n\t\tagents,\n\t\tsortOrder,\n\t\tselectedAgentSysIds\n\t} = state;\n\n\tconst gridModel = buildGridModel(agents, sortOrder);\n\n\tlet props = {\n\t\tallRecordsSelected: allRecordsSelected,\n\t\tselectedRecords: selectedAgentSysIds,\n\t\thideCheckboxHover: true,\n\t\thideLastRefreshedText: true,\n\t\thideTitleRowCount: true,\n\t\thideRefreshButton: true,\n\t\thideFilterPanel: true,\n\t\thideDeclarativeActions: true,\n\t\thideUnnecessaryRowSelectors: false,\n\t\tloading: false,\n\t\thideColumnGrouping: true,\n\t\thidePanel: true,\n\t\thideSelectAll: true,\n\t\thidePagination: true,\n\t\thideColumnFiltering: true,\n\t\thideColumnSorting: false,\n\t\thideCellFilter: true,\n\t\thideQuickEdit: true,\n\t\thideMenuButton: true,\n\t\thideHeader: true\n\t};\n\n\tif (!isEmpty(agents)) props['list-model'] = gridModel;\n\telse props['gridModel'] = gridModel;\n\n\treturn props;\n};\n","import { t } from 'sn-translate';\n\nexport const WORKITEM_ID = 'workItemId';\nexport const DESCRIPTION = 'description';\nexport const CHANNEL = 'Channel';\nexport const QUEUE = 'Queue';\nexport const AGENTS = 'agents';\nexport const ASSIGNED_TO = 'Assigned to';\nexport const STATE = 'State';\nexport const NAME = 'name';\nexport const PRESENCE = 'presence';\nexport const CAPACITY_RATIO = 'capacityRatio';\nexport const CAPACITY = 'capacity';\nexport const MATCHING_SKILLS_RATIO = 'matchingSkillsRatio';\nexport const MATCHING_SKILLS = 'matchingSkills';\nexport const AVAILABILITY_DISPLAY_VALUE = 'availabilityDisplayValue';\nexport const AVAILABILITY = 'availability';\nexport const ASSIGNMENT_GROUPS = 'assignmentGroups';\nexport const AGENT_NAME_LABEL = t('Agent Name');\nexport const PRESENCE_LABEL = t('Presence State');\nexport const CAPACITY_LABEL = t('Capacity');\nexport const MATCHING_SKILLS_LABEL = t('Matching Skills');\nexport const AVAILABILITY_LABEL = t('Availability');\nexport const ASSIGNMENT_GROUPS_LABEL = t('Assignment Groups');\nexport const STRING = 'string';\nexport const MANUAL_ASSIGNMENT_ERROR_MESSAGE =\n\t'manual assignment failed:agent is not available';\nexport const AGENT_NOT_AVAILABLE = t(\n\t'The selected agent is currently not available. Please allocate the work item to another agent.'\n);\nexport const MANUAL_ASSIGNMENT_NOT_PROCESSED = t(\n\t'Manual allocation is not processed. Please try again or contact your administrator.'\n);\n\nexport const FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS =\n\t'MANUAL_ASSIGNMENT#FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS';\nexport const FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_SUCCEEDED =\n\t'MANUAL_ASSIGNMENT#FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_SUCCEEDED';\nexport const FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_FAILED =\n\t'MANUAL_ASSIGNMENT#FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_FAILED';\n('MANUAL_ASSIGNMENT#FETCH_SKILLS_SUCCEEDED');\nexport const ASISGN_WORKITEM = 'MANUAL_ASSIGNMENT#ASSIGN_WORKITEM';\nexport const MANUAL_ASSIGNMENT_SUCCEEDED =\n\t'MANUAL_ASSIGNMENT#ASSIGNMENT_SUCCEEDED';\nexport const MANUAL_ASSIGNMENT_FAILED = 'MANUAL_ASSIGNMENT#ASSIGNMENT_FAILED';\nexport const FETCH_AGENT_AVAILABILITY =\n\t'MANUAL_ASSIGNMENT#FETCH_AGENT_AVAILABILITY';\nexport const FETCH_AGENT_AVAILABILITY_SUCCEEDED =\n\t'MANUAL_ASSIGNMENT#FETCH_AGENT_AVAILABILITY_SUCCEEDED';\nexport const FETCH_AGENT_AVAILABILITY_FAILED =\n\t'MANUAL_ASSIGNMENT#FETCH_AGENT_AVAILABILITY_FAILED';\n\nexport const FOOTER_CLICKED = 'NOW_MODAL#FOOTER_ACTION_CLICKED';\nexport const PAGINATION_LIMIT_UPDATE = 'NOW_PAGINATION#LIMIT_UPDATE';\nexport const PAGINATION_PAGE_UPDATE = 'NOW_PAGINATION#PAGE_UPDATE';\nexport const NOW_MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\n\nexport const GRID_CHECKBOX_TOGGLED = 'GRID_CHECKBOX_TOGGLED';\nexport const LIST_UPDATE_SORT = 'LIST_UPDATE_SORT';\n\nexport const MANDATORY_SKILLS_REQUIRED = t('Mandatory skills required: ');\nexport const OPTIONAL_SKILLS_REQUIRED = t('Optional skills required: ');\n\nexport const AGENT_AVAILABILITY_ENDPOINT =\n\t'/api/sn_shift_planning/shift_planning/agent_availability';\n","export const NOW_TABS_SELECTED_ITEM_SET = 'NOW_TABS#SELECTED_ITEM_SET';\nexport const NOW_TABS_MODAL = 'NOW_TABS#MODAL';\nexport const NOW_TABS_ASSIGNMENT_UPDATE = 'NOW_TABS#MANUAL_ASSIGNMENT_UPDATE';\nexport const NOW_TABS_RECORD_LIST_CONNECTED_COUNT =\n\t'NOW_RECORD_LIST_CONNECTED#SELECTED_RECORD_COUNT_UPDATED';\nexport const NOW_TABS_BUTTON_CLICKED = 'NOW_BUTTON#CLICKED';\nexport const NOW_TABS_MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\nexport const NOW_TABS_ALERT_ACTION_CLICKED = 'NOW_ALERT#ACTION_CLICKED';\nexport const NOW_TABS_ASSIGN_WORKITEM = 'NOW_TABS#ASSIGN_WORKITEM';\nexport const NOW_TABS_REFRESH_REQUESTED = 'NOW_TABS#REFRESH_REQUESTED';\nexport const NOW_TABS_LIST_DATA_FETCH_COMPLETED = 'LIST_DATA_FETCH_COMPLETE';\nexport const WORK_ITEMS = 'WORK_ITEMS';\nexport const UPDATE_REFRESH_REQUESTED_DATA = 'UPDATE_REFRESH_REQUESTED_DATA';\n","import './channels-header';\n","module.exports = __TECTONIC__sn_component_filter;","module.exports = __TECTONIC__$servicenow_now_record_form_connected;","/**\n * Copyright (c) 2020 ServiceNow, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *  \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *  \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.THROTTLE = exports.TAKE_LATEST = exports.DEBOUNCE = void 0;\nvar DEBOUNCE = 'debounce';\nexports.DEBOUNCE = DEBOUNCE;\nvar TAKE_LATEST = 'takeLatest';\nexports.TAKE_LATEST = TAKE_LATEST;\nvar THROTTLE = 'throttle';\nexports.THROTTLE = THROTTLE;\n//# sourceMappingURL=types.js.map","module.exports = __TECTONIC__reselect_4_0_0;","module.exports = __TECTONIC__$servicenow_now_loader;","module.exports = __TECTONIC__moment_timezone_0_5_5;","import { getUserDateFormat } from '../common/selectors';\nimport { createDateChangeBehavior } from '../common/behaviors/dateChangeBehavior';\nimport { API_DATE_FORMAT } from '../common/constants';\nimport get from 'lodash/get';\n\nexport const getScoreByDisplayAggregate = (displayAggregate, score) => {\n\tlet value = '';\n\tlet displayValue = '';\n\n\tswitch (displayAggregate) {\n\tcase 'average':\n\t\tvalue = get(score, 'stats.average', '');\n\t\tdisplayValue = get(score, 'stats.formattedAverage', '');\n\t\tbreak;\n\tcase 'sum':\n\t\tvalue = get(score, 'stats.sumOfScores', '');\n\t\tdisplayValue = get(score, 'stats.formattedSumOfScores', '');\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn { value, displayValue };\n};\n\nexport const teamDateChangeBehavior = createDateChangeBehavior({\n\tdateFormat: {\n\t\tinternal: API_DATE_FORMAT,\n\t\texternal: getUserDateFormat()\n\t},\n\tshouldReloadDateRange: prop => prop.name === 'active' && prop.value === true\n});\n","module.exports = __TECTONIC__$servicenow_now_text_link;","export const REFRESH_ASSESSMENT_LIST = 'CAS#REFRESH_ASSESSMENT_LIST';\nexport const CAS_LOAD_ASSESSMENT = 'CAS#LOAD_ASSESSMENT';\nexport const CAS_LOAD_ASSESSMENT_SUCCEEDED = 'CAS#LOAD_ASSESSMENT_SUCCEEDED';\n","import { t } from 'sn-translate';\n\nexport const CHANNEL_LABEL = t('Channel');\nexport const CHANNEL_CAPACITY_LABEL = t('Default Channel Capacity');\nexport const OVERRIDE_CAPACITY_LABEL = t('Agent Capacity Override');\nexport const OVERRIDE_CAPACITY_INPUT_LABEL = t('Override Capacity *');\nexport const AGENT_NAME_LABEL = t('Agent Name');\nexport const CAPACITY_LABEL = t('Total Capacity');\nexport const SELECTED_AGENT_LABEL = t('Selected Agent(s)');\n\nexport const STRING = 'string';\nexport const NUMBER = 'number';\nexport const APPLY = t('Apply');\nexport const CANCEL = t('Cancel');\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const SYS_USER = 'sys_user';\n\n//Actions\nexport const FETCH_USER_DATA = 'USER_OVERRIDE_CAPACITY#FETCH_USER_DATA';\nexport const FETCH_USER_DATA_SUCCEEDED =\n\t'USER_OVERRIDE_CAPACITY#FETCH_USER_DATA_SUCCEEDED';\nexport const NOW_INPUT = 'NOW_INPUT#INPUT';\nexport const FOOTER_CLICKED = 'NOW_MODAL#FOOTER_ACTION_CLICKED';\nexport const OVERRIDE_CAPACITY_REQUESTED =\n\t'OVERRIDE_CAPACITY_#OVERRIDE_CAPACITY';\nexport const OVERRIDE_CAPACITY_SUCCEEDED =\n\t'OVERRIDE_CAPACITY_#OVERRIDE_CAPACITY_SUCCEEDED';\nexport const OVERRIDE_CAPACITY_FAILED =\n\t'OVERRIDE_CAPACITY_#OVERRIDE_CAPACITY_FAILED';\nexport const FETCH_OVERRIDE_CAPACITY_MESSAGE =\n\t'USER_OVERRIDE_CAPACITY#FETCH_OVERRIDE_CAPACITY_MESSAGE';\nexport const FETCH_OVERRIDE_CAPACITY_MESSAGE_SUCCEEDED =\n\t'USER_OVERRIDE_CAPACITY#FETCH_OVERRIDE_CAPACITY_MESSAGE_SUCCEEDED';\nexport const FETCH_OVERRIDE_CAPACITY_MESSAGE_FAILED =\n\t'USER_OVERRIDE_CAPACITY#FETCH_OVERRIDE_CAPACITY_MESSAGE_FAILED';\nexport const NOW_MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\n\n// Endpoint\nexport const OVERRIDE_AGENTS_CAPACITY_ENDPOINT =\n\t'/api/sn_channel_mgmt/awa_channel_management_agent_api/overrideAgentCapacity';\nexport const OVERRIDE_AGENTS_CAPACITY_MESSAGE_ENDPOINT =\n\t'/api/sn_channel_mgmt/awa_channel_management_agent_api/getCapacityOverrideMessage';\n","export const ACTION_PREFIX = 'SN_MANAGER_TRAINING_ARTICLE#';\n\nexport const FETCH_TRAINING_RECORD = ACTION_PREFIX + 'FETCH_TRAINING_RECORD';\nexport const FETCH_TRAINING_RECORD_START =\n\tACTION_PREFIX + 'FETCH_TRAINING_RECORD_START';\nexport const FETCH_TRAINING_RECORD_SUCCESS =\n\tACTION_PREFIX + 'FETCH_TRAINING_RECORD_SUCCESS';\nexport const FETCH_TRAINING_RECORD_ERROR =\n\tACTION_PREFIX + 'FETCH_TRAINING_RECORD_ERROR';\n\nexport const STATUS = {\n\tinitial: 'initial',\n\tarticleLoading: 'articleLoading',\n\tarticleLoaded: 'articleLoaded'\n};\n","export const ACTION_PREFIX = 'SN_MANAGER_OVERLAPPING_REQUESTS#';\n\nexport const FETCH_OVERLAPPING_REQUESTS =\n\tACTION_PREFIX + 'FETCH_OVERLAPPING_REQUESTS';\nexport const FETCH_OVERLAPPING_REQUESTS_START =\n\tACTION_PREFIX + 'FETCH_OVERLAPPING_REQUESTS_START';\nexport const FETCH_OVERLAPPING_REQUESTS_SUCCESS =\n\tACTION_PREFIX + 'FETCH_OVERLAPPING_REQUESTS_SUCCESS';\nexport const FETCH_OVERLAPPING_REQUESTS_ERROR =\n\tACTION_PREFIX + 'FETCH_OVERLAPPING_REQUESTS_ERROR';\n\nexport const STATUS = {\n\tinitial: 'initial',\n\toverlappingRequestLoading: 'overlappingRequestLoading',\n\toverlappingRequestLoaded: 'overlappingRequestLoaded'\n};\n","import './channels-tabs';\n","import { OPERATORS } from './constants';\n\nexport const createSort = (fieldName, isDescending) => {\n\treturn {\n\t\tcolumnName: fieldName,\n\t\tisDescending: typeof isDescending === 'undefined' ? false : isDescending\n\t};\n};\n\nexport const sortUserPrefUpdate = (nextOrderBy, table) => {\n\tconst { isDescending, columnName } = nextOrderBy;\n\tconst orderPrefName = `${table}.db.order`;\n\tconst orderPrefValue = columnName;\n\tconst directionPrefName = `${table}.db.order.direction`;\n\tconst directionPrefValue = isDescending ? 'DESC' : 'ASC';\n\treturn [\n\t\t{\n\t\t\tname: orderPrefName,\n\t\t\tvalue: orderPrefValue\n\t\t},\n\t\t{\n\t\t\tname: directionPrefName,\n\t\t\tvalue: directionPrefValue\n\t\t}\n\t];\n};\n\nexport const getOrderByForColumn = ({ columnsSorted, columnName }) => {\n\tvar isSorted = false,\n\t\tisDescending = true;\n\tcolumnsSorted.map(c => {\n\t\tif (c.column === columnName) {\n\t\t\t(isSorted = true),\n\t\t\t(isDescending = c.direction === 'DESC' ? true : false);\n\t\t}\n\t});\n\treturn {\n\t\tisSorted: isSorted,\n\t\tisDescending: isDescending\n\t};\n};\n\nconst getOperatorLabel = (operator, filterType) => {\n\tvar operator_label;\n\tOPERATORS.map(key => {\n\t\tif (key.operator === operator) {\n\t\t\toperator_label = key.label[filterType];\n\t\t}\n\t});\n\treturn operator_label;\n};\n\nconst getValueLabel = (operator, value) => {\n\tif (operator === 'BETWEEN') {\n\t\tvar res = value.split('@');\n\t\treturn res[0] + ' and ' + res[1];\n\t} else {\n\t\treturn value;\n\t}\n};\n\nexport const getLabels = (field, operator, value, columns) => {\n\tvar field_label, operator_label, value_label;\n\tcolumns.map(key => {\n\t\tif (key.columnName === field) {\n\t\t\tfield_label = key.columnData.label;\n\t\t\toperator_label = getOperatorLabel(operator, key.filterType);\n\t\t\tvalue_label = getValueLabel(operator, value);\n\t\t}\n\t});\n\treturn { field_label, operator_label, value_label };\n};\n\nexport const constructParsedQueryModel = (filtersApplied, columns) => {\n\tvar comparison_id_map = {};\n\tvar comparison_field_count_map = {};\n\n\tfiltersApplied.map(key => {\n\t\tconst field = key.field;\n\t\tconst value = key.value;\n\t\tconst operator = key.operator;\n\t\tconst { field_label, operator_label, value_label } = getLabels(\n\t\t\tfield,\n\t\t\toperator,\n\t\t\tvalue,\n\t\t\tcolumns\n\t\t);\n\n\t\tcomparison_id_map = {\n\t\t\t...comparison_id_map,\n\t\t\t[field]: {\n\t\t\t\titem: {\n\t\t\t\t\tid: field,\n\t\t\t\t\tfield,\n\t\t\t\t\tfield_label,\n\t\t\t\t\tvalue,\n\t\t\t\t\toperator,\n\t\t\t\t\toperator_label,\n\t\t\t\t\tterm_label: `${field_label} ${operator_label} ${value_label}`,\n\t\t\t\t\tterm_label_fields: {\n\t\t\t\t\t\tfield,\n\t\t\t\t\t\toperator,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcomparison_field_count_map[field] = 1;\n\t});\n\n\tconst subpredicates = [];\n\tObject.values(comparison_id_map).map(key => subpredicates.push(key.item));\n\n\tconst parsedQueryModel = {\n\t\tcount: Object.keys(comparison_field_count_map).length,\n\t\tglideQuery: {\n\t\t\tcomparison_id_map,\n\t\t\tcomparison_field_count_map,\n\t\t\tpredicates: [\n\t\t\t\t{\n\t\t\t\t\tsubpredicates: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsubpredicates: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsubpredicates: subpredicates\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t};\n\treturn parsedQueryModel;\n};\n","export const ACTIONS = {\n\t// Requesting the matching record details\n\tRECORD_DETAILS_REQUESTED: 'RECORD_DETAILS#DETAILS_REQUESTED',\n\n\t// Request of matching record details succeeded\n\tRECORD_DETAILS_REQUEST_SUCCEEDED: 'RECORD_DETAILS#DETAILS_SUCCEEDED',\n\n\tSYS_ID_REQUEST_FAILED: 'SYS_ID#SYS_ID_REQUEST_FAILED',\n\n\tNOW_FILTER_CONNECTED_APPLIED_ITEMS: 'NOW_FILTER_CONNECTED#APPLIED',\n\n\tPARENT_UPDATED_FILTERS_OBJECT: 'PARENT_UPDATED_FILTERS_OBJECT',\n\n\tRESET_FILTERS: 'RESET_FILTERS#CLICKED',\n\n\tNOW_BUTTON_BARE_CLICKED: 'NOW_BUTTON_BARE#CLICKED'\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"sortBy\"];","import { t } from 'sn-translate';\nimport { ALL_WORK_ITEMS_DEFAULT_COLUMN } from '../common/constants';\nimport { RECORD_LIST_TYPE_AGENT } from '../common/constants';\nexport const FETCH_REPORTS = 'FETCH_REPORTS';\nexport const FETCH_REPORTS_SUCCESS = 'FETCH_REPORTS_SUCCESS';\nexport const FETCH_ALL_KPI_REPORTCONFIG = 'FETCH_ALL_KPI_REPORTCONFIG';\nexport const FETCH_KPI_REPORTCONFIG = 'FETCH_KPI_REPORTCONFIG';\nexport const FETCH_KPI_REPORTCONFIG_SUCCESS = 'FETCH_KPI_REPORTCONFIG_SUCCESS';\nexport const FFETCH_INTERACTIVE_REFERENCE_FIELD =\n\t'FETCH_INTERACTIVE_REFERENCE_FIELD';\nexport const FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS =\n\t'FETCH_INTERACTIVE_REFERENCE_FIELD';\nexport const ERROR_OCCURED = 'ERROR_OCCURED';\nexport const AGENTS = 'AGENTS';\nexport const WORK_ITEMS = 'WORK_ITEMS';\nexport const QUEUE_DEFAULT_TAB_ITEMS = [\n\t{ id: WORK_ITEMS, label: t('Queued Work') },\n\t{ id: AGENTS, label: t('Agents') }\n];\nexport const QUEUE_DEFAULT_TAB_LIST_DETAILS = {\n\tWORK_ITEMS: {\n\t\ttable: 'awa_work_item',\n\t\tcolumns: ALL_WORK_ITEMS_DEFAULT_COLUMN,\n\t\tquery: '',\n\t\tlistTitle: t('Queued Work')\n\t},\n\tAGENTS: {\n\t\tlistTitle: t('Agents'),\n\t\tisCustomList: true,\n\t\ttype: RECORD_LIST_TYPE_AGENT\n\t}\n};\nexport const FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD =\n\t'FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD';\nexport const FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS =\n\t'FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS';\n","module.exports = __TECTONIC__$servicenow_now_typeahead;","import { t } from 'sn-translate';\nimport {\n\tSCHEDULE_PLAN_STATE,\n\tSHOW_ALERT_MESSAGE\n} from '../../common/constants';\nimport moment from 'moment';\nimport get from 'lodash/get';\n\n/**\n * Converts schedule plan state to now-highlighted-value status\n * @param {number} state schedule plan state\n * @returns {string} now-highlighted-value status\n */\nexport const getScheduleStateHighlightedColor = state => {\n\tswitch (state) {\n\tcase SCHEDULE_PLAN_STATE.READY_FOR_PREVIEW:\n\t\treturn 'info';\n\tcase SCHEDULE_PLAN_STATE.PUBLISHED:\n\t\treturn 'positive';\n\tdefault:\n\t\t// draft, queued for processing, generating preview\n\t\treturn 'low';\n\t}\n};\n\nexport const getScheduleCardConfigAria = schedule => {\n\treturn {\n\t\t'aria-label': t(\n\t\t\t`Schedule plan {0} start date {1} end date {2} state {3}`,\n\t\t\t[\n\t\t\t\tschedule.name.displayValue,\n\t\t\t\tschedule.default_start_date.displayValue,\n\t\t\t\tschedule.default_end_date.displayValue,\n\t\t\t\tschedule.state.displayValue\n\t\t\t]\n\t\t)\n\t};\n};\n\nexport const getShiftAriaConfig = shiftName => {\n\treturn {\n\t\t'aria-label': t(`Shift plan {0} `, [shiftName])\n\t};\n};\n\n/**\n * Returns JSX used to render cards in list view and detail view\n * @param {object} param - Param object\n * @param {object} param.schedule - sn_shift_planning_schedule_plan record\n * @param {object} param.cardProps - extra props for now-card\n * @param {object} param.cardHeaderProps - extra props for now-card-header\n * @returns {jsx} JSX markup for a now-card\n */\nexport const renderScheduleCard = ({\n\tschedule,\n\tcardProps = {},\n\tcardHeaderProps = {}\n}) => {\n\tconst sysId = schedule.sys_id.value;\n\tconst name = schedule.name.displayValue;\n\tconst startDate = schedule.default_start_date.displayValue;\n\tconst endDate = schedule.default_end_date.displayValue;\n\tconst state = schedule.state.displayValue;\n\tconst configAria = getScheduleCardConfigAria(schedule);\n\tconst defaultCardProps = {\n\t\tkey: sysId,\n\t\tsize: 'lg',\n\t\tinteraction: 'click',\n\t\tclassName: 'schedule-card',\n\t\tconfigAria\n\t};\n\tconst defaultCardHeaderProps = {\n\t\theading: {\n\t\t\tlabel: name,\n\t\t\tsize: 'sm',\n\t\t\tlines: 1\n\t\t}\n\t};\n\n\treturn (\n\t\t<now-card {...{ ...defaultCardProps, ...cardProps }}>\n\t\t\t<now-card-header\n\t\t\t\t{...{ ...defaultCardHeaderProps, ...cardHeaderProps }}\n\t\t\t/>\n\t\t\t<now-label-value-stacked\n\t\t\t\talign=\"horizontal-equal\"\n\t\t\t\twrapped={true}\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t('Start date'),\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tvalue: startDate\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t('End date'),\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tvalue: endDate\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t<now-label-value-stacked\n\t\t\t\talign=\"horizontal\"\n\t\t\t\twrapped={true}\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t('State'),\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\ttype: 'highlighted-value',\n\t\t\t\t\t\t\tlabel: state,\n\t\t\t\t\t\t\tstatus: getScheduleStateHighlightedColor(\n\t\t\t\t\t\t\t\tschedule.state.value\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t/>\n\t\t</now-card>\n\t);\n};\n\n/**\n * Returns true if a schedule can be published\n * - state = draft\n * @param {object} schedule sn_shift_planning_schedule_plan record\n * @returns {boolean} true if schedule plan can be published, otherwise false\n */\nexport const canPublishSchedule = schedule => {\n\tconst shiftCount = get(\n\t\tschedule,\n\t\t'_query.shifts.sn_shift_planning_schedule_shift._results.length',\n\t\t0\n\t);\n\n\treturn schedule.state.value === SCHEDULE_PLAN_STATE.DRAFT && shiftCount > 0;\n};\n\n/**\n * Returns true if a schedule can be deleted\n * - state = draft\n * @param {object} schedule sn_shift_planning_schedule_plan record\n * @returns {boolean} true if schedule plan can be deleted, otherwise false\n */\nexport const canDeleteSchedule = schedule => {\n\treturn schedule.state.value === SCHEDULE_PLAN_STATE.DRAFT;\n};\n\n/**\n * Returns true if a schedule can be unpublished\n * \t- state = published\n * \t- end date must be after tomorrow\n * @param {object} schedule sn_shift_planning_schedule_plan record\n * @returns {boolean} true if schedule plan can be unpublished, otherwise false\n */\nexport const canUnpublishSchedule = (schedule, dateFormat) => {\n\tconst isPublished = schedule.state.value === SCHEDULE_PLAN_STATE.PUBLISHED;\n\n\tif (!isPublished) {\n\t\treturn false;\n\t}\n\n\tconst endDate = moment(schedule.default_end_date.displayValue, dateFormat);\n\tconst tomorrow = moment().add(1, 'day');\n\n\treturn endDate.isAfter(tomorrow, 'days');\n};\n\n/**\n * Returns an action handler that shows an error message\n * The message content is retrieved from the http response\n * @param {string} id The alert id\n * @returns {function} an action handler\n */\nexport const createErrorMessageHandler = ({ id }) => ({ action, dispatch }) => {\n\tconst message = get(action, 'payload.data.result.message');\n\n\tif (message) {\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid,\n\t\t\tstatus: 'critical',\n\t\t\ticon: 'circle-close-outline',\n\t\t\taction: { type: 'dismiss' },\n\t\t\tcontent: message\n\t\t});\n\t}\n};\n","export const COMPONENT_NAME = 'SN_MANAGER_DEMAND_FORECAST_POPOVER';\n\nexport const SHOW_ALL_CLICKED = `${COMPONENT_NAME}#SHOW_ALL_CLICKED`;\n\nexport const STACKED_BAR_CHART_COLORS = {\n\tbase: '#6CA5D5',\n\tunderstaffed: '#F26569',\n\toverstaffed: '#EEAC83'\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport calendarView from './view.js';\nimport calendarProps from './properties.js';\nimport calendarActionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-calendar', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\tshowShiftEditModal: false,\n\t\tshowNewEventModal: false,\n\t\teditEvent: {},\n\t\tcalendarControls: {\n\t\t\ttimeZones: []\n\t\t},\n\t\tforecastData: null,\n\t\tdemandForecastPopoverProps: {\n\t\t\topened: false,\n\t\t\tmanageOpened: true,\n\t\t\tpositionTarget: null,\n\t\t\tpositions: [\n\t\t\t\t{\n\t\t\t\t\ttarget: 'bottom-center',\n\t\t\t\t\tcontent: 'top-center'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tdemandForecastPopoverContent: {}\n\t},\n\t...calendarView,\n\t...calendarProps,\n\t...calendarActionHandlers,\n\tstyles\n});\n","module.exports = __TECTONIC__$servicenow_now_dropdown;","export const SWAP_CONSTS = {\n\tREQ_SWAP_CLICKED: 'REQUEST_SHIFT_SWAP#CLICKED', //Fired when \"Create shift swap\" button is clicked\n\tREQ_SWAP_REQUESTED: 'REQUEST_SHIFT_SWAP#REQUESTED', //Fired to Open the SWAP modal\n\tNOW_MODAL_OPENED_SET: 'NOW_MODAL#OPENED_SET', //Design-System - Fired when User clicks on X to close modal\n\tUSER_INFO_READY: 'SN_USER_INFO#USER_INFO_READY', //Fired when Data provider comes back with currentUser\n\tCANCEL_SWAP_CLICKED: 'CANCEL_SWAP', //User Clicks \"Cancel\" button\n\tSUBMIT_SWAP_REQUEST: 'SUBMIT_SWAP_REQUEST', //User Clicks \"Submit button\"\n\tDATE_VALUE_CHANGED: 'NOW_RECORD_DATE_PICKER#VALUE_CHANGED', //Design-System - Fired when Date value changes\n\tREQUESTOR_SHIFT_FETCH: 'REQUESTOR_SHIFT_FETCH', //Fetch Shifts for current User  - swap requestor\n\tREQUESTEE_SHIFT_FETCH: 'REQUESTEE_SHIFT_FETCH', //Fetch Shifts for swap requestee\n\tRETRIEVED_REQUESTOR_SHIFT_SUCCESS: 'RETRIEVED_REQUESTOR_SHIFT_SUCCESS', // Success - swap requestor\n\tRETRIEVED_REQUESTEE_SHIFT_SUCCESS: 'RETRIEVED_REQUESTEE_SHIFT_SUCCESS', // Success - swap requestee\n\tCOULD_NOT_RETRIEVE_DATA: 'COULD_NOT_RETRIEVE_DATA', // Error logging\n\tFETCH_SWAP_TEAMMATES: 'FETCH_SWAP_TEAMMATES', //Fired when Modal Opened by current user\n\tFETCH_SWAP_TEAMMATES_SUCCESS: 'FETCH_SWAP_TEAMMATES_SUCCESS', // Success from graphql query\n\tSWAP_REQUESTEE_SET: 'SWAP_REQUESTEE_SET', //When current user selects a Requestee user\n\tDROPDOWN_SHIFT_OBJ_SELECTED: 'NOW_DROPDOWN#ITEM_CLICKED', //Fired when a Shift is selected\n\tPOST_SWAP_REQUEST: 'POST_SWAP_REQUEST', //Post a Table API call to create a swap request\n\tPOST_SWAP_REQUEST_SUCCESS: 'POST_SWAP_REQUEST_SUCCESS' //Fired when request creation success\n};\n","import { CALENDAR_EVENTS } from '../../common/constants';\n\nconst CREATE = 'create';\nimport { t } from 'sn-translate';\nimport { CONTEXTS } from '../sn-manager-event-request/constants';\nexport const eventModalProps = {\n\teventCategoryId: CALENDAR_EVENTS.TIME_OFF.CATEGORY,\n\teventTypeId: CALENDAR_EVENTS.TIME_OFF.SYS_ID,\n\tcontext: CONTEXTS.AGENT_WS,\n\tmodalTitle: t('New Time Off Request'),\n\tmodalSchema: {\n\t\ttitle: {\n\t\t\tmandatory: false,\n\t\t\treadOnly: false\n\t\t},\n\t\tstartDate: {\n\t\t\tmandatory: true,\n\t\t\treadOnly: false\n\t\t},\n\t\tstartTime: {\n\t\t\tmandatory: true,\n\t\t\treadOnly: false\n\t\t},\n\t\tendDate: {\n\t\t\tmandatory: true,\n\t\t\treadOnly: false\n\t\t},\n\t\tendTime: {\n\t\t\tmandatory: true,\n\t\t\treadOnly: false\n\t\t},\n\t\tdescription: {\n\t\t\tmandatory: false,\n\t\t\treadOnly: false\n\t\t},\n\t\tadditionalSelectors: []\n\t},\n\tmode: CREATE,\n\n\tformData: {\n\t\ttitleValue: '',\n\t\tdescriptionValue: '',\n\t\tstartDateValue: '',\n\t\tendDateValue: '',\n\t\tstartTimeValue: '',\n\t\tendTimeValue: '',\n\t\tselectedAttendees: [{ id: '', label: '' }],\n\t\tadditionalSelectors: []\n\t}\n};\n\nexport const AGENT_SCHEDULE_TIME_OFF_SUCCESS =\n\t'AGENT_SCHEDULE_TIME_OFF_SUCCESS';\n","import get from 'lodash/get';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\nimport moment from 'moment-timezone';\n\nimport { INTERNAL_FORMAT } from './constants.js';\n\n/**\n * Convert times of all events in an api response to timezone in calendar\n * @param {*} events read from API\n * @param {*} calendarTimezone calendar drop down timezone\n * @param {*} convertBreaksOnly true if only the break times should be converted, false otherwise\n */\nexport const convertAllEventTimes = (\n\tevents,\n\tcalendarTimezone,\n\tconvertBreaksOnly,\n\tsetOriginalTimezone\n) => {\n\tfor (let i in events) {\n\t\tlet event = events[i];\n\n\t\tif (!convertBreaksOnly) {\n\t\t\tevent.start = convertEventTimeToCalendarTimeZone(\n\t\t\t\tevent.start,\n\t\t\t\tevent.readInTimezone,\n\t\t\t\tcalendarTimezone\n\t\t\t);\n\t\t\tevent.end = convertEventTimeToCalendarTimeZone(\n\t\t\t\tevent.end,\n\t\t\t\tevent.readInTimezone,\n\t\t\t\tcalendarTimezone\n\t\t\t);\n\t\t}\n\n\t\tevent.readInTimezone = calendarTimezone;\n\n\t\tif (setOriginalTimezone)\n\t\t\tevent.originalReadInTimezone = calendarTimezone + '';\n\n\t\tfor (let j in get(event, 'childEvents', [])) {\n\t\t\tlet childEvent = event.childEvents[j];\n\t\t\tchildEvent.start = convertEventTimeToCalendarTimeZone(\n\t\t\t\tchildEvent.start,\n\t\t\t\tchildEvent.readInTimezone,\n\t\t\t\tcalendarTimezone\n\t\t\t);\n\t\t\tchildEvent.end = convertEventTimeToCalendarTimeZone(\n\t\t\t\tchildEvent.end,\n\t\t\t\tchildEvent.readInTimezone,\n\t\t\t\tcalendarTimezone\n\t\t\t);\n\t\t\tchildEvent.readInTimezone = calendarTimezone;\n\n\t\t\tif (setOriginalTimezone)\n\t\t\t\tchildEvent.originalReadInTimezone = calendarTimezone + '';\n\t\t}\n\t}\n\n\treturn events;\n};\n\n/**\n * Convert time from api response to timezone in calendar\n * @param {*} time read from API\n * @param {*} readInTimezone api response in timezone\n * @param {*} calendarTimezone calendar drop down timezone\n */\nexport const convertEventTimeToCalendarTimeZone = (\n\ttime,\n\treadInTimezone,\n\tcalendarTimezone\n) => {\n\tvar convertedTime = moment\n\t\t.tz(time, readInTimezone)\n\t\t.tz(calendarTimezone)\n\t\t.format(INTERNAL_FORMAT.DATE_TIME);\n\treturn convertedTime;\n};\n\n/**\n * Switches endDateTime and startDateTime strings to UTC values\n * @param {{startDateTime: stringDateTimeFormat, endDateTime: stringDateTimeFormat, ...}} eventData\n */\nexport const eventDataToUTC = (eventData, timeZone) => {\n\tlet eventDataCopy = cloneDeep(eventData);\n\n\teventDataCopy.startDateTime = moment\n\t\t.tz(eventData.startDateTime, timeZone)\n\t\t.utc()\n\t\t.format(INTERNAL_FORMAT.DATE_TIME);\n\teventDataCopy.endDateTime = moment\n\t\t.tz(eventData.endDateTime, timeZone)\n\t\t.utc()\n\t\t.format(INTERNAL_FORMAT.DATE_TIME);\n\treturn eventDataCopy;\n};\n\nexport const isFilterEmpty = (filter = {}) =>\n\tObject.values(filter).every(val => isEmpty(val));\n","module.exports = __TECTONIC__lodash_4_17_15[\"reduce\"];","/* eslint-disable indent */\nimport { t } from 'sn-translate';\nimport { SCORE_NA_LABEL } from '../../common/constants';\nimport get from 'lodash/get';\nimport { getAssignmentGroupBreakdown } from '../../common/selectors';\n\nexport const constructDataFramePayload = (teams, dateRange) => {\n\tconst breakDownAssignmentGroup = getAssignmentGroupBreakdown();\n\tlet dataFramePayload = {};\n\tlet uuid = [];\n\tlet filterGroups = [];\n\tteams.map(team => {\n\t\tteam.assignment_groups.map(group => {\n\t\t\tfilterGroups.push(group.assignment_group_id);\n\t\t});\n\n\t\tteam.indicators.map(indicator => {\n\t\t\tuuid.push(`${indicator.indicator_id}`);\n\t\t});\n\t});\n\tif (uuid.length > 0) {\n\t\tdataFramePayload = {\n\t\t\tuuid: uuid,\n\t\t\tbreakdown: breakDownAssignmentGroup,\n\t\t\tsort: breakDownAssignmentGroup,\n\t\t\tsortDesc: false,\n\t\t\telementsFilter: filterGroups,\n\t\t\tfrom: dateRange.start,\n\t\t\tto: dateRange.end,\n\t\t\tlimit: 999,\n\t\t\tpage: 1,\n\t\t\tpageSize: 50\n\t\t};\n\t}\n\treturn dataFramePayload;\n};\n\nexport const generateCardDataForIndicatorGroup = (indicatorGroup, state) => {\n\tconst cardData = indicatorGroup.assignment_groups.map(group => {\n\t\tconst indicatorData = indicatorGroup.indicators.map(indicator => {\n\t\t\treturn {\n\t\t\t\tlabel: indicator.indicator,\n\t\t\t\tsys_id: indicator.indicator_id,\n\t\t\t\tscore: getScoreForGroup(\n\t\t\t\t\tgroup.assignment_group_id,\n\t\t\t\t\tindicator.indicator_id,\n\t\t\t\t\tindicator.indicator_display_aggregate,\n\t\t\t\t\tstate\n\t\t\t\t),\n\t\t\t\tdisplay_unit: ''\n\t\t\t};\n\t\t});\n\n\t\tconst singleCard = {};\n\t\tsingleCard.metaType = 'label';\n\t\tsingleCard.headerHighlightLabel = group.primary ? t('My Team') : null;\n\t\tsingleCard.headerHighlightColor = 'info';\n\t\tsingleCard.headerText = group.assignment_group;\n\t\tsingleCard.indicators = indicatorData;\n\t\tsingleCard.cardId = group.assignment_group_id;\n\t\tsingleCard.indicatorGroupLabel = indicatorGroup.indicator_group;\n\t\treturn singleCard;\n\t});\n\n\treturn cardData;\n};\n\nexport const getScoreForGroup = (\n\tgroupId,\n\tindicatorId,\n\tdisplayAggregate,\n\tstate\n) => {\n\tconst scoreStats = get(\n\t\tstate,\n\t\t'teamScores.' + groupId + '.' + indicatorId,\n\t\t{}\n\t);\n\tlet score = '';\n\n\tswitch (displayAggregate) {\n\t\tcase 'average': {\n\t\t\tscore = get(scoreStats, 'stats.formattedAverage', '');\n\t\t\tbreak;\n\t\t}\n\t\tcase 'sum':\n\t\t\tscore = get(scoreStats, 'stats.formattedSumOfScores', '');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tscore = get(scoreStats, 'stats.formattedSumOfScores', '');\n\t}\n\n\treturn score ? score : SCORE_NA_LABEL;\n};\n\n// const cardData = [\n// \t{\n// \t\tmetaType: 'icon',\n// \t\theaderIcon: 'star-fill',\n// \t\theaderHighlightLabel: 'My team',\n// \t\theaderText: 'Assignment Group Name1',\n// \t\tindicators: [\n// \t\t\t{\n// \t\t\t\tlabel: 'Average handle time',\n// \t\t\t\tscore: '25',\n// \t\t\t\tsys_id: '123456',\n// \t\t\t\tdisplay_unit: 'hours'\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tlabel: 'Number of open incidents',\n// \t\t\t\tscore: '35',\n// \t\t\t\tsys_id: '89326',\n// \t\t\t\tdisplay_unit: ''\n// \t\t\t}\n// \t\t]\n// \t},\n// \t{\n// \t\tmetaType: 'label',\n// \t\theaderIcon: 'star-fill',\n// \t\theaderHighlightLabel: 'My team',\n// \t\theaderText: 'Assignment Group Name 2',\n// \t\tindicators: [\n// \t\t\t{\n// \t\t\t\tlabel: 'Average handle Time',\n// \t\t\t\tscore: '25',\n// \t\t\t\tsys_id: '123456',\n// \t\t\t\tdisplay_unit: 'hours'\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tlabel: 'Number of open incidents',\n// \t\t\t\tscore: '35 ',\n// \t\t\t\tsys_id: '89326',\n// \t\t\t\tdisplay_unit: ''\n// \t\t\t}\n// \t\t]\n// \t}\n","import { getUserDateFormat } from '../common/selectors';\nimport { API_DATE_FORMAT } from '../common/constants';\nimport moment from 'moment';\n\nexport const formatDateRange = (\n\tdateRange,\n\tfromFormat = API_DATE_FORMAT,\n\ttoFormat = getUserDateFormat()\n) => {\n\treturn {\n\t\tstart: moment(dateRange.start, fromFormat).format(toFormat),\n\t\tend: moment(dateRange.end, fromFormat).format(toFormat)\n\t};\n};\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n\tFETCH_SKILL_LEVEL_COUNTS,\n\tUSERS_WITHOUT_THIS_SKILL\n} from './constants';\n\nexport const skillLevelFetchSucceeded = ({\n\taction,\n\tupdateProperties,\n\tdispatch,\n\tstate\n}) => {\n\tconst result = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.cmn_skill_level._results'\n\t);\n\tif (isEmpty(result)) {\n\t\treturn;\n\t}\n\n\tconst reducer = (acc, skillLevel) => {\n\t\tlet levelType = get(skillLevel, 'skill_level_type.displayValue');\n\t\tlet color = get(skillLevel, 'color.value');\n\t\tlet colorDisplayValue = get(skillLevel, 'color.displayValue');\n\t\tlet value = get(skillLevel, 'value.value');\n\t\tlet name = get(skillLevel, 'name.value');\n\t\tlet sysId = get(skillLevel, 'sys_id.value');\n\n\t\tif (!acc.hasOwnProperty(levelType)) {\n\t\t\tacc[levelType] = {};\n\t\t}\n\n\t\tacc[levelType][value] = {\n\t\t\tsysId,\n\t\t\tcolor,\n\t\t\tcolorDisplayValue,\n\t\t\tname,\n\t\t\tvalue\n\t\t};\n\n\t\treturn acc;\n\t};\n\n\tconst skillLevelValue = result.reduce(reducer, {});\n\n\tconst skillLevelType = {};\n\tconst OUTLINED_ICON = 'empty';\n\tlet levelTypeKeys = Object.keys(skillLevelValue);\n\tlevelTypeKeys.map(levelType => {\n\t\tskillLevelType[levelType] = new Map();\n\t\tskillLevelType[levelType].set(OUTLINED_ICON, {\n\t\t\tcount: 0,\n\t\t\tskillLabel: USERS_WITHOUT_THIS_SKILL\n\t\t});\n\t\tlet valueKeys = Object.keys(skillLevelValue[levelType]);\n\t\tvalueKeys.sort((a, b) => a - b);\n\t\tvalueKeys.map(value => {\n\t\t\tskillLevelType[levelType].set(\n\t\t\t\tskillLevelValue[levelType][value].sysId,\n\t\t\t\t{\n\t\t\t\t\tsysId: skillLevelValue[levelType][value].sysId,\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tskillLabel: skillLevelValue[levelType][value].name,\n\t\t\t\t\trank: skillLevelValue[levelType][value].value,\n\t\t\t\t\tcolorDisplayValue:\n\t\t\t\t\t\tskillLevelValue[levelType][value].colorDisplayValue,\n\t\t\t\t\tcolorValue: skillLevelValue[levelType][value].color\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t});\n\n\tupdateProperties({\n\t\tskillLevelType: skillLevelType\n\t});\n\n\tconst userGroupFilter = get(state, 'filter.sys_user_grmember', {});\n\n\tdispatch(FETCH_SKILL_LEVEL_COUNTS, {\n\t\tdata: {\n\t\t\tuserIDs: userGroupFilter.user,\n\t\t\tgroupIDs: userGroupFilter.group\n\t\t}\n\t});\n};\n\nexport const queryGroupScheduleData = ({ action, updateProperties }) => {\n\tconst results = get(action, 'payload.groups', '');\n\tconst groups = results.split(',');\n\tif (isEmpty(groups)) {\n\t\treturn;\n\t}\n\tlet groupIds = groups.join('^ORgroup=');\n\tgroupIds = 'group=' + groupIds;\n\tupdateProperties({\n\t\tgroupIds\n\t});\n};\n","module.exports = __TECTONIC__sn_component_visualization;","export const FETCH_SKILL_AND_COUNT_SUCCEEDED =\n\t'FETCH_SKILL_AND_COUNT_SUCCEEDED';\nexport const FETCH_SKILL_AND_COUNT_REQUESTED =\n\t'FETCH_SKILL_AND_COUNT_REQUESTED';\nexport const ADD_COLOR_COUNT_TO_SKILL_COUNT = 'ADD_COLOR_COUNT_TO_SKILL_COUNT';\n\nexport const NOW_TEXT_LINK_CLICKED = 'NOW_TEXT_LINK#CLICKED';\n","const CAS_DETAIL_ACTION_PREFIX = 'CAS_DETAIL#';\nexport const CAS_DETAIL_BACKBTN_CLICKED = 'CAS#DETAIL_BACKBTN_CLICKED';\nexport const CAS_START_SURVEY = 'CAS#START_SURVEY';\nexport const CAS_DETAIL_SAVE_CLICKED =\n\tCAS_DETAIL_ACTION_PREFIX + 'SAVE_CLICKED';\nexport const CAS_DETAIL_COMPLETE_CLICKED =\n\tCAS_DETAIL_ACTION_PREFIX + 'COMPLETE_CLICKED';\nexport const CAS_DETAIL_UPDATE_RELATED_ITEMS =\n\tCAS_DETAIL_ACTION_PREFIX + 'UPDATE_RELATED_ITEMS';\nexport const CAS_DETAIL_UPDATE_RELATED_ITEMS_SUCCEEDED =\n\tCAS_DETAIL_ACTION_PREFIX + 'UPDATE_RELATED_ITEMS_SUCCEEDED';\nexport const CAS_DETAIL_UPDATE_RELATED_ITEMS_FAILED =\n\tCAS_DETAIL_ACTION_PREFIX + 'UPDATE_RELATED_ITEMS_FAILED';\nexport const CAS_DETAIL_FETCH_SKILL_TRAINING =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_SKILL_TRAINING';\nexport const CAS_DETAIL_FETCH_SKILL_TRAINING_SUCCEEDED =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_SKILL_TRAINING_SUCCEEDED';\nexport const CAS_DETAIL_FETCH_SKILL_TRAINING_FAILED =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_SKILL_TRAINING_FAILED';\nexport const CAS_DETAIL_FETCH_SKILLS =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_SKILLS';\nexport const CAS_DETAIL_FETCH_SKILLS_SUCCEEDED =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_SKILLS_SUCCEEDED';\nexport const CAS_DETAIL_FETCH_SKILLS_FAILED =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_SKILLS_FAILED';\nexport const CAS_DETAIL_FETCH_TRAININGS =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_TRAININGS';\nexport const CAS_DETAIL_FETCH_TRAININGS_SUCCEEDED =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_TRAININGS_SUCCEEDED';\nexport const CAS_DETAIL_FETCH_TRAININGS_FAILED =\n\tCAS_DETAIL_ACTION_PREFIX + 'FETCH_TRAININGS_FAILED';\nexport const NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET =\n\t'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET';\nexport const NOW_TYPEAHEAD_MULTI_VALUE_SET = 'NOW_TYPEAHEAD_MULTI#VALUE_SET';\nexport const CAS_DETAIL_ASSESSMENT_COMPLETED =\n\t'CAS_DETAIL#ASSESSMENT_COMPLETED';\n","export const GO_TO_CREATE_VIEW = 'GO_TO_CREATE_VIEW';\nexport const GO_TO_LIST_VIEW = 'GO_TO_LIST_VIEW';\nexport const VIEW = {\n\tlist: 'list',\n\tcreate: 'create',\n\tloading: 'loading'\n};\n","import { t } from 'sn-translate';\n\nexport const PROFILE_USER_DETAIL_FIELDS = [\n\t'name',\n\t'avatar',\n\t'photo',\n\t'title',\n\t'phone',\n\t'mobile_phone',\n\t'home_phone',\n\t'email',\n\t'location',\n\t'manager',\n\t'department',\n\t'sys_created_on',\n\t'primary_group'\n];\n\nexport const ACTIONS = {\n\t/**\n\t * INITIAL GRAPHQL EFFECT EVENT\n\t */\n\tUSER_DETAILS_REQUESTED: 'USER_DETAILS#DETAILS_REQUESTED',\n\t/**\n\t * Success dispatch of GRAPHQL event\n\t */\n\tUSER_DETAILS_REQUEST_SUCCEEDED: 'USER_DETAILS#DETAILS_REQUEST_SUCCEEDED',\n\t/**\n\t * FETCH of user data failed\n\t */\n\tUSER_DETAILS_REQUEST_FAILED: 'USER_DETAILS#USER_DETAILS_REQUEST_FAILED',\n\t/**\n\t * A record link was clicked from the details sidebar\n\t */\n\tSTACKED_VALUE_LINK_CLICKED: 'NOW_LABEL_VALUE_STACKED#TEXT_LINK_CLICKED',\n\n\t/**\n\t * Expand list of teammates\n\t */\n\tEXPAND_TEAMMATES_LIST: 'USER_DETAILS#EXPAND_TEAMMATES_LIST'\n};\n\nexport const SHOW_ALL_TEAMMATES_LINK_TEXT = t('Show all');\nexport const SHOW_LESS_TEAMMATES_LINK_TEXT = t('Show fewer');\nexport const USER_DETAILS_HEADER = t('User details');\n","import { t } from 'sn-translate';\n\nexport const FETCH_USER_CHANNEL_DATA = 'USER_CHANNELS#FETCH_USER_CHANNELS';\nexport const FETCH_USER_CHANNEL_DATA_SUCCEEDED =\n\t'USER_CHANNELS#FETCH_USER_CHANNEL_DATA_SUCCEEDED';\nexport const FETCH_USER_CHANNEL_DATA_FAILED =\n\t'USER_CHANNELS#FETCH_USER_CHANNEL_DATA_FAILED';\nexport const USER_CHANNEL_MODAL_CLOSED =\n\t'USER_CHANNELS#USER_CHANNEL_MODAL_CLOSED';\nexport const PAGINATION_LIMIT_UPDATE = 'NOW_PAGINATION#LIMIT_UPDATE';\nexport const PAGINATION_PAGE_UPDATE = 'NOW_PAGINATION#PAGE_UPDATE';\nexport const USER_CHANNEL_REFRESH_REQUESTED = 'USER_CHANNELS#REFRESH_REQUESTED';\nexport const CHANNEL_CAPACITY_OVERRIDE_DONE =\n\t'USER_CHANNELS#OVERRIDE_CAPACITY_DONE';\nexport const NOW_BUTTON_CLICKED = 'NOW_BUTTON#CLICKED';\nexport const GRID_CHECKBOX_TOGGLED = 'GRID_CHECKBOX_TOGGLED';\nexport const OPEN_RECORD = 'OPEN_RECORD';\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const USER_CHANNEL_OVERRIDE_CLICKED =\n\t'USER_CHANNELS#USER_CHANNEL_OVERRIDE_CLICKED';\nexport const AGENTS_CHANNEL_INFO_ENDPOINT =\n\t'api/sn_channel_mgmt/awa_channel_management_report_api/getAgentsChannel/agent/:agentId';\n\nexport const CHANNEL = 'channelName';\nexport const TOTAL_CAPACITY = 'totalCapacity';\nexport const CAPACITY_IN_USE = 'capacityInUse';\nexport const UTILIZATION = 'utilization';\nexport const CAN_TAKE_WORK = 'canTakeWork';\n\nexport const CHANNEL_HEADER = t('Channels');\nexport const CHANNEL_LABEL = t('Service Channel');\nexport const TOTAL_CAPACITY_LABEL = t('Total Capacity');\nexport const CAPACITY_IN_USE_LABEL = t('Capacity In Use');\nexport const UTILIZATION_LABEL = t('Utilization');\nexport const CAN_TAKE_WORK_LABEL = t('Can Take Work');\n\nexport const SYS_ID = 'sys_id';\nexport const SERVICE_CHANNEL_TABLE = 'awa_service_channel';\nexport const CHANNEL_SYS_ID = 'channelId';\nexport const REFERENCE = 'reference';\nexport const STRING = 'string';\nexport const OVER_RIDE_CAPACITY = t('Capacity Override');\n","export const FETCH_AGENT_ASSOCIATION_WITH_AWA_ENDPOINT =\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/checkAgentsAssocationWithAwa/agent/:agentId';\nexport const RENDER_PRESENCE_HISTORY_COMPONENT =\n\t'renderPresenceHistoryComponent';\n\n//Actions\nexport const FETCH_AGENT_ASSOCIATION_WITH_AWA =\n\t'USER_OVERVIEW#FETCH_AGENT_ASSOCIATION_WITH_AWA';\nexport const FETCH_AGENT_ASSOCIATION_WITH_AWA_SUCCEEDED =\n\t'USER_OVERVIEW#FETCH_AGENT_ASSOCIATION_WITH_AWA_SUCCEEDED';\nexport const FETCH_USER_CHANNEL_DATA_FAILED =\n\t'USER_OVERVIEW#FETCH_AGENT_ASSOCIATION_WITH_AWA_FAILED';\nexport const USER_OVERVIEW_SHOW_OVERRIDE_MSG =\n\t'USER_OVERVIEW_SHOW_OVERRIDE_MSG';\n\nexport const ALERT_ACTION_CLICKED = 'NOW_ALERT#ACTION_CLICKED';\nexport const CRITICAL = 'critical';\nexport const INFO = 'info';\nexport const DISMISS = 'dismiss';\n","import { t } from 'sn-translate';\n\nexport const CHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT =\n\t'CHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT';\nexport const CHANNEL_OVERVIEW_EXPAND_COLLAPSE_ID = 'collapseOverview';\nexport const REFRESH_OVERVIEW_DATA = t('Refresh overview data');\nexport const REFRESH_OVERVIEW_DATA_ARIA_CONFIG = {\n\t'aria-label': REFRESH_OVERVIEW_DATA\n};\nexport const REFRESH_KPI_CARD_CONTAINER = 'REFRESH_KPI_CARD_CONTAINER';\nexport const NOW_TABS_BUTTON_CLICKED = 'NOW_BUTTON#CLICKED';\n","import './sn-manager-indicator-group-card';\n","import { t } from 'sn-translate';\n\nexport const BUILD_BOOTSTRAPPED_DATA = 'BUILD_BOOTSTRAPPED_DATA';\nexport const FETCH_QUEUES_REPORT_DATA = 'FETCH_QUEUES_REPORT_DATA';\nexport const FETCH_QUEUES_REPORT_DATA_SUCCESS =\n\t'FETCH_QUEUES_REPORT_DATA_SUCCESS';\nexport const FETCH_QUEUES_REPORT_DATA_ERROR = 'FETCH_QUEUES_REPORT_DATA_ERROR';\nexport const FETCH_AGENTS_REPORT_DATA = 'FETCH_AGENTS_REPORT_DATA';\nexport const FETCH_AGENTS_REPORT_DATA_SUCCESS =\n\t'FETCH_AGENTS_REPORT_DATA_SUCCESS';\nexport const FETCH_AGENTS_REPORT_DATA_ERROR = 'FETCH_AGENTS_REPORT_DATA_ERROR';\nexport const LIST_REFRESH_REQUESTED_INTERNAL =\n\t'LIST_REFRESH_REQUESTED_INTERNAL';\nexport const PAGINATION_PAGE_UPDATE = 'NOW_PAGINATION#PAGE_UPDATE';\nexport const PAGINATION_LIMIT_UPDATE = 'NOW_PAGINATION#LIMIT_UPDATE';\nexport const OPEN_RECORD = 'OPEN_RECORD';\nexport const LIST_UPDATE_SORT = 'LIST_UPDATE_SORT';\nexport const USER_PREF_UPDATE = 'USER_PREF_UPDATE';\nexport const USER_PREF_UPDATE_SUCCESS = 'USER_PREF_UPDATE_SUCCESS';\nexport const USER_PREF_UPDATE_ERROR = 'USER_PREF_UPDATE_ERROR';\nexport const ADD_FILTER_COMPARISON = 'LIST#ADD_FILTER_COMPARISON';\nexport const MUTATE_FILTER_COMPARISON = 'LIST#MUTATE_FILTER_COMPARISON';\nexport const DELETE_FILTER_COMPARISON = 'LIST#DELETE_FILTER_COMPARISON';\nexport const LIST_DELETE_CONDITION = 'LIST_DELETE_CONDITION';\nexport const OPERATORS = [\n\t{\n\t\tlabel: { generic: t('Is'), numeric: t('Is') },\n\t\toperator: '='\n\t},\n\t{\n\t\tlabel: {\n\t\t\tgeneric: t('Is Not'),\n\t\t\tnumeric: t('Is Not')\n\t\t},\n\t\toperator: '!='\n\t},\n\t{\n\t\tlabel: {\n\t\t\tgeneric: t('Is Empty'),\n\t\t\tnumeric: t('Is Empty'),\n\t\t\treference: t('Is Empty')\n\t\t},\n\t\toperator: 'ISEMPTY'\n\t},\n\t{\n\t\tlabel: {\n\t\t\tgeneric: t('Is Not Empty'),\n\t\t\tnumeric: t('Is Not Empty'),\n\t\t\treference: t('Is Not Empty')\n\t\t},\n\t\toperator: 'ISNOTEMPTY'\n\t},\n\t{\n\t\tlabel: { generic: t('Starts With'), reference: t('Starts With') },\n\t\toperator: 'STARTSWITH'\n\t},\n\t{\n\t\tlabel: { generic: t('Ends With'), reference: t('Ends With') },\n\t\toperator: 'ENDSWITH'\n\t},\n\t{\n\t\tlabel: { generic: t('Contains'), reference: t('Contains') },\n\t\toperator: 'LIKE'\n\t},\n\t{\n\t\tlabel: {\n\t\t\tgeneric: t('Does Not Contain'),\n\t\t\treference: t('Does Not Contain')\n\t\t},\n\t\toperator: 'NOT LIKE'\n\t},\n\t{\n\t\tlabel: { numeric: t('Less Than') },\n\t\toperator: 'LESSTHAN'\n\t},\n\t{\n\t\tlabel: { numeric: t('Greater Than') },\n\t\toperator: 'GREATERTHAN'\n\t},\n\t{\n\t\tlabel: { numeric: t('Less Than or Is') },\n\t\toperator: 'LESSTHANORIS'\n\t},\n\t{\n\t\tlabel: { numeric: t('Greater Than or Is') },\n\t\toperator: 'GREATERTHANORIS'\n\t},\n\t{\n\t\tlabel: { numeric: t('Between') },\n\t\toperator: 'BETWEEN'\n\t}\n];\nexport const MANAGED_GROUPS_PROPERTY = 'managedGroups';\nexport const IS_REFRESH_REQUESTED_PROPERTY = 'isRefreshRequested';\n","import './channel-kpis';\n","module.exports = __TECTONIC__$servicenow_now_uxf_visualization_connected;","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\n\nexport default createCustomElement(\n\t'sn-manager-channel-supervisor-list-config',\n\t{\n\t\trenderer: {\n\t\t\ttype: snabbdom\n\t\t},\n\t\tview,\n\t\tactionHandlers,\n\t\tproperties: {\n\t\t\tserviceChannelId: '',\n\t\t\tqueueId: ''\n\t\t},\n\t\tinitialState: {\n\t\t\tsupervisorConfig: []\n\t\t}\n\t}\n);\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport isEmpty from 'lodash/isEmpty';\nimport styles from './styles.scss';\n\nconst view = (state, { dispatch }) => {\n\tconst {\n\t\tproperties: { buttonsConfig }\n\t} = state;\n\n\tif (isEmpty(buttonsConfig)) return null;\n\tconst buttons = buttonsConfig.map(btn => {\n\t\treturn (\n\t\t\t<now-button\n\t\t\t\tlabel={btn.label}\n\t\t\t\tclassName={btn.className}\n\t\t\t\tsize={btn.size || 'md'}\n\t\t\t\tvariant={btn.variant || 'secondary'}\n\t\t\t\tstyle={btn.style}\n\t\t\t\ton-click={\n\t\t\t\t\tisEmpty(btn.actions)\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: () =>\n\t\t\t\t\t\t\tbtn.actions.forEach(action => {\n\t\t\t\t\t\t\t\tif (action.name)\n\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\taction.name,\n\t\t\t\t\t\t\t\t\t\taction.payload || {}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t></now-button>\n\t\t);\n\t});\n\treturn <div className=\"sn-manager-button-footer\">{buttons}</div>;\n};\n\ncreateCustomElement('sn-manager-button-footer', {\n\tproperties: {\n\t\tbuttonsConfig: { default: [] }\n\t},\n\tinitialState: {},\n\trenderer: { type: snabbdom },\n\tstyles,\n\tview\n});\n","module.exports = __TECTONIC__$servicenow_ui_effect_amb;","module.exports = __TECTONIC__$servicenow_now_chart_bar;","module.exports = __TECTONIC__$servicenow_now_calendar;","module.exports = __TECTONIC__$servicenow_now_record_field_lookup_connected;","module.exports = __TECTONIC__$servicenow_now_record_date_picker;","export { default } from './sn-manager-user-info';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nimport userInfoProps from './properties.js';\nimport userInfoActionHandlers from './actionHandlers.js';\n\nexport default createCustomElement('sn-manager-user-info', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\t...userInfoProps,\n\t...userInfoActionHandlers\n});\n","import moment from 'moment';\nimport { isEmpty, isNil, debounce, get } from 'lodash';\nimport { SWAP_CONSTS } from './constants';\nimport { t } from 'sn-translate';\nimport { INTERNAL_FORMAT } from '../../common/calendar/constants';\n\nconst TO = t('to');\n\n//Handles conversion of Shift Read API payload to return an Array of \"work\" shifts (isExclusion = false)\nexport const getWorkShiftsFromAPIData = (shiftsData, state, date) => {\n\t//Format Date-picker Date in Shift Read API format\n\tlet apiFormattedDate = moment(\n\t\tdate,\n\t\tget(\n\t\t\tstate,\n\t\t\t'properties.currentUser.dateFormat',\n\t\t\tINTERNAL_FORMAT.DATE\n\t\t).toUpperCase()\n\t).format(INTERNAL_FORMAT.DATE);\n\tlet timeFormatUserPreference = get(\n\t\tstate,\n\t\t'properties.currentUser.dateTimeFormat',\n\t\t'yyyy-MM-dd HH:mm:ss'\n\t);\n\tlet meridianMarker = timeFormatUserPreference.indexOf('a'); //Server Returns 'yyyy-MM-dd HH:mm:ss' Or 'yyyy-MM-dd HH:mm:ss a'\n\tlet timeFormat = meridianMarker === -1 ? 'HH:mm' : 'hh:mm A'; //Moment.js time format\n\tlet agentSchedules = [],\n\t\tworkShiftEvents = [];\n\tif (!isEmpty(shiftsData.schedules)) {\n\t\tagentSchedules = get(shiftsData, `schedules.${apiFormattedDate}`, []);\n\t\tagentSchedules = agentSchedules.filter(agentScheduleRecord => {\n\t\t\treturn agentScheduleRecord.isExclusion === false;\n\t\t});\n\n\t\tagentSchedules.forEach(workEvent => {\n\t\t\tlet workShiftObj = {};\n\t\t\tworkShiftObj.eventType = workEvent.name;\n\t\t\tworkShiftObj.cmnSpanId = workEvent.sysId;\n\t\t\tworkShiftObj.isExclusion = workEvent.isExclusion;\n\t\t\tworkShiftObj.agentScheduleRecord = workEvent.schedule;\n\t\t\tworkShiftObj.startTime = workEvent.startTime;\n\t\t\tworkShiftObj.startTimeDisplayValue =\n\t\t\t\tworkEvent.startTimeDisplayValue;\n\t\t\tworkShiftObj.startTimeSwapLabel = moment(\n\t\t\t\tworkEvent.startTime,\n\t\t\t\t'YYYY-MM-DD h:mm:ss' //Format of the Shift Planing Read API response\n\t\t\t).format(timeFormat);\n\t\t\tworkShiftObj.endTimeDisplayValue = workEvent.endTimeDisplayValue;\n\t\t\tworkShiftObj.endTime = workEvent.endTime;\n\t\t\tworkShiftObj.endTimeSwapLabel = moment(\n\t\t\t\tworkEvent.endTime,\n\t\t\t\t'YYYY-MM-DD h:mm:ss' //Format of the Shift Planing Read API response\n\t\t\t).format(timeFormat);\n\t\t\tworkShiftObj.shiftLabel = `${workShiftObj.startTimeSwapLabel} ${TO} ${workShiftObj.endTimeSwapLabel}`;\n\n\t\t\t//Push the workShift Obj as a workShiftEvent\n\t\t\tworkShiftEvents.push(workShiftObj);\n\t\t});\n\t}\n\treturn workShiftEvents;\n};\n\n/* Dropdown Items for Shift selection Now Dropdown\n * expected format[{ id: sys_id, label: '5:00pm to 6:00pm' }]\n */\nexport const getDropdownShifts = shiftObjArray => {\n\tlet dropDownItems = [];\n\tif (!isNil(shiftObjArray)) {\n\t\tshiftObjArray.forEach(shiftObj => {\n\t\t\tlet dropDownItem = {};\n\t\t\tdropDownItem.id = shiftObj.agentScheduleRecord.sysId;\n\t\t\tdropDownItem.label = shiftObj.shiftLabel;\n\n\t\t\tdropDownItems.push(dropDownItem);\n\t\t});\n\t}\n\n\treturn dropDownItems;\n};\n\n/*************************** */\n\n/* Expected format for Teammates TypeAhead\n[\n\t{\n\t\tvalue: 'VALUE 1',\n\t\tsecondary: [\n\t\t\t{\n\t\t\t\tvalue: 'VIP',\n\t\t\t\tstatus: 'positive',\n\t\t\t\tisHighlighted: 'true',\n\t\t\t\tshowIcon: true\n\t\t\t}\n\t\t],\n\t\tdisplayValue: 'VALUE 1 - VIP'\n\t}\n]\n*/\n\nexport const getTeamMatesForTypeAhead = teamMatesArr => {\n\tlet result = [];\n\tif (isNil(teamMatesArr)) return result;\n\n\tteamMatesArr.forEach(teamMateObj => {\n\t\tlet typeAheadObj = {};\n\t\ttypeAheadObj.value = teamMateObj.sys_id;\n\t\ttypeAheadObj.displayValue = teamMateObj.name;\n\t\ttypeAheadObj.secondary = [];\n\t\ttypeAheadObj.secondary.push({\n\t\t\tvalue: teamMateObj.email,\n\t\t\tisHighlighted: 'true',\n\t\t\tstatus: 'default'\n\t\t});\n\n\t\tresult.push(typeAheadObj);\n\t});\n\n\treturn result;\n};\n/*\n * Function to filter the available dropdown options based on search term\n * Called using a debounce below\n */\nexport const filterAndUpdateState = (\n\tsearchTerm,\n\toptions,\n\tdispatch,\n\tupdateState\n) => {\n\tupdateState({\n\t\tteamMates: options\n\t\t\t.filter(\n\t\t\t\tobj =>\n\t\t\t\t\tobj.displayValue\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.indexOf(searchTerm.toLowerCase()) !== -1\n\t\t\t)\n\t\t\t.map(obj => ({\n\t\t\t\tvalue: obj.value,\n\t\t\t\tdisplayValue: obj.displayValue,\n\t\t\t\tsecondary: obj.secondary\n\t\t\t}))\n\t});\n};\n\nlet debouncedFilter = debounce(filterAndUpdateState, 250, { maxWait: 1000 });\n\n// Helper Function that takes \"searchTerm\", Teammates and filters using 'Contains' type query\nconst filterResults = (searchTerm, options, dispatch, updateState) => {\n\tif (searchTerm.length >= 1) {\n\t\tdebouncedFilter(searchTerm, options, dispatch, updateState);\n\t} else {\n\t\t//Text box empty,  Reset the Requestee and all default teammates\n\t\tupdateState({\n\t\t\tteamMates: options,\n\t\t\tselectedRequesteeObj: { value: '', displayValue: '' }\n\t\t});\n\t}\n};\n\n/* Util Function called by TypeAhead to handle search Callback\n */\nexport const onSearchTermChange = (event, options, dispatch, updateState) => {\n\tif (event) {\n\t\tif (event.persist) {\n\t\t\tevent.persist(); //Handle React.JS internal warning from now-record-typeahead\n\t\t}\n\t\tlet newState = {};\n\t\tconst searchTerm = event.target.value.replace(/^\\s+/g, '');\n\t\tif (event.stopPropagation) {\n\t\t\tevent.stopPropagation(); //Stop bubbling up the event to Now-Calendar\n\t\t}\n\n\t\t//In any case, reset state as the search box is in progress\n\t\tfilterResults(searchTerm, options, dispatch, updateState);\n\t\tnewState.searchTerm = searchTerm;\n\t\tnewState.requesteeSelectedShift = {};\n\t\tnewState.requesteeShifts = [];\n\t\tupdateState(newState);\n\t}\n};\n\n/* Util Function called by TypeAhead to handle selection Callback\n */\nexport const onSelectionChange = (\n\tselectionValue,\n\tselectionDisplayValue,\n\tdispatch,\n\tupdateState,\n\tstate\n) => {\n\tlet requesteeObj = {};\n\trequesteeObj.value = selectionValue;\n\trequesteeObj.displayValue = selectionDisplayValue;\n\n\t//Fetch Shifts for current date for newly selected Requestee\n\tdispatch(SWAP_CONSTS.REQUESTEE_SHIFT_FETCH, {\n\t\tdata: {\n\t\t\tindividualAgents: requesteeObj.value,\n\t\t\tstartDate: state.requesteeDate,\n\t\t\tendDate: state.requesteeDate,\n\t\t\tpublished: true\n\t\t}\n\t});\n\n\t//Update Requestee\n\tupdateState({\n\t\tsearchTerm: selectionDisplayValue,\n\t\tselectedRequesteeDisplayValue: selectionDisplayValue,\n\t\tselectedRequesteeObj: requesteeObj,\n\t\trequesteeSelectedShift: {}\n\t});\n};\n\n// Helper function called by Shift Selection Action handlers for Requestee\nexport const updateRequesteeSelectedShift = (action, updateState, state) => {\n\tlet selectedShiftObj = {};\n\tlet requesteeShifts = get(state, 'requesteeShifts', []);\n\tselectedShiftObj = requesteeShifts.find(shiftObj => {\n\t\tif (shiftObj.agentScheduleRecord.sysId === action.payload.item.id) {\n\t\t\treturn true;\n\t\t}\n\t});\n\tupdateState({\n\t\trequesteeSelectedShift: selectedShiftObj\n\t});\n};\n\n// Helper function called by Shift Selection Action handlers for Requestor\nexport const updateRequestorSelectedShift = (action, updateState, state) => {\n\tlet selectedShiftObj = {};\n\tlet requestorShifts = get(state, 'requestorShifts', []);\n\tselectedShiftObj = requestorShifts.find(shiftObj => {\n\t\tif (shiftObj.agentScheduleRecord.sysId === action.payload.item.id) {\n\t\t\treturn true;\n\t\t}\n\t});\n\tupdateState({\n\t\trequestorSelectedShift: selectedShiftObj\n\t});\n};\n\n//Helper function to create POST request payload for shift swap table api\nexport const getSwapPayload = state => {\n\tlet payload = {\n\t\trequestor: get(state, 'properties.currentUser.sys_id', ''),\n\t\trequestee: get(state, 'selectedRequesteeObj.value', ''),\n\t\trequestor_date: get(state, 'requestorDate', ''),\n\t\trequestee_date: get(state, 'requesteeDate', ''),\n\t\trequestor_schedule: get(\n\t\t\tstate,\n\t\t\t'requestorSelectedShift.agentScheduleRecord.sysId',\n\t\t\t''\n\t\t),\n\t\trequestee_schedule: get(\n\t\t\tstate,\n\t\t\t'requesteeSelectedShift.agentScheduleRecord.sysId',\n\t\t\t''\n\t\t),\n\t\trequestor_shift_start: get(\n\t\t\tstate,\n\t\t\t'requestorSelectedShift.startTimeDisplayValue',\n\t\t\t''\n\t\t),\n\t\trequestor_shift_end: get(\n\t\t\tstate,\n\t\t\t'requestorSelectedShift.endTimeDisplayValue',\n\t\t\t''\n\t\t),\n\t\trequestee_shift_start: get(\n\t\t\tstate,\n\t\t\t'requesteeSelectedShift.startTimeDisplayValue',\n\t\t\t''\n\t\t),\n\t\trequestee_shift_end: get(\n\t\t\tstate,\n\t\t\t'requesteeSelectedShift.endTimeDisplayValue',\n\t\t\t''\n\t\t)\n\t};\n\n\treturn payload;\n};\n","import './sn-manager-event-request';\n","module.exports = __TECTONIC__lodash_4_17_15[\"isNil\"];","module.exports = __TECTONIC__$servicenow_now_input;","import get from 'lodash/get';\nimport moment from 'moment';\nexport const generateEventRequestPayload = state => {\n\t/* Payload Format {\n\t\ttitle: '',\n\t\tattendees: ['1234', '5678'],\n\t\tstartDate: '2020-01-02',\n\t\tstartTime: '20:20',\n\t\tendDate: '2020-01-03',\n\t\tendTime: '23:59',\n\t\tdescription: '',\n\t\tadditionalSelectors: {\n\t\t\tsys_user: {\n\t\t\t\tname: '1234'\n\t\t\t}\n\t\t},\n\t\tmode: 'create',\n\t\trecord_id: '',\n\t\treadInTimezone: ''\n\t}; */\n\n\tlet payload = {};\n\tlet props = get(state, 'properties', {});\n\tlet {\n\t\teventSpanId,\n\t\teventCategoryId,\n\t\tcurrentUser,\n\t\teventGroup,\n\t\tmode,\n\t\treadInTimezone,\n\t\teventTypeId,\n\t\tcontext\n\t} = props;\n\n\t//Populate metadata\n\tpayload.recordId = eventSpanId;\n\tpayload.eventCategory = eventCategoryId;\n\tpayload.eventType = eventTypeId;\n\tpayload.readInTimezone = readInTimezone;\n\tpayload.group = eventGroup;\n\tpayload.requestor = currentUser.sys_id;\n\tpayload.mode = mode;\n\tpayload.context = context;\n\n\t//Populate formData values\n\n\tlet formData = get(state, 'properties.formData', {});\n\n\tpayload.title = formData.titleValue;\n\tpayload.attendees = formData.selectedAttendees;\n\n\t// We also need the raw date values for WorkShift events\n\tpayload.startDate = formData.startDateValue;\n\tpayload.endDate = formData.endDateValue;\n\tpayload.startDateTime = combineDateTime(\n\t\tformData.startDateValue,\n\t\tformData.startTimeValue\n\t);\n\tpayload.endDateTime = combineDateTime(\n\t\tformData.endDateValue,\n\t\tformData.endTimeValue\n\t);\n\n\tpayload.description = formData.descriptionValue;\n\tpayload.additionalSelectors = {};\n\n\tlet modalSchema = get(state, 'properties.modalSchema', {});\n\tlet additionalSelectorSchema = modalSchema.additionalSelectors;\n\n\tadditionalSelectorSchema.forEach((additionalSelectorObj, index) => {\n\t\tpayload.additionalSelectors[additionalSelectorObj.table] = {};\n\t\tpayload.additionalSelectors[additionalSelectorObj.table][\n\t\t\tadditionalSelectorObj.field\n\t\t] = formData.additionalSelectors[index]\n\t\t\t? formData.additionalSelectors[index]['value']\n\t\t\t: '';\n\t});\n\n\treturn payload;\n};\n\nexport const dateValuetoDatePickerFormat = (dateValue, state) => {\n\tif (!dateValue) return '';\n\tlet dateFormatPreference = state.dateFormatPreference;\n\tlet datePickerDate = moment(dateValue).format(\n\t\tdateFormatPreference.toUpperCase()\n\t);\n\treturn datePickerDate; //dd.mm.yyyy, dd/mm/yyyy, mm.dd.yyyy, mm-dd-yyyy\n};\n\nexport const datePickerValuetoDateValue = (datePickerValue, state) => {\n\tif (!datePickerValue) return '';\n\tlet dateFormatPreference = state.dateFormatPreference;\n\tlet standardDate = moment(datePickerValue, dateFormatPreference).format(\n\t\t'YYYY-MM-DD'\n\t);\n\treturn standardDate; //YYYY-MM-DD\n};\n\nexport const timeValuetoTimePickerFormat = (timeValue, state) => {\n\tif (!timeValue) return '';\n\tlet timePickerValue = moment(timeValue, 'HH:mm').format(\n\t\tstate.timeFormatPreference\n\t);\n\treturn timePickerValue;\n};\n\nexport const timePickerValuetoTimeValue = (timePickerValue, state) => {\n\tif (!timePickerValue) return '';\n\n\tlet timeFormatPreference = state.timeFormatPreference;\n\tlet standardTimeValue = moment(\n\t\ttimePickerValue,\n\t\ttimeFormatPreference\n\t).format('HH:mm');\n\treturn standardTimeValue; //HH:mm\n};\n\nexport const combineDateTime = (dateValue, timeValue) => {\n\tlet dateTime = moment(`${dateValue} ${timeValue}`).format(\n\t\t'YYYY-MM-DD HH:mm:ss'\n\t);\n\treturn dateTime;\n};\n\n//Return true if both date fields are either filled, or not mandatory.\nexport const checkIfMandatoryDateFieldsAreFilled = (formData, modalSchema) => {\n\treturn (\n\t\t(formData.startDateValue ||\n\t\t\t!get(modalSchema, 'startDate.mandatory', false)) &&\n\t\t(formData.endDateValue || !get(modalSchema, 'endDate.mandatory', false))\n\t);\n};\n\nexport const checkIfStartDatetimeIsBeforeEndDateTime = (\n\tformData,\n\tmodalSchema\n) => {\n\tif (!formData.startDateValue || !formData.endDateValue)\n\t\treturn checkIfMandatoryDateFieldsAreFilled(formData, modalSchema);\n\n\tlet isAnyTimeValueMissing =\n\t\t!formData.startTimeValue || !formData.endTimeValue;\n\n\tlet startDateTime = isAnyTimeValueMissing\n\t\t? moment(`${formData.startDateValue}`)\n\t\t: moment(`${formData.startDateValue} ${formData.startTimeValue}`);\n\n\tlet endDateTime = isAnyTimeValueMissing\n\t\t? moment(`${formData.endDateValue}`)\n\t\t: moment(`${formData.endDateValue} ${formData.endTimeValue}`);\n\n\tif (isAnyTimeValueMissing) return startDateTime.isSameOrBefore(endDateTime);\n\telse return startDateTime.isBefore(endDateTime);\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"uniqBy\"];","module.exports = __TECTONIC__lodash_4_17_15[\"cloneDeep\"];","module.exports = __TECTONIC__lodash_4_17_15[\"forIn\"];","module.exports = __TECTONIC__lodash_4_17_15[\"isArray\"];","module.exports = __TECTONIC__lodash_4_17_15[\"uniq\"];","import '@servicenow/now-avatar';\nimport '@servicenow/now-icon';\nimport {\n\tTimelineDayTemplateRenderer,\n\tCalendarEvent,\n\tTimelineEvent\n} from '@servicenow/now-calendar';\nimport {\n\tINTERNAL_FORMAT,\n\tDIRECTION,\n\tACTIONS,\n\tKEYS,\n\tFORECAST_STATUS_BACKGROUND\n} from '../../common/calendar/constants';\nimport { CALENDAR_EVENTS, CALENDAR_VIEWS } from '../../common/constants';\nimport { getCoverage } from './coverageCalculator';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { t } from 'sn-translate';\nimport {\n\tgetForecastInfoDayView,\n\tgetForecastInfoWeekView,\n\trenderForecastCellDayView,\n\trenderForecastCellWeekView\n} from './forecast';\n\nexport class SchedulingRenderer extends TimelineDayTemplateRenderer {\n\tlayout(viewConfig, timelineEvent, parentEvent, tzViewStartMS, tzViewEndMS) {\n\t\tconst CHILD_EVENT_TOP_PADDING = 2;\n\t\tconst timezoneOffset = parentEvent.rawEvent.startUTCOffsetMS;\n\n\t\tlet parentEventStartMS = parentEvent.rawEvent.startMS + timezoneOffset;\n\t\tlet parentEventEndMS = parentEvent.rawEvent.endMS + timezoneOffset;\n\n\t\tlet tzEventStartMS = timelineEvent.rawEvent.startMS + timezoneOffset;\n\t\tlet tzEventEndMS = timelineEvent.rawEvent.endMS + timezoneOffset;\n\n\t\t// Check the boundary condition for parent event\n\t\tparentEventStartMS =\n\t\t\tparentEventStartMS < tzViewStartMS\n\t\t\t\t? tzViewStartMS\n\t\t\t\t: parentEventStartMS;\n\t\tparentEventEndMS =\n\t\t\tparentEventEndMS > tzViewEndMS ? tzViewEndMS : parentEventEndMS;\n\n\t\tif (\n\t\t\ttzEventStartMS > parentEventEndMS ||\n\t\t\ttzEventEndMS < parentEventStartMS\n\t\t) {\n\t\t\ttimelineEvent.isOutOfView = true;\n\t\t\treturn;\n\t\t}\n\n\t\t// Check the boundary condition for child event\n\t\ttzEventStartMS =\n\t\t\ttzEventStartMS < parentEventStartMS\n\t\t\t\t? parentEventStartMS\n\t\t\t\t: tzEventStartMS;\n\t\ttzEventEndMS =\n\t\t\ttzEventEndMS > parentEventEndMS ? parentEventEndMS : tzEventEndMS;\n\n\t\tconst posX =\n\t\t\t((tzEventStartMS - parentEventStartMS) * 100) /\n\t\t\t(parentEventEndMS - parentEventStartMS);\n\t\tconst width =\n\t\t\t((tzEventEndMS - tzEventStartMS) * 100) /\n\t\t\t(parentEventEndMS - parentEventStartMS);\n\n\t\ttimelineEvent.x = posX;\n\t\ttimelineEvent.y = 0 + CHILD_EVENT_TOP_PADDING;\n\t\ttimelineEvent.width = width;\n\t\ttimelineEvent.height = viewConfig.eventHeight - CHILD_EVENT_TOP_PADDING;\n\t}\n\n\t_getEventBodyTitle(rawEvent, ignoreIfWorkEvent) {\n\t\tif (!rawEvent.isPublished) return t('Draft');\n\t\telse if (\n\t\t\tignoreIfWorkEvent &&\n\t\t\tget(rawEvent, 'schedule.eventType.category.sys_id', '') ===\n\t\t\t\tCALENDAR_EVENTS.WORK_SHIFT.CATEGORY\n\t\t)\n\t\t\treturn '';\n\t\telse if (get(rawEvent, 'schedule.workSchedule.name', '') !== '')\n\t\t\treturn rawEvent.schedule.workSchedule.name;\n\t\telse return rawEvent.title;\n\t}\n\n\trenderEventBody(\n\t\tviewConfig,\n\t\tprops,\n\t\tevent,\n\t\tdispatch,\n\t\tviewStartMS,\n\t\tviewEndMS\n\t) {\n\t\t//Do not show enclosed spans in the week view\n\t\tif (viewConfig.viewName === CALENDAR_VIEWS.TIMELINE.WEEK) {\n\t\t\treturn <span>{this._getEventBodyTitle(event.rawEvent)}</span>;\n\t\t}\n\n\t\tlet bodyContainer = {\n\t\t\theight: '100%',\n\t\t\twidth: '100%'\n\t\t};\n\n\t\tconst leftRightOffset = props.dir === 'rtl' ? 'right' : 'left';\n\n\t\tlet childEvents = [];\n\t\tif (isEmpty(event.rawEvent.childEvents) === false) {\n\t\t\tchildEvents = event.rawEvent.childEvents.map(\n\t\t\t\t(childEvent, index) => {\n\t\t\t\t\tlet calEvent = new CalendarEvent(\n\t\t\t\t\t\tchildEvent,\n\t\t\t\t\t\tprops.timezone\n\t\t\t\t\t);\n\t\t\t\t\tlet timelineEv = new TimelineEvent(\n\t\t\t\t\t\tevent.id + '_child_' + index,\n\t\t\t\t\t\tcalEvent.title,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tcalEvent\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.layout(\n\t\t\t\t\t\tviewConfig,\n\t\t\t\t\t\ttimelineEv,\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tviewStartMS,\n\t\t\t\t\t\tviewEndMS\n\t\t\t\t\t);\n\n\t\t\t\t\tif (timelineEv.isOutOfView) return '';\n\n\t\t\t\t\tlet bgColor = calEvent.bgColor ? calEvent.bgColor : '#CCC';\n\n\t\t\t\t\tlet styles = {\n\t\t\t\t\t\ttop: '0',\n\t\t\t\t\t\twidth: timelineEv.width + '%',\n\t\t\t\t\t\t[leftRightOffset]: timelineEv.x + '%',\n\t\t\t\t\t\theight: timelineEv.height + 'px',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tbackgroundColor: bgColor,\n\t\t\t\t\t\tpadding: '0 2px',\n\t\t\t\t\t\tfontSize: '12px',\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\ttextOverflow: 'ellipsis',\n\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t};\n\t\t\t\t\treturn <div style={styles} key={timelineEv.id} />;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tconst eventTitleStyle = {\n\t\t\tdisplay: 'inline-block',\n\t\t\tposition: 'absolute',\n\t\t\tverticalAlign: 'top',\n\t\t\ttextOverflow: 'ellipsis',\n\t\t\twhiteSpace: 'nowrap',\n\t\t\toverflow: 'hidden',\n\t\t\tmaxWidth: 'calc(100% - 35px)'\n\t\t};\n\n\t\treturn (\n\t\t\t<div style={bodyContainer} key={event.id}>\n\t\t\t\t<div className=\"child-events\">{childEvents}</div>\n\t\t\t\t<div style={eventTitleStyle}>\n\t\t\t\t\t{this._getEventBodyTitle(event.rawEvent, true)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderSectionTitle(viewConfig) {\n\t\tconst { showCoverageRow, showForecast, forecastData } = viewConfig;\n\n\t\tif (!showCoverageRow) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst label =\n\t\t\tshowForecast && forecastData\n\t\t\t\t? t('Total coverage/demand')\n\t\t\t\t: t('Total coverage');\n\n\t\tconst aggregatorTitleStyle = {\n\t\t\tposition: 'relative',\n\t\t\ttop: 'calc(100% - 40px)',\n\t\t\t'padding-left': '16px',\n\t\t\twidth: 'inherit',\n\t\t\theight: '40px',\n\t\t\tdisplay: 'flex',\n\t\t\t'align-items': 'center',\n\t\t\t'font-size': '1rem',\n\t\t\t'background-color': 'RGB(var(--now-color--neutral-2,228,230,231))',\n\t\t\t'border-top':\n\t\t\t\t'1px solid rgb(var(--now-color--neutral-5,172,180,181))'\n\t\t};\n\t\treturn <div style={aggregatorTitleStyle}>{label}</div>;\n\t}\n\n\tgetHeaderTimeCellView(\n\t\tviewConfig,\n\t\tprops,\n\t\tstartTime,\n\t\tendTime,\n\t\tdispatch,\n\t\tevents,\n\t\tcontextualPanelCurrentView,\n\t\tonFocusChange\n\t) {\n\t\tconst aggregatorStyle = {\n\t\t\t'background-color': 'RGB(var(--now-color--neutral-2,228,230,231))',\n\t\t\theight: '40px',\n\t\t\tdisplay: 'flex',\n\t\t\t'align-items': 'center',\n\t\t\t'justify-content': 'center',\n\t\t\t'font-size': '12px',\n\t\t\t'border-top':\n\t\t\t\t'1px solid rgb(var(--now-color--neutral-5,172,180,181))',\n\t\t\t'margin-top': '0.3rem',\n\t\t\t'margin-bottom': '-0.3rem'\n\t\t};\n\t\tconst contextDate = startTime.format(INTERNAL_FORMAT.DATE_TIME);\n\t\tconst sections = get(props, 'sections', []);\n\t\tconst timezone = get(props, 'timezone', []);\n\t\tconst shouldShowForecast =\n\t\t\tviewConfig.showForecast && viewConfig.forecastData;\n\t\tconst coverageIndex =\n\t\t\tviewConfig.viewName === CALENDAR_VIEWS.TIMELINE.DAY\n\t\t\t\t? startTime.hour()\n\t\t\t\t: startTime.day();\n\t\tlet coverageSum = 0;\n\t\tlet barChartData;\n\t\tlet weekDayCoverage;\n\t\tlet forecastStatus;\n\t\tlet cellLabel;\n\n\t\tif (viewConfig.showCoverageRow) {\n\t\t\tsections.forEach(section => {\n\t\t\t\tconst coverageArray = section.runtimeData.get(\n\t\t\t\t\t'coverage-' + viewConfig.viewName\n\t\t\t\t);\n\t\t\t\tif (!coverageArray || coverageArray[coverageIndex] == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcoverageSum += coverageArray[coverageIndex];\n\t\t\t});\n\n\t\t\tcellLabel = coverageSum;\n\n\t\t\tif (shouldShowForecast) {\n\t\t\t\tif (viewConfig.viewName === 'TIMELINE_DAY') {\n\t\t\t\t\tif (!sections.dayViewCache) {\n\t\t\t\t\t\tsections.dayViewCache = new Map();\n\t\t\t\t\t}\n\t\t\t\t\tif (!sections.dayViewCache.has(contextDate)) {\n\t\t\t\t\t\tsections.dayViewCache.set(\n\t\t\t\t\t\t\tcontextDate,\n\t\t\t\t\t\t\tgetForecastInfoDayView({\n\t\t\t\t\t\t\t\tstartTime,\n\t\t\t\t\t\t\t\tsections,\n\t\t\t\t\t\t\t\tviewConfig\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst { label, status } = sections.dayViewCache.get(\n\t\t\t\t\t\tcontextDate\n\t\t\t\t\t);\n\t\t\t\t\tcellLabel = label;\n\t\t\t\t\tforecastStatus = status;\n\t\t\t\t} else {\n\t\t\t\t\tif (!sections.weekViewCache) {\n\t\t\t\t\t\tsections.weekViewCache = new Map();\n\t\t\t\t\t}\n\t\t\t\t\tif (!sections.weekViewCache.has(contextDate)) {\n\t\t\t\t\t\tsections.weekViewCache.set(\n\t\t\t\t\t\t\tcontextDate,\n\t\t\t\t\t\t\tgetForecastInfoWeekView({\n\t\t\t\t\t\t\t\tstartTime,\n\t\t\t\t\t\t\t\tsections,\n\t\t\t\t\t\t\t\tviewConfig,\n\t\t\t\t\t\t\t\tevents: props.events,\n\t\t\t\t\t\t\t\tcontextDate,\n\t\t\t\t\t\t\t\ttimezone\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst {\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\tcoverageVsForecast,\n\t\t\t\t\t\tdayCoverage\n\t\t\t\t\t} = sections.weekViewCache.get(contextDate);\n\t\t\t\t\tforecastStatus = status;\n\t\t\t\t\tbarChartData = coverageVsForecast;\n\t\t\t\t\tweekDayCoverage = dayCoverage;\n\t\t\t\t}\n\n\t\t\t\taggregatorStyle['background-color'] =\n\t\t\t\t\tFORECAST_STATUS_BACKGROUND[forecastStatus];\n\t\t\t}\n\t\t}\n\n\t\tif (viewConfig.viewName === 'TIMELINE_WEEK') {\n\t\t\t//const cls = [];\n\t\t\tconst dateCls = ['date-number', 'clickable'];\n\t\t\tconst onDateClick = /**\n\t\t\t * @param {any} event\n\t\t\t * @param {moment.Moment} date\n\t\t\t */ (event, date, keyFocus) => {\n\t\t\t\t\tif (keyFocus) onFocusChange(date);\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (contextualPanelCurrentView !== 'agenda-view')\n\t\t\t\t\t\t\tdispatch(ACTIONS.INTERNAL_STATE_SET, {\n\t\t\t\t\t\t\t\tcontextualPanelCurrentView: 'agenda-view'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tdispatch('PROPERTIES_SET', { contextDate: date });\n\t\t\t\t\t// setTimeout(() => setFocus(event), 500);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"day\">\n\t\t\t\t\t\t{this.setLocale(startTime, props).format(\n\t\t\t\t\t\t\tINTERNAL_FORMAT.DAY\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={dateCls.join(' ')}\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ton-keydown={event => {\n\t\t\t\t\t\t\tevent.which === KEYS.ENTER\n\t\t\t\t\t\t\t\t? onDateClick(event, startTime, false)\n\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ton-mousedown={mouseEvent => {\n\t\t\t\t\t\t\tonDateClick(mouseEvent, startTime, false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ton-focus={event => onDateClick(event, startTime, true)}\n\t\t\t\t\t\taria-label={this.setLocale(startTime, props).format(\n\t\t\t\t\t\t\tINTERNAL_FORMAT.ARIA_DATE_FORMAT\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.setLocale(startTime, props).format(\n\t\t\t\t\t\t\tINTERNAL_FORMAT.ONLY_DATE\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{viewConfig.showCoverageRow ? (\n\t\t\t\t\t\t<div style={aggregatorStyle}>\n\t\t\t\t\t\t\t{shouldShowForecast\n\t\t\t\t\t\t\t\t? renderForecastCellWeekView({\n\t\t\t\t\t\t\t\t\tforecastStatus,\n\t\t\t\t\t\t\t\t\tstartTime,\n\t\t\t\t\t\t\t\t\tdateFormat: props.dateFormat,\n\t\t\t\t\t\t\t\t\ttimeFormat: props.timeFormat,\n\t\t\t\t\t\t\t\t\tbarChartData,\n\t\t\t\t\t\t\t\t\tweekDayCoverage,\n\t\t\t\t\t\t\t\t\tdispatch\n\t\t\t\t\t\t\t\t  }) // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t\t\t\t\t\t\t: cellLabel}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{startTime.format(props.timeFormat)}</div>\n\t\t\t\t{viewConfig.showCoverageRow ? (\n\t\t\t\t\t<div style={aggregatorStyle}>\n\t\t\t\t\t\t{shouldShowForecast\n\t\t\t\t\t\t\t? renderForecastCellDayView({\n\t\t\t\t\t\t\t\tcellLabel,\n\t\t\t\t\t\t\t\tforecastStatus,\n\t\t\t\t\t\t\t\tsections,\n\t\t\t\t\t\t\t\tviewConfig,\n\t\t\t\t\t\t\t\tstartTime,\n\t\t\t\t\t\t\t\ttimeFormat: props.timeFormat,\n\t\t\t\t\t\t\t\tdispatch\n\t\t\t\t\t\t\t  }) // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t\t\t\t\t\t: cellLabel}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderSectionHeader(viewConfig, props, section) {\n\t\tconst padding = (section.level + 1) * 16;\n\t\tconst ARIA_LABEL_COLLAPSED = `Collapsed, click to expand ${section.title}`;\n\t\tconst ARIA_LABEL_EXPANDED = `Expanded, click to collapse ${section.title}`;\n\t\tlet ariaLabel = ARIA_LABEL_EXPANDED;\n\t\tlet style = {\n\t\t\tpadding: `0px 0px 0px ${padding}px`,\n\t\t\t'border-right':\n\t\t\t\t'1px solid RGB(var(--now-color--neutral-5,172,180,181))'\n\t\t};\n\t\tif (props.dir === DIRECTION.RTL)\n\t\t\tstyle.padding = `0px ${padding}px 0px 0px`;\n\n\t\tlet iconName = 'chevron-down-outline';\n\t\tif (section.isCollapsed) {\n\t\t\tariaLabel = ARIA_LABEL_COLLAPSED;\n\t\t\ticonName = 'chevron-right-outline';\n\t\t\tif (props.dir === DIRECTION.RTL) {\n\t\t\t\ticonName = 'chevron-left-outline';\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"row-header\" style={style}>\n\t\t\t\t<span section_id={section.id}>\n\t\t\t\t\t<now-icon\n\t\t\t\t\t\ticon={iconName}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: 'RGB(var(--now-color--neutral-12,66,80,81))'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"row-header-icon clickable\"\n\t\t\t\t\t\tattrs={{ section_id: section.id }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t</now-icon>\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\ttitle={section.title}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\tclassName=\"row-header-title\"\n\t\t\t\t>\n\t\t\t\t\t{section.title}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderEventSectionHeader(viewConfig, state, section) {\n\t\tlet cellwidth;\n\n\t\tif (viewConfig.noScrolling) {\n\t\t\tcellwidth = 100 / viewConfig.xSize + '%';\n\t\t} else {\n\t\t\tcellwidth = 70;\n\t\t\tif (viewConfig.viewName === CALENDAR_VIEWS.TIMELINE.WEEK)\n\t\t\t\tcellwidth = 240;\n\t\t\tif (viewConfig.xSize * cellwidth < viewConfig.eventAreaClientWidth)\n\t\t\t\tcellwidth = Math.floor(\n\t\t\t\t\tviewConfig.eventAreaClientWidth / viewConfig.xSize\n\t\t\t\t);\n\n\t\t\tcellwidth = cellwidth + 'px';\n\t\t}\n\n\t\tconst tableParentStyle = {\n\t\t\t'margin-left': '-1px'\n\t\t};\n\n\t\tconst tableStyle = {\n\t\t\t'border-collapse': 'collapse'\n\t\t};\n\n\t\tconst tableCellStyle = {\n\t\t\twidth: cellwidth,\n\t\t\t'border-left':\n\t\t\t\t'1px solid RGB(var(--now-color--neutral-5,172,180,181))',\n\t\t\t'border-right':\n\t\t\t\t'1px solid RGB(var(--now-color--neutral-5,172,180,181))',\n\t\t\t'min-width': cellwidth,\n\t\t\t'max-width': cellwidth,\n\t\t\t'text-align': 'center',\n\t\t\t'font-size': '12px',\n\t\t\theight: '40px'\n\t\t};\n\n\t\tlet events = get(state, 'events', []);\n\t\tlet contextDate = get(state, 'contextDate', []);\n\t\tlet allSections = get(state, 'sections', []);\n\t\tlet timezone = get(state, 'timezone', []);\n\t\tconst coverageByViewKey = 'coverage-' + viewConfig.viewName;\n\n\t\tallSections.forEach(s => {\n\t\t\tconst { runtimeData } = s;\n\t\t\tif (runtimeData && !runtimeData.has(coverageByViewKey)) {\n\t\t\t\truntimeData.set(\n\t\t\t\t\tcoverageByViewKey,\n\t\t\t\t\tgetCoverage(\n\t\t\t\t\t\tviewConfig,\n\t\t\t\t\t\tevents,\n\t\t\t\t\t\tcontextDate,\n\t\t\t\t\t\tallSections,\n\t\t\t\t\t\ttimezone,\n\t\t\t\t\t\ts\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tlet coverage = section.rawSection.runtimeData\n\t\t\t? section.rawSection.runtimeData.get(coverageByViewKey)\n\t\t\t: 0;\n\n\t\tif (!coverage) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet jsx = (\n\t\t\t<div style={tableParentStyle}>\n\t\t\t\t<table style={tableStyle}>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{coverage.map(c => (\n\t\t\t\t\t\t\t<td style={tableCellStyle}>{c}</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\n\t\treturn [jsx];\n\t}\n\n\trenderRowTitle(viewConfig, props, row) {\n\t\tconst expandCollapseIconSize = 10;\n\t\tconst padding = (row.level + 1) * 16 + expandCollapseIconSize;\n\t\tconst namePadding = 8;\n\t\tlet titleStyle = {\n\t\t\tpadding: `0px 0px 0px ${padding}px`\n\t\t};\n\t\tlet nameStyle = {\n\t\t\tpadding: `0px 0px 0px ${namePadding}px`\n\t\t};\n\n\t\tif (props.dir === DIRECTION.RTL) {\n\t\t\ttitleStyle = {\n\t\t\t\tpadding: `0px ${padding}px 0px 0px`\n\t\t\t};\n\t\t\tnameStyle = {\n\t\t\t\tpadding: `0px ${namePadding}px 0px 0px`\n\t\t\t};\n\t\t}\n\t\treturn (\n\t\t\t<span attrs={{ title: row.title }} style={titleStyle}>\n\t\t\t\t<now-avatar\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tuserName={row.title}\n\t\t\t\t></now-avatar>\n\t\t\t\t<span style={nameStyle}>{row.title}</span>\n\t\t\t</span>\n\t\t);\n\t}\n}\n","import { CALENDAR_EVENTS, CALENDAR_VIEWS } from '../../common/constants';\nimport { INTERNAL_FORMAT } from '../../common/calendar/constants';\n\nimport moment from 'moment-timezone';\nimport get from 'lodash/get';\nimport uniq from 'lodash/uniq';\nimport difference from 'lodash/difference';\n\nexport const getCoverage = (\n\tviewConfig,\n\tevents,\n\tcontextDate,\n\tallSections,\n\ttimezone,\n\tsection,\n\tpreciseTime,\n\tnumberOfSections\n) => {\n\tlet { xSize, xStep, xUnitName, viewName } = viewConfig;\n\n\tif (numberOfSections) xSize = numberOfSections;\n\n\t//Coverage array will hold list of agents that are available for each interval of time axis, in order.\n\t//These will eventually be converted into counts.\n\tlet coverage = [];\n\n\t//If a specific section was provided, take a list of all users in that section\n\tlet groupIDs = [];\n\tfor (let i in allSections) {\n\t\tlet s = allSections[i];\n\t\tif (!section || s.title == section.title) {\n\t\t\tlet ch = s.children;\n\t\t\tfor (let j in ch) groupIDs.push(ch[j].id);\n\t\t}\n\t}\n\tfor (let i = 0; i < xSize; i++) {\n\t\tcoverage.push({\n\t\t\t//These fields determine which users are active and which users aren't\n\t\t\tat_work: [],\n\t\t\texcluded: [],\n\t\t\t//These fields are only for calculating the two above in week view\n\t\t\twork_intervals: {},\n\t\t\texclude_intervals: {}\n\t\t});\n\t}\n\n\tfor (let i in events) {\n\t\t//Only process events that are for users in this section\n\t\tlet ev = events[i];\n\t\tif (section && !groupIDs.includes(ev.group)) continue;\n\n\t\t//Get information on event start/end time, as well as info on its children\n\t\tlet user = ev.group;\n\n\t\tlet eventStart = moment.utc(\n\t\t\tmoment\n\t\t\t\t.tz(\n\t\t\t\t\tev.start,\n\t\t\t\t\tINTERNAL_FORMAT.DATE_TIME,\n\t\t\t\t\tev.originalReadInTimezone\n\t\t\t\t)\n\t\t\t\t.tz(timezone)\n\t\t\t\t.format(INTERNAL_FORMAT.DATE_TIME),\n\t\t\tINTERNAL_FORMAT.DATE_TIME\n\t\t);\n\n\t\tlet eventEnd = moment.utc(\n\t\t\tmoment\n\t\t\t\t.tz(\n\t\t\t\t\tev.end,\n\t\t\t\t\tINTERNAL_FORMAT.DATE_TIME,\n\t\t\t\t\tev.originalReadInTimezone\n\t\t\t\t)\n\t\t\t\t.tz(timezone)\n\t\t\t\t.format(INTERNAL_FORMAT.DATE_TIME),\n\t\t\tINTERNAL_FORMAT.DATE_TIME\n\t\t);\n\n\t\tlet childEventData = [];\n\n\t\tfor (let j in ev.childEvents) {\n\t\t\tlet child = ev.childEvents[j];\n\t\t\tlet childData = {};\n\n\t\t\tchildData.start = moment.utc(\n\t\t\t\tchild.start,\n\t\t\t\tINTERNAL_FORMAT.DATE_TIME\n\t\t\t);\n\n\t\t\tchildData.end = moment.utc(child.end, INTERNAL_FORMAT.DATE_TIME);\n\n\t\t\tchildData.isExclusion = child.isExclusion;\n\t\t\tchildEventData.push(childData);\n\t\t}\n\n\t\tlet intervalStart = moment.utc(contextDate, INTERNAL_FORMAT.DATE_TIME);\n\n\t\tif (!preciseTime) {\n\t\t\t//If we don't need to keep time component of contextDate:\n\t\t\tintervalStart.startOf('day'); //Set time to start of day\n\t\t\tif (viewName === CALENDAR_VIEWS.TIMELINE.WEEK) intervalStart.day(0); //Set interval start date to Sunday\n\t\t}\n\n\t\tlet intervalEnd = moment\n\t\t\t.utc(intervalStart, INTERNAL_FORMAT.DATE_TIME)\n\t\t\t.add(xStep, xUnitName);\n\n\t\t//For each interval on time axis, add to coverage as necessary, depending on if event indicates\n\t\t//a user is available/unavailable for any point in that interval\n\t\tfor (let k = 0; k < xSize; k++) {\n\t\t\tif (\n\t\t\t\teventStart.isBefore(intervalEnd) &&\n\t\t\t\teventEnd.isAfter(intervalStart)\n\t\t\t) {\n\t\t\t\t//For calculating work view, we only want to consider exclusion events if they overlap with a work shift\n\t\t\t\t//so store the data to be readily available for now and this will be calculated later\n\t\t\t\tif (viewName === CALENDAR_VIEWS.TIMELINE.WEEK) {\n\t\t\t\t\tif (ev.isExclusion) {\n\t\t\t\t\t\tif (!coverage[k].exclude_intervals[user])\n\t\t\t\t\t\t\tcoverage[k].exclude_intervals[user] = [];\n\n\t\t\t\t\t\tcoverage[k].exclude_intervals[user].push({\n\t\t\t\t\t\t\tstart: eventStart.format(INTERNAL_FORMAT.DATE_TIME),\n\t\t\t\t\t\t\tend: eventEnd.format(INTERNAL_FORMAT.DATE_TIME)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\tev,\n\t\t\t\t\t\t\t\t'schedule.eventType.category.sys_id',\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t) === CALENDAR_EVENTS.WORK_SHIFT.CATEGORY\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcoverage[k].at_work.push(user);\n\n\t\t\t\t\t\t\tif (!coverage[k].work_intervals[user])\n\t\t\t\t\t\t\t\tcoverage[k].work_intervals[user] = [];\n\n\t\t\t\t\t\t\tcoverage[k].work_intervals[user].push({\n\t\t\t\t\t\t\t\tstart: eventStart.format(\n\t\t\t\t\t\t\t\t\tINTERNAL_FORMAT.DATE_TIME\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tend: eventEnd.format(INTERNAL_FORMAT.DATE_TIME)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (ev.isExclusion) coverage[k].excluded.push(user);\n\t\t\t\t\telse coverage[k].at_work.push(user);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (viewName !== CALENDAR_VIEWS.TIMELINE.WEEK) {\n\t\t\t\tchildEventData.forEach(child => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tchild.start.isSameOrBefore(intervalStart) &&\n\t\t\t\t\t\tchild.end.isSameOrAfter(intervalEnd) &&\n\t\t\t\t\t\tchild.isExclusion\n\t\t\t\t\t)\n\t\t\t\t\t\tcoverage[k].excluded.push(ev.group);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tintervalStart.add(xStep, xUnitName);\n\t\t\tintervalEnd.add(xStep, xUnitName);\n\t\t}\n\t}\n\n\t//If in week view, only consider an exclusion if it overlaps with an agent's work shift\n\tif (viewName === CALENDAR_VIEWS.TIMELINE.WEEK) {\n\t\tcoverage.forEach((intervalData, interval) => {\n\t\t\tfor (let [agent, agentWorkShifts] of Object.entries(\n\t\t\t\tintervalData.work_intervals\n\t\t\t)) {\n\t\t\t\tagentWorkShifts.forEach(workData => {\n\t\t\t\t\tlet agentExclusions = intervalData.exclude_intervals[agent];\n\t\t\t\t\tif (agentExclusions) {\n\t\t\t\t\t\tagentExclusions.forEach(excludeData => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tworkData.start < excludeData.end &&\n\t\t\t\t\t\t\t\tworkData.end > excludeData.start\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tcoverage[interval].excluded.push(agent);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t//Convert lists into counts of unique users, subtracting list of excluded users from list of working users\n\tcoverage = coverage.map(\n\t\tx => difference(uniq(x.at_work), uniq(x.excluded)).length\n\t);\n\n\treturn coverage;\n};\n","import {\n\tSHOW_ALERT_MESSAGE,\n\tHIDE_ALERT_MESSAGE,\n\tNOW_ALERT_LIST_ITEMS_SET,\n\tDEFAULT_ALERT_TIMEOUT\n} from '../constants';\n\nimport get from 'lodash/get';\n\n// when we want to show an alert, we can push a new item to the state.alertItems array\n// this array will be passed in to now-alert-list which renders the alerts\nexport const showAlertMessage = ({ action, updateState, dispatch }) => {\n\tconst {\n\t\tautoHide = false,\n\t\tautoHideTimeout = DEFAULT_ALERT_TIMEOUT,\n\t\t...alertItem\n\t} = action.payload;\n\n\tupdateState({\n\t\tpath: 'behaviors.alertList.alertItems',\n\t\toperation: 'push',\n\t\tvalue: alertItem\n\t});\n\n\tif (autoHide) {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(HIDE_ALERT_MESSAGE, { alertId: alertItem.id });\n\t\t}, autoHideTimeout);\n\t}\n};\n\n// when we want to hide an alert, just remove it from the state.alertItems array\nexport const hideAlertMessage = ({ action, state, updateState }) => {\n\tconst { alertId } = action.payload;\n\tconst alertItems = get(state, 'behaviors.alertList.alertItems', []);\n\tconst indexFound = alertItems.findIndex(a => a.id === alertId);\n\n\tif (indexFound !== -1) {\n\t\tupdateState({\n\t\t\tpath: 'behaviors.alertList.alertItems',\n\t\t\toperation: 'splice',\n\t\t\tstart: indexFound,\n\t\t\tdeleteCount: 1\n\t\t});\n\t}\n};\n\n// when users dismiss an alert, now-alert-list dispatches an action giving us\n// an array of remaining alerts on the screen. We can just uptake it and update our state\nexport const handleAlertListItemsSet = ({ action, updateState }) => {\n\tconst { value: remainingItems } = action.payload;\n\n\tupdateState({\n\t\tpath: 'behaviors.alertList.alertItems',\n\t\toperation: 'set',\n\t\tvalue: remainingItems\n\t});\n};\n\nexport default {\n\tname: 'alertList',\n\tinitialState: {\n\t\talertItems: []\n\t},\n\tactionHandlers: {\n\t\t[SHOW_ALERT_MESSAGE]: showAlertMessage,\n\t\t[HIDE_ALERT_MESSAGE]: hideAlertMessage,\n\t\t[NOW_ALERT_LIST_ITEMS_SET]: handleAlertListItemsSet\n\t}\n};\n","//Actions\n\nexport const FETCH_TEAMS = 'FETCH_TEAMS';\nexport const FETCH_TEAMS_SUCCESS = 'FETCH_TEAMS_SUCCESS';\nexport const FETCH_TEAMS_FAILED = 'FETCH_TEAMS_FAILED';\nexport const FETCH_TEAM_SCORES_START = 'FETCH_TEAM_SCORES_START';\nexport const FETCH_ALL_TEAM_SCORES = 'FETCH_ALL_TEAM_SCORES';\nexport const FETCH_ALL_TEAM_SCORE_SUCCESS = 'FETCH_ALL_TEAM_SCORE_SUCCESS';\nexport const FETCH_ALL_TEAM_SCORE_FAILED = 'FETCH_ALL_TEAM_SCORE_FAILED';\nexport const COULD_NOT_RETRIEVE_DATA = 'COULD_NOT_RETRIEVE_DATA';\n\nexport const CARD_CLICKED = 'SN_MANAGER_INDICATOR_GROUP_CARD#CARD_CLICKED';\n","import {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED\n} from '@servicenow/ui-core/lib/constants';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { NOW_DATE_RANGE_PICKER_VALUE_CHANGED } from '../constants';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport merge from 'lodash/merge';\nimport isFinite from 'lodash/isFinite';\n\nexport const ACTION_PREFIX = 'DATE_CHANGE_BEHAVIOR#';\nexport const FETCH_LAST_X_DAYS = `${ACTION_PREFIX}FETCH_LAST_X_DAYS`;\nexport const FETCH_LAST_X_DAYS_START = `${ACTION_PREFIX}FETCH_LAST_X_DAYS_START`;\nexport const FETCH_LAST_X_DAYS_SUCCESS = `${ACTION_PREFIX}FETCH_LAST_X_DAYS_SUCCESS`;\nexport const FETCH_LAST_X_DAYS_ERROR = `${ACTION_PREFIX}FETCH_LAST_X_DAYS_ERROR`;\nexport const LAST_X_DAYS_DEFAULT = 30;\n\nexport const dataStore = {\n\tprefix: 'sn-manager.dateRange.',\n\tget(key) {\n\t\treturn window.sessionStorage.getItem(this.prefix + key);\n\t},\n\tset(key, value) {\n\t\treturn window.sessionStorage.setItem(this.prefix + key, value);\n\t}\n};\n\nexport const getDateRangeFromStore = dateFormat => {\n\tconst lastUsedStart = dataStore.get('start');\n\tconst lastUsedEnd = dataStore.get('end');\n\tlet lastXDays = parseInt(dataStore.get('lastXDays'), 10);\n\n\tif (!isFinite(lastXDays)) {\n\t\tlastXDays = LAST_X_DAYS_DEFAULT;\n\t}\n\n\t// parse the stored date strings using moment in strict mode\n\tlet momentStart = moment(lastUsedStart, dateFormat, true);\n\tlet momentEnd = moment(lastUsedEnd, dateFormat, true);\n\n\t// revert to last 30 days if the last used dates are not valid\n\tif (\n\t\t!momentStart.isValid() ||\n\t\t!momentEnd.isValid() ||\n\t\tmomentStart.isAfter(momentEnd)\n\t) {\n\t\tmomentStart = moment()\n\t\t\t.subtract(lastXDays, 'days')\n\t\t\t.startOf('day');\n\t\tmomentEnd = moment()\n\t\t\t.subtract(1, 'days')\n\t\t\t.startOf('day');\n\t}\n\n\treturn {\n\t\tstart: momentStart.format(dateFormat),\n\t\tend: momentEnd.format(dateFormat)\n\t};\n};\n\nconst defaultOptions = {\n\tpropertyName: 'dateRange',\n\tdateFormat: {\n\t\tinternal: 'YYYY-MM-DD',\n\t\texternal: 'YYYY-MM-DD'\n\t},\n\tshouldReloadDateRange: () => false\n};\n\nconst fetchLastXDaysQuery = `query {\n\tGlideRecord_Query {\n\t\tsys_properties(queryConditions: \"name=sn_team_perf.default_date_range\", pagination: { limit: 1 }) {\n\t\t\t_results {\n\t\t\t\tvalue {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst fetchLastXDaysEffect = createGraphQLEffect(fetchLastXDaysQuery, {\n\tstartActionType: FETCH_LAST_X_DAYS_START,\n\tsuccessActionType: FETCH_LAST_X_DAYS_SUCCESS,\n\terrorActionType: FETCH_LAST_X_DAYS_ERROR\n});\n\nexport const createDateChangeBehavior = options => {\n\tconst opts = merge({}, defaultOptions, options);\n\tconst { propertyName, dateFormat, shouldReloadDateRange } = opts;\n\n\treturn {\n\t\tname: 'dateChangeBehavior',\n\t\tproperties: {\n\t\t\t[propertyName]: {\n\t\t\t\tget default() {\n\t\t\t\t\treturn getDateRangeFromStore(dateFormat.internal);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tactionHandlers: {\n\t\t\t[FETCH_LAST_X_DAYS]: fetchLastXDaysEffect,\n\t\t\t[FETCH_LAST_X_DAYS_SUCCESS]: ({ action }) => {\n\t\t\t\tconst lastXDays = get(\n\t\t\t\t\taction.payload,\n\t\t\t\t\t'data.GlideRecord_Query.sys_properties._results[0].value.value',\n\t\t\t\t\tLAST_X_DAYS_DEFAULT\n\t\t\t\t);\n\t\t\t\tdataStore.set('lastXDays', lastXDays);\n\t\t\t},\n\t\t\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch }) => {\n\t\t\t\tconst lastXDays = dataStore.get('lastXDays');\n\n\t\t\t\tif (!lastXDays) {\n\t\t\t\t\tdispatch(FETCH_LAST_X_DAYS);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\t\t\taction,\n\t\t\t\tproperties,\n\t\t\t\tupdateProperties\n\t\t\t}) => {\n\t\t\t\tif (!shouldReloadDateRange(action.payload)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldDateRange = properties[propertyName];\n\t\t\t\tconst newDateRange = getDateRangeFromStore(dateFormat.internal);\n\n\t\t\t\tif (!isEqual(oldDateRange, newDateRange)) {\n\t\t\t\t\tupdateProperties({ [propertyName]: newDateRange });\n\t\t\t\t}\n\t\t\t},\n\t\t\t[NOW_DATE_RANGE_PICKER_VALUE_CHANGED]: ({\n\t\t\t\taction,\n\t\t\t\tupdateProperties\n\t\t\t}) => {\n\t\t\t\tconst start = moment(\n\t\t\t\t\taction.payload.start,\n\t\t\t\t\tdateFormat.external\n\t\t\t\t).format(dateFormat.internal);\n\n\t\t\t\tconst end = moment(\n\t\t\t\t\taction.payload.end,\n\t\t\t\t\tdateFormat.external\n\t\t\t\t).format(dateFormat.internal);\n\n\t\t\t\tdataStore.set('start', start);\n\t\t\t\tdataStore.set('end', end);\n\n\t\t\t\tupdateProperties({\n\t\t\t\t\t[propertyName]: { start, end }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"merge\"];","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport {\n\tFETCH_SKILL_LEVEL_SUCCEEDED,\n\tFETCH_SKILL_LEVEL_COUNTS_SUCCESS,\n\tFETCH_USERS_SUCCEEDED,\n\tERROR_OCCURED\n} from './constants';\n\nconst skillLevelQuery = `query ($paginationLimit: Int) {\n\tGlideRecord_Query {\n\t\tcmn_skill_level(pagination: {limit: $paginationLimit}) {\n\t\t\t_results {\n\t\t\t\tskill_level_type {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tcolor {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tvalue {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst userCountQuery = `query ($group_ids: String) {\n\tuserDistinctCount: GlideAggregate_Query(tableName: \"sys_user_grmember\", queryConditions: $group_ids) {\n\t\t\tcount: countDistinct(field: \"user\")\n\t}\n}\n`;\n\nexport const fetchUserCountEffect = createGraphQLEffect(userCountQuery, {\n\tvariableList: ['group_ids'],\n\tsuccessActionType: FETCH_USERS_SUCCEEDED,\n\terrorActionType: ERROR_OCCURED\n});\n\nexport const fetchSkillLevelEffect = createGraphQLEffect(skillLevelQuery, {\n\tvariableList: ['paginationLimit'],\n\tsuccessActionType: FETCH_SKILL_LEVEL_SUCCEEDED,\n\terrorActionType: ERROR_OCCURED\n});\n\nexport const fetchSkillLevelCounts = createHttpEffect(\n\t'/api/now/skill_management/get_user_counts_by_skill',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: FETCH_SKILL_LEVEL_COUNTS_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport findIndex from 'lodash/findIndex';\nimport { t } from 'sn-translate';\nimport { getUserPreference, setUserPreference } from 'sn-user-preferences';\nimport { createRef } from '@servicenow/ui-renderer-snabbdom';\nimport '../sn-manager-coaching-skill-coverage';\nimport {\n\tPAGINATION_PAGE_UPDATE,\n\tPAGINATION_LIMIT_UPDATE,\n\tSTATUS,\n\tTOGGLE_SIDE_PANEL,\n\tSHOW_SKILL_ASSIGNMENT_POPOVER\n} from './constants';\nimport {\n\tOUTLINED_ICON,\n\tUSERS_WITHOUT_THIS_SKILL,\n\tBUTTON_ADD_SKILL,\n\tBUTTON_SWAP_AXES,\n\tBUTTON_REFRESH_LIST,\n\tFETCH_SKILL_LEVEL_REQUESTED,\n\tFETCH_USER_SKILLS_REQUESTED,\n\tPAGINATION_LIMIT,\n\tBUTTON_FILTER\n} from '../common/constants';\nimport {\n\tITEM_SELECTED,\n\tTABLES,\n\tCELL_TYPES,\n\tSYS_USER\n} from '../../common/constants';\n\nexport const buildRows = (categoryKey, categories) => {\n\tlet skillSet = categories[categoryKey].skillset;\n\tlet skillKeys = Object.keys(skillSet);\n\tskillKeys.sort();\n\n\tconst buildCell = skill => {\n\t\tlet cell = new Map(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'name',\n\t\t\t\t\t{\n\t\t\t\t\t\tcolumnName: 'name',\n\t\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\t\tdisplayValue: skill,\n\t\t\t\t\t\t\tvalue: skillSet[skill].skillId,\n\t\t\t\t\t\t\tinternalType: CELL_TYPES.USER_SKILL,\n\t\t\t\t\t\t\ttable: TABLES.CMN_SKILL,\n\t\t\t\t\t\t\tid: skillSet[skill].skillId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'coverage',\n\t\t\t\t\t{\n\t\t\t\t\t\tcolumnName: 'coverage',\n\t\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\t\t\tvalue: skillSet[skill].colorCount,\n\t\t\t\t\t\t\tinternalType: CELL_TYPES.TEAM_COVERAGE\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t].concat(\n\t\t\t\tskillSet[skill].userSkill.map(\n\t\t\t\t\t({\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\tlevel,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tapproval,\n\t\t\t\t\t\tskillId,\n\t\t\t\t\t\tskillLevelId,\n\t\t\t\t\t\tlevelType,\n\t\t\t\t\t\tskillLevelType\n\t\t\t\t\t}) => {\n\t\t\t\t\t\tlet columnData = {};\n\t\t\t\t\t\tconst query = `user=${user.userId}^skill=${skillSet[skill].skillId}`;\n\t\t\t\t\t\tconst colorMap = JSON.parse(dataStore.get('color_map'));\n\t\t\t\t\t\tif (level && level.displayValue && isEmpty(approval)) {\n\t\t\t\t\t\t\tcolumnData = {\n\t\t\t\t\t\t\t\tdisplayValue: level.displayValue,\n\t\t\t\t\t\t\t\tvalue: level.displayValue,\n\t\t\t\t\t\t\t\tinternalType: CELL_TYPES.SKILL_LEVEL,\n\t\t\t\t\t\t\t\ttable: TABLES.SYS_USER_HAS_SKILL,\n\t\t\t\t\t\t\t\tid: level.value,\n\t\t\t\t\t\t\t\tcolor: color.displayValue\n\t\t\t\t\t\t\t\t\t? colorMap[color.value]\n\t\t\t\t\t\t\t\t\t: color.displayValue\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (!isEmpty(approval)) {\n\t\t\t\t\t\t\tcolumnData = {\n\t\t\t\t\t\t\t\tdisplayValue: t('Recommended'),\n\t\t\t\t\t\t\t\tvalue: t('Recommended'),\n\t\t\t\t\t\t\t\tinternalType: CELL_TYPES.BUTTON_RECOMMEND,\n\t\t\t\t\t\t\t\ttable: TABLES.SYSAPPROVER_APPROVAL,\n\t\t\t\t\t\t\t\tid: approval.sys_id.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolumnData = {\n\t\t\t\t\t\t\t\tdisplayValue: t('Add'),\n\t\t\t\t\t\t\t\tvalue: t('Add'),\n\t\t\t\t\t\t\t\tinternalType: CELL_TYPES.BUTTON_ADD,\n\t\t\t\t\t\t\t\ttable: TABLES.SYS_USER_HAS_SKILL,\n\t\t\t\t\t\t\t\tid: '-1',\n\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\tquery\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnData.skill = skill;\n\t\t\t\t\t\tcolumnData.skillId = skillId;\n\t\t\t\t\t\tcolumnData.skillLevelId = skillLevelId;\n\t\t\t\t\t\tcolumnData.levelType = levelType;\n\t\t\t\t\t\tcolumnData.skillLevelType = skillLevelType;\n\t\t\t\t\t\tcolumnData.user = user;\n\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tuser.userId,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolumnName: user.userId,\n\t\t\t\t\t\t\t\tcolumnData: columnData\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\treturn cell;\n\t};\n\tlet rows = new Map();\n\tskillKeys.map(skill => {\n\t\trows.set(skill, {\n\t\t\tuniqueId: skill,\n\t\t\tdisplayValue: skill,\n\t\t\thighlightedData: new Map(),\n\t\t\trowData: buildCell(skill)\n\t\t});\n\t});\n\treturn rows;\n};\n\nexport const buildSkillXRows = (categories, users, skillsObject) => {\n\tconst userSet = {};\n\tconst skills = [];\n\tskillsObject.forEach(skill => skills.push(skill.name));\n\tusers.forEach(user => {\n\t\tuserSet[user.userId] = [];\n\t\tskills.forEach(skill => {\n\t\t\tuserSet[user.userId].push({ skillName: skill, skillLevel: {} });\n\t\t});\n\t});\n\tconst categoryKeys = Object.keys(categories);\n\tcategoryKeys.forEach(category => {\n\t\tlet skillSet = categories[category].skillset;\n\t\tlet skillKeys = Object.keys(skillSet);\n\t\tskillKeys.forEach(skill => {\n\t\t\tlet userSkills = skillSet[skill].userSkill;\n\t\t\tuserSkills.forEach(userSkill => {\n\t\t\t\tconst index = findIndex(\n\t\t\t\t\tuserSet[userSkill.user.userId],\n\t\t\t\t\te => e.skillName === skill\n\t\t\t\t);\n\t\t\t\tuserSet[userSkill.user.userId][index].skillLevel = userSkill;\n\t\t\t\tuserSet[userSkill.user.userId][index].skillId =\n\t\t\t\t\tskillSet[skill].skillId;\n\t\t\t});\n\t\t});\n\t});\n\tconst buildCell = user => {\n\t\tconst userSkill = [];\n\t\tuserSet[user.userId].forEach(element => {\n\t\t\telement.skillLevel.skill = element.skillName;\n\t\t\tuserSkill.push({ ...element.skillLevel, skillId: element.skillId });\n\t\t});\n\n\t\tlet cell = new Map(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'name',\n\t\t\t\t\t{\n\t\t\t\t\t\tcolumnName: 'name',\n\t\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\t\tdisplayValue: user.userName,\n\t\t\t\t\t\t\tvalue: user.userId,\n\t\t\t\t\t\t\tinternalType: CELL_TYPES.USER_SKILL,\n\t\t\t\t\t\t\ttable: SYS_USER,\n\t\t\t\t\t\t\tid: user.userId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t].concat(\n\t\t\t\tuserSkill.map(\n\t\t\t\t\t({\n\t\t\t\t\t\tlevel,\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tskill,\n\t\t\t\t\t\tapproval,\n\t\t\t\t\t\tskillId,\n\t\t\t\t\t\tskillLevelId,\n\t\t\t\t\t\tlevelType,\n\t\t\t\t\t\tskillLevelType\n\t\t\t\t\t}) => {\n\t\t\t\t\t\tlet columnData = {};\n\t\t\t\t\t\tconst query = `user=${user.userId}^skill=${skillId}`;\n\t\t\t\t\t\tconst colorMap = JSON.parse(dataStore.get('color_map'));\n\t\t\t\t\t\tif (level && level.displayValue && isEmpty(approval)) {\n\t\t\t\t\t\t\tcolumnData = {\n\t\t\t\t\t\t\t\tdisplayValue: level.displayValue,\n\t\t\t\t\t\t\t\tvalue: level.displayValue,\n\t\t\t\t\t\t\t\tinternalType: CELL_TYPES.SKILL_LEVEL,\n\t\t\t\t\t\t\t\ttable: TABLES.SYS_USER_HAS_SKILL,\n\t\t\t\t\t\t\t\tid: level.value,\n\t\t\t\t\t\t\t\tcolor: color.displayValue\n\t\t\t\t\t\t\t\t\t? colorMap[color.value]\n\t\t\t\t\t\t\t\t\t: color.displayValue\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (!isEmpty(approval)) {\n\t\t\t\t\t\t\tcolumnData = {\n\t\t\t\t\t\t\t\tdisplayValue: t('Recommended'),\n\t\t\t\t\t\t\t\tvalue: t('Recommended'),\n\t\t\t\t\t\t\t\tinternalType: CELL_TYPES.BUTTON_RECOMMEND,\n\t\t\t\t\t\t\t\ttable: TABLES.SYSAPPROVER_APPROVAL,\n\t\t\t\t\t\t\t\tid: approval.sys_id.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolumnData = {\n\t\t\t\t\t\t\t\tdisplayValue: t('Add'),\n\t\t\t\t\t\t\t\tvalue: t('Add'),\n\t\t\t\t\t\t\t\tinternalType: CELL_TYPES.BUTTON_ADD,\n\t\t\t\t\t\t\t\ttable: TABLES.SYS_USER_HAS_SKILL,\n\t\t\t\t\t\t\t\tid: '-1',\n\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\tquery\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnData.skill = skill;\n\t\t\t\t\t\tcolumnData.skillId = skillId;\n\t\t\t\t\t\tcolumnData.skillLevelId = skillLevelId;\n\t\t\t\t\t\tcolumnData.levelType = levelType;\n\t\t\t\t\t\tcolumnData.skillLevelType = skillLevelType;\n\t\t\t\t\t\tcolumnData.user = user;\n\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tskill,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolumnName: skill,\n\t\t\t\t\t\t\t\tcolumnData: columnData\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\treturn cell;\n\t};\n\tlet rows = new Map();\n\n\tusers.map(user => {\n\t\trows.set(user.userId, {\n\t\t\tuniqueId: user.userId,\n\t\t\tdisplayValue: user.userName,\n\t\t\thighlightedData: new Map(),\n\t\t\trowData: buildCell(user)\n\t\t});\n\t});\n\treturn rows;\n};\n\nexport const buildGridModel = (state, categories, users, flip) => {\n\tif (!flip) {\n\t\treturn buildSkillYGridModel(state, categories, users);\n\t} else {\n\t\treturn buildSkillXGridModel(state, categories, users);\n\t}\n};\n\nconst commonColumnProps = {\n\tisFilterable: false,\n\tisSortable: false,\n\tisGroupable: false,\n\tisChoice: false\n};\n\nconst buildSkillXGridModel = (state, categories, users) => {\n\tlet emptyState = false;\n\tif (isEmpty(categories) && !isEmpty(state.filter)) {\n\t\temptyState = true;\n\t}\n\n\tconst reducer = (accumulator, currentValue) => {\n\t\tlet skillSet = categories[currentValue].skillset;\n\t\tlet skillKeys = Object.keys(skillSet);\n\t\tskillKeys.forEach(skill => {\n\t\t\taccumulator.set(skillSet[skill].skillId, {\n\t\t\t\tname: skill,\n\t\t\t\tskillId: skillSet[skill].skillId,\n\t\t\t\tcolorCount: skillSet[skill].colorCount\n\t\t\t});\n\t\t});\n\n\t\treturn accumulator;\n\t};\n\n\tconst categoryKeys = Object.keys(categories);\n\tconst skillsMap = categoryKeys.reduce(reducer, new Map());\n\tconst skillsObject = [...skillsMap.values()];\n\tskillsObject.sort((a, b) =>\n\t\ta.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n\t);\n\tconst skillColumns = [];\n\n\tskillsObject.forEach(skill =>\n\t\tskillColumns.push([\n\t\t\tskill.name,\n\t\t\t{\n\t\t\t\tcolumnName: skill.name,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: skill.name,\n\t\t\t\t\tvalue: skill.skillId,\n\t\t\t\t\t...commonColumnProps\n\t\t\t\t}\n\t\t\t}\n\t\t])\n\t);\n\tconst columns = new Map(\n\t\t[\n\t\t\t[\n\t\t\t\t'name',\n\t\t\t\t{\n\t\t\t\t\tcolumnName: 'name',\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tlabel: t('Users'),\n\t\t\t\t\t\t...commonColumnProps\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t].concat(skillColumns)\n\t);\n\tconst getGridGroup = (categories, users, skillsObject) => {\n\t\tconst summaryRow = new Map();\n\t\tconst groupRows = buildSkillXRows(categories, users, skillsObject);\n\n\t\tconst skills = [];\n\t\tconst skillColor = {};\n\t\tskillsObject.forEach(skill => {\n\t\t\tskills.push(skill.name);\n\t\t\tskillColor[skill.name] = skill.colorCount;\n\t\t});\n\n\t\tconst summaryRowData = new Map(\n\t\t\tskills.map(skill => [\n\t\t\t\tskill,\n\t\t\t\t{\n\t\t\t\t\tcolumnName: skill,\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\t\tvalue: skillColor[skill],\n\t\t\t\t\t\tinternalType: CELL_TYPES.TEAM_COVERAGE\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t])\n\t\t);\n\n\t\tsummaryRow.set(t('Team coverage'), {\n\t\t\trowData: summaryRowData\n\t\t});\n\n\t\tconst group = {\n\t\t\tsummaryRow,\n\t\t\tgroupRows,\n\t\t\tvalue: t('Team coverage'),\n\t\t\tdisplayValue: t('Team coverage'),\n\t\t\tcount: groupRows.size\n\t\t};\n\n\t\treturn group;\n\t};\n\n\tlet queryRows = new Map();\n\tif (emptyState === false) {\n\t\tconst group = getGridGroup(categories, users, skillsObject);\n\t\tqueryRows.set(group.value, group);\n\t}\n\n\tconst model = {\n\t\tallColumns: columns,\n\t\tlayoutQuery: {\n\t\t\tencodedQuery: new Date().getTime(),\n\t\t\tqueryRows: queryRows\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false\n\t\t},\n\t\tpreferenceData: [{ name: 'defaultAsOpen', value: 'true' }]\n\t};\n\n\treturn model;\n};\n\nconst buildSkillYGridModel = (state, categories, users) => {\n\tlet emptyState = false;\n\tif (isEmpty(categories) && !isEmpty(state.filter)) {\n\t\temptyState = true;\n\t}\n\n\tconst columns = new Map(\n\t\t[\n\t\t\t[\n\t\t\t\t'name',\n\t\t\t\t{\n\t\t\t\t\tcolumnName: 'name',\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tlabel: t('Skills'),\n\t\t\t\t\t\t...commonColumnProps\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t[\n\t\t\t\t'coverage',\n\t\t\t\t{\n\t\t\t\t\tcolumnName: 'coverage',\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tlabel: t('Coverage'),\n\t\t\t\t\t\t...commonColumnProps\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t].concat(\n\t\t\tusers.map(({ userId, userName }) => [\n\t\t\t\tuserId,\n\t\t\t\t{\n\t\t\t\t\tcolumnName: userId,\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tlabel: userName,\n\t\t\t\t\t\t...commonColumnProps\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t])\n\t\t)\n\t);\n\n\tconst getCategoryGridGroup = (category, categories, users) => {\n\t\tconst summaryRow = new Map();\n\t\tconst groupRows = buildRows(category, categories);\n\t\tconst summaryRowData = new Map(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'coverage',\n\t\t\t\t\t{\n\t\t\t\t\t\tcolumnName: 'coverage',\n\t\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tinternalType: CELL_TYPES.TEAM_COVERAGE\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t].concat(\n\t\t\t\tusers.map(({ userId }) => [\n\t\t\t\t\tuserId,\n\t\t\t\t\t{\n\t\t\t\t\t\tcolumnName: userId,\n\t\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tinternalType: CELL_TYPES.TEAM_COVERAGE\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t])\n\t\t\t)\n\t\t);\n\t\tsummaryRow.set(category, {\n\t\t\trowData: summaryRowData\n\t\t});\n\t\tconst group = {\n\t\t\tsummaryRow,\n\t\t\tgroupRows,\n\t\t\tvalue: category,\n\t\t\tdisplayValue: category,\n\t\t\tcount: groupRows.size\n\t\t};\n\t\treturn group;\n\t};\n\n\tconst categoryKeys = Object.keys(categories);\n\tcategoryKeys.sort();\n\tlet queryRows = new Map();\n\n\tif (emptyState === false) {\n\t\tcategoryKeys.map(category => {\n\t\t\tconst group = getCategoryGridGroup(category, categories, users);\n\t\t\tqueryRows.set(group.value, group);\n\t\t});\n\t}\n\tconst model = {\n\t\tallColumns: columns,\n\t\tlayoutQuery: {\n\t\t\tencodedQuery: new Date().getTime(),\n\t\t\tqueryRows: queryRows\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false\n\t\t},\n\t\tpreferenceData: [{ name: 'defaultAsOpen', value: 'true' }]\n\t};\n\treturn model;\n};\n\nconst teamCoverageSummaryRowRenderer = () => {\n\treturn ({ cell }) => (\n\t\t<div style={{ 'padding-left': '1rem' }}>\n\t\t\t<sn-manager-coaching-skill-coverage\n\t\t\t\tskillLevels={cell.columnData.value}\n\t\t\t></sn-manager-coaching-skill-coverage>\n\t\t</div>\n\t);\n};\n\nconst userSkillRelatedCellRenderer = () => {\n\treturn ({ cell, dispatch }) => {\n\t\tconst skill = get(cell, 'columnData.skill', '');\n\t\tconst userName = get(cell, 'columnData.user.userName', '');\n\t\tlet ariaLabel = userName;\n\t\tlet style = {};\n\t\tlet renderIcon = null;\n\t\tif (cell.columnData.internalType === CELL_TYPES.BUTTON_RECOMMEND) {\n\t\t\tstyle = {\n\t\t\t\t'background-color':\n\t\t\t\t\t'RGB(var(--now-color--alert-info-0,195, 221, 240, 0.35))'\n\t\t\t};\n\t\t\trenderIcon = (\n\t\t\t\t<now-icon icon=\"lightbulb-outline\" size=\"md\"></now-icon>\n\t\t\t);\n\t\t\tariaLabel = t('Skill {0} is recommended to {1}', [skill, userName]);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"sn-list-grid-cell\">\n\t\t\t\t<div className=\"sn-text-link\" style={style}>\n\t\t\t\t\t{renderIcon}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tdispatch(ITEM_SELECTED, {\n\t\t\t\t\t\t\t\ttable: cell.columnData.table,\n\t\t\t\t\t\t\t\tsys_id: cell.columnData.id\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{cell.columnData.displayValue}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nconst buildPopoverSkillLevels = ({ cell }) => {\n\tconst { skillLevelType, levelType } = cell.columnData;\n\tconst skillLevels = [];\n\n\tfor (const [key, skillLevel] of skillLevelType[levelType].entries()) {\n\t\tif (key !== 'empty') {\n\t\t\tskillLevels.push({\n\t\t\t\tsysId: skillLevel.sysId,\n\t\t\t\tlabel: skillLevel.skillLabel,\n\t\t\t\trank: skillLevel.rank,\n\t\t\t\tcell\n\t\t\t});\n\t\t}\n\t}\n\n\t// sort skill levels from highest to lowest\n\tskillLevels.sort((a, b) => b.rank - a.rank);\n\n\t// add an option to allow users to remove skill from agent\n\tskillLevels.push({\n\t\tsysId: '-1',\n\t\tlabel: t('None'),\n\t\tcell\n\t});\n\n\treturn skillLevels;\n};\n\nconst skillLevelRelatedCellRenderer = () => {\n\tconst popoverTargetRef = createRef();\n\n\treturn ({ cell, dispatch }) => {\n\t\tconst skill = get(cell, 'columnData.skill', '');\n\t\tconst userName = get(cell, 'columnData.user.userName', '');\n\t\tconst skillLevel = get(cell, 'columnData.value', '');\n\t\tconst ariaLabel = t('{0} has {1} {2} skill', [\n\t\t\tuserName,\n\t\t\tskillLevel,\n\t\t\tskill\n\t\t]);\n\t\treturn (\n\t\t\t<div className=\"sn-list-grid-cell\">\n\t\t\t\t<div className=\"sn-text-link\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tconst skillLevels = buildPopoverSkillLevels({\n\t\t\t\t\t\t\t\tcell\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tdispatch(SHOW_SKILL_ASSIGNMENT_POPOVER, {\n\t\t\t\t\t\t\t\tpositionTarget: popoverTargetRef.current,\n\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\tpresetSkillLevelId:\n\t\t\t\t\t\t\t\t\t\tcell.columnData.skillLevelId,\n\t\t\t\t\t\t\t\t\tskillLevels\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<now-highlighted-value\n\t\t\t\t\t\t\tref={popoverTargetRef}\n\t\t\t\t\t\t\tcolor={cell.columnData.color}\n\t\t\t\t\t\t\tlabel={cell.columnData.displayValue}\n\t\t\t\t\t\t\tshow-icon\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t></now-highlighted-value>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nconst addSkillRenderer = () => {\n\tconst popoverTargetRef = createRef();\n\n\treturn ({ cell, dispatch }) => {\n\t\tconst skill = get(cell, 'columnData.skill', '');\n\t\tconst userName = get(cell, 'columnData.user.userName', '');\n\t\tconst ariaLabel = t('Add {0} to {1}', [skill, userName]);\n\t\treturn (\n\t\t\t<div className=\"sn-list-grid-cell\">\n\t\t\t\t<div className=\"sn-text-link\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tconst skillLevels = buildPopoverSkillLevels({\n\t\t\t\t\t\t\t\tcell\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tdispatch(SHOW_SKILL_ASSIGNMENT_POPOVER, {\n\t\t\t\t\t\t\t\tpositionTarget: popoverTargetRef.current,\n\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\tpresetSkillLevelId: '-1',\n\t\t\t\t\t\t\t\t\tskillLevels\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tref={popoverTargetRef}\n\t\t\t\t\t\t\tstyle={{ display: 'inline-block' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{cell.columnData.displayValue}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport const customCellRenderer = {\n\tget({ columnData }) {\n\t\tif (\n\t\t\tcolumnData.internalType === CELL_TYPES.USER_SKILL ||\n\t\t\tcolumnData.internalType === CELL_TYPES.BUTTON_RECOMMEND\n\t\t) {\n\t\t\treturn userSkillRelatedCellRenderer();\n\t\t} else if (columnData.internalType === CELL_TYPES.SKILL_LEVEL) {\n\t\t\treturn skillLevelRelatedCellRenderer();\n\t\t} else if (columnData.internalType === CELL_TYPES.TEAM_COVERAGE) {\n\t\t\treturn teamCoverageSummaryRowRenderer();\n\t\t} else if (columnData.internalType === CELL_TYPES.BUTTON_ADD) {\n\t\t\treturn addSkillRenderer();\n\t\t}\n\t}\n};\n\nexport const userSkillsFetchSucceeded = ({ state, action, updateState }) => {\n\tconst result = get(\n\t\taction.payload,\n\t\t'data.GlideAggregateRecord_Query.aggregates'\n\t);\n\n\tlet appliedSkillsObject = get(\n\t\tresult[0],\n\t\t'groupBy[0]._query.queryAppliedSkills.cmn_skill_m2m_category._results'\n\t);\n\n\tconst skillLevelType = state.properties.skillLevelType;\n\tconst skillLevelCounts = state.properties.skillLevelCounts;\n\tconst userCount = state.userCount;\n\n\tconst addSkillToCategory = (\n\t\tuserHasSkill,\n\t\tcategories,\n\t\tskill,\n\t\tuserCategories,\n\t\tuser,\n\t\tcolor,\n\t\tres,\n\t\tskillId,\n\t\tskillLevelId,\n\t\tuserSkillId,\n\t\tcolorCount,\n\t\tapproval,\n\t\tlevelType\n\t) => {\n\t\tfor (let k = 0; k < userCategories.length; k++) {\n\t\t\tlet category = userCategories[k].category.displayValue;\n\t\t\tif (!categories.hasOwnProperty(category)) {\n\t\t\t\tcategories[category] = {};\n\t\t\t\tcategories[category].skillset = {};\n\t\t\t\tcategories[category].skillset[skill] = {};\n\t\t\t\tcategories[category].skillset[skill].colorCount = colorCount;\n\t\t\t\tcategories[category].skillset[skill].skillId = skillId;\n\t\t\t\tcategories[category].skillset[skill].userSkill = [];\n\t\t\t} else if (!categories[category].skillset.hasOwnProperty(skill)) {\n\t\t\t\tcategories[category].skillset[skill] = {};\n\t\t\t\tcategories[category].skillset[skill].colorCount = colorCount;\n\t\t\t\tcategories[category].skillset[skill].skillId = skillId;\n\t\t\t\tcategories[category].skillset[skill].userSkill = [];\n\t\t\t}\n\n\t\t\tif (userHasSkill) {\n\t\t\t\tcategories[category].skillset[skill].userSkill.push({\n\t\t\t\t\tuser: user,\n\t\t\t\t\tlevel: {\n\t\t\t\t\t\tdisplayValue: res.skill_level.displayValue,\n\t\t\t\t\t\tvalue: userSkillId\n\t\t\t\t\t},\n\t\t\t\t\tcolor: color,\n\t\t\t\t\tapproval: approval,\n\t\t\t\t\tlevelType,\n\t\t\t\t\tskillLevelType,\n\t\t\t\t\tskillLevelId\n\t\t\t\t});\n\t\t\t\t// If user does not have skill, there is no skill level to push\n\t\t\t} else {\n\t\t\t\tcategories[category].skillset[skill].userSkill.push({\n\t\t\t\t\tuser: user,\n\t\t\t\t\tcolor: color,\n\t\t\t\t\tapproval: approval,\n\t\t\t\t\tskillId,\n\t\t\t\t\tlevelType,\n\t\t\t\t\tskillLevelType\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst collectSkillsInCategoriesFromUser = (\n\t\tcategories,\n\t\tres,\n\t\tappliedSkillsObject,\n\t\tuserSkills,\n\t\tuser,\n\t\tskillLevelType,\n\t\tskillLevelCounts\n\t) => {\n\t\tfor (let j = 0; j < appliedSkillsObject.length; j++) {\n\t\t\t// Initializing variables\n\t\t\tlet skillInRes = false;\n\t\t\tlet skill = '';\n\t\t\tlet skillId = '';\n\t\t\tlet skillLevelId = '';\n\t\t\tlet userSkillId = '';\n\t\t\tlet cmn_skill_level = [];\n\t\t\tlet color = {};\n\t\t\tlet userCategories = [];\n\t\t\tlet cmn_skill = [];\n\t\t\tlet levelType = '';\n\n\t\t\t/* If the particular skill in this iteration is in res, proceed with the\n\t\t\tnormal method\n\t\t\t*/\n\t\t\tlet inRes = false;\n\t\t\tlet indexInRes = res.findIndex(\n\t\t\t\titem =>\n\t\t\t\t\titem.skill.displayValue ===\n\t\t\t\t\tappliedSkillsObject[j].skill.displayValue\n\t\t\t);\n\t\t\tif (indexInRes !== -1) {\n\t\t\t\tinRes = true;\n\t\t\t}\n\n\t\t\tif (inRes) {\n\t\t\t\tskillInRes = true;\n\t\t\t\tskillLevelId = get(res[indexInRes], 'skill_level.value');\n\t\t\t\tskill = get(res[indexInRes], 'skill.displayValue');\n\t\t\t\tskillId = get(res[indexInRes], 'skill.value');\n\t\t\t\tuserSkillId = get(res[indexInRes], 'sys_id.value');\n\t\t\t\tcmn_skill_level = get(\n\t\t\t\t\tres[indexInRes],\n\t\t\t\t\t'_query.queryWithSkill.cmn_skill_level._results'\n\t\t\t\t);\n\t\t\t\tcolor =\n\t\t\t\t\tcmn_skill_level.length > 0\n\t\t\t\t\t\t? cmn_skill_level[0].color\n\t\t\t\t\t\t: { value: OUTLINED_ICON, displayValue: null };\n\t\t\t\tuserCategories = get(\n\t\t\t\t\tres[indexInRes],\n\t\t\t\t\t'_query.queryWithSkillCategory.cmn_skill_m2m_category._results'\n\t\t\t\t);\n\t\t\t\tcmn_skill = get(\n\t\t\t\t\tres[indexInRes],\n\t\t\t\t\t'_query.queryWithSkillLevel.cmn_skill._results'\n\t\t\t\t);\n\t\t\t\tlevelType = get(cmn_skill, '[0].level_type.displayValue', 0);\n\t\t\t}\n\n\t\t\t// If its a skill no user has, do the following\n\t\t\tif (!userSkills.has(appliedSkillsObject[j].skill.displayValue)) {\n\t\t\t\tskill = get(appliedSkillsObject[j], 'skill.displayValue');\n\t\t\t\tskillId = get(appliedSkillsObject[j], 'skill.value');\n\t\t\t\tuserSkillId = get(\n\t\t\t\t\tappliedSkillsObject[j],\n\t\t\t\t\t'_query.querySkillLevelTypeAppliedSkills.cmn_skill._results[0].level_type.value'\n\t\t\t\t);\n\t\t\t\t/* No users have this skill, so there will be no skill level assigned.\n\t\t\t\tTherefore color will always be the outlined icon in this case.\n\t\t\t\t*/\n\t\t\t\tcolor = { value: OUTLINED_ICON, displayValue: null };\n\t\t\t\tuserCategories.push(appliedSkillsObject[j]);\n\t\t\t\tcmn_skill = get(\n\t\t\t\t\tappliedSkillsObject[j],\n\t\t\t\t\t'_query.querySkillLevelTypeAppliedSkills.cmn_skill._results'\n\t\t\t\t);\n\t\t\t\tlevelType = get(cmn_skill, '[0].level_type.displayValue', 0);\n\t\t\t}\n\n\t\t\tlet colorCount = new Map();\n\t\t\tif (levelType) {\n\t\t\t\tfor (let [k, v] of skillLevelType[levelType]) {\n\t\t\t\t\tcolorCount.set(k, {\n\t\t\t\t\t\tcount: v.count,\n\t\t\t\t\t\tskillLabel: v.skillLabel,\n\t\t\t\t\t\tcolor: v.colorValue\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet totalCount = 0;\n\t\t\tfor (let [k, v] of colorCount) {\n\t\t\t\tif (\n\t\t\t\t\tskillLevelCounts[skill] &&\n\t\t\t\t\tskillLevelCounts[skill].hasOwnProperty(v.skillLabel)\n\t\t\t\t) {\n\t\t\t\t\tcolorCount.set(k, {\n\t\t\t\t\t\tcount: skillLevelCounts[skill][v.skillLabel],\n\t\t\t\t\t\tskillLabel: v.skillLabel,\n\t\t\t\t\t\tcolor: v.color\n\t\t\t\t\t});\n\t\t\t\t\ttotalCount += parseInt(\n\t\t\t\t\t\tskillLevelCounts[skill][v.skillLabel]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolorCount.set(OUTLINED_ICON, {\n\t\t\t\tcount: state.pagination.recordCount - totalCount,\n\t\t\t\tskillLabel: USERS_WITHOUT_THIS_SKILL\n\t\t\t});\n\n\t\t\taddSkillToCategory(\n\t\t\t\tskillInRes,\n\t\t\t\tcategories,\n\t\t\t\tskill,\n\t\t\t\tuserCategories,\n\t\t\t\tuser,\n\t\t\t\tcolor,\n\t\t\t\tinRes &&\n\t\t\t\t\tuserSkills.has(appliedSkillsObject[j].skill.displayValue)\n\t\t\t\t\t? res[indexInRes]\n\t\t\t\t\t: appliedSkillsObject[j],\n\t\t\t\tskillId,\n\t\t\t\tskillInRes ? skillLevelId : null,\n\t\t\t\tuserSkillId,\n\t\t\t\tcolorCount,\n\t\t\t\tnull,\n\t\t\t\tlevelType\n\t\t\t);\n\t\t}\n\t};\n\n\tconst insertUserSkillWithNullValue = (skillSet, skillKeys, users, u) => {\n\t\tskillKeys.map(skill => {\n\t\t\tlet userArray = skillSet[skill].userSkill;\n\t\t\tlet index = findIndex(\n\t\t\t\tuserArray,\n\t\t\t\te => e.user.userId === users[u].userId\n\t\t\t);\n\t\t\tif (\n\t\t\t\tindex < 0 ||\n\t\t\t\t(index >= 0 && !isEmpty(userArray[index].approval))\n\t\t\t) {\n\t\t\t\tskillSet[skill].userSkill.splice(u, 0, {\n\t\t\t\t\tuser: users[u],\n\t\t\t\t\tlevel: { displayValue: null, value: null },\n\t\t\t\t\tcolor: null,\n\t\t\t\t\tlevelType: userArray[0].levelType,\n\t\t\t\t\tskillId: skillSet[skill].skillId,\n\t\t\t\t\tskillLevelType\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tconst collectSkillsInCategoriesFromRecommendations = (\n\t\tcategories,\n\t\tresults,\n\t\tuser,\n\t\tskillLevelType,\n\t\tskillLevelCounts\n\t) => {\n\t\tresults.forEach(result => {\n\t\t\tlet skill = get(result, 'skill.displayValue');\n\t\t\tlet skillId = get(result, 'skill.value');\n\t\t\tlet userSkillId = get(result, 'sys_id.value');\n\t\t\tlet approval = get(\n\t\t\t\tresult,\n\t\t\t\t'_query.approval.sysapproval_approver._results[0]',\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tif (isEmpty(approval)) return;\n\n\t\t\tlet userCategories = get(\n\t\t\t\tresult,\n\t\t\t\t'_query.queryWithSkillCategory.cmn_skill_m2m_category._results'\n\t\t\t);\n\t\t\tlet cmn_skill_level = get(\n\t\t\t\tresult,\n\t\t\t\t'_query.queryWithSkill.cmn_skill_level._results'\n\t\t\t);\n\t\t\tlet color =\n\t\t\t\tcmn_skill_level.length > 0\n\t\t\t\t\t? cmn_skill_level[0].color\n\t\t\t\t\t: { value: OUTLINED_ICON, displayValue: null };\n\t\t\tlet cmn_skill = get(\n\t\t\t\tresult,\n\t\t\t\t'_query.queryWithSkillLevel.cmn_skill._results'\n\t\t\t);\n\n\t\t\tlet levelType = get(cmn_skill, '[0].level_type.displayValue', 0);\n\t\t\tlet colorCount = new Map();\n\t\t\tif (levelType) {\n\t\t\t\tfor (let [k, v] of skillLevelType[levelType]) {\n\t\t\t\t\tcolorCount.set(k, {\n\t\t\t\t\t\tcount: v.count,\n\t\t\t\t\t\tskillLabel: v.skillLabel,\n\t\t\t\t\t\tcolor: v.colorValue\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet totalCount = 0;\n\t\t\tif (skillLevelCounts.hasOwnProperty(skill)) {\n\t\t\t\tfor (let [k, v] of colorCount) {\n\t\t\t\t\tif (skillLevelCounts[skill].hasOwnProperty(v.skillLabel)) {\n\t\t\t\t\t\tcolorCount.set(k, {\n\t\t\t\t\t\t\tcount: skillLevelCounts[skill][v.skillLabel],\n\t\t\t\t\t\t\tskillLabel: v.skillLabel,\n\t\t\t\t\t\t\tcolor: v.color\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttotalCount += parseInt(\n\t\t\t\t\t\t\tskillLevelCounts[skill][v.skillLabel]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolorCount.set(OUTLINED_ICON, {\n\t\t\t\tcount: state.pagination.recordCount - totalCount,\n\t\t\t\tskillLabel: USERS_WITHOUT_THIS_SKILL\n\t\t\t});\n\t\t\taddSkillToCategory(\n\t\t\t\tfalse,\n\t\t\t\tcategories,\n\t\t\t\tskill,\n\t\t\t\tuserCategories,\n\t\t\t\tuser,\n\t\t\t\tcolor,\n\t\t\t\tresult,\n\t\t\t\tskillId,\n\t\t\t\tnull,\n\t\t\t\tuserSkillId,\n\t\t\t\tcolorCount,\n\t\t\t\tapproval\n\t\t\t);\n\t\t});\n\t};\n\n\tconst skillSets = (\n\t\tresult,\n\t\tskillLevelType,\n\t\tskillLevelCounts,\n\t\tuserCount,\n\t\tappliedSkillsObject\n\t) => {\n\t\t// Get list of all skills users have\n\t\tlet userSkills = new Set();\n\t\tresult.forEach(skills => {\n\t\t\tlet arr =\n\t\t\t\tskills.groupBy[0]._query.queryWithUser.sys_user_has_skill\n\t\t\t\t\t._results;\n\t\t\tarr.forEach(item => {\n\t\t\t\tuserSkills.add(item.skill.displayValue); // duplicate items will be skipped\n\t\t\t});\n\t\t});\n\n\t\tconst users = [];\n\t\tconst categories = {};\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tlet groupByRes = result[i].groupBy[0];\n\t\t\tlet user = {\n\t\t\t\tuserId: groupByRes.value,\n\t\t\t\tuserName: groupByRes.displayValue\n\t\t\t};\n\n\t\t\tusers.push(user);\n\t\t\tlet res = get(\n\t\t\t\tgroupByRes,\n\t\t\t\t'_query.queryWithUser.sys_user_has_skill._results'\n\t\t\t);\n\n\t\t\tcollectSkillsInCategoriesFromUser(\n\t\t\t\tcategories,\n\t\t\t\tres,\n\t\t\t\tappliedSkillsObject,\n\t\t\t\tuserSkills,\n\t\t\t\tuser,\n\t\t\t\tskillLevelType,\n\t\t\t\tskillLevelCounts,\n\t\t\t\tuserCount\n\t\t\t);\n\t\t\tconst recommendations = get(\n\t\t\t\tgroupByRes,\n\t\t\t\t'_query.recommendations.sn_sre_user_predicted_skill._results',\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\tcollectSkillsInCategoriesFromRecommendations(\n\t\t\t\tcategories,\n\t\t\t\trecommendations,\n\t\t\t\tuser,\n\t\t\t\tskillLevelType,\n\t\t\t\tskillLevelCounts\n\t\t\t);\n\t\t}\n\n\t\tconst categoryKeys = Object.keys(categories);\n\t\tfor (let u = 0; u < users.length; u++) {\n\t\t\tcategoryKeys.forEach(category => {\n\t\t\t\tlet skillSet = categories[category].skillset;\n\t\t\t\tlet skillKeys = Object.keys(skillSet);\n\t\t\t\tinsertUserSkillWithNullValue(skillSet, skillKeys, users, u);\n\t\t\t});\n\t\t}\n\t\treturn { categories: categories, users: users };\n\t};\n\tconst { categories, users } = skillSets(\n\t\tresult,\n\t\tskillLevelType,\n\t\tskillLevelCounts,\n\t\tuserCount,\n\t\tappliedSkillsObject\n\t);\n\tconst flip = get(state, 'properties.flip');\n\tconst model = buildGridModel(\n\t\tstate,\n\t\tcategories,\n\t\tusers,\n\t\tflip,\n\t\tappliedSkillsObject\n\t);\n\tupdateState({\n\t\tcategories,\n\t\tusers,\n\t\tmodel,\n\t\tstatus: STATUS.loaded\n\t});\n};\n\nexport const dispatchFetchUserSkillsRequested = (\n\tstate,\n\tlimit,\n\toffset,\n\tmanagerId,\n\tdispatch,\n\tupdateState,\n\tfiltersApplied\n) => {\n\tlet queryUser = 'userDYNAMICfdc474aab313001013a082c136a8dc15^ORDERBYuser';\n\tlet queryUserHasSkill =\n\t\t'user=$$parent.value$$^active=true^skill_level!=NULL^ORDERBYskill_level.value';\n\tlet queryCategory = 'skill=$$parent.skill$$';\n\tlet querySkill = 'sys_id=$$parent.skill$$';\n\tlet recommendationCondition = `user=$$parent.value$$^state=requested^manual=false^skill.level_typeISNOTEMPTY^ORDERBYDESCtask_count`;\n\n\tlet queryAppliedSkills = '';\n\tlet appliedSkills = 'skillDYNAMIC7bf5ae293b1f1010e81a4ee1f3efc489';\n\n\t// Parsing the appliedFilters object Json, building query conditions to pass into graphQL\n\tif (filtersApplied.sys_user_grmember) {\n\t\tlet userGroup = get(filtersApplied, 'sys_user_grmember', {});\n\n\t\tqueryUser =\n\t\t\t`${queryUser}^` +\n\t\t\tObject.keys(userGroup)\n\t\t\t\t.map(k => {\n\t\t\t\t\treturn `${k}IN${userGroup[k]}`;\n\t\t\t\t})\n\t\t\t\t.join('^');\n\t}\n\n\tif (filtersApplied.cmn_skill_m2m_category) {\n\t\tlet skillsCategories = get(\n\t\t\tfiltersApplied,\n\t\t\t'cmn_skill_m2m_category',\n\t\t\t{}\n\t\t);\n\t\tqueryAppliedSkills = skillsCategories['skill'] || '';\n\t\tlet queryAppliedCategories = skillsCategories['category'] || '';\n\n\t\tif (queryAppliedSkills !== '') {\n\t\t\tappliedSkills = `skillIN${queryAppliedSkills}`;\n\t\t\tqueryUserHasSkill =\n\t\t\t\t`${queryUserHasSkill}^` + `skillIN${queryAppliedSkills}`;\n\t\t\trecommendationCondition =\n\t\t\t\t`skillIN${queryAppliedSkills}^` + recommendationCondition;\n\t\t}\n\t\tif (queryAppliedCategories !== '') {\n\t\t\tappliedSkills = `categoryIN${queryAppliedCategories}`;\n\t\t\tqueryCategory =\n\t\t\t\t`${queryCategory}^` + `categoryIN${queryAppliedCategories}`;\n\t\t}\n\t\tif (queryAppliedCategories !== '' && queryAppliedSkills !== '') {\n\t\t\tappliedSkills = `skillIN${queryAppliedSkills}^categoryIN${queryAppliedCategories}`;\n\t\t}\n\t}\n\n\tif (filtersApplied.cmn_skill) {\n\t\tlet cmnSkill = get(filtersApplied, 'cmn_skill', {});\n\t\tquerySkill =\n\t\t\t`${querySkill}^` +\n\t\t\tObject.keys(cmnSkill)\n\t\t\t\t.map(k => {\n\t\t\t\t\treturn `${k}IN${cmnSkill[k]}`;\n\t\t\t\t})\n\t\t\t\t.join('^');\n\t}\n\n\t// Set recommendation conditions variable to query skill value, so that rec conditions dont always show up\n\t//recommendationCondition = queryUserHasSkill;\n\n\tdispatch(FETCH_USER_SKILLS_REQUESTED, {\n\t\tappliedSkills,\n\t\tqueryUser,\n\t\tqueryUserHasSkill,\n\t\tqueryCategory,\n\t\tquerySkill,\n\t\tpaginationLimit: !get(state, 'properties.flip')\n\t\t\t? dataStore.get('max_users_columns')\n\t\t\t: limit,\n\t\toffset: offset,\n\t\trecommendationCondition,\n\t\tapprovalCondition: `document_id=$$parent.sys_id$$^source_table=sn_sre_user_predicted_skill^state=requested^approver=${managerId}`\n\t});\n};\n\nexport const handleButtonClick = ({\n\tstate,\n\taction: {\n\t\tpayload: { type, table, id }\n\t},\n\tupdateProperties,\n\tdispatch,\n\tupdateState\n}) => {\n\tif (type == BUTTON_SWAP_AXES) {\n\t\tconst flip = get(state, 'properties.flip');\n\t\tconst { managerId } = state.properties;\n\t\t//current is users as rows, change to skills as rows\n\t\tif (flip) {\n\t\t\tconst maxUsersColumns = dataStore.get('max_users_columns');\n\t\t\tdispatchFetchUserSkillsRequested(\n\t\t\t\tstate,\n\t\t\t\tmaxUsersColumns,\n\t\t\t\t0,\n\t\t\t\tmanagerId,\n\t\t\t\tdispatch,\n\t\t\t\tupdateState,\n\t\t\t\tget(state, 'filter', {})\n\t\t\t);\n\t\t} else {\n\t\t\tconst pagination = state.pagination;\n\t\t\tconst offset = (pagination.page - 1) * pagination.limit;\n\t\t\tdispatchFetchUserSkillsRequested(\n\t\t\t\tstate,\n\t\t\t\tpagination.limit,\n\t\t\t\toffset,\n\t\t\t\tmanagerId,\n\t\t\t\tdispatch,\n\t\t\t\tupdateState,\n\t\t\t\tget(state, 'filter', {})\n\t\t\t);\n\t\t}\n\t\tupdateProperties({ flip: !flip });\n\t} else if (type == BUTTON_ADD_SKILL) {\n\t\tdispatch(ITEM_SELECTED, {\n\t\t\ttable: table,\n\t\t\tsys_id: id\n\t\t});\n\t} else if (type == BUTTON_REFRESH_LIST) {\n\t\tdispatch(FETCH_SKILL_LEVEL_REQUESTED, {\n\t\t\tpaginationLimit: PAGINATION_LIMIT\n\t\t});\n\t} else if (type == BUTTON_FILTER) {\n\t\tdispatch(TOGGLE_SIDE_PANEL);\n\t}\n};\n\nexport const handlePagination = ({ action, state, dispatch, updateState }) => {\n\tconst pagination = { ...state.pagination };\n\tif (action.type === PAGINATION_PAGE_UPDATE) {\n\t\tpagination.page = action.payload.page;\n\t} else if (action.type === PAGINATION_LIMIT_UPDATE) {\n\t\tpagination.limit = action.payload.limit;\n\t\tpagination.page = Math.min(\n\t\t\tpagination.page,\n\t\t\tMath.ceil(pagination.recordCount / pagination.limit)\n\t\t);\n\t}\n\tif (!isEqual(pagination, state.pagination)) {\n\t\tlet offset = (pagination.page - 1) * pagination.limit;\n\t\tconst { managerId } = state.properties;\n\t\tdispatchFetchUserSkillsRequested(\n\t\t\tstate,\n\t\t\tpagination.limit,\n\t\t\toffset,\n\t\t\tmanagerId,\n\t\t\tdispatch,\n\t\t\tupdateState,\n\t\t\tget(state, 'filter', {})\n\t\t);\n\t\tupdateState({\n\t\t\tpagination\n\t\t});\n\t\tif (action.type === PAGINATION_LIMIT_UPDATE) {\n\t\t\tsetUserPreference('rowcount', pagination.limit, dispatch);\n\t\t}\n\t}\n};\n\nexport const dataStore = {\n\tget(key) {\n\t\treturn window.sessionStorage.getItem(key);\n\t},\n\tset(key, value) {\n\t\treturn window.sessionStorage.setItem(key, value);\n\t}\n};\n\nexport const userFetchSucceeded = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch,\n\tproperties\n}) => {\n\tconst userDistinctCount = get(action.payload, 'data.userDistinctCount');\n\tif (isEmpty(userDistinctCount)) {\n\t\treturn;\n\t} else {\n\t\tconst userCount = get(userDistinctCount, '[0].count');\n\n\t\t/* If the userCount is 0 on initial bootstrap, set status prop to loaded,\n\t\tso that view can show empty state message (assign groups have been loaded and have 0 users) */\n\t\tif (userCount === 0) {\n\t\t\tupdateState({ status: STATUS.loaded });\n\t\t}\n\t\tconst pagination = { ...state.pagination };\n\t\tpagination.recordCount = userCount;\n\t\t// If filter gets rid of page your on cause of less data, it should default back to page 1\n\t\tif (\n\t\t\tMath.ceil(userCount / state.pagination.limit) <\n\t\t\tstate.pagination.page\n\t\t) {\n\t\t\tpagination.page = 1;\n\t\t}\n\t\tupdateState({ userCount, pagination });\n\t}\n\n\tconst rowcount = Number(\n\t\tgetUserPreference('rowcount', { properties }, state.pagination.limit)\n\t);\n\tif (rowcount !== state.pagination.limit) {\n\t\tupdateState({\n\t\t\tpath: 'pagination.limit',\n\t\t\toperation: 'set',\n\t\t\tvalue: rowcount\n\t\t});\n\t}\n\tdispatch(FETCH_SKILL_LEVEL_REQUESTED, {\n\t\tpaginationLimit: PAGINATION_LIMIT\n\t});\n};\n\nexport const skillLevelCountsFetchSucceeded = ({\n\taction,\n\tupdateProperties,\n\tdispatch,\n\tupdateState,\n\tstate\n}) => {\n\tconst result = action.payload.result;\n\tconst reducer = (accumulator, currentValue) => {\n\t\tlet value = result[currentValue];\n\n\t\tlet skillName = value.skill_name;\n\t\taccumulator[skillName] = {};\n\t\tvalue.skill_levels.forEach(\n\t\t\tskill_level =>\n\t\t\t\t(accumulator[skillName][skill_level.skill_level_name] =\n\t\t\t\t\tskill_level.user_count)\n\t\t);\n\t\treturn accumulator;\n\t};\n\tlet skillLevelIds = Object.keys(result);\n\tconst skillLevelCounts = skillLevelIds.reduce(reducer, {});\n\tupdateProperties({\n\t\tskillLevelCounts\n\t});\n\n\tconst { managerId } = state.properties;\n\tconst pagination = state.pagination;\n\tconst offset = (pagination.page - 1) * pagination.limit;\n\tdispatchFetchUserSkillsRequested(\n\t\tstate,\n\t\tpagination.limit,\n\t\toffset,\n\t\tmanagerId,\n\t\tdispatch,\n\t\tupdateState,\n\t\tget(state, 'filter', {})\n\t);\n};\n\nexport const updateStatus = status => ({ updateState }) => {\n\tupdateState({ status });\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport properties from './properties';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-coaching-skill-coverage', {\n\trenderer: { type: snabbdom, view },\n\t...properties,\n\tstyles\n});\n","module.exports = __TECTONIC__$servicenow_now_tooltip;","import { createSelector } from 'reselect';\nimport { t } from 'sn-translate';\n\nexport const getSkillLevels = state => state.properties.skillLevels;\n\nexport const getPresetSkillLevelId = state =>\n\tstate.properties.presetSkillLevelId;\n\nexport const getSelectedSkillLevelId = state => state.selectedSkillLevelId;\n\nexport const getSelectedSkillLevel = createSelector(\n\tgetSkillLevels,\n\tgetSelectedSkillLevelId,\n\t(skillLevels, selectedSkillLevelId) =>\n\t\tskillLevels.find(({ sysId }) => sysId === selectedSkillLevelId)\n);\n\nexport const getRadioButtonOptions = createSelector(\n\tgetSkillLevels,\n\tgetPresetSkillLevelId,\n\tgetSelectedSkillLevelId,\n\t(skillLevels, presetSkillLevelId, selectedSkillLevelId) =>\n\t\tskillLevels.map(({ sysId: id, label }) => ({\n\t\t\tid,\n\t\t\tlabel,\n\t\t\tchecked: id === selectedSkillLevelId || id === presetSkillLevelId\n\t\t}))\n);\n\nexport const getRadioButtonMessages = createSelector(\n\tgetSkillLevels,\n\tgetPresetSkillLevelId,\n\tgetSelectedSkillLevelId,\n\t(skillLevels, presetSkillLevelId, selectedSkillLevelId) =>\n\t\tskillLevels.length > 0 && !presetSkillLevelId && !selectedSkillLevelId\n\t\t\t? [\n\t\t\t\t{\n\t\t\t\t\tstatus: 'critical',\n\t\t\t\t\ticon: 'circle-info-outline',\n\t\t\t\t\tcontent: t('Please select a skill level')\n\t\t\t\t}\n\t\t\t  ] // eslint-disable-line\n\t\t\t: null\n);\n\nexport const getRadioButtonsProps = createSelector(\n\tgetRadioButtonOptions,\n\tgetRadioButtonMessages,\n\t(options, messages) => ({\n\t\tlayout: 'vertical',\n\t\toptions,\n\t\tmessages\n\t})\n);\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport '@servicenow/now-text-link';\nimport '../sn-manager-coaching-skill-coverage/index';\nimport {\n\tOUTLINED_ICON,\n\tUSERS_WITHOUT_THIS_SKILL,\n\tFETCH_SKILL_LEVEL_REQUESTED,\n\tPAGINATION_LIMIT\n} from '../common/constants';\nimport {\n\tFETCH_SKILL_AND_COUNT_REQUESTED,\n\tADD_COLOR_COUNT_TO_SKILL_COUNT\n} from './constants';\nimport { CELL_TYPES } from '../../common/constants';\nexport const buildRows = skillCount => {\n\tconst buildCell = sc => {\n\t\tlet cell = new Map([\n\t\t\t[\n\t\t\t\t'name',\n\t\t\t\t{\n\t\t\t\t\tcolumnName: 'name',\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tdisplayValue: sc.skillName,\n\t\t\t\t\t\tvalue: sc.skillValue,\n\t\t\t\t\t\ttable: 'cmn_skill',\n\t\t\t\t\t\tid: sc.skillValue,\n\t\t\t\t\t\tinternalType: CELL_TYPES.USER_SKILL\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t[\n\t\t\t\t'records',\n\t\t\t\t{\n\t\t\t\t\tcolumnName: 'records',\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tdisplayValue: sc.count,\n\t\t\t\t\t\tvalue: sc.count\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t[\n\t\t\t\t'coverage',\n\t\t\t\t{\n\t\t\t\t\tcolumnName: 'coverage',\n\t\t\t\t\tcolumnData: {\n\t\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\t\tvalue: sc.colorCount,\n\t\t\t\t\t\tinternalType: CELL_TYPES.TEAM_COVERAGE\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t]);\n\t\treturn cell;\n\t};\n\tlet rows = new Map();\n\tskillCount.map(sc =>\n\t\trows.set(sc, {\n\t\t\tuniqueId: sc.skillValue,\n\t\t\tdisplayValue: sc.skillName,\n\t\t\thighlightedData: new Map(),\n\t\t\trowData: buildCell(sc)\n\t\t})\n\t);\n\treturn rows;\n};\n\nexport const buildGridModel = skillCount => {\n\tconst columns = new Map([\n\t\t[\n\t\t\t'name',\n\t\t\t{\n\t\t\t\tcolumnName: 'skill',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: 'Skill',\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: false,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'records',\n\t\t\t{\n\t\t\t\tcolumnName: 'records',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: '#Records',\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: false,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'coverage',\n\t\t\t{\n\t\t\t\tcolumnName: 'coverage',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tlabel: 'Team skill coverage',\n\t\t\t\t\tisFilterable: false,\n\t\t\t\t\tisSortable: false,\n\t\t\t\t\tisGroupable: false,\n\t\t\t\t\tisChoice: false\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]);\n\n\tconst model = {\n\t\tallColumns: columns,\n\t\tlayoutQuery: {\n\t\t\tallSysIds: [],\n\t\t\torderByColumn: 'record',\n\t\t\torderByIsDescending: false,\n\t\t\tencodedQuery: '',\n\t\t\tqueryRows: buildRows(skillCount)\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false\n\t\t}\n\t};\n\n\treturn model;\n};\n\nconst teamCoverageSummaryRowRenderer = () => {\n\treturn ({ cell }) => (\n\t\t<div style={{ 'padding-left': '1rem' }}>\n\t\t\t<sn-manager-coaching-skill-coverage\n\t\t\t\tskillLevels={cell.columnData.value}\n\t\t\t></sn-manager-coaching-skill-coverage>\n\t\t</div>\n\t);\n};\n\nconst skillRelatedCellRenderer = () => {\n\treturn ({ cell }) => (\n\t\t<now-text-link\n\t\t\tlabel={cell.columnData.displayValue}\n\t\t\tvariant=\"primary\"\n\t\t\thref=\"javascript:void(0)\"\n\t\t\tstyle={{\n\t\t\t\t'padding-left': '1rem',\n\t\t\t\t'white-space': 'nowrap',\n\t\t\t\t'text-overflow': 'ellipsis',\n\t\t\t\toverflow: 'hidden',\n\t\t\t\t'max-width': '200px',\n\t\t\t\tdisplay: 'inline-block'\n\t\t\t}}\n\t\t\tappend-to-payload={{\n\t\t\t\ttable: cell.columnData.table,\n\t\t\t\tid: cell.columnData.id\n\t\t\t}}\n\t\t></now-text-link>\n\t);\n};\n\nconst customCellRenderer = {\n\tget({ columnData }) {\n\t\tif (columnData.internalType === CELL_TYPES.USER_SKILL) {\n\t\t\treturn skillRelatedCellRenderer();\n\t\t} else if (columnData.internalType === CELL_TYPES.TEAM_COVERAGE) {\n\t\t\treturn teamCoverageSummaryRowRenderer();\n\t\t}\n\t}\n};\n\nexport const buildGridProps = skillCount => {\n\tconst model = buildGridModel(skillCount);\n\treturn {\n\t\tcustomCellRenderer: customCellRenderer,\n\t\thideCellFilter: true,\n\t\thideColumnFiltering: true,\n\t\thideColumnSorting: true,\n\t\thideQuickEdit: true,\n\t\thideRowSelector: true,\n\t\tgridModel: model\n\t};\n};\n\nexport const userFetchSucceeded = ({ action, updateState, dispatch }) => {\n\tconst userDistinctCount = get(action.payload, 'data.userDistinctCount');\n\tconst userCount = get(userDistinctCount, '[0].count', 0);\n\tupdateState({ userCount });\n\tdispatch(FETCH_SKILL_LEVEL_REQUESTED, {\n\t\tpaginationLimit: PAGINATION_LIMIT\n\t});\n};\n\nexport const skillLevelCountsFetchSucceeded = ({\n\taction,\n\tupdateProperties,\n\tdispatch,\n\tstate\n}) => {\n\tconst result = action.payload.result;\n\tif (isEmpty(result)) {\n\t\treturn;\n\t}\n\tconst reducer = (accumulator, currentValue) => {\n\t\tlet value = result[currentValue];\n\n\t\tlet skillName = value.skill_name;\n\t\taccumulator[skillName] = {};\n\t\tvalue.skill_levels.forEach(\n\t\t\tskill_level =>\n\t\t\t\t(accumulator[skillName][skill_level.skill_level_name] =\n\t\t\t\t\tskill_level.user_count)\n\t\t);\n\t\treturn accumulator;\n\t};\n\tlet skillLevelIds = Object.keys(result);\n\tconst skillLevelCounts = skillLevelIds.reduce(reducer, {});\n\tupdateProperties({\n\t\tskillLevelCounts\n\t});\n\tconst groupIds = state.properties.groupIds;\n\tif (!groupIds) return;\n\n\tconst groupIdList = groupIds.replace('group=', '').split('^ORgroup=');\n\tlet queryString = `task.assignment_groupIN${groupIdList.join()}^sys_created_onBETWEENjavascript:gs.beginningOfLast30Days()@javascript:gs.endOfToday()`;\n\tdispatch(FETCH_SKILL_AND_COUNT_REQUESTED, {\n\t\tqueryCondition: queryString\n\t});\n};\n\nexport const skillCountFetchSucceeded = ({ action, updateState, dispatch }) => {\n\tconst aggregateResult = get(action.payload, 'data.incidentAggregateResult');\n\tif (isEmpty(aggregateResult)) {\n\t\tupdateState({\n\t\t\tloaded: true\n\t\t});\n\t\treturn;\n\t}\n\n\tconst reducer = (accumulator, currentValue) => {\n\t\tlet count = get(currentValue, 'count');\n\t\tlet skill = get(currentValue, 'groupBy')[0];\n\t\tlet levelType = get(\n\t\t\tskill,\n\t\t\t'_query.queryWithSkill.cmn_skill._results[0].level_type.displayValue',\n\t\t\t0\n\t\t);\n\t\tif (levelType) {\n\t\t\taccumulator.push({\n\t\t\t\tskillName: skill.displayValue,\n\t\t\t\tskillValue: skill.value,\n\t\t\t\tcount: count,\n\t\t\t\tlevelType: levelType\n\t\t\t});\n\t\t}\n\t\treturn accumulator;\n\t};\n\n\tconst skillCount = aggregateResult.reduce(reducer, []);\n\tskillCount.sort((a, b) => b.count - a.count);\n\tupdateState({\n\t\tskillCount: skillCount.slice(0, 10)\n\t});\n\tdispatch(ADD_COLOR_COUNT_TO_SKILL_COUNT);\n};\n\nexport const addColorCount = ({ updateState, state }) => {\n\tconst { userCount, skillCount } = state;\n\tconst skillLevelType = state.properties.skillLevelType;\n\tconst skillLevelCounts = state.properties.skillLevelCounts;\n\tskillCount.forEach(sc => {\n\t\tlet colorCount = new Map();\n\n\t\tfor (let [k, v] of skillLevelType[sc.levelType]) {\n\t\t\tcolorCount.set(k, {\n\t\t\t\tcount: v.count,\n\t\t\t\tskillLabel: v.skillLabel,\n\t\t\t\tcolor: v.colorValue\n\t\t\t});\n\t\t}\n\n\t\tlet totalCount = 0;\n\t\tfor (let [k, v] of colorCount) {\n\t\t\tlet levelCount = get(\n\t\t\t\tskillLevelCounts,\n\t\t\t\t`${sc.skillName}.${v.skillLabel}`,\n\t\t\t\t0\n\t\t\t);\n\t\t\tif (levelCount) {\n\t\t\t\tcolorCount.set(k, {\n\t\t\t\t\tcount: levelCount,\n\t\t\t\t\tskillLabel: v.skillLabel,\n\t\t\t\t\tcolor: v.color\n\t\t\t\t});\n\t\t\t\ttotalCount += parseInt(levelCount);\n\t\t\t}\n\t\t}\n\t\tcolorCount.set(OUTLINED_ICON, {\n\t\t\tcount: userCount - totalCount,\n\t\t\tskillLabel: USERS_WITHOUT_THIS_SKILL\n\t\t});\n\t\tsc.colorCount = colorCount;\n\t});\n\n\tupdateState({\n\t\tskillCount: skillCount,\n\t\tloaded: true\n\t});\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport {\n\tTAKE_LATEST,\n\tDEBOUNCE\n} from '@servicenow/ui-core/lib/effects/modifiers/types';\nimport { RECORD_STATUS_CHANGED } from '@devsnc/sn-scripting-environment';\nimport {\n\tCAS_DETAIL_SAVE_CLICKED,\n\tCAS_DETAIL_UPDATE_RELATED_ITEMS,\n\tCAS_DETAIL_UPDATE_RELATED_ITEMS_SUCCEEDED,\n\tCAS_DETAIL_UPDATE_RELATED_ITEMS_FAILED,\n\tCAS_DETAIL_FETCH_SKILL_TRAINING,\n\tCAS_DETAIL_FETCH_SKILL_TRAINING_SUCCEEDED,\n\tNOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET,\n\tCAS_DETAIL_FETCH_SKILL_TRAINING_FAILED,\n\tCAS_DETAIL_COMPLETE_CLICKED,\n\tNOW_TYPEAHEAD_MULTI_VALUE_SET,\n\tCAS_DETAIL_FETCH_SKILLS,\n\tCAS_DETAIL_FETCH_TRAININGS,\n\tCAS_DETAIL_FETCH_SKILLS_SUCCEEDED,\n\tCAS_DETAIL_FETCH_SKILLS_FAILED,\n\tCAS_DETAIL_FETCH_TRAININGS_SUCCEEDED,\n\tCAS_DETAIL_FETCH_TRAININGS_FAILED,\n\tCAS_DETAIL_ASSESSMENT_COMPLETED\n} from './action';\nimport { skillTrainingQuery, skillQuery, trainingQuery } from './queries';\nimport {\n\tCOACHING_ASSESSMENT_TABLE,\n\tCOACHING_RECOMMENDATION_TABLE_NAME,\n\tCOACHING_ASSESSMENT_STATE_VALUES\n} from '../common/constants';\nimport { createLog } from '../../utils/logger';\nimport {\n\tTYPEAHEAD_DEBOUNCE_DELAY,\n\tKB_KNOWLEDGE_TABLE_NAME,\n\tRW_ACTIONS,\n\tRECORD_WATCHER_UPDATED\n} from '../../common/constants';\nimport recordWatcherActions from '../../common/actions/recordWatcherActions';\nimport { REFRESH_ASSESSMENT_LIST } from '../sn-manager-coaching-assessment/action';\nimport {\n\tSELECTED_ITEM_SET,\n\tCOACHING_ASSESSMENTS\n} from '../sn-manager-coaching/constants';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { FORM_RECORD_OPERATION_STATUS } from '../../common/constants';\n\nexport const SKILL_MULTI_NAME = 'skill-multi';\nexport const TRAINING_MULTI_NAME = 'training-multi';\n\nconst UPDATE_RELATED_ITEMS_REST_RESOURCE =\n\t'/api/sn_coaching/coaching/update_asmt_related_items';\nconst LOG = createLog('sn-manager-coaching-asmt-detail');\nconst printResponseErrorEffect = ({ action: { payload } }) => {\n\tLOG.error(payload);\n};\n\nconst makeEffectTakeLatest = effect => {\n\treturn {\n\t\tmodifier: { name: TAKE_LATEST || 'takeLatest' },\n\t\t...effect\n\t};\n};\n\nconst prepRelatedItemsUpdateEffect = ({ state, dispatch }) => {\n\tconst {\n\t\tskills: { selectedSkillIds, awardedSkills },\n\t\ttrainings: { selectedTrainingIds, assignedTrainings },\n\t\tproperties: { asmtId }\n\t} = state;\n\tlet sanitizedSkillsIds = selectedSkillIds.map(skill => skill.id);\n\tconst initialSkillIds = awardedSkills.map(skill => skill.id);\n\tconst skillsToDelete = initialSkillIds.filter(\n\t\tskill => !sanitizedSkillsIds.includes(skill)\n\t);\n\tconst skillsToAdd = sanitizedSkillsIds.filter(\n\t\tskill => !initialSkillIds.includes(skill)\n\t);\n\tlet sanitizedTraining = selectedTrainingIds.map(t => t.id);\n\tconst initialTrainingIds = assignedTrainings.map(training => training.id);\n\tconst trainingsToDelete = initialTrainingIds.filter(\n\t\ttraining => !sanitizedTraining.includes(training)\n\t);\n\tconst trainingsToAdd = sanitizedTraining.filter(\n\t\ttraining => !initialTrainingIds.includes(training)\n\t);\n\tif (\n\t\tisEmpty(skillsToAdd) &&\n\t\tisEmpty(skillsToDelete) &&\n\t\tisEmpty(trainingsToAdd) &&\n\t\tisEmpty(trainingsToDelete)\n\t)\n\t\treturn;\n\tconst httpRequestData = {\n\t\tassessment: asmtId,\n\t\tskillsToDelete,\n\t\tskillsToAdd,\n\t\ttrainingsToDelete,\n\t\ttrainingsToAdd\n\t};\n\tdispatch(CAS_DETAIL_UPDATE_RELATED_ITEMS, { data: httpRequestData });\n};\n\nconst actionHandlers = {\n\t[COMPONENT_BOOTSTRAPPED]: ({\n\t\tdispatch,\n\t\tstate: {\n\t\t\tproperties: { asmtId }\n\t\t}\n\t}) => {\n\t\tdispatch(CAS_DETAIL_FETCH_SKILL_TRAINING, {\n\t\t\tawardedSkillsCond: `source_table=${COACHING_ASSESSMENT_TABLE}^source_id=${asmtId}`,\n\t\t\tassignedTrainingsCond: `assessment=${asmtId}`\n\t\t});\n\n\t\t//Register amb subscription for assessment record\n\t\tconst table = COACHING_ASSESSMENT_TABLE;\n\t\tconst subscribe = 'true';\n\t\tconst filterQuery = 'sys_id=' + asmtId;\n\t\tconst filter = btoa(filterQuery).replace(/=/g, '-');\n\t\tdispatch(RECORD_WATCHER_UPDATED, { table, filter, subscribe });\n\t},\n\t[CAS_DETAIL_FETCH_SKILL_TRAINING]: createGraphQLEffect(skillTrainingQuery, {\n\t\tvariableList: ['awardedSkillsCond', 'assignedTrainingsCond'],\n\t\tsuccessActionType: CAS_DETAIL_FETCH_SKILL_TRAINING_SUCCEEDED,\n\t\terrorActionType: CAS_DETAIL_FETCH_SKILL_TRAINING_FAILED\n\t}),\n\t[CAS_DETAIL_FETCH_SKILL_TRAINING_SUCCEEDED]: ({\n\t\tstate,\n\t\tupdateState,\n\t\taction: { payload }\n\t}) => {\n\t\tconst awardedSkills = get(\n\t\t\tpayload,\n\t\t\t'data.GlideRecord_Query.sn_coaching_skills_to_award._results',\n\t\t\t[]\n\t\t)\n\t\t\t.filter(awarded => !!get(awarded, 'skill.value', ''))\n\t\t\t.map(awarded => {\n\t\t\t\tconst id = get(awarded, 'skill.value', '');\n\t\t\t\tconst label = get(awarded, 'skill.displayValue', '');\n\t\t\t\tconst sourceTable = get(awarded, 'source_table.value', '');\n\t\t\t\tconst sourceId = get(awarded, 'source_id.value', '');\n\t\t\t\treturn {\n\t\t\t\t\tid,\n\t\t\t\t\tlabel,\n\t\t\t\t\tsourceTable,\n\t\t\t\t\tsourceId,\n\t\t\t\t\tisAssessmentSkill: sourceTable == COACHING_ASSESSMENT_TABLE\n\t\t\t\t};\n\t\t\t});\n\n\t\tconst assignedTrainings = get(\n\t\t\tpayload,\n\t\t\t'data.GlideRecord_Query.sn_coaching_assessment_recommended_learning._results',\n\t\t\t[]\n\t\t)\n\t\t\t.filter(\n\t\t\t\ttraining =>\n\t\t\t\t\t!!(\n\t\t\t\t\t\tget(training, 'recommendation_table.value', '') &&\n\t\t\t\t\t\tget(training, 'recommendation_id.value', '')\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.map(training => {\n\t\t\t\tconst table = get(training, 'recommendation_table.value', '');\n\t\t\t\tconst sysId = get(training, 'recommendation_id.value', '');\n\t\t\t\tconst label =\n\t\t\t\t\tget(\n\t\t\t\t\t\ttraining,\n\t\t\t\t\t\t'recommendation_id.number.displayValue',\n\t\t\t\t\t\t''\n\t\t\t\t\t) || get(training, 'recommendation_id.displayValue', '');\n\t\t\t\tconst sublabel =\n\t\t\t\t\tget(\n\t\t\t\t\t\ttraining,\n\t\t\t\t\t\t'kb_short_description._documentIdRef.displayValue',\n\t\t\t\t\t\t''\n\t\t\t\t\t) ||\n\t\t\t\t\tget(training, 'cr_name._documentIdRef.displayValue', '') ||\n\t\t\t\t\tnull;\n\t\t\t\tconst id = `${table}:${sysId}`;\n\t\t\t\tif (!table || !sysId) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tsysId,\n\t\t\t\t\ttable,\n\t\t\t\t\tlabel,\n\t\t\t\t\tsublabel,\n\t\t\t\t\tid\n\t\t\t\t};\n\t\t\t});\n\n\t\tupdateState({\n\t\t\tskills: {\n\t\t\t\t...state.skills,\n\t\t\t\tallSkills: awardedSkills,\n\t\t\t\tawardedSkills,\n\t\t\t\tselectedSkillIds: awardedSkills\n\t\t\t},\n\t\t\ttrainings: {\n\t\t\t\t...state.trainings,\n\t\t\t\tallTrainings: assignedTrainings,\n\t\t\t\tassignedTrainings,\n\t\t\t\tselectedTrainingIds: assignedTrainings\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_DETAIL_FETCH_SKILL_TRAINING_FAILED]: printResponseErrorEffect,\n\n\t[NOW_TYPEAHEAD_MULTI_VALUE_SET]: {\n\t\tmodifier: {\n\t\t\tname: DEBOUNCE || 'debounce',\n\t\t\tdelay: TYPEAHEAD_DEBOUNCE_DELAY\n\t\t},\n\t\teffect: ({ action, dispatch, updateState, state }) => {\n\t\t\tconst { name, value } = action.payload;\n\t\t\tif (!value || !value.trim() || value.trim() === '^') return;\n\n\t\t\tconst cleanValue = value.trim().replace(/\\^/g, '^^');\n\t\t\tif (name === SKILL_MULTI_NAME) {\n\t\t\t\tconst skillCondition = `nameLIKE${cleanValue}^active=true`;\n\t\t\t\tdispatch(CAS_DETAIL_FETCH_SKILLS, { skillCondition });\n\t\t\t\tupdateState({\n\t\t\t\t\tskills: {\n\t\t\t\t\t\t...state.skills,\n\t\t\t\t\t\tsearchTerm: value || ''\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (name === TRAINING_MULTI_NAME) {\n\t\t\t\tconst kbCondition = `numberLIKE${cleanValue}^ORshort_descriptionLIKE${cleanValue}^workflow_state=published^active=true`;\n\t\t\t\tconst trainingCondition = `numberLIKE${cleanValue}^ORnameLIKE${cleanValue}^active=true`;\n\t\t\t\tdispatch(CAS_DETAIL_FETCH_TRAININGS, {\n\t\t\t\t\ttrainingCondition,\n\t\t\t\t\tkbCondition\n\t\t\t\t});\n\t\t\t\tupdateState({\n\t\t\t\t\ttrainings: {\n\t\t\t\t\t\t...state.trainings,\n\t\t\t\t\t\tsearchTerm: value || ''\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t[CAS_DETAIL_FETCH_SKILLS]: makeEffectTakeLatest(\n\t\tcreateGraphQLEffect(skillQuery, {\n\t\t\tvariableList: ['skillCondition'],\n\t\t\tsuccessActionType: CAS_DETAIL_FETCH_SKILLS_SUCCEEDED,\n\t\t\terrorActionType: CAS_DETAIL_FETCH_SKILLS_FAILED\n\t\t})\n\t),\n\t[CAS_DETAIL_FETCH_SKILLS_SUCCEEDED]: ({ action, updateState, state }) => {\n\t\tconst { skills } = state;\n\t\tconst allSkillsIdSet = new Set(\n\t\t\tskills.allSkills.map(existing => existing.id)\n\t\t);\n\t\tconst resultSkills = get(\n\t\t\taction,\n\t\t\t'payload.data.GlideRecord_Query.cmn_skill._results',\n\t\t\t[]\n\t\t)\n\t\t\t.filter(result => !allSkillsIdSet.has(result.sys_id.value))\n\t\t\t.map(result => {\n\t\t\t\treturn {\n\t\t\t\t\tid: result.sys_id.value,\n\t\t\t\t\tlabel: result.name.displayValue\n\t\t\t\t};\n\t\t\t});\n\t\tupdateState({\n\t\t\tskills: {\n\t\t\t\t...skills,\n\t\t\t\tallSkills: [...skills.allSkills, ...resultSkills]\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_DETAIL_FETCH_SKILLS_FAILED]: printResponseErrorEffect,\n\t[CAS_DETAIL_FETCH_TRAININGS]: makeEffectTakeLatest(\n\t\tcreateGraphQLEffect(trainingQuery, {\n\t\t\tvariableList: ['trainingCondition', 'kbCondition'],\n\t\t\tsuccessActionType: CAS_DETAIL_FETCH_TRAININGS_SUCCEEDED,\n\t\t\terrorActionType: CAS_DETAIL_FETCH_TRAININGS_FAILED\n\t\t})\n\t),\n\t[CAS_DETAIL_FETCH_TRAININGS_SUCCEEDED]: ({\n\t\taction,\n\t\tstate,\n\t\tupdateState\n\t}) => {\n\t\tconst { trainings } = state;\n\t\tconst allTrainingsSet = new Set(\n\t\t\ttrainings.allTrainings.map(existing => existing.id)\n\t\t);\n\t\tconst resultKBs = get(\n\t\t\taction,\n\t\t\t'payload.data.GlideRecord_Query.kb_knowledge._results',\n\t\t\t[]\n\t\t)\n\t\t\t.filter(\n\t\t\t\tresult =>\n\t\t\t\t\t!allTrainingsSet.has(\n\t\t\t\t\t\t`${KB_KNOWLEDGE_TABLE_NAME}:${result.sys_id.value}`\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.map(result => {\n\t\t\t\treturn {\n\t\t\t\t\tid: `${KB_KNOWLEDGE_TABLE_NAME}:${result.sys_id.value}`,\n\t\t\t\t\tlabel: result.number.displayValue,\n\t\t\t\t\tsublabel: result.short_description.displayValue\n\t\t\t\t};\n\t\t\t});\n\t\tconst resultTrainings = get(\n\t\t\taction,\n\t\t\t'payload.data.GlideRecord_Query.sn_coaching_recommendation._results',\n\t\t\t[]\n\t\t)\n\t\t\t.filter(\n\t\t\t\tresult =>\n\t\t\t\t\t!allTrainingsSet.has(\n\t\t\t\t\t\t`${COACHING_RECOMMENDATION_TABLE_NAME}:${result.sys_id.value}`\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.map(result => {\n\t\t\t\treturn {\n\t\t\t\t\tid: `${COACHING_RECOMMENDATION_TABLE_NAME}:${result.sys_id.value}`,\n\t\t\t\t\tlabel: result.number.displayValue,\n\t\t\t\t\tsublabel: result.name.displayValue\n\t\t\t\t};\n\t\t\t});\n\n\t\tupdateState({\n\t\t\ttrainings: {\n\t\t\t\t...trainings,\n\t\t\t\tallTrainings: [\n\t\t\t\t\t...trainings.allTrainings,\n\t\t\t\t\t...resultTrainings,\n\t\t\t\t\t...resultKBs\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_DETAIL_FETCH_TRAININGS_FAILED]: printResponseErrorEffect,\n\t[NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET]: ({\n\t\tupdateState,\n\t\taction: { payload },\n\t\tstate: { skills, trainings }\n\t}) => {\n\t\tswitch (payload.name) {\n\t\tcase SKILL_MULTI_NAME:\n\t\t\tupdateState({\n\t\t\t\tpath: 'skills',\n\t\t\t\tvalue: {\n\t\t\t\t\t...skills,\n\t\t\t\t\tselectedSkillIds: [...new Set(payload.value)],\n\t\t\t\t\tsearchTerm: ''\n\t\t\t\t},\n\t\t\t\toperation: 'assign'\n\t\t\t});\n\t\t\tbreak;\n\t\tcase TRAINING_MULTI_NAME:\n\t\t\tupdateState({\n\t\t\t\tpath: 'trainings',\n\t\t\t\tvalue: {\n\t\t\t\t\t...trainings,\n\t\t\t\t\tselectedTrainingIds: [...new Set(payload.value)],\n\t\t\t\t\tsearchTerm: ''\n\t\t\t\t},\n\t\t\t\toperation: 'assign'\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t},\n\t[CAS_DETAIL_SAVE_CLICKED]: prepRelatedItemsUpdateEffect,\n\t[CAS_DETAIL_COMPLETE_CLICKED]: prepRelatedItemsUpdateEffect,\n\t[CAS_DETAIL_UPDATE_RELATED_ITEMS]: createHttpEffect(\n\t\tUPDATE_RELATED_ITEMS_REST_RESOURCE,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tdataParam: 'data',\n\t\t\tsuccessActionType: CAS_DETAIL_UPDATE_RELATED_ITEMS_SUCCEEDED,\n\t\t\terrorActionType: CAS_DETAIL_UPDATE_RELATED_ITEMS_FAILED\n\t\t}\n\t),\n\t[CAS_DETAIL_UPDATE_RELATED_ITEMS_SUCCEEDED]: ({ state, updateState }) => {\n\t\tconst {\n\t\t\tskills,\n\t\t\ttrainings,\n\t\t\tproperties: { asmtId }\n\t\t} = state;\n\t\tupdateState({\n\t\t\tskills: {\n\t\t\t\t...skills,\n\t\t\t\tselectedSkillIds: [],\n\t\t\t\tawardedSkills: skills.selectedSkillIds.map(selected => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: selected,\n\t\t\t\t\t\tsourceTable: COACHING_ASSESSMENT_TABLE,\n\t\t\t\t\t\tsourceId: asmtId,\n\t\t\t\t\t\tisAssessmentSkill: true\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t},\n\t\t\ttrainings: {\n\t\t\t\t...trainings,\n\t\t\t\tselectedTrainingIds: [],\n\t\t\t\tassignedTrainings: trainings.selectedTrainingIds.map(\n\t\t\t\t\tselected => {\n\t\t\t\t\t\tconst [trainingTable, trainingId] = selected.split(':');\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsysId: trainingTable,\n\t\t\t\t\t\t\ttable: trainingId,\n\t\t\t\t\t\t\tid: selected\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_DETAIL_UPDATE_RELATED_ITEMS_FAILED]: printResponseErrorEffect,\n\t...recordWatcherActions.actionHandlers,\n\t[RW_ACTIONS.MESSAGE_RECEIVED]: {\n\t\teffect: ({ action: { payload }, state, updateState, dispatch }) => {\n\t\t\tconst asmtRecordStateValue = get(\n\t\t\t\tpayload,\n\t\t\t\t'data.record.state.value',\n\t\t\t\t''\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\tasmtRecordStateValue &&\n\t\t\t\t(asmtRecordStateValue ===\n\t\t\t\t\tCOACHING_ASSESSMENT_STATE_VALUES['Closed Complete'] ||\n\t\t\t\t\tasmtRecordStateValue ===\n\t\t\t\t\t\tCOACHING_ASSESSMENT_STATE_VALUES['Closed Incomplete'])\n\t\t\t) {\n\t\t\t\tupdateState({\n\t\t\t\t\tcompleted: true\n\t\t\t\t});\n\t\t\t\tif (state.properties.asmtId)\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tCAS_DETAIL_ASSESSMENT_COMPLETED,\n\t\t\t\t\t\tstate.properties.asmtId\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t[RECORD_STATUS_CHANGED]: ({ dispatch, action }) => {\n\t\tconst status = get(action, 'payload.status');\n\t\tif (status === FORM_RECORD_OPERATION_STATUS.updated) {\n\t\t\tdispatch(SELECTED_ITEM_SET, { value: COACHING_ASSESSMENTS });\n\t\t\tdispatch(REFRESH_ASSESSMENT_LIST, {});\n\t\t}\n\t}\n};\n\nexport default actionHandlers;\n\n/*\nRelated tables for reference:\n\nAll Awarded Skills(DB view): sn_coaching_all_skills_to_award\nSkills Awarded by Assessment: sn_coaching_skills_to_award -\nOpportunity Skills: sn_coaching_skills_to_award same table for opportunity\nTrainee Skillset: sys_user_has_skill\n\nCoaching recommendation(Trainings) table: sn_caoching_recommendation\nKB Knowledge: kb_knwoledge\nTraining History sn_coaching_assessment_recommended_learning\n*/\n","export const CAS_CARD_CLICKED = 'CAS_CARD#CLICKED';\n","import './manager-user-details';\n","module.exports = __TECTONIC__lodash_4_17_15[\"map\"];","import { t } from 'sn-translate';\n\nexport const MANAGER_WORKSPACE_CONFIG_ID = '7724ceae5304130084acddeeff7b12a3';\nexport const SHOW_ALL_TEAMMATES = 'SHOW_ALL_TEAMMATES';\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const EMPTY = '(empty)';\nexport const DETAIL_TYPE = {\n\tIMAGE: 'image',\n\tTEXT: 'text',\n\tCONTACT: 'contact',\n\tWEBSITE: 'hyperlink',\n\tRATING: 'rating',\n\tADDRESS: 'address',\n\tPHONE: 'phone',\n\tLIST: 'list',\n\tHIGHLIGHTED_TEXT: 'highlighted_text',\n\tTEXTAREA: 'text_area',\n\tDATE: 'date',\n\tLOWER_THRESHOLD: 'lower_threshold',\n\tUPPER_THRESHOLD: 'upper_threshold',\n\tSELECTABLE_ITEM: 'selectable_item'\n};\n\n/**\n * Represents the main sections of the User Profile (Form) > Overview tab > Left component\n */\nexport const DETAIL_SECTION_TYPE = {\n\tDETAILS: 'details',\n\tPHONE: 'phone',\n\tMANAGER: 'manager_primary_group',\n\tGROUPS: 'groups',\n\tTEAMMATES: 'teammates',\n\tLOCATION: 'location'\n};\n\n/**\n * Drives the data rendering order of the User Profile (Form) > Overview tab > Left component\n */\nexport const DETAILS_METADATA = {\n\tprimary_group: {\n\t\tlabel: t('Primary assignment group'),\n\t\torder: 1,\n\t\ttype: DETAIL_TYPE.TEXT,\n\t\tsection: DETAIL_SECTION_TYPE.GROUPS,\n\t\temptyValue: t('Empty')\n\t},\n\tother_groups: {\n\t\tlabel: t('Other assignmnet groups'),\n\t\torder: 2,\n\t\ttype: DETAIL_TYPE.LIST,\n\t\tsection: DETAIL_SECTION_TYPE.GROUPS\n\t},\n\tlocation: {\n\t\tlabel: t('Location'),\n\t\torder: 3,\n\t\ttype: DETAIL_TYPE.TEXT,\n\t\tsection: DETAIL_SECTION_TYPE.LOCATION\n\t},\n\tphone: {\n\t\tlabel: t('Business'),\n\t\torder: 4,\n\t\ttype: DETAIL_TYPE.PHONE,\n\t\tsection: DETAIL_SECTION_TYPE.PHONE\n\t},\n\tmobile_phone: {\n\t\tlabel: t('Mobile'),\n\t\torder: 5,\n\t\ttype: DETAIL_TYPE.PHONE,\n\t\tsection: DETAIL_SECTION_TYPE.PHONE\n\t},\n\thome_phone: {\n\t\tlabel: t('Home'),\n\t\torder: 6,\n\t\ttype: DETAIL_TYPE.PHONE,\n\t\tsection: DETAIL_SECTION_TYPE.PHONE\n\t},\n\tmanager_primary_group: {\n\t\tlabel: t('Manager'),\n\t\torder: 7,\n\t\ttype: DETAIL_TYPE.TEXT,\n\t\tsection: DETAIL_SECTION_TYPE.MANAGER\n\t}\n};\n\n/**\n * Helper function to render the right text bases on the value given, in case of an empty or null value\n * this function will return '(empty)'\n * @param {*} value\n */\nexport const getValue = value => {\n\tif (typeof value === 'string' && value.trim().length <= 0) {\n\t\treturn EMPTY;\n\t}\n\tif (value) {\n\t\treturn value;\n\t}\n\treturn EMPTY;\n};\n\n/**\n * Maps an array of Strings into a format that can be used in a GraphQL GlideRecord_Query.\n * @param {*} columns\n */\nexport const formatColumns = columns =>\n\tcolumns.map(column => `${column} {\\n value \\n displayValue \\n}`).join('\\n');\n","module.exports = __TECTONIC__$servicenow_now_date_range_picker;","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-skill-recommendation-card', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tresult: { default: {} },\n\t\tloading: { default: false },\n\t\thideActions: { default: false }\n\t},\n\tstyles\n});\n","import './manager-user-channels-container';\n","import {\n\tSERVICE_CHANNEL_TABLE,\n\tSYS_ID,\n\tCHANNEL_LABEL,\n\tREFERENCE,\n\tTOTAL_CAPACITY,\n\tTOTAL_CAPACITY_LABEL,\n\tCAPACITY_IN_USE,\n\tCAPACITY_IN_USE_LABEL,\n\tUTILIZATION,\n\tUTILIZATION_LABEL,\n\tCAN_TAKE_WORK,\n\tCAN_TAKE_WORK_LABEL,\n\tCHANNEL,\n\tCHANNEL_SYS_ID,\n\tSTRING,\n\tCHANNEL_HEADER,\n\tOVER_RIDE_CAPACITY,\n\tUSER_CHANNEL_REFRESH_REQUESTED,\n\tUSER_CHANNEL_OVERRIDE_CLICKED\n} from './constants';\nimport { CHANNEL_MGMT_USER } from '../../channels/common/constants';\nimport { preUserRoles } from 'sn-uxpage-presource';\n\nexport const buildGridModel = data => {\n\tconst model = {\n\t\tallColumns: columns,\n\t\tlayoutQuery: {\n\t\t\tallSysIds: getAllSysIds(data),\n\t\t\torderByColumn: '',\n\t\t\torderByIsDescending: false,\n\t\t\tencodedQuery: '',\n\t\t\tqueryRows: queryRows(data)\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false,\n\t\t\tisDBView: false,\n\t\t\tisScriptableTable: false\n\t\t}\n\t};\n\treturn model;\n};\n\nconst queryRows = data => {\n\tlet queryRowsMap = new Map();\n\tdata.forEach(temp => {\n\t\tqueryRowsMap.set(temp.channelId, {\n\t\t\tuniqueId: temp.channelId,\n\t\t\tdisplayValue: temp.channelId,\n\t\t\thighlightedData: new Map(),\n\t\t\tdbViewData: new Map(),\n\t\t\trowData: getRowData(temp)\n\t\t});\n\t});\n\treturn queryRowsMap;\n};\n\nconst getAllSysIds = data => {\n\tlet sysIds = [];\n\tdata.forEach(temp => {\n\t\tsysIds.push(temp.channelId);\n\t});\n\treturn sysIds;\n};\n\nconst columns = new Map([\n\t[\n\t\tCHANNEL_SYS_ID,\n\t\t{\n\t\t\tcolumnName: CHANNEL_SYS_ID,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: CHANNEL_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\ttableName: SERVICE_CHANNEL_TABLE,\n\t\t\t\telementSysId: SYS_ID\n\t\t\t},\n\t\t\tinternalType: REFERENCE\n\t\t}\n\t],\n\t[\n\t\tTOTAL_CAPACITY,\n\t\t{\n\t\t\tcolumnName: TOTAL_CAPACITY,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: TOTAL_CAPACITY_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tCAPACITY_IN_USE,\n\t\t{\n\t\t\tcolumnName: CAPACITY_IN_USE,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: CAPACITY_IN_USE_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tUTILIZATION,\n\t\t{\n\t\t\tcolumnName: UTILIZATION,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: UTILIZATION_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tCAN_TAKE_WORK,\n\t\t{\n\t\t\tcolumnName: CAN_TAKE_WORK,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: CAN_TAKE_WORK_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t]\n]);\n\nconst getRowData = data => {\n\treturn new Map([\n\t\t[\n\t\t\tCHANNEL_SYS_ID,\n\t\t\t{\n\t\t\t\tcolumnName: CHANNEL_SYS_ID,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[CHANNEL],\n\t\t\t\t\tvalue: data[CHANNEL_SYS_ID]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tTOTAL_CAPACITY,\n\t\t\t{\n\t\t\t\tcolumnName: TOTAL_CAPACITY,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[TOTAL_CAPACITY],\n\t\t\t\t\tvalue: data[TOTAL_CAPACITY]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tCAPACITY_IN_USE,\n\t\t\t{\n\t\t\t\tcolumnName: CAPACITY_IN_USE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[CAPACITY_IN_USE],\n\t\t\t\t\tvalue: data[CAPACITY_IN_USE]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tUTILIZATION,\n\t\t\t{\n\t\t\t\tcolumnName: UTILIZATION,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[UTILIZATION],\n\t\t\t\t\tvalue: data[UTILIZATION]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tCAN_TAKE_WORK,\n\t\t\t{\n\t\t\t\tcolumnName: CAN_TAKE_WORK,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[CAN_TAKE_WORK],\n\t\t\t\t\tvalue: data[CAN_TAKE_WORK]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]);\n};\n\n/**\n * check whether user has the specified role or not\n * @param list of roles\n * @param role required\n */\nconst hasRole = (roles, role) =>\n\troles && roles.length ? roles.includes(role) : false;\n\nexport const getHeaderProps = state => {\n\tconst { rowCount, isOverrideButtonDisabled, dataUpdatedTime } = state;\n\tconst userRoles = preUserRoles.initialState;\n\tconst noOfButtons = hasRole(userRoles, CHANNEL_MGMT_USER) ? 2 : 1;\n\treturn {\n\t\theaderLabel: CHANNEL_HEADER,\n\t\theaderLevel: '2',\n\t\theaderVariant: 'header-tertiary',\n\t\trowCount: rowCount,\n\t\tisButtonEnabled: hasRole(userRoles, CHANNEL_MGMT_USER),\n\t\tassignButton: {\n\t\t\tlabel: OVER_RIDE_CAPACITY,\n\t\t\tsize: 'md',\n\t\t\tvariant: 'primary',\n\t\t\tdisabled: isOverrideButtonDisabled\n\t\t},\n\t\tcustomConf: {\n\t\t\ttype: 'list',\n\t\t\tnoOfButtons: noOfButtons\n\t\t},\n\t\tdataUpdatedTime: dataUpdatedTime,\n\t\trefreshEvent: USER_CHANNEL_REFRESH_REQUESTED,\n\t\tassignEvent: USER_CHANNEL_OVERRIDE_CLICKED\n\t};\n};\n\nexport const removeChannelId = (channelIds, val) => {\n\treturn channelIds.filter(channelId => channelId != val);\n};\n\nexport const getSelectedChannelObj = (channelData, sysId) => {\n\treturn channelData.filter(channel => channel.channelId == sysId);\n};\n","import './manager-user-override-capacity';\n","import {\n\tCHANNEL_LABEL,\n\tCHANNEL_CAPACITY_LABEL,\n\tSTRING,\n\tAPPLY,\n\tCANCEL,\n\tPRIMARY,\n\tSECONDARY\n} from './constants';\n\nexport const getLabelsAndValues = channelIfo => {\n\treturn [\n\t\t{\n\t\t\tlabel: CHANNEL_LABEL,\n\t\t\tvalue: { type: STRING, value: `${channelIfo.name}` }\n\t\t},\n\t\t{\n\t\t\tlabel: CHANNEL_CAPACITY_LABEL,\n\t\t\tvalue: { type: STRING, value: `${channelIfo.defaultCapacity}` }\n\t\t}\n\t];\n};\n\nexport const footerAction = isApplyDisabled => {\n\treturn [\n\t\t{\n\t\t\tid: 0,\n\t\t\tlabel: APPLY,\n\t\t\tvariant: PRIMARY,\n\t\t\tdisabled: isApplyDisabled\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tlabel: CANCEL,\n\t\t\tvariant: SECONDARY,\n\t\t\tdisabled: false\n\t\t}\n\t];\n};\n","import './manager-user-current-work-container';\n","import { t } from 'sn-translate';\n\nexport const AGENT_KPI_ENDPOINT =\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/getAgentKPIs/:agentId';\n\nexport const FETCH_AGENT_KPI = 'FETCH_AGENT_KPI';\nexport const FETCH_AGENT_KPI_SUCCEEDED = 'FETCH_AGENT_KPI_SUCCEEDED';\nexport const FETCH_AGENT_KPI_FAILED = 'FETCH_AGENT_KPI_FAILED';\nexport const FETCH_KPI_REPORTCONFIG = 'FETCH_KPI_REPORTCONFIG';\nexport const FETCH_KPI_REPORTCONFIG_SUCCESS = 'FETCH_KPI_REPORTCONFIG_SUCCESS';\nexport const ERROR_OCCURED = 'ERROR_OCCURED';\n\nexport const LOADING_HEADER_TEXT = t('Loading');\nexport const LOADING_BODY_TEXT = t(\n\t'Loading the KPIs configured for this user.'\n);\nexport const HEADER = t('Current Work');\n","import { t } from 'sn-translate';\nexport const FETCH_AGENT_PRESENCE_STATE_HISTORY_ENDPONT =\n\t'/api/sn_channel_mgmt/awa_channel_management_agent_api/getAgentPresenceStateHistory/agent/:agentId';\nexport const FETCH_AGENT_PRESENCE_STATE_HISTORY =\n\t'AGENT_PRESENCE_HISTORY#FETCH_AGENT_PRESENCE_STATE_HISTORY';\nexport const FETCH_AGENT_PRESENCE_STATE_HISTORY_SUCCEDDED =\n\t'AGENT_PRESENCE_HISTORY#FETCH_AGENT_PRESENCE_STATE_HISTORY_SUCCEDDED';\nexport const FETCH_AGENT_PRESENCE_STATE_HISTORY_FAILED =\n\t'AGENT_PRESENCE_HISTORY#FETCH_AGENT_PRESENCE_STATE_HISTORY_FAILED';\nexport const AGENT_PRESENCE_HISTORY_PIE_CLICKED =\n\t'AGENT_PRESENCE_HISTORY#AGENT_PRESENCE_HISTORY_PIE_CLICKED';\nexport const AGENT_PRESENCE_HISTORY_REFRESH_REQUESTED =\n\t'AGENT_PRESENCE_HISTORY#AGENT_PRESENCE_REFRESH_REQUESTED';\nexport const NOW_BUTTON_CLICKED = 'NOW_BUTTON#CLICKED';\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const HOUR = t('Hour');\nexport const MINUTE = t('Minute');\nexport const HOURS = t('Hours');\nexport const MINUTES = t('Minutes');\nexport const AWA_AGENT_PRESENCE_TABLE = 'awa_agent_presence_history';\nexport const TITLE = t('Presence State History');\nexport const COLUMNS = 'presence_state,sys_created_on';\n","import { t } from 'sn-translate';\nimport { getScoreByDisplayAggregate } from '../../utils/teamUtils';\nimport { MEMBER_NAME } from './constants';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const createColumn = indicator => {\n\tconst { sysId, name = '' } = indicator;\n\treturn {\n\t\tcolumnName: sysId,\n\t\tcolumnData: {\n\t\t\tlabel: name,\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: false,\n\t\t\tisSortable: false,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t}\n\t};\n};\n\nexport const createCell = ({ indicator, score, team, member }) => {\n\tconst { value, displayValue = '' } = getScoreByDisplayAggregate(\n\t\tindicator.displayAggregate,\n\t\tscore\n\t);\n\tconst columnName = indicator.sysId;\n\tconst columnData = {\n\t\tvalue,\n\t\tdisplayValue\n\t};\n\n\treturn { columnName, columnData, indicator, team, member };\n};\n\nexport const FIRST_COLUMN = createColumn({\n\tsysId: MEMBER_NAME,\n\tname: t('Name')\n});\n\nexport const createTableColumns = indicators => {\n\tconst columns = new Map();\n\n\tcolumns.set(FIRST_COLUMN.columnName, FIRST_COLUMN);\n\n\tindicators.forEach(indicator => {\n\t\tconst column = createColumn(indicator);\n\t\tcolumns.set(column.columnName, column);\n\t});\n\n\treturn columns;\n};\n\nexport const createTableRows = ({\n\tteam,\n\tmember,\n\tindicators,\n\tprimaryGroupLabel\n}) => {\n\tconst memberNameCell = {\n\t\tcolumnName: FIRST_COLUMN.columnName,\n\t\tcolumnData: {\n\t\t\tvalue: member.name,\n\t\t\tdisplayValue: member.name\n\t\t},\n\t\tteam,\n\t\tmember,\n\t\tprimaryGroupLabel:\n\t\t\tteam.primaryMembersMap[member.sysId] && primaryGroupLabel\n\t};\n\tconst scoreCells = indicators.map(indicator => {\n\t\tconst score = member.scores[indicator.sysId];\n\t\treturn createCell({ indicator, score, team, member });\n\t});\n\tconst rowData = new Map();\n\tconst highlightedData = new Map();\n\n\t[memberNameCell, ...scoreCells].forEach(cell => {\n\t\trowData.set(cell.columnName, cell);\n\t});\n\n\tconst row = {\n\t\trowData,\n\t\thighlightedData,\n\t\tuniqueId: member.sysId\n\t};\n\n\treturn row;\n};\n\nexport const createTeam = (sysId, name) => {\n\tconst scores = {};\n\tconst primaryMembersMap = {};\n\n\treturn { sysId, name, scores, primaryMembersMap };\n};\n\nexport const createMemberFromJson = ({ breakdowns, scores }) => {\n\tconst [sysId, { display_value: name }] = Object.entries(breakdowns)[0];\n\treturn { sysId, name, scores };\n};\n\nexport const createIndicatorFromJson = ({\n\tsys_id,\n\tkpi,\n\tlabel,\n\tdisplay_aggregate\n}) => {\n\tconst factsTableView = get(\n\t\tkpi,\n\t\t'_reference.cube._reference.facts_table_pkview.value',\n\t\t''\n\t);\n\n\tlet factsTable = get(\n\t\tkpi,\n\t\t'_reference.cube._reference.facts_table_pktable.value',\n\t\t''\n\t);\n\n\tif (isEmpty(factsTable)) {\n\t\tfactsTable = get(\n\t\t\tkpi,\n\t\t\t'_reference.cube._reference.facts_table.value',\n\t\t\t''\n\t\t);\n\t}\n\n\treturn {\n\t\tsysId: kpi.sysId,\n\t\tname: label.displayValue,\n\t\tdisplayAggregate: display_aggregate.value,\n\t\tm2mSysId: sys_id.value,\n\t\tfactsTableView,\n\t\tfactsTable\n\t};\n};\n","import { createSelector } from 'reselect';\nimport { t } from 'sn-translate';\nimport { getScoreByDisplayAggregate } from '../../utils/teamUtils';\nimport { createTableColumns, createTableRows, createCell } from './utils';\nimport { getUserDateFormat } from '../../common/selectors';\nimport { formatDateRange } from '../../utils/dateUtils';\nimport { API_DATE_FORMAT, SCORE_NA_LABEL } from '../../common/constants';\nimport { STATUS } from './constants';\nimport customCellRenderer from './customRenderers';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport isEmpty from 'lodash/isEmpty';\nimport * as commonSelectors from '../../common/selectors';\n\nconst commonTableProps = {\n\thideCellFilter: true,\n\thideCheckboxHover: true,\n\thideColumnFiltering: true,\n\thideColumnGrouping: true,\n\thideColumnSorting: true,\n\thideColumnResizing: true,\n\thideRowSelector: true,\n\thideSelectAll: true,\n\thideQuickEdit: true\n};\n\nexport const getTeam = state => state.team;\n\nexport const getMember = state => state.member;\n\nexport const getMembers = state => state.members;\n\nexport const getIndicator = state => state.indicator;\n\nexport const getParentIndicators = state => state.parentIndicators;\n\nexport const getChildIndicators = state => state.childIndicators;\n\nexport const getSelectedDate = state => state.selectedDate;\n\nexport const getPagination = state => state.pagination;\n\nexport const getStatus = state => state.status;\n\nexport const getDateRange = state => state.properties.dateRange;\n\nexport const getPrimaryGroupLabel = state => state.properties.primaryGroupLabel;\n\nexport const getPrimaryBreakdown = () => {\n\treturn commonSelectors.getAssignmentGroupBreakdown();\n};\n\nexport const getSecondaryBreakdown = () => {\n\treturn commonSelectors.getAssignedToBreakdown();\n};\n\nexport const isMemberPropProvided = state =>\n\t!isEmpty(state.properties.member) && state.properties.member !== '-1';\n\nexport const getHeadingText = createSelector(\n\tgetTeam,\n\tgetMember,\n\tgetIndicator,\n\t(team, member, indicator) => {\n\t\tconst teamOrMemberName = isEmpty(member) ? team.name : member.name;\n\t\tconst indicatorName = isEmpty(indicator) ? '' : indicator.name;\n\n\t\treturn isEmpty(teamOrMemberName) && isEmpty(indicatorName)\n\t\t\t? null\n\t\t\t: t('{0} - {1}', [teamOrMemberName, indicatorName]);\n\t}\n);\n\nexport const getUuidString = createSelector(\n\tgetTeam,\n\tgetMember,\n\tgetIndicator,\n\tgetPrimaryBreakdown,\n\tgetSecondaryBreakdown,\n\t(team, member, indicator, primaryBreakdown, secondaryBreakdown) => {\n\t\tlet uuid = `${indicator.sysId}:${primaryBreakdown}:${team.sysId}`;\n\n\t\tif (!isEmpty(member)) {\n\t\t\tuuid += `:${secondaryBreakdown}:${member.sysId}`;\n\t\t}\n\n\t\treturn uuid;\n\t}\n);\n\nexport const getUuidObject = createSelector(\n\tgetTeam,\n\tgetMember,\n\tgetIndicator,\n\tgetPrimaryBreakdown,\n\tgetSecondaryBreakdown,\n\t(team, member, indicator, primaryBreakdown, secondaryBreakdown) => {\n\t\tconst uuid = {\n\t\t\tindicator: indicator.sysId,\n\t\t\tbreakdowns: [\n\t\t\t\t{\n\t\t\t\t\tsys_id: primaryBreakdown,\n\t\t\t\t\telement_sys_ids: [team.sysId]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tif (!isEmpty(member)) {\n\t\t\tuuid.breakdowns.push({\n\t\t\t\tsys_id: secondaryBreakdown,\n\t\t\t\telement_sys_ids: [member.sysId]\n\t\t\t});\n\t\t}\n\n\t\treturn uuid;\n\t}\n);\n\nexport const getSingleScoreValue = createSelector(\n\tgetTeam,\n\tgetMember,\n\tgetIndicator,\n\t(team, member, indicator) => {\n\t\tconst score = get(\n\t\t\tisEmpty(member) ? team : member,\n\t\t\t`scores[${indicator.sysId}]`,\n\t\t\t{}\n\t\t);\n\n\t\tconst { displayValue } = getScoreByDisplayAggregate(\n\t\t\tindicator.displayAggregate,\n\t\t\tscore\n\t\t);\n\n\t\treturn displayValue || SCORE_NA_LABEL;\n\t}\n);\n\nexport const getTimeSeriesChartDataConfig = createSelector(\n\tgetUuidObject,\n\tgetDateRange,\n\t(uuid, dateRange) => {\n\t\t// only show forecast line if end date is yesterday\n\t\tconst momentEnd = moment(dateRange.end, API_DATE_FORMAT);\n\t\tconst yesterday = moment().subtract(1, 'day');\n\t\tconst includeForecast = momentEnd.isSameOrAfter(yesterday, 'day');\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tuuid,\n\t\t\t\tsource_type: 'analytics',\n\t\t\t\tstart_time: dateRange.start,\n\t\t\t\tend_time: dateRange.end,\n\t\t\t\tinclude_statistics: true,\n\t\t\t\tinclude_trend: true,\n\t\t\t\tinclude_scores: true,\n\t\t\t\tinclude_forecast: includeForecast\n\t\t\t}\n\t\t];\n\t}\n);\n\nexport const getMemberIndicators = createSelector(\n\tgetIndicator,\n\tgetChildIndicators,\n\t(indicator, childIndicators) => [indicator].concat(childIndicators)\n);\n\nexport const getMemberScoreTableColumns = createSelector(\n\tgetMemberIndicators,\n\tcreateTableColumns\n);\n\nexport const getMemberScoreTableRows = createSelector(\n\tgetTeam,\n\tgetMember,\n\tgetMemberIndicators,\n\t(team, member, indicators) => {\n\t\tconst rows = new Map();\n\t\trows.set(member.sysId, createTableRows({ team, member, indicators }));\n\t\treturn rows;\n\t}\n);\n\nexport const getMemberScoreTableModel = createSelector(\n\tgetMemberScoreTableColumns,\n\tgetMemberScoreTableRows,\n\t(columns, rows) => {\n\t\tconst allColumns = columns;\n\t\tconst layoutQuery = {\n\t\t\tcount: rows.size,\n\t\t\tqueryRows: rows,\n\t\t\tencodedQuery: new Date().getTime() // this will make now-treegrid refresh\n\t\t};\n\t\tconst tableMetadata = {\n\t\t\tisGrouped: false\n\t\t};\n\n\t\treturn {\n\t\t\tallColumns,\n\t\t\tlayoutQuery,\n\t\t\ttableMetadata\n\t\t};\n\t}\n);\n\nexport const getMemberScoreTableProps = createSelector(\n\tgetMemberScoreTableModel,\n\tgridModel => ({\n\t\t...commonTableProps,\n\t\thidePagination: true,\n\t\tgridModel,\n\t\tcustomCellRenderer\n\t})\n);\n\nexport const getRecordTableProps = createSelector(\n\tgetIndicator,\n\tgetDateRange,\n\tgetSelectedDate,\n\tgetUuidString,\n\t(indicator, dateRange, selectedDate, uuid) => {\n\t\tlet query = '';\n\n\t\tif (selectedDate) {\n\t\t\tquery = `sys_idINjavascript:new PAUtils().getEncodedSnapshotQuery('${uuid}','${selectedDate}','','','','')`;\n\t\t} else {\n\t\t\tquery = `sys_idINjavascript:new sn_team_perf.TeamUtils().getPARecordsForDateRange('${uuid}', '${dateRange.start}', '${dateRange.end}')`;\n\t\t}\n\n\t\treturn {\n\t\t\ttable: indicator.factsTable,\n\t\t\tview: indicator.factsTableView,\n\t\t\tquery,\n\t\t\thideHeader: true,\n\t\t\thideRowSelector: true\n\t\t};\n\t}\n);\n\nexport const getTeamIndicators = createSelector(\n\tgetIndicator,\n\tgetParentIndicators,\n\tgetChildIndicators,\n\t(indicator, parentIndicators, childIndicators) => {\n\t\tconst indicators = parentIndicators.concat(childIndicators);\n\n\t\tif (!isEmpty(indicator)) {\n\t\t\tindicators.unshift(indicator);\n\t\t}\n\n\t\treturn indicators;\n\t}\n);\n\nexport const getTeamScoreGridColumns = createSelector(\n\tgetTeamIndicators,\n\tcreateTableColumns\n);\n\nexport const getTeamScoreGridGroup = createSelector(\n\tgetTeam,\n\tgetMembers,\n\tgetTeamIndicators,\n\tgetPrimaryGroupLabel,\n\t(team, members, indicators, primaryGroupLabel) => {\n\t\tconst summaryRow = new Map();\n\t\tconst summaryRowData = new Map();\n\t\tconst groupRows = new Map();\n\n\t\t// create summary row\n\t\tindicators.forEach(indicator => {\n\t\t\tconst score = team.scores[indicator.sysId];\n\t\t\tconst cell = createCell({ indicator, score, team });\n\t\t\tsummaryRowData.set(indicator.sysId, cell);\n\t\t});\n\n\t\tsummaryRow.set(team.sysId, {\n\t\t\trowData: summaryRowData\n\t\t});\n\n\t\t// create member rows\n\t\tmembers.forEach(member => {\n\t\t\tgroupRows.set(\n\t\t\t\tmember.sysId,\n\t\t\t\tcreateTableRows({\n\t\t\t\t\tteam,\n\t\t\t\t\tmember,\n\t\t\t\t\tindicators,\n\t\t\t\t\tprimaryGroupLabel\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\n\t\tconst group = {\n\t\t\tsummaryRow,\n\t\t\tgroupRows,\n\t\t\tvalue: team.sysId,\n\t\t\tdisplayValue: team.name,\n\t\t\tcount: groupRows.size\n\t\t};\n\n\t\treturn group;\n\t}\n);\n\nexport const getTeamScoreGridModel = createSelector(\n\tgetTeamScoreGridColumns,\n\tgetTeamScoreGridGroup,\n\t(columns, group) => {\n\t\tconst allColumns = columns;\n\t\tconst layoutQuery = {\n\t\t\tqueryRows: new Map([[group.value, group]]),\n\t\t\tcount: group.count,\n\t\t\tencodedQuery: new Date().getTime() // this will make now-treegrid refresh\n\t\t};\n\t\tconst tableMetadata = {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false\n\t\t};\n\t\tconst preferenceData = [{ name: 'defaultAsOpen', value: 'true' }];\n\n\t\treturn {\n\t\t\tallColumns,\n\t\t\tlayoutQuery,\n\t\t\ttableMetadata,\n\t\t\tpreferenceData\n\t\t};\n\t}\n);\n\nexport const getTeamScoreTableProps = createSelector(\n\tgetTeamScoreGridModel,\n\tgetStatus,\n\tgetPagination,\n\t(gridModel, status, pagination) => {\n\t\tconst loading =\n\t\t\tstatus === STATUS.scoresLoading ||\n\t\t\tstatus === STATUS.primaryMembersLoading;\n\t\treturn {\n\t\t\t...commonTableProps,\n\t\t\tpage: pagination.page,\n\t\t\tlimit: pagination.pageSize,\n\t\t\tgridModel,\n\t\t\tloading,\n\t\t\tcustomCellRenderer\n\t\t};\n\t}\n);\n\nexport const getPaginationProps = createSelector(\n\tgetPagination,\n\tpagination => ({\n\t\trecordCount: pagination.rowCount,\n\t\tlimit: pagination.pageSize,\n\t\tpage: pagination.page\n\t})\n);\n\nexport const getDateRangePickerProps = createSelector(\n\tgetDateRange,\n\tgetUserDateFormat,\n\t(dateRange, userDateFormat) => {\n\t\tconst formattedDateRange = formatDateRange(dateRange);\n\n\t\treturn {\n\t\t\tstart: formattedDateRange.start,\n\t\t\tend: formattedDateRange.end,\n\t\t\tformat: userDateFormat\n\t\t};\n\t}\n);\n\nexport const getMemberAvatarProps = createSelector(\n\tgetTeam,\n\tgetMember,\n\t(team, member) => {\n\t\tif (isEmpty(team) || isEmpty(member)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tariaHidden: 'true',\n\t\t\tsize: 'md',\n\t\t\timageSrc: member.avatar ? `/${member.avatar}` : null,\n\t\t\tuserName: member.name\n\t\t};\n\t}\n);\n\nexport const getRecordTableHeading = createSelector(\n\tgetIndicator,\n\tgetSelectedDate,\n\tgetUserDateFormat,\n\t(indicator, selectedDate, userDateFormat) => {\n\t\tif (!selectedDate) {\n\t\t\treturn indicator.name;\n\t\t}\n\n\t\tconst formattedDate = moment(selectedDate, 'YYYY-MM-DD').format(\n\t\t\tuserDateFormat\n\t\t);\n\t\tconst heading = t('{0} - {1}', [indicator.name, formattedDate]);\n\t\treturn heading;\n\t}\n);\n","import { DEFAULT_PAGE_SIZE, STATUS } from './constants';\n\nexport default {\n\tteam: {},\n\tmember: {},\n\tindicator: {},\n\tparentIndicators: [],\n\tchildIndicators: [],\n\tmembers: [],\n\tselectedDate: null,\n\tstatus: STATUS.initial,\n\tpagination: {\n\t\trowCount: 0,\n\t\tpageSize: DEFAULT_PAGE_SIZE,\n\t\tpage: 1\n\t},\n\terror: null\n};\n","import { t } from 'sn-translate';\nimport {\n\tALL_WORK_ITEMS_DEFAULT_COLUMN,\n\tRECORD_LIST_TYPE_AGENT,\n\tRECORD_LIST_TYPE_QUEUE\n} from '../common/constants';\n\nexport const FETCH_REPORTS = 'FETCH_REPORTS';\nexport const FETCH_REPORTS_SUCCESS = 'FETCH_REPORTS_SUCCESS';\nexport const FETCH_ALL_KPI_REPORTCONFIG = 'FETCH_ALL_KPI_REPORTCONFIG';\nexport const FETCH_KPI_REPORTCONFIG = 'FETCH_KPI_REPORTCONFIG';\nexport const FETCH_KPI_REPORTCONFIG_SUCCESS = 'FETCH_KPI_REPORTCONFIG_SUCCESS';\nexport const FFETCH_INTERACTIVE_REFERENCE_FIELD =\n\t'FETCH_INTERACTIVE_REFERENCE_FIELD';\nexport const FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS =\n\t'FETCH_INTERACTIVE_REFERENCE_FIELD';\nexport const FETCH_QUEUES_IDS = 'FETCH_QUEUES_IDS';\nexport const FETCH_QUEUES_IDS_SUCCESS = 'FETCH_QUEUES_IDS_SUCCESS';\nexport const ERROR_OCCURED = 'ERROR_OCCURED';\n\nexport const QUEUES = 'QUEUES';\nexport const AGENTS = 'AGENTS';\nexport const WORK_ITEMS = 'WORK_ITEMS';\nexport const CHANNEL_DEFAULT_TAB_ITEMS = [\n\t{ id: WORK_ITEMS, label: t('Queued Work') },\n\t{ id: QUEUES, label: t('Queues') },\n\t{ id: AGENTS, label: t('Agents') }\n];\nexport const CHANNEL_DEFAULT_TAB_LIST_DETAILS = {\n\tWORK_ITEMS: {\n\t\ttable: 'awa_work_item',\n\t\tcolumns: ALL_WORK_ITEMS_DEFAULT_COLUMN,\n\t\tquery: '',\n\t\tlistTitle: t('Queued Work')\n\t},\n\tQUEUES: {\n\t\tlistTitle: t('Queues'),\n\t\tisCustomList: true,\n\t\ttype: RECORD_LIST_TYPE_QUEUE\n\t},\n\tAGENTS: {\n\t\tlistTitle: t('Agents'),\n\t\tisCustomList: true,\n\t\ttype: RECORD_LIST_TYPE_AGENT\n\t}\n};\nexport const FETCH_CHANNEL_SUPERVISOR_VIEW = 'FETCH_CHANNEL_SUPERVISOR_VIEW';\nexport const FETCH_CHANNEL_SUPERVISOR_VIEW_SUCCESS =\n\t'FETCH_CHANNEL_SUPERVISOR_VIEW_SUCCESS';\nexport const FETCH_CHANNEL_SUPERVISOR_VIEW_ERROR =\n\t'FETCH_CHANNEL_SUPERVISOR_VIEW_ERROR';\nexport const FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD =\n\t'FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD';\nexport const FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS =\n\t'FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS';\n","import {\n\tNUMBER,\n\tSHORT_DESC,\n\tQUEUE,\n\tOPENED_FOR,\n\tPRIORITY,\n\tHELP_REQUESTED,\n\tWAIT_TIME,\n\tSTATE,\n\tUPDATED_AT,\n\tASSIGNMENT_GROUP,\n\tNUMBER_LABEL,\n\tSHORT_DESC_LABEL,\n\tQUEUE_LABEL,\n\tOPENED_FOR_LABEL,\n\tPRIORITY_LABEL,\n\tHELP_REQUESTED_LABEL,\n\tWAIT_TIME_LABEL,\n\tSTATE_LABEL,\n\tUPDATED_AT_LABEL,\n\tASSIGNMENT_GROUP_LABEL,\n\tSTRING,\n\tPAGINATION_PAGE_UPDATE,\n\tPAGINATION_LIMIT_UPDATE,\n\tREFERENCE,\n\tDOC_TABLE,\n\tDOCUMENT_ID,\n\tDOCUMENT,\n\tTABLE_NAME,\n\tSYS_ID,\n\tTITLE,\n\tACTIVE_WORK_REFRESH_REQUESTED\n} from './constants';\nimport { setUserPreference } from 'sn-user-preferences';\nimport isEqual from 'lodash/isEqual';\n\nexport const buildGridModel = (data, rowCount) => {\n\tconst model = {\n\t\tallColumns: columns,\n\t\tlayoutQuery: {\n\t\t\tallSysIds: getAllSysIds(data),\n\t\t\tcount: rowCount,\n\t\t\torderByColumn: '',\n\t\t\torderByIsDescending: false,\n\t\t\tencodedQuery: '',\n\t\t\tqueryRows: queryRows(data)\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false,\n\t\t\tisDBView: false,\n\t\t\tisScriptableTable: false\n\t\t}\n\t};\n\treturn model;\n};\n\nconst queryRows = data => {\n\tlet queryRowsMap = new Map();\n\tdata.forEach(temp => {\n\t\tqueryRowsMap.set(temp.documentId, {\n\t\t\tuniqueId: temp.documentId,\n\t\t\tdisplayValue: temp.documentId,\n\t\t\thighlightedData: new Map(),\n\t\t\tdbViewData: new Map(),\n\t\t\trowData: getRowData(temp)\n\t\t});\n\t});\n\treturn queryRowsMap;\n};\n\nconst getAllSysIds = data => {\n\tlet sysIds = [];\n\tdata.forEach(temp => {\n\t\tsysIds.push(temp.documentId);\n\t});\n\treturn sysIds;\n};\n\nconst columns = new Map([\n\t[\n\t\tDOCUMENT_ID,\n\t\t{\n\t\t\tcolumnName: DOCUMENT_ID,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: NUMBER_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\telementSysId: SYS_ID,\n\t\t\t\tinternalType: REFERENCE,\n\t\t\t\ttableName: DOC_TABLE\n\t\t\t},\n\t\t\tinternalType: REFERENCE\n\t\t}\n\t],\n\t[\n\t\tSHORT_DESC,\n\t\t{\n\t\t\tcolumnName: SHORT_DESC,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: SHORT_DESC_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tQUEUE,\n\t\t{\n\t\t\tcolumnName: QUEUE,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: QUEUE_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tOPENED_FOR,\n\t\t{\n\t\t\tcolumnName: OPENED_FOR,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: OPENED_FOR_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tPRIORITY,\n\t\t{\n\t\t\tcolumnName: PRIORITY,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: PRIORITY_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tHELP_REQUESTED,\n\t\t{\n\t\t\tcolumnName: HELP_REQUESTED,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: HELP_REQUESTED_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tWAIT_TIME,\n\t\t{\n\t\t\tcolumnName: WAIT_TIME,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: WAIT_TIME_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tSTATE,\n\t\t{\n\t\t\tcolumnName: STATE,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: STATE_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tUPDATED_AT,\n\t\t{\n\t\t\tcolumnName: UPDATED_AT,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: UPDATED_AT_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\tASSIGNMENT_GROUP,\n\t\t{\n\t\t\tcolumnName: ASSIGNMENT_GROUP,\n\t\t\tcolumnData: {\n\t\t\t\tlabel: ASSIGNMENT_GROUP_LABEL,\n\t\t\t\tisFilterable: false,\n\t\t\t\tisSortable: false,\n\t\t\t\tisGroupable: false,\n\t\t\t\tisChoice: false,\n\t\t\t\tinternalType: STRING\n\t\t\t}\n\t\t}\n\t]\n]);\n\nconst getRowData = data => {\n\treturn new Map([\n\t\t[\n\t\t\tDOCUMENT_ID,\n\t\t\t{\n\t\t\t\tcolumnName: DOCUMENT_ID,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[NUMBER],\n\t\t\t\t\tvalue: data[DOCUMENT],\n\t\t\t\t\tdocumentIdReference: data[TABLE_NAME]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tSHORT_DESC,\n\t\t\t{\n\t\t\t\tcolumnName: SHORT_DESC,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[SHORT_DESC],\n\t\t\t\t\tvalue: data[SHORT_DESC]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tQUEUE,\n\t\t\t{\n\t\t\t\tcolumnName: QUEUE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[QUEUE],\n\t\t\t\t\tvalue: data[QUEUE]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tOPENED_FOR,\n\t\t\t{\n\t\t\t\tcolumnName: OPENED_FOR,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[OPENED_FOR],\n\t\t\t\t\tvalue: data[OPENED_FOR]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tPRIORITY,\n\t\t\t{\n\t\t\t\tcolumnName: PRIORITY,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[PRIORITY],\n\t\t\t\t\tvalue: data[PRIORITY]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tHELP_REQUESTED,\n\t\t\t{\n\t\t\t\tcolumnName: HELP_REQUESTED,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[HELP_REQUESTED],\n\t\t\t\t\tvalue: data[HELP_REQUESTED]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tWAIT_TIME,\n\t\t\t{\n\t\t\t\tcolumnName: WAIT_TIME,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[WAIT_TIME],\n\t\t\t\t\tvalue: data[WAIT_TIME]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tSTATE,\n\t\t\t{\n\t\t\t\tcolumnName: STATE,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[STATE],\n\t\t\t\t\tvalue: data[STATE]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tUPDATED_AT,\n\t\t\t{\n\t\t\t\tcolumnName: UPDATED_AT,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[UPDATED_AT],\n\t\t\t\t\tvalue: data[UPDATED_AT]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tASSIGNMENT_GROUP,\n\t\t\t{\n\t\t\t\tcolumnName: ASSIGNMENT_GROUP,\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: data[ASSIGNMENT_GROUP],\n\t\t\t\t\tvalue: data[ASSIGNMENT_GROUP]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]);\n};\n\nexport const handlePagination = ({ action, state, dispatch, updateState }) => {\n\tconst pagination = { ...state.pagination };\n\tconst data = state.allActiveWork;\n\tif (action.type == PAGINATION_PAGE_UPDATE) {\n\t\tpagination.page = parseInt(action.payload.page);\n\t} else if (action.type == PAGINATION_LIMIT_UPDATE) {\n\t\tpagination.limit = parseInt(action.payload.limit);\n\t\tpagination.page = Math.min(\n\t\t\tpagination.page,\n\t\t\tMath.ceil(pagination.recordCount / pagination.limit)\n\t\t);\n\t}\n\tif (!isEqual(pagination, state.pagination)) {\n\t\tvar startIndex = (pagination.page - 1) * pagination.limit;\n\t\tvar endIndex = startIndex + pagination.limit;\n\t\tconst pageActiveWorkData = data.slice(startIndex, endIndex);\n\t\tupdateState({\n\t\t\tgridProps: buildGridModel(pageActiveWorkData, data.length),\n\t\t\tpagination: pagination,\n\t\t\tpaginatedActiveWork: pageActiveWorkData\n\t\t});\n\t\tif (action.type == PAGINATION_LIMIT_UPDATE) {\n\t\t\tsetUserPreference('rowcount', pagination.limit, dispatch);\n\t\t}\n\t}\n};\n\nexport const buildPaginationModel = rowCount => {\n\tconst DEFAULT_LIMIT = 20;\n\tconst DEFAULT_PAGE = 1;\n\treturn {\n\t\trecordCount: rowCount,\n\t\tpage: DEFAULT_PAGE,\n\t\tlimit: DEFAULT_LIMIT\n\t};\n};\n\nexport const getHeaderProps = state => {\n\tconst { rowCount, dataUpdatedTime } = state;\n\treturn {\n\t\theaderLabel: TITLE,\n\t\trowCount: rowCount,\n\t\tisButtonEnabled: false,\n\t\tdataUpdatedTime: dataUpdatedTime,\n\t\trefreshEvent: ACTIVE_WORK_REFRESH_REQUESTED\n\t};\n};\n","import { t } from 'sn-translate';\n\nexport const FETCH_ACTIVE_WORK = 'ACTIVE_WORK#FETCH_ACTIVE_WORK';\nexport const FETCH_ACTIVE_WORK_SUCCEEDED =\n\t'ACTIVE_WORK#FETCH_ACTIVE_WORK_SUCCEEDED';\nexport const FETCH_ACTIVE_WORK_FAILED = 'ACTIVE_WORK#FETCH_ACTIVE_WORK_FAILED';\nexport const PAGINATION_LIMIT_UPDATE = 'NOW_PAGINATION#LIMIT_UPDATE';\nexport const PAGINATION_PAGE_UPDATE = 'NOW_PAGINATION#PAGE_UPDATE';\nexport const ACTIVE_WORK_REFRESH_REQUESTED =\n\t'ACTIVE_WORK_REFRESH_REQUESTED#ACTIVE_WORK_REFRESH_REQUESTED';\nexport const OPEN_RECORD = 'OPEN_RECORD';\nexport const ITEM_SELECTED = 'ITEM_SELECTED';\nexport const NOW_BUTTON_CLICKED = 'NOW_BUTTON#CLICKED';\n\nexport const NUMBER = 'number';\nexport const DOCUMENT_ID = 'document_id';\nexport const SHORT_DESC = 'shortDesc';\nexport const QUEUE = 'queue';\nexport const OPENED_FOR = 'openedFor';\nexport const PRIORITY = 'priority';\nexport const HELP_REQUESTED = 'helpRequested';\nexport const WAIT_TIME = 'waitTime';\nexport const STATE = 'state';\nexport const UPDATED_AT = 'updatedAt';\nexport const ASSIGNMENT_GROUP = 'assignmentGroup';\nexport const DOCUMENT = 'documentId';\nexport const TABLE_NAME = 'tableName';\nexport const SYS_ID = 'sys_id';\n\nexport const NUMBER_LABEL = t('Number');\nexport const SHORT_DESC_LABEL = t('Short Description');\nexport const QUEUE_LABEL = t('Queue');\nexport const OPENED_FOR_LABEL = t('Opened For');\nexport const PRIORITY_LABEL = t('Priority');\nexport const HELP_REQUESTED_LABEL = t('Help Requested');\nexport const WAIT_TIME_LABEL = t('Wait Time');\nexport const STATE_LABEL = t('State');\nexport const UPDATED_AT_LABEL = 'Updated';\nexport const ASSIGNMENT_GROUP_LABEL = t('Assignment Group');\nexport const STRING = 'String';\nexport const REFERENCE = 'reference';\nexport const DOC_TABLE = 'document_table';\nexport const TITLE = t('Active Work');\n\nexport const AGENTS_ACTIVE_WORK_ENDPOINT =\n\t'api/sn_channel_mgmt/awa_channel_management_active_work_api/getAgentsActiveWork/agent/:agentId';\n","export { default as managerHome } from './main/components/home/sn-manager-home';\nexport {\n\tdefault as channelOverviewContainer\n} from './main/components/channels/sn-manager-channel-overview-container';\nexport {\n\tdefault as managerQueueDetails\n} from './main/components/channels/sn-manager-queue-details-container';\nexport {\n\tdefault as managerSchedule\n} from './main/components/schedule/sn-manager-schedule';\n\nexport {\n\tdefault as managerSchedulePreview\n} from './main/components/schedule/sn-manager-schedule-preview';\n\nexport {\n\tdefault as managerAgentSchedule\n} from './main/components/schedule/sn-manager-agent-schedule';\nexport {\n\tdefault as managerTeams\n} from './main/components/teams/sn-manager-teams';\nexport {\n\tdefault as managerCoaching\n} from './main/components/coaching/sn-manager-coaching';\nexport {\n\tdefault as managerCoachingAssessment\n} from './main/components/coaching/sn-manager-coaching-assessment';\nexport {\n\tdefault as managerRecords\n} from './main/components/records/sn-manager-records';\nexport {\n\tdefault as managerUserOverview\n} from './main/components/teams/sn-manager-user-overview';\nexport {\n\tdefault as managerUserDetails\n} from './main/components/teams/sn-manager-user-details';\nexport {\n\tdefault as managerUserScheduleContainer\n} from './main/components/teams/sn-manager-user-schedule-container';\nexport {\n\tdefault as managerTeamPerformance\n} from './main/components/teams/sn-manager-team-performance';\nexport {\n\tdefault as managerTeamDrilldown\n} from './main/components/teams/sn-manager-team-drilldown';\nexport {\n\tdefault as approvalRequest\n} from './main/components/common/sn-manager-approval-request';\nexport {\n\tdefault as channelDetailsContainer\n} from './main/components/channels/sn-manager-channel-details-container';\nexport {\n\tdefault as trainingArticle\n} from './main/components/common/sn-manager-training-article';\nexport {\n\tdefault as coachingAssignedTraining\n} from './main/components/coaching/sn-manager-coaching-assigned-training';\nexport {\n\tdefault as overlappingRequests\n} from './main/components/schedule/sn-manager-overlapping-requests';\nexport {\n\tdefault as agentsActiveWork\n} from './main/components/channels/sn-manager-user-active-work-container';\nexport {\n\tdefault as agentsCurrentWork\n} from './main/components/channels/sn-manager-user-current-work-container';\nexport {\n\tdefault as agentsChannels\n} from './main/components/channels/sn-manager-user-channels-container';\nexport {\n\tdefault as agentsCapacityOverride\n} from './main/components/channels/sn-manager-user-override-capacity';\nexport {\n\tdefault as agentsPendingWork\n} from './main/components/channels/sn-manager-user-pending-work-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\n\nconst view = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Manager Home</h2>\n\t\t</div>\n\t);\n};\n\nexport default createCustomElement('sn-manager-home', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"pre{white-space:pre-wrap;white-space:-moz-pre-wrap;white-space:-pre-wrap;white-space:-o-pre-wrap;word-wrap:break-word}\", \"\"]);\n\n// exports\n","import './channel-overview-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport { getProperty } from 'sn-uxpage-presource';\nimport {\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_RENDERED,\n\tCOMPONENT_BOOTSTRAPPED\n} from '@servicenow/ui-core/lib/constants';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { get } from 'lodash';\nimport {\n\tfetchQueuesAndAgentsIds,\n\tfetchQueuesAndAgentsIdsSuccess,\n\tqueryGroupQueueData,\n\tfetchGroupChannelQueueMapping,\n\tfetchGroupChannelQueueMappingSuccess,\n\tupdateDefaultSortOrderEffect,\n\tupdateFiltersEffect,\n\tfiltersAppliedEffect\n} from './actionHandlers';\n\nimport {\n\tFETCH_QUEUES_AND_AGENTS_IDS,\n\tFETCH_QUEUES_AND_AGENTS_IDS_SUCCESS,\n\tFETCH_QUEUES_AND_AGENTS_IDS_ERROR,\n\tFETCH_GROUP_CHANEL_QUEUE_MAPPING,\n\tFETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS\n} from './constants';\n\nimport {\n\tUSER_GROUP_ACTIONS,\n\tAPPLIED_FILTERS_OBJECT\n} from '../../common/constants';\nimport {\n\tUPDATE_DEFAULT_SORT_ORDER,\n\tUPDATE_FILTERS,\n\tSYS_PROP_FILTER_CONFIG_ENABLE\n} from '../common/constants';\nimport { PAGE } from '../common/constants';\nimport { getFilterDetails, hasFilterChanged } from '../common/helpers';\n\nexport default createCustomElement('sn-manager-channel-overview-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tchannels: undefined,\n\t\tkpiScores: undefined,\n\t\tqueuesIds: [],\n\t\trenderOverviewTabs: false,\n\t\trenderUserGroupFetcher: true,\n\t\trenderOverviewKpiContainer: false,\n\t\tisRefreshRequested: false,\n\t\trenderFilter: false,\n\t\tuseDefaultSortOrder: {\n\t\t\tAGENT: true,\n\t\t\tQUEUE: true\n\t\t},\n\t\tuseDefaultFilters: {\n\t\t\tAGENT: true,\n\t\t\tQUEUE: true\n\t\t},\n\t\tintervalId: '',\n\t\tisRequestCompleted: true,\n\t\tassignmentGroups: '',\n\t\tshowFilter: true\n\t},\n\tproperties: {\n\t\tactive: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\tstyles,\n\tactionHandlers: {\n\t\t[FETCH_QUEUES_AND_AGENTS_IDS]: fetchQueuesAndAgentsIds,\n\t\t[FETCH_QUEUES_AND_AGENTS_IDS_SUCCESS]: fetchQueuesAndAgentsIdsSuccess,\n\t\t[FETCH_QUEUES_AND_AGENTS_IDS_ERROR]: logErrorEffect,\n\t\t[USER_GROUP_ACTIONS.GROUPS_READY]: queryGroupQueueData,\n\t\t[COMPONENT_PROPERTY_CHANGED]: ({ action, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { name, value }\n\t\t\t} = action;\n\t\t\tif (name == 'active' && value) {\n\t\t\t\tupdateState({ isRefreshRequested: true });\n\t\t\t} else if (name == 'active' && !value) {\n\t\t\t\tupdateState({ isRefreshRequested: false });\n\t\t\t}\n\t\t},\n\t\t[COMPONENT_RENDERED]: ({ state, updateState, dispatch }) => {\n\t\t\tconst assignmentGroups = get(state, 'assignmentGroups').split(',');\n\t\t\tif (\n\t\t\t\tstate.renderFilter &&\n\t\t\t\thasFilterChanged(PAGE.OVERVIEW, '', assignmentGroups)\n\t\t\t) {\n\t\t\t\tconst { selectedGroups } = getFilterDetails(PAGE.OVERVIEW, '');\n\t\t\t\tconst selectedGroupsCount = selectedGroups.length;\n\t\t\t\tdispatch(\n\t\t\t\t\tAPPLIED_FILTERS_OBJECT,\n\t\t\t\t\tselectedGroupsCount\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\tsn_wfo_manager_groups: {\n\t\t\t\t\t\t\t\tgrmember_group: selectedGroups\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  } // eslint-disable-line\n\t\t\t\t\t\t: { sn_wfo_manager_groups: {} }\n\t\t\t\t);\n\t\t\t}\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultSortOrder.AGENT',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultSortOrder.QUEUE',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultFilters.AGENT',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultFilters.QUEUE',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t},\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ updateState }) => {\n\t\t\tconst showFilter = getProperty(SYS_PROP_FILTER_CONFIG_ENABLE, true);\n\t\t\tupdateState({ showFilter: showFilter });\n\t\t},\n\t\t[UPDATE_DEFAULT_SORT_ORDER]: updateDefaultSortOrderEffect,\n\t\t[UPDATE_FILTERS]: updateFiltersEffect,\n\t\t[APPLIED_FILTERS_OBJECT]: filtersAppliedEffect,\n\t\t[FETCH_GROUP_CHANEL_QUEUE_MAPPING]: fetchGroupChannelQueueMapping,\n\t\t[FETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS]: fetchGroupChannelQueueMappingSuccess\n\t}\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.channels-header{display:flex;justify-content:space-between;padding:1.5rem;min-height:80px}.channels-header sn-manager-filter-config{height:2.8125rem;margin-top:-4px}.channels-overview-tabs{margin-top:2.5rem;height:100%}.channel-overview-container{height:100%;display:flex;flex-direction:column}\", \"\"]);\n\n// exports\n","import '@servicenow/now-heading';\nimport '../sn-manager-channel-indicators';\nimport { t } from 'sn-translate';\nimport '../sn-manager-channels-tabs';\nimport { TAB_ITEMS, TAB_LIST_DETAILS, ALL_WORK_ITEMS } from './constants';\nimport '../../common/dataproviders/sn-manager-user-groups/sn-manager-user-groups';\nimport { preUserData } from 'sn-uxpage-presource';\nimport '../../common/sn-manager-filter-config';\nimport { getWorkItemDefaultQuery, getFilterDetails } from '../common/helpers';\nimport { CHANNELS_MODULE_SYSID } from '../../common/constants';\nimport 'sn-component-filter';\nimport { PAGE } from '../common/constants';\n\nconst _renderUserGroupFetcher = user => {\n\treturn (\n\t\t<sn-manager-user-groups\n\t\t\toptions={{\n\t\t\t\tforManagedGroups: true,\n\t\t\t\tuser\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst _renderChannelsOverviewTabs = state => {\n\tconst {\n\t\tqueuesIds,\n\t\tassignmentGroups,\n\t\tisRefreshRequested,\n\t\tuseDefaultSortOrder,\n\t\tuseDefaultFilters\n\t} = state;\n\tconst allQueuesIds = queuesIds.join(',');\n\tTAB_LIST_DETAILS.ALL_WORK_ITEMS.query = getWorkItemDefaultQuery(\n\t\t'',\n\t\tallQueuesIds,\n\t\tassignmentGroups\n\t);\n\n\treturn (\n\t\t<div className=\"channels-overview-tabs\">\n\t\t\t<sn-manager-channels-tabs\n\t\t\t\ttabItems={TAB_ITEMS}\n\t\t\t\ttabListDetails={TAB_LIST_DETAILS}\n\t\t\t\tselectedTab={ALL_WORK_ITEMS}\n\t\t\t\tassignmentGroups={assignmentGroups}\n\t\t\t\tisRefreshRequested={isRefreshRequested}\n\t\t\t\tuseDefaultSortOrder={useDefaultSortOrder}\n\t\t\t\tuseDefaultFilters={useDefaultFilters}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst _getFilterRelatedData = () => {\n\tconst { allGroups, selectedGroups } = getFilterDetails(PAGE.OVERVIEW, '');\n\treturn {\n\t\tfilterQuery: 'sys_idIN' + allGroups,\n\t\tselectedGroups: selectedGroups\n\t};\n};\n\nconst view = state => {\n\tconst heading = t('Channels and Queues');\n\tconst {\n\t\trenderOverviewTabs,\n\t\trenderUserGroupFetcher,\n\t\trenderOverviewKpiContainer,\n\t\trenderFilter,\n\t\tassignmentGroups,\n\t\tshowFilter,\n\t\tisRefreshRequested\n\t} = state;\n\n\tconst userSysId = preUserData.initialState.sys_id;\n\treturn (\n\t\t<div className=\"channel-overview-container\">\n\t\t\t<div className=\"channels-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={heading}\n\t\t\t\t\tvariant=\"header-primary\"\n\t\t\t\t\tclassName=\"header-color\"\n\t\t\t\t\thasNoMargin={true}\n\t\t\t\t/>\n\t\t\t\t{renderFilter && showFilter ? (\n\t\t\t\t\t<sn-manager-filter-config\n\t\t\t\t\t\tsysId={CHANNELS_MODULE_SYSID}\n\t\t\t\t\t\tshowTitle={false}\n\t\t\t\t\t\toverrideFilterConfig={true}\n\t\t\t\t\t\tfilterRelatedData={_getFilterRelatedData()}\n\t\t\t\t\t\tresetFiltersOption={false}\n\t\t\t\t\t\tshowLoadingIcon={false}\n\t\t\t\t\t></sn-manager-filter-config>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{renderOverviewKpiContainer\n\t\t\t\t? _renderIndicatorCardContainer(\n\t\t\t\t\tassignmentGroups,\n\t\t\t\t\tshowFilter,\n\t\t\t\t\tisRefreshRequested\n\t\t\t\t  ) //eslint-disable-line\n\t\t\t\t: ''}\n\t\t\t{renderOverviewTabs ? _renderChannelsOverviewTabs(state) : ''}\n\t\t\t{renderUserGroupFetcher ? _renderUserGroupFetcher(userSysId) : ''}\n\t\t</div>\n\t);\n};\n\nconst _renderIndicatorCardContainer = (\n\tassignmentGroups,\n\tshowFilter,\n\tisRefreshRequested\n) => {\n\treturn (\n\t\t<sn-manager-channel-indicators\n\t\t\tgroups={assignmentGroups}\n\t\t\tshowFilter={showFilter}\n\t\t\tisRefreshRequested={isRefreshRequested}\n\t\t></sn-manager-channel-indicators>\n\t);\n};\n\nexport default view;\n","import './channel-indicators';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\n\ncreateCustomElement('sn-manager-channel-indicators', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tgroups: {\n\t\t\tdefault: ''\n\t\t},\n\t\tshowFilter: {\n\t\t\tdefault: true\n\t\t},\n\t\tisRefreshRequested: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\tinitialState: {\n\t\tchannels: [],\n\t\tkpiScores: [],\n\t\tintervalId: '',\n\t\tisRequestCompleted: true,\n\t\tisAssignmentGroupUpdated: false\n\t},\n\tactionHandlers,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.kpi-card-overview-container{padding:1.5rem;background:RGB(var(--now-color--neutral-1,246,247,247))}.kpi-card-header{display:flex;justify-content:flex-start}.kpi-card-header now-button{margin-left:auto}.card-header-title{display:flex;flex-direction:column}.card-header-title sn-manager-last-refreshed-text{color:RGB(var(--now-color--neutral-9,99,114,116));font-size:.75rem;margin-top:.25rem}.card-header-title-container{display:flex}.card-header-title-container now-heading{padding-right:.75rem}.card-header-title-container now-icon{padding-top:.125rem}.kpi-card-container{display:flex;flex-wrap:wrap;align-items:baseline}.kpi-card-container sn-manager-indicator-group-card{background-color:RGB(var(--now-color--neutral-0,255,255,255));width:calc(25% - 2.5rem);margin:1.5rem 2.5rem 0 0;min-width:18.75rem}now-empty-state{display:block;align-items:center;flex:1}\", \"\"]);\n\n// exports\n","import { t } from 'sn-translate';\nimport {\n\tCHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT,\n\tCHANNEL_OVERVIEW_EXPAND_COLLAPSE_ID,\n\tREFRESH_OVERVIEW_DATA,\n\tREFRESH_OVERVIEW_DATA_ARIA_CONFIG,\n\tREFRESH_KPI_CARD_CONTAINER\n} from './constants';\nimport '../../common/sn-manager-indicator-group-card';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-collapse';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-empty-state';\nimport { generateCardDataForServiceChannels } from './helpers';\nimport { getSessionData } from '../../utils/utils';\nimport { MODULES } from '../../common/constants';\n\nconst view = (state, dispatch) => {\n\tconst { channels, kpiScores } = state;\n\tconst cardData = generateCardDataForServiceChannels(channels, kpiScores);\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tconst expanded =\n\t\tsessionData.overviewContainerExpanded != undefined\n\t\t\t? sessionData.overviewContainerExpanded\n\t\t\t: !(cardData.length == 0);\n\tconst dataUpdatedTime = Date.now();\n\tconst heading = t('Overview');\n\treturn channels != undefined ? (\n\t\t<div className=\"kpi-card-overview-container\">\n\t\t\t<div className=\"kpi-card-header\">\n\t\t\t\t<div className=\"card-header-title\">\n\t\t\t\t\t<div className=\"card-header-title-container\">\n\t\t\t\t\t\t<now-heading\n\t\t\t\t\t\t\tlabel={heading}\n\t\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t\t\tclassName=\"header-color\"\n\t\t\t\t\t\t\thasNoMargin={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<now-collapse-trigger\n\t\t\t\t\t\t\tcontrols={CHANNEL_OVERVIEW_EXPAND_COLLAPSE_ID}\n\t\t\t\t\t\t\tariaExpanded={expanded}\n\t\t\t\t\t\t\taria-label={getAriaTextForIcon(expanded)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<now-icon\n\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\texpanded\n\t\t\t\t\t\t\t\t\t\t? 'circle-chevron-down-outline'\n\t\t\t\t\t\t\t\t\t\t: 'circle-chevron-up-outline'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t\taria-role=\"button\"\n\t\t\t\t\t\t\t\ton-click={event =>\n\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\tCHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\texpanded,\n\t\t\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ton-keydown={event =>\n\t\t\t\t\t\t\t\t\tevent.keyCode == 13 || event.keyCode == 32\n\t\t\t\t\t\t\t\t\t\t? dispatch(\n\t\t\t\t\t\t\t\t\t\t\tCHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\texpanded,\n\t\t\t\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t  ) // eslint-disable-line\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</now-collapse-trigger>\n\t\t\t\t\t</div>\n\t\t\t\t\t{expanded ? (\n\t\t\t\t\t\t<sn-manager-last-refreshed-text\n\t\t\t\t\t\t\tdataUpdatedTime={dataUpdatedTime}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<now-button\n\t\t\t\t\ttooltip-content={REFRESH_OVERVIEW_DATA}\n\t\t\t\t\tconfig-aria={REFRESH_OVERVIEW_DATA_ARIA_CONFIG}\n\t\t\t\t\ticon-name=\"sync-outline\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\tevent: REFRESH_KPI_CARD_CONTAINER\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<now-collapse\n\t\t\t\tid={CHANNEL_OVERVIEW_EXPAND_COLLAPSE_ID}\n\t\t\t\texpanded={expanded}\n\t\t\t>\n\t\t\t\t<div className=\"kpi-card-container\">\n\t\t\t\t\t{cardData.length != 0 ? (\n\t\t\t\t\t\trenderCards(cardData)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<now-empty-state />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</now-collapse>\n\t\t</div>\n\t) : (\n\t\t''\n\t);\n};\n\nconst renderCards = cardData => {\n\treturn cardData.map(cardItem => {\n\t\tconst element = <sn-manager-indicator-group-card {...cardItem} />;\n\t\treturn element;\n\t});\n};\n\nconst getAriaTextForIcon = expanded => {\n\tlet ariaLabel = '';\n\tariaLabel = expanded\n\t\t? t('Overview Section is in Expanded mode')\n\t\t: t('Overview Section is in Collapsed mode');\n\treturn ariaLabel;\n};\n\nexport default view;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport { CARD_CLICKED, NOW_CARD_CLICKED } from './constants';\nimport defaultProperties from './defaultProperties';\n\nexport default createCustomElement('sn-manager-indicator-group-card', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: defaultProperties,\n\tstyles,\n\tactionHandlers: {\n\t\t[NOW_CARD_CLICKED]: ({ properties, dispatch }) => {\n\t\t\tdispatch(CARD_CLICKED, {\n\t\t\t\tcardId: properties.cardId\n\t\t\t});\n\t\t}\n\t}\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}now-card-header{padding-bottom:.5rem;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214));height:1.5rem}now-highlighted-value{vertical-align:bottom}.indicator-group-card-content{margin-top:1rem;display:flex;flex-direction:column}.indicator-item{margin-bottom:.75rem;display:flex;justify-content:space-between}.indicator-item:last-child{margin-bottom:0}.indicator-item-label{width:70%;line-height:1.25}.indicator-item-label .indicator-item-label-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;font-weight:400;font-size:1rem;margin:0}.indicator-item-value{width:30%;line-height:1.25;display:flex;justify-content:flex-end}.indicator-item-value .indicator-item-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;margin:0;max-width:100%;box-sizing:border-box;font-weight:400;font-size:1rem}.now-card.-fixed{height:215px}.no-indicator-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;line-height:1.25;font-weight:400;font-size:1rem;margin:0}\", \"\"]);\n\n// exports\n","import '@servicenow/now-heading';\nimport '@servicenow/now-card';\nimport '@servicenow/now-button';\nimport '@servicenow/now-highlighted-value';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-empty-state';\n\nimport {\n\tINDICATOR_GROUP_LABEL,\n\tGROUP_LABEL,\n\tINDICATOR_LABEL,\n\tSCORE_LABEL\n} from '../constants';\nimport { isEmpty } from 'lodash';\nimport { t } from 'sn-translate';\n\nconst view = (state, dispatch) => {\n\tconst { properties: props } = state;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"indicator-group-card\"\n\t\t\taria-role=\"tabpanel\"\n\t\t\taria-label={getAriaTextForCard(props)}\n\t\t>\n\t\t\t<now-card\n\t\t\t\tsize=\"lg\"\n\t\t\t\tinteraction=\"click\"\n\t\t\t\tclassName={'now-card -' + props.cardHeight}\n\t\t\t>\n\t\t\t\t<div className=\"indicator-group-card-header\">\n\t\t\t\t\t<now-card-header\n\t\t\t\t\t\theading={{\n\t\t\t\t\t\t\tlabel: props.headerText,\n\t\t\t\t\t\t\tsize: props.headerSize,\n\t\t\t\t\t\t\tlines: props.headerLines,\n\t\t\t\t\t\t\tvariant: props.headerVariant,\n\t\t\t\t\t\t\tunderlined: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{renderMetaInfo(props)}\n\t\t\t\t\t</now-card-header>\n\t\t\t\t</div>\n\n\t\t\t\t{renderKPIs(props, dispatch)}\n\t\t\t</now-card>\n\t\t</div>\n\t);\n};\n\nconst renderKPIs = props => {\n\tconst indicators = props.indicators;\n\tconst noIndicatorLabel = t('No Indicators configured for this Item');\n\treturn props.loadingScores ? (\n\t\t<now-empty-state type=\"loading\" variant=\"small\" bodyText={false} />\n\t) : (\n\t\t<div className=\"indicator-group-card-content\">\n\t\t\t{!isEmpty(indicators) ? (\n\t\t\t\tindicators.map(indicator => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"indicator-item\">\n\t\t\t\t\t\t\t<div className=\"indicator-item-label\">\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\ttitle={indicator.label}\n\t\t\t\t\t\t\t\t\tclassName=\"indicator-item-label-text\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{indicator.label}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"indicator-item-value\">\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\ttitle={indicator.score}\n\t\t\t\t\t\t\t\t\tclassName=\"indicator-item-value-text\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{`${indicator.score} ${indicator.display_unit}`}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<p className=\"no-indicator-label\">{noIndicatorLabel}</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst renderMetaInfo = props => {\n\tif (props.metaType == 'icon') {\n\t\treturn props.headerIcon ? (\n\t\t\t<now-icon slot=\"metadata\" icon={props.headerIcon} />\n\t\t) : null;\n\t} else if (props.metaType == 'label') {\n\t\treturn props.headerHighlightLabel ? (\n\t\t\t<now-highlighted-value\n\t\t\t\tslot=\"metadata\"\n\t\t\t\tlabel={props.headerHighlightLabel}\n\t\t\t\tstatus={props.headerHighlightColor}\n\t\t\t></now-highlighted-value>\n\t\t) : null;\n\t}\n};\n\nconst getAriaTextForCard = props => {\n\tlet ariaLabel = '';\n\tconst itemName = props.headerText;\n\n\tariaLabel = ariaLabel.concat([\n\t\tINDICATOR_GROUP_LABEL,\n\t\tprops.indicatorGroupLabel,\n\t\tGROUP_LABEL,\n\t\titemName,\n\t\t' '\n\t]);\n\tprops.indicators.forEach(indicator => {\n\t\tariaLabel = ariaLabel.concat(\n\t\t\t[\n\t\t\t\tINDICATOR_LABEL,\n\t\t\t\tindicator.label,\n\t\t\t\tSCORE_LABEL,\n\t\t\t\tindicator.score,\n\t\t\t\t' '\n\t\t\t],\n\t\t\t' '\n\t\t);\n\t});\n\treturn ariaLabel;\n};\nexport default view;\n","//constants for sn-manager-indicator-group-card\n\nexport const INDICATOR_GROUP_CARD_PREFIX = 'SN_MANAGER_INDICATOR_GROUP_CARD#';\nexport const CARD_CLICKED = `${INDICATOR_GROUP_CARD_PREFIX}CARD_CLICKED`;\nexport const NOW_CARD_CLICKED = `NOW_CARD#CLICKED`;\n","const indicatorCardProperties = {\n\tmetaType: { default: 'label' },\n\theaderIcon: { default: '' },\n\theaderHighlightLabel: { default: '' },\n\theaderHighlightColor: { default: 'info' },\n\theaderText: { default: '' },\n\theaderVariant: { default: 'secondary' },\n\tindicators: {\n\t\tdefault: []\n\t},\n\tindicatorGroupLabel: {\n\t\tdefault: ''\n\t},\n\tcardId: { default: '-1' },\n\tcardHeight: { default: 'variable' },\n\tloadingScores: { default: false }\n};\n\nexport default indicatorCardProperties;\n","module.exports = __TECTONIC__$servicenow_now_collapse;","import { MAX_REPORTS } from '../sn-manager-channel-overview-container/constants';\n\nconst getScore = (report_id, kpiScores) => {\n\tfor (let i = 0; i < kpiScores.length; i++) {\n\t\tif (kpiScores[i]['report'] == report_id) {\n\t\t\treturn kpiScores[i]['score'];\n\t\t}\n\t}\n\treturn '';\n};\n\nexport const generateCardDataForServiceChannels = (channels, kpiScores) => {\n\tvar cardData = [];\n\tif (channels != undefined) {\n\t\tcardData = channels.map(channel => {\n\t\t\tconst reportData = channel.reports\n\t\t\t\t.slice(0, MAX_REPORTS)\n\t\t\t\t.map(report => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: report.report,\n\t\t\t\t\t\tsys_id: report.report_id,\n\t\t\t\t\t\tscore: getScore(report.report_id, kpiScores),\n\t\t\t\t\t\tdisplay_unit: ''\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tconst singleCard = {};\n\t\t\tsingleCard.headerText = channel.channel;\n\t\t\tsingleCard.indicators = reportData;\n\t\t\tsingleCard.cardId = channel.channel_id;\n\t\t\tsingleCard.cardHeight = 'fixed';\n\t\t\tsingleCard.headerVariant = 'primary';\n\t\t\treturn singleCard;\n\t\t});\n\t}\n\n\treturn cardData;\n};\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { getSessionData, setSessionData } from '../../utils/utils';\nimport { get } from 'lodash';\nimport { MODULES, ITEM_SELECTED } from '../../common/constants';\nimport {\n\tNOW_TABS_BUTTON_CLICKED,\n\tCHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT\n} from './constants';\nimport {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_DISCONNECTED\n} from '@servicenow/ui-core/lib/constants';\nimport {\n\tFETCH_CHANNELS,\n\tFETCH_CHANNELS_SUCCESS,\n\tFETCH_ALL_KPI_SCORES,\n\tFETCH_KPI_SCORE,\n\tFETCH_KPI_SCORE_SUCCESS,\n\tMAX_REPORTS,\n\tERROR_OCCURED,\n\tCARD_CLICKED,\n\tAWA_SERVICE_CHANNEL\n} from '../sn-manager-channel-overview-container/constants';\nimport { getProperty } from 'sn-uxpage-presource';\nimport {\n\tSYS_PROP_CHANNEL_CARD_REFRESH_INTERVAL_SECONDS,\n\tSYS_PROP_CHANNELS_CARD_AUTO_REFRESH_ENABLE\n} from '../common/constants';\nimport logErrorEffect from '../../utils/logErrorEffect';\n\nconst fetchChannels = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/Channels',\n\t{\n\t\tmethod: 'GET',\n\t\tqueryParams: ['sysparm_query'],\n\t\tsuccessActionType: FETCH_CHANNELS_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchChannelsSuccess = coeffects => {\n\tconst isAssignmentGroupUpdated = get(\n\t\tcoeffects,\n\t\t'state.isAssignmentGroupUpdated'\n\t);\n\tif (isAssignmentGroupUpdated)\n\t\tcoeffects.updateState({\n\t\t\tchannels: [],\n\t\t\tkpiScores: [],\n\t\t\tisAssignmentGroupUpdated: false\n\t\t});\n\tconst channels = get(coeffects, 'action.payload.result', []);\n\tcoeffects.updateState({ channels: channels });\n\tcoeffects.dispatch(FETCH_ALL_KPI_SCORES);\n};\n\nconst fetchAllKpiScores = coeffects => {\n\tconst showFilter = get(coeffects, 'state.properties.showFilter');\n\tcoeffects.state.channels.map(channel => {\n\t\tchannel.reports.slice(0, MAX_REPORTS).map(report => {\n\t\t\tcoeffects.dispatch(\n\t\t\t\tFETCH_KPI_SCORE,\n\t\t\t\t{\n\t\t\t\t\tsys_id: report['report_id'],\n\t\t\t\t\tdata:\n\t\t\t\t\t\tshowFilter && report['report_filter_field']\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tinteractive_parameters: {\n\t\t\t\t\t\t\t\t\tinteractive_filter: `${\n\t\t\t\t\t\t\t\t\t\treport['report_filter_field']\n\t\t\t\t\t\t\t\t\t}.sys_idIN${\n\t\t\t\t\t\t\t\t\t\tcoeffects.state.properties.groups\n\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  } // eslint-disable-line\n\t\t\t\t\t\t\t: {}\n\t\t\t\t},\n\t\t\t\t{ sys_id: report['report_id'] }\n\t\t\t);\n\t\t});\n\t});\n};\n\nconst fetchKpiScore = createHttpEffect(\n\t'/api/now/reporting/reports/series/:sys_id',\n\t{\n\t\tmethod: 'POST',\n\t\tpathParams: ['sys_id'],\n\t\tdataParam: 'data',\n\t\tbatch: false,\n\t\tsuccessActionType: FETCH_KPI_SCORE_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchKpiScoreSuccess = ({ action, updateState, state }) => {\n\tconst report = get(action, 'meta.sys_id');\n\tconst score = get(\n\t\taction,\n\t\t'payload.result.datasets[0].score_details.score',\n\t\t''\n\t);\n\tconst { kpiScores } = state;\n\tvar index = kpiScores.findIndex(\n\t\tkpi => kpi.report == report && kpi.score == score\n\t);\n\tif (index == -1) {\n\t\tvar reportIndex = kpiScores.findIndex(kpi => kpi.report == report);\n\t\tif (reportIndex != -1) {\n\t\t\tupdateState(({ state }) => {\n\t\t\t\tconst { kpiScores } = state;\n\t\t\t\tvar updatedKpiScores = kpiScores.filter(\n\t\t\t\t\tkpi => kpi.report != report\n\t\t\t\t);\n\t\t\t\treturn { kpiScores: updatedKpiScores, shouldRender: false };\n\t\t\t});\n\t\t}\n\t\tupdateState({\n\t\t\tpath: 'kpiScores',\n\t\t\tvalue: { report: report, score: score },\n\t\t\toperation: 'push'\n\t\t});\n\t}\n\tupdateState({ isRequestCompleted: true, shouldRender: false });\n};\n\nexport const handleCardItemClick = ({ action, dispatch }) => {\n\tlet cardId = get(action, 'payload.cardId', '');\n\tdispatch(ITEM_SELECTED, {\n\t\ttable: AWA_SERVICE_CHANNEL,\n\t\tsys_id: cardId,\n\t\tparams: {\n\t\t\tsysId: cardId\n\t\t}\n\t});\n};\n\nconst requestChannelAPI = (dispatch, updateState, state) => {\n\tconst { intervalId, isRequestCompleted } = state;\n\tconst groups = get(state, 'properties.groups');\n\tconst data = {\n\t\tgroups\n\t};\n\tif (isRequestCompleted) {\n\t\tdispatch(FETCH_CHANNELS, {\n\t\t\tsysparm_query: JSON.stringify(data)\n\t\t});\n\t\tupdateState({ isRequestCompleted: false });\n\t}\n\tif (!intervalId) {\n\t\taddInterval(updateState, dispatch, isRequestCompleted);\n\t}\n};\n\nconst addInterval = (updateState, dispatch, isRequestCompleted) => {\n\tconst autoRefreshInterval = getProperty(\n\t\tSYS_PROP_CHANNEL_CARD_REFRESH_INTERVAL_SECONDS,\n\t\t'120'\n\t);\n\tconst enableAutoRefresh = getProperty(\n\t\tSYS_PROP_CHANNELS_CARD_AUTO_REFRESH_ENABLE,\n\t\ttrue\n\t);\n\n\tconst intervalInMillis = parseInt(autoRefreshInterval) * 1000;\n\tif (enableAutoRefresh && intervalInMillis) {\n\t\tlet intervalId = setInterval(() => {\n\t\t\tif (isRequestCompleted) {\n\t\t\t\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\t\t\t\tconst groups = sessionData.selectedGroups;\n\t\t\t\tconst data = {\n\t\t\t\t\tgroups\n\t\t\t\t};\n\t\t\t\tdispatch(FETCH_CHANNELS, {\n\t\t\t\t\tsysparm_query: JSON.stringify(data)\n\t\t\t\t});\n\t\t\t\tupdateState({ isRequestCompleted: false });\n\t\t\t}\n\t\t}, intervalInMillis);\n\t\tupdateState({ intervalId });\n\t}\n};\n\nconst removeInterval = (intervalId, updateState) => {\n\tif (intervalId) {\n\t\tconst enableAutoRefresh = getProperty(\n\t\t\tSYS_PROP_CHANNELS_CARD_AUTO_REFRESH_ENABLE,\n\t\t\ttrue\n\t\t);\n\n\t\tif (enableAutoRefresh) {\n\t\t\tclearInterval(intervalId);\n\t\t\tupdateState({ intervalId: '' });\n\t\t}\n\t}\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch, updateState, state }) => {\n\t\trequestChannelAPI(dispatch, updateState, state);\n\t},\n\t[FETCH_CHANNELS]: fetchChannels,\n\t[FETCH_CHANNELS_SUCCESS]: fetchChannelsSuccess,\n\t[FETCH_ALL_KPI_SCORES]: fetchAllKpiScores,\n\t[FETCH_KPI_SCORE]: fetchKpiScore,\n\t[FETCH_KPI_SCORE_SUCCESS]: fetchKpiScoreSuccess,\n\t[ERROR_OCCURED]: logErrorEffect,\n\t[CHANNEL_OVERVIEW_EXPAND_COLLAPSE_EFFECT]: ({\n\t\tdispatch,\n\t\taction,\n\t\tupdateState,\n\t\tstate\n\t}) => {\n\t\tconst { intervalId } = state;\n\t\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\t\tconst expanded = get(action, 'payload.expanded');\n\t\tsessionData.overviewContainerExpanded = !expanded;\n\t\tsetSessionData(MODULES.CHANNELS, sessionData);\n\t\tif (!expanded) {\n\t\t\trequestChannelAPI(dispatch, updateState, state);\n\t\t} else {\n\t\t\tremoveInterval(intervalId, updateState);\n\t\t}\n\t\tupdateState({\n\t\t\texpanded: !expanded\n\t\t});\n\t},\n\t[NOW_TABS_BUTTON_CLICKED]: ({ state, dispatch }) => {\n\t\tconst groups = get(state, 'properties.groups');\n\t\tconst data = {\n\t\t\tgroups\n\t\t};\n\t\tdispatch(FETCH_CHANNELS, {\n\t\t\tsysparm_query: JSON.stringify(data)\n\t\t});\n\t},\n\t[CARD_CLICKED]: handleCardItemClick,\n\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\taction,\n\t\tdispatch,\n\t\tupdateState,\n\t\tstate\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { name, value }\n\t\t} = action;\n\t\tconst { intervalId } = state;\n\t\tif (name == 'isRefreshRequested' && value) {\n\t\t\trequestChannelAPI(dispatch, updateState, state);\n\t\t} else if (name == 'isRefreshRequested' && !value) {\n\t\t\tremoveInterval(intervalId, updateState);\n\t\t}\n\t\tif (name == 'groups') {\n\t\t\tupdateState({ isAssignmentGroupUpdated: true });\n\t\t\tconst groups = get(state, 'properties.groups');\n\t\t\tconst data = {\n\t\t\t\tgroups\n\t\t\t};\n\t\t\tdispatch(FETCH_CHANNELS, {\n\t\t\t\tsysparm_query: JSON.stringify(data)\n\t\t\t});\n\t\t}\n\t},\n\t[COMPONENT_DISCONNECTED]: ({ state, updateState }) => {\n\t\tremoveInterval(state.intervalId, updateState);\n\t}\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-channels-tabs', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tassignButton: {\n\t\t\tlabel: 'Allocate',\n\t\t\tsize: 'md',\n\t\t\tvariant: 'primary',\n\t\t\tdisabled: true\n\t\t},\n\t\tmanualAssignment: {\n\t\t\tshowModal: false,\n\t\t\tselectedWorkItemId: '',\n\t\t\tmessage: '',\n\t\t\tisDone: false,\n\t\t\talertStatus: 'info',\n\t\t\tdocument: ''\n\t\t},\n\t\tworkItemRowCount: 0,\n\t\tdataUpdatedTime: Date.now(),\n\t\tintervalId: '',\n\t\trefreshRequested: {\n\t\t\tdefault: {\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t\tbackground: true\n\t\t\t}\n\t\t},\n\t\tisRequestCompleted: true,\n\t\tfiltersApplied: {\n\t\t\tAGENT: [],\n\t\t\tQUEUE: []\n\t\t}\n\t},\n\tproperties: {\n\t\ttabItems: {},\n\t\ttabListDetails: {},\n\t\tselectedTab: '',\n\t\tchannelId: '',\n\t\tqueueId: '',\n\t\tname: '',\n\t\tassignmentGroups: '',\n\t\tisRefreshRequested: {\n\t\t\tdefault: false\n\t\t},\n\t\tuseDefaultSortOrder: {\n\t\t\tAGENT: { default: true },\n\t\t\tQUEUE: { default: true }\n\t\t},\n\t\tuseDefaultFilters: {\n\t\t\tAGENT: { default: true },\n\t\t\tQUEUE: { default: true }\n\t\t}\n\t},\n\tstyles,\n\tactionHandlers\n});\n","import '@servicenow/now-tabs';\nimport '@servicenow/now-record-list-connected';\nimport '@servicenow/now-record-list';\nimport '@servicenow/now-button';\nimport '../sn-manager-manual-assignment-container';\nimport '../sn-manager-channels-header';\nimport '@servicenow/now-alert';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-icon';\nimport { ALL_WORK_ITEMS } from '../sn-manager-channel-overview-container/constants';\nimport { WORK_ITEMS } from './constants';\nimport { getAlertContent, getListProps, getHeaderProps } from './helpers';\nimport get from 'lodash/get';\nimport { preUserData } from 'sn-uxpage-presource';\nimport '../sn-manager-channel-list';\n\nconst _renderTabContentWorkItem = (tabListDetails, selectedTab, state) => {\n\tconst manualAssignment = get(state, 'manualAssignment');\n\tconst dataUpdatedTime = get(state, 'dataUpdatedTime');\n\tconst listProps = getListProps(\n\t\ttabListDetails,\n\t\tselectedTab,\n\t\tdataUpdatedTime\n\t);\n\tconst headerProps = getHeaderProps(state);\n\treturn (\n\t\t<div className=\"sn-manager-work-item-list\">\n\t\t\t{manualAssignment.isDone ? (\n\t\t\t\t<now-alert\n\t\t\t\t\tcontent={getAlertContent(\n\t\t\t\t\t\tmanualAssignment.document,\n\t\t\t\t\t\tmanualAssignment.message\n\t\t\t\t\t)}\n\t\t\t\t\taction={{ type: 'dismiss' }}\n\t\t\t\t\tstatus={manualAssignment.alertStatus}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t\t<sn-manager-channels-header {...headerProps} />\n\t\t\t<now-record-list-connected {...listProps} />\n\t\t\t{state.manualAssignment.showModal ? (\n\t\t\t\t<sn-manager-manual-assignment-container\n\t\t\t\t\tworkItemId={state.manualAssignment.selectedWorkItemId}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t</div>\n\t);\n};\nconst _renderTabContent = state => {\n\tconst {\n\t\trefreshRequested,\n\t\tfiltersApplied,\n\t\tproperties: {\n\t\t\tselectedTab,\n\t\t\ttabListDetails,\n\t\t\tchannelId,\n\t\t\tqueueId,\n\t\t\tisRefreshRequested,\n\t\t\tuseDefaultSortOrder,\n\t\t\tuseDefaultFilters,\n\t\t\tassignmentGroups,\n\t\t\tname\n\t\t}\n\t} = state;\n\tconst {\n\t\ttable,\n\t\tlistTitle,\n\t\tcolumns,\n\t\tquery,\n\t\tview,\n\t\tisCustomList,\n\t\ttype\n\t} = tabListDetails[selectedTab];\n\tconst userSysId = preUserData.initialState.sys_id;\n\treturn isCustomList ? (\n\t\t<sn-manager-channel-list\n\t\t\ttype={type}\n\t\t\tmanagedGroups={assignmentGroups}\n\t\t\tlistTitle={listTitle}\n\t\t\tchannelId={channelId}\n\t\t\tqueueId={queueId}\n\t\t\tisRefreshRequested={isRefreshRequested}\n\t\t\tuserSysId={userSysId}\n\t\t\tuseDefaultSortOrder={useDefaultSortOrder[type]}\n\t\t\tfiltersApplied={useDefaultFilters[type] ? [] : filtersApplied[type]}\n\t\t/>\n\t) : (\n\t\t<now-record-list-connected\n\t\t\ttable={table}\n\t\t\tlistTitle={listTitle}\n\t\t\tcolumns={columns}\n\t\t\tquery={query}\n\t\t\tview={view}\n\t\t\thideDeclarativeActions={true}\n\t\t\trefreshRequested={refreshRequested}\n\t\t\tvariantHeader={{ size: 'md' }}\n\t\t\thideMenuButton={true}\n\t\t\tcomponent-id={\n\t\t\t\tname + ' - ' + Object.keys(tabListDetails).indexOf(selectedTab)\n\t\t\t}\n\t\t/>\n\t);\n};\n\nconst view = state => {\n\tconst { tabItems, tabListDetails, selectedTab } = state.properties;\n\treturn (\n\t\t<div className=\"sn-manager-channels-tabs\">\n\t\t\t<now-tabs items={tabItems} selectedItem={selectedTab} />\n\t\t\t{selectedTab == ALL_WORK_ITEMS || selectedTab == WORK_ITEMS\n\t\t\t\t? _renderTabContentWorkItem(tabListDetails, selectedTab, state)\n\t\t\t\t: _renderTabContent(state)}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import './manual-assignment-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\nimport { CAPACITY_RATIO } from './constants';\n\nexport default createCustomElement('sn-manager-manual-assignment-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tworkItemId: {\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tinitialState: {\n\t\tloading: true,\n\t\tdocument: '',\n\t\tdescription: '',\n\t\tchannel: '',\n\t\tqueue: '',\n\t\tassignedTo: '',\n\t\tworkItemState: '',\n\t\tmandatorySkills: '',\n\t\toptionalSkills: '',\n\t\tagents: [],\n\t\tallAgents: [],\n\t\tselectedAgentSysIds: [],\n\t\tallRecordsSelected: false,\n\t\tisAssignDisabled: true,\n\t\tpagination: {\n\t\t\tlimit: 20,\n\t\t\tpage: 1\n\t\t},\n\t\tsortOrder: {\n\t\t\tcolumn: CAPACITY_RATIO,\n\t\t\tisDescending: false\n\t\t}\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-modal';\nimport '@servicenow/now-empty-state';\nimport workItemDetailsView from './workItemDetailsView';\nimport availableAgentsView from './availableAgentsView';\nimport { footerAction, getModalHeader } from './helpers';\n\nconst view = state => {\n\treturn (\n\t\t<now-modal\n\t\t\tfooter-actions={footerAction(state.isAssignDisabled)}\n\t\t\theader-label={getModalHeader(state.document, state.description)}\n\t\t\topened={true}\n\t\t\tcontentFullWidth={false}\n\t\t\tsize=\"lg\"\n\t\t>\n\t\t\t<hr />\n\t\t\t{state.loading ? _renderEmptyState() : _renderList(state)}\n\t\t</now-modal>\n\t);\n};\n\nconst _renderList = state => {\n\treturn (\n\t\t<div>\n\t\t\t{workItemDetailsView(state)}\n\t\t\t{availableAgentsView(state)}\n\t\t</div>\n\t);\n};\n\nconst _renderEmptyState = () => {\n\treturn (\n\t\t<now-empty-state\n\t\t\tbodyText={false}\n\t\t\theaderText={false}\n\t\t\ttype=\"loading\"\n\t\t\tvariant=\"fit\"\n\t\t/>\n\t);\n};\n\nexport default view;\n","import '@servicenow/now-tabs';\nimport '@servicenow/now-record-list-connected';\nimport '@servicenow/now-button';\nimport '@servicenow/now-label-value';\nimport { getLabelsAndValues } from './helpers';\nimport {\n\tMANDATORY_SKILLS_REQUIRED,\n\tOPTIONAL_SKILLS_REQUIRED\n} from './constants';\n\nconst _renderSkilComponent = (mandatorySkills, optionalSkills) => {\n\treturn mandatorySkills == '' && optionalSkills == '' ? (\n\t\t''\n\t) : mandatorySkills !== '' && optionalSkills != '' ? (\n\t\t<div className=\"manual-assignment-container-skills-data\">\n\t\t\t<div className=\"manual-assignment-container-skills-mandatory\">\n\t\t\t\t<now-label-value-tabbed\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\titems={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: MANDATORY_SKILLS_REQUIRED,\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tvalue: `${mandatorySkills}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"manual-assignment-container-skills-optional\">\n\t\t\t\t<now-label-value-tabbed\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\titems={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: OPTIONAL_SKILLS_REQUIRED,\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tvalue: `${optionalSkills}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t) : mandatorySkills != '' ? (\n\t\t<div className=\"manual-assignment-container-skills-data\">\n\t\t\t<div className=\"manual-assignment-container-skills-mandatory\">\n\t\t\t\t<now-label-value-tabbed\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\titems={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: MANDATORY_SKILLS_REQUIRED,\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tvalue: `${mandatorySkills}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<div className=\"manual-assignment-container-skills-data\">\n\t\t\t<div className=\"manual-assignment-container-skills-mandatory\">\n\t\t\t\t<now-label-value-tabbed\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\titems={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: OPTIONAL_SKILLS_REQUIRED,\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tvalue: `${optionalSkills}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default state => {\n\treturn !state.loading ? (\n\t\t<div className=\"manual-assignment-container-workitem-skills\">\n\t\t\t<div className=\"manual-assignment-container-workitem\">\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\titem-min-width=\"4rem\"\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\titems={getLabelsAndValues(state)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{_renderSkilComponent(state.mandatorySkills, state.optionalSkills)}\n\t\t</div>\n\t) : (\n\t\t''\n\t);\n};\n","import '@servicenow/now-record-list';\nimport { t } from 'sn-translate';\nimport { getListProps } from './helpers';\nimport isEmpty from 'lodash/isEmpty';\n\nexport default state => {\n\tconst { agents, loading, pagination } = state;\n\n\tconst listProps = getListProps(state);\n\n\treturn (\n\t\t<div className=\"manual-assignment-container-agents\">\n\t\t\t<span className=\"manual-assignment-container-agents-title\">\n\t\t\t\t{t('Available Agents')}\n\t\t\t</span>\n\t\t\t{!isEmpty(agents) ? (\n\t\t\t\t<now-record-list {...listProps} />\n\t\t\t) : (\n\t\t\t\t<now-table {...listProps} />\n\t\t\t)}\n\t\t\t{!loading ? <now-pagination {...pagination} /> : null}\n\t\t</div>\n\t);\n};\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport {\n\tWORKITEM_ID,\n\tFETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS,\n\tFETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_SUCCEEDED,\n\tFETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_FAILED,\n\tASISGN_WORKITEM,\n\tMANUAL_ASSIGNMENT_SUCCEEDED,\n\tMANUAL_ASSIGNMENT_FAILED,\n\tPAGINATION_LIMIT_UPDATE,\n\tPAGINATION_PAGE_UPDATE,\n\tFOOTER_CLICKED,\n\tNOW_MODAL_OPENED_SET,\n\tGRID_CHECKBOX_TOGGLED,\n\tLIST_UPDATE_SORT,\n\tFETCH_AGENT_AVAILABILITY,\n\tFETCH_AGENT_AVAILABILITY_SUCCEEDED,\n\tFETCH_AGENT_AVAILABILITY_FAILED,\n\tAGENT_AVAILABILITY_ENDPOINT\n} from './constants';\nimport {\n\tNOW_TABS_ASSIGNMENT_UPDATE,\n\tNOW_TABS_MODAL\n} from '../sn-manager-channels-tabs/constants';\nimport { availableAgentsAndWorkItemDetailsQuery } from './datasources/AvailableAgentsAndWorkItemDetailsQuery';\nimport { manualAssignmentWorkItemMutation } from './datasources/ManualAssignmentWorkItemMutation';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { setUserPreference } from 'sn-user-preferences';\nimport isEqual from 'lodash/isEqual';\nimport {\n\tgetPaginationObj,\n\tgetAgentIds,\n\tattachAvailabilityHours,\n\tsortByColumn,\n\tgetErrorMessage\n} from './helpers';\nimport logErrorEffect from '../../utils/logErrorEffect';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst fetchInitialData = ({ host, dispatch, updateState }) => {\n\tconst workItemId = host.workItemId;\n\n\t/* resetting selectedAgentSysIds to empty list\n       as seismic 18.1 has a bug which causes selectedAgentSysIds\n       not being emptied after component gets disconnected\n    */\n\tupdateState({\n\t\tselectedAgentSysIds: []\n\t});\n\tdispatch(FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS, {\n\t\tworkItemId: workItemId\n\t});\n};\n\nconst fetchAvailableAgentsAndWorkItemDetails = createGraphQLEffect(\n\tavailableAgentsAndWorkItemDetailsQuery,\n\t{\n\t\tvariableList: [WORKITEM_ID],\n\t\tsuccessActionType: FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_SUCCEEDED,\n\t\terrorActionType: FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_FAILED\n\t}\n);\n\nconst fetchAvailableAgentsAndWorkItemDetailsSucceeded = ({\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst payload = get(\n\t\taction,\n\t\t'payload.data.GlideAwaAvailableAgentsAndWorkItemDetails_Query.getAvailableAgentsAndWorkItemDetails.result',\n\t\t{}\n\t);\n\tif (isEmpty(payload)) {\n\t\tupdateState({\n\t\t\tloading: false,\n\t\t\tpagination: getPaginationObj(0)\n\t\t});\n\t\treturn;\n\t}\n\tconst agents = payload.agents;\n\tconst agentIds = getAgentIds(agents);\n\tconst workItemDetails = payload.workItemDetails;\n\n\tupdateState({\n\t\tdocument: workItemDetails.documentNumber,\n\t\tdescription: workItemDetails.description,\n\t\tchannel: workItemDetails.channel,\n\t\tqueue: workItemDetails.queue,\n\t\tworkItemState: workItemDetails.state,\n\t\tassignedTo: workItemDetails.assignedTo,\n\t\tmandatorySkills: workItemDetails.mandatorySkills.toString(),\n\t\toptionalSkills: workItemDetails.optionalSkills.toString(),\n\t\tallAgents: agents\n\t});\n\n\tdispatch(FETCH_AGENT_AVAILABILITY, {\n\t\tdata: {\n\t\t\tindividualAgents: agentIds\n\t\t}\n\t});\n};\n\nconst handleFooterClicked = ({ state, action, dispatch }) => {\n\tconst payload = get(action, 'payload.action', '');\n\t!payload.id\n\t\t? dispatch(ASISGN_WORKITEM, {\n\t\t\tworkItem: state.properties.workItemId,\n\t\t\tagent: state.selectedAgentSysIds[0]\n\t\t  }) // eslint-disable-line\n\t\t: dispatch(NOW_MODAL_OPENED_SET);\n};\n\nconst handleManualAssignment = createGraphQLEffect(\n\tmanualAssignmentWorkItemMutation,\n\t{\n\t\tvariableList: ['workItem', 'agent'],\n\t\tsuccessActionType: MANUAL_ASSIGNMENT_SUCCEEDED,\n\t\terrorActionType: MANUAL_ASSIGNMENT_FAILED\n\t}\n);\n\nconst handleManualAssignmentSuccess = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst payload = get(action, 'payload', '');\n\tlet message = '';\n\tlet alertStatus = 'info';\n\tif (payload.errors && payload.errors.length > 0) {\n\t\tif (payload.errors[0].message)\n\t\t\tmessage = getErrorMessage(payload.errors[0].message);\n\t\talertStatus = 'critical';\n\t} else {\n\t\tmessage =\n\t\t\tpayload.data.GlideAWA_Mutation.GlideAWA_transfer\n\t\t\t\t.manual_assignment_work_item.message;\n\t}\n\tupdateState({\n\t\tselectedAgentSysIds: [],\n\t\tallRecordsSelected: false,\n\t\tisAssignDisabled: true\n\t});\n\n\tdispatch(NOW_TABS_ASSIGNMENT_UPDATE, {\n\t\tmessage: message,\n\t\talertStatus: alertStatus,\n\t\tdocument: state.document\n\t});\n};\n\nconst removeAgentId = (agentsIds, val) => {\n\treturn agentsIds.filter(agentId => agentId != val);\n};\n\nconst handleCheckboxToggled = ({ state, action, updateState }) => {\n\tconst payload = get(action, 'payload', '');\n\tlet agentsIds = state.selectedAgentSysIds;\n\tlet isAssignDisabled = false;\n\tlet allRecordsSelected = false;\n\tlet record = payload.value;\n\tif (Array.isArray(record)) {\n\t\tif (payload.checked) {\n\t\t\tif (record.length > 1) {\n\t\t\t\tisAssignDisabled = true;\n\t\t\t\tallRecordsSelected = true;\n\t\t\t\tagentsIds = record;\n\t\t\t} else {\n\t\t\t\tisAssignDisabled = false;\n\t\t\t\tallRecordsSelected = false;\n\t\t\t\tagentsIds = record;\n\t\t\t}\n\t\t} else {\n\t\t\tisAssignDisabled = true;\n\t\t\tallRecordsSelected = false;\n\t\t\tagentsIds = [];\n\t\t}\n\t} else {\n\t\tif (payload.checked) {\n\t\t\tagentsIds.push(payload.value);\n\t\t} else {\n\t\t\tagentsIds = removeAgentId(agentsIds, payload.value);\n\t\t}\n\t\tif (!agentsIds.length || agentsIds.length > 1) isAssignDisabled = true;\n\t}\n\n\tupdateState({\n\t\tselectedAgentSysIds: agentsIds,\n\t\tisAssignDisabled: isAssignDisabled,\n\t\tallRecordsSelected: allRecordsSelected\n\t});\n};\n\nconst handlePagination = ({ action, state, dispatch, updateState }) => {\n\tconst pagination = { ...state.pagination };\n\tconst agents = state.allAgents;\n\tif (action.type == PAGINATION_PAGE_UPDATE) {\n\t\tpagination.page = parseInt(action.payload.page);\n\t} else if (action.type == PAGINATION_LIMIT_UPDATE) {\n\t\tpagination.limit = parseInt(action.payload.limit);\n\t\tpagination.page = Math.min(\n\t\t\tpagination.page,\n\t\t\tMath.ceil(pagination.recordCount / pagination.limit)\n\t\t);\n\t}\n\tif (!isEqual(pagination, state.pagination)) {\n\t\tvar startIndex = (pagination.page - 1) * pagination.limit;\n\t\tvar endIndex = startIndex + pagination.limit;\n\t\tconst pageAgentsData = agents.slice(startIndex, endIndex);\n\t\tupdateState({\n\t\t\tpagination: pagination,\n\t\t\tagents: pageAgentsData\n\t\t});\n\t\tif (action.type == PAGINATION_LIMIT_UPDATE) {\n\t\t\tsetUserPreference('rowcount', pagination.limit, dispatch);\n\t\t}\n\t}\n\tdispatch(LIST_UPDATE_SORT);\n};\n\nconst handleEscapeAndDismiss = ({ updateState, dispatch }) => {\n\tupdateState({\n\t\tselectedAgentSysIds: [],\n\t\tallRecordsSelected: false,\n\t\tisAssignDisabled: true\n\t});\n\tdispatch(NOW_TABS_MODAL);\n};\n\nconst handleListUpdateSort = ({ state, updateState, action }) => {\n\tconst { agents, sortOrder } = state;\n\tconst columnData = get(action, 'payload.column', undefined);\n\tlet columnToBeSorted;\n\tlet isDescending;\n\tif (columnData == undefined) {\n\t\t(columnToBeSorted = sortOrder.column),\n\t\t(isDescending = sortOrder.isDescending);\n\t} else {\n\t\t(columnToBeSorted = columnData.columnName),\n\t\t(isDescending = !columnData.isDescending);\n\t}\n\tsortByColumn(agents, columnToBeSorted, isDescending);\n\tupdateState({\n\t\tagents: agents,\n\t\tsortOrder: {\n\t\t\tcolumn: columnToBeSorted,\n\t\t\tisDescending: isDescending\n\t\t}\n\t});\n};\n\nconst fetchAgentsAvailability = createHttpEffect(AGENT_AVAILABILITY_ENDPOINT, {\n\tmethod: 'POST',\n\theaders: {\n\t\tAccept: 'application/json',\n\t\t'Content-Type': 'application/json'\n\t},\n\tdataParam: 'data',\n\tsuccessActionType: FETCH_AGENT_AVAILABILITY_SUCCEEDED,\n\terrorActionType: FETCH_AGENT_AVAILABILITY_FAILED\n});\n\nconst handleFetchAgentAvailabilitySuccess = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst availabilityHours = get(\n\t\taction,\n\t\t'payload.result.shiftData.user.data',\n\t\t[]\n\t);\n\tconst allAgents = attachAvailabilityHours(\n\t\tstate.allAgents,\n\t\tavailabilityHours\n\t);\n\tconst rowCount = allAgents.length;\n\tconst pagination = getPaginationObj(rowCount);\n\tconst paginatedAgentData = allAgents.slice(0, pagination.limit);\n\n\tupdateState({\n\t\tpagination: pagination,\n\t\tagents: paginatedAgentData,\n\t\tallAgents: allAgents,\n\t\tloading: false\n\t});\n\n\tdispatch(LIST_UPDATE_SORT);\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: fetchInitialData,\n\t[FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS]: fetchAvailableAgentsAndWorkItemDetails,\n\t[FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_SUCCEEDED]: fetchAvailableAgentsAndWorkItemDetailsSucceeded,\n\t[FETCH_AVAILABLE_AGENTS_AND_WORK_ITEM_DETAILS_FAILED]: logErrorEffect,\n\t[FOOTER_CLICKED]: handleFooterClicked,\n\t[ASISGN_WORKITEM]: handleManualAssignment,\n\t[MANUAL_ASSIGNMENT_SUCCEEDED]: handleManualAssignmentSuccess,\n\t[MANUAL_ASSIGNMENT_FAILED]: logErrorEffect,\n\t[GRID_CHECKBOX_TOGGLED]: handleCheckboxToggled,\n\t[PAGINATION_PAGE_UPDATE]: handlePagination,\n\t[PAGINATION_LIMIT_UPDATE]: handlePagination,\n\t[NOW_MODAL_OPENED_SET]: handleEscapeAndDismiss,\n\t[LIST_UPDATE_SORT]: handleListUpdateSort,\n\t[FETCH_AGENT_AVAILABILITY]: fetchAgentsAvailability,\n\t[FETCH_AGENT_AVAILABILITY_SUCCEEDED]: handleFetchAgentAvailabilitySuccess,\n\t[FETCH_AGENT_AVAILABILITY_FAILED]: logErrorEffect\n};\n","const availableAgentsAndWorkItemDetailsQuery = `query($workItemId: String!){\n  GlideAwaAvailableAgentsAndWorkItemDetails_Query{\n    getAvailableAgentsAndWorkItemDetails(workItemId: $workItemId)\n    {\n      result {\n        workItemDetails {\n          documentNumber\n          description\n          channel\n          queue\n          state\n          assignedTo\n          mandatorySkills\n          optionalSkills\n        }\n        agents {\n          agentSysID\n          capacityRatio\n          capacity\n          matchingSkillsRatio\n          matchingSkills\n          name\n          presence\n          assignmentGroups\n        }\n      }\n    }\n  }\n}`;\nexport { availableAgentsAndWorkItemDetailsQuery };\n","const manualAssignmentWorkItemMutation = `\n    mutation ($workItem: String!, $agent: String!) {\n        GlideAWA_Mutation {\n            GlideAWA_transfer{\n                manual_assignment_work_item(work_item:$workItem, agent:$agent){\n                    message\n                }\n            }\n        }\n    }\n  `;\nexport { manualAssignmentWorkItemMutation };\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.manual-assignment-container-agents-title{font-size:1.25rem;padding-top:1rem;display:flex;padding-bottom:1rem}.manual-assignment-container-skills{padding:.5rem;width:25%;float:right;position:relative;bottom:17rem;left:2rem}.manual-assignment-container-skills-mandatory,.manual-assignment-container-skills-optional{margin-top:.5rem}.manual-assignment-container-workitem-skills{position:relative;top:.125rem}.manual-assignment-container-skills-data{position:relative;bottom:-7px}hr{position:absolute;width:96%;top:3rem}now-empty-state{position:relative;top:2rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-channels-header', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\theaderLabel: {\n\t\t\tdefault: ''\n\t\t},\n\t\theaderVariant: {\n\t\t\tdefault: 'header-secondary'\n\t\t},\n\t\theaderLevel: {\n\t\t\tdefault: '6'\n\t\t},\n\t\trowCount: {\n\t\t\tdefault: 0\n\t\t},\n\t\tassignButton: {\n\t\t\tdefault: {\n\t\t\t\tlabel: 'Allocate',\n\t\t\t\tsize: 'md',\n\t\t\t\tvariant: 'primary',\n\t\t\t\tdisabled: true\n\t\t\t}\n\t\t},\n\t\tcustomConf: {\n\t\t\tdefault: ''\n\t\t},\n\t\tdataUpdatedTime: {\n\t\t\tdefault: Date.now()\n\t\t},\n\t\tassignEvent: {\n\t\t\tdefault: ''\n\t\t},\n\t\trefreshEvent: {\n\t\t\tdefault: ''\n\t\t},\n\t\tisButtonEnabled: {\n\t\t\tdefault: true\n\t\t},\n\t\thideRowCount: {\n\t\t\tdefault: false\n\t\t},\n\t\thideRefreshText: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\tstyles\n});\n","import '@servicenow/now-button';\nimport '@servicenow/now-heading';\nimport get from 'lodash/get';\nimport { REFRESH_LIST, ARIA_CONFIG } from './constants';\nimport '../sn-manager-last-refreshed-text';\nimport { getMainHeaderClass, getButtonClass } from './helpers';\nconst view = state => {\n\tconst props = get(state, 'properties');\n\tconst customConf = get(props, 'customConf');\n\treturn (\n\t\t<div className={getMainHeaderClass(customConf)}>\n\t\t\t<div className=\"channel-header-row\">\n\t\t\t\t<div className=\"channel-header-title-and-count\">\n\t\t\t\t\t<span className=\"channel-header-title\">\n\t\t\t\t\t\t<now-heading\n\t\t\t\t\t\t\tlabel={props.headerLabel}\n\t\t\t\t\t\t\tlevel={props.headerLevel}\n\t\t\t\t\t\t\tvariant={props.headerVariant}\n\t\t\t\t\t\t\thasNoMargin={true}\n\t\t\t\t\t\t></now-heading>\n\t\t\t\t\t</span>\n\t\t\t\t\t{!props.hideRowCount ? (\n\t\t\t\t\t\t<span className=\"channel-header-count\">\n\t\t\t\t\t\t\t<now-badge\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tstatus=\"low\"\n\t\t\t\t\t\t\t\tvalue={props.rowCount}\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t></now-badge>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t{!props.hideRefreshText ? (\n\t\t\t\t\t<div className=\"channel-header-last-refreshed\">\n\t\t\t\t\t\t<span className=\"channel-header-last-refreshed-text\">\n\t\t\t\t\t\t\t<sn-manager-last-refreshed-text\n\t\t\t\t\t\t\t\tdataUpdatedTime={props.dataUpdatedTime}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className={getButtonClass(customConf)}>\n\t\t\t\t<span className=\"channel-header-refresh\">\n\t\t\t\t\t<now-button\n\t\t\t\t\t\ttooltip-content={REFRESH_LIST}\n\t\t\t\t\t\tconfig-aria={ARIA_CONFIG}\n\t\t\t\t\t\ticon-name=\"sync-outline\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\tevent: props.refreshEvent\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t{props.isButtonEnabled ? (\n\t\t\t\t\t<span className=\"channel-header-allocate\">\n\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\t{...props.assignButton}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tevent: props.assignEvent\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></now-button>\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import { t } from 'sn-translate';\nexport const REFRESH_LIST = t('Refresh List');\nexport const ARIA_CONFIG = {\n\t'aria-label': REFRESH_LIST\n};\n","import './lastRefreshed';\n","import { SnTimeAgo } from 'sn-component-timeago';\nimport { actionTypes, createCustomElement } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\nimport { trimTimeAgo } from './helpers';\nimport isEmpty from 'lodash/isEmpty';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nconst {\n\tCOMPONENT_DISCONNECTED,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_CONNECTED\n} = actionTypes;\n\nconst options = {\n\ttimeAgo: true,\n\tdateBoth: false,\n\tsystemTime: false,\n\tdateOnly: false\n};\n\nconst update = updateState => {\n\treturn tickTime => {\n\t\tupdateState({ time: tickTime.time });\n\t};\n};\n\nconst updateTimeAgo = (state, properties, value, updateState) => {\n\tif (!isEmpty(state.timeAgo)) state.timeAgo.remove();\n\n\tconst timeAgo = new SnTimeAgo(properties, value, options);\n\ttimeAgo.setUpdateFn(update(updateState));\n\tconst time = timeAgo.getTickTime().time;\n\tupdateState({ timeAgo, time });\n};\n\nconst view = state => {\n\tconst { time } = state;\n\n\treturn (\n\t\t<div className=\"sn-last-refreshed\">\n\t\t\t{t('Last refreshed')} <time>{trimTimeAgo(time)}</time>\n\t\t</div>\n\t);\n};\n\ncreateCustomElement('sn-manager-last-refreshed-text', {\n\tproperties: {\n\t\tdataUpdatedTime: {}\n\t},\n\tinitialState: {\n\t\ttimeAgo: Date.now()\n\t},\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tactionHandlers: {\n\t\t[COMPONENT_DISCONNECTED]: ({ state }) => {\n\t\t\tif (!isEmpty(state.timeAgo)) state.timeAgo.remove();\n\t\t},\n\t\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\t\tstate,\n\t\t\tproperties,\n\t\t\taction: {\n\t\t\t\tpayload: { name, value }\n\t\t\t},\n\t\t\tupdateState\n\t\t}) => {\n\t\t\tif (name === 'dataUpdatedTime') {\n\t\t\t\tupdateTimeAgo(state, properties, value, updateState);\n\t\t\t}\n\t\t},\n\t\t[COMPONENT_CONNECTED]: {\n\t\t\teffect({\n\t\t\t\tstate,\n\t\t\t\tproperties,\n\t\t\t\tproperties: { dataUpdatedTime },\n\t\t\t\tupdateState\n\t\t\t}) {\n\t\t\t\tupdateTimeAgo(state, properties, dataUpdatedTime, updateState);\n\t\t\t}\n\t\t}\n\t}\n});\n","module.exports = __TECTONIC__sn_component_timeago;","import { t } from 'sn-translate';\nexport const trimTimeAgo = time => {\n\tif (!time || time === 'just now') {\n\t\treturn t('just now');\n\t}\n\tif (time === 'about a minute ago') {\n\t\treturn t('1m ago');\n\t}\n\tif (time.endsWith(' minutes ago')) {\n\t\treturn time.replace(' minutes ago', t('m ago'));\n\t}\n\tif (time === 'about an hour ago') {\n\t\treturn t('1h ago');\n\t}\n\tif (time.endsWith(' hours ago')) {\n\t\treturn time.replace(' hours ago', t('h ago'));\n\t}\n\tif (time === 'about a day ago') {\n\t\treturn t('1d ago');\n\t}\n\tif (time.endsWith(' days ago')) {\n\t\treturn time.replace(' days ago', t('d ago'));\n\t} else {\n\t\treturn time;\n\t}\n};\n","export const getMainHeaderClass = customConf => {\n\treturn customConf\n\t\t? 'channel-header-custom' + '-' + customConf.type\n\t\t: 'channel-header';\n};\n\nexport const getButtonClass = customConf => {\n\treturn customConf\n\t\t? customConf.noOfButtons\n\t\t\t? 'channel-header-custom-list-refresh-and-allocate' +\n\t\t\t  '-' + // eslint-disable-line\n\t\t\t  customConf.noOfButtons // eslint-disable-line\n\t\t\t: 'channel-header-custom-card-refresh-and-allocate'\n\t\t: 'channel-header-refresh-and-allocate';\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.channel-header{display:flex;width:100%;padding:1.5rem 1.5rem 1rem;flex:0 0 auto}.channel-header-custom-list{display:flex;width:100%;flex:0 0 auto;padding:1rem 0}.channel-header-custom-list-refresh-and-allocate-1{position:relative;left:0}.channel-header-custom-list-refresh-and-allocate-2{position:relative;left:2rem}.channel-header-custom-card{display:flex;width:100%;flex:0 0 auto;padding:1rem 1.5rem 1rem 1rem}.channel-header-custom-card-refresh-and-allocate{position:relative;left:.5rem}.channel-header-row{display:flex;flex:1 1 auto;width:1px;flex-direction:column;overflow:hidden}.channel-header-title-and-count{align-items:center;display:flex}.channel-header-count{margin-left:.5rem}.channel-header-last-refreshed{margin-top:.25rem}.channel-header-last-refreshed-text{color:RGB(var(--now-color--neutral-9,99,114,116));font-size:.75rem;margin-top:.25rem}.channel-header-refresh-and-allocate{position:relative;left:1rem}.channel-header-allocate{margin-left:.5rem;margin-right:2rem}\", \"\"]);\n\n// exports\n","import { get, isEmpty } from 'lodash';\nimport { NOW_TABS_REFRESH_REQUESTED, NOW_TABS_MODAL } from './constants';\n\nexport const getAlertContent = (document, message) => {\n\tif (isEmpty(document)) return message;\n\treturn document + ': ' + message;\n};\n\nexport const getListProps = (tabListDetails, selectedTab, dataUpdatedTime) => {\n\tconst { table, listTitle, columns, query, view } = tabListDetails[\n\t\tselectedTab\n\t];\n\tconst props = {\n\t\ttable: table,\n\t\tlistTitle: listTitle,\n\t\tcolumns: columns,\n\t\tquery: query,\n\t\tview: view,\n\t\thideHeader: true,\n\t\trefreshRequested: {\n\t\t\ttimestamp: dataUpdatedTime,\n\t\t\tbackground: false,\n\t\t\tloaderDuration: 0\n\t\t},\n\t\thideQuickEdit: true\n\t};\n\treturn props;\n};\n\nexport const getHeaderProps = state => {\n\tconst { tabListDetails, selectedTab } = get(state, 'properties');\n\treturn {\n\t\theaderLabel: tabListDetails[selectedTab].listTitle,\n\t\trowCount: state.workItemRowCount,\n\t\tassignButton: state.assignButton,\n\t\tdataUpdatedTime: state.dataUpdatedTime,\n\t\trefreshEvent: NOW_TABS_REFRESH_REQUESTED,\n\t\tassignEvent: NOW_TABS_MODAL\n\t};\n};\n","import './channel-list';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\nexport default createCustomElement('sn-manager-channel-list', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tgridProps: {},\n\t\tpagination: {},\n\t\tloading: true,\n\t\tdataUpdatedTime: Date.now(),\n\t\treportData: {},\n\t\tpageData: {},\n\t\trowCount: '',\n\t\tintervalId: '',\n\t\tisRequestCompleted: true,\n\t\tcolumnsSorted: [],\n\t\tparsedQueryModel: {}\n\t},\n\tproperties: {\n\t\ttype: '',\n\t\tmanagedGroups: '',\n\t\tchannelId: '',\n\t\tqueueId: '',\n\t\tlistTitle: '',\n\t\tisRefreshRequested: {\n\t\t\tdefault: false\n\t\t},\n\t\tuserSysId: '',\n\t\tuseDefaultSortOrder: {\n\t\t\tdefault: true\n\t\t},\n\t\tfiltersApplied: {\n\t\t\tdefault: []\n\t\t}\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-record-list';\n\nconst view = state => {\n\tconst {\n\t\tgridProps,\n\t\tpagination,\n\t\tloading,\n\t\tdataUpdatedTime,\n\t\tparsedQueryModel,\n\t\tproperties: { listTitle }\n\t} = state;\n\treturn (\n\t\t<div className=\"sn-manager-channel-list\">\n\t\t\t<now-record-list\n\t\t\t\thideDeclarativeActions={true}\n\t\t\t\tdataUpdatedTime={dataUpdatedTime}\n\t\t\t\thidePagination={true}\n\t\t\t\tloading={loading}\n\t\t\t\tlist-model={gridProps}\n\t\t\t\tlistTitle={listTitle}\n\t\t\t\thideColumnGrouping={true}\n\t\t\t\thideQuickEdit={true}\n\t\t\t\thideCellFilter={true}\n\t\t\t\tvariantHeader={{ size: 'md' }}\n\t\t\t\thideMenuButton={true}\n\t\t\t\tparsedQueryModel={parsedQueryModel}\n\t\t\t\thidePanelFooter={true}\n\t\t\t/>\n\t\t\t{!loading ? <now-pagination {...pagination} /> : ''}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import logErrorEffect from '../../utils/logErrorEffect';\nimport get from 'lodash/get';\nimport {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_DISCONNECTED,\n\tCOMPONENT_PROPERTY_CHANGED\n} from '@servicenow/ui-core/lib/constants';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport {\n\tbuildQueuesGridModel,\n\tbuildQueuesParsedQueryModel\n} from './queueUtils';\nimport {\n\tbuildAgentsGridModel,\n\tbuildAgentsParsedQueryModel\n} from './agentUtils';\nimport isEqual from 'lodash/isEqual';\nimport { setUserPreference } from 'sn-user-preferences';\nimport {\n\tRECORD_LIST_TYPE_AGENT,\n\tRECORD_LIST_TYPE_QUEUE,\n\tSYS_PROP_LIST_AUTO_REFRESH_ENABLE,\n\tSYS_PROP_LIST_AUTO_REFRESH_INTERVAL_SECONDS,\n\tUPDATE_DEFAULT_SORT_ORDER,\n\tUPDATE_FILTERS\n} from '../common/constants';\nimport {\n\tPAGINATION_LIMIT_UPDATE,\n\tPAGINATION_PAGE_UPDATE,\n\tFETCH_QUEUES_REPORT_DATA_SUCCESS,\n\tFETCH_QUEUES_REPORT_DATA_ERROR,\n\tFETCH_AGENTS_REPORT_DATA_ERROR,\n\tFETCH_AGENTS_REPORT_DATA_SUCCESS,\n\tFETCH_AGENTS_REPORT_DATA,\n\tFETCH_QUEUES_REPORT_DATA,\n\tBUILD_BOOTSTRAPPED_DATA,\n\tLIST_REFRESH_REQUESTED_INTERNAL,\n\tOPEN_RECORD,\n\tLIST_UPDATE_SORT,\n\tUSER_PREF_UPDATE,\n\tUSER_PREF_UPDATE_SUCCESS,\n\tUSER_PREF_UPDATE_ERROR,\n\tADD_FILTER_COMPARISON,\n\tMUTATE_FILTER_COMPARISON,\n\tDELETE_FILTER_COMPARISON,\n\tLIST_DELETE_CONDITION,\n\tMANAGED_GROUPS_PROPERTY,\n\tIS_REFRESH_REQUESTED_PROPERTY\n} from './constants';\nimport { ITEM_SELECTED } from '../../common/constants';\nimport { getProperty } from 'sn-uxpage-presource';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { userPrefUpdateQuery } from './queries';\nimport { createSort, sortUserPrefUpdate } from './helpers';\n\nconst fetchQueuesReportData = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/getAllQueuesReportData',\n\t{\n\t\tmethod: 'GET',\n\t\tqueryParams: ['sysparm_query'],\n\t\tsuccessActionType: FETCH_QUEUES_REPORT_DATA_SUCCESS,\n\t\terrorActionType: FETCH_QUEUES_REPORT_DATA_ERROR\n\t}\n);\n\nconst fetchQueuesReportDataSuccess = ({ properties, action, updateState }) => {\n\tconst columnsSorted = get(action, 'payload.result.columnsSorted');\n\tconst filtersApplied = get(properties, 'filtersApplied');\n\tconst queuesData = get(action, 'payload.result.data');\n\tconst rowCount = queuesData.length;\n\tconst pagination = buildPaginationModel(rowCount);\n\tconst pageData = queuesData.slice(0, pagination.limit);\n\tconst gridProps = buildQueuesGridModel(pageData, rowCount, columnsSorted);\n\tconst parsedQueryModel = buildQueuesParsedQueryModel(filtersApplied);\n\tupdateState({\n\t\tgridProps,\n\t\tparsedQueryModel,\n\t\tpagination,\n\t\tloading: false,\n\t\tdataUpdatedTime: Date.now(),\n\t\treportData: queuesData,\n\t\tpageData,\n\t\trowCount,\n\t\tisRequestCompleted: true,\n\t\tcolumnsSorted\n\t});\n};\n\nconst buildPaginationModel = rowCount => {\n\tconst pagination = {\n\t\trecordCount: rowCount,\n\t\tpage: 1,\n\t\tlimit: 20,\n\t\tmaxPages: 10\n\t};\n\treturn pagination;\n};\n\nconst fetchAgentsReportData = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/getAllAgentsReportData',\n\t{\n\t\tmethod: 'GET',\n\t\tqueryParams: ['sysparm_query'],\n\t\tsuccessActionType: FETCH_AGENTS_REPORT_DATA_SUCCESS,\n\t\terrorActionType: FETCH_AGENTS_REPORT_DATA_ERROR\n\t}\n);\n\nconst fetchAgentsReportDataSuccess = ({ properties, action, updateState }) => {\n\tconst filtersApplied = get(properties, 'filtersApplied');\n\tconst columnsSorted = get(action, 'payload.result.columnsSorted');\n\tconst agentsData = get(action, 'payload.result.data');\n\tconst rowCount = agentsData.length;\n\tconst pagination = buildPaginationModel(rowCount);\n\tconst pageData = agentsData.slice(0, pagination.limit);\n\tconst gridProps = buildAgentsGridModel(pageData, rowCount, columnsSorted);\n\tconst parsedQueryModel = buildAgentsParsedQueryModel(filtersApplied);\n\tupdateState({\n\t\tgridProps,\n\t\tparsedQueryModel,\n\t\tpagination,\n\t\tloading: false,\n\t\tdataUpdatedTime: Date.now(),\n\t\treportData: agentsData,\n\t\tpageData,\n\t\trowCount,\n\t\tisRequestCompleted: true,\n\t\tcolumnsSorted\n\t});\n};\n\nconst buildBootstrappedData = ({ state, dispatch, updateState }) => {\n\tconst {\n\t\tisRequestCompleted,\n\t\tproperties: {\n\t\t\ttype,\n\t\t\tmanagedGroups,\n\t\t\tchannelId,\n\t\t\tqueueId,\n\t\t\tuserSysId,\n\t\t\tuseDefaultSortOrder,\n\t\t\tfiltersApplied\n\t\t}\n\t} = state;\n\tconst data = {\n\t\tmanagedGroups,\n\t\tchannelId,\n\t\tqueueId,\n\t\tuserSysId,\n\t\tuseDefaultSortOrder,\n\t\tfiltersApplied\n\t};\n\tif (isRequestCompleted) {\n\t\tswitch (type) {\n\t\tcase RECORD_LIST_TYPE_QUEUE:\n\t\t\tdispatch(FETCH_QUEUES_REPORT_DATA, {\n\t\t\t\tsysparm_query: JSON.stringify(data)\n\t\t\t});\n\t\t\tbreak;\n\t\tcase RECORD_LIST_TYPE_AGENT:\n\t\t\tdispatch(FETCH_AGENTS_REPORT_DATA, {\n\t\t\t\tsysparm_query: JSON.stringify(data)\n\t\t\t});\n\t\t}\n\t}\n\tupdateState({ loading: true, isRequestCompleted: false });\n};\n\nconst handlePagination = ({ action, state, dispatch, updateState }) => {\n\tconst pagination = { ...state.pagination };\n\tconst {\n\t\treportData,\n\t\tproperties: { type },\n\t\trowCount,\n\t\tcolumnsSorted\n\t} = state;\n\n\tif (action.type === PAGINATION_PAGE_UPDATE) {\n\t\tpagination.page = parseInt(action.payload.page);\n\t} else if (action.type === PAGINATION_LIMIT_UPDATE) {\n\t\tpagination.limit = parseInt(action.payload.limit);\n\t\tpagination.page = Math.min(\n\t\t\tpagination.page,\n\t\t\tMath.ceil(pagination.recordCount / pagination.limit)\n\t\t);\n\t}\n\n\tif (!isEqual(pagination, state.pagination)) {\n\t\tvar startIndex = (pagination.page - 1) * pagination.limit;\n\t\tvar endIndex = startIndex + pagination.limit;\n\t\tconst pageData = reportData.slice(startIndex, endIndex);\n\t\tconst gridProps =\n\t\t\ttype === RECORD_LIST_TYPE_QUEUE\n\t\t\t\t? buildQueuesGridModel(pageData, rowCount, columnsSorted)\n\t\t\t\t: buildAgentsGridModel(pageData, rowCount, columnsSorted);\n\t\tupdateState({\n\t\t\tgridProps,\n\t\t\tpagination,\n\t\t\tloading: false,\n\t\t\tdataUpdatedTime: Date.now(),\n\t\t\tpageData\n\t\t});\n\n\t\tif (action.type === PAGINATION_LIMIT_UPDATE) {\n\t\t\tsetUserPreference('rowcount', pagination.limit, dispatch);\n\t\t}\n\t}\n};\n\nconst openRecordHandler = ({ state, action, dispatch }) => {\n\tconst {\n\t\tpayload: { cell }\n\t} = action;\n\tconst { columnName } = cell;\n\tconst allColumns = get(state, 'gridProps.allColumns', new Map());\n\tconst column = allColumns.get(columnName);\n\tconst tableName = get(column, 'columnData.tableName');\n\tconst sysId = get(cell, 'columnData.value');\n\tconst selectedTabIndex = get(column, 'columnData.selectedTabIndex');\n\tdispatch(ITEM_SELECTED, {\n\t\ttable: tableName,\n\t\tsys_id: sysId,\n\t\tparams: {\n\t\t\tsysId: sysId,\n\t\t\tselectedTabIndex: selectedTabIndex\n\t\t}\n\t});\n};\n\nconst addInterval = (updateState, dispatch) => {\n\tconst enableAutoRefresh = getProperty(\n\t\tSYS_PROP_LIST_AUTO_REFRESH_ENABLE,\n\t\ttrue\n\t);\n\tconst autoRefreshInterval = getProperty(\n\t\tSYS_PROP_LIST_AUTO_REFRESH_INTERVAL_SECONDS,\n\t\t'30'\n\t);\n\tconst intervalInMillis = parseInt(autoRefreshInterval) * 1000;\n\tif (enableAutoRefresh && intervalInMillis) {\n\t\tlet intervalId = setInterval(() => {\n\t\t\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n\t\t}, intervalInMillis);\n\t\tupdateState({ intervalId });\n\t}\n};\n\nconst removeInterval = (intervalId, updateState) => {\n\tconst enableAutoRefresh = getProperty(\n\t\tSYS_PROP_LIST_AUTO_REFRESH_ENABLE,\n\t\ttrue\n\t);\n\tif (enableAutoRefresh) {\n\t\tclearInterval(intervalId);\n\t\tupdateState({ intervalId: '' });\n\t}\n};\n\nconst listUpdateSortEffect = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateProperties\n}) => {\n\tconst {\n\t\tpayload: { column, nextDirection }\n\t} = action;\n\tconst {\n\t\tproperties: { type }\n\t} = state;\n\tconst updateOrderBy = createSort(column.columnName, nextDirection);\n\tconst updateUserPrefs = sortUserPrefUpdate(updateOrderBy, type);\n\n\tupdateProperties({ useDefaultSortOrder: false });\n\tdispatch(USER_PREF_UPDATE, { preferences: updateUserPrefs });\n\tdispatch(UPDATE_DEFAULT_SORT_ORDER, { type: type, defaultSort: false });\n};\n\nconst userPrefUpdateEffect = createGraphQLEffect(userPrefUpdateQuery, {\n\tvariableList: ['preferences'],\n\tsuccessActionType: USER_PREF_UPDATE_SUCCESS,\n\terrorActionType: USER_PREF_UPDATE_ERROR\n});\n\nconst userPrefUpdateSuccessEffect = ({ dispatch }) => {\n\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n};\n\nconst filterComparisonEffect = ({\n\tproperties,\n\taction,\n\tupdateProperties,\n\tdispatch\n}) => {\n\tconst {\n\t\tpayload: { field, operator, value }\n\t} = action;\n\tconst type = get(properties, 'type');\n\tconst filtersApplied = get(properties, 'filtersApplied');\n\tconst filteredItems = filtersApplied.filter(item => item.field !== field);\n\tfilteredItems.push({ field, operator, value: value !== null ? value : '' });\n\tupdateProperties({\n\t\tfiltersApplied: filteredItems\n\t});\n\tdispatch(UPDATE_FILTERS, { type: type, filters: filteredItems });\n\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n};\n\nconst deleteFilterComparisonEffect = ({\n\tdispatch,\n\tproperties,\n\tupdateProperties,\n\taction\n}) => {\n\tconst type = get(properties, 'type');\n\tconst filtersApplied = get(properties, 'filtersApplied');\n\tconst comparisonId = get(action, 'payload.comparisonId');\n\tconst filteredItems = filtersApplied.filter(\n\t\titem => item.field !== comparisonId\n\t);\n\tupdateProperties({\n\t\tfiltersApplied: filteredItems\n\t});\n\tdispatch(UPDATE_FILTERS, { type: type, filters: filteredItems });\n\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n};\n\nconst listDeleteConditionEffect = ({\n\tdispatch,\n\tproperties,\n\tupdateProperties,\n\taction\n}) => {\n\tconst type = get(properties, 'type');\n\tconst filtersApplied = get(properties, 'filtersApplied');\n\tconst field = get(action, 'payload.item.field');\n\tconst filteredItems = filtersApplied.filter(item => item.field !== field);\n\tupdateProperties({\n\t\tfiltersApplied: filteredItems\n\t});\n\tdispatch(UPDATE_FILTERS, { type: type, filters: filteredItems });\n\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n};\n\nconst checkIfValueChanged = (previousValue, newValue) => {\n\tconst prevValArray = previousValue.split(',').sort();\n\tconst newValArray = newValue.split(',').sort();\n\treturn prevValArray.join() != newValArray.join();\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch, updateState, state }) => {\n\t\tconst { intervalId } = state;\n\t\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n\t\tif (!intervalId) {\n\t\t\taddInterval(updateState, dispatch);\n\t\t}\n\t},\n\t[BUILD_BOOTSTRAPPED_DATA]: buildBootstrappedData,\n\t[FETCH_QUEUES_REPORT_DATA]: fetchQueuesReportData,\n\t[FETCH_QUEUES_REPORT_DATA_SUCCESS]: fetchQueuesReportDataSuccess,\n\t[FETCH_QUEUES_REPORT_DATA_ERROR]: logErrorEffect,\n\t[FETCH_AGENTS_REPORT_DATA]: fetchAgentsReportData,\n\t[FETCH_AGENTS_REPORT_DATA_SUCCESS]: fetchAgentsReportDataSuccess,\n\t[FETCH_AGENTS_REPORT_DATA_ERROR]: logErrorEffect,\n\t[LIST_REFRESH_REQUESTED_INTERNAL]: ({ dispatch }) => {\n\t\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n\t},\n\t[COMPONENT_DISCONNECTED]: ({ state, updateState }) => {\n\t\tremoveInterval(state.intervalId, updateState);\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\tdispatch,\n\t\taction,\n\t\tupdateState,\n\t\tstate\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { name, value, previousValue }\n\t\t} = action;\n\t\tconst { intervalId } = state;\n\n\t\tif (name == IS_REFRESH_REQUESTED_PROPERTY && !value) {\n\t\t\tremoveInterval(intervalId, updateState);\n\t\t} else {\n\t\t\tif (\n\t\t\t\tname == MANAGED_GROUPS_PROPERTY &&\n\t\t\t\tcheckIfValueChanged(previousValue, value)\n\t\t\t) {\n\t\t\t\tupdateState({ isRequestCompleted: true });\n\t\t\t}\n\t\t\tdispatch(BUILD_BOOTSTRAPPED_DATA);\n\t\t\tif (!intervalId) {\n\t\t\t\taddInterval(updateState, dispatch);\n\t\t\t}\n\t\t}\n\t},\n\t[PAGINATION_PAGE_UPDATE]: handlePagination,\n\t[PAGINATION_LIMIT_UPDATE]: handlePagination,\n\t[OPEN_RECORD]: openRecordHandler,\n\t[LIST_UPDATE_SORT]: listUpdateSortEffect,\n\t[USER_PREF_UPDATE]: userPrefUpdateEffect,\n\t[USER_PREF_UPDATE_SUCCESS]: userPrefUpdateSuccessEffect,\n\t[USER_PREF_UPDATE_ERROR]: logErrorEffect,\n\t[ADD_FILTER_COMPARISON]: filterComparisonEffect,\n\t[MUTATE_FILTER_COMPARISON]: filterComparisonEffect,\n\t[DELETE_FILTER_COMPARISON]: deleteFilterComparisonEffect,\n\t[LIST_DELETE_CONDITION]: listDeleteConditionEffect\n};\n","import get from 'lodash/get';\nimport { constructParsedQueryModel, getOrderByForColumn } from './helpers';\nimport { t } from 'sn-translate';\n\nconst columns = [\n\t{\n\t\tcolumnName: 'queue',\n\t\tcolumnData: {\n\t\t\tlabel: t('Name'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false,\n\t\t\telementSysId: 'sys_id',\n\t\t\ttableName: 'awa_queue',\n\t\t\tisFirstNonRef: true\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'generic'\n\t},\n\t{\n\t\tcolumnName: 'service_channel',\n\t\tcolumnData: {\n\t\t\tlabel: t('Service Channel'),\n\t\t\tinternalType: 'reference',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false,\n\t\t\ttableName: 'awa_service_channel',\n\t\t\telementSysId: 'sys_id',\n\t\t\tisFirstNonRef: false\n\t\t},\n\t\tinternalType: 'reference',\n\t\tfilterType: 'reference'\n\t},\n\t{\n\t\tcolumnName: 'waiting_work_items',\n\t\tcolumnData: {\n\t\t\tlabel: t('Waiting Work Items'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'average_wait_time',\n\t\tcolumnData: {\n\t\t\tlabel: t('Average Wait Time'),\n\t\t\tinternalType: 'glide_duration',\n\t\t\tisFilterable: false,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'glide_duration'\n\t},\n\t{\n\t\tcolumnName: 'available_agents',\n\t\tcolumnData: {\n\t\t\tlabel: t('Available Agents'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'agents_not_available',\n\t\tcolumnData: {\n\t\t\tlabel: t('Agents Not Available'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'work_items_assigned_today',\n\t\tcolumnData: {\n\t\t\tlabel: t('Work Items Assigned Today'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'work_items_cancelled_today',\n\t\tcolumnData: {\n\t\t\tlabel: t('Work Items Cancelled Today'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'average_agent_utilization',\n\t\tcolumnData: {\n\t\t\tlabel: t('Average Agent Utilization'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'service_level',\n\t\tcolumnData: {\n\t\t\tlabel: t('Service Level'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t}\n];\n\nconst getRowData = queue => {\n\treturn new Map([\n\t\t[\n\t\t\t'queue',\n\t\t\t{\n\t\t\t\tcolumnName: 'queue',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.queue.displayValue,\n\t\t\t\t\tvalue: queue.queue.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'service_channel',\n\t\t\t{\n\t\t\t\tcolumnName: 'service_channel',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.service_channel.displayValue,\n\t\t\t\t\tvalue: queue.service_channel.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'waiting_work_items',\n\t\t\t{\n\t\t\t\tcolumnName: 'waiting_work_items',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.waiting_work_items.value,\n\t\t\t\t\tvalue: queue.waiting_work_items.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'average_wait_time',\n\t\t\t{\n\t\t\t\tcolumnName: 'average_wait_time',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.average_wait_time.displayValue,\n\t\t\t\t\tvalue: queue.average_wait_time.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'available_agents',\n\t\t\t{\n\t\t\t\tcolumnName: 'available_agents',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.available_agents.value,\n\t\t\t\t\tvalue: queue.available_agents.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'agents_not_available',\n\t\t\t{\n\t\t\t\tcolumnName: 'agents_not_available',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.agents_not_available.value,\n\t\t\t\t\tvalue: queue.agents_not_available.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'work_items_assigned_today',\n\t\t\t{\n\t\t\t\tcolumnName: 'work_items_assigned_today',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.work_items_assigned_today.value,\n\t\t\t\t\tvalue: queue.work_items_assigned_today.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'work_items_cancelled_today',\n\t\t\t{\n\t\t\t\tcolumnName: 'work_items_cancelled_today',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.work_items_cancelled_today.value,\n\t\t\t\t\tvalue: queue.work_items_cancelled_today.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'average_agent_utilization',\n\t\t\t{\n\t\t\t\tcolumnName: 'average_agent_utilization',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.average_agent_utilization.value,\n\t\t\t\t\tvalue: queue.average_agent_utilization.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'service_level',\n\t\t\t{\n\t\t\t\tcolumnName: 'service_level',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: queue.service_level.value,\n\t\t\t\t\tvalue: queue.service_level.value\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]);\n};\n\nconst getAllColumnsMap = columnsSorted => {\n\treturn columns.reduce((map, currColumn) => {\n\t\tconst columnName = get(currColumn, 'columnName', '');\n\t\tconst { isSorted, isDescending } = getOrderByForColumn({\n\t\t\tcolumnsSorted,\n\t\t\tcolumnName\n\t\t});\n\t\tmap.set(columnName, {\n\t\t\t...currColumn,\n\t\t\tisSorted,\n\t\t\tisDescending\n\t\t});\n\t\treturn map;\n\t}, new Map());\n};\n\nconst queryRows = queuesData => {\n\tlet queryRowsMap = new Map();\n\tqueuesData.map(queue =>\n\t\tqueryRowsMap.set(queue, {\n\t\t\tuniqueId: queue.queue.value,\n\t\t\tdisplayValue: queue.queue.displayValue,\n\t\t\thighlightedData: new Map(),\n\t\t\tdbViewData: new Map(),\n\t\t\trowData: getRowData(queue)\n\t\t})\n\t);\n\treturn queryRowsMap;\n};\n\nconst getAllSysIds = queuesData => {\n\tlet sysIds = [];\n\tqueuesData.forEach(queue => {\n\t\tsysIds.push(queue.queue.value);\n\t});\n\treturn sysIds;\n};\n\nexport const buildQueuesGridModel = (queuesData, rowCount, columnsSorted) => {\n\tconst model = {\n\t\tallColumns: getAllColumnsMap(columnsSorted),\n\t\tlayoutQuery: {\n\t\t\tallSysIds: getAllSysIds(queuesData),\n\t\t\tcount: rowCount,\n\t\t\torderByColumn: 'name',\n\t\t\torderByIsDescending: false,\n\t\t\tencodedQuery: '',\n\t\t\tqueryRows: queryRows(queuesData)\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false,\n\t\t\tisDBView: false,\n\t\t\tisScriptableTable: false\n\t\t}\n\t};\n\treturn model;\n};\n\nexport const buildQueuesParsedQueryModel = filtersApplied => {\n\tconst queuesParsedQueryModel = constructParsedQueryModel(\n\t\tfiltersApplied,\n\t\tcolumns\n\t);\n\treturn queuesParsedQueryModel;\n};\n","import moment from 'moment';\nimport get from 'lodash/get';\nimport { constructParsedQueryModel, getOrderByForColumn } from './helpers';\nimport { t } from 'sn-translate';\n\nconst columns = [\n\t{\n\t\tcolumnName: 'agent',\n\t\tcolumnData: {\n\t\t\tlabel: t('Agent'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false,\n\t\t\telementSysId: 'sys_id',\n\t\t\ttableName: 'sys_user',\n\t\t\tisFirstNonRef: true\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'generic'\n\t},\n\t{\n\t\tcolumnName: 'service_channel',\n\t\tcolumnData: {\n\t\t\tlabel: t('Service Channel'),\n\t\t\tinternalType: 'reference',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false,\n\t\t\ttableName: 'awa_service_channel',\n\t\t\telementSysId: 'sys_id',\n\t\t\tisFirstNonRef: false\n\t\t},\n\t\tinternalType: 'reference',\n\t\tfilterType: 'reference'\n\t},\n\t{\n\t\tcolumnName: 'total_capacity',\n\t\tcolumnData: {\n\t\t\tlabel: t('Total Capacity'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'capacity_in_use',\n\t\tcolumnData: {\n\t\t\tlabel: t('Capacity In Use'),\n\t\t\tinternalType: 'reference',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false,\n\t\t\telementSysId: 'sys_id',\n\t\t\ttableName: 'sys_user',\n\t\t\tisFirstNonRef: true,\n\t\t\tselectedTabIndex: 1\n\t\t},\n\t\tinternalType: 'reference',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'utilization',\n\t\tcolumnData: {\n\t\t\tlabel: t('Utilization'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'numeric'\n\t},\n\t{\n\t\tcolumnName: 'presence_state',\n\t\tcolumnData: {\n\t\t\tlabel: t('Presence State'),\n\t\t\tinternalType: 'reference',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false,\n\t\t\ttableName: 'awa_presence_state',\n\t\t\telementSysId: 'sys_id'\n\t\t},\n\t\tinternalType: 'reference',\n\t\tfilterType: 'reference'\n\t},\n\t{\n\t\tcolumnName: 'can_take_work',\n\t\tcolumnData: {\n\t\t\tlabel: t('Can Take Work'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: true,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string',\n\t\tfilterType: 'generic'\n\t},\n\t{\n\t\tcolumnName: 'time_in_state',\n\t\tcolumnData: {\n\t\t\tlabel: t('Time In State'),\n\t\t\tinternalType: 'string',\n\t\t\tisFilterable: false,\n\t\t\tisSortable: true,\n\t\t\tisGroupable: false,\n\t\t\tisChoice: false\n\t\t},\n\t\tinternalType: 'string'\n\t}\n];\n\nconst getRowData = agent => {\n\treturn new Map([\n\t\t[\n\t\t\t'agent',\n\t\t\t{\n\t\t\t\tcolumnName: 'agent',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.agent.displayValue,\n\t\t\t\t\tvalue: agent.agent.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'service_channel',\n\t\t\t{\n\t\t\t\tcolumnName: 'service_channel',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.service_channel.displayValue,\n\t\t\t\t\tvalue: agent.service_channel.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'total_capacity',\n\t\t\t{\n\t\t\t\tcolumnName: 'total_capacity',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.total_capacity.value,\n\t\t\t\t\tvalue: agent.total_capacity.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'capacity_in_use',\n\t\t\t{\n\t\t\t\tcolumnName: 'capacity_in_use',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.capacity_in_use.value,\n\t\t\t\t\tvalue: agent.agent.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'utilization',\n\t\t\t{\n\t\t\t\tcolumnName: 'utilization',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.utilization.value,\n\t\t\t\t\tvalue: agent.utilization.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'presence_state',\n\t\t\t{\n\t\t\t\tcolumnName: 'presence_state',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.presence_state.displayValue,\n\t\t\t\t\tvalue: agent.presence_state.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'can_take_work',\n\t\t\t{\n\t\t\t\tcolumnName: 'can_take_work',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: agent.can_take_work.value,\n\t\t\t\t\tvalue: agent.can_take_work.value\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t'time_in_state',\n\t\t\t{\n\t\t\t\tcolumnName: 'time_in_state',\n\t\t\t\tcolumnData: {\n\t\t\t\t\tdisplayValue: getMomentRelativeTime(\n\t\t\t\t\t\tagent.time_in_state.value\n\t\t\t\t\t),\n\t\t\t\t\tvalue: getMomentRelativeTime(agent.time_in_state.value)\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]);\n};\n\nconst getAllColumnsMap = columnsSorted => {\n\treturn columns.reduce((map, currColumn) => {\n\t\tconst columnName = get(currColumn, 'columnName', '');\n\t\tconst { isSorted, isDescending } = getOrderByForColumn({\n\t\t\tcolumnsSorted,\n\t\t\tcolumnName\n\t\t});\n\t\tmap.set(columnName, {\n\t\t\t...currColumn,\n\t\t\tisSorted,\n\t\t\tisDescending\n\t\t});\n\t\treturn map;\n\t}, new Map());\n};\n\nconst getMomentRelativeTime = date => {\n\tvar dateString = date + ' UTC';\n\tvar parsedDate = new Date(Date.parse(dateString.replace(/-/g, '/')));\n\n\treturn moment(parsedDate).fromNow();\n};\n\nconst queryRows = agentsData => {\n\tlet queryRowsMap = new Map();\n\tagentsData.map(agent =>\n\t\tqueryRowsMap.set(agent, {\n\t\t\tuniqueId: agent.agent.value,\n\t\t\tdisplayValue: agent.agent.displayValue,\n\t\t\thighlightedData: new Map(),\n\t\t\tdbViewData: new Map(),\n\t\t\trowData: getRowData(agent)\n\t\t})\n\t);\n\treturn queryRowsMap;\n};\n\nconst getAllSysIds = agentsData => {\n\tlet sysIds = [];\n\tagentsData.forEach(agent => {\n\t\tsysIds.push(agent.agent.value);\n\t});\n\treturn sysIds;\n};\n\nexport const buildAgentsGridModel = (agentsData, rowCount, columnsSorted) => {\n\tconst model = {\n\t\tallColumns: getAllColumnsMap(columnsSorted),\n\t\tlayoutQuery: {\n\t\t\tallSysIds: getAllSysIds(agentsData),\n\t\t\tcount: rowCount,\n\t\t\torderByColumn: 'name',\n\t\t\torderByIsDescending: false,\n\t\t\tencodedQuery: '',\n\t\t\tqueryRows: queryRows(agentsData)\n\t\t},\n\t\ttableMetadata: {\n\t\t\tgroupedColumn: '',\n\t\t\tisGrouped: false,\n\t\t\tisDBView: false,\n\t\t\tisScriptableTable: false\n\t\t}\n\t};\n\treturn model;\n};\n\nexport const buildAgentsParsedQueryModel = filtersApplied => {\n\tconst agentsParsedQueryModel = constructParsedQueryModel(\n\t\tfiltersApplied,\n\t\tcolumns\n\t);\n\treturn agentsParsedQueryModel;\n};\n","export const userPrefUpdateQuery = `\nmutation($preferences: [GlideDomain_PreferenceArgument!]!) {\n  GlideDomain_Mutation {\n    user {\n      setPreferences(preferences: $preferences) {\n        name\n        value\n      }\n    }\n  }\n}\n`;\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-manager-channel-list,:host{height:100%;display:flex;flex-direction:column}.sn-manager-channel-list now-record-list{height:100%;min-height:20.625rem}\", \"\"]);\n\n// exports\n","import get from 'lodash/get';\nimport {\n\tNOW_TABS_SELECTED_ITEM_SET,\n\tNOW_TABS_MODAL,\n\tNOW_TABS_ASSIGNMENT_UPDATE,\n\tNOW_TABS_RECORD_LIST_CONNECTED_COUNT,\n\tNOW_TABS_BUTTON_CLICKED,\n\tNOW_TABS_ALERT_ACTION_CLICKED,\n\tNOW_TABS_REFRESH_REQUESTED,\n\tNOW_TABS_LIST_DATA_FETCH_COMPLETED,\n\tUPDATE_REFRESH_REQUESTED_DATA\n} from './constants';\nimport {\n\tCOMPONENT_DISCONNECTED,\n\tCOMPONENT_PROPERTY_CHANGED\n} from '@servicenow/ui-core/lib/constants';\nimport { getProperty } from 'sn-uxpage-presource';\nimport {\n\tSYS_PROP_LIST_AUTO_REFRESH_ENABLE,\n\tSYS_PROP_LIST_AUTO_REFRESH_INTERVAL_SECONDS,\n\tUPDATE_DEFAULT_SORT_ORDER,\n\tUPDATE_FILTERS\n} from '../common/constants';\n\nconst changeTab = ({\n\taction,\n\tupdateProperties,\n\tstate,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst {\n\t\tintervalId,\n\t\tproperties: { tabListDetails }\n\t} = state;\n\tconst selectedTab = get(action, 'payload.value', '');\n\tif (tabListDetails && tabListDetails[selectedTab]) {\n\t\tif (!tabListDetails[selectedTab].isCustomList && !intervalId) {\n\t\t\tdispatch(UPDATE_REFRESH_REQUESTED_DATA);\n\t\t\taddInterval(updateState, dispatch);\n\t\t} else if (tabListDetails[selectedTab].isCustomList && intervalId) {\n\t\t\tremoveInterval(intervalId, updateState);\n\t\t}\n\t}\n\tupdateProperties({ selectedTab });\n};\n\nconst handleRowClicked = ({ state, action, updateState, dispatch }) => {\n\tconst { intervalId } = state;\n\tconst payload = get(action, 'payload', {});\n\tpayload.selectionCount == 1\n\t\t? updateState({\n\t\t\tassignButton: {\n\t\t\t\t...state.assignButton,\n\t\t\t\tdisabled: false\n\t\t\t},\n\t\t\tmanualAssignment: {\n\t\t\t\t...state.manualAssignment,\n\t\t\t\tselectedWorkItemId:\n\t\t\t\t\t\tpayload.selectedRecords.length > 0\n\t\t\t\t\t\t\t? payload.selectedRecords[0]\n\t\t\t\t\t\t\t: ''\n\t\t\t}\n\t\t  }) // eslint-disable-line\n\t\t: updateState({\n\t\t\tassignButton: {\n\t\t\t\t...state.assignButton,\n\t\t\t\tdisabled: true\n\t\t\t}\n\t\t  }); // eslint-disable-line\n\tif (payload.selectionCount != 0 && intervalId) {\n\t\tremoveInterval(intervalId, updateState);\n\t} else if (payload.selectionCount == 0 && !intervalId) {\n\t\tdispatch(UPDATE_REFRESH_REQUESTED_DATA);\n\t\taddInterval(updateState, dispatch);\n\t}\n};\n\nconst handleModal = ({ state, updateState }) => {\n\tupdateState({\n\t\tmanualAssignment: {\n\t\t\t...state.manualAssignment,\n\t\t\tshowModal: !state.manualAssignment.showModal\n\t\t}\n\t});\n};\nconst handleNowButtonClicked = ({ action, dispatch }) => {\n\tconst payload = get(action, 'payload', {});\n\tif (payload.event)\n\t\tdispatch(payload.event, {\n\t\t\t...payload\n\t\t});\n};\n\nconst handleManualAssignmentUpdate = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst { payload } = action;\n\tupdateState({\n\t\tmanualAssignment: {\n\t\t\t...state.manualAssignment,\n\t\t\tshowModal: false,\n\t\t\tselectedWorkItemId: '',\n\t\t\tisDone: !state.isDone,\n\t\t\tmessage: payload.message,\n\t\t\talertStatus: payload.alertStatus,\n\t\t\tdocument: payload.document\n\t\t},\n\t\tassignButton: {\n\t\t\t...state.assignButton,\n\t\t\tdisabled: true\n\t\t}\n\t});\n\tdispatch(NOW_TABS_REFRESH_REQUESTED);\n};\n\nconst handleAlertActionClicked = ({ state, updateState }) => {\n\tupdateState({\n\t\tmanualAssignment: {\n\t\t\t...state.manualAssignment,\n\t\t\tisDone: false\n\t\t}\n\t});\n};\n\nconst handleDataFetchSuccess = ({ state, action, updateState }) => {\n\tconst count = get(action, 'payload.count', 0);\n\tupdateState({\n\t\tmanualAssignment: {\n\t\t\t...state.manualAssignment,\n\t\t\tdisabled: true\n\t\t},\n\t\tworkItemRowCount: count,\n\t\tisRequestCompleted: true\n\t});\n};\n\nconst handleRefreshRequested = ({ state, updateState, dispatch }) => {\n\tconst { intervalId } = state;\n\tupdateState({\n\t\tdataUpdatedTime: Date.now()\n\t});\n\tif (!intervalId) {\n\t\taddInterval(updateState, dispatch);\n\t}\n};\n\nconst addInterval = (updateState, dispatch) => {\n\tconst enableAutoRefresh = getProperty(\n\t\tSYS_PROP_LIST_AUTO_REFRESH_ENABLE,\n\t\ttrue\n\t);\n\tconst autoRefreshInterval = getProperty(\n\t\tSYS_PROP_LIST_AUTO_REFRESH_INTERVAL_SECONDS,\n\t\t'30'\n\t);\n\tconst intervalInMillis = parseInt(autoRefreshInterval) * 1000;\n\tif (enableAutoRefresh && intervalInMillis) {\n\t\tlet intervalId = setInterval(() => {\n\t\t\tdispatch(UPDATE_REFRESH_REQUESTED_DATA);\n\t\t}, intervalInMillis);\n\t\tupdateState({ intervalId });\n\t}\n};\n\nconst removeInterval = (intervalId, updateState) => {\n\tconst enableAutoRefresh = getProperty(\n\t\tSYS_PROP_LIST_AUTO_REFRESH_ENABLE,\n\t\ttrue\n\t);\n\tif (enableAutoRefresh) {\n\t\tclearInterval(intervalId);\n\t\tupdateState({ intervalId: '' });\n\t}\n};\n\nconst updateRefreshRequestedData = ({ state, updateState }) => {\n\tconst { isRequestCompleted } = state;\n\tif (isRequestCompleted) {\n\t\tupdateState({\n\t\t\tdataUpdatedTime: Date.now(),\n\t\t\trefreshRequested: {\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t\tbackground: true\n\t\t\t},\n\t\t\tisRequestCompleted: false\n\t\t});\n\t}\n};\n\nconst updateDefaultSortOrderEffect = ({\n\taction,\n\tproperties,\n\tupdateProperties\n}) => {\n\tconst { type, defaultSort } = get(action, 'payload');\n\tconst useDefaultSortOrder = {\n\t\t...properties.useDefaultSortOrder,\n\t\t[type]: defaultSort\n\t};\n\tupdateProperties({\n\t\tuseDefaultSortOrder\n\t});\n};\n\nconst updateFiltersEffect = ({\n\taction,\n\tstate,\n\tupdateState,\n\tproperties,\n\tupdateProperties\n}) => {\n\tconst { type, filters } = get(action, 'payload');\n\tconst useDefaultFilters = {\n\t\t...properties.useDefaultFilters,\n\t\t[type]: false\n\t};\n\tconst filtersApplied = {\n\t\t...state.filtersApplied,\n\t\t[type]: filters\n\t};\n\tupdateProperties({\n\t\tuseDefaultFilters\n\t});\n\tupdateState({\n\t\tfiltersApplied\n\t});\n};\n\nexport default {\n\t[NOW_TABS_SELECTED_ITEM_SET]: changeTab,\n\t[NOW_TABS_RECORD_LIST_CONNECTED_COUNT]: handleRowClicked,\n\t[NOW_TABS_MODAL]: handleModal,\n\t[NOW_TABS_BUTTON_CLICKED]: handleNowButtonClicked,\n\t[NOW_TABS_ASSIGNMENT_UPDATE]: handleManualAssignmentUpdate,\n\t[NOW_TABS_ALERT_ACTION_CLICKED]: handleAlertActionClicked,\n\t[NOW_TABS_LIST_DATA_FETCH_COMPLETED]: handleDataFetchSuccess,\n\t[NOW_TABS_REFRESH_REQUESTED]: handleRefreshRequested,\n\t[COMPONENT_DISCONNECTED]: ({ state, updateState }) => {\n\t\tremoveInterval(state.intervalId, updateState);\n\t},\n\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\taction,\n\t\tupdateState,\n\t\tstate,\n\t\tdispatch\n\t}) => {\n\t\tconst {\n\t\t\tpayload: { name, value }\n\t\t} = action;\n\t\tconst { intervalId } = state;\n\t\tif ((name == 'isRefreshRequested' && value) || name == 'tabItems') {\n\t\t\tdispatch(UPDATE_REFRESH_REQUESTED_DATA);\n\t\t\tif (!intervalId) {\n\t\t\t\taddInterval(updateState, dispatch);\n\t\t\t}\n\t\t} else if (name == 'isRefreshRequested' && !value) {\n\t\t\tremoveInterval(intervalId, updateState);\n\t\t}\n\t},\n\t[UPDATE_REFRESH_REQUESTED_DATA]: updateRefreshRequestedData,\n\t[UPDATE_DEFAULT_SORT_ORDER]: updateDefaultSortOrderEffect,\n\t[UPDATE_FILTERS]: updateFiltersEffect\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.channel-tabs-list{position:relative;top:1rem}.sn-manager-channels-tabs{height:100%;display:flex;flex-direction:column}.sn-manager-channels-tabs now-record-list-connected{height:100%;min-height:38.1875rem}.sn-manager-work-item-list{height:100%;display:flex;flex-direction:column}.sn-manager-work-item-list now-record-list-connected{height:100%;min-height:20.625rem}\", \"\"]);\n\n// exports\n","const view = () => {\n\treturn <div />;\n};\n\nexport default {\n\tview\n};\n","const UserGroupProps = {\n\tlabelsAvailable: { default: false },\n\toptions: { default: {} }\n};\n\nexport default {\n\tproperties: UserGroupProps\n};\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tUSER_GROUP_ACTIONS,\n\tUSER_GROUPS_RESULT,\n\tUSER_GROUPS_RESULT_NODE,\n\tUSER_GROUPS_MANAGED_RESULT,\n\tUSER_GROUPS_MANAGED_RESULT_NODE,\n\tUSER_GROUPS_MANAGED_ADDITIONAL_RESULT,\n\tUSER_GROUPS_MANAGED_ADDITIONAL_RESULT_NODE\n} from '../../constants';\nimport { GROUP_QUERY, MANAGED_GROUP_QUERY } from '../../queries';\n\nconst { COMPONENT_RENDERED } = actionTypes;\n\nconst groupFetchHandler = createGraphQLEffect(GROUP_QUERY, {\n\tvariableList: ['userCondition'],\n\tsuccessActionType: USER_GROUP_ACTIONS.GROUPS_FETCH_SUCCEEDED,\n\terrorActionType: USER_GROUP_ACTIONS.GROUPS_FETCH_FAILED\n});\n\nconst managedGroupFetchHandler = createGraphQLEffect(MANAGED_GROUP_QUERY, {\n\tvariableList: ['userCondition'],\n\tsuccessActionType: USER_GROUP_ACTIONS.GROUPS_FETCH_SUCCEEDED,\n\terrorActionType: USER_GROUP_ACTIONS.GROUPS_FETCH_FAILED\n});\n\n/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\nconst logErrorEffect = coeffects => {\n\tconst {\n\t\taction: { type, payload }\n\t} = coeffects;\n\tconsole.error(type, payload);\n};\n\nconst groupFetchSuccessHandler = ({\n\taction,\n\tstate,\n\tdispatch,\n\tupdateProperties\n}) => {\n\tconst forManagedGroups = get(\n\t\tstate,\n\t\t'properties.options.forManagedGroups',\n\t\tfalse\n\t);\n\tlet groupsData = '';\n\n\tif (forManagedGroups) {\n\t\tconst managedGroupData = get(action, USER_GROUPS_MANAGED_RESULT, []);\n\t\tconst addManagedGroupData = get(\n\t\t\taction,\n\t\t\tUSER_GROUPS_MANAGED_ADDITIONAL_RESULT,\n\t\t\t[]\n\t\t);\n\n\t\tgroupsData += managedGroupData\n\t\t\t.map(result => {\n\t\t\t\treturn get(result, USER_GROUPS_MANAGED_RESULT_NODE, '');\n\t\t\t})\n\t\t\t.concat(\n\t\t\t\taddManagedGroupData.map(result => {\n\t\t\t\t\treturn get(\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tUSER_GROUPS_MANAGED_ADDITIONAL_RESULT_NODE,\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.join(',');\n\n\t\tupdateProperties({\n\t\t\tmanagedGroups: groupsData\n\t\t});\n\t} else {\n\t\tconst data = get(action, USER_GROUPS_RESULT, []);\n\t\tgroupsData += data\n\t\t\t.map(result => {\n\t\t\t\treturn get(result, USER_GROUPS_RESULT_NODE, '');\n\t\t\t})\n\t\t\t.join(',');\n\n\t\tupdateProperties({\n\t\t\tassignmentGroups: groupsData\n\t\t});\n\t}\n\n\tconst user = get(state, 'properties.options.user', null);\n\n\tlet sessionObject = JSON.parse(sessionStorage.getItem(user));\n\tif (!sessionObject) sessionObject = {};\n\n\tif (groupsData != '') {\n\t\tsessionObject[\n\t\t\tforManagedGroups ? 'managedGroups' : 'groups'\n\t\t] = groupsData;\n\t\tsessionStorage.setItem(user, JSON.stringify(sessionObject));\n\t} else\n\t\tgroupsData = get(\n\t\t\tsessionObject,\n\t\t\tforManagedGroups ? 'managedGroups' : 'groups',\n\t\t\t''\n\t\t);\n\n\tconst groupsDataAvailable = groupsData ? true : false;\n\n\tupdateProperties({\n\t\tgroupsAvailable: groupsDataAvailable\n\t});\n\n\tdispatch(USER_GROUP_ACTIONS.GROUPS_READY, {\n\t\tuser: user,\n\t\tgroups: groupsData\n\t});\n};\n\nconst onRender = ({ state, dispatch }) => {\n\tconst user = get(state, 'properties.options.user', '');\n\n\tconst forManagedGroups = get(\n\t\tstate,\n\t\t'properties.options.forManagedGroups',\n\t\tfalse\n\t);\n\n\tconst userCondition = forManagedGroups ? `manager=${user}` : `user=${user}`;\n\n\tconst sessionStorageStringified = sessionStorage.getItem(user);\n\n\tif (!isEmpty(sessionStorageStringified)) {\n\t\tdispatch(USER_GROUP_ACTIONS.GROUPS_FETCH_SUCCEEDED);\n\t} else if (forManagedGroups) {\n\t\tdispatch(USER_GROUP_ACTIONS.MANAGED_GROUPS_FETCH, { userCondition });\n\t} else {\n\t\tdispatch(USER_GROUP_ACTIONS.GROUPS_FETCH, { userCondition });\n\t}\n};\n\nconst handlers = {\n\t[USER_GROUP_ACTIONS.GROUPS_FETCH]: groupFetchHandler,\n\t[USER_GROUP_ACTIONS.MANAGED_GROUPS_FETCH]: managedGroupFetchHandler,\n\t[USER_GROUP_ACTIONS.GROUPS_FETCH_SUCCEEDED]: groupFetchSuccessHandler,\n\t[USER_GROUP_ACTIONS.GROUPS_FETCH_FAILED]: logErrorEffect,\n\t[COMPONENT_RENDERED]: onRender\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\nimport '@servicenow/now-heading';\n\nexport default createCustomElement('sn-manager-filter-config', {\n\trenderer: { type: snabbdom, view },\n\n\tinitialState: {\n\t\trecordData: [],\n\t\tfilter: {},\n\t\tfilterConfig: {},\n\t\tloaded: false\n\t},\n\n\tproperties: {\n\t\tsysId: {},\n\t\tpaddingRequired: {},\n\t\tresetFiltersOption: {\n\t\t\tdefault: true\n\t\t},\n\t\tshowTitle: {\n\t\t\tdefault: true\n\t\t},\n\t\toverrideFilterConfig: {\n\t\t\tdefault: false\n\t\t},\n\t\tfilterRelatedData: {\n\t\t\tdefault: {}\n\t\t},\n\t\tshowLoadingIcon: {\n\t\t\tdefault: true\n\t\t}\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import 'sn-component-filter';\nimport '@servicenow/now-heading';\nimport { t } from 'sn-translate';\nimport get from 'lodash/get';\nimport '@servicenow/now-button';\nimport { ACTIONS } from './constants';\nimport isEmpty from 'lodash/isEmpty';\n\nconst view = state => {\n\tconst configureFilter = (\n\t\t{ tableNameField, fieldName, typeField, filterQuery, filterName },\n\t\toverrideFilterConfig,\n\t\tfilterRelatedData\n\t) => {\n\t\tconst filterConfiguration = !overrideFilterConfig\n\t\t\t? get(state, `filterConfig[\"${tableNameField}.${fieldName}\"]`, [])\n\t\t\t: filterRelatedData.selectedGroups;\n\n\t\treturn (\n\t\t\t<div className=\"display-vertical\">\n\t\t\t\t<now-filter-connected\n\t\t\t\t\tlabel={filterName}\n\t\t\t\t\tappendToPayload={{ field: fieldName }}\n\t\t\t\t\tlistMode=\"multi\"\n\t\t\t\t\ttable={tableNameField}\n\t\t\t\t\tfield={fieldName}\n\t\t\t\t\tfieldType={typeField}\n\t\t\t\t\tencodedQuery={filterQuery}\n\t\t\t\t\tselectedIds={filterConfiguration}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tvar recData = state.recordData;\n\tvar showTitle = get(state, 'properties.showTitle');\n\tvar showLoadingIcon = get(state, 'properties.showLoadingIcon');\n\tvar overrideFilterConfig = get(state, 'properties.overrideFilterConfig');\n\tvar filterRelatedData = get(state, 'properties.filterRelatedData');\n\tconst iterateRecords = recData => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{recData.map(recData =>\n\t\t\t\t\tconfigureFilter(\n\t\t\t\t\t\trecData,\n\t\t\t\t\t\toverrideFilterConfig,\n\t\t\t\t\t\tfilterRelatedData\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\tif (state.loaded === true) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\tget(state, 'properties.paddingRequired', '')\n\t\t\t\t\t\t? 'heading-with-filters-padding'\n\t\t\t\t\t\t: 'heading-with-filters-no-padding'\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{showTitle && get(state, 'properties.paddingRequired', '') ? (\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={t('Filters')}\n\t\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t\twont-wrap\n\t\t\t\t\t\thas-no-margin\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t<div className=\"filters\">{iterateRecords(recData)}</div>\n\t\t\t\t{get(state, 'properties.resetFiltersOption', true) &&\n\t\t\t\t!isEmpty(get(state, 'filterConfig', {})) ? (\n\t\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\t\tlabel={t('Reset filters')}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\ttype: ACTIONS.RESET_FILTERS\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tif (showLoadingIcon)\n\t\t\treturn <now-empty-state type=\"loading\"></now-empty-state>;\n\t\telse return '';\n\t}\n};\n\nexport default view;\n","import { actionTypes } from '@servicenow/ui-core';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { ACTIONS } from './constants';\nimport {\n\tbootstrapDetailsData,\n\tqueryTableForRecords,\n\trecordRequestSuccess,\n\tdispForFilterSysIDReq,\n\tdispatchAppliedFiltersObject,\n\tresetFilters,\n\tstopPropagationOfPopoverEventSet\n} from './effects';\nimport { NOW_POPOVER_OPENED_SET } from '../constants';\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrapDetailsData,\n\t[ACTIONS.RECORD_DETAILS_REQUESTED]: queryTableForRecords,\n\t[ACTIONS.RECORD_DETAILS_REQUEST_SUCCEEDED]: recordRequestSuccess,\n\t[ACTIONS.SYS_ID_REQUEST_FAILED]: logErrorEffect,\n\t[ACTIONS.NOW_FILTER_CONNECTED_APPLIED_ITEMS]: dispForFilterSysIDReq,\n\t[ACTIONS.PARENT_UPDATED_FILTERS_OBJECT]: dispatchAppliedFiltersObject,\n\t[ACTIONS.NOW_BUTTON_BARE_CLICKED]: resetFilters,\n\t[NOW_POPOVER_OPENED_SET]: stopPropagationOfPopoverEventSet\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { ACTIONS } from './constants';\nimport { APPLIED_FILTERS_OBJECT } from '../constants';\nimport { glideRecordQuery as query } from './query';\nimport get from 'lodash/get';\nimport sortBy from 'lodash/sortBy';\n\nexport const queryTableForRecords = createGraphQLEffect(query, {\n\tvariableList: ['conditions', 'table'],\n\tsuccessActionType: ACTIONS.RECORD_DETAILS_REQUEST_SUCCEEDED,\n\terrorActionType: ACTIONS.SYS_ID_REQUEST_FAILED\n});\n\n/* Get the records to be placed in schedule module,\nsort them by order val, get their field vals and update state */\nexport const recordRequestSuccess = ({ action, updateState, state }) => {\n\tconst results = get(\n\t\taction,\n\t\t`payload.data.GlideRecord_Query.sn_mgr_workspace_filter_configuration._results`\n\t);\n\n\tconst overrideFilterConfig = get(state, 'properties.overrideFilterConfig');\n\tconst filterQuery = get(state, 'properties.filterRelatedData.filterQuery');\n\n\tlet orderRecords = sortBy(results, ['sys_id', 'order.value']);\n\n\t//Filter out records which are inactive\n\tlet activeRecords = orderRecords.filter(i => get(i, 'active.value', false));\n\n\tlet recordData = activeRecords.map(k => {\n\t\treturn {\n\t\t\ttableNameField: get(k, 'table.value', ''),\n\t\t\tfieldName: get(k, 'field.value', ''),\n\t\t\ttypeField: get(k, 'type.value', '') === 1 ? 'choice' : 'reference',\n\t\t\tfilterQuery: !overrideFilterConfig\n\t\t\t\t? get(k, 'filter_query.value', '')\n\t\t\t\t: filterQuery,\n\t\t\tfilterName: get(k, 'filter_name.value', ''),\n\t\t\trecordSysID: get(k, 'sys_id.value', '')\n\t\t};\n\t});\n\n\tupdateState({ recordData: recordData, loaded: true });\n};\n\n/**\n * Triggered when component is initially bootstrapped used\n * to dispatch the action that will retrieve the data from\n * the desired record\n */\nexport const bootstrapDetailsData = ({ properties, dispatch }) => {\n\tdispatch(ACTIONS.RECORD_DETAILS_REQUESTED, {\n\t\ttable: 'sn_mgr_workspace_filter_configuration',\n\t\tconditions: `workspace_module=${properties.sysId}`\n\t});\n};\n\n/* Getting all the applied filters, from all filter configs; storing this, and updating the\nfilter object in state with this info */\nexport const dispForFilterSysIDReq = ({\n\tstate,\n\tdispatch,\n\taction,\n\tupdateState\n}) => {\n\tconst { filter } = state;\n\tconst { filterConfig } = state;\n\n\tlet tableAndField = action.payload.table + '.' + action.payload.field;\n\tlet table = action.payload.table;\n\tlet field = action.payload.field;\n\n\tlet appliedItems = get(action, 'payload.selectedIds', []);\n\n\t//If applied filters of a specific prop are cleared, delete that prop itself\n\tif (appliedItems.length === 0) {\n\t\t// Delete that specific property\n\t\tlet newFilter = Object.keys(filter).reduce((nf, t) => {\n\t\t\tif (t !== table) {\n\t\t\t\tnf[t] = filter[t];\n\t\t\t} else {\n\t\t\t\tnf[t] = Object.keys(filter[t]).reduce((reduced, f) => {\n\t\t\t\t\tif (f != field) {\n\t\t\t\t\t\treduced[f] = filter[t][f];\n\t\t\t\t\t}\n\t\t\t\t\treturn reduced;\n\t\t\t\t}, {});\n\t\t\t}\n\t\t\treturn nf;\n\t\t}, {});\n\n\t\t// Delete specific prop from filter config object as well\n\t\tconst newFilterConfig = { ...filterConfig };\n\t\tdelete newFilterConfig[tableAndField];\n\t\tupdateState({\n\t\t\tfilter: newFilter,\n\t\t\tfilterConfig: newFilterConfig\n\t\t});\n\t} else {\n\t\tupdateState({\n\t\t\t...state,\n\t\t\tfilter: {\n\t\t\t\t...filter,\n\t\t\t\t[table]: {\n\t\t\t\t\t...filter[table],\n\t\t\t\t\t[field]: appliedItems\n\t\t\t\t}\n\t\t\t},\n\t\t\tfilterConfig: {\n\t\t\t\t...filterConfig,\n\t\t\t\t[tableAndField]: appliedItems\n\t\t\t}\n\t\t});\n\t}\n\n\t/* Dispatch this action, within whose action handler the applied filters action\n\twill be dispatched; This is done so that the filter object state is updated by that time */\n\tdispatch(ACTIONS.PARENT_UPDATED_FILTERS_OBJECT);\n};\n\nexport const dispatchAppliedFiltersObject = ({ state, dispatch }) => {\n\t// Dispatch the filter object whenever updated, so any other comp can use this when needed\n\tdispatch(APPLIED_FILTERS_OBJECT, { ...state.filter });\n};\n\nexport const stopPropagationOfPopoverEventSet = ({ action }) => {\n\taction.stopPropagation();\n};\n\nexport const resetFilters = ({ action, updateState, dispatch }) => {\n\tif (action.payload.type == ACTIONS.RESET_FILTERS) {\n\t\tupdateState({ filter: {}, filterConfig: {} });\n\t\t/* Dispatch this action, within whose action handler the applied filters action\n\t\twill be dispatched; This is done so that the filter object state is updated by that time */\n\t\tdispatch(ACTIONS.PARENT_UPDATED_FILTERS_OBJECT);\n\t}\n};\n","// Query to get all fields from filter config table\n\nexport const glideRecordQuery = `\n    query($conditions: String, $pagination: Glide_PaginationInputType) {\n        GlideRecord_Query {\n            sn_mgr_workspace_filter_configuration (queryConditions: $conditions, pagination: $pagination) {\n            _results {\n                filter_name{\n                    displayValue\n                    value\n                }\n                table {\n                    displayValue\n                    value\n                }\n                field {\n                    displayValue\n                    value\n                }\n                type {\n                    displayValue\n                    value\n                }\n                workspace_module {\n                    displayValue\n                    value\n                }\n                order {\n                    displayValue\n                    value\n                }\n                filter_query {\n                    displayValue \n                    value\n                }\n                active { \n                    value\n                }\n            }\n        }\n    }\n}\n`;\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.display-vertical{padding-bottom:.5rem}.heading-with-filters-padding{display:flex;flex-direction:column;height:100%;padding-left:1.5rem;overflow-x:hidden;overflow-y:auto}.heading-with-filters-padding now-heading{padding-top:1.5rem;padding-bottom:1.5rem}.heading-with-filters-no-padding{display:flex;flex-direction:column;height:100%;padding-left:1.5rem;overflow-x:hidden;overflow-y:auto}.heading-with-filters-no-padding now-heading{padding-bottom:1.5rem}\", \"\"]);\n\n// exports\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { get } from 'lodash';\nimport { getSessionData, setSessionData } from '../../utils/utils';\nimport {\n\tFETCH_QUEUES_AND_AGENTS_IDS_ERROR,\n\tFETCH_QUEUES_AND_AGENTS_IDS_SUCCESS,\n\tFETCH_QUEUES_AND_AGENTS_IDS,\n\tFETCH_GROUP_CHANEL_QUEUE_MAPPING,\n\tFETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS\n} from './constants';\nimport { fetchQueuesAndAgentsIdsQuery } from './queries';\nimport { MODULES } from '../../common/constants';\nimport forEach from 'lodash/forEach';\nimport { updateAppliedFilters } from '../common/helpers';\n\nexport const fetchQueuesAndAgentsIdsSuccess = ({\n\tstate,\n\taction,\n\tupdateState\n}) => {\n\tvar groups = [];\n\tconst managedQueues = {};\n\tconst appliedFiltersBucket = {};\n\tconst data = get(action, 'payload.data');\n\tconst groupQueues = get(\n\t\tdata,\n\t\t'GlideRecord_Query.awa_group_queue_priority._results'\n\t);\n\tforEach(groupQueues, item => {\n\t\tconst queueId = item && item.queue ? item.queue.value : '';\n\t\tif (groups.indexOf(get(item, 'group.value')) == -1) {\n\t\t\tgroups.push(get(item, 'group.value'));\n\t\t}\n\t\tmanagedQueues[queueId] = {\n\t\t\tservice_channel: get(item, 'queue._reference.service_channel.value')\n\t\t};\n\t});\n\n\tconst assignmentGroups = groups.join(',');\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tsessionData.selectedGroups = assignmentGroups;\n\tif (state.renderUserGroupFetcher) {\n\t\tforEach(groups, gr => {\n\t\t\tappliedFiltersBucket[gr] = 0;\n\t\t});\n\t\tsessionData.managedGroups = assignmentGroups;\n\t\tsessionData.managedQueues = managedQueues;\n\t\tsessionData.appliedFiltersBucket = appliedFiltersBucket;\n\t}\n\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n\tconst queuesIds = [];\n\tObject.keys(managedQueues).forEach(queue => {\n\t\tif (queuesIds.indexOf(queue) == -1) {\n\t\t\tqueuesIds.push(queue);\n\t\t}\n\t});\n\tupdateState({\n\t\tqueuesIds,\n\t\tassignmentGroups: assignmentGroups,\n\t\trenderOverviewKpiContainer: true,\n\t\trenderOverviewTabs: true,\n\t\trenderFilter: true,\n\t\trenderUserGroupFetcher: false\n\t});\n};\n\nexport const fetchQueuesAndAgentsIds = createGraphQLEffect(\n\tfetchQueuesAndAgentsIdsQuery,\n\t{\n\t\tvariableList: ['queryConditions'],\n\t\tsuccessActionType: FETCH_QUEUES_AND_AGENTS_IDS_SUCCESS,\n\t\terrorActionType: FETCH_QUEUES_AND_AGENTS_IDS_ERROR\n\t}\n);\n\nexport const queryGroupQueueData = ({ action, dispatch }) => {\n\tconst assignmentGroups = get(action, 'payload.groups');\n\tconst queryConditions = 'groupIN' + assignmentGroups;\n\tdispatch(FETCH_QUEUES_AND_AGENTS_IDS, {\n\t\tqueryConditions\n\t});\n\tdispatch(FETCH_GROUP_CHANEL_QUEUE_MAPPING, {\n\t\tqueryConditions\n\t});\n};\n\nexport const fetchGroupChannelQueueMapping = createGraphQLEffect(\n\tfetchQueuesAndAgentsIdsQuery,\n\t{\n\t\tvariableList: ['queryConditions'],\n\t\tsuccessActionType: FETCH_GROUP_CHANEL_QUEUE_MAPPING_SUCCESS,\n\t\terrorActionType: FETCH_QUEUES_AND_AGENTS_IDS_ERROR\n\t}\n);\n\nexport const fetchGroupChannelQueueMappingSuccess = ({ action }) => {\n\tconst queueGroupMap = {};\n\tconst channelGroupMap = {};\n\tconst data = get(action, 'payload.data');\n\tconst groupQueues = get(\n\t\tdata,\n\t\t'GlideRecord_Query.awa_group_queue_priority._results'\n\t);\n\tforEach(groupQueues, queue => {\n\t\tconst queueId = queue && queue.queue ? queue.queue.value : '';\n\t\tconst groupId = get(queue, 'group.value');\n\t\tqueueGroupMap[queueId] = queueGroupMap[queueId] || [];\n\t\tif (queueGroupMap[queueId].indexOf(groupId) == -1)\n\t\t\tqueueGroupMap[queueId].push(groupId);\n\n\t\tconst channelId = get(queue, 'queue._reference.service_channel.value');\n\t\tchannelGroupMap[channelId] = channelGroupMap[channelId] || [];\n\t\tif (channelGroupMap[channelId].indexOf(groupId) == -1)\n\t\t\tchannelGroupMap[channelId].push(groupId);\n\t});\n\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tsessionData.queueGroupMap = queueGroupMap;\n\tsessionData.channelGroupMap = channelGroupMap;\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n};\n\nexport const updateDefaultSortOrderEffect = ({ action, updateState }) => {\n\tconst { type, defaultSort } = get(action, 'payload');\n\tupdateState({\n\t\tpath: `useDefaultSortOrder.${type}`,\n\t\tvalue: defaultSort,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nexport const updateFiltersEffect = ({ action, updateState }) => {\n\tconst { type } = get(action, 'payload');\n\tupdateState({\n\t\tpath: `useDefaultFilters.${type}`,\n\t\tvalue: false,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nexport const filtersAppliedEffect = ({ action, dispatch }) => {\n\tvar groups;\n\tvar groupsInAppliedBucket;\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tconst allGroups = sessionData.managedGroups.split(',');\n\n\tif (\n\t\tObject.keys(action.payload).length == 0 ||\n\t\tObject.keys(action.payload.sn_wfo_manager_groups).length == 0\n\t) {\n\t\tgroups = sessionData.managedGroups;\n\t\tgroupsInAppliedBucket = [];\n\t} else {\n\t\tvar groupsSelected =\n\t\t\taction.payload.sn_wfo_manager_groups.grmember_group;\n\t\tgroupsInAppliedBucket = groupsSelected;\n\t\tgroups = groupsSelected.join();\n\t}\n\tsessionData.selectedGroups = groups;\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n\n\tupdateAppliedFilters(allGroups, groupsInAppliedBucket);\n\n\tconst queryConditions = 'groupIN' + groups;\n\tdispatch(FETCH_QUEUES_AND_AGENTS_IDS, {\n\t\tqueryConditions\n\t});\n};\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nexport const fetchQueuesAndAgentsIdsQuery = `\n\tquery ($queryConditions: String!) {\n\t\tGlideRecord_Query {\n\t  \t\tawa_group_queue_priority(queryConditions: $queryConditions, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tgroup{\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tqueue {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\t_reference {\n\t\t\t\t\t\t\tservice_channel {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t  \t\t}\n\t\t}\n  \t}\n`;\n","import './queue-details-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_RENDERED\n} from '@servicenow/ui-core/lib/constants';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { get, isEmpty } from 'lodash';\nimport { getSessionData } from '../../utils/utils';\nimport { MODULES, APPLIED_FILTERS_OBJECT } from '../../common/constants';\nimport {\n\tCHANNEL_SUPERVISOR_LIST_CONFIG_READY,\n\tUPDATE_DEFAULT_SORT_ORDER,\n\tUPDATE_FILTERS,\n\tSYS_PROP_FILTER_CONFIG_ENABLE\n} from '../common/constants';\nimport { getProperty } from 'sn-uxpage-presource';\nimport {\n\tfetchReports,\n\tfetchReportsSuccess,\n\tfetchAllKpiReportConfig,\n\tfetchKpiReportConfig,\n\tfetchKpiReportConfigSuccess,\n\tfetchInteractiveReferenceField,\n\tfetchInteractiveReferenceFieldSuccess,\n\tfetchGroupInteractiveReferenceField,\n\tfetchGroupInteractiveReferenceFieldSuccess,\n\tupdateSupervisorListConfig,\n\tupdateDefaultSortOrderEffect,\n\tupdateFiltersEffect,\n\tfiltersAppliedEffect\n} from './actionHandlers';\n\nimport {\n\tFETCH_REPORTS,\n\tFETCH_REPORTS_SUCCESS,\n\tFETCH_ALL_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG_SUCCESS,\n\tFETCH_INTERACTIVE_REFERENCE_FIELD,\n\tFETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD,\n\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\tERROR_OCCURED\n} from './constants';\nimport { PAGE } from '../common/constants';\nimport { getFilterDetails, hasFilterChanged } from '../common/helpers';\n\nexport default createCustomElement('sn-manager-queue-details-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tloading: true,\n\t\treportData: [],\n\t\tqueueName: '',\n\t\tserviceChannelId: '',\n\t\trenderQueueTabs: false,\n\t\trenderSupervisorListConfigFetcher: false,\n\t\tsupervisorListConfig: {},\n\t\tisRefreshRequested: false,\n\t\tinitializationDone: false,\n\t\tuseDefaultSortOrder: {\n\t\t\tAGENT: true,\n\t\t\tQUEUE: true\n\t\t},\n\t\tuseDefaultFilters: {\n\t\t\tAGENT: true\n\t\t},\n\t\tassignmentGroups: '',\n\t\tshowFilter: true\n\t},\n\tproperties: {\n\t\tsysId: '',\n\t\tactive: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ state, dispatch, updateState }) => {\n\t\t\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\t\t\tconst { supervisorListConfig, managedQueues } = sessionData;\n\t\t\tconst queuesysId = get(state, 'properties.sysId', '');\n\t\t\tconst showFilter = getProperty(SYS_PROP_FILTER_CONFIG_ENABLE, true);\n\t\t\tconst { allGroups, selectedGroups } = getFilterDetails(\n\t\t\t\tPAGE.QUEUE,\n\t\t\t\tqueuesysId\n\t\t\t);\n\t\t\tconst selectedGroupsCount = selectedGroups.length;\n\t\t\tconst assignmentGroups = selectedGroupsCount\n\t\t\t\t? selectedGroups.join()\n\t\t\t\t: allGroups.join();\n\n\t\t\tupdateState({ isRefreshRequested: true, showFilter: showFilter });\n\n\t\t\tconst serviceChannelId =\n\t\t\t\tmanagedQueues && managedQueues[queuesysId]\n\t\t\t\t\t? managedQueues[queuesysId].service_channel\n\t\t\t\t\t: '';\n\t\t\tif (\n\t\t\t\t!isEmpty(supervisorListConfig) &&\n\t\t\t\t!isEmpty(supervisorListConfig[serviceChannelId])\n\t\t\t) {\n\t\t\t\tupdateState({\n\t\t\t\t\tsupervisorListConfig,\n\t\t\t\t\trenderQueueTabs: true,\n\t\t\t\t\tserviceChannelId\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateState({ renderSupervisorListConfigFetcher: true });\n\t\t\t}\n\t\t\tupdateState({\n\t\t\t\tassignmentGroups: assignmentGroups,\n\t\t\t\tinitializationDone: true\n\t\t\t});\n\n\t\t\tdispatch(FETCH_REPORTS, {\n\t\t\t\tconditions: 'queue.sys_id=' + queuesysId + '^ORDERBYorder',\n\t\t\t\tsysId: 'sys_id=' + queuesysId\n\t\t\t});\n\t\t},\n\t\t[FETCH_REPORTS]: fetchReports,\n\t\t[FETCH_REPORTS_SUCCESS]: fetchReportsSuccess,\n\t\t[FETCH_ALL_KPI_REPORTCONFIG]: fetchAllKpiReportConfig,\n\t\t[FETCH_KPI_REPORTCONFIG]: fetchKpiReportConfig,\n\t\t[FETCH_KPI_REPORTCONFIG_SUCCESS]: fetchKpiReportConfigSuccess,\n\t\t[FETCH_INTERACTIVE_REFERENCE_FIELD]: fetchInteractiveReferenceField,\n\t\t[FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS]: fetchInteractiveReferenceFieldSuccess,\n\t\t[FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD]: fetchGroupInteractiveReferenceField,\n\t\t[FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS]: fetchGroupInteractiveReferenceFieldSuccess,\n\t\t[ERROR_OCCURED]: logErrorEffect,\n\t\t[CHANNEL_SUPERVISOR_LIST_CONFIG_READY]: updateSupervisorListConfig,\n\t\t[COMPONENT_PROPERTY_CHANGED]: ({ action, updateState }) => {\n\t\t\tconst {\n\t\t\t\tpayload: { name, value }\n\t\t\t} = action;\n\t\t\tif (name == 'active' && value) {\n\t\t\t\tupdateState({ isRefreshRequested: true });\n\t\t\t} else if (name == 'active' && !value) {\n\t\t\t\tupdateState({ isRefreshRequested: false });\n\t\t\t}\n\t\t},\n\t\t[UPDATE_DEFAULT_SORT_ORDER]: updateDefaultSortOrderEffect,\n\t\t[UPDATE_FILTERS]: updateFiltersEffect,\n\t\t[COMPONENT_RENDERED]: ({ state, dispatch, updateState }) => {\n\t\t\tconst queuesysId = get(state, 'properties.sysId', '');\n\t\t\tconst assignmentGroups = get(state, 'assignmentGroups').split(',');\n\t\t\tif (\n\t\t\t\tstate.initializationDone &&\n\t\t\t\thasFilterChanged(PAGE.QUEUE, queuesysId, assignmentGroups)\n\t\t\t) {\n\t\t\t\tconst { selectedGroups } = getFilterDetails(\n\t\t\t\t\tPAGE.QUEUE,\n\t\t\t\t\tqueuesysId\n\t\t\t\t);\n\t\t\t\tconst selectedGroupsCount = selectedGroups.length;\n\t\t\t\tdispatch(\n\t\t\t\t\tAPPLIED_FILTERS_OBJECT,\n\t\t\t\t\tselectedGroupsCount\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\tsn_wfo_manager_groups: {\n\t\t\t\t\t\t\t\tgrmember_group: selectedGroups\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  } // eslint-disable-line\n\t\t\t\t\t\t: { sn_wfo_manager_groups: {} }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultSortOrder.AGENT',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultSortOrder.QUEUE',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\tpath: 'useDefaultFilters.AGENT',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t\t},\n\t\t[APPLIED_FILTERS_OBJECT]: filtersAppliedEffect\n\t},\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.queue-details-container{height:100%;display:flex;flex-direction:column}.queue-details-container-header{display:flex;justify-content:space-between;padding:1.5rem;min-height:80px}.queue-details-container-header sn-manager-filter-config{height:2.8125rem;margin-top:-4px}.queue-details-container .queue-tabs-container{margin-top:2rem;height:100%}\", \"\"]);\n\n// exports\n","import '@servicenow/now-heading';\nimport '../sn-manager-channels-tabs';\nimport '../sn-manager-channel-kpis';\nimport { t } from 'sn-translate';\nimport { isEmpty, forEach, get } from 'lodash';\nimport '../sn-manager-channels-tabs';\nimport {\n\tQUEUE_DEFAULT_TAB_ITEMS,\n\tQUEUE_DEFAULT_TAB_LIST_DETAILS\n} from './constants';\nimport '../common/dataProviders/sn-manager-channel-supervisor-list-config/channel-supervisor-list-config';\nimport '../../common/sn-manager-filter-config';\nimport { SUPERVISOR_VIEW_NAME } from '../common/constants';\nimport {\n\tgetSupervisorViewConfigQuery,\n\tgetWorkItemDefaultQuery\n} from '../common/helpers';\nimport { CHANNELS_MODULE_SYSID } from '../../common/constants';\nimport { PAGE } from '../common/constants';\nimport { getFilterDetails } from '../common/helpers';\n\nconst _renderQueueTabs = state => {\n\tlet tabItems = [];\n\tlet supervisorListConfigDetails = {};\n\tconst {\n\t\tserviceChannelId,\n\t\tsupervisorListConfig,\n\t\tisRefreshRequested,\n\t\tuseDefaultSortOrder,\n\t\tuseDefaultFilters,\n\t\tassignmentGroups,\n\t\tqueueName,\n\t\tproperties: { sysId }\n\t} = state;\n\tif (\n\t\t!isEmpty(supervisorListConfig) &&\n\t\t!isEmpty(supervisorListConfig[serviceChannelId])\n\t) {\n\t\tconst supervisorLists = supervisorListConfig[serviceChannelId];\n\t\tfor (const property in supervisorLists) {\n\t\t\tconst supervisorList = supervisorLists[property];\n\t\t\tconst {\n\t\t\t\ttabTitle,\n\t\t\t\tviewName,\n\t\t\t\tlistTitle,\n\t\t\t\tworkItemAlias\n\t\t\t} = supervisorList;\n\t\t\tconst supervisorListConfigQuery = getSupervisorViewConfigQuery(\n\t\t\t\tworkItemAlias,\n\t\t\t\tserviceChannelId,\n\t\t\t\tsysId,\n\t\t\t\tassignmentGroups\n\t\t\t);\n\n\t\t\tif (viewName) {\n\t\t\t\tsupervisorListConfigDetails[viewName] = {\n\t\t\t\t\ttable: viewName,\n\t\t\t\t\tlistTitle: listTitle,\n\t\t\t\t\tview: SUPERVISOR_VIEW_NAME,\n\t\t\t\t\tquery: supervisorListConfigQuery\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttabItems.push({\n\t\t\t\tid: viewName,\n\t\t\t\tlabel: tabTitle\n\t\t\t});\n\t\t}\n\t}\n\tvar queueSysId = sysId;\n\tQUEUE_DEFAULT_TAB_LIST_DETAILS.WORK_ITEMS.query = getWorkItemDefaultQuery(\n\t\tserviceChannelId,\n\t\tqueueSysId,\n\t\tassignmentGroups\n\t);\n\tforEach(QUEUE_DEFAULT_TAB_ITEMS, item => {\n\t\ttabItems.push(item);\n\t});\n\tconst selectedTab = tabItems[0].id;\n\n\tconst tabListDetails = {\n\t\t...supervisorListConfigDetails,\n\t\t...QUEUE_DEFAULT_TAB_LIST_DETAILS\n\t};\n\treturn (\n\t\t<div className=\"queue-tabs-container\">\n\t\t\t<sn-manager-channels-tabs\n\t\t\t\ttabItems={tabItems}\n\t\t\t\ttabListDetails={tabListDetails}\n\t\t\t\tselectedTab={selectedTab}\n\t\t\t\tassignmentGroups={assignmentGroups}\n\t\t\t\tchannelId={serviceChannelId}\n\t\t\t\tqueueId={sysId}\n\t\t\t\tisRefreshRequested={isRefreshRequested}\n\t\t\t\tuseDefaultSortOrder={useDefaultSortOrder}\n\t\t\t\tuseDefaultFilters={useDefaultFilters}\n\t\t\t\tname={queueName}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst _renderSupervisorListConfigFetcher = sysId => {\n\treturn (\n\t\t<sn-manager-channel-supervisor-list-config serviceChannelId={sysId} />\n\t);\n};\n\nconst _getFilterRelatedData = sysId => {\n\tconst { allGroups, selectedGroups } = getFilterDetails(PAGE.QUEUE, sysId);\n\treturn {\n\t\tfilterQuery: 'sys_idIN' + allGroups,\n\t\tselectedGroups: selectedGroups\n\t};\n};\n\nconst view = state => {\n\tconst heading = t(state.queueName);\n\tconst {\n\t\tserviceChannelId,\n\t\trenderQueueTabs,\n\t\trenderSupervisorListConfigFetcher,\n\t\tshowFilter\n\t} = state;\n\tconst queueSysId = get(state, 'properties.sysId');\n\treturn (\n\t\t<div className=\"queue-details-container\">\n\t\t\t<div className=\"queue-details-container-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={heading}\n\t\t\t\t\tvariant=\"header-primary\"\n\t\t\t\t\tclassName=\"header-color\"\n\t\t\t\t\thasNoMargin={true}\n\t\t\t\t/>\n\t\t\t\t{showFilter ? (\n\t\t\t\t\t<sn-manager-filter-config\n\t\t\t\t\t\tsysId={CHANNELS_MODULE_SYSID}\n\t\t\t\t\t\tshowTitle={false}\n\t\t\t\t\t\toverrideFilterConfig={true}\n\t\t\t\t\t\tfilterRelatedData={_getFilterRelatedData(queueSysId)}\n\t\t\t\t\t\tresetFiltersOption={false}\n\t\t\t\t\t\tshowLoadingIcon={false}\n\t\t\t\t\t></sn-manager-filter-config>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{!state.loading || !isEmpty(state.reportData)\n\t\t\t\t? _renderReportContainer(state.reportData)\n\t\t\t\t: ''}\n\t\t\t{serviceChannelId && renderQueueTabs ? _renderQueueTabs(state) : ''}\n\n\t\t\t{renderSupervisorListConfigFetcher && serviceChannelId\n\t\t\t\t? _renderSupervisorListConfigFetcher(serviceChannelId)\n\t\t\t\t: ''}\n\t\t</div>\n\t);\n};\n\nconst _renderReportContainer = reportData => {\n\treturn <sn-manager-channel-kpis reportData={reportData} />;\n};\n\nexport default view;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\n\ncreateCustomElement('sn-manager-channel-kpis', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\treportData: {\n\t\t\tdefault: {}\n\t\t}\n\t},\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.channel-container{padding:0 1.5rem 1.5rem;background:RGB(var(--now-color--neutral-1,246,247,247))}.channel-container-kpi{display:flex;flex-wrap:wrap;align-items:baseline}.channel-container-kpi now-uxf-visualization-connected{background:RGB(var(--now-color--neutral-0,255,255,255));width:calc(18.4% - 2.5rem);margin:1.5rem .75rem 0 0;min-width:12.5rem}now-empty-state{display:block;align-items:center;flex:1}\", \"\"]);\n\n// exports\n","import '@servicenow/now-empty-state';\nimport '@servicenow/now-uxf-visualization-connected';\nimport { isEmpty } from 'lodash';\n\nconst view = state => {\n\tconst { reportData } = state.properties;\n\treturn (\n\t\t<div className=\"channel-container\">\n\t\t\t<div className=\"channel-container-kpi\">\n\t\t\t\t{!isEmpty(reportData) ? (\n\t\t\t\t\trenderReports(reportData)\n\t\t\t\t) : (\n\t\t\t\t\t<now-empty-state />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderReports = reportData => {\n\treturn reportData.map(reportItem => {\n\t\tconst dataConfigurations = [];\n\t\tdataConfigurations.push(reportItem.dataConfig);\n\t\tconst element = (\n\t\t\t<now-uxf-visualization-connected\n\t\t\t\tlabel={reportItem.reportLabel}\n\t\t\t\tdataConfigurations={JSON.stringify(dataConfigurations)}\n\t\t\t\trefreshFrequency={reportItem.refreshFrequency}\n\t\t\t\tborder={true}\n\t\t\t/>\n\t\t);\n\t\treturn element;\n\t});\n};\n\nexport default view;\n","const view = () => {\n\treturn <div />;\n};\n\nexport default view;\n","import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { fetchChannelSupervisorListConfigQuery } from './queries';\nimport {\n\tFETCH_CHANNEL_SUPERVISOR_LIST_CONFIG,\n\tFETCH_CHANNEL_SUPERVISOR_LIST_CONFIG_SUCCESS,\n\tERROR_OCCURED,\n\tCHANNEL_SUPERVISOR_LIST_CONFIG_READY,\n\tFETCH_WORK_ITEM_TABLE_ALIAS,\n\tFETCH_WORK_ITEM_TABLE_ALIAS_SUCCESS,\n\tNO_OF_VIEWS\n} from '../../constants';\nimport logErrorEffect from '../../../../utils/logErrorEffect';\nimport { get, isEmpty } from 'lodash';\nimport { getSessionData, setSessionData } from '../../../../utils/utils';\nimport { MODULES } from '../../../../common/constants';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\n\nconst fetchChannelSupervisorListConfig = createGraphQLEffect(\n\tfetchChannelSupervisorListConfigQuery,\n\t{\n\t\tvariableList: ['queryConditions'],\n\t\tsuccessActionType: FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchChannelSupervisorListConfigSuccess = ({\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst data = get(action, 'payload.data');\n\tconst payload = get(\n\t\tdata,\n\t\t'GlideRecord_Query.m2m_awa_service_channel_view._results'\n\t);\n\tconst channelMgmtViews = payload.slice(0, NO_OF_VIEWS);\n\tconst configs = [];\n\tconst viewNames = [];\n\tif (!isEmpty(channelMgmtViews)) {\n\t\tchannelMgmtViews.forEach(channelMgmtView => {\n\t\t\tconst { tab_title, view_name, list_title } = channelMgmtView;\n\t\t\tconst supervisorConfig = {\n\t\t\t\ttabTitle: tab_title ? tab_title.value : '',\n\t\t\t\tviewName: view_name ? view_name.value : '',\n\t\t\t\tlistTitle: list_title ? list_title.value : ''\n\t\t\t};\n\t\t\tviewNames.push(supervisorConfig.viewName);\n\t\t\tconfigs.push(supervisorConfig);\n\t\t});\n\t\tupdateState({\n\t\t\tsupervisorConfig: configs\n\t\t});\n\n\t\tconst data = {\n\t\t\tviews: viewNames.join()\n\t\t};\n\t\tdispatch(FETCH_WORK_ITEM_TABLE_ALIAS, {\n\t\t\tsysparm_query: JSON.stringify(data)\n\t\t});\n\t} else {\n\t\tdispatch(CHANNEL_SUPERVISOR_LIST_CONFIG_READY);\n\t}\n};\n\nconst fetchWorkItemTableAlias = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/getWorkItemTableAlias',\n\t{\n\t\tmethod: 'GET',\n\t\tqueryParams: ['sysparm_query'],\n\t\tsuccessActionType: FETCH_WORK_ITEM_TABLE_ALIAS_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchWorkItemTableAliasSuccess = ({ action, state, dispatch }) => {\n\tconst {\n\t\tsupervisorConfig,\n\t\tproperties: { serviceChannelId }\n\t} = state;\n\tconst workItemAliases = get(action, 'payload.result');\n\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tconst { supervisorListConfig = {} } = sessionData;\n\tsupervisorConfig.forEach(config => {\n\t\tconfig.workItemAlias = workItemAliases[config.viewName];\n\t});\n\tsupervisorListConfig[serviceChannelId] = {\n\t\t...supervisorConfig\n\t};\n\tsessionData.supervisorListConfig = supervisorListConfig;\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n\tdispatch(CHANNEL_SUPERVISOR_LIST_CONFIG_READY, { supervisorListConfig });\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch, state }) => {\n\t\tconst { serviceChannelId } = state.properties;\n\t\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\t\tconst { supervisorListConfig } = sessionData;\n\t\tif (\n\t\t\t!isEmpty(supervisorListConfig) &&\n\t\t\t!isEmpty(supervisorListConfig[serviceChannelId])\n\t\t) {\n\t\t\tdispatch(CHANNEL_SUPERVISOR_LIST_CONFIG_READY, {\n\t\t\t\tsupervisorListConfig\n\t\t\t});\n\t\t} else {\n\t\t\tconst queryConditions =\n\t\t\t\t'service_channel=' + serviceChannelId + '^ORDERBYorder';\n\t\t\tdispatch(FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG, {\n\t\t\t\tqueryConditions\n\t\t\t});\n\t\t}\n\t},\n\t[FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG]: fetchChannelSupervisorListConfig,\n\t[FETCH_CHANNEL_SUPERVISOR_LIST_CONFIG_SUCCESS]: fetchChannelSupervisorListConfigSuccess,\n\t[ERROR_OCCURED]: logErrorEffect,\n\t[FETCH_WORK_ITEM_TABLE_ALIAS]: fetchWorkItemTableAlias,\n\t[FETCH_WORK_ITEM_TABLE_ALIAS_SUCCESS]: fetchWorkItemTableAliasSuccess\n};\n","import { GRAPHQL_MAX_LIMIT } from '../../../../common/constants';\n\nexport const fetchChannelSupervisorListConfigQuery = `\n    query ($queryConditions: String!) {\n        GlideRecord_Query {\n            m2m_awa_service_channel_view(queryConditions: $queryConditions, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n                _results {\n                    tab_title {\n                        value\n                    }\n                    view_name {\n                        value\n                    }\n                    list_title {\n                        value\n\t\t\t\t\t}\n                }\n            }\n        }\n    }\n`;\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tFETCH_REPORTS,\n\tFETCH_REPORTS_SUCCESS,\n\tFETCH_ALL_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG_SUCCESS,\n\tFETCH_INTERACTIVE_REFERENCE_FIELD,\n\tFETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD,\n\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\tERROR_OCCURED\n} from './constants';\nimport { get, isEmpty, isUndefined } from 'lodash';\nimport { addReportToList } from '../common/helpers';\nimport { getSessionData, setSessionData } from '../../utils/utils';\nimport { MODULES } from '../../common/constants';\nimport { queueReportsQuery } from './queries';\nimport { updateAppliedFilters } from '../common/helpers';\n\nexport const fetchReports = createGraphQLEffect(queueReportsQuery, {\n\tvariableList: ['conditions', 'sysId'],\n\tsuccessActionType: FETCH_REPORTS_SUCCESS,\n\terrorActionType: ERROR_OCCURED\n});\n\nexport const fetchReportsSuccess = ({ action, updateState, dispatch }) => {\n\tconst reports = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Query.m2m_awa_queue_report._results',\n\t\t[]\n\t);\n\tconst queueName = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Query.awa_queue._results[0].name.value',\n\t\t''\n\t);\n\tconst serviceChannelId = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Query.awa_queue._results[0].service_channel.value',\n\t\t''\n\t);\n\tupdateState({ queueName: queueName, serviceChannelId });\n\tdispatch(FETCH_ALL_KPI_REPORTCONFIG, { reports: reports });\n};\n\nexport const fetchAllKpiReportConfig = ({ action, dispatch, updateState }) => {\n\tconst reports = get(action, 'payload.reports', []);\n\tif (isEmpty(reports)) updateState({ loading: false });\n\telse {\n\t\treports.forEach(reportitem => {\n\t\t\tconst report = get(reportitem, 'report', {});\n\t\t\tconst label = get(reportitem, 'label', {});\n\t\t\tif (isEmpty(report)) return;\n\t\t\tdispatch(\n\t\t\t\tFETCH_KPI_REPORTCONFIG,\n\t\t\t\t{ sys_id: report.value },\n\t\t\t\t{ report_name: label.value || report.displayValue }\n\t\t\t);\n\t\t});\n\t}\n};\nexport const fetchKpiReportConfig = createHttpEffect(\n\t'/api/now/reporting/reports/series/:sys_id',\n\t{\n\t\tmethod: 'POST',\n\t\tpathParams: ['sys_id'],\n\t\tbatch: false,\n\t\tsuccessActionType: FETCH_KPI_REPORTCONFIG_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\nexport const fetchKpiReportConfigSuccess = ({ action, dispatch }) => {\n\tconst reportConfig = get(\n\t\taction,\n\t\t'payload.result.data_configurations[0]',\n\t\t''\n\t);\n\tconst reportLabel = get(action, 'meta.report_name', '');\n\tconst referenceTable = reportConfig.source_id;\n\n\tdispatch(\n\t\tFETCH_INTERACTIVE_REFERENCE_FIELD,\n\t\t{ referenceTable: referenceTable },\n\t\t{ reportConfig, reportLabel }\n\t);\n};\n\nexport const fetchInteractiveReferenceField = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/queue/:referenceTable',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['referenceTable'],\n\t\tsuccessActionType: FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nexport const fetchInteractiveReferenceFieldSuccess = ({\n\taction,\n\tstate,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst referenceField = get(action, 'payload.result', '');\n\tconst reportConfig = get(action, 'meta.reportConfig', {});\n\tconst reportLabel = get(action, 'meta.reportLabel', '');\n\n\tif (isUndefined(reportConfig.filter_query)) reportConfig.filter_query = '';\n\n\tconst queueId = state.properties.sysId;\n\treportConfig.filter_query += '^' + referenceField + '=' + queueId;\n\tconst referenceTable = reportConfig.source_id;\n\tconst showFilter = get(state, 'showFilter');\n\tif (showFilter) {\n\t\tdispatch(\n\t\t\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD,\n\t\t\t{ referenceTable: referenceTable },\n\t\t\t{ reportConfig, reportLabel }\n\t\t);\n\t} else {\n\t\taddReportToList(reportConfig, reportLabel, updateState);\n\t}\n};\n\nexport const fetchGroupInteractiveReferenceField = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/group/:referenceTable',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['referenceTable'],\n\t\tsuccessActionType: FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nexport const fetchGroupInteractiveReferenceFieldSuccess = ({\n\taction,\n\tstate,\n\tupdateState\n}) => {\n\tconst referenceField = get(action, 'payload.result', '');\n\tconst reportConfig = get(action, 'meta.reportConfig', { filter_query: '' });\n\tconst reportLabel = get(action, 'meta.reportLabel', '');\n\tconst assignmentGroups = state.assignmentGroups;\n\treportConfig.filter_query +=\n\t\t'^' + referenceField + '.sys_idIN' + assignmentGroups;\n\taddReportToList(reportConfig, reportLabel, updateState);\n};\n\nexport const updateSupervisorListConfig = ({ action, updateState }) => {\n\tconst supervisorListConfig = get(action, 'payload.supervisorListConfig');\n\tupdateState({ supervisorListConfig, renderQueueTabs: true });\n};\n\nexport const updateDefaultSortOrderEffect = ({ action, updateState }) => {\n\tconst { type, defaultSort } = get(action, 'payload');\n\tupdateState({\n\t\tpath: `useDefaultSortOrder.${type}`,\n\t\tvalue: defaultSort,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nexport const updateFiltersEffect = ({ action, updateState }) => {\n\tconst { type } = get(action, 'payload');\n\tupdateState({\n\t\tpath: `useDefaultFilters.${type}`, // eslint-disable-line\n\t\tvalue: false,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nexport const filtersAppliedEffect = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tvar groups;\n\tvar groupsInAppliedBucket;\n\tconst queuesysId = get(state, 'properties.sysId', '');\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\n\tconst allGroups = sessionData.queueGroupMap[queuesysId];\n\tif (\n\t\tObject.keys(action.payload).length == 0 ||\n\t\tObject.keys(action.payload.sn_wfo_manager_groups).length == 0\n\t) {\n\t\tgroups = sessionData.queueGroupMap[queuesysId].join();\n\t\tgroupsInAppliedBucket = [];\n\t} else {\n\t\tvar groupsSelected =\n\t\t\taction.payload.sn_wfo_manager_groups.grmember_group;\n\t\tgroupsInAppliedBucket = groupsSelected;\n\t\tgroups = groupsSelected.join();\n\t}\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n\tupdateAppliedFilters(allGroups, groupsInAppliedBucket);\n\n\tupdateState({ assignmentGroups: groups, reportData: [] });\n\n\tdispatch(FETCH_REPORTS, {\n\t\tconditions: 'queue.sys_id=' + queuesysId + '^ORDERBYorder',\n\t\tsysId: 'sys_id=' + queuesysId\n\t});\n};\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nexport const queueReportsQuery = `query($conditions: String!,$sysId: String!) {\n\tGlideRecord_Query {\n\t\tm2m_awa_queue_report(queryConditions: $conditions, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\treport {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tlabel {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\t\n\t\t},\n\t\tawa_queue(queryConditions: $sysId){\n\t\t\t_results{\n\t\t\t\tname{\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tservice_channel {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n","import './sn-manager-schedule.js';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport scheduleView from './view.js';\nimport scheduleProps from './properties.js';\nimport scheduleActionHandlers from './actionHandlers.js';\nimport recordWatcherOverrideActions from './recordWatcherOverrideActions.js';\nimport recordWatcherActions from '../../common/actions/recordWatcherActions';\nimport alertListBehavior from '../../common/behaviors/alertList.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-schedule', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\n\tbehaviors: [alertListBehavior],\n\n\tinitialState: {\n\t\tfilter: {}\n\t},\n\n\t...scheduleView,\n\t...scheduleProps,\n\tactions: recordWatcherActions.actions,\n\tactionHandlers: {\n\t\t...recordWatcherActions.actionHandlers,\n\t\t...recordWatcherOverrideActions.actionHandlers,\n\t\t...scheduleActionHandlers.actionHandlers\n\t},\n\tstyles\n});\n","import '@servicenow/now-tabs';\nimport '@servicenow/now-record-list-connected';\nimport '../sn-manager-schedule-view';\nimport get from 'lodash/get';\nimport forEach from 'lodash/forEach';\nimport { t } from 'sn-translate';\n\nimport {\n\tSCHEDULE_CALENDAR_VIEW,\n\tSCHEDULE_TABBED_LIST_LABELS,\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tMANAGER_WORKSPACE_VIEW,\n\tSCHEDULE_TABBED_LIST_QUERIES\n} from '../../common/constants';\n\nconst view = state => {\n\tconst selectedTab = state.properties.selectedTab;\n\tconst refreshRequested = {\n\t\ttimestamp: Date.now()\n\t};\n\tconst items = [];\n\tconst alertItems = get(state, 'behaviors.alertList.alertItems', []);\n\n\tforEach(SCHEDULE_TABBED_LIST_LABELS, (value, key) => {\n\t\titems.push({\n\t\t\tid: key,\n\t\t\tlabel: value,\n\t\t\tcount: get(state, ['recordCounts', key, '_rowCount'], '')\n\t\t});\n\t});\n\n\tlet xStep = parseInt(get(state, 'properties.xStep', '60'));\n\tlet xSize = parseInt(get(state, 'properties.xSize', '24'));\n\tlet xStart = parseInt(get(state, 'properties.xStart', '0'));\n\n\tconst _renderLoading = () => <div>{t('Loading')}</div>;\n\n\tconst _renderError = () => <div>{t('An error occurred')}</div>;\n\n\tconst _renderCalendar = (assignmentGroups, filter) => (\n\t\t<sn-manager-schedule-view\n\t\t\tendpoint={get(state, 'properties.endpoint', '')}\n\t\t\tassignmentGroups={assignmentGroups}\n\t\t\tfilter={filter}\n\t\t\txStep={xStep ? xStep : SCHEDULE_PROPERTY_DEFAULTS.XSTEP}\n\t\t\txSize={xSize ? xSize : SCHEDULE_PROPERTY_DEFAULTS.XSIZE}\n\t\t\txStart={xStart ? xStart : SCHEDULE_PROPERTY_DEFAULTS.XSTART}\n\t\t\tshowContextualPanel={true}\n\t\t/>\n\t);\n\n\tconst _renderTabbedList = () => {\n\t\tconst listProps = {\n\t\t\trefreshRequested,\n\t\t\ttable: selectedTab,\n\t\t\tview: MANAGER_WORKSPACE_VIEW,\n\t\t\tlistTitle: SCHEDULE_TABBED_LIST_LABELS[selectedTab]\n\t\t};\n\t\tif (SCHEDULE_TABBED_LIST_QUERIES[selectedTab]) {\n\t\t\tlistProps.query = SCHEDULE_TABBED_LIST_QUERIES[selectedTab];\n\t\t}\n\t\treturn <now-record-list-connected {...listProps} />;\n\t};\n\n\tconst _renderContent = () => {\n\t\tif (state.error) return _renderError();\n\n\t\tlet assignmentGroups = get(\n\t\t\tstate,\n\t\t\t'filter.sn_wfo_manager_groups.grmember_group',\n\t\t\t''\n\t\t);\n\n\t\tconst filter = state.filter;\n\t\tconst active = get(state, 'properties.active', false);\n\t\tconst dirtyState = get(state, 'dirtyState', false);\n\t\tconst showingCalendar = selectedTab === SCHEDULE_CALENDAR_VIEW;\n\n\t\tif (active) {\n\t\t\treturn (\n\t\t\t\t<div className=\"schedule-tab-content\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tshowingCalendar\n\t\t\t\t\t\t\t\t? 'schedule-calendar'\n\t\t\t\t\t\t\t\t: 'schedule-calendar-hidden'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showingCalendar || !dirtyState\n\t\t\t\t\t\t\t? _renderCalendar(assignmentGroups, filter)\n\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div hidden={showingCalendar} className=\"schedule-list\">\n\t\t\t\t\t\t{!showingCalendar ? _renderTabbedList() : ''}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else return _renderLoading();\n\t};\n\tconst heading = t('Schedule');\n\n\treturn (\n\t\t<div className=\"schedule-container\">\n\t\t\t{alertItems.length > 0 ? (\n\t\t\t\t<now-alert-list configAriaLive=\"polite\" items={alertItems} />\n\t\t\t) : null}\n\n\t\t\t<now-heading\n\t\t\t\tlabel={heading}\n\t\t\t\tvariant=\"header-primary\"\n\t\t\t\thas-no-margin\n\t\t\t/>\n\n\t\t\t<div>\n\t\t\t\t<now-tabs items={items} selectedItem={SCHEDULE_CALENDAR_VIEW} />\n\t\t\t</div>\n\t\t\t{_renderContent()}\n\t\t</div>\n\t);\n};\n\nexport default {\n\tview\n};\n","import './sn-manager-schedule-view.js';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport { t } from 'sn-translate';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport scheduleView from './view.js';\nimport scheduleProps from './properties.js';\nimport scheduleActionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-schedule-view', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tinitialState: {\n\t\tcontextualPanel: {\n\t\t\tactiveView: 'schedules',\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tid: 'schedules',\n\t\t\t\t\ticon: 'calendar-clock-outline',\n\t\t\t\t\tlabel: t('Schedules')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'filter',\n\t\t\t\t\ticon: 'filter-outline',\n\t\t\t\t\tlabel: t('Filter')\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t...scheduleView,\n\t...scheduleProps,\n\t...scheduleActionHandlers,\n\tstyles\n});\n","import '../sn-manager-schedules-contextual-panel';\nimport '../sn-manager-demand-forecast-popover';\nimport '../../common/calendar/sn-manager-calendar';\nimport '../../common/dataproviders/sn-manager-user-groups/sn-manager-user-groups';\nimport get from 'lodash/get';\nimport { t } from 'sn-translate';\n\nimport {\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tSCHEDULE_MODULE_SYSID\n} from '../../common/constants';\nimport { scheduleRenderer } from './constants';\n\nimport 'sn-component-filter';\nimport '../../common/sn-manager-filter-config';\n\nconst view = state => {\n\tlet xStep = parseInt(get(state, 'properties.xStep', '60'));\n\tlet xSize = parseInt(get(state, 'properties.xSize', '24'));\n\tlet xStart = parseInt(get(state, 'properties.xStart', '0'));\n\n\tconst _renderCalendar = () => (\n\t\t<sn-manager-calendar\n\t\t\tavailableViewTypes={'TIMELINE'}\n\t\t\tavailableTimezones={state.properties.availableTimezones}\n\t\t\tstartingView={'DAY'}\n\t\t\tendpoint={get(state, 'properties.endpoint', '')}\n\t\t\tassignmentGroups={get(state, 'properties.assignmentGroups', '')}\n\t\t\tfilter={get(state, 'properties.filter', {})}\n\t\t\tindividualAgents={get(state, 'properties.individualAgents', '')}\n\t\t\tstartDate={state.properties.startDate}\n\t\t\tendDate={state.properties.endDate}\n\t\t\tcontextDate={state.properties.contextDate}\n\t\t\ttimezone={get(state, 'properties.timezone', '')}\n\t\t\ttimeFormat={get(state, 'properties.timeFormat', '')}\n\t\t\tdateFormat={get(state, 'properties.dateFormat', '')}\n\t\t\txStep={xStep ? xStep : SCHEDULE_PROPERTY_DEFAULTS.XSTEP}\n\t\t\txSize={xSize ? xSize : SCHEDULE_PROPERTY_DEFAULTS.XSIZE}\n\t\t\txStart={xStart ? xStart : SCHEDULE_PROPERTY_DEFAULTS.XSTART}\n\t\t\tdatePickerTemplates={get(\n\t\t\t\tstate,\n\t\t\t\t'properties.datePickerTemplates',\n\t\t\t\t{}\n\t\t\t)}\n\t\t\tspanColors={get(state, 'properties.spanColors', {})}\n\t\t\tforecastEnabled={true}\n\t\t\ttimelineDayTemplateRenderer={scheduleRenderer}\n\t\t\ttimelineWeekTemplateRenderer={scheduleRenderer}\n\t\t\tcontextualPanelItems={\n\t\t\t\tstate.properties.showContextualPanel\n\t\t\t\t\t? state.contextualPanel.items\n\t\t\t\t\t: []\n\t\t\t}\n\t\t\tallowEventCreation={true}\n\t\t>\n\t\t\t{state.properties.showContextualPanel ? (\n\t\t\t\t<div slot=\"contextual-panel-content\" style={{ height: '100%' }}>\n\t\t\t\t\t<sn-manager-schedules-contextual-panel\n\t\t\t\t\t\tdateFormat={get(state, 'properties.dateFormat', '')}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tstate.contextualPanel.activeView !== 'schedules'\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tdisplay: 'none'\n\t\t\t\t\t\t\t\t  } // eslint-disable-line\n\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<sn-manager-filter-config\n\t\t\t\t\t\tsysId={SCHEDULE_MODULE_SYSID}\n\t\t\t\t\t\tpaddingRequired={true}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tstate.contextualPanel.activeView !== 'filter'\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tdisplay: 'none'\n\t\t\t\t\t\t\t\t  } // eslint-disable-line\n\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</sn-manager-calendar>\n\t);\n\n\tconst _renderLoading = () => <div>{t('Loading')}</div>;\n\tconst _renderUserGroupFetcher = () => {\n\t\tif (state.user && get(state, 'properties.assignmentGroups', '') === '')\n\t\t\treturn (\n\t\t\t\t<sn-manager-user-groups\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tforManagedGroups: true,\n\t\t\t\t\t\tuser: state.user\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t};\n\n\tconst _renderContent = () => {\n\t\tif (state.loaded) return _renderCalendar();\n\t\treturn _renderLoading();\n\t};\n\n\treturn (\n\t\t<div className=\"schedule-container\">\n\t\t\t<div>{_renderContent()}</div>\n\t\t\t<div>{_renderUserGroupFetcher()}</div>\n\t\t\t<div>\n\t\t\t\t<sn-manager-user-info />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default {\n\tview\n};\n","export { default } from './schedules-contextual-panel';\n","import '@servicenow/now-card';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-button';\nimport '@servicenow/now-avatar';\nimport '@servicenow/now-record-form-connected';\nimport '@servicenow/now-typeahead';\nimport '@servicenow/now-modal';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport { createCustomElement } from '@servicenow/ui-core';\nimport '../../common/sn-manager-button-footer';\nimport { VIEW, MODALS } from './constants';\nimport actionHandlers from './actionHandlers';\nimport view from './view';\nimport styles from './styles.scss';\nimport { SCHEDULE_PROPERTY_DEFAULTS } from '../../common/constants';\n\nexport default createCustomElement('sn-manager-schedules-contextual-panel', {\n\trenderer: { type: snabbdom, view },\n\tproperties: {\n\t\ttableName: {\n\t\t\tdefault: 'sn_shift_planning_schedule_plan'\n\t\t},\n\t\tlimit: {\n\t\t\tdefault: 20\n\t\t},\n\t\torderBy: {\n\t\t\tdefault: 'default_start_date'\n\t\t},\n\t\torderByAsc: {\n\t\t\tdefault: 'false'\n\t\t},\n\t\tformView: {\n\t\t\tdefault: 'manager_workspace'\n\t\t},\n\t\tagentTable: {\n\t\t\tdefault: 'sys_user_grmember'\n\t\t},\n\t\tagentsQuery: {\n\t\t\tdefault: 'groupDYNAMIC514230e2b3130010ed7fc9c316a8dccc'\n\t\t},\n\t\tdateFormat: {\n\t\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.DATE_FORMAT\n\t\t}\n\t},\n\tinitialState: {\n\t\tschedules: [],\n\t\tagents: {},\n\t\tcurrentSchedule: null,\n\t\tcurrentScheduleSysId: null,\n\t\tcurrentView: VIEW.list,\n\t\tnextView: null,\n\t\tisLoading: true,\n\t\tmodalOpened: {\n\t\t\t[MODALS.deleteWorkShift]: false,\n\t\t\t[MODALS.deleteSchedulePlan]: false\n\t\t},\n\t\terror: null\n\t},\n\ttransformState(state) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcurrentSchedule:\n\t\t\t\tstate.currentScheduleSysId &&\n\t\t\t\tstate.schedules.find(\n\t\t\t\t\ts => s.sys_id.value === state.currentScheduleSysId\n\t\t\t\t)\n\t\t};\n\t},\n\tactionHandlers,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-manager-button-footer{border-color:RGB(var(--now-color--neutral-3,209,214,214));border-top:1px solid transparent;border-top-color:rgb(var(--now-color--neutral-3,209,214,214));display:flex;overflow-x:auto;padding:var(--sn-manager-button-footer-padding,.5rem)}.sn-manager-button-footer now-button{flex:0 1 auto;margin-left:.5rem}.sn-manager-button-footer now-button:first-child{margin-left:auto}\", \"\"]);\n\n// exports\n","import {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_DISCONNECTED\n} from '@servicenow/ui-core/lib/constants';\nimport { RECORD_STATUS_CHANGED } from '@devsnc/sn-scripting-environment';\nimport { t } from 'sn-translate';\nimport {\n\tfetchSchedulesEffect,\n\tfetchScheduleEffect,\n\tpublishScheduleEffect,\n\tunpublishScheduleEffect,\n\tduplicateScheduleEffect,\n\tfetchAgentsEffect,\n\taddAgentToShiftEffect,\n\tdeleteAgentFromShiftEffect,\n\tgetNotificationsEffect,\n\tcreateShiftScheduleEffect,\n\tdeleteWorkShiftEffect,\n\tcreateDebouncedShiftScheduleEffect,\n\twatchSchedulePlan,\n\twatchScheduleShift,\n\tdeleteScheduleEffect,\n\tupdateAgentsInWorkShift,\n\tcheckIfWorkShiftOverlaps\n} from './effects';\nimport {\n\tCALENDAR_ACTIONS,\n\tNOW_CARD_CLICKED,\n\tNOW_CARD_HEADER_ACTION_CLICKED,\n\tNOW_MODAL_OPENED_SET,\n\tNOW_MODAL_FOOTER_ACTION_CLICKED,\n\tSHOW_ALERT_MESSAGE\n} from '../../common/constants';\nimport {\n\tVIEW,\n\tFETCH_SCHEDULES,\n\tFETCH_SCHEDULES_START,\n\tFETCH_SCHEDULES_SUCCESS,\n\tFETCH_SCHEDULES_ERROR,\n\tGO_TO_LOADING_VIEW,\n\tGO_TO_DETAIL_VIEW,\n\tGO_TO_LIST_VIEW,\n\tGO_TO_EDIT_VIEW,\n\tGO_TO_CREATE_VIEW,\n\tGO_TO_SHIFT_CREATE_VIEW,\n\tGO_TO_SHIFT_DETAIL_VIEW,\n\tGO_TO_SHIFT_EDIT_VIEW,\n\tNOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET,\n\tNOW_TYPEAHEAD_MULTI_VALUE_SET,\n\tTYPEAHEAD_FETCH_AGENTS,\n\tTYPEAHEAD_FETCH_AGENTS_SUCCEDED,\n\tADD_AGENT_TO_SHIFT,\n\tDELETE_AGENT_FROM_SHIFT,\n\tDUPLICATE_SCHEDULE,\n\tUNPUBLISH_SCHEDULE,\n\tPUBLISH_SCHEDULE,\n\tPUBLISH_SCHEDULE_SUCCESS,\n\tPUBLISH_SCHEDULE_ERROR,\n\tCARD_DROPDOWN_ACTIONS,\n\tUNPUBLISH_SCHEDULE_SUCCESS,\n\tUNPUBLISH_SCHEDULE_ERROR,\n\tFETCH_SCHEDULE,\n\tFETCH_SCHEDULE_SUCCESS,\n\tDUPLICATE_SCHEDULE_START,\n\tDUPLICATE_SCHEDULE_SUCCESS,\n\tDUPLICATE_SCHEDULE_ERROR,\n\tM2M_SHIFT_TO_AGENT_TABLE,\n\tDELETE_WORK_SHIFT,\n\tDELETE_WORK_SHIFT_SUCCESS,\n\tDELETE_WORK_SHIFT_ERROR,\n\tGET_NOTIFICATIONS_EFFECT,\n\tNOTIFICATIONS_EFFECT_HANDLER,\n\tCREATE_AGENT_SCHEDULES,\n\tCREATE_AGENT_SCHEDULES_SUCCESS,\n\tDEBOUNCED_CREATE_SCHEDULES_EFFECT,\n\tWATCH_SCHEDULE_PLAN,\n\tWATCH_SCHEDULE_SHIFT,\n\tWATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED,\n\tWATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED,\n\tSHIFT_STATES,\n\tOPEN_SCHEDULE,\n\tDELETE_SCHEDULE,\n\tDELETE_SCHEDULE_SUCCESS,\n\tDELETE_SCHEDULE_ERROR,\n\tUPDATE_AGENTS_IN_WORK_SHIFT,\n\tUPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS,\n\tUPDATE_AGENTS_IN_WORK_SHIFT_ERROR,\n\tCHECK_IF_WORK_SHIFT_OVERLAPS,\n\tCHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS,\n\tCHECK_IF_WORK_SHIFT_OVERLAPS_ERROR\n} from './constants';\nimport {\n\tTYPEAHEAD_DEBOUNCE_DELAY,\n\tFORM_RECORD_OPERATION_STATUS\n} from '../../common/constants';\n\nimport {\n\tDEBOUNCE\n\t// ,\n\t// TAKE_LATEST\n} from '@servicenow/ui-core/lib/effects/modifiers/types';\nimport { createErrorMessageHandler } from './utils';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\nimport isEmpty from 'lodash/isEmpty';\n\nlet recordWatcherInstances = [];\n\nexport const fetchSchedules = ({ properties, dispatch, onSuccess }) => {\n\tconst { tableName, limit, orderBy, orderByAsc } = properties;\n\tconst pagination = { limit };\n\tconst queryConditions = `${\n\t\torderByAsc === 'true' ? 'ORDERBY' : 'ORDERBYDESC'\n\t}${orderBy}`;\n\n\tdispatch(\n\t\tFETCH_SCHEDULES,\n\t\t{ tableName, queryConditions, pagination },\n\t\t{ onSuccess }\n\t);\n};\n\nexport const fetchSchedule = ({\n\tscheduleSysId,\n\tproperties,\n\tdispatch,\n\tonSuccess\n}) => {\n\tconst { tableName } = properties;\n\tconst pagination = { limit: 1 };\n\tconst queryConditions = `sys_id=${scheduleSysId}`;\n\n\tdispatch(\n\t\tFETCH_SCHEDULE,\n\t\t{ tableName, queryConditions, pagination },\n\t\t{ onSuccess }\n\t);\n};\n\nexport const watchScheduleAndShifts = ({\n\tschedule,\n\tstate,\n\tsubscribe,\n\tdispatch\n}) => {\n\tif (isEmpty(schedule)) {\n\t\treturn;\n\t}\n\n\tconst actionsToDispatch = [\n\t\t{\n\t\t\ttype: WATCH_SCHEDULE_PLAN,\n\t\t\tpayload: {\n\t\t\t\ttable: state.properties.tableName,\n\t\t\t\tfilter: btoa(`sys_id=${schedule.sys_id.value}`).replace(\n\t\t\t\t\t/=/g,\n\t\t\t\t\t'-'\n\t\t\t\t),\n\t\t\t\tsubscribe\n\t\t\t}\n\t\t}\n\t];\n\n\t// watch schedule_shifts in the schedule_plan\n\tconst scheduleShifts = get(\n\t\tschedule,\n\t\t'_query.shifts.sn_shift_planning_schedule_shift._results',\n\t\t[]\n\t);\n\tconst scheduleShiftIds = scheduleShifts.map(shift =>\n\t\tget(shift, 'sys_id.value')\n\t);\n\n\tif (!isEmpty(scheduleShiftIds)) {\n\t\tactionsToDispatch.push({\n\t\t\ttype: WATCH_SCHEDULE_SHIFT,\n\t\t\tpayload: {\n\t\t\t\ttable: 'sn_shift_planning_schedule_shift',\n\t\t\t\tfilter: btoa(`sys_idIN${scheduleShiftIds.join(',')}`).replace(\n\t\t\t\t\t/=/g,\n\t\t\t\t\t'-'\n\t\t\t\t),\n\t\t\t\tsubscribe\n\t\t\t}\n\t\t});\n\t}\n\n\tactionsToDispatch.forEach(({ type, payload }) => {\n\t\tdispatch(type, payload);\n\t});\n\n\t// keep track of record watchers so that we can unsubscribe them later\n\trecordWatcherInstances = actionsToDispatch;\n};\n\nexport const unsubscribeAllRecordWatchers = ({ dispatch }) => {\n\twhile (recordWatcherInstances.length > 0) {\n\t\tconst { type, payload } = recordWatcherInstances.pop();\n\t\tdispatch(type, { ...payload, subscribe: false });\n\t}\n};\n\nexport const handleComponentBootstrapped = ({ properties, dispatch }) => {\n\tfetchSchedules({ properties, dispatch });\n};\n\nexport const handleComponentDisconnected = ({ dispatch }) => {\n\tunsubscribeAllRecordWatchers({ dispatch });\n};\n\nexport const handleFetchSchedulesStart = ({ updateState }) => {\n\tupdateState({ isLoading: true });\n};\n\nexport const handleFetchSchedulesSuccess = ({\n\taction,\n\tproperties,\n\tupdateState\n}) => {\n\tconst schedules = get(\n\t\taction.payload,\n\t\t`data.GlideRecord_Query.${properties.tableName}._results`,\n\t\t[]\n\t);\n\tconst agents = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sys_user_grmember',\n\t\t[]\n\t);\n\n\tupdateState({\n\t\tschedules,\n\t\tagents,\n\t\tisLoading: false\n\t});\n\n\tif (isFunction(action.meta.onSuccess)) {\n\t\taction.meta.onSuccess({ schedules });\n\t}\n};\n\nexport const handleFetchSchedulesError = ({ updateState }) => {\n\tupdateState({\n\t\terror: {\n\t\t\ttype: 'loading-error'\n\t\t}\n\t});\n};\n\nexport const handleFetchScheduleSuccess = ({\n\taction,\n\tproperties,\n\tstate,\n\tupdateState\n}) => {\n\tconst schedule = get(\n\t\taction.payload,\n\t\t`data.GlideRecord_Query.${properties.tableName}._results[0]`,\n\t\tnull\n\t);\n\n\tif (schedule) {\n\t\tconst index = state.schedules.findIndex(\n\t\t\ts => s.sys_id.value === schedule.sys_id.value\n\t\t);\n\t\tif (index !== -1) {\n\t\t\tupdateState({\n\t\t\t\tpath: `schedules[${index}]`,\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: schedule\n\t\t\t});\n\t\t}\n\t\tif (isFunction(action.meta.onSuccess)) {\n\t\t\taction.meta.onSuccess({ schedule });\n\t\t}\n\t}\n\n\tupdateState({ isLoading: false });\n};\n\n// This actionHandler will detect when a form component\n// record changes it's status (either by an insertion or update)\n// this handler will properly execute further actions required\n// e.g. insert related records, change view, etc.\nexport const handleRecordStatusChanged = ({\n\taction,\n\tproperties,\n\tdispatch,\n\tstate,\n\tupdateState\n}) => {\n\t// stop propagation to avoid page reload issue DEF0118567\n\taction.stopPropagation();\n\n\tconst { table, sys_id: sysId, status } = action.payload;\n\n\tif (properties.tableName === table) {\n\t\tconst scheduleSysId = sysId;\n\t\tif (status === FORM_RECORD_OPERATION_STATUS.inserted) {\n\t\t\tfetchSchedules({\n\t\t\t\tproperties,\n\t\t\t\tdispatch,\n\t\t\t\tonSuccess: () =>\n\t\t\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\t\t\tscheduleSysId,\n\t\t\t\t\t\tchangeContextDate: true\n\t\t\t\t\t})\n\t\t\t});\n\t\t} else if (\n\t\t\tstatus === FORM_RECORD_OPERATION_STATUS.updated &&\n\t\t\tscheduleSysId !== '-1'\n\t\t) {\n\t\t\tfetchSchedule({\n\t\t\t\tscheduleSysId,\n\t\t\t\tproperties,\n\t\t\t\tdispatch,\n\t\t\t\tonSuccess: ({ schedule: newSchedule }) => {\n\t\t\t\t\tconst currentSchedule = state.schedules.find(\n\t\t\t\t\t\ts => s.sys_id.value === scheduleSysId\n\t\t\t\t\t);\n\t\t\t\t\t// only change calendar contextDate when schedule's start_date was modified\n\t\t\t\t\tconst changeContextDate =\n\t\t\t\t\t\tcurrentSchedule.default_start_date.displayValue !==\n\t\t\t\t\t\tnewSchedule.default_start_date.displayValue;\n\n\t\t\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\t\t\tscheduleSysId,\n\t\t\t\t\t\tchangeContextDate\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n\t\t}\n\t} else if (M2M_SHIFT_TO_AGENT_TABLE === table) {\n\t\tif (status === FORM_RECORD_OPERATION_STATUS.modified) {\n\t\t\tupdateState({\n\t\t\t\tpath: 'currentShift.isDirty',\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: true,\n\t\t\t\tshouldRender: false\n\t\t\t});\n\t\t} else if (\n\t\t\tstatus === FORM_RECORD_OPERATION_STATUS.inserted ||\n\t\t\tstatus === FORM_RECORD_OPERATION_STATUS.updated\n\t\t) {\n\t\t\tlet removedAgents = [];\n\t\t\tlet addedAgents = [];\n\t\t\tconst isDirty = get(state, 'currentShift.isDirty', false);\n\n\t\t\t// If operation status is updated we want to remove unselected\n\t\t\t// agents as well\n\t\t\tif (status === FORM_RECORD_OPERATION_STATUS.updated) {\n\t\t\t\tremovedAgents = removeUnselectedAgentsFromShift(\n\t\t\t\t\tstate,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tsysId\n\t\t\t\t);\n\t\t\t}\n\t\t\taddedAgents = addAgentsToShift(state, dispatch, sysId);\n\n\t\t\tvar data = {\n\t\t\t\taddAgents: addedAgents,\n\t\t\t\tremoveAgents: removedAgents,\n\t\t\t\tscheduleShift: sysId\n\t\t\t};\n\t\t\tif (!isEmpty(removedAgents) || !isEmpty(addedAgents) || isDirty) {\n\t\t\t\tdispatch(UPDATE_AGENTS_IN_WORK_SHIFT, { data });\n\t\t\t\tdispatch(GO_TO_LOADING_VIEW, {\n\t\t\t\t\tbodyText: t(\n\t\t\t\t\t\t'Please wait while system is updating the shift'\n\t\t\t\t\t),\n\t\t\t\t\theaderText: t('Updating')\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\t\tscheduleSysId: state.currentScheduleSysId\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst openSchedule = ({ action, state, properties, updateState, dispatch }) => {\n\tconst { scheduleSysId, changeContextDate } = action.payload;\n\n\tfetchSchedule({\n\t\tscheduleSysId,\n\t\tproperties,\n\t\tdispatch,\n\t\tonSuccess: ({ schedule }) => {\n\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\tscheduleSysId,\n\t\t\t\tchangeContextDate\n\t\t\t});\n\t\t\tunsubscribeAllRecordWatchers({ dispatch });\n\t\t\twatchScheduleAndShifts({\n\t\t\t\tschedule,\n\t\t\t\tstate,\n\t\t\t\tdispatch,\n\t\t\t\tupdateState,\n\t\t\t\tsubscribe: true\n\t\t\t});\n\t\t\tif (isFunction(action.meta.onSuccess)) {\n\t\t\t\taction.meta.onSuccess({ schedule });\n\t\t\t}\n\t\t}\n\t});\n};\n\nexport const handleNowCardClicked = ({ action, dispatch }) => {\n\tconst { actionsToDispatch = [] } = action.payload;\n\n\tactionsToDispatch.forEach(({ type, payload }) => {\n\t\tdispatch(type, payload);\n\t});\n};\n\nexport const handleNowCardHeaderActionClicked = ({ action, dispatch }) => {\n\tconst { action: dropdownAction } = action.payload;\n\tconst { schedule } = dropdownAction;\n\n\tswitch (dropdownAction.id) {\n\tcase CARD_DROPDOWN_ACTIONS.duplicate.id:\n\t\tdispatch(DUPLICATE_SCHEDULE, {\n\t\t\tdata: {\n\t\t\t\tscheduleSysId: schedule.sys_id.value,\n\t\t\t\tgeneratePreview: true\n\t\t\t}\n\t\t});\n\t\tbreak;\n\tcase CARD_DROPDOWN_ACTIONS.unpublish.id:\n\t\tdispatch(UNPUBLISH_SCHEDULE, {\n\t\t\tdata: { scheduleSysId: schedule.sys_id.value }\n\t\t});\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n};\n\nexport const handleModalOpenedSet = ({ action, updateState }) => {\n\tconst { modal, value } = action.payload;\n\n\tupdateState({\n\t\tpath: `modalOpened.${modal}`,\n\t\toperation: 'set',\n\t\tvalue\n\t});\n};\n\nexport const handleModalFooterActionClicked = ({ action, dispatch }) => {\n\tconst { actionsToDispatch = [] } = action.payload.action;\n\n\tactionsToDispatch.forEach(({ type, payload, meta }) => {\n\t\tdispatch(type, payload, meta);\n\t});\n};\n\nexport const handlePublishScheduleSuccess = ({\n\taction,\n\tproperties,\n\tdispatch\n}) => {\n\tconst scheduleSysId = get(action, 'meta.request.data.scheduleSysId');\n\tconst message = get(action, 'payload.result.message');\n\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n\n\tfetchSchedule({\n\t\tscheduleSysId,\n\t\tproperties,\n\t\tdispatch,\n\t\tonSuccess: () => dispatch(GO_TO_LIST_VIEW)\n\t});\n\n\tif (message) {\n\t\tconst alertId = 'publish-schedule-success';\n\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid: alertId,\n\t\t\tstatus: 'info',\n\t\t\ticon: 'info-circle-outline',\n\t\t\taction: { type: 'dismiss' },\n\t\t\tautoHide: true,\n\t\t\tcontent: message\n\t\t});\n\t}\n};\n\nexport const handlePublishScheduleError = createErrorMessageHandler({\n\tid: 'publish-schedule-error'\n});\n\nexport const handleUnpublishScheduleSuccess = ({\n\taction,\n\tproperties,\n\tdispatch\n}) => {\n\tconst scheduleSysId = get(action, 'meta.request.data.scheduleSysId');\n\tconst message = get(action, 'payload.result.message');\n\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n\n\tfetchSchedule({ scheduleSysId, properties, dispatch });\n\n\tif (message) {\n\t\tconst alertId = 'unpublish-schedule-success';\n\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid: alertId,\n\t\t\tstatus: 'info',\n\t\t\ticon: 'info-circle-outline',\n\t\t\taction: { type: 'dismiss' },\n\t\t\tautoHide: true,\n\t\t\tcontent: message\n\t\t});\n\t}\n};\n\nexport const handleUnpublishScheduleError = createErrorMessageHandler({\n\tid: 'unpublish-schedule-error'\n});\n\nexport const handleDuplicateScheduleStart = ({ dispatch }) => {\n\tdispatch(GO_TO_LOADING_VIEW, {\n\t\theaderText: t('Duplicating schedule plan')\n\t});\n};\n\nexport const handleDuplicateScheduleSuccess = ({\n\taction,\n\tproperties,\n\tdispatch\n}) => {\n\tconst newScheduleSysId = get(action, 'payload.result.newScheduleSysId');\n\n\tif (newScheduleSysId) {\n\t\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n\n\t\tfetchSchedules({\n\t\t\tproperties,\n\t\t\tdispatch,\n\t\t\tonSuccess: () => {\n\t\t\t\tdispatch(\n\t\t\t\t\tOPEN_SCHEDULE,\n\t\t\t\t\t{\n\t\t\t\t\t\tscheduleSysId: newScheduleSysId,\n\t\t\t\t\t\tchangeContextDate: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess: () => dispatch(GO_TO_EDIT_VIEW)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const handleDuplicateScheduleError = createErrorMessageHandler({\n\tid: 'duplicate-schedule-error'\n});\n\nexport const handleDeleteWorkShiftSuccess = ({ action, dispatch }) => {\n\t// after delete the work shift, we need to refresh the schedule plan\n\t// and go back to detail view from shift-detail view\n\tconst scheduleSysId = get(action, 'meta.scheduleSysId');\n\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n\tdispatch(OPEN_SCHEDULE, { scheduleSysId });\n};\n\nexport const handleDeleteWorkShiftError = ({ action, dispatch }) => {\n\tconst message = get(\n\t\taction,\n\t\t'payload.data.error.detail',\n\t\tt('Error in deleting the work shift')\n\t);\n\tif (message) {\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid: 'delete-shift-error',\n\t\t\tstatus: 'critical',\n\t\t\ticon: 'circle-close-outline',\n\t\t\taction: { type: 'dismiss' },\n\t\t\tcontent: message\n\t\t});\n\t}\n\tconst scheduleSysId = get(action, 'meta.scheduleSysId');\n\tdispatch(OPEN_SCHEDULE, { scheduleSysId });\n};\n\nexport const goToLoadingView = ({ action, updateState }) => {\n\tconst { bodyText, headerText } = action.payload;\n\n\tupdateState({\n\t\tcurrentView: VIEW.loading,\n\t\tloadingState: { bodyText, headerText }\n\t});\n};\n\nexport const goToListView = ({ state, updateState, dispatch }) => {\n\tif (state.currentView === VIEW.detail) {\n\t\tunsubscribeAllRecordWatchers({ dispatch });\n\t}\n\tupdateState({\n\t\tcurrentView: VIEW.list\n\t});\n};\n\nexport const goToDetailView = ({ state, action, updateState, dispatch }) => {\n\tconst { scheduleSysId, changeContextDate = false } = action.payload;\n\tconst schedule = state.schedules.find(\n\t\ts => s.sys_id.value === scheduleSysId\n\t);\n\n\tif (schedule) {\n\t\tupdateState({\n\t\t\tcurrentScheduleSysId: scheduleSysId,\n\t\t\tcurrentView: VIEW.detail\n\t\t});\n\n\t\tif (changeContextDate) {\n\t\t\tconst contextDate = get(\n\t\t\t\tschedule,\n\t\t\t\t'default_start_date.displayValue'\n\t\t\t);\n\n\t\t\tdispatch(CALENDAR_ACTIONS.CHANGE_CONTEXT_DATE, { contextDate });\n\t\t}\n\t}\n};\n\nexport const goToEditView = ({ updateState }) => {\n\tupdateState({\n\t\tcurrentView: VIEW.edit\n\t});\n};\n\nexport const goToCreateView = ({ updateState }) => {\n\tupdateState({\n\t\tcurrentView: VIEW.create\n\t});\n};\n\n// Shift actions\nconst goToShiftCreateView = ({ updateState }) => {\n\tupdateState({\n\t\tcurrentView: VIEW.shiftCreate,\n\t\tcurrentShift: null\n\t});\n};\n\nconst goToShiftDetailView = ({ updateState, action }) => {\n\tconst currentShift = get(action, 'payload.currentShift', {});\n\n\tupdateState({\n\t\tcurrentView: VIEW.shiftDetail,\n\t\tcurrentShift\n\t});\n};\n\nconst goToShiftEditView = ({ updateState, action, state }) => {\n\tconst currentShift = get(action, 'payload.currentShift', {});\n\n\tconst selectedAgents = get(\n\t\tcurrentShift,\n\t\t'_query.agents.sn_shift_planning_schedule_shift_agent._results',\n\t\t[]\n\t).map(agent => {\n\t\treturn {\n\t\t\tid: get(agent, 'agent.value'),\n\t\t\tlabel: get(agent, 'agent.displayValue')\n\t\t};\n\t});\n\tupdateState({\n\t\tcurrentView: VIEW.shiftEdit,\n\t\tcurrentShift,\n\t\tagents: {\n\t\t\t...state.agents,\n\t\t\tselectedAgents\n\t\t}\n\t});\n};\n\nconst addAgentsToShift = state => {\n\t// Let's check if record already exist in currentShift\n\tconst currentShift = get(state, 'currentShift', {});\n\n\t// Exclude agents that are already part of the shift\n\tconst existingAgentsIds = new Set(\n\t\tget(\n\t\t\tcurrentShift,\n\t\t\t'_query.agents.sn_shift_planning_schedule_shift_agent._results',\n\t\t\t[]\n\t\t).map(agent => get(agent, 'agent.value'))\n\t);\n\tconst agentsIds = get(state, 'agents.selectedAgents', [])\n\t\t.map(a => a.id)\n\t\t.filter(aid => !existingAgentsIds.has(aid));\n\treturn agentsIds;\n};\n\nconst removeUnselectedAgentsFromShift = state => {\n\tconst agentsIds = new Set(\n\t\tget(state, 'agents.selectedAgents', []).map(a => a.id)\n\t);\n\tconst prop = get(\n\t\tstate,\n\t\t'currentShift._query.agents.sn_shift_planning_schedule_shift_agent._results',\n\t\t[]\n\t);\n\tconst oldAgentsIds = prop\n\t\t.filter(agent => !agentsIds.has(get(agent, 'agent.value', 'NOT_AN_ID')))\n\t\t.map(agent => get(agent, 'agent.value', ''));\n\treturn oldAgentsIds;\n};\n\n// If user search for an agent that hasn't been fetched yet, this\n// action handler will update the list of available agents so they can\n// be selected in the now-typeahead component\nconst handleAgentTypeaheadFetchSucceded = ({ action, updateState, state }) => {\n\tconst { agents } = state;\n\tconst agentsResult = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sys_user_grmember._results',\n\t\t[]\n\t);\n\tconst currentAgentsIds = get(agents, '_results', []).map(\n\t\tagent => agent.user.value\n\t);\n\tconst uniqueIdsSet = new Set(currentAgentsIds);\n\tagentsResult\n\t\t.filter(newAgent => !uniqueIdsSet.has(newAgent.user.value))\n\t\t.forEach(newAgent => agents._results.push(newAgent));\n\tupdateState({\n\t\toperation: 'set',\n\t\tvalue: [...new Set(agents._results)],\n\t\tpath: 'agents._results'\n\t});\n};\n\n// Fetch more agents used the input from the user in now-typeahead.\nconst handleAgentTypeaheadValueChanged = {\n\tmodifier: {\n\t\tname: DEBOUNCE || 'debounce',\n\t\tdelay: TYPEAHEAD_DEBOUNCE_DELAY\n\t},\n\teffect: ({ action, dispatch, updateState, state }) => {\n\t\tconst { value } = action.payload;\n\t\tif (!value || !value.trim() || value.trim() === '^') return;\n\n\t\tconst cleanValue = value.trim().replace(/\\^/g, '^^');\n\t\tconst agentsCondition = `user.nameLIKE${cleanValue}^user.active=true^${state.properties.agentsQuery}`;\n\t\tdispatch(TYPEAHEAD_FETCH_AGENTS, { agentsCondition });\n\t\tupdateState({\n\t\t\toperation: 'set',\n\t\t\tvalue: get(action, 'payload.value', ''),\n\t\t\tpath: 'agents.searchTerm'\n\t\t});\n\t}\n};\n\n// User selected an agent for now-typeahead-multiselect\nconst handleAgentTypeaheadItemSelected = ({ action, updateState }) => {\n\tconst selectedAgents = get(action, 'payload.value', []);\n\tupdateState({\n\t\toperation: 'set',\n\t\tvalue: selectedAgents,\n\t\tpath: 'agents.selectedAgents'\n\t});\n};\n\n// Notifications effect handler\nconst handleNotifications = ({ action, dispatch }) => {\n\tconst notifications = get(\n\t\taction,\n\t\t'payload.data.GlideDomain_Query.session.notifications',\n\t\t[]\n\t);\n\tnotifications.forEach(({ text, type }, idx) => {\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid: `shift-conflict-${idx}`,\n\t\t\tstatus: type,\n\t\t\taction: { type: 'dismiss' },\n\t\t\tcontent: text\n\t\t});\n\t});\n};\n\nconst handleCreateAgentSchedulesSuccess = ({ state, dispatch }) => {\n\tconst scheduleSysId = state.currentScheduleSysId;\n\n\tdispatch(OPEN_SCHEDULE, { scheduleSysId });\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n};\n\nconst handleSchedulePlanMessageReceived = ({ action, state, updateState }) => {\n\tconst record = get(action, 'payload.data.record', null);\n\tconst changes = get(action, 'payload.data.changes', []);\n\n\tif (!record) {\n\t\treturn;\n\t}\n\n\tif (changes.includes('state')) {\n\t\tconst scheduleIndex = state.schedules.findIndex(\n\t\t\ts => s.sys_id.value === state.currentScheduleSysId\n\t\t);\n\n\t\tupdateState({\n\t\t\tpath: `schedules[${scheduleIndex}].state`,\n\t\t\toperation: 'set',\n\t\t\tvalue: {\n\t\t\t\tvalue: record.state.value,\n\t\t\t\tdisplayValue: record.state.display_value\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst handleScheduleShiftMessageReceived = ({\n\taction,\n\tstate,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst sysId = get(action, 'payload.data.sys_id', null);\n\tconst record = get(action, 'payload.data.record', null);\n\tconst changes = get(action, 'payload.data.changes', []);\n\n\tif (!sysId || !record) {\n\t\treturn;\n\t}\n\n\tif (changes.includes('state')) {\n\t\tconst scheduleIndex = state.schedules.findIndex(\n\t\t\ts => s.sys_id.value === state.currentScheduleSysId\n\t\t);\n\t\tconst schedule = state.schedules[scheduleIndex];\n\n\t\tconst scheduleShifts = get(\n\t\t\tschedule,\n\t\t\t'_query.shifts.sn_shift_planning_schedule_shift._results',\n\t\t\t[]\n\t\t);\n\t\tconst scheduleShiftIndex = scheduleShifts.findIndex(\n\t\t\ts => s.sys_id.value === sysId\n\t\t);\n\n\t\tif (scheduleShiftIndex !== -1) {\n\t\t\tupdateState({\n\t\t\t\tpath: `schedules[${scheduleIndex}]._query.shifts.sn_shift_planning_schedule_shift._results[${scheduleShiftIndex}].state.value`,\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: record.state.value\n\t\t\t});\n\t\t\tif (record.state.value === SHIFT_STATES.unlocked) {\n\t\t\t\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const handleDeleteScheduleSuccess = ({ properties, dispatch }) => {\n\tfetchSchedules({ properties, dispatch });\n\tdispatch(GO_TO_LIST_VIEW);\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA, {});\n};\n\nexport const handleDeleteScheduleError = () =>\n\tcreateErrorMessageHandler({\n\t\tid: 'delete-schedule-error'\n\t});\n\nexport const handleAgentUpdateSuccess = ({ action, dispatch }) => {\n\tconst { result } = action.payload;\n\tdispatch(\n\t\tDEBOUNCED_CREATE_SCHEDULES_EFFECT,\n\t\t{},\n\t\t{ shiftId: result.workShift }\n\t);\n\tvar data = {\n\t\taddAgents: result.addedAgents,\n\t\tscheduleShift: result.workShift\n\t};\n\tdispatch(CHECK_IF_WORK_SHIFT_OVERLAPS, { data });\n};\n\nexport const handleAgentUpdateError = () =>\n\tcreateErrorMessageHandler({\n\t\tid: 'work-shift-update-error'\n\t});\n\nexport const handleShiftOverlapCheckSuccess = ({ dispatch }) => {\n\t// Dispatch effect to catch any notification generated during all the transaction.\n\tdispatch(GET_NOTIFICATIONS_EFFECT, {});\n};\n\nexport const handleShiftOverlapCheckError = () =>\n\tcreateErrorMessageHandler({\n\t\tid: 'overlap-check-error'\n\t});\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: handleComponentBootstrapped,\n\t[COMPONENT_DISCONNECTED]: handleComponentDisconnected,\n\t[FETCH_SCHEDULE]: fetchScheduleEffect,\n\t[FETCH_SCHEDULE_SUCCESS]: handleFetchScheduleSuccess,\n\t[FETCH_SCHEDULES]: fetchSchedulesEffect,\n\t[FETCH_SCHEDULES_START]: handleFetchSchedulesStart,\n\t[FETCH_SCHEDULES_SUCCESS]: handleFetchSchedulesSuccess,\n\t[FETCH_SCHEDULES_ERROR]: handleFetchSchedulesError,\n\t[RECORD_STATUS_CHANGED]: handleRecordStatusChanged,\n\t[OPEN_SCHEDULE]: openSchedule,\n\t[PUBLISH_SCHEDULE]: publishScheduleEffect,\n\t[PUBLISH_SCHEDULE_SUCCESS]: handlePublishScheduleSuccess,\n\t[PUBLISH_SCHEDULE_ERROR]: handlePublishScheduleError,\n\t[UNPUBLISH_SCHEDULE]: unpublishScheduleEffect,\n\t[UNPUBLISH_SCHEDULE_SUCCESS]: handleUnpublishScheduleSuccess,\n\t[UNPUBLISH_SCHEDULE_ERROR]: handleUnpublishScheduleError,\n\t[DUPLICATE_SCHEDULE]: duplicateScheduleEffect,\n\t[DUPLICATE_SCHEDULE_START]: handleDuplicateScheduleStart,\n\t[DUPLICATE_SCHEDULE_SUCCESS]: handleDuplicateScheduleSuccess,\n\t[DUPLICATE_SCHEDULE_ERROR]: handleDuplicateScheduleError,\n\t[DELETE_WORK_SHIFT]: deleteWorkShiftEffect,\n\t[DELETE_WORK_SHIFT_SUCCESS]: handleDeleteWorkShiftSuccess,\n\t[DELETE_WORK_SHIFT_ERROR]: handleDeleteWorkShiftError,\n\t[NOW_CARD_CLICKED]: handleNowCardClicked,\n\t[NOW_CARD_HEADER_ACTION_CLICKED]: handleNowCardHeaderActionClicked,\n\t[NOW_MODAL_OPENED_SET]: handleModalOpenedSet,\n\t[NOW_MODAL_FOOTER_ACTION_CLICKED]: handleModalFooterActionClicked,\n\t[GO_TO_LOADING_VIEW]: goToLoadingView,\n\t[GO_TO_LIST_VIEW]: goToListView,\n\t[GO_TO_DETAIL_VIEW]: goToDetailView,\n\t[GO_TO_EDIT_VIEW]: goToEditView,\n\t[GO_TO_CREATE_VIEW]: goToCreateView,\n\t[GO_TO_SHIFT_DETAIL_VIEW]: goToShiftDetailView,\n\t[GO_TO_SHIFT_EDIT_VIEW]: goToShiftEditView,\n\t[GO_TO_SHIFT_CREATE_VIEW]: goToShiftCreateView,\n\t[NOW_TYPEAHEAD_MULTI_VALUE_SET]: handleAgentTypeaheadValueChanged,\n\t[NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET]: handleAgentTypeaheadItemSelected,\n\t[TYPEAHEAD_FETCH_AGENTS]: fetchAgentsEffect,\n\t[TYPEAHEAD_FETCH_AGENTS_SUCCEDED]: handleAgentTypeaheadFetchSucceded,\n\t[ADD_AGENT_TO_SHIFT]: addAgentToShiftEffect,\n\t[DELETE_AGENT_FROM_SHIFT]: deleteAgentFromShiftEffect,\n\t[GET_NOTIFICATIONS_EFFECT]: getNotificationsEffect,\n\t[NOTIFICATIONS_EFFECT_HANDLER]: handleNotifications,\n\t[DEBOUNCED_CREATE_SCHEDULES_EFFECT]: createDebouncedShiftScheduleEffect,\n\t[CREATE_AGENT_SCHEDULES]: createShiftScheduleEffect,\n\t[CREATE_AGENT_SCHEDULES_SUCCESS]: handleCreateAgentSchedulesSuccess,\n\t[WATCH_SCHEDULE_PLAN]: watchSchedulePlan,\n\t[WATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED]: handleSchedulePlanMessageReceived,\n\t[WATCH_SCHEDULE_SHIFT]: watchScheduleShift,\n\t[WATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED]: handleScheduleShiftMessageReceived,\n\t[DELETE_SCHEDULE]: deleteScheduleEffect,\n\t[DELETE_SCHEDULE_SUCCESS]: handleDeleteScheduleSuccess,\n\t[DELETE_SCHEDULE_ERROR]: handleDeleteScheduleError,\n\t[UPDATE_AGENTS_IN_WORK_SHIFT]: updateAgentsInWorkShift,\n\t[UPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS]: handleAgentUpdateSuccess,\n\t[UPDATE_AGENTS_IN_WORK_SHIFT_ERROR]: handleAgentUpdateError,\n\t[CHECK_IF_WORK_SHIFT_OVERLAPS]: checkIfWorkShiftOverlaps,\n\t[CHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS]: handleShiftOverlapCheckSuccess,\n\t[CHECK_IF_WORK_SHIFT_OVERLAPS_ERROR]: handleShiftOverlapCheckError\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { createAmbSubscriptionEffect } from '@servicenow/ui-effect-amb';\nimport {\n\tfetchSchedulesQuery,\n\tfetchScheduleDetailQuery,\n\tfetchAgentsQuery,\n\tinsertAgentsToShiftMutation,\n\tremoveAgentFromShiftMutation,\n\tsessionNotifications\n} from './queries';\nimport {\n\tFETCH_SCHEDULES_START,\n\tFETCH_SCHEDULES_SUCCESS,\n\tFETCH_SCHEDULES_ERROR,\n\tFETCH_SCHEDULE_START,\n\tFETCH_SCHEDULE_SUCCESS,\n\tFETCH_SCHEDULE_ERROR,\n\tPUBLISH_SCHEDULE_SUCCESS,\n\tPUBLISH_SCHEDULE_ERROR,\n\tUNPUBLISH_SCHEDULE_SUCCESS,\n\tUNPUBLISH_SCHEDULE_ERROR,\n\tDUPLICATE_SCHEDULE_START,\n\tDUPLICATE_SCHEDULE_SUCCESS,\n\tDUPLICATE_SCHEDULE_ERROR,\n\tDELETE_WORK_SHIFT_SUCCESS,\n\tDELETE_WORK_SHIFT_ERROR,\n\tTYPEAHEAD_FETCH_AGENTS_SUCCEDED,\n\tNOTIFICATIONS_EFFECT_HANDLER,\n\tCREATE_AGENT_SCHEDULES_SUCCESS,\n\tCREATE_AGENT_SCHEDULES,\n\tDEBOUNCE_TIME_BEFORE_TRIGGER_SCHEDULES_CREATION,\n\tDEBOUNCED_CREATE_SCHEDULES_EFFECT,\n\tWATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED,\n\tWATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED,\n\tDELETE_SCHEDULE_SUCCESS,\n\tDELETE_SCHEDULE_ERROR,\n\tUPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS,\n\tUPDATE_AGENTS_IN_WORK_SHIFT_ERROR,\n\tCHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS,\n\tCHECK_IF_WORK_SHIFT_OVERLAPS_ERROR\n} from './constants';\nimport { DEBOUNCE } from '@servicenow/ui-core/lib/effects/modifiers/types';\nimport { RW_ACTIONS } from '../../common/constants';\n\nexport const fetchSchedulesEffect = createGraphQLEffect(fetchSchedulesQuery, {\n\ttemplateVarList: ['tableName'],\n\tvariableList: ['queryConditions', 'pagination'],\n\tstartActionType: FETCH_SCHEDULES_START,\n\tsuccessActionType: FETCH_SCHEDULES_SUCCESS,\n\terrorActionType: FETCH_SCHEDULES_ERROR\n});\n\nexport const fetchScheduleEffect = createGraphQLEffect(\n\tfetchScheduleDetailQuery,\n\t{\n\t\ttemplateVarList: ['tableName'],\n\t\tvariableList: ['queryConditions', 'pagination'],\n\t\tstartActionType: FETCH_SCHEDULE_START,\n\t\tsuccessActionType: FETCH_SCHEDULE_SUCCESS,\n\t\terrorActionType: FETCH_SCHEDULE_ERROR\n\t}\n);\n\nexport const publishScheduleEffect = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/publish_schedule',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: PUBLISH_SCHEDULE_SUCCESS,\n\t\terrorActionType: PUBLISH_SCHEDULE_ERROR\n\t}\n);\n\nexport const unpublishScheduleEffect = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/unpublish_schedule',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: UNPUBLISH_SCHEDULE_SUCCESS,\n\t\terrorActionType: UNPUBLISH_SCHEDULE_ERROR\n\t}\n);\n\nexport const duplicateScheduleEffect = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/duplicate_schedule',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tstartActionType: DUPLICATE_SCHEDULE_START,\n\t\tsuccessActionType: DUPLICATE_SCHEDULE_SUCCESS,\n\t\terrorActionType: DUPLICATE_SCHEDULE_ERROR\n\t}\n);\n\nexport const deleteWorkShiftEffect = createHttpEffect(\n\t'/api/now/table/sn_shift_planning_schedule_shift/:workShiftSysId',\n\t{\n\t\tmethod: 'DELETE',\n\t\tpathParams: 'workShiftSysId',\n\t\tsuccessActionType: DELETE_WORK_SHIFT_SUCCESS,\n\t\terrorActionType: DELETE_WORK_SHIFT_ERROR\n\t}\n);\n\n// Shift form effects\n\nexport const fetchAgentsEffect = createGraphQLEffect(fetchAgentsQuery, {\n\tvariableList: ['agentsCondition'],\n\tsuccessActionType: TYPEAHEAD_FETCH_AGENTS_SUCCEDED,\n\terrorActionType: TYPEAHEAD_FETCH_AGENTS_SUCCEDED\n});\n\nexport const addAgentToShiftEffect = createGraphQLEffect(\n\tinsertAgentsToShiftMutation,\n\t{\n\t\tvariableList: ['agent', 'scheduleShift'],\n\t\tsuccessActionType: DEBOUNCED_CREATE_SCHEDULES_EFFECT\n\t}\n);\n\nexport const getNotificationsEffect = createGraphQLEffect(\n\tsessionNotifications,\n\t{\n\t\tsuccessActionType: NOTIFICATIONS_EFFECT_HANDLER\n\t}\n);\n\nexport const deleteAgentFromShiftEffect = createGraphQLEffect(\n\tremoveAgentFromShiftMutation,\n\t{\n\t\tvariableList: ['agent'],\n\t\tsuccessActionType: DEBOUNCED_CREATE_SCHEDULES_EFFECT\n\t}\n);\n\n// Wrapper of createShiftScheduleEffect with debounce modifier\nexport const createDebouncedShiftScheduleEffect = {\n\tmodifier: {\n\t\tname: DEBOUNCE,\n\t\tdelay: DEBOUNCE_TIME_BEFORE_TRIGGER_SCHEDULES_CREATION\n\t},\n\teffect: ({ action, dispatch }) => {\n\t\tconst scheduleShift = action.meta.shiftId;\n\n\t\tdispatch(CREATE_AGENT_SCHEDULES, {\n\t\t\tdata: {\n\t\t\t\tscheduleShift\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const createShiftScheduleEffect = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/create_schedules',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: CREATE_AGENT_SCHEDULES_SUCCESS,\n\t\terrorActionType: NOTIFICATIONS_EFFECT_HANDLER\n\t}\n);\n\nexport const watchSchedulePlan = createAmbSubscriptionEffect(\n\t'/rw/default/:table/:filter',\n\t{\n\t\tsubscribeSucceededActionType: RW_ACTIONS.SUBSCRIPTION_SUCCEEDED,\n\t\tunsubscribeSucceededActionType: RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED,\n\t\tmessageReceivedActionType: WATCH_SCHEDULE_PLAN_MESSAGE_RECEIVED\n\t}\n);\n\nexport const watchScheduleShift = createAmbSubscriptionEffect(\n\t'/rw/default/:table/:filter',\n\t{\n\t\tsubscribeSucceededActionType: RW_ACTIONS.SUBSCRIPTION_SUCCEEDED,\n\t\tunsubscribeSucceededActionType: RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED,\n\t\tmessageReceivedActionType: WATCH_SCHEDULE_SHIFT_MESSAGE_RECEIVED\n\t}\n);\n\nexport const deleteScheduleEffect = createHttpEffect(\n\t'/api/now/table/sn_shift_planning_schedule_plan/:scheduleSysId',\n\t{\n\t\tmethod: 'DELETE',\n\t\tpathParams: 'scheduleSysId',\n\t\tsuccessActionType: DELETE_SCHEDULE_SUCCESS,\n\t\terrorActionType: DELETE_SCHEDULE_ERROR\n\t}\n);\n\nexport const updateAgentsInWorkShift = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/update_work_shift',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: UPDATE_AGENTS_IN_WORK_SHIFT_SUCCESS,\n\t\terrorActionType: UPDATE_AGENTS_IN_WORK_SHIFT_ERROR\n\t}\n);\n\nexport const checkIfWorkShiftOverlaps = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/shift_overlap',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: CHECK_IF_WORK_SHIFT_OVERLAPS_SUCCESS,\n\t\terrorActionType: CHECK_IF_WORK_SHIFT_OVERLAPS_ERROR\n\t}\n);\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nexport const sessionNotifications = `\nquery{\n\tGlideDomain_Query{\n\t\tsession{\n\t\t\tnotifications{\n\t\t\t\ttype\n\t\t\t\ttext\n\t\t\t\tnotificationType\n\t\t\t\tnotificationAttributes{\n\t\t\t\t\tattributeName\n\t\t\t\t\tattributeValue\n\t\t\t\t}\n\t\t\t\tchildNotifications{\n\t\t\t\t\ttype\n\t\t\t\t\ttext\n\t\t\t\t\tnotificationType\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const insertAgentsToShiftMutation = `\nmutation ($agent: String, $scheduleShift: String){\n\tGlideRecord_Mutation {\n\t\tinsert_sn_shift_planning_schedule_shift_agent(agent: $agent, schedule_shift: $scheduleShift) {\n\t\t\tsys_id {\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const removeAgentFromShiftMutation = `\nmutation ($agent: String!) {\n\tGlideRecord_Mutation {\n\t\tdelete_sn_shift_planning_schedule_shift_agent(sys_id: $agent) {\n\t\t\tmodified_count\n\t\t}\n\t}\n}\n`;\n\nconst agentsSubQuery = `\nsys_user_grmember (queryConditions: \"groupDYNAMIC514230e2b3130010ed7fc9c316a8dccc^ORDERBYuser.name\") {\n\t_results {\n\t\tuser {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t}\n\t}\n}\n`;\n\nexport const fetchAgentsQuery = `\nquery($agentsCondition: String) {\n\tGlideRecord_Query {\n\t\tsys_user_grmember (queryConditions: $agentsCondition) {\n\t\t\t_results {\n\t\t\t\tuser {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const fetchScheduleDetailQuery = `\nquery($queryConditions: String, $pagination: Glide_PaginationInputType) {\n\tGlideRecord_Query {\n\t\t{{tableName}}(queryConditions: $queryConditions, pagination: $pagination) {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tdefault_start_date {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tdefault_end_date {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tstate {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\t_query {\n\t\t\t\t\tshifts: GlideRecord_Query {\n\t\t\t\t\t\tsn_shift_planning_schedule_shift(queryConditions: \"schedule=$$parent.sys_id$$\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tagent_count {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstate {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_query {\n\t\t\t\t\t\t\t\t\tagents: GlideRecord_Query {\n\t\t\t\t\t\t\t\t\t\tsn_shift_planning_schedule_shift_agent(queryConditions: \"schedule_shift=$$parent.sys_id$$^ORDERBYagent.name\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tagent {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t_reference {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tphoto {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nexport const fetchSchedulesQuery = `\nquery($queryConditions: String, $pagination: Glide_PaginationInputType) {\n\tGlideRecord_Query {\n\t\t{{tableName}}(queryConditions: $queryConditions, pagination: $pagination) {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tdefault_start_date {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tdefault_end_date {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tstate {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t${agentsSubQuery}\n\t}\n}\n`;\n","module.exports = __TECTONIC__lodash_4_17_15[\"isFunction\"];","import { VIEW } from './constants';\nimport renderListView from './list-view';\nimport renderDetailView from './detail-view';\nimport renderEditView from './edit-view';\nimport renderCreateView from './create-view';\nimport renderShiftDetailView from './shift-detail-view';\nimport renderShiftCreateView from './shift-create-view';\nimport renderShiftEditView from './shift-edit-view';\nimport renderLoadingView from './loading-view';\n\nexport default (...args) => {\n\tconst state = args[0];\n\n\tswitch (state.currentView) {\n\tcase VIEW.list:\n\t\treturn renderListView(...args);\n\tcase VIEW.detail:\n\t\treturn renderDetailView(...args);\n\tcase VIEW.edit:\n\t\treturn renderEditView(...args);\n\tcase VIEW.create:\n\t\treturn renderCreateView(...args);\n\tcase VIEW.shiftCreate:\n\t\treturn renderShiftCreateView(...args);\n\tcase VIEW.shiftDetail:\n\t\treturn renderShiftDetailView(...args);\n\tcase VIEW.shiftEdit:\n\t\treturn renderShiftEditView(...args);\n\tcase VIEW.loading:\n\t\treturn renderLoadingView(...args);\n\tdefault:\n\t\tthrow new Error(`No renderer found for view ${state.currentView}`);\n\t}\n};\n","import { t } from 'sn-translate';\nimport get from 'lodash/get';\nimport {\n\tGO_TO_CREATE_VIEW,\n\tCARD_DROPDOWN_ACTIONS,\n\tOPEN_SCHEDULE,\n\tGO_TO_LOADING_VIEW\n} from './constants';\nimport { renderScheduleCard, canUnpublishSchedule } from './utils';\n\nexport const renderError = state => <now-empty-state {...state.error} />;\n\nexport const renderLoading = () => (\n\t<now-empty-state type=\"loading\" bodyText={false} />\n);\n\nexport const renderNoSchedules = () => (\n\t<now-empty-state\n\t\ttype=\"empty\"\n\t\theaderText={t('No schedule plans')}\n\t\tbodyText=\"\"\n\t/>\n);\n\nexport const buildCardDropdown = schedule => {\n\tconst dropdown = {\n\t\tid: 'list-view-card-actions',\n\t\tlabel: t('More actions for {0} schedule in {1} state', [\n\t\t\tget(schedule, 'name.displayValue', ''),\n\t\t\tget(schedule, 'state.displayValue', '')\n\t\t]), // tooltip for the ellipsis button\n\t\ticon: 'ellipsis-v-outline',\n\t\titems: [\n\t\t\t{\n\t\t\t\t...CARD_DROPDOWN_ACTIONS.duplicate,\n\t\t\t\tschedule\n\t\t\t}\n\t\t]\n\t};\n\tif (canUnpublishSchedule(schedule)) {\n\t\tdropdown.items.push({\n\t\t\t...CARD_DROPDOWN_ACTIONS.unpublish,\n\t\t\tschedule\n\t\t});\n\t}\n\treturn dropdown;\n};\n\nexport const renderScheduleList = state => {\n\treturn state.schedules.map(schedule => {\n\t\treturn renderScheduleCard({\n\t\t\tschedule,\n\t\t\tcardProps: {\n\t\t\t\tappendToPayload: {\n\t\t\t\t\tactionsToDispatch: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: GO_TO_LOADING_VIEW,\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\theaderText: t('Loading')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: OPEN_SCHEDULE,\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tscheduleSysId: schedule.sys_id.value,\n\t\t\t\t\t\t\t\tchangeContextDate: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\tcardHeaderProps: {\n\t\t\t\tdropdowns: [buildCardDropdown(schedule)]\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport default (state, { dispatch }) => {\n\treturn (\n\t\t<div className=\"schedule-list-container\">\n\t\t\t<header>\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={t('Schedules')}\n\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\twont-wrap\n\t\t\t\t\thas-no-margin\n\t\t\t\t/>\n\t\t\t\t{!state.error ? (\n\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\ticon=\"plus-outline\"\n\t\t\t\t\t\tclassName=\"create-schedule-btn\"\n\t\t\t\t\t\ttooltipContent={t('Create New')}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t'aria-label': t('Create a new schedule plan')\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ton-click={() => dispatch(GO_TO_CREATE_VIEW)}\n\t\t\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\t\t\telm.shadowRoot\n\t\t\t\t\t\t\t\t\t\t.querySelector('button')\n\t\t\t\t\t\t\t\t\t\t.focus();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t}}\n\t\t\t\t\t></now-button-iconic>\n\t\t\t\t) : null}\n\t\t\t</header>\n\t\t\t{state.error ? (\n\t\t\t\trenderError(state)\n\t\t\t) : state.isLoading ? (\n\t\t\t\trenderLoading()\n\t\t\t) : state.schedules.length === 0 ? (\n\t\t\t\trenderNoSchedules()\n\t\t\t) : (\n\t\t\t\t<div className=\"schedule-list\">\n\t\t\t\t\t{renderScheduleList(state, dispatch)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","import get from 'lodash/get';\nimport { t } from 'sn-translate';\nimport {\n\tSCHEDULE_PLAN_STATE,\n\tNOW_MODAL_OPENED_SET\n} from '../../common/constants';\nimport {\n\tGO_TO_LIST_VIEW,\n\tGO_TO_EDIT_VIEW,\n\tGO_TO_SHIFT_DETAIL_VIEW,\n\tGO_TO_SHIFT_CREATE_VIEW,\n\tPUBLISH_SCHEDULE,\n\tUNPUBLISH_SCHEDULE,\n\tDUPLICATE_SCHEDULE,\n\tGO_TO_SHIFT_EDIT_VIEW,\n\tSHIFT_STATES,\n\tMODALS,\n\tDELETE_SCHEDULE,\n\tGO_TO_LOADING_VIEW\n} from './constants';\nimport {\n\tgetShiftAriaConfig,\n\trenderScheduleCard,\n\tcanPublishSchedule,\n\tcanUnpublishSchedule,\n\tcanDeleteSchedule\n} from './utils';\n\nconst _renderAgentAvatar = agent => {\n\tconst name = get(agent, 'agent.displayValue');\n\t// const agentId = get(agent, 'agent.value');\n\tconst avatar = get(agent, 'agent._reference.avatar.displayValue');\n\tlet avatarProperties = {\n\t\tuserName: name,\n\t\tsize: 'sm',\n\t\tariaHidden: 'true'\n\t};\n\tif (avatar) {\n\t\tavatarProperties.imageSrc = avatar;\n\t}\n\treturn <now-avatar {...avatarProperties}></now-avatar>;\n};\n\nconst _renderShiftEntry = (\n\tshift,\n\tmaxAvatarsPerEntry,\n\tscheduleState,\n\tdispatch\n) => {\n\tconst agentCount = get(shift, 'agent_count.value', 0);\n\tconst name = get(shift, 'name.value');\n\tconst state = get(shift, 'state.value');\n\tconst isShiftLocked = state === SHIFT_STATES.locked;\n\tconst shiftEntryAriaConfig = getShiftAriaConfig(name);\n\tconst agents = get(\n\t\tshift,\n\t\t'_query.agents.sn_shift_planning_schedule_shift_agent._results',\n\t\t[]\n\t);\n\tconst hiddenAgents = agentCount - maxAvatarsPerEntry;\n\tconst moreAgentsLabel = t('+{0} more', [hiddenAgents]);\n\tconst shiftCardEvent =\n\t\tscheduleState === SCHEDULE_PLAN_STATE.PUBLISHED\n\t\t\t? GO_TO_SHIFT_DETAIL_VIEW\n\t\t\t: GO_TO_SHIFT_EDIT_VIEW;\n\treturn (\n\t\t<div className=\"schedule-detail-shifts-entry\">\n\t\t\t<now-card\n\t\t\t\tclassName={isShiftLocked ? 'locked' : ''}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tconfigAria={shiftEntryAriaConfig}\n\t\t\t\tinteraction={isShiftLocked ? 'none' : 'click'}\n\t\t\t\ton-click={() => {\n\t\t\t\t\tif (!isShiftLocked) {\n\t\t\t\t\t\tdispatch(shiftCardEvent, { currentShift: shift });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<now-card-header\n\t\t\t\t\theading={{\n\t\t\t\t\t\tlabel: name,\n\t\t\t\t\t\tsize: 'sm',\n\t\t\t\t\t\tlines: 1,\n\t\t\t\t\t\tvariant: 'primary',\n\t\t\t\t\t\tlevel: 1\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className=\"agents-list\">\n\t\t\t\t\t{agents\n\t\t\t\t\t\t.slice(0, maxAvatarsPerEntry)\n\t\t\t\t\t\t.map(_renderAgentAvatar)}\n\t\t\t\t\t{hiddenAgents > 0 ? (\n\t\t\t\t\t\t<span className=\"agents-list-more-label\">\n\t\t\t\t\t\t\t{moreAgentsLabel}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{isShiftLocked ? (\n\t\t\t\t\t\t<div className=\"overlay\">\n\t\t\t\t\t\t\t<now-icon\n\t\t\t\t\t\t\t\ticon=\"loader-outline\"\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tspin={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</now-card>\n\t\t</div>\n\t);\n};\n\nconst renderDeleteScheduleModal = state => {\n\tconst { currentScheduleSysId, modalOpened } = state;\n\tconst footerActions = [\n\t\t{\n\t\t\tlabel: t('Delete'),\n\t\t\tvariant: 'primary-negative',\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype: NOW_MODAL_OPENED_SET,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tmodal: MODALS.deleteSchedulePlan,\n\t\t\t\t\t\tvalue: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DELETE_SCHEDULE,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tscheduleSysId: currentScheduleSysId\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: GO_TO_LOADING_VIEW,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tbodyText: null,\n\t\t\t\t\t\theaderText: t('Deleting schedule...')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype: NOW_MODAL_OPENED_SET,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tmodal: MODALS.deleteSchedulePlan,\n\t\t\t\t\t\tvalue: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\treturn (\n\t\t<now-modal\n\t\t\theaderLabel={t('Delete schedule')}\n\t\t\tcontent={t('Are you sure that you want to delete this schedule?')}\n\t\t\tsize=\"sm\"\n\t\t\topened={modalOpened[MODALS.deleteSchedulePlan]}\n\t\t\tappendToPayload={{ modal: MODALS.deleteSchedulePlan }}\n\t\t\tfooterActions={footerActions}\n\t\t/>\n\t);\n};\n\nconst renderDetailView = (state, { dispatch }) => {\n\tconst schedule = state.currentSchedule;\n\tconst scheduleState = schedule.state.value;\n\tconst maxAvatarsPerEntry = get(state, 'properties.maxAvatarsPerEntry', 5);\n\tconst shifts = get(\n\t\tstate,\n\t\t'currentSchedule._query.shifts.sn_shift_planning_schedule_shift._results',\n\t\t[]\n\t);\n\tconst unpublishButton = {\n\t\tlabel: t('Unpublish'),\n\t\tclassName: 'btn-unpublish',\n\t\tvariant: 'secondary',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: UNPUBLISH_SCHEDULE,\n\t\t\t\tpayload: {\n\t\t\t\t\tdata: { scheduleSysId: schedule.sys_id.value }\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\tconst duplicateButton = {\n\t\tlabel: t('Duplicate'),\n\t\tclassName: 'btn-duplicate',\n\t\tvariant: 'secondary',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: DUPLICATE_SCHEDULE,\n\t\t\t\tpayload: {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tscheduleSysId: schedule.sys_id.value,\n\t\t\t\t\t\tgeneratePreview: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\tconst publishButton = {\n\t\tlabel: t('Publish'),\n\t\tclassName: 'btn-publish',\n\t\tvariant: 'primary',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: PUBLISH_SCHEDULE,\n\t\t\t\tpayload: {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tscheduleSysId: schedule.sys_id.value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\tconst deleteButton = {\n\t\tlabel: t('Delete'),\n\t\tclassName: 'btn-delete',\n\t\tvariant: 'primary-negative',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: NOW_MODAL_OPENED_SET,\n\t\t\t\tpayload: {\n\t\t\t\t\tmodal: MODALS.deleteSchedulePlan,\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\tlet footerButtons = [];\n\n\tif (canDeleteSchedule(schedule)) {\n\t\tfooterButtons.push(deleteButton);\n\t}\n\n\tfooterButtons.push(duplicateButton);\n\n\tif (canPublishSchedule(schedule)) {\n\t\tfooterButtons.push(publishButton);\n\t}\n\n\tif (canUnpublishSchedule(schedule, state.properties.dateFormat)) {\n\t\tfooterButtons.push(unpublishButton);\n\t}\n\n\tconst cardProps = {\n\t\tappendToPayload: {\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype: GO_TO_EDIT_VIEW\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"schedule-detail\">\n\t\t\t{renderDeleteScheduleModal(state)}\n\n\t\t\t<div className=\"breadcrumb\">\n\t\t\t\t<now-button-bare\n\t\t\t\t\tlabel={t('Schedules')}\n\t\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tclassName=\"btn-back\"\n\t\t\t\t\tconfigAria={{ 'aria-label': t('Go back to Schedule list') }}\n\t\t\t\t\ton-click={() => dispatch(GO_TO_LIST_VIEW)}\n\t\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\t\telm.shadowRoot.querySelector('button').focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 100);\n\t\t\t\t\t}}\n\t\t\t\t></now-button-bare>\n\t\t\t</div>\n\n\t\t\t<div className=\"content\">\n\t\t\t\t{renderScheduleCard({ schedule, cardProps })}\n\n\t\t\t\t<div className=\"schedule-detail-shifts\">\n\t\t\t\t\t{shifts.map(shift =>\n\t\t\t\t\t\t_renderShiftEntry(\n\t\t\t\t\t\t\tshift,\n\t\t\t\t\t\t\tmaxAvatarsPerEntry,\n\t\t\t\t\t\t\tscheduleState,\n\t\t\t\t\t\t\tdispatch\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{scheduleState != SCHEDULE_PLAN_STATE.PUBLISHED ? (\n\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\tlabel={t('Add shift')}\n\t\t\t\t\t\tclassName=\"btn-add-shift\"\n\t\t\t\t\t\ticonStart=\"plus-fill\"\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tconfigAria={{}}\n\t\t\t\t\t\ton-click={() => dispatch(GO_TO_SHIFT_CREATE_VIEW)}\n\t\t\t\t\t></now-button-bare>\n\t\t\t\t) : null}\n\t\t\t</div>\n\n\t\t\t<sn-manager-button-footer\n\t\t\t\tbuttons-config={footerButtons}\n\t\t\t></sn-manager-button-footer>\n\t\t</div>\n\t);\n};\n\nexport default renderDetailView;\n","import { t } from 'sn-translate';\nimport { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport { GO_TO_DETAIL_VIEW } from './constants';\nimport { SCHEDULE_PLAN_STATE } from '../../common/constants';\nimport get from 'lodash/get';\n\nconst footerButtons = [\n\t{\n\t\tlabel: t('Save'),\n\t\tvariant: 'primary',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: GFORM_ACTIONS.GFORM_SAVE\n\t\t\t}\n\t\t]\n\t}\n];\n\nconst renderEditView = (state, { dispatch }) => {\n\tconst table = get(state, 'properties.tableName');\n\tconst view = get(state, 'properties.formView');\n\tconst scheduleTitle = get(state, 'currentSchedule.name.displayValue');\n\tconst scheduleSysId = get(state, 'currentSchedule.sys_id.value');\n\tconst scheduleState = get(state, 'currentSchedule.state.value');\n\tconst editable = scheduleState === SCHEDULE_PLAN_STATE.DRAFT;\n\n\treturn (\n\t\t<div className=\"schedule-edit\">\n\t\t\t<now-button-bare\n\t\t\t\tlabel={scheduleTitle}\n\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tclassName=\"btn-back\"\n\t\t\t\tconfigAria={{\n\t\t\t\t\t'aria-label': t('Go back to {0}', scheduleTitle)\n\t\t\t\t}}\n\t\t\t\ton-click={() => dispatch(GO_TO_DETAIL_VIEW, { scheduleSysId })}\n\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\telm.shadowRoot.querySelector('button').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 100);\n\t\t\t\t}}\n\t\t\t></now-button-bare>\n\t\t\t<div className={`content ${editable ? '' : 'readonly'}`}>\n\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\tsysId={scheduleSysId}\n\t\t\t\t\ttable={table}\n\t\t\t\t\tview={view}\n\t\t\t\t\tactive=\"active\"\n\t\t\t\t>\n\t\t\t\t\t{editable ? (\n\t\t\t\t\t\t<div slot=\"footer\">\n\t\t\t\t\t\t\t<sn-manager-button-footer\n\t\t\t\t\t\t\t\tbuttons-config={footerButtons}\n\t\t\t\t\t\t\t></sn-manager-button-footer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</now-record-form-section-connected>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default renderEditView;\n","import { t } from 'sn-translate';\nimport { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport { GO_TO_LIST_VIEW } from './constants';\n\nconst footerButtons = [\n\t{\n\t\tlabel: t('Cancel'),\n\t\tvariant: 'secondary',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: GO_TO_LIST_VIEW\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tlabel: t('Save'),\n\t\tvariant: 'primary',\n\t\tactions: [\n\t\t\t{\n\t\t\t\tname: GFORM_ACTIONS.GFORM_SAVE\n\t\t\t}\n\t\t]\n\t}\n];\n\nconst renderCreateView = (state, { dispatch }) => {\n\tconst { tableName, formView } = state.properties;\n\treturn (\n\t\t<div className=\"schedule-create\">\n\t\t\t<now-button-bare\n\t\t\t\tlabel={t('Schedules')}\n\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tclassName=\"btn-back\"\n\t\t\t\tconfigAria={{ 'aria-label': t('Go back to Schedule list') }}\n\t\t\t\ton-click={() => dispatch(GO_TO_LIST_VIEW)}\n\t\t\t/>\n\t\t\t<div className=\"content\">\n\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\tsysId=\"-1\"\n\t\t\t\t\ttable={tableName}\n\t\t\t\t\tview={formView}\n\t\t\t\t>\n\t\t\t\t\t<div slot=\"footer\">\n\t\t\t\t\t\t<sn-manager-button-footer\n\t\t\t\t\t\t\tbuttons-config={footerButtons}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</now-record-form-section-connected>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default renderCreateView;\n","import { t } from 'sn-translate';\nimport { GO_TO_DETAIL_VIEW } from './constants';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nconst renderShiftDetailView = (state, { dispatch }) => {\n\tconst { currentShift, currentScheduleSysId } = state;\n\tconst agents = get(\n\t\tcurrentShift,\n\t\t'_query.agents.sn_shift_planning_schedule_shift_agent._results',\n\t\t[]\n\t);\n\tconst currentSchedule = get(state, 'currentSchedule', {});\n\tconst scheduleName = get(currentSchedule, 'name.displayValue', '');\n\n\treturn (\n\t\t<div className=\"shift-detail\">\n\t\t\t<now-button-bare\n\t\t\t\tlabel={scheduleName}\n\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tclassName=\"btn-back\"\n\t\t\t\tconfigAria={{\n\t\t\t\t\t'aria-label': t('Go back to {0} schedule', scheduleName)\n\t\t\t\t}}\n\t\t\t\ton-click={() =>\n\t\t\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\t\t\tscheduleSysId: currentScheduleSysId\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\telm.shadowRoot.querySelector('button').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 100);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<now-heading\n\t\t\t\tlabel={get(currentShift, 'name.value', '')}\n\t\t\t\tlevel=\"2\"\n\t\t\t\tvariant=\"title-secondary\"\n\t\t\t></now-heading>\n\t\t\t<now-label-value-stacked\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t('Agents'),\n\t\t\t\t\t\tvalue: { type: 'string', value: '' }\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t\titemMinWidth=\"\"\n\t\t\t\tdelimiter=\",\"\n\t\t\t\tsize=\"md\"\n\t\t\t\talign=\"horizontal\"\n\t\t\t></now-label-value-stacked>\n\t\t\t<div className=\"agents\">\n\t\t\t\t{agents.map(agent => {\n\t\t\t\t\tconst userName = get(agent, 'agent.displayValue', '');\n\t\t\t\t\tlet avatarProps = {\n\t\t\t\t\t\tuserName,\n\t\t\t\t\t\tsize: 'sm'\n\t\t\t\t\t};\n\t\t\t\t\tlet avatar = get(\n\t\t\t\t\t\tagent,\n\t\t\t\t\t\t'agent._reference.avatar.displayValue',\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t\tif (!isEmpty(avatar)) {\n\t\t\t\t\t\tavatarProps.imageSrc = avatar;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"shift-detail-agent-entry\">\n\t\t\t\t\t\t\t<now-avatar {...avatarProps}></now-avatar>\n\t\t\t\t\t\t\t<span>{userName}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default renderShiftDetailView;\n","import { t } from 'sn-translate';\nimport { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport { GO_TO_DETAIL_VIEW } from './constants';\nimport get from 'lodash/get';\n\nconst getFooterButtons = state => {\n\tconst scheduleId = get(state, 'currentSchedule.sys_id.value');\n\treturn [\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tclassName: 'btn-cancel',\n\t\t\tvariant: 'secondary',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tname: GO_TO_DETAIL_VIEW,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tscheduleSysId: scheduleId\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: t('Save'),\n\t\t\tclassName: 'btn-save',\n\t\t\tvariant: 'primary',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tname: GFORM_ACTIONS.GFORM_INTERNAL_BATCH_ACTIONS,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SET_VALUE,\n\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\tfieldName: 'schedule',\n\t\t\t\t\t\t\t\t\tvalue: scheduleId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SAVE,\n\t\t\t\t\t\t\t\tpayload: {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n};\n\nconst renderShiftCreateView = (state, { dispatch }) => {\n\tconst { formView } = state.properties;\n\tconst allAgents = get(state, 'agents._results', []).map(agent => {\n\t\treturn {\n\t\t\tid: agent.user.value,\n\t\t\tlabel: agent.user.displayValue\n\t\t};\n\t});\n\tconst { currentScheduleSysId, currentSchedule } = state;\n\tconst scheduleName = get(currentSchedule, 'name.displayValue', '');\n\tconst footerButtons = getFooterButtons(state);\n\treturn (\n\t\t<div className=\"shift-create\">\n\t\t\t<now-button-bare\n\t\t\t\tlabel={scheduleName}\n\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tclassName=\"btn-back\"\n\t\t\t\tconfigAria={{\n\t\t\t\t\t'aria-label': t('Go back to {0} schedule', scheduleName)\n\t\t\t\t}}\n\t\t\t\ton-click={() =>\n\t\t\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\t\t\tscheduleSysId: currentScheduleSysId\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\telm.shadowRoot.querySelector('button').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 100);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className=\"content\">\n\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\tsysId=\"-1\"\n\t\t\t\t\ttable=\"sn_shift_planning_schedule_shift\"\n\t\t\t\t\tview={formView}\n\t\t\t\t\tquery={`schedule=${currentScheduleSysId}`}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"shift-create-footer\" slot=\"footer\">\n\t\t\t\t\t\t<div className=\"agents-multi-field-container\">\n\t\t\t\t\t\t\t<now-typeahead-multi\n\t\t\t\t\t\t\t\tname=\"shift-agents\"\n\t\t\t\t\t\t\t\titems={allAgents}\n\t\t\t\t\t\t\t\tlabel={t('Agents')}\n\t\t\t\t\t\t\t\tplaceholder={t('Search for agents')}\n\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\tdisable-auto-select\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<sn-manager-button-footer\n\t\t\t\t\t\t\tbuttons-config={footerButtons}\n\t\t\t\t\t\t></sn-manager-button-footer>\n\t\t\t\t\t</div>\n\t\t\t\t</now-record-form-section-connected>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default renderShiftCreateView;\n","import { t } from 'sn-translate';\nimport { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport {\n\tGO_TO_LOADING_VIEW,\n\tGO_TO_DETAIL_VIEW,\n\tDELETE_WORK_SHIFT,\n\tMODALS\n} from './constants';\nimport { NOW_MODAL_OPENED_SET } from '../../common/constants';\nimport get from 'lodash/get';\n\nconst getFooterButtons = state => {\n\tconst scheduleId = get(state, 'currentSchedule.sys_id.value');\n\treturn [\n\t\t{\n\t\t\tlabel: t('Delete'),\n\t\t\tclassName: 'btn-delete',\n\t\t\tvariant: 'primary-negative',\n\t\t\tstyle: { marginLeft: '0' },\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tname: NOW_MODAL_OPENED_SET,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tmodal: MODALS.deleteWorkShift,\n\t\t\t\t\t\tvalue: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: t('Save'),\n\t\t\tclassName: 'btn-save',\n\t\t\tvariant: 'primary',\n\t\t\tstyle: { marginLeft: 'auto' },\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tname: GFORM_ACTIONS.GFORM_INTERNAL_BATCH_ACTIONS,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SET_VALUE,\n\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\tfieldName: 'schedule',\n\t\t\t\t\t\t\t\t\tvalue: scheduleId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SAVE,\n\t\t\t\t\t\t\t\tpayload: {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n};\n\nconst renderDeleteShiftModal = state => {\n\tconst { currentShift, currentSchedule, modalOpened } = state;\n\tconst footerActions = [\n\t\t{\n\t\t\tlabel: t('Delete'),\n\t\t\tvariant: 'primary-negative',\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype: NOW_MODAL_OPENED_SET,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tmodal: MODALS.deleteWorkShift,\n\t\t\t\t\t\tvalue: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: GO_TO_LOADING_VIEW,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tbodyText: null,\n\t\t\t\t\t\theaderText: t('Deleting work shift...')\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DELETE_WORK_SHIFT,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tworkShiftSysId: currentShift.sys_id.value\n\t\t\t\t\t},\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tscheduleSysId: currentSchedule.sys_id.value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype: NOW_MODAL_OPENED_SET,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tmodal: MODALS.deleteWorkShift,\n\t\t\t\t\t\tvalue: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\treturn (\n\t\t<now-modal\n\t\t\theaderLabel={t('Delete work shift')}\n\t\t\tcontent={t('Are you sure that you want to delete this work shift?')}\n\t\t\tsize=\"sm\"\n\t\t\topened={modalOpened[MODALS.deleteWorkShift]}\n\t\t\tappendToPayload={{ modal: MODALS.deleteWorkShift }}\n\t\t\tfooterActions={footerActions}\n\t\t/>\n\t);\n};\n\nconst renderShiftEditView = (state, { dispatch }) => {\n\tconst { formView } = state.properties;\n\tconst allAgents = get(state, 'agents._results', []).map(agent => {\n\t\treturn {\n\t\t\tid: agent.user.value,\n\t\t\tlabel: agent.user.displayValue\n\t\t};\n\t});\n\tconst { currentScheduleSysId, currentSchedule, currentShift } = state;\n\tconst scheduleName = get(currentSchedule, 'name.displayValue', '');\n\tconst footerButtons = getFooterButtons(state);\n\tconst currentShiftSysId = get(currentShift, 'sys_id.value');\n\tconst selectedAgents = get(state, 'agents.selectedAgents', []);\n\treturn (\n\t\t<div className=\"shift-edit\">\n\t\t\t{renderDeleteShiftModal(state)}\n\t\t\t<now-button-bare\n\t\t\t\tlabel={scheduleName}\n\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tclassName=\"btn-back\"\n\t\t\t\tconfigAria={{\n\t\t\t\t\t'aria-label': t('Go back to {0} schedule', scheduleName)\n\t\t\t\t}}\n\t\t\t\ton-click={() =>\n\t\t\t\t\tdispatch(GO_TO_DETAIL_VIEW, {\n\t\t\t\t\t\tscheduleSysId: currentScheduleSysId\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\telm.shadowRoot.querySelector('button').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 100);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className=\"content\">\n\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\tsysId={currentShiftSysId}\n\t\t\t\t\ttable=\"sn_shift_planning_schedule_shift\"\n\t\t\t\t\tview={formView}\n\t\t\t\t\tquery={`schedule=${currentScheduleSysId}`}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"shift-create-footer\" slot=\"footer\">\n\t\t\t\t\t\t<div className=\"agents-multi-field-container\">\n\t\t\t\t\t\t\t<now-typeahead-multi\n\t\t\t\t\t\t\t\tname=\"shift-agents\"\n\t\t\t\t\t\t\t\titems={allAgents}\n\t\t\t\t\t\t\t\tlabel={t('Agents')}\n\t\t\t\t\t\t\t\tplaceholder={t('Search for agents')}\n\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\tdisable-auto-select\n\t\t\t\t\t\t\t\tselectedItems={selectedAgents}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<sn-manager-button-footer\n\t\t\t\t\t\t\tbuttons-config={footerButtons}\n\t\t\t\t\t\t></sn-manager-button-footer>\n\t\t\t\t\t</div>\n\t\t\t\t</now-record-form-section-connected>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default renderShiftEditView;\n","import get from 'lodash/get';\n\nexport default state => {\n\tconst loadingStateProps = {\n\t\ttype: 'loading',\n\t\tbodyText: get(state, 'loadingState.bodyText', false),\n\t\theaderText: get(state, 'loadingState.headerText', false)\n\t};\n\treturn (\n\t\t<div className=\"schedule-loading-container\">\n\t\t\t<now-empty-state {...loadingStateProps} />\n\t\t</div>\n\t);\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;flex-direction:column;height:100%;overflow:hidden}.btn-back{margin:0 .75rem}.schedule-loading-container{display:flex;flex-direction:column;height:100%;overflow:hidden;padding:1rem}.schedule-loading-container now-empty-state{padding-top:1rem}.schedule-list-container{display:flex;flex-direction:column;height:100%;overflow:hidden}.schedule-list-container header{display:flex;align-items:center;justify-content:space-between;margin:1rem}.schedule-list{flex:1;overflow-x:hidden;overflow-y:auto;padding:0 1rem 1rem}.schedule-card{margin:0 0 1rem}.schedule-card:last-child{margin-bottom:0}.schedule-card now-card-header{padding-bottom:1rem}.schedule-card now-label-value-stacked{padding-bottom:.5rem}.schedule-card now-label-value-stacked:last-child{padding-bottom:0}.schedule-detail{display:flex;flex-direction:column;height:100%;overflow:hidden}.schedule-detail .breadcrumb{border-bottom:var(--mv9-JrZp--kvZptZ-9Apz8,1px) solid rgb(var(--mv9-jrzp--kvzptz-jvjvz,var(--now-color--divider-tertiary,var(--now-color--neutral-3,209,214,214))))}.schedule-detail .content{flex:1;overflow-x:hidden;overflow-y:auto;padding-bottom:2rem}.schedule-detail .schedule-card{margin:calc(-1*var(--mv9-JrZp--kvZptZ-9Apz8, 1px)) calc(-1*var(--mv9-JrZp--kvZptZ-9Apz8, 1px)) 0}.schedule-detail .btn-add-shift{margin:.5rem .75rem}.schedule-detail-shifts-entry now-card{margin:calc(-1*var(--mv9-JrZp--kvZptZ-9Apz8, 1px)) calc(-1*var(--mv9-JrZp--kvZptZ-9Apz8, 1px)) 0}.schedule-detail-shifts-entry .overlay{display:flex;justify-content:center;align-items:center;position:absolute;background:hsla(0,0%,100%,.5);top:-1.5rem;right:0;bottom:0;left:0}.schedule-detail-shifts-entry now-card-header{padding:.5rem 0}.schedule-detail-shifts-entry .agents-list{position:relative;margin-bottom:.5rem}.schedule-detail-shifts-entry .agents-list now-loader{display:inline;position:absolute;top:-1.5rem;right:0}.schedule-detail-shifts-entry .agents-list now-avatar:not(:first-child){margin-left:-.25rem}.schedule-detail-shifts-entry .agents-list-more-label{display:inline-block;margin-left:.5rem;color:RGB(var(--now-color--neutral-7,135,147,148));font-size:1rem}.schedule-create,.schedule-edit,.shift-create,.shift-edit{display:flex;flex-direction:column;height:100%;overflow:hidden;position:relative}.schedule-create .content,.schedule-edit .content,.shift-create .content,.shift-edit .content{overflow-x:hidden;overflow-y:auto;height:calc(100% - 5.9375rem)}.schedule-create .content.readonly,.schedule-edit .content.readonly,.shift-create .content.readonly,.shift-edit .content.readonly{height:100%}.schedule-create sn-manager-button-footer,.schedule-edit sn-manager-button-footer,.shift-create sn-manager-button-footer,.shift-edit sn-manager-button-footer{--sn-manager-button-footer-padding:.75rem;position:absolute;left:0;bottom:0;width:100%}.schedule-create now-record-form-section-connected,.schedule-edit now-record-form-section-connected,.shift-create now-record-form-section-connected,.shift-edit now-record-form-section-connected{margin:0 .75rem}.shift-create-footer,.shift-edit-footer{display:flex;flex-direction:column;height:100%;margin-top:-1px;padding:0 1.5rem;background-color:RGB(var(--now-color--neutral-0,255,255,255));z-index:1000}.shift-create-footer .agents-multi-field-container,.shift-edit-footer .agents-multi-field-container{flex:1 0 auto}.shift-create-footer .agents-multi-field-container now-typeahead-multi,.shift-edit-footer .agents-multi-field-container now-typeahead-multi{display:block;width:min-content;width:-webkit-min-content;min-width:100%}.shift-detail{display:flex;flex-direction:column;height:100%;overflow:hidden}.shift-detail .btn-back{margin:0 .75rem}.shift-detail now-heading{margin:.5rem .75rem 0}.shift-detail now-label-value-stacked{margin:.25rem .75rem}.shift-detail .agents{flex:1;overflow-x:hidden;overflow-y:auto;padding-bottom:.5rem}.shift-detail-agent-entry{margin:0 .75rem .75rem}.shift-detail-agent-entry span{margin:0 .5rem}.shift-detail-agent-entry:first-of-type{margin-top:.5rem}\", \"\"]);\n\n// exports\n","export { default } from './demand-forecast-popover';\n","import '@servicenow/now-chart-bar';\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-demand-forecast-popover', {\n\trenderer: { type: snabbdom, view },\n\tproperties: {\n\t\tdateTime: {},\n\t\tforecastStatus: {},\n\t\tmismatchedTitle: {},\n\t\tmismatchedData: {},\n\t\tbarChartData: {},\n\t\thasBarChart: {},\n\t\thasShowAllLink: {}\n\t},\n\tstyles\n});\n","import { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport { t } from 'sn-translate';\nimport {\n\tFORECAST_STATUS_LABEL,\n\tFORECAST_STATUS_ICONS,\n\tFORECAST_STATUS_HIGHLIGHT\n} from '../../common/calendar/constants';\nimport { NOW_POPOVER_OPENED_SET } from '../../common/constants';\nimport { SHOW_ALL_CLICKED } from './constants';\nimport { getBarChartProps } from './utils';\n\nexport default (state, { dispatch }) => {\n\tconst {\n\t\tforecastStatus,\n\t\tdateTime,\n\t\tmismatchedTitle,\n\t\tmismatchedData,\n\t\thasBarChart,\n\t\thasShowAllLink\n\t} = state.properties;\n\n\tif (!dateTime) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"forecast-status\">\n\t\t\t\t\t<now-highlighted-value\n\t\t\t\t\t\tlabel={FORECAST_STATUS_LABEL[forecastStatus]}\n\t\t\t\t\t\ticon={FORECAST_STATUS_ICONS[forecastStatus]}\n\t\t\t\t\t\tcolor={FORECAST_STATUS_HIGHLIGHT[forecastStatus]}\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tclassName=\"btn-close\"\n\t\t\t\t\tbare={true}\n\t\t\t\t\ticon=\"close-outline\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\tconfigAria={{ button: { 'aria-label': t('Close') } }}\n\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\tdispatch(NOW_POPOVER_OPENED_SET, {\n\t\t\t\t\t\t\tid: 'forecast',\n\t\t\t\t\t\t\tvalue: false\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"date\">{dateTime}</div>\n\t\t\t{hasBarChart ? (\n\t\t\t\t<now-chart-bar className=\"chart\" {...getBarChartProps(state)} />\n\t\t\t) : null}\n\t\t\t{mismatchedData ? (\n\t\t\t\t<div className=\"mismatch-table\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col1 title\">{mismatchedTitle}</div>\n\t\t\t\t\t\t<div className=\"col2 title\">{t('Agents')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{mismatchedData.map(({ title, value }) => (\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col1\">{title}</div>\n\t\t\t\t\t\t\t<div className=\"col2\">{value}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{hasShowAllLink ? (\n\t\t\t\t<now-button-bare\n\t\t\t\t\tclassName=\"btn-show-all\"\n\t\t\t\t\tlabel={t('Show all')}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tconfigAria={{ 'aria-label': t('Show all') }}\n\t\t\t\t\ton-click={() => dispatch(SHOW_ALL_CLICKED, { dateTime })}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</Fragment>\n\t);\n};\n","import { createSelector } from 'reselect';\nimport { t } from 'sn-translate';\nimport { STACKED_BAR_CHART_COLORS } from './constants';\n\nexport const getBarChartData = state => state.properties.barChartData;\nexport const getDateTime = state => state.properties.dateTime;\n\nexport const getBarChartProps = createSelector(\n\tgetBarChartData,\n\tgetDateTime,\n\tbarChartData => {\n\t\treturn {\n\t\t\twidth: 'auto',\n\t\t\theight: 'auto',\n\t\t\ttype: 'stacked',\n\t\t\tseriesConfig: {\n\t\t\t\tbase: {\n\t\t\t\t\ty: 'base',\n\t\t\t\t\tx: 'hour',\n\t\t\t\t\tcolor: STACKED_BAR_CHART_COLORS.base\n\t\t\t\t},\n\t\t\t\tunderstaffed: {\n\t\t\t\t\ty: 'understaffed',\n\t\t\t\t\tx: 'hour',\n\t\t\t\t\tcolor: STACKED_BAR_CHART_COLORS.understaffed\n\t\t\t\t},\n\t\t\t\toverstaffed: {\n\t\t\t\t\ty: 'overstaffed',\n\t\t\t\t\tx: 'hour',\n\t\t\t\t\tcolor: STACKED_BAR_CHART_COLORS.overstaffed\n\t\t\t\t}\n\t\t\t},\n\t\t\tseriesData: barChartData.map(({ coverage, forecast }, hour) => {\n\t\t\t\tconst result = { hour };\n\t\t\t\tconst diff = coverage - forecast;\n\t\t\t\tif (diff > 0) {\n\t\t\t\t\tresult.overstaffed = diff;\n\t\t\t\t\tresult.base = forecast;\n\t\t\t\t} else if (diff < 0) {\n\t\t\t\t\tresult.understaffed = -diff;\n\t\t\t\t\tresult.base = coverage;\n\t\t\t\t} else {\n\t\t\t\t\tresult.base = coverage;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}),\n\t\t\thideYAxis: true,\n\t\t\thideRegister: true,\n\t\t\thideGridlines: true,\n\t\t\textraMargin: {\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t\tright: 0,\n\t\t\t\tleft: 0\n\t\t\t},\n\t\t\txAxisConfig: {\n\t\t\t\ttickConfig: {\n\t\t\t\t\tstrokeWidth: 0,\n\t\t\t\t\ttickValues: []\n\t\t\t\t}\n\t\t\t},\n\t\t\tconfigAria: {\n\t\t\t\tchart: { 'aria-label': t('Forecast') }\n\t\t\t}\n\t\t};\n\t}\n);\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;flex-direction:column;padding:.75rem;width:280px;overflow:hidden}.header{display:flex;margin-bottom:.5rem}.forecast-status{flex:1;overflow:hidden;margin-right:.5rem}.forecast-status now-highlighted-value{max-width:100%}.date{font-size:1rem;color:var(--now-color--neutral-18,22,27,28);font-weight:600}.chart{height:100px;width:100%;overflow:hidden;margin:.75rem 0 -1rem}.mismatch-table{color:var(--now-color--neutral-18,22,27,28);display:flex;flex-direction:column;font-size:.75rem;margin:.75rem 0 0}.mismatch-table .title{font-weight:600}.mismatch-table .row{display:flex;margin-bottom:.25rem}.mismatch-table .col1{margin-right:2rem;width:70%}.mismatch-table .col1,.mismatch-table .col2{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.mismatch-table .col2{width:30%;text-align:right}.btn-show-all{margin:.5rem 0 0}\", \"\"]);\n\n// exports\n","import get from 'lodash/get';\nimport '@servicenow/now-calendar';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-dropdown';\nimport {\n\tCALENDAR_VIEWS,\n\tCALENDAR_VIEW_CONFIGS,\n\tCALENDAR_EVENT_MIN_WIDTH_MS,\n\tSCHEDULE_AGENT_UI_ACTIONS // eslint-disable-line\n} from '../constants.js';\nimport { renderEditEventModalComponent } from './editEventModal';\nimport { renderDeleteEventModal } from './deleteEventModal';\nimport { t } from 'sn-translate';\nimport { createRef, Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line\nimport isEmpty from 'lodash/isEmpty';\nimport debounce from 'lodash/debounce';\nimport '../../schedule/sn-manager-agent-shift-swapper';\nimport '../../schedule/sn-manager-event-request';\nimport '../../schedule/sn-manager-agent-time-off-request';\nimport { NEW_EVENT_DROPDOWN_SOURCE_ID, POPOVERS } from './constants.js';\nimport { isFilterEmpty } from './utils.js';\n\nconst updateContextualPanelStyle = (calendarElm, contextualPanelElm) => {\n\tconst calendarBounds = calendarElm.getBoundingClientRect();\n\tconst targetBounds = contextualPanelElm.getBoundingClientRect();\n\tconst panelWidth = calendarBounds.width * 0.2; // need to set panel width to make now-card show ellipsis\n\tlet panelHeight = 0;\n\n\tif (targetBounds.top > 0) {\n\t\tpanelHeight =\n\t\t\tcalendarBounds.top + calendarBounds.height - targetBounds.top;\n\t} else {\n\t\tpanelHeight = calendarBounds.height - 52; // 52px is the height of calendar-header-container div\n\t}\n\n\tcontextualPanelElm.style.height = `${panelHeight}px`;\n\tcontextualPanelElm.style.width = `${panelWidth}px`;\n};\n\nlet resizeHandler;\n\nconst setupResizeHandler = (calendarElm, contextualPanelElm) => {\n\tupdateContextualPanelStyle(calendarElm, contextualPanelElm);\n\tresizeHandler = debounce(\n\t\t() => updateContextualPanelStyle(calendarElm, contextualPanelElm),\n\t\t200\n\t);\n\twindow.addEventListener('resize', resizeHandler);\n};\n\nconst removeResizeHandler = () => {\n\twindow.removeEventListener('resize', resizeHandler);\n};\n\nconst view = (state, { dispatch }) => {\n\tconst { demandForecastPopoverProps, demandForecastPopoverContent } = state;\n\n\tconst _getViews = viewType => {\n\t\tlet viewNames = get(CALENDAR_VIEWS, viewType, {});\n\t\tlet views = [];\n\n\t\tfor (let i in viewNames)\n\t\t\tviews.push(get(CALENDAR_VIEW_CONFIGS, viewNames[i], {}));\n\n\t\treturn views;\n\t};\n\n\tconst _renderLoading = () => <div>{t('Loading')}</div>;\n\n\tconst _renderError = () => <div>{t('An error occurred')}</div>;\n\n\t// <now-button label={t(\"Request shift swap\")} on-click={() => dispatch('REQUEST_SHIFT_SWAP')}></now-button> -->\n\tconst _renderAction = state => (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'inline-flex',\n\t\t\t\tmarginLeft: '8px',\n\t\t\t\tjustifyContent: 'space-between'\n\t\t\t}}\n\t\t\tslot=\"right-header-btns\"\n\t\t>\n\t\t\t<sn-manager-agent-shift-swapper\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginRight: '4px'\n\t\t\t\t}}\n\t\t\t\trequestorDetails={get(state, 'shiftSwapRequestDetails', {})}\n\t\t\t\tcontextDate={get(state, 'calendarControls.contextDate')}\n\t\t\t/>\n\t\t\t{\n\t\t\t\t<sn-manager-agent-time-off-request\n\t\t\t\t\tcurrentUser={get(state, 'properties.currentUser', {})}\n\t\t\t\t\ttimezone={get(state, 'properties.timezone', '')}\n\t\t\t\t\trequestorDetails={get(state, 'timeOffRequestDetails', {})}\n\t\t\t\t\tcontextDate={get(state, 'calendarControls.contextDate')}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n\n\tconst _renderCalendar = () => {\n\t\tconst calendarRef = createRef();\n\t\tconst showCoverageRow = isFilterEmpty(state.properties.filter);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<now-calendar\n\t\t\t\t\tref={calendarRef}\n\t\t\t\t\tstyle={{ height: '100%' }}\n\t\t\t\t\tavailable-views={_getViews(\n\t\t\t\t\t\tstate.properties.availableViewTypes\n\t\t\t\t\t)}\n\t\t\t\t\tview-settings={{\n\t\t\t\t\t\tTIMELINE_DAY: {\n\t\t\t\t\t\t\tgroupBy: 'group',\n\t\t\t\t\t\t\txStep: parseInt(state.properties.xStep),\n\t\t\t\t\t\t\txSize: parseInt(state.properties.xSize),\n\t\t\t\t\t\t\txStart: parseInt(state.properties.xStart),\n\t\t\t\t\t\t\teventMinWidthMS: CALENDAR_EVENT_MIN_WIDTH_MS,\n\t\t\t\t\t\t\tforecastData: state.forecastData,\n\t\t\t\t\t\t\tshowForecast: state.properties.forecastEnabled,\n\t\t\t\t\t\t\tshowCoverageRow,\n\t\t\t\t\t\t\thideAgendaView: true,\n\t\t\t\t\t\t\truntimeData: new Map()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTIMELINE_WEEK: {\n\t\t\t\t\t\t\tgroupBy: 'group',\n\t\t\t\t\t\t\teventMinWidthMS: CALENDAR_EVENT_MIN_WIDTH_MS,\n\t\t\t\t\t\t\tforecastData: state.forecastData,\n\t\t\t\t\t\t\tshowForecast: state.properties.forecastEnabled,\n\t\t\t\t\t\t\tshowCoverageRow,\n\t\t\t\t\t\t\thideAgendaView: true,\n\t\t\t\t\t\t\truntimeData: new Map()\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tsecurity={{\n\t\t\t\t\t\treadOnly: true,\n\t\t\t\t\t\tallowCreate: state.properties.allowEventCreation\n\t\t\t\t\t}}\n\t\t\t\t\tcustomizableLabels={{\n\t\t\t\t\t\tnewButton: { text: t('New') },\n\t\t\t\t\t\tagendaEmptyState: { text: t('No events scheduled') }\n\t\t\t\t\t}}\n\t\t\t\t\tcontextDate={state.properties.contextDate}\n\t\t\t\t\ttimezone={state.properties.timezone}\n\t\t\t\t\ttimeFormat={state.properties.timeFormat}\n\t\t\t\t\tdateFormat={state.properties.dateFormat}\n\t\t\t\t\tavailableTimezones={get(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t'calendarControls.timeZones',\n\t\t\t\t\t\t[]\n\t\t\t\t\t)}\n\t\t\t\t\tsections={get(state, 'calendarControls.sections', [])}\n\t\t\t\t\tevents={get(state, 'calendarControls.events', [])}\n\t\t\t\t\tdatePickerTemplates={state.properties.datePickerTemplates}\n\t\t\t\t\tcurrent-view={get(\n\t\t\t\t\t\tCALENDAR_VIEWS,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tstate.properties.availableViewTypes,\n\t\t\t\t\t\t\tstate.properties.startingView\n\t\t\t\t\t\t],\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t\ttimelineDayTemplateRenderer={\n\t\t\t\t\t\tstate.properties.timelineDayTemplateRenderer\n\t\t\t\t\t}\n\t\t\t\t\ttimelineWeekTemplateRenderer={\n\t\t\t\t\t\tstate.properties.timelineWeekTemplateRenderer\n\t\t\t\t\t}\n\t\t\t\t\tpopoverEnabled={true}\n\t\t\t\t\tpopoverContentState={state.properties.popoverContentState}\n\t\t\t\t\tcontextual-panel-items={\n\t\t\t\t\t\tstate.properties.contextualPanelItems\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'inline-flex',\n\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tslot=\"left-header-slot\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{get(state, 'properties.allowEventCreation', false) ? (\n\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\tclassName=\"new-event-type-dropdown\"\n\t\t\t\t\t\t\t\tplaceholder={t('New')}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tsource: NEW_EVENT_DROPDOWN_SOURCE_ID\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\titems={get(\n\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t'calendarControls.newEventChoices',\n\t\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\ticon=\"plus-fill\"\n\t\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\t\ttooltip-content={t('Create new Event')}\n\t\t\t\t\t\t\t\ttrigger={t('Create new event')}\n\t\t\t\t\t\t\t\tmanageSelectedItems={true}\n\t\t\t\t\t\t\t\tselectedItems={state.newEventItem || []}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<sn-manager-event-request\n\t\t\t\t\t\t\tshowModal={state.showNewEventModal}\n\t\t\t\t\t\t\tmodalSchema={{ ...state.modalSchema }}\n\t\t\t\t\t\t\tmode={state.modalMode}\n\t\t\t\t\t\t\teventSpanId={state.modalEventSpanId}\n\t\t\t\t\t\t\teventCategoryId={state.modalEventCategoryId}\n\t\t\t\t\t\t\tmodalTitle={state.modalTitle}\n\t\t\t\t\t\t\teventTypeId={state.modalEventId}\n\t\t\t\t\t\t\tformData={state.modalFormData}\n\t\t\t\t\t\t\treadInTimezone={get(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t'properties.timezone',\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t></sn-manager-event-request>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div slot=\"event-popover\">\n\t\t\t\t\t\t{state.properties.popoverTemplate}\n\t\t\t\t\t</div>\n\t\t\t\t\t{!isEmpty(state.properties.contextualPanelItems) ? (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\thook-insert={vnode =>\n\t\t\t\t\t\t\t\tsetupResizeHandler(\n\t\t\t\t\t\t\t\t\tcalendarRef.current,\n\t\t\t\t\t\t\t\t\tvnode.elm\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thook-destroy={removeResizeHandler}\n\t\t\t\t\t\t\tclassName=\"contextual-panel-container\"\n\t\t\t\t\t\t\tslot=\"contextual-panel-content\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<slot name=\"contextual-panel-content\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{state.properties.showAgentRequestIcons\n\t\t\t\t\t\t? _renderAction(state)\n\t\t\t\t\t\t: ''}\n\t\t\t\t</now-calendar>\n\t\t\t\t<now-popover\n\t\t\t\t\tappendToPayload={{ id: POPOVERS.FORECAST }}\n\t\t\t\t\t{...demandForecastPopoverProps}\n\t\t\t\t>\n\t\t\t\t\t<sn-manager-demand-forecast-popover\n\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\t{...demandForecastPopoverContent}\n\t\t\t\t\t/>\n\t\t\t\t</now-popover>\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\tconst _renderContent = () => {\n\t\tif (get(state, 'calendarControls.error', false)) return _renderError();\n\t\telse if (!get(state, 'calendarControls.loaded', false))\n\t\t\treturn _renderLoading();\n\t\telse return _renderCalendar();\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"content\">{_renderContent()}</div>\n\t\t\t{/**\n\t\t\t * Edit event modal\n\t\t\t */}\n\t\t\t{!isEmpty(get(state, 'editEvent')) &&\n\t\t\tget(state, 'showShiftEditModal', false)\n\t\t\t\t? renderEditEventModalComponent(state, dispatch)\n\t\t\t\t: null}\n\t\t\t{/**\n\t\t\t * Delete event confirmation modal\n\t\t\t */}\n\t\t\t{!isEmpty(get(state, 'eventToDelete', {})) &&\n\t\t\tget(state, 'showDeleteEventModal', false)\n\t\t\t\t? renderDeleteEventModal(state)\n\t\t\t\t: null}\n\t\t</div>\n\t);\n};\n\nexport default {\n\tview\n};\n","import '@servicenow/now-record-time';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-button';\nimport '@servicenow/now-alert';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport { preUserData } from 'sn-uxpage-presource';\nimport {\n\tSHIFT_EDITING_EVENTS,\n\tSHIFT_EDITING_MODAL_CONSTANTS,\n\tINTERNAL_FORMAT\n} from './constants';\nimport isEmpty from 'lodash/isEmpty';\nimport { t } from 'sn-translate';\n\nconst DAYS_LABEL = t('Days');\nconst DAY_LABEL = t('Day');\nconst START_LABEL = t('Start');\nconst END_LABEL = t('End');\n/**\n * Returns the piece of UI with the controls needed to render the\n * start and end times for a given event. if isChileEvent is true,\n * we also render a button to delete the childEvent\n * @param {Object} event\n * @param {boolean} isChildEvent\n * @param {function} dispatch\n */\nconst _renderTimeRangeRow = (event, isChildEvent = false, dispatch) => {\n\tconst { record_id, startMoment, endMoment, title } = event;\n\tconst eventClass = isChildEvent ? 'child-event' : 'main-event';\n\tlet {\n\t\tinitialState: { timeFormat }\n\t} = preUserData;\n\n\tif (timeFormat.indexOf(SHIFT_EDITING_MODAL_CONSTANTS.SECONDS_FORMAT) > -1) {\n\t\ttimeFormat = timeFormat.replace(\n\t\t\tSHIFT_EDITING_MODAL_CONSTANTS.SECONDS_FORMAT,\n\t\t\t''\n\t\t);\n\t}\n\tlet labelStart = isChildEvent ? `${START_LABEL} ${title}` : START_LABEL;\n\tlet labelEnd = isChildEvent ? `${END_LABEL} ${title}` : END_LABEL;\n\tlet startId = `${record_id}-start-${timeFormat}`;\n\tlet endId = `${record_id}-end-${timeFormat}`;\n\t// if event is overnight, then we add an extra label to denote\n\t// how many days covers from start to end\n\tif (endMoment.isAfter(startMoment, 'days')) {\n\t\tlet diffDays = Math.ceil(endMoment.diff(startMoment, 'hours') / 24);\n\t\tlet overnightlabel = diffDays > 1 ? DAYS_LABEL : DAY_LABEL;\n\t\tlabelEnd = `${labelEnd} (+${diffDays}${overnightlabel})`;\n\t}\n\tlet ariaLabelDeleteBtn = t(\n\t\t'Delete {0} entry with start value {1} and end value {2}',\n\t\ttitle,\n\t\tstartMoment.format(timeFormat),\n\t\tendMoment.format(timeFormat)\n\t);\n\treturn (\n\t\t<div className={`shift-range ${eventClass}`}>\n\t\t\t<now-record-time\n\t\t\t\tlabel={labelStart}\n\t\t\t\tname={startId}\n\t\t\t\tvalue={startMoment.format(timeFormat)}\n\t\t\t\tformat={timeFormat}\n\t\t\t/>\n\t\t\t<now-record-time\n\t\t\t\tlabel={labelEnd}\n\t\t\t\tname={endId}\n\t\t\t\tvalue={endMoment.format(timeFormat)}\n\t\t\t\tformat={timeFormat}\n\t\t\t/>\n\t\t\t{isChildEvent ? (\n\t\t\t\t<now-button-iconic\n\t\t\t\t\tbare\n\t\t\t\t\thigh-contrast\n\t\t\t\t\ticon=\"trash-outline\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ttooltipContent={ariaLabelDeleteBtn}\n\t\t\t\t\tconfigAria={{ 'aria-label': ariaLabelDeleteBtn }}\n\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\tdispatch(SHIFT_EDITING_EVENTS.SET_TO_DELETE, {\n\t\t\t\t\t\t\trecord_id\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t></now-button-iconic>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\n/**\n * Renders the body of the modal\n */\nconst renderEditEventModalContent = ({ editEvent, errorMessage }, dispatch) => {\n\t// Only show breaks if event is not marked to delete\n\tlet childEvents = get(editEvent, 'childEvents', []).filter(event => {\n\t\tconst spanId = get(event, 'record_id');\n\t\treturn !get(editEvent, `stagedValue.${spanId}.delete`, false);\n\t});\n\treturn (\n\t\t<div className=\"edit-modal\">\n\t\t\t{!isEmpty(errorMessage) ? (\n\t\t\t\t<now-alert\n\t\t\t\t\tstatus=\"critical\"\n\t\t\t\t\ticon=\"info-circle-outline\"\n\t\t\t\t\theader=\"\"\n\t\t\t\t\tcontent={errorMessage}\n\t\t\t\t\ttextLinkProps={{}}\n\t\t\t\t\taction={{ type: 'dismiss' }}\n\t\t\t\t></now-alert>\n\t\t\t) : null}\n\t\t\t<now-heading\n\t\t\t\thas-no-margin\n\t\t\t\tlabel={SHIFT_EDITING_MODAL_CONSTANTS.SHIFT_LABEL}\n\t\t\t\tlevel=\"1\"\n\t\t\t\tvariant=\"header-secondary\"\n\t\t\t></now-heading>\n\t\t\t{_renderTimeRangeRow(editEvent, false, dispatch)}\n\t\t\t{!isEmpty(childEvents) ? (\n\t\t\t\t<now-heading\n\t\t\t\t\thas-no-margin\n\t\t\t\t\tlabel={SHIFT_EDITING_MODAL_CONSTANTS.BREAKS_LABEL}\n\t\t\t\t\tlevel=\"1\"\n\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t></now-heading>\n\t\t\t) : null}\n\t\t\t{childEvents.map(event => {\n\t\t\t\tconst { start, end } = event;\n\t\t\t\tlet startMoment = moment(start);\n\t\t\t\tlet endMoment = moment(end);\n\t\t\t\treturn _renderTimeRangeRow(\n\t\t\t\t\t{ ...event, startMoment, endMoment },\n\t\t\t\t\ttrue,\n\t\t\t\t\tdispatch\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst _getModalTitle = ({ editEvent }) => {\n\tconst { startMoment, endMoment, user } = editEvent;\n\tlet eventTitle = `${get(user, 'name', '')} - ${startMoment.format(\n\t\tINTERNAL_FORMAT.ARIA_DATE_FORMAT\n\t)}`;\n\n\t// If event span spreads across multiple days, title will show\n\t// start date and end date\n\tif (endMoment.isAfter(startMoment, 'days')) {\n\t\treturn `${eventTitle} - ${endMoment.format(\n\t\t\tINTERNAL_FORMAT.ARIA_DATE_FORMAT\n\t\t)}`;\n\t} else {\n\t\treturn eventTitle;\n\t}\n};\n\nconst _getModalId = ({ editEvent }) => {\n\treturn get(editEvent, 'componentId');\n};\n\n/**\n * Get actions rendered from the modal, mostly Save and Cancel buttons\n * Save button must be disabled if no changes has been made in the modal.\n * @param {*} state\n */\nconst _getModalDefaultActions = state => {\n\tlet disallowSaveAction = false;\n\tif (\n\t\tisEmpty(get(state, 'editEvent.stagedValue')) ||\n\t\t!isEmpty(get(state, 'errorMessage', ''))\n\t) {\n\t\tdisallowSaveAction = true;\n\t} else {\n\t\tfor (let val of Object.values(\n\t\t\tget(state, 'editEvent.stagedValue', {})\n\t\t)) {\n\t\t\tif (\n\t\t\t\tget(val, 'invalid-start', false) ||\n\t\t\t\tget(val, 'invalid-end', false)\n\t\t\t) {\n\t\t\t\tdisallowSaveAction = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [\n\t\t{\n\t\t\tlabel: SHIFT_EDITING_MODAL_CONSTANTS.MODAL_ACTION_LABEL_SAVE,\n\t\t\tvariant: 'primary',\n\t\t\tdisabled: disallowSaveAction\n\t\t},\n\t\t{\n\t\t\tlabel: SHIFT_EDITING_MODAL_CONSTANTS.MODAL_ACTION_LABEL_CANCEL,\n\t\t\tvariant: 'secondary'\n\t\t}\n\t];\n};\n\n/**\n * Main entry point to render the edit shift modal.\n * @param {*} state\n * @param {*} dispatch\n */\nexport const renderEditEventModalComponent = (state, dispatch) => {\n\tlet modalTitle = _getModalTitle(state);\n\tlet modalId = _getModalId(state);\n\treturn (\n\t\t<now-modal\n\t\t\topened={get(state, 'showShiftEditModal', false)}\n\t\t\tsize=\"lg\"\n\t\t\tcomponent-id={modalId}\n\t\t\theader-label={modalTitle}\n\t\t\tappendToPayload={{ modal: 'edit-event-modal' }}\n\t\t\tfooter-actions={_getModalDefaultActions(state)}\n\t\t>\n\t\t\t{renderEditEventModalContent(state, dispatch)}\n\t\t</now-modal>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_record_time;","import { t } from 'sn-translate';\nimport { EVENT_DELETE_ACTIONS } from './constants.js';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\n// Delete event modal\nexport const renderDeleteEventModal = state => {\n\tconst errorMessage = get(state, 'errorMessage');\n\tconst footerActions = [\n\t\t{\n\t\t\tlabel: t('Delete'),\n\t\t\tvariant: 'primary-negative',\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype:\n\t\t\t\t\t\tEVENT_DELETE_ACTIONS.SUBMIT_DELETE_CONFIRMATION_DIALOG,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\t// modal: MODALS.deleteWorkShift,\n\t\t\t\t\t\tvalue: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tactionsToDispatch: [\n\t\t\t\t{\n\t\t\t\t\ttype:\n\t\t\t\t\t\tEVENT_DELETE_ACTIONS.CANCEL_DELETE_CONFIRMATION_DIALOG,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\t//modal: MODALS.deleteWorkShift,\n\t\t\t\t\t\tvalue: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\treturn (\n\t\t<now-modal\n\t\t\theaderLabel={t('Delete event')}\n\t\t\tcontent={t('Are you sure that you want to delete this event?')}\n\t\t\tsize=\"sm\"\n\t\t\topened={state.showDeleteEventModal === true}\n\t\t\tappendToPayload={{ modal: 'delete-event-modal' }}\n\t\t\tfooterActions={footerActions}\n\t\t>\n\t\t\t{!isEmpty(errorMessage) ? (\n\t\t\t\t<now-alert\n\t\t\t\t\tstatus=\"critical\"\n\t\t\t\t\ticon=\"info-circle-outline\"\n\t\t\t\t\theader=\"\"\n\t\t\t\t\tcontent={errorMessage}\n\t\t\t\t\ttextLinkProps={{}}\n\t\t\t\t\taction={{ type: 'dismiss' }}\n\t\t\t\t></now-alert>\n\t\t\t) : null}\n\t\t</now-modal>\n\t);\n};\n\n//EOF Delete event modal\n","module.exports = __TECTONIC__lodash_4_17_15[\"debounce\"];","import './sn-manager-agent-shift-swapper';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view.js';\nimport defaultProperties from './properties.js';\nimport ActionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-agent-shift-swapper', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\t...defaultProperties,\n\t...ActionHandlers,\n\tstyles\n});\n","import { t } from 'sn-translate';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-record-field-lookup-connected';\nimport '@servicenow/now-record-date-picker';\nimport '@servicenow/now-button';\nimport '../../common/dataproviders/sn-manager-user-info';\nimport {\n\tgetDropdownShifts,\n\tonSelectionChange,\n\tonSearchTermChange\n} from './utils';\nimport { get } from 'lodash';\nimport { SWAP_CONSTS } from './constants';\nimport { isEmpty } from 'lodash';\nimport '@servicenow/now-loader';\n\nconst view = (state, { dispatch, updateState }) => {\n\tlet currentUser = get(state, 'properties.currentUser', {});\n\treturn (\n\t\t<div className=\"agent-shift-swapper-container\">\n\t\t\t<sn-manager-user-info />\n\t\t\t<now-button\n\t\t\t\tlabel={t('Request shift swap')}\n\t\t\t\ton-click={() => dispatch(SWAP_CONSTS.REQ_SWAP_CLICKED)} //Set showModal = true\n\t\t\t></now-button>\n\t\t\t{_renderModal(state, dispatch, updateState, currentUser)}\n\t\t</div>\n\t);\n};\n\nconst _renderModal = (state, dispatch, updateState, currentUser) => {\n\tif (!state.showModal) {\n\t\treturn null;\n\t}\n\tconst {\n\t\tsearchTerm, //Input field value on the typeahead\n\t\tteamMates, //Filtered possible Teammates from typeahead\n\t\tdefaultSwapTeamMates, //All possible Teammates\n\t\trequestorSelectedShift,\n\t\trequesteeSelectedShift\n\t} = state;\n\n\tconst requesteeValue = searchTerm; //Set value for Typeahead textbox\n\n\t//Define selected value for Shift Dropdown from state\n\tlet requestorSelectedShiftId =\n\t\trequestorSelectedShift && requestorSelectedShift.agentScheduleRecord\n\t\t\t? [requestorSelectedShift.agentScheduleRecord.sysId]\n\t\t\t: [];\n\t//Define selected value for Shift Dropdown from state\n\tlet requesteeSelectedShiftId =\n\t\trequesteeSelectedShift && requesteeSelectedShift.agentScheduleRecord\n\t\t\t? [requesteeSelectedShift.agentScheduleRecord.sysId]\n\t\t\t: [];\n\treturn (\n\t\t<now-modal\n\t\t\topened={state.showModal}\n\t\t\theader-label={t('Request a shift swap')}\n\t\t\tsize=\"lg\"\n\t\t\tfooterActions={_getFooterActions(state)}\n\t\t>\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"requestor-section\">\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={t('My Shift')}\n\t\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\t\thas-no-margin\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"requestor-details\">\n\t\t\t\t\t\t<div className=\"requestor-user-box\">\n\t\t\t\t\t\t\t<now-record-typeahead\n\t\t\t\t\t\t\t\tlabel={t('Requestor')}\n\t\t\t\t\t\t\t\tvalue={currentUser.fullName}\n\t\t\t\t\t\t\t\tdisplayValue={currentUser.sys_id}\n\t\t\t\t\t\t\t\treadonly={true} //You can only create a swap request for yourself\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'swap-requestor-typeahead'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"requestor-date\">\n\t\t\t\t\t\t\t<now-record-date-picker\n\t\t\t\t\t\t\t\tlabel={t('Date')}\n\t\t\t\t\t\t\t\tvalue={state.requestorDate}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'swap-requestor-date'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tformat={currentUser.dateFormat.toUpperCase()} //DEF0093318 - Moment.js format\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"requestor-shift\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\taria-label={t('Requestor Shift')}\n\t\t\t\t\t\t\t\tclassName=\"dropdown-label\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t('Shift')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\t\tplaceholder={t('Select')}\n\t\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\t\tselected-items={requestorSelectedShiftId} //Retain last selection unless invalidated\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tstate.requestorShifts &&\n\t\t\t\t\t\t\t\t\tstate.requestorShifts.length > 0\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: true //If there are no shifts to display\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\titems={getDropdownShifts(state.requestorShifts)}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'swap-requestor-shift-dropdown'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"requestee-section\">\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={t('Requested Shift')}\n\t\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\t\thas-no-margin\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"requestee-details\">\n\t\t\t\t\t\t<div className=\"requestee-user-box\">\n\t\t\t\t\t\t\t<now-record-typeahead\n\t\t\t\t\t\t\t\tlabel={t('Agent')}\n\t\t\t\t\t\t\t\toptions={teamMates} //Filtered Teammates - Initially equal to defaultSwapTeamMates\n\t\t\t\t\t\t\t\tvalue={requesteeValue} //Display value of text field\n\t\t\t\t\t\t\t\trequired={\n\t\t\t\t\t\t\t\t\t!isEmpty(state.selectedRequesteeObj) &&\n\t\t\t\t\t\t\t\t\tstate.selectedRequesteeObj.value !== ''\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t\t\t} //Mark as required if valid user not selected\n\t\t\t\t\t\t\t\tonValueChange={(\n\t\t\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tselectionValue,\n\t\t\t\t\t\t\t\t\tselectionDisplayValue\n\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\tonSelectionChange(\n\t\t\t\t\t\t\t\t\t\t//Invoked when a Dropdown item is clicked or pressed Enter on\n\t\t\t\t\t\t\t\t\t\tselectionValue,\n\t\t\t\t\t\t\t\t\t\tselectionDisplayValue,\n\t\t\t\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\t\t\t\tupdateState,\n\t\t\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t// when requestee's Agent field is cleared, reset requestee's Shift field\n\t\t\t\t\t\t\t\t\tif (!event.target || !event.target.value) {\n\t\t\t\t\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\t\t\t\t\trequesteeShifts: null,\n\t\t\t\t\t\t\t\t\t\t\trequesteeSelectedShift: null\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonSearchTermChange(\n\t\t\t\t\t\t\t\t\t\t//Invoked at keystrokes on the input field\n\t\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t\tdefaultSwapTeamMates,\n\t\t\t\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\t\t\t\tupdateState,\n\t\t\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"requestee-date\">\n\t\t\t\t\t\t\t<now-record-date-picker\n\t\t\t\t\t\t\t\tlabel={t('Date')}\n\t\t\t\t\t\t\t\tvalue={state.requesteeDate} //Retain selected date on re-render\n\t\t\t\t\t\t\t\treadonly={\n\t\t\t\t\t\t\t\t\t!isEmpty(state.selectedRequesteeObj) &&\n\t\t\t\t\t\t\t\t\tstate.selectedRequesteeObj.value !== ''\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t\t\t} //Disable if Teammate not selected\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'swap-requestee-date'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tformat={currentUser.dateFormat.toUpperCase()} //DEF0093318 - Moment.js Format\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"requestee-shift\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\taria-label={t('Requestee Shift')}\n\t\t\t\t\t\t\t\tclassName=\"dropdown-label\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t('Shift')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\t\tplaceholder={t('Select')}\n\t\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\t\tselected-items={requesteeSelectedShiftId} //Retain selection\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tstate.requesteeShifts &&\n\t\t\t\t\t\t\t\t\tstate.requesteeShifts.length > 0\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: true //If no shifts to display\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\titems={getDropdownShifts(state.requesteeShifts)}\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'swap-requestee-shift-dropdown'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</now-modal>\n\t);\n};\n\nconst _getFooterActions = state => {\n\t//Only allow submitting a swap request if all fields are valid\n\tlet isInValidSubmit = true;\n\tif (\n\t\t!isEmpty(state.selectedRequesteeObj) &&\n\t\t!isEmpty(state.requesteeSelectedShift) &&\n\t\t!isEmpty(state.requestorSelectedShift)\n\t) {\n\t\tisInValidSubmit = false;\n\t} else {\n\t\tisInValidSubmit = true;\n\t}\n\treturn [\n\t\t{\n\t\t\tlabel: t('Submit'),\n\t\t\tvariant: 'primary',\n\t\t\tdisabled: isInValidSubmit,\n\t\t\tclickActionType: SWAP_CONSTS.SUBMIT_SWAP_REQUEST\n\t\t},\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tdisabled: false,\n\t\t\tclickActionType: SWAP_CONSTS.CANCEL_SWAP_CLICKED\n\t\t}\n\t];\n};\n\nexport default view;\n","const UserInfoProps = {\n\toptions: { default: {} },\n\tcurrentUser: {\n\t\tselectable: true\n\t}\n};\n\nexport default {\n\tproperties: UserInfoProps\n};\n","import get from 'lodash/get';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tUSER_INFO_ACTIONS,\n\tUSER_INFO_RESULT,\n\tPROPERTIES_SET\n} from '../../constants';\nimport { CURRENT_USER_QUERY } from '../../queries';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst userFetchHandler = createGraphQLEffect(CURRENT_USER_QUERY, {\n\tsuccessActionType: USER_INFO_ACTIONS.USER_INFO_FETCH_SUCCEEDED,\n\terrorActionType: USER_INFO_ACTIONS.USER_INFO_FETCH_FAILED\n});\n\n/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\nconst logErrorEffect = coeffects => {\n\tconst {\n\t\taction: { type, payload }\n\t} = coeffects;\n\tconsole.error(type, payload);\n};\n\nconst userInfoFetchSuccessHandler = ({ action, dispatch }) => {\n\tconst user = get(action, USER_INFO_RESULT, {});\n\tdispatch(USER_INFO_ACTIONS.USER_INFO_READY, { currentUser: user });\n\tdispatch(PROPERTIES_SET, { currentUser: user });\n};\n\nconst handlers = {\n\t[USER_INFO_ACTIONS.USER_INFO_FETCH_SUCCEEDED]: userInfoFetchSuccessHandler,\n\t[USER_INFO_ACTIONS.USER_INFO_FETCH_FAILED]: logErrorEffect,\n\t[COMPONENT_BOOTSTRAPPED]: userFetchHandler\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","import moment from 'moment';\n\nconst shiftSwapperProperties = {\n\tcurrentUser: {\n\t\tdefault: {\n\t\t\tfullName: '',\n\t\t\tdateFormat: 'YYYY-MM-DD'\n\t\t}\n\t},\n\trequestorDetails: {\n\t\tdefault: {}\n\t},\n\tcontextDate: {\n\t\tdefault: moment().format('YYYY-MM-DD HH:mm:ss')\n\t}\n};\n\nexport default { properties: shiftSwapperProperties };\n","import { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nconst { COMPONENT_BOOTSTRAPPED, COMPONENT_PROPERTY_CHANGED } = actionTypes;\nimport { t } from 'sn-translate';\nimport { get, isEmpty, isEqual } from 'lodash';\nimport moment from 'moment';\n\nimport { SWAP_CONSTS } from './constants';\nimport { SCHEDULE_AGENT_ACTIONS } from '../../common/constants';\nimport {\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tUSER_IS_SHIFT_AGENT_FILTER_ID,\n\tONE_OF_MY_GROUPS_FILTER_ID\n} from '../../common/constants';\nimport {\n\tgetWorkShiftsFromAPIData,\n\tgetTeamMatesForTypeAhead,\n\tupdateRequestorSelectedShift,\n\tupdateRequesteeSelectedShift,\n\tgetSwapPayload\n} from './utils';\nimport { swapTeammatesQuery } from './swapqueries';\n\nconst bootstrap = () => {}; //Do Nothing\n\nconst checkForSwapRequest = ({ action, state, dispatch, updateState }) => {\n\tif (\n\t\tget(action, 'payload.name', '') === 'requestorDetails' &&\n\t\t!isEmpty(get(action, 'payload.value', {})) &&\n\t\t!isEqual(\n\t\t\tget(action, 'payload.previousValue', {}),\n\t\t\tget(action, 'payload.value', {})\n\t\t)\n\t) {\n\t\tlet event = get(action, 'payload.value', {});\n\n\t\tlet timeFormatUserPreference = get(\n\t\t\tstate,\n\t\t\t'properties.currentUser.dateTimeFormat',\n\t\t\t'yyyy-MM-dd HH:mm:ss'\n\t\t);\n\t\tlet meridianMarker = timeFormatUserPreference.indexOf('a'); //Server Returns 'yyyy-MM-dd HH:mm:ss' Or 'yyyy-MM-dd HH:mm:ss a'\n\t\tlet timeFormat = meridianMarker === -1 ? 'HH:mm' : 'hh:mm A'; //Moment.js time format\n\n\t\tlet requestorSelectedShiftObj = {\n\t\t\teventType: event.title,\n\t\t\tcmnSpanId: event.record_id,\n\t\t\tisExclusion: event.isExclusion,\n\t\t\tagentScheduleRecord: event.schedule,\n\t\t\tstartTime: event.start,\n\t\t\tstartTimeDisplayValue: event.startTimeDisplayValue,\n\t\t\tstartTimeSwapLabel: moment(\n\t\t\t\tevent.start,\n\t\t\t\t'YYYY-MM-DD h:mm:ss' //Format of the Shift Planing Read API response\n\t\t\t).format(timeFormat),\n\t\t\tendTime: event.end,\n\t\t\tendTimeDisplayValue: event.endTimeDisplayValue,\n\t\t\tendTimeSwapLabel: moment(\n\t\t\t\tevent.end,\n\t\t\t\t'YYYY-MM-DD h:mm:ss' //Format of the Shift Planing Read API response\n\t\t\t).format(timeFormat)\n\t\t};\n\n\t\tlet requestorDetailsObj = {\n\t\t\trequestorDate: moment(\n\t\t\t\tevent.start,\n\t\t\t\t'YYYY-MM-DD h:mm:ss' //Format of the Shift Planing Read API response\n\t\t\t).format(\n\t\t\t\tget(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.currentUser.dateFormat',\n\t\t\t\t\t'YYYY-MM-DD'\n\t\t\t\t).toUpperCase()\n\t\t\t),\n\t\t\trequestorShifts: [requestorSelectedShiftObj],\n\t\t\trequestorSelectedShift: requestorSelectedShiftObj\n\t\t};\n\n\t\trequestorDetailsObj.requestorSelectedShift.shiftLabel = t(\n\t\t\t'{0} to {1}',\n\t\t\t[\n\t\t\t\trequestorDetailsObj.requestorSelectedShift.startTimeSwapLabel,\n\t\t\t\trequestorDetailsObj.requestorSelectedShift.endTimeSwapLabel\n\t\t\t]\n\t\t);\n\n\t\tupdateState({\n\t\t\tpath: '',\n\t\t\tvalue: requestorDetailsObj,\n\t\t\toperation: 'merge'\n\t\t});\n\n\t\tdispatch(SWAP_CONSTS.REQ_SWAP_REQUESTED, {\n\t\t\trequestorDate: requestorDetailsObj.requestorDate\n\t\t});\n\t}\n};\n\n/* Handler for \"Request Swap Button\" click\n * Gets Fired on REQ_SWAP_CLICKED\n */\nconst handleButtonClick = ({ state, dispatch }) => {\n\tconst { currentUser, contextDate } = state.properties;\n\tconst requestorDate = contextDate.format(\n\t\tget(currentUser, 'dateFormat', 'YYYY-MM-DD').toUpperCase()\n\t);\n\n\tdispatch(SWAP_CONSTS.REQ_SWAP_REQUESTED, { requestorDate });\n};\n\nconst handleShiftSwap = ({ state, action, dispatch, updateState }) => {\n\tconst { currentUser } = state.properties;\n\tconst requestorDate = get(action, 'payload.requestorDate');\n\n\t//Fetch Teammates\n\tdispatch(SWAP_CONSTS.FETCH_SWAP_TEAMMATES, {\n\t\tcondition: `groupDYNAMIC${ONE_OF_MY_GROUPS_FILTER_ID}^user!=${get(\n\t\t\tstate,\n\t\t\t'properties.currentUser.sys_id',\n\t\t\t''\n\t\t)}^userDYNAMIC${USER_IS_SHIFT_AGENT_FILTER_ID}`\n\t});\n\n\tdispatch(SWAP_CONSTS.REQUESTOR_SHIFT_FETCH, {\n\t\tdata: {\n\t\t\tindividualAgents: currentUser.sys_id,\n\t\t\tstartDate: requestorDate,\n\t\t\tendDate: requestorDate,\n\t\t\tpublished: true\n\t\t}\n\t});\n\n\tupdateState({\n\t\tsearchTerm: null, // reset requestee's Agent field\n\t\trequesteeShifts: null, // reset requestee's Shift field\n\t\trequesteeSelectedShift: null, // reset requestee's Shift field\n\t\trequestorDate: requestorDate,\n\t\trequesteeDate: requestorDate,\n\t\tshowModal: true //Open Modal\n\t});\n};\n\n/* GraphQL effect to handle FETCH_SWAP_TEAMMATES\n */\nexport const handleFetchTeammates = createGraphQLEffect(swapTeammatesQuery, {\n\tvariableList: ['condition'],\n\tsuccessActionType: SWAP_CONSTS.FETCH_SWAP_TEAMMATES_SUCCESS,\n\terrorActionType: SWAP_CONSTS.COULD_NOT_RETRIEVE_DATA\n});\n\n/* Handle Teammates data\n */\nexport const handleFetchTeammatesSuccess = ({ action, updateState }) => {\n\tlet responseData = get(action, 'payload.data.swapTeammatesQuery', []);\n\tlet teamMates = [];\n\n\tresponseData.forEach(userObj => {\n\t\tlet teamMate = {};\n\t\tteamMate.sys_id = get(userObj, 'groupBy[0].value', '');\n\t\tteamMate.name = get(userObj, 'groupBy[0].displayValue', '');\n\t\tteamMate.email = get(\n\t\t\tuserObj,\n\t\t\t'groupBy[0]._query.userTableQuery.sys_user._results[0].email.value',\n\t\t\t''\n\t\t);\n\t\tteamMates.push(teamMate);\n\t});\n\n\tupdateState({\n\t\tteamMatesData: teamMates,\n\t\tteamMates: getTeamMatesForTypeAhead(teamMates), //Initially same as default, later stores filtered values\n\t\tdefaultSwapTeamMates: getTeamMatesForTypeAhead(teamMates) //All possible teammates\n\t});\n};\n\n/* Handler for Modal Close event fired when X is clicked\n */\nconst handleModalOpenSet = ({ updateState, action, updateProperties }) => {\n\tlet val = get(action, 'payload.value', false);\n\n\tif (!val) clearRequestorDetails(updateProperties);\n\n\tupdateState({\n\t\tshowModal: val\n\t});\n};\n\n/* Handler for \"Cancel\" button click\n */\nconst handleCancelSwap = ({ updateState, updateProperties }) => {\n\tclearRequestorDetails(updateProperties);\n\n\tupdateState({\n\t\tshowModal: false\n\t});\n};\n\n/* Handler to store the information fetched by User Data provider component. currentUser\n * is used as the Requestor for swap request\n */\nconst handleUserInfo = ({ updateProperties, action }) => {\n\tupdateProperties({\n\t\tcurrentUser: get(action, 'payload.currentUser', {})\n\t});\n};\n\n/* Fired when the DatePicker component changes value\n * As the component doesn't provide custom action firing, handle action for correct date picker using component id\n * provided in view.js and available in 'meta' of seismic actions\n */\nconst handleDateValueChanged = ({ state, dispatch, action, updateState }) => {\n\t//Find Which Date picker\n\tlet pickerComponentId = get(action, 'payload.componentId', '');\n\tlet currentUser = get(state, 'properties.currentUser', '');\n\tlet newDate = get(action, 'payload.value', ''); //Date in Users Display Preference\n\tlet newDateFormatted = moment(\n\t\t//Date in Standard API format(moment)\n\t\tnewDate,\n\t\tcurrentUser.dateFormat.toUpperCase()\n\t).format('YYYY-MM-DD');\n\n\tif (pickerComponentId == 'swap-requestor-date') {\n\t\tif (newDate != get(state, 'requestorDate', '')) {\n\t\t\tdispatch(SWAP_CONSTS.REQUESTOR_SHIFT_FETCH, {\n\t\t\t\tdata: {\n\t\t\t\t\tindividualAgents: currentUser.sys_id,\n\t\t\t\t\tstartDate: newDateFormatted,\n\t\t\t\t\tendDate: newDateFormatted,\n\t\t\t\t\tpublished: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tupdateState({\n\t\t\t\trequestorDate: newDate,\n\t\t\t\trequestorShifts: [],\n\t\t\t\trequestorSelectedShift: {}\n\t\t\t});\n\n\t\t\t// when requestor's Date changes, also change requestee's Date\n\t\t\tdispatch(SWAP_CONSTS.DATE_VALUE_CHANGED, {\n\t\t\t\tcomponentId: 'swap-requestee-date',\n\t\t\t\tvalue: newDate\n\t\t\t});\n\t\t}\n\t} else if (pickerComponentId == 'swap-requestee-date') {\n\t\tif (newDate != get(state, 'requesteeDate', '')) {\n\t\t\tconst individualAgents = get(\n\t\t\t\tstate,\n\t\t\t\t'selectedRequesteeObj.value',\n\t\t\t\t''\n\t\t\t);\n\t\t\tif (individualAgents) {\n\t\t\t\tdispatch(SWAP_CONSTS.REQUESTEE_SHIFT_FETCH, {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tindividualAgents,\n\t\t\t\t\t\tstartDate: newDateFormatted,\n\t\t\t\t\t\tendDate: newDateFormatted,\n\t\t\t\t\t\tpublished: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tupdateState({\n\t\t\t\trequesteeDate: newDate,\n\t\t\t\trequesteeShifts: [],\n\t\t\t\trequesteeSelectedShift: {}\n\t\t\t});\n\t\t}\n\t}\n};\n\n/* HttpEffect to handle shift fetching for the requestor\n * Success fires an action for requestor Shift handler and updates the state\n * causing now-dropdown to have new set of shifts\n */\nconst retrieveRequestorShifts = createHttpEffect(\n\tSCHEDULE_PROPERTY_DEFAULTS.ENDPOINT,\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\tsuccessActionType: SWAP_CONSTS.RETRIEVED_REQUESTOR_SHIFT_SUCCESS,\n\t\terrorActionType: SWAP_CONSTS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\n/* Handle Shift Planning READ api response and create requestorShifts-Object array in state\n * which will be used to render now-dropdown\n */\nconst handleRetrieveRequestorShiftSuccess = ({\n\taction,\n\tupdateState,\n\tstate\n}) => {\n\tlet data = get(action, 'payload.result.shiftData.user.data', []);\n\tlet shiftsData = get(data, '[0]', []);\n\tlet requestorShifts = getWorkShiftsFromAPIData(\n\t\tshiftsData,\n\t\tstate,\n\t\tget(state, 'requestorDate', '')\n\t);\n\tupdateState({ requestorShifts, requestorSelectedShift: null });\n\n\t// when requestor has only one shift, auto select it\n\tif (!isEmpty(requestorShifts) && requestorShifts.length === 1) {\n\t\tupdateState({\n\t\t\trequestorSelectedShift: requestorShifts[0]\n\t\t});\n\t}\n};\n\n/* Retrieve shifts for the selected user - Requestee\n */\nconst retrieveRequesteeShifts = createHttpEffect(\n\tSCHEDULE_PROPERTY_DEFAULTS.ENDPOINT,\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\tsuccessActionType: SWAP_CONSTS.RETRIEVED_REQUESTEE_SHIFT_SUCCESS,\n\t\terrorActionType: SWAP_CONSTS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\n/* Handle Shift READ API data\n */\nconst handleRetrieveRequesteeShiftSuccess = ({\n\taction,\n\tupdateState,\n\tstate\n}) => {\n\tlet data = get(action, 'payload.result.shiftData.user.data', []);\n\tlet shiftsData = get(data, '[0]', []);\n\n\tlet requesteeShifts = getWorkShiftsFromAPIData(\n\t\tshiftsData,\n\t\tstate,\n\t\tget(state, 'requesteeDate', '')\n\t);\n\tupdateState({ requesteeShifts, requesteeSelectedShift: null });\n\n\t// when requestee has only one shift, auto select it\n\tif (!isEmpty(requesteeShifts) && requesteeShifts.length === 1) {\n\t\tupdateState({\n\t\t\trequesteeSelectedShift: requesteeShifts[0]\n\t\t});\n\t}\n};\n\n/* Handles the Action fired from Now-Dropdown when a shift is selected\n * updates the state and re-renders the view.\n */\nconst handleShiftObjSelected = ({ action, updateState, state, dispatch }) => {\n\tlet dropDownId = get(action, 'payload.componentId', '');\n\tif (dropDownId == 'swap-requestor-shift-dropdown') {\n\t\tupdateRequestorSelectedShift(action, updateState, state, dispatch);\n\t} else if (dropDownId == 'swap-requestee-shift-dropdown') {\n\t\tupdateRequesteeSelectedShift(action, updateState, state, dispatch);\n\t}\n};\n\n/* Fired When \"Submit\" is clicked\n * creates a POST payload for Now Table API\n * and creates a record in Swap request table\n */\nconst handleSwapSubmit = ({ state, dispatch }) => {\n\tlet swapPayload = getSwapPayload(state);\n\tdispatch(SWAP_CONSTS.POST_SWAP_REQUEST, {\n\t\tdata: swapPayload\n\t});\n};\n\nconst postSwapRequest = createHttpEffect(\n\t'/api/now/table/sn_shift_planning_shift_swap_request?sysparm_input_display_value=true',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: SWAP_CONSTS.POST_SWAP_REQUEST_SUCCESS,\n\t\terrorActionType: SWAP_CONSTS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\nconst handlePostSwapRequestSuccess = ({\n\tupdateState,\n\tupdateProperties,\n\tdispatch,\n\taction\n}) => {\n\tlet swapReqNumber = get(action, 'payload.result.number', '');\n\tdispatch(SCHEDULE_AGENT_ACTIONS.SHIFT_SWAP_SUBMIT_SUCCESS, {\n\t\tswapReqNumber\n\t});\n\tclearRequestorDetails(updateProperties);\n\tupdateState({\n\t\tshowModal: false\n\t});\n};\n\nconst handleCouldNotRetrieveData = ({\n\taction,\n\tupdateState,\n\tupdateProperties\n}) => {\n\t// eslint-disable-next-line no-console\n\tconsole.error(action.type, action.payload);\n\tclearRequestorDetails(updateProperties);\n\tupdateState({\n\t\tshowModal: false\n\t});\n};\n\nconst clearRequestorDetails = updateProperties => {\n\tupdateProperties({\n\t\trequestorDetails: {}\n\t});\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[COMPONENT_PROPERTY_CHANGED]: checkForSwapRequest,\n\t[SWAP_CONSTS.REQ_SWAP_CLICKED]: handleButtonClick,\n\t[SWAP_CONSTS.REQ_SWAP_REQUESTED]: handleShiftSwap,\n\t[SWAP_CONSTS.NOW_MODAL_OPENED_SET]: handleModalOpenSet,\n\t[SWAP_CONSTS.USER_INFO_READY]: handleUserInfo,\n\t[SWAP_CONSTS.CANCEL_SWAP_CLICKED]: handleCancelSwap,\n\t[SWAP_CONSTS.DATE_VALUE_CHANGED]: handleDateValueChanged,\n\t[SWAP_CONSTS.REQUESTOR_SHIFT_FETCH]: retrieveRequestorShifts,\n\t[SWAP_CONSTS.RETRIEVED_REQUESTOR_SHIFT_SUCCESS]: handleRetrieveRequestorShiftSuccess,\n\t[SWAP_CONSTS.FETCH_SWAP_TEAMMATES]: handleFetchTeammates,\n\t[SWAP_CONSTS.FETCH_SWAP_TEAMMATES_SUCCESS]: handleFetchTeammatesSuccess,\n\t[SWAP_CONSTS.REQUESTEE_SHIFT_FETCH]: retrieveRequesteeShifts,\n\t[SWAP_CONSTS.RETRIEVED_REQUESTEE_SHIFT_SUCCESS]: handleRetrieveRequesteeShiftSuccess,\n\t[SWAP_CONSTS.DROPDOWN_SHIFT_OBJ_SELECTED]: handleShiftObjSelected,\n\t[SWAP_CONSTS.SUBMIT_SWAP_REQUEST]: handleSwapSubmit,\n\t[SWAP_CONSTS.POST_SWAP_REQUEST]: postSwapRequest,\n\t[SWAP_CONSTS.POST_SWAP_REQUEST_SUCCESS]: handlePostSwapRequestSuccess,\n\t[SWAP_CONSTS.COULD_NOT_RETRIEVE_DATA]: handleCouldNotRetrieveData\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","export const swapTeammatesQuery = `query ($condition: String!){\n\tswapTeammatesQuery: GlideAggregate_Query(tableName: \"sys_user_grmember\",  queryConditions: $condition, groupBy: \"user\") {\n\t  count\n\t  groupBy {\n\t\tfield\n\t\tvalue\n\t\tdisplayValue\n\t\t_query {\n\t\t  userTableQuery: GlideRecord_Query {\n\t\t\tsys_user(queryConditions: \"sys_id=$$parent.value$$\") {\n\t\t\t  _results {\n\t\t\t\tname {\n\t\t\t\t  value\n\t\t\t\t}\n\t\t\t\tsys_id {\n\t\t\t\t  value\n\t\t\t\t}\n\t\t\t\temail {\n\t\t\t\t  value\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n\t}\n  }\n  `;\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.requestor-section{margin:0}.requestee-section{margin:1.5rem 0 0}.requestee-details,.requestor-details{display:flex;flex-wrap:wrap;justify-content:space-between}.requestee-details div,.requestor-details div{width:calc(33% - .25rem);max-width:100%;margin:0}.requestee-details div now-dropdown,.requestor-details div now-dropdown{border-bottom:1px solid rgb(var(--now-color--neutral-5,172,180,181));max-width:100%}now-heading{margin:.75rem 0}.dropdown-label{font-size:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116));padding:0 0 .125rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view.js';\nimport defaultProperties from './properties.js';\nimport actionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\nimport { INTERNAL_FORMAT } from '../../common/calendar/constants.js';\n\nexport default createCustomElement('sn-manager-event-request', {\n\tinitialState: {\n\t\tsuggestedAttendees: [],\n\t\tadditionalSelectors: [],\n\t\tdateFormatPreference: INTERNAL_FORMAT.DATE,\n\t\ttimeFormatPreference: INTERNAL_FORMAT.TIME_DISPLAY_FORMAT,\n\t\tisLoading: false,\n\t\tallDayEvent: false\n\t},\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\t...defaultProperties,\n\tactionHandlers,\n\tstyles\n});\n","import get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-input';\nimport '@servicenow/now-textarea';\nimport '@servicenow/now-record-date-picker';\nimport '@servicenow/now-button';\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-typeahead';\nimport '@servicenow/now-record-field-lookup-connected';\nimport '@servicenow/now-loader';\nimport { t } from 'sn-translate';\nimport '@servicenow/now-alert';\nimport { Fragment, createRef } from '@seismic/snabbdom-renderer'; // eslint-disable-line\n\nimport '../../common/dataproviders/sn-manager-user-info';\nimport '@devsnc/sn-declarative-actions'; //Required for input field internal usage\n\nimport { EVENT_REQUEST_SAVE, EVENT_REQUEST_CANCEL } from './constants';\nimport {\n\tdateValuetoDatePickerFormat,\n\ttimeValuetoTimePickerFormat\n} from './utils';\n\nconst view = state => {\n\treturn (\n\t\t<div className=\"schedule-event-request\">\n\t\t\t<sn-manager-user-info />\n\t\t\t{_renderRequestModal(state)}\n\t\t</div>\n\t);\n};\n\nconst _renderAdditionalSelectors = state => {\n\tlet additionalSelectors = get(\n\t\tstate,\n\t\t'properties.modalSchema.additionalSelectors',\n\t\t[]\n\t);\n\tlet additionalSelectorsValue = get(\n\t\tstate,\n\t\t'properties.formData.additionalSelectors',\n\t\t[]\n\t);\n\n\tconst addComponents = additionalSelectors.map((selector, index) => {\n\t\treturn (\n\t\t\t<now-record-field-lookup-connected\n\t\t\t\tlabel={selector.fieldLabel}\n\t\t\t\ttableName={selector.table}\n\t\t\t\tfieldName={selector.field}\n\t\t\t\tvalue={\n\t\t\t\t\tadditionalSelectorsValue[index]\n\t\t\t\t\t\t? additionalSelectorsValue[index].value\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdisplayValue={\n\t\t\t\t\tadditionalSelectorsValue[index]\n\t\t\t\t\t\t? additionalSelectorsValue[index].displayValue\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\trequired={selector.mandatory}\n\t\t\t\t// component-id={`dynamic-record-selector-${index}`}\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\tcomponentId: `dynamic-record-selector-${index}`\n\t\t\t\t}}\n\t\t\t\tadditionalQueryString={selector.additionalQueryString}\n\t\t\t/>\n\t\t);\n\t});\n\n\treturn <div className=\"additional-fields\">{addComponents}</div>;\n};\n\nconst _renderRequestModal = state => {\n\tlet props = get(state, 'properties', {});\n\n\tlet {\n\t\tshowModal,\n\t\tmodalSchema,\n\t\tmodalTitle,\n\t\tuserSelectorLabel,\n\t\tformData\n\t} = props;\n\n\tif (!showModal) {\n\t\treturn null;\n\t}\n\n\tconst attendees = get(state, 'suggestedAttendees', []);\n\tconst isLoading = get(state, 'isLoading', false);\n\tuserSelectorLabel = get(modalSchema, 'attendees.label', userSelectorLabel);\n\n\tconst titleInputRef = createRef();\n\n\treturn (\n\t\t<now-modal\n\t\t\topened={showModal}\n\t\t\theader-label={modalTitle}\n\t\t\tsize=\"lg\"\n\t\t\tfooterActions={_getFooterActions(state)}\n\t\t>\n\t\t\t{isLoading ? (\n\t\t\t\t<now-loader label={t('Processing...')} size=\"lg\"></now-loader>\n\t\t\t) : (\n\t\t\t\t<div className=\"event-request-content\">\n\t\t\t\t\t{/*\tTODO: Check with UX if the error visual should be surface\n\t\t\t\t\tor bubbled up to the wrapper to be handled --> */}\n\t\t\t\t\t<div className=\"event-request-content-alert\">\n\t\t\t\t\t\t{!isEmpty(state.errorMessage) ? (\n\t\t\t\t\t\t\t<now-alert\n\t\t\t\t\t\t\t\tstatus=\"critical\"\n\t\t\t\t\t\t\t\ticon=\"exclamation-triangle-fill\"\n\t\t\t\t\t\t\t\tcontent={state.errorMessage}\n\t\t\t\t\t\t\t\taction={{ type: 'dismiss' }}\n\t\t\t\t\t\t\t\thook-insert={({ elm }) => {\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tif (elm) {\n\t\t\t\t\t\t\t\t\t\t\tconst closeButton = elm.shadowRoot.querySelector(\n\t\t\t\t\t\t\t\t\t\t\t\t'.now-alert-button[icon=\"close-outline\"]'\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (closeButton) {\n\t\t\t\t\t\t\t\t\t\t\t\tcloseButton.focus();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\thook-destroy={() => {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttitleInputRef &&\n\t\t\t\t\t\t\t\t\t\ttitleInputRef.current\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\ttitleInputRef.current.focus();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></now-alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"event-request-title-section\">\n\t\t\t\t\t\t{modalSchema.title && (\n\t\t\t\t\t\t\t<now-input\n\t\t\t\t\t\t\t\tref={titleInputRef}\n\t\t\t\t\t\t\t\tlabel={t('Title')}\n\t\t\t\t\t\t\t\tvalue={get(formData, 'titleValue', '')}\n\t\t\t\t\t\t\t\t// component-id=\"event-title\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'event-title'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired={modalSchema.title.mandatory}\n\t\t\t\t\t\t\t\treadonly={modalSchema.title.readOnly}\n\t\t\t\t\t\t\t\tclassName=\"event-title\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"event-request-users-section\">\n\t\t\t\t\t\t{modalSchema.attendees && (\n\t\t\t\t\t\t\t<now-typeahead-multi\n\t\t\t\t\t\t\t\tname={'event-attendees'}\n\t\t\t\t\t\t\t\titems={attendees}\n\t\t\t\t\t\t\t\tselected-items={get(\n\t\t\t\t\t\t\t\t\tformData,\n\t\t\t\t\t\t\t\t\t'selectedAttendees',\n\t\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tlabel={userSelectorLabel}\n\t\t\t\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\t\t\t\tplaceholder={t('Search for Users')}\n\t\t\t\t\t\t\t\tdisable-auto-select\n\t\t\t\t\t\t\t\tdisabled={modalSchema.attendees.readOnly}\n\t\t\t\t\t\t\t\trequired={modalSchema.attendees.mandatory}\n\t\t\t\t\t\t\t\tmanageInvalid={true}\n\t\t\t\t\t\t\t\tinvalid={get(state, 'invalid-attendees', false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{_getDateTimeSections(state)}\n\t\t\t\t\t{modalSchema.description && (\n\t\t\t\t\t\t<div className=\"event-request-description-section\">\n\t\t\t\t\t\t\t<now-textarea\n\t\t\t\t\t\t\t\tlabel={t('Description')}\n\t\t\t\t\t\t\t\treadonly={modalSchema.description.readOnly}\n\t\t\t\t\t\t\t\trequired={modalSchema.description.mandatory}\n\t\t\t\t\t\t\t\tvalue={get(formData, 'descriptionValue', '')}\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t// component-id=\"event-description\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'event-description'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"event-request-additional-records\">\n\t\t\t\t\t\t{modalSchema.additionalSelectors &&\n\t\t\t\t\t\t\t_renderAdditionalSelectors(state)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</now-modal>\n\t);\n};\n\nconst _getDateTimeSections = state => {\n\tlet props = get(state, 'properties', {});\n\tconst allDayEvent = get(state, 'allDayEvent', false); //Internal State flag to manage allDay toggle\n\n\tlet { modalSchema, formData } = props;\n\n\tif (modalSchema.startTime) {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"event-request-start-date-section\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`start-date ${\n\t\t\t\t\t\t\tallDayEvent ? 'expanded' : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<now-record-date-picker\n\t\t\t\t\t\t\tlabel={t('Start Date')}\n\t\t\t\t\t\t\tvalue={dateValuetoDatePickerFormat(\n\t\t\t\t\t\t\t\tget(formData, 'startDateValue', ''),\n\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\treadonly={modalSchema.startDate.readOnly}\n\t\t\t\t\t\t\trequired={modalSchema.startDate.mandatory}\n\t\t\t\t\t\t\t// component-id=\"start-date\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tcomponentId: 'start-date'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tformat={state.dateFormatPreference}\n\t\t\t\t\t\t\tinvalid={get(state, 'invalid-start-date', false)}\n\t\t\t\t\t\t></now-record-date-picker>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`start-time ${allDayEvent ? 'hidden' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<now-record-time\n\t\t\t\t\t\t\tlabel={t('Start Time')}\n\t\t\t\t\t\t\tvalue={timeValuetoTimePickerFormat(\n\t\t\t\t\t\t\t\tget(formData, 'startTimeValue', ''),\n\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tinvalid={get(state, 'invalid-start-time', false)}\n\t\t\t\t\t\t\tformat={state.timeFormatPreference}\n\t\t\t\t\t\t\t// component-id=\"start-time\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tcomponentId: 'start-time'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\treadonly={modalSchema.startTime.readOnly}\n\t\t\t\t\t\t\trequired={modalSchema.startTime.mandatory}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"all-day-toggle\">\n\t\t\t\t\t\t<div className=\"all-day-toggle-label\">\n\t\t\t\t\t\t\t{t('All Day')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<now-toggle\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tchecked={state.allDayEvent}\n\t\t\t\t\t\t\tmanage-checked={true}\n\t\t\t\t\t\t\tconfigAria={{ 'aria-label': t('All Day') }}\n\t\t\t\t\t\t></now-toggle>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"event-request-end-date-section\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`end-date ${allDayEvent ? 'expanded' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<now-record-date-picker\n\t\t\t\t\t\t\tlabel={t('End Date')}\n\t\t\t\t\t\t\tvalue={dateValuetoDatePickerFormat(\n\t\t\t\t\t\t\t\tget(formData, 'endDateValue', ''),\n\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t// component-id=\"end-date\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tcomponentId: 'end-date'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tformat={state.dateFormatPreference}\n\t\t\t\t\t\t\treadonly={modalSchema.endDate.readOnly}\n\t\t\t\t\t\t\trequired={modalSchema.endDate.mandatory}\n\t\t\t\t\t\t\tinvalid={get(state, 'invalid-end-date', false)}\n\t\t\t\t\t\t></now-record-date-picker>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`end-time ${allDayEvent ? 'hidden' : ''}`}>\n\t\t\t\t\t\t<now-record-time\n\t\t\t\t\t\t\tlabel={t('End Time')}\n\t\t\t\t\t\t\tvalue={timeValuetoTimePickerFormat(\n\t\t\t\t\t\t\t\tget(formData, 'endTimeValue', ''),\n\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tinvalid={get(state, 'invalid-end-time', false)}\n\t\t\t\t\t\t\tformat={state.timeFormatPreference}\n\t\t\t\t\t\t\t// component-id=\"end-time\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\tcomponentId: 'end-time'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\treadonly={modalSchema.endTime.readOnly}\n\t\t\t\t\t\t\trequired={modalSchema.endTime.mandatory}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"all-day-toggle-end-time\">\n\t\t\t\t\t\t<div className=\"all-day-toggle-label\">\n\t\t\t\t\t\t\t{t('All Day')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<now-toggle\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tchecked={state.allDayEvent}\n\t\t\t\t\t\t\tmanage-checked={true}\n\t\t\t\t\t\t></now-toggle>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\tmodalSchema.startDate && (\n\t\t\t\t<div className=\"event-request-date-only-view\">\n\t\t\t\t\t<div className=\"event-request-start-date-section\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`start-date ${\n\t\t\t\t\t\t\t\tallDayEvent ? 'expanded' : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<now-record-date-picker\n\t\t\t\t\t\t\t\tlabel={t('Start Date')}\n\t\t\t\t\t\t\t\tvalue={dateValuetoDatePickerFormat(\n\t\t\t\t\t\t\t\t\tget(formData, 'startDateValue', ''),\n\t\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\treadonly={modalSchema.startDate.readOnly}\n\t\t\t\t\t\t\t\trequired={modalSchema.startDate.mandatory}\n\t\t\t\t\t\t\t\t// component-id=\"start-date\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'start-date'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tformat={state.dateFormatPreference}\n\t\t\t\t\t\t\t\tinvalid={get(\n\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t'invalid-start-date',\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t></now-record-date-picker>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"event-request-end-date-section\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`end-date ${\n\t\t\t\t\t\t\t\tallDayEvent ? 'expanded' : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<now-record-date-picker\n\t\t\t\t\t\t\t\tlabel={t('End Date')}\n\t\t\t\t\t\t\t\tvalue={dateValuetoDatePickerFormat(\n\t\t\t\t\t\t\t\t\tget(formData, 'endDateValue', ''),\n\t\t\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t// component-id=\"end-date\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\tcomponentId: 'end-date'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tformat={state.dateFormatPreference}\n\t\t\t\t\t\t\t\treadonly={modalSchema.endDate.readOnly}\n\t\t\t\t\t\t\t\trequired={modalSchema.endDate.mandatory}\n\t\t\t\t\t\t\t\tinvalid={get(state, 'invalid-end-date', false)}\n\t\t\t\t\t\t\t></now-record-date-picker>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t);\n\t}\n};\n\nconst _getFooterActions = state => {\n\t//TODO: Only allow submitting a request if all fields are valid\n\n\tlet disableSubmit = false;\n\tconst modalSchema = get(state, 'properties.modalSchema', {});\n\tlet {\n\t\ttitle,\n\t\tattendees,\n\t\tstartDate,\n\t\tendDate,\n\t\tstartTime,\n\t\tendTime,\n\t\tdescription,\n\t\tadditionalSelectors\n\t} = modalSchema;\n\n\tlet formData = get(state, 'properties.formData', {});\n\n\t//First check if all mandatory fields from schema have a value\n\n\tlet {\n\t\ttitleValue,\n\t\tstartDateValue,\n\t\tendDateValue,\n\t\tstartTimeValue,\n\t\tendTimeValue,\n\t\tselectedAttendees,\n\t\tdescriptionValue\n\t} = formData;\n\n\tif (\n\t\t(!isEmpty(title) && title.mandatory && !titleValue) ||\n\t\t(!isEmpty(attendees) &&\n\t\t\tattendees.mandatory &&\n\t\t\tisEmpty(selectedAttendees)) ||\n\t\t(!isEmpty(startDate) && startDate.mandatory && !startDateValue) ||\n\t\t(!isEmpty(endDate) && endDate.mandatory && !endDateValue) ||\n\t\t(!isEmpty(startTime) && startTime.mandatory && !startTimeValue) ||\n\t\t(!isEmpty(endTime) && endTime.mandatory && !endTimeValue) ||\n\t\t(!isEmpty(description) && description.mandatory && !descriptionValue)\n\t) {\n\t\tdisableSubmit = true;\n\t}\n\n\tlet additionalSelectorData = get(formData, 'additionalSelectors', []);\n\tif (!isEmpty(additionalSelectors)) {\n\t\tadditionalSelectors.forEach((selectorComponent, index) => {\n\t\t\tif (\n\t\t\t\tselectorComponent.mandatory &&\n\t\t\t\t(!additionalSelectorData[index] ||\n\t\t\t\t\tisNil(additionalSelectorData[index].value))\n\t\t\t) {\n\t\t\t\tdisableSubmit = true;\n\t\t\t}\n\t\t});\n\t}\n\n\t//After checking all fields, check if user simply reverting their change on the modal\n\n\tlet initialFormData = get(state, 'initialFormData', {});\n\tlet isFormUnchanged = isEqual(initialFormData, formData);\n\tif (isFormUnchanged) disableSubmit = true;\n\n\tconst upsertLabel = get(state, 'properties.upsertLabel', t('Save'));\n\tlet defaultActions = [\n\t\t{\n\t\t\tlabel: upsertLabel,\n\t\t\tvariant: 'primary',\n\t\t\tdisabled:\n\t\t\t\tdisableSubmit ||\n\t\t\t\tstate.isLoading ||\n\t\t\t\t!isEmpty(state.errorMessage),\n\t\t\tclickActionType: EVENT_REQUEST_SAVE\n\t\t},\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tdisabled: state.isLoading,\n\t\t\tclickActionType: EVENT_REQUEST_CANCEL\n\t\t}\n\t];\n\n\treturn defaultActions;\n\t//In case we ever add back Delete again\n\t//const showDelete = get(state, 'properties.showDelete', false);\n\t// let deleteAction = {\n\t// \tlabel: t('Delete'),\n\t// \tvariant: 'primary-negative',\n\t// \tdisabled: false,\n\t// \tclickActionType: 'EVENT_REQUEST_DELETE'\n\t// };\n\n\t// if (showDelete) {\n\t// \treturn defaultActions.concat(deleteAction);\n\t// } else return defaultActions;\n};\n\nexport default view;\n","module.exports = __TECTONIC__$servicenow_now_textarea;","module.exports = __TECTONIC__$servicenow_now_toggle;","module.exports = __TECTONIC__$devsnc_sn_declarative_actions;","import { SAVE, CREATE, USERS, CONTEXTS } from './constants';\nimport { CALENDAR_EVENTS } from '../../common/constants';\nimport { t } from 'sn-translate';\n\nconst eventRequestModalProperties = {\n\t//Current User Preferences\n\tcurrentUser: {\n\t\tdefault: {\n\t\t\tfullName: '',\n\t\t\tdateFormat: 'YYYY-MM-DD',\n\t\t\ttimeFormat: ''\n\t\t}\n\t},\n\t//Control modal Visibility\n\tshowModal: {\n\t\tdefault: false\n\t},\n\n\t// Unique identifiers for event Category, need reconciliation with Server side logic (sys_id)\n\teventCategoryId: {\n\t\tdefault: CALENDAR_EVENTS.TIME_OFF.CATEGORY\n\t},\n\t// Unique identifiers for event Type, need reconciliation with Server side logic (sys_id)\n\teventTypeId: {\n\t\tdefault: CALENDAR_EVENTS.TIME_OFF.SYS_ID\n\t},\n\n\t//context string, to allow server to process request through different workflows based on Persona. (Eg. agent_workspace, manager_workspace etc )\n\tcontext: {\n\t\tdefault: CONTEXTS.MANAGER_WS\n\t},\n\n\teventSpanId: {\n\t\tdefault: '' //Actual meeting/timeoff/training to be editted\n\t},\n\t// Group/User under which this event span is displayed\n\teventGroup: {\n\t\tdefault: ''\n\t},\n\t//Title for the Modal (Eg. New Time Off Request)\n\tmodalTitle: {\n\t\tdefault: t('Event Request')\n\t},\n\n\t//Timezone to be provided by the wrapper component\n\treadInTimezone: {\n\t\tdefault: ''\n\t},\n\n\tmodalSchema: {\n\t\tdefault: {\n\t\t\ttitle: {\n\t\t\t\tmandatory: false,\n\t\t\t\treadOnly: false\n\t\t\t},\n\t\t\tattendees: {\n\t\t\t\tmandatory: true,\n\t\t\t\treadOnly: false\n\t\t\t},\n\t\t\tstartDate: {\n\t\t\t\tmandatory: true,\n\t\t\t\treadOnly: false\n\t\t\t},\n\t\t\tstartTime: {\n\t\t\t\tmandatory: true,\n\t\t\t\treadOnly: false\n\t\t\t},\n\t\t\tendDate: {\n\t\t\t\tmandatory: true,\n\t\t\t\treadOnly: false\n\t\t\t},\n\t\t\tendTime: {\n\t\t\t\tmandatory: true,\n\t\t\t\treadOnly: false\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tmandatory: false,\n\t\t\t\treadOnly: true\n\t\t\t},\n\t\t\tadditionalSelectors: [\n\t\t\t\t{\n\t\t\t\t\tfieldLabel: t('Select User'),\n\t\t\t\t\ttable: 'sys_user',\n\t\t\t\t\tfield: 'name',\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\tmandatory: true,\n\t\t\t\t\tadditionalQueryString: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldLabel: t('Select Shift'),\n\t\t\t\t\ttable: 'sn_shift_planning_shift_plan',\n\t\t\t\t\tfield: 'name',\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tdisplayValue: '',\n\t\t\t\t\tmandatory: false,\n\t\t\t\t\tadditionalQueryString: ''\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\n\t//Title to show for user multi-selector (Agents, Attendees, Participants etc)\n\tuserSelectorLabel: {\n\t\tdefault: USERS\n\t},\n\t//Label for the Update/Create/Save button\n\tupsertLabel: {\n\t\tdefault: SAVE\n\t},\n\t//Mode : Create for new submissions, Edit for editting\n\tmode: {\n\t\tdefault: CREATE\n\t},\n\n\tadditionalSelectors: {\n\t\tdefault: [\n\t\t\t// {\n\t\t\t// \tfieldLabel: 'Select User',\n\t\t\t// \ttable: 'sys_user',\n\t\t\t// \tfield: 'name',\n\t\t\t// \tdefaultValue: '',\n\t\t\t// \tdefaultDisplayValue: '',\n\t\t\t// \trequired: true,\n\t\t\t// \tadditionalQueryString: ''\n\t\t\t// },\n\t\t\t// {\n\t\t\t// \tfieldLabel: 'Select Shift',\n\t\t\t// \ttable: 'sn_shift_planning_shift_plan',\n\t\t\t// \tfield: 'work_shift',\n\t\t\t// \tdefaultValue: '',\n\t\t\t// \tdefaultDisplayValue: '',\n\t\t\t// \trequired: true,\n\t\t\t// \tadditionalQueryString: ''\n\t\t\t// }\n\t\t]\n\t},\n\n\t//Data value properties\n\n\tformData: {\n\t\tdefault: {\n\t\t\ttitleValue: '',\n\t\t\tdescriptionValue: '',\n\t\t\tstartDateValue: '',\n\t\t\tendDateValue: '',\n\t\t\tstartTimeValue: '',\n\t\t\tendTimeValue: '',\n\t\t\tselectedAttendees: [\n\t\t\t\t// { id: '62826bf03710200044e0bfc8bcbe5df1', label: 'Abel Tuter' }\n\t\t\t],\n\t\t\tadditionalSelectors: []\n\t\t}\n\t}\n};\n\nexport default { properties: eventRequestModalProperties };\n","import get from 'lodash/get';\nimport sortBy from 'lodash/sortBy';\nimport uniqBy from 'lodash/uniqBy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\nimport { DEBOUNCE } from '@servicenow/ui-core/lib/effects/modifiers/types';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport {\n\tNOW_TYPEAHEAD_MULTI_VALUE_SET,\n\tTYPEAHEAD_FETCH_ATTENDEES,\n\tTYPEAHEAD_FETCH_ATTENDEES_SUCCEDED,\n\tTYPEAHEAD_FETCH_ALL_USERS_ATTENDEES,\n\tTYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED,\n\tNOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET,\n\tNOW_TOGGLE_CHECKED_SET,\n\tNOW_RECORD_FIELD_LOOKUP_CONNECTED_VALUE_CHANGED,\n\tDATE_PICKER_VALUE_CHANGED,\n\tNOW_RECORD_TIME_VALUE_CHANGED,\n\tUSER_INFO_READY,\n\tEVENT_REQUEST_SAVE,\n\tEVENT_REQUEST_CANCEL,\n\tNOW_MODAL_OPENED_SET,\n\tEVENT_REQUEST_MODAL_SET,\n\tNOW_INPUT_CHANGED,\n\tNOW_TEXTAREA_INPUT_CHANGED,\n\tCREATE,\n\tEDIT,\n\tEVENT_REQUEST_SUBMIT_CREATE,\n\tEVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED,\n\tEVENT_REQUEST_SUBMIT_CREATE_FAILED,\n\tEVENT_REQUEST_SUBMIT_EDIT,\n\tEVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED,\n\tEVENT_REQUEST_SUBMIT_EDIT_FAILED,\n\tEVENT_REQUEST_SUBMISSION_SUCCESSFUL,\n\tEVENT_REQUEST_SUBMISSION_FAILED,\n\tNOW_TYPEAHEAD_MULTI_INVALID_SET\n} from './constants';\nimport { t } from 'sn-translate';\nimport {\n\tfetchAttendeesEffect,\n\tfetchAllUsersAttendeesEffect,\n\tsubmitEventCreateEffect,\n\tsubmitEventEditEffect\n} from './effects';\nimport {\n\tTYPEAHEAD_DEBOUNCE_DELAY,\n\tNOW_ALERT_ACTION_CLICKED\n} from '../../common/constants';\n\nimport {\n\tgenerateEventRequestPayload,\n\tdatePickerValuetoDateValue,\n\ttimePickerValuetoTimeValue,\n\tcheckIfMandatoryDateFieldsAreFilled,\n\tcheckIfStartDatetimeIsBeforeEndDateTime\n} from './utils';\nimport { INTERNAL_FORMAT } from '../../common/calendar/constants';\n\nconst handleComponentBootstrap = ({ state, updateState }) => {\n\tconst initialFormData = get(state, 'properties.formData', {});\n\tupdateState({\n\t\tinitialFormData,\n\t\tisLoading: false\n\t});\n};\n\n// Fetch more agents used the input from the user in now-typeahead.\nconst handleAttendeesTypeaheadValueChanged = {\n\tmodifier: {\n\t\tname: DEBOUNCE || 'debounce',\n\t\tdelay: TYPEAHEAD_DEBOUNCE_DELAY\n\t},\n\teffect: ({ action, dispatch, updateState, state }) => {\n\t\tconst props = get(state, 'properties', '');\n\t\tlet allowAllUsers = get(\n\t\t\tprops,\n\t\t\t'modalSchema.attendees.allowAllUsers',\n\t\t\tfalse\n\t\t);\n\n\t\tconst { value } = action.payload;\n\t\tif (!value || !value.trim() || value.trim() === '^') return;\n\n\t\tconst cleanValue = value.trim().replace(/\\^/g, '^^');\n\t\tlet attendeesCondition = '';\n\t\tif (allowAllUsers) {\n\t\t\tattendeesCondition = `active=true^nameLIKE${cleanValue}^ORDERBYname`;\n\t\t\tdispatch(TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES, {\n\t\t\t\tattendeesCondition\n\t\t\t});\n\t\t} else {\n\t\t\tattendeesCondition = `groupDYNAMIC514230e2b3130010ed7fc9c316a8dccc^user.active=true^user.nameLIKE${cleanValue}^ORDERBYuser.name`;\n\t\t\tdispatch(TYPEAHEAD_FETCH_ATTENDEES, { attendeesCondition });\n\t\t}\n\n\t\tupdateState({\n\t\t\toperation: 'set',\n\t\t\tvalue,\n\t\t\tpath: 'attendeesSearchterm'\n\t\t});\n\t}\n};\n\n// When searching for managed users in sys_user_grmember table\n// If user search for an attendee that hasn't been fetched yet, this\n// action handler will update the list of available agents so they can\n// be selected in the now-typeahead component\nconst handleAttendeesTypeaheadFetchSucceded = ({\n\tstate,\n\taction,\n\tupdateState\n}) => {\n\tconst currentSelectedAttendees = get(state, 'selectedAttendees', []);\n\tlet attendeeesResult = get(\n\t\taction.payload,\n\t\t'data.managedAttendeesQuery',\n\t\t[]\n\t);\n\n\tlet newAttendeesList = attendeeesResult.map(attendeeObj => {\n\t\treturn {\n\t\t\tid: attendeeObj.groupBy[0].value,\n\t\t\tlabel: attendeeObj.groupBy[0].displayValue\n\t\t};\n\t});\n\tnewAttendeesList = newAttendeesList.concat(currentSelectedAttendees);\n\tlet uniqueSuggestions = [];\n\tuniqueSuggestions = uniqBy(newAttendeesList, 'id');\n\tuniqueSuggestions = sortBy(\n\t\tuniqueSuggestions,\n\t\tattendeeObj => attendeeObj.label\n\t);\n\tupdateState({\n\t\tsuggestedAttendees: uniqueSuggestions\n\t});\n};\n\n// When searching for All users in sys_user table,\n// If user search for an attendee that hasn't been fetched yet, this\n// action handler will update the list of available agents so they can\n// be selected in the now-typeahead component\nconst handleAllUsersAttendeesTypeaheadFetchSucceded = ({\n\tstate,\n\taction,\n\tupdateState\n}) => {\n\tconst currentSelectedAttendees = get(state, 'selectedAttendees', []);\n\tlet attendeeesResult = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sys_user._results',\n\t\t[]\n\t);\n\n\tlet newAttendeesList = attendeeesResult.map(attendeeObj => {\n\t\treturn {\n\t\t\tid: attendeeObj.sys_id.value,\n\t\t\tlabel: attendeeObj.name.value\n\t\t};\n\t});\n\tnewAttendeesList = newAttendeesList.concat(currentSelectedAttendees);\n\tlet uniqueSuggestions = [];\n\tuniqueSuggestions = uniqBy(newAttendeesList, 'id');\n\tuniqueSuggestions = sortBy(\n\t\tuniqueSuggestions,\n\t\tattendeeObj => attendeeObj.label\n\t);\n\tupdateState({\n\t\tsuggestedAttendees: uniqueSuggestions\n\t});\n};\n\n// User selected an attendee for now-typeahead-multiselect\nconst handleAttendeeTypeaheadItemSelected = ({\n\taction,\n\tstate,\n\tupdateProperties,\n\tupdateState\n}) => {\n\tlet selectedAttendees = get(action, 'payload.value', []);\n\tlet formData = get(state, 'properties.formData', {});\n\tupdateState({\n\t\t'invalid-attendees': false\n\t});\n\n\tupdateProperties({\n\t\tformData: {\n\t\t\t...formData,\n\t\t\tselectedAttendees\n\t\t}\n\t});\n};\n\nconst handleAllDayToggleSet = ({\n\taction,\n\tstate,\n\tupdateState,\n\tupdateProperties\n}) => {\n\tupdateState({\n\t\tallDayEvent: action.payload.value,\n\t\t'invalid-start-time': false,\n\t\t'invalid-end-time': false\n\t});\n\n\tlet formData = get(state, 'properties.formData', {});\n\n\tupdateProperties({\n\t\tformData: {\n\t\t\t...formData,\n\t\t\tstartTimeValue: '00:00:00',\n\t\t\tendTimeValue: '23:59:59'\n\t\t}\n\t});\n};\n\n/* eslint-disable indent*/\n\nexport const handleNowInputValueChanged = ({\n\taction,\n\tstate,\n\tupdateProperties\n}) => {\n\tconst componentId = get(action, 'payload.componentId', '');\n\tlet formData = get(state, 'properties.formData', {});\n\tswitch (componentId) {\n\t\tcase 'event-title': {\n\t\t\tupdateProperties({\n\t\t\t\tformData: {\n\t\t\t\t\t...formData,\n\t\t\t\t\ttitleValue: action.payload.fieldValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nexport const handleNowTextAreaInputValueChanged = ({\n\taction,\n\tupdateProperties,\n\tstate\n}) => {\n\tconst componentId = get(action, 'payload.componentId', '');\n\tlet formData = get(state, 'properties.formData', {});\n\tswitch (componentId) {\n\t\tcase 'event-description': {\n\t\t\tupdateProperties({\n\t\t\t\tformData: {\n\t\t\t\t\t...formData,\n\t\t\t\t\tdescriptionValue: action.payload.fieldValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/* eslint-enable */\n\nexport const handleDynamicLookupFieldValueChanged = ({\n\taction,\n\tstate,\n\tupdateProperties\n}) => {\n\tlet payload = get(action, 'payload', {});\n\tlet componentId = get(action, 'payload.componentId', '');\n\tlet componentIndex = componentId.split('selector-')[1];\n\n\tlet formData = get(state, 'properties.formData', {});\n\tlet currentAdditionalSelectorData = formData.additionalSelectors\n\t\t? formData.additionalSelectors\n\t\t: [];\n\n\tlet copyCurrentAdditionalSelectorsData = cloneDeep(\n\t\tcurrentAdditionalSelectorData\n\t);\n\n\tlet newSelectedObject = {\n\t\tvalue: payload.value,\n\t\tdisplayValue: payload.displayValue\n\t};\n\tcopyCurrentAdditionalSelectorsData[componentIndex] = newSelectedObject;\n\n\tupdateProperties({\n\t\tformData: {\n\t\t\t...formData,\n\t\t\tadditionalSelectors: copyCurrentAdditionalSelectorsData\n\t\t}\n\t});\n};\n\nexport const handleUserInfo = ({ action, updateProperties, updateState }) => {\n\tlet currentUser = get(action, 'payload.currentUser', {});\n\n\tlet currentUserDateFormat = get(currentUser, 'dateFormat', 'YYYY-MM-DD');\n\tlet currentUserDateTimeFormat = get(\n\t\tcurrentUser,\n\t\t'dateTimeFormat',\n\t\tINTERNAL_FORMAT.DATE_TIME\n\t);\n\n\tupdateProperties({\n\t\tcurrentUser\n\t});\n\n\tlet dateFormatPreference = currentUserDateFormat.toUpperCase();\n\tlet timeFormatPreference = currentUserDateTimeFormat;\n\n\tlet meridianMarker = timeFormatPreference.indexOf('a'); //Server Returns 'yyyy-MM-dd HH:mm:ss' Or 'yyyy-MM-dd HH:mm:ss a'\n\ttimeFormatPreference = meridianMarker === -1 ? 'HH:mm' : 'hh:mm a'; //Now-record-time time format\n\n\tupdateState({\n\t\tdateFormatPreference,\n\t\ttimeFormatPreference\n\t});\n};\n\n/* eslint-disable  indent*/\nexport const handleDatePickerValueChanged = ({\n\taction,\n\tstate,\n\tupdateState,\n\tupdateProperties\n}) => {\n\tlet formData = get(state, 'properties.formData', {});\n\n\tlet datePickerValue = action.payload.value; //User's display format\n\tlet dateValue = datePickerValuetoDateValue(datePickerValue, state);\n\tlet sourceId = get(action, 'payload.componentId');\n\t// Check if format is incorrect and update state so\n\t// save button gets disabled.\n\tif (!isEmpty(action.payload.error)) {\n\t\tconst content = get(\n\t\t\taction,\n\t\t\t'payload.error.message',\n\t\t\tt('There\\'s an issue with the date provided.')\n\t\t);\n\t\tconst dateType =\n\t\t\tsourceId === 'start-date' ? 'startDateValue' : 'endDateValue';\n\t\tconst invalidDate = `invalid-${sourceId}`;\n\t\tupdateProperties({\n\t\t\tformData: {\n\t\t\t\t...formData,\n\t\t\t\t[dateType]: ''\n\t\t\t}\n\t\t});\n\t\tupdateState({ errorMessage: content, [invalidDate]: true });\n\t\treturn;\n\t}\n\tswitch (sourceId) {\n\t\tcase 'start-date': {\n\t\t\tupdateProperties({\n\t\t\t\tformData: {\n\t\t\t\t\t...formData,\n\t\t\t\t\tstartDateValue: dateValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tupdateState({ 'invalid-start-date': false });\n\t\t\tbreak;\n\t\t}\n\t\tcase 'end-date': {\n\t\t\tupdateProperties({\n\t\t\t\tformData: {\n\t\t\t\t\t...formData,\n\t\t\t\t\tendDateValue: dateValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tupdateState({ 'invalid-end-date': false });\n\t\t\tbreak;\n\t\t}\n\t}\n};\n/* eslint-enable */\n\n/* eslint-disable  indent*/\nexport const handleTimeValueChanged = ({\n\taction,\n\tupdateProperties,\n\tstate,\n\tupdateState\n}) => {\n\tlet formData = get(state, 'properties.formData', {});\n\tlet timePickerValue = action.payload.value; //Time Picker's display format as per user pref\n\tlet timeValue = timePickerValuetoTimeValue(timePickerValue, state);\n\tlet componentId = get(action, 'payload.componentId', '');\n\tlet sourceId = componentId;\n\tif (!isEmpty(action.payload.error)) {\n\t\tconst content = get(\n\t\t\taction,\n\t\t\t'payload.error.message',\n\t\t\tt('There\\'s an issue with the time provided.')\n\t\t);\n\t\tconst timeType =\n\t\t\tsourceId === 'start-time' ? 'startTimeValue' : 'endTimeValue';\n\t\tconst invalidTime = `invalid-${sourceId}`;\n\t\tupdateProperties({\n\t\t\tformData: {\n\t\t\t\t...formData,\n\t\t\t\t[timeType]: ''\n\t\t\t}\n\t\t});\n\t\tupdateState({ errorMessage: content, [invalidTime]: true });\n\t\treturn;\n\t}\n\n\tswitch (componentId) {\n\t\tcase 'start-time': {\n\t\t\tupdateProperties({\n\t\t\t\tformData: {\n\t\t\t\t\t...formData,\n\t\t\t\t\tstartTimeValue: timeValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase 'end-time': {\n\t\t\tupdateProperties({\n\t\t\t\tformData: {\n\t\t\t\t\t...formData,\n\t\t\t\t\tendTimeValue: timeValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n};\n/* eslint-enable */\n\nexport const handleRequestSave = ({ state, dispatch, updateState }) => {\n\tlet payload = {};\n\n\tlet operationMode = get(state, 'properties.mode', '');\n\n\tlet formData = get(state, 'properties.formData', {});\n\tlet modalSchema = get(state, 'properties.modalSchema', {});\n\n\t/* eslint-disable indent*/\n\tif (!checkIfMandatoryDateFieldsAreFilled(formData, modalSchema)) {\n\t\tupdateState({\n\t\t\terrorMessage: t('One or more mandatory date fields is not filled.')\n\t\t});\n\t} else if (\n\t\t!checkIfStartDatetimeIsBeforeEndDateTime(formData, modalSchema)\n\t) {\n\t\tupdateState({\n\t\t\terrorMessage: t('Start date time must be before end date time.')\n\t\t});\n\t} else {\n\t\tswitch (operationMode) {\n\t\t\tcase CREATE: {\n\t\t\t\tpayload = generateEventRequestPayload(state);\n\t\t\t\tdispatch(EVENT_REQUEST_SUBMIT_CREATE, {\n\t\t\t\t\tdata: payload\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase EDIT: {\n\t\t\t\tpayload = generateEventRequestPayload(state);\n\t\t\t\tdispatch(EVENT_REQUEST_SUBMIT_EDIT, {\n\t\t\t\t\tdata: payload\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tupdateState({\n\t\t\tisLoading: true\n\t\t});\n\t}\n\t/*eslint-enable */\n};\n\n//Tell the wrapper, modal closed by Cancel button\nexport const handleRequestCancel = ({\n\tupdateProperties,\n\tdispatch,\n\tupdateState,\n\tstate\n}) => {\n\tconst initialFormData = get(state, 'initialFormData', {});\n\tupdateProperties({\n\t\tshowModal: false,\n\t\tformData: initialFormData\n\t});\n\n\tupdateState({\n\t\tisLoading: false,\n\t\terrorMessage: '',\n\t\tallDayEvent: false,\n\t\t'invalid-attendees': false\n\t});\n\n\tdispatch(EVENT_REQUEST_MODAL_SET, {\n\t\tvalue: false\n\t});\n};\n\n//Tell the wrapper, modal closed by X click\nexport const handleModalOpenedSet = ({\n\taction,\n\tupdateProperties,\n\tdispatch,\n\tstate,\n\tupdateState\n}) => {\n\tconst initialFormData = get(state, 'initialFormData', {});\n\tupdateProperties({\n\t\tshowModal: action.payload.value,\n\t\tformData: initialFormData\n\t});\n\n\tupdateState({\n\t\tisLoading: false,\n\t\terrorMessage: '',\n\t\tallDayEvent: false,\n\t\t'invalid-attendees': false\n\t});\n\n\tdispatch(EVENT_REQUEST_MODAL_SET, {\n\t\tvalue: action.payload.value\n\t});\n};\n\nexport const handleEventRequestSubmitSuccess = ({\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\t//Tell the wrapper the event was submitted successfully with the server payload\n\tdispatch(EVENT_REQUEST_SUBMISSION_SUCCESSFUL, {\n\t\tpayload: action.payload\n\t});\n\n\t//close the modal\n\tdispatch(EVENT_REQUEST_MODAL_SET, {\n\t\tvalue: false\n\t});\n\n\tupdateState({\n\t\tisLoading: false,\n\t\tallDayEvent: false\n\t});\n};\n\nexport const handleEventRequestSubmitFailed = ({\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tdispatch(EVENT_REQUEST_SUBMISSION_FAILED, {\n\t\tpayload: action.payload\n\t});\n\tupdateState({\n\t\tisLoading: false,\n\t\terrorMessage: action.payload.data.error.detail\n\t});\n};\n\nexport const handleModalAlertActionCliked = ({ updateState, action }) => {\n\tconst actionType = get(action, 'payload.action.type', 'dismiss');\n\tif (actionType === 'dismiss') {\n\t\tupdateState({ errorMessage: '' });\n\t}\n};\n\nexport const handleAttendeesInvalid = ({ updateState }) => {\n\tupdateState({\n\t\t'invalid-attendees': true\n\t});\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: handleComponentBootstrap,\n\t[USER_INFO_READY]: handleUserInfo,\n\t[TYPEAHEAD_FETCH_ATTENDEES]: fetchAttendeesEffect,\n\t[TYPEAHEAD_FETCH_ATTENDEES_SUCCEDED]: handleAttendeesTypeaheadFetchSucceded,\n\t[TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES]: fetchAllUsersAttendeesEffect,\n\t[TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED]: handleAllUsersAttendeesTypeaheadFetchSucceded,\n\t[NOW_TYPEAHEAD_MULTI_VALUE_SET]: handleAttendeesTypeaheadValueChanged,\n\t[NOW_TYPEAHEAD_MULTI_INVALID_SET]: handleAttendeesInvalid,\n\t[NOW_TYPEAHEAD_MULTI_SELECTED_ITEMS_SET]: handleAttendeeTypeaheadItemSelected,\n\t[NOW_TOGGLE_CHECKED_SET]: handleAllDayToggleSet,\n\t[NOW_INPUT_CHANGED]: handleNowInputValueChanged,\n\t[NOW_TEXTAREA_INPUT_CHANGED]: handleNowTextAreaInputValueChanged,\n\t[NOW_RECORD_FIELD_LOOKUP_CONNECTED_VALUE_CHANGED]: handleDynamicLookupFieldValueChanged,\n\t[DATE_PICKER_VALUE_CHANGED]: handleDatePickerValueChanged,\n\t[NOW_RECORD_TIME_VALUE_CHANGED]: handleTimeValueChanged,\n\t[EVENT_REQUEST_SAVE]: handleRequestSave,\n\t[EVENT_REQUEST_CANCEL]: handleRequestCancel,\n\t[NOW_MODAL_OPENED_SET]: handleModalOpenedSet,\n\t[EVENT_REQUEST_SUBMIT_CREATE]: submitEventCreateEffect,\n\t[EVENT_REQUEST_SUBMIT_EDIT]: submitEventEditEffect,\n\t[EVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED]: handleEventRequestSubmitSuccess,\n\t[EVENT_REQUEST_SUBMIT_CREATE_FAILED]: handleEventRequestSubmitFailed,\n\t[EVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED]: handleEventRequestSubmitSuccess,\n\t[EVENT_REQUEST_SUBMIT_EDIT_FAILED]: handleEventRequestSubmitFailed,\n\t[NOW_ALERT_ACTION_CLICKED]: handleModalAlertActionCliked\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@seismic/effect-http';\nimport {\n\tTYPEAHEAD_FETCH_ATTENDEES_SUCCEDED,\n\tEVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED,\n\tEVENT_REQUEST_SUBMIT_CREATE_FAILED,\n\tEVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED,\n\tEVENT_REQUEST_SUBMIT_EDIT_FAILED,\n\tEVENT_REQUEST_ENDPOINTS,\n\tTYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED\n} from './constants';\n\nimport { fetchAttendeesQuery, fetchAllUsersAttendeesQuery } from './queries';\n\nexport const fetchAttendeesEffect = createGraphQLEffect(fetchAttendeesQuery, {\n\tvariableList: ['attendeesCondition'],\n\tsuccessActionType: TYPEAHEAD_FETCH_ATTENDEES_SUCCEDED,\n\terrorActionType: TYPEAHEAD_FETCH_ATTENDEES_SUCCEDED\n});\n\nexport const fetchAllUsersAttendeesEffect = createGraphQLEffect(\n\tfetchAllUsersAttendeesQuery,\n\t{\n\t\tvariableList: ['attendeesCondition'],\n\t\tsuccessActionType: TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED,\n\t\terrorActionType: TYPEAHEAD_FETCH_ALL_USERS_ATTENDEES_SUCCEDED\n\t}\n);\n\nexport const submitEventCreateEffect = createHttpEffect(\n\tEVENT_REQUEST_ENDPOINTS.CREATE_EVENT,\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: EVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED,\n\t\terrorActionType: EVENT_REQUEST_SUBMIT_CREATE_FAILED\n\t}\n);\n\nexport const submitEventEditEffect = createHttpEffect(\n\tEVENT_REQUEST_ENDPOINTS.EDIT_EVENT,\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: EVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED,\n\t\terrorActionType: EVENT_REQUEST_SUBMIT_EDIT_FAILED\n\t}\n);\n","import { GRAPHQL_ATTENDEES_MAX_LIMIT } from './constants';\n\n// All user query, in case needed to switch back to allow all users for events\nexport const fetchAllUsersAttendeesQuery = `\nquery($attendeesCondition: String) {\n\tGlideRecord_Query {\n\t\tsys_user (queryConditions: $attendeesCondition, pagination: {limit: ${GRAPHQL_ATTENDEES_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tname {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t  }\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const fetchAttendeesQuery = `\nquery ($attendeesCondition: String!) {\n\tmanagedAttendeesQuery: GlideAggregate_Query(tableName: \"sys_user_grmember\", queryConditions: $attendeesCondition, groupBy: \"user\") {\n\t  count\n\t  groupBy {\n\t\tfield\n\t\tvalue\n\t\tdisplayValue\n\t  }\n\t}\n  }\n  `;\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.event-request-content>div{margin:.75rem}now-input,now-textarea{width:100%}.event-title.hidden{display:none}.event-request-users-section now-typeahead-multi{width:100%;margin:0}.event-request-users-section now-typeahead-multi.hidden{display:none}.event-request-start-date-section{display:flex;justify-content:space-between}.event-request-start-date-section .start-date{width:50%}.event-request-start-date-section .start-date.expanded{width:80%}.event-request-start-date-section .start-time{width:30%}.event-request-start-date-section .start-time.hidden{display:none}.event-request-start-date-section .all-day-toggle{width:15%;display:flex;padding-top:1.5rem}.event-request-end-date-section{display:flex;justify-content:space-between}.event-request-end-date-section .end-date{width:50%}.event-request-end-date-section .end-date.expanded{width:80%}.event-request-end-date-section .end-time{width:30%}.event-request-end-date-section .end-time.hidden{display:none}.event-request-end-date-section .all-day-toggle-end-time{visibility:hidden;width:15%;display:flex;padding-top:1.5rem}.event-request-date-only-view{display:flex;justify-content:space-between;flex-wrap:wrap}.event-request-date-only-view .event-request-end-date-section,.event-request-date-only-view .event-request-start-date-section{flex:1}.event-request-date-only-view .event-request-end-date-section .end-date,.event-request-date-only-view .event-request-end-date-section .start-date,.event-request-date-only-view .event-request-start-date-section .end-date,.event-request-date-only-view .event-request-start-date-section .start-date{width:100%}.event-request-date-only-view>:first-child{padding-right:.5rem}.all-day-toggle.hidden{display:none}.additional-fields{display:flex;flex-wrap:wrap;justify-content:space-between}.additional-fields now-record-field-lookup-connected{flex:0 50%}.additional-fields>:nth-child(odd){padding-right:.5rem}\", \"\"]);\n\n// exports\n","import './sn-manager-agent-time-off-request';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view.js';\nimport { eventModalProps } from './constants';\nimport { defaultProperties } from './properties.js';\nimport actionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-agent-time-off-request', {\n\tinitialState: {\n\t\tshowModal: false,\n\t\teventModalProps\n\t},\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: defaultProperties,\n\tactionHandlers,\n\tstyles\n});\n","import '../sn-manager-event-request';\nimport { SCHEDULE_AGENT_UI_ACTIONS } from '../../common/constants';\nimport moment from 'moment';\n\nconst view = (state, { updateState }) => {\n\treturn (\n\t\t<div className=\"agent-time-off-request\">\n\t\t\t<now-button\n\t\t\t\tlabel={SCHEDULE_AGENT_UI_ACTIONS.REQUEST_TIME_OFF.label}\n\t\t\t\ton-click={() => {\n\t\t\t\t\tconst { currentUser, contextDate } = state.properties;\n\t\t\t\t\tconst contextDateMoment = moment(contextDate);\n\t\t\t\t\tconst timeOffAttendee = {\n\t\t\t\t\t\tid: currentUser.sys_id,\n\t\t\t\t\t\tlabel: currentUser.fullName\n\t\t\t\t\t};\n\n\t\t\t\t\tconst formData = {\n\t\t\t\t\t\tstartDateValue: contextDateMoment.format('YYYY-MM-DD'),\n\t\t\t\t\t\tendDateValue: contextDate.format('YYYY-MM-DD'),\n\t\t\t\t\t\tselectedAttendees: [timeOffAttendee]\n\t\t\t\t\t};\n\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\teventModalProps: {\n\t\t\t\t\t\t\t...state.eventModalProps,\n\t\t\t\t\t\t\tformData\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshowModal: true\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t></now-button>\n\t\t\t<sn-manager-event-request\n\t\t\t\tshowModal={state.showModal}\n\t\t\t\t{...state.eventModalProps}\n\t\t\t></sn-manager-event-request>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import moment from 'moment';\n\nexport const defaultProperties = {\n\tcurrentUser: {\n\t\tdefault: {\n\t\t\tavatar: '',\n\t\t\tdateFormat: '',\n\t\t\tdateTimeFormat: '',\n\t\t\tfirstName: '',\n\t\t\tfullName: '',\n\t\t\tinitials: '',\n\t\t\tlanguage: '',\n\t\t\tlastName: '',\n\t\t\tsys_id: '',\n\t\t\ttimeZone: '',\n\t\t\tuserName: ''\n\t\t}\n\t},\n\trequestorDetails: {\n\t\tdefault: {}\n\t},\n\t//Time zone pref set by the user\n\ttimezone: {},\n\tcontextDate: {\n\t\tdefault: moment().format('YYYY-MM-DD HH:mm:ss')\n\t}\n};\n","import {\n\tEVENT_REQUEST_MODAL_SET,\n\tEVENT_REQUEST_SUBMISSION_SUCCESSFUL\n} from '../sn-manager-event-request/constants';\nimport {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED\n} from '@servicenow/ui-core/lib/constants';\nimport get from 'lodash/get';\nimport { AGENT_SCHEDULE_TIME_OFF_SUCCESS } from './constants';\nimport { isEmpty, isEqual } from 'lodash';\nimport moment from 'moment';\n\nexport const handleComponentBootstrap = ({ state, updateState }) => {\n\tlet currentUser = get(state, 'properties.currentUser', {});\n\tlet readInTimezone = get(state, 'properties.timezone', '');\n\tlet eventModalProps = get(state, 'eventModalProps', {});\n\tlet formData = eventModalProps.formData;\n\tlet timeOffAttendee = {\n\t\tid: currentUser.sys_id,\n\t\tlabel: currentUser.fullName\n\t};\n\n\tupdateState({\n\t\teventModalProps: {\n\t\t\t...eventModalProps,\n\t\t\tformData: {\n\t\t\t\t...formData,\n\t\t\t\tselectedAttendees: [timeOffAttendee]\n\t\t\t},\n\t\t\treadInTimezone\n\t\t}\n\t});\n};\n\nexport const handleEventRequestModalSet = ({\n\taction,\n\tupdateState,\n\tupdateProperties\n}) => {\n\tupdateProperties({ requestorDetails: {} });\n\tupdateState({\n\t\tshowModal: action.payload.value\n\t});\n};\n\nexport const handleTimeOffSuccessful = ({ action, dispatch }) => {\n\tlet timeOffRecords = get(action, 'payload.payload.result.records', []);\n\tif (timeOffRecords.length > 0) {\n\t\tdispatch(AGENT_SCHEDULE_TIME_OFF_SUCCESS, {\n\t\t\ttimeOffRecord: timeOffRecords[0]\n\t\t});\n\t}\n};\n\nconst checkForTimeOffRequest = ({ action, state, updateState }) => {\n\tif (\n\t\tget(action, 'payload.name', '') === 'requestorDetails' &&\n\t\t!isEmpty(get(action, 'payload.value', {})) &&\n\t\t!isEqual(\n\t\t\tget(action, 'payload.previousValue', {}),\n\t\t\tget(action, 'payload.value', {})\n\t\t)\n\t) {\n\t\tlet event = get(action, 'payload.value', {});\n\t\tlet currentUser = get(state, 'properties.currentUser', {});\n\t\tlet readInTimezone = get(state, 'properties.timezone', '');\n\t\tlet eventModalProps = get(state, 'eventModalProps', {});\n\t\tlet formData = eventModalProps.formData;\n\t\tlet timeOffAttendee = {\n\t\t\tid: currentUser.sys_id,\n\t\t\tlabel: currentUser.fullName\n\t\t};\n\t\tlet startDateTimeMoment = moment(\n\t\t\tevent.start,\n\t\t\t'YYYY-MM-DD HH:mm:ss' //Format of the Shift Planing Read API response\n\t\t);\n\t\tlet endDateTimeMoment = moment(\n\t\t\tevent.end,\n\t\t\t'YYYY-MM-DD HH:mm:ss' //Format of the Shift Planing Read API response\n\t\t);\n\n\t\teventModalProps = {\n\t\t\t...eventModalProps,\n\t\t\tformData: {\n\t\t\t\t...formData,\n\t\t\t\tstartDateValue: startDateTimeMoment.format('YYYY-MM-DD'),\n\t\t\t\tendDateValue: endDateTimeMoment.format('YYYY-MM-DD'),\n\t\t\t\tstartTimeValue: startDateTimeMoment.format('HH:mm'),\n\t\t\t\tendTimeValue: endDateTimeMoment.format('HH:mm'),\n\t\t\t\tselectedAttendees: [timeOffAttendee]\n\t\t\t},\n\t\t\treadInTimezone\n\t\t};\n\n\t\tupdateState({\n\t\t\teventModalProps,\n\t\t\tshowModal: true\n\t\t});\n\t}\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: handleComponentBootstrap,\n\t[COMPONENT_PROPERTY_CHANGED]: checkForTimeOffRequest,\n\t[EVENT_REQUEST_MODAL_SET]: handleEventRequestModalSet,\n\t[EVENT_REQUEST_SUBMISSION_SUCCESSFUL]: handleTimeOffSuccessful\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","import { POPOVER_STATE } from './constants';\nimport moment from 'moment';\n\nconst CalendarProps = {\n\t//Type of views to be made available. Can be either \"CALENDAR\" or \"TIMELINE\".\n\tavailableViewTypes: {},\n\t//Starting view. Can be either \"DAY\", \"WEEK\", or \"MONTH\". Can't be \"MONTH\" ir availableViewTypes is \"TIMELINE\".\n\tstartingView: {},\n\t//HTTP endpoint that returns scheduling data. Must be in a particular format.\n\tendpoint: {},\n\t//List of sys ids of sys_user_group records, whose members you'd like to get schedule information for\n\tassignmentGroups: {},\n\t//List of filter configs\n\tfilter: {},\n\t//List of sys ids of sys_user records, of users you'd like to get schedule information for\n\tindividualAgents: {},\n\t//GlideDomainQuery currentUser object to get context of current viewer of calendar\n\tcurrentUser: {},\n\t//Interval for which you would like to obtain schedule information\n\tstartDate: {},\n\tendDate: {},\n\tcontextDate: {\n\t\tdefault: moment().format('YYYY-MM-DD HH:mm:ss')\n\t},\n\t//Set to true to only show work/break event spans that are published.\n\tisPublished: {\n\t\tdefault: false\n\t},\n\t//Array of timezones to be made selectable, as well as starting timezone\n\tavailableTimezones: {},\n\ttimezone: {},\n\ttimeFormat: {},\n\tdateFormat: {},\n\t//Configures time axis of calendar for timeline day view. xStep = number of minutes per division, xSize = number of divisions, xStart = offset in divisions.\n\txStep: {},\n\txSize: {},\n\txStart: {},\n\t//Configures format of dates of calendar header.\n\tdatePickerTemplates: {},\n\t//Configures colors of specific event types. Takes a JSON object of event type-to-hex code pairings.\n\tspanColors: {},\n\t//Templating for custom UI content for calendar.\n\ttimelineDayTemplateRenderer: {},\n\ttimelineWeekTemplateRenderer: {},\n\n\t//True if New event dropdown should appear above calendar.\n\tallowEventCreation: {\n\t\tdefault: false\n\t},\n\n\tforecastEnabled: {\n\t\tdefault: false\n\t},\n\n\t//popover\n\tpopoverEnabled: {\n\t\tdefault: true\n\t},\n\tpopoverContentState: {\n\t\tdefault: { value: POPOVER_STATE.READY }\n\t},\n\tpopoverTemplate: {\n\t\tdefault: null\n\t},\n\tpopoverShowEditButton: {\n\t\tdefault: true\n\t},\n\tpopoverShowDeleteButton: {\n\t\tdefault: true\n\t},\n\t//Boolean for agent workspace actions\n\tshowAgentRequestIcons: {\n\t\tdefault: false\n\t},\n\tmaxAttendeesToShow: {\n\t\tdefault: 5\n\t},\n\t// modal flag for Shift editing\n\tshowShiftEditModal: {\n\t\tdefault: false\n\t},\n\t// current event to be edited\n\teditEvent: {\n\t\tdefault: {}\n\t},\n\tcontextualPanelItems: {\n\t\tdefault: []\n\t\t/*\n\t\t\t[{\n\t\t\t\ticon: '',\n\t\t\t\tlabel: '',\n\t\t\t\tid: ''\n\t\t\t}]\n\t\t*/\n\t}\n};\n\nexport default {\n\tproperties: CalendarProps\n};\n","import get from 'lodash/get';\nimport forIn from 'lodash/forIn';\nimport reduce from 'lodash/reduce';\nimport mergeWith from 'lodash/mergeWith';\nimport isArray from 'lodash/isArray';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\nimport moment from 'moment-timezone';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tconvertAllEventTimes,\n\tconvertEventTimeToCalendarTimeZone,\n\teventDataToUTC,\n\tisFilterEmpty\n} from './utils.js';\nimport { getSections, getEvents, getTimeZones } from './apiProcessing.js';\nimport {\n\tCALENDAR_ACTIONS,\n\tCALENDAR_EVENTS,\n\tAPPLIED_FILTERS_OBJECT,\n\tNOW_POPOVER_OPENED_SET,\n\tNOW_MODAL_FOOTER_ACTION_CLICKED,\n\tSCHEDULE_DELETE_EVENT_API_ENDPOINT,\n\tSHOW_ALERT_MESSAGE\n} from '../constants.js';\nimport { DEFAULT_EVENT_TYPE_QUERY } from '../queries.js';\nimport {\n\tACTIONS,\n\tPOPOVER_STATE,\n\tSHIFT_EDITING_EVENTS,\n\tSHIFT_EDITING_MODAL_CONSTANTS,\n\tINTERNAL_FORMAT,\n\tGENERIC_EDIT_SHIFT_ERROR,\n\tNEW_EVENT_DROPDOWN_SOURCE_ID,\n\tEVENT_DELETE_ACTIONS,\n\tPOPOVERS\n} from './constants';\nimport { getPopoverTemplate } from './popover';\n//TODO: Have HTTP effect use endpoint provided in endpoint property instead of hard-coded path.\n\nimport {\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tSCHEDULE_ADMIN_ROLES\n} from '../constants.js';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n\tCREATE,\n\tEDIT,\n\tEVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED,\n\tEVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED,\n\tEVENT_REQUEST_MODAL_SET\n} from '../../schedule/sn-manager-event-request/constants.js';\nimport { t } from 'sn-translate';\nimport { SHOW_ALL_CLICKED } from '../../schedule/sn-manager-demand-forecast-popover/constants.js';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst bootstrap = ({ dispatch }) => {\n\tdispatch(CALENDAR_ACTIONS.GET_DEFAULT_EVENTS);\n};\n\nconst fetchForecastData = createHttpEffect(\n\t'/api/sn_shift_planning/shift_planning/forecast',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tsuccessActionType: CALENDAR_ACTIONS.FETCH_FORECAST_DATA_SUCCESS\n\t\t// errorActionType: CALENDAR_ACTIONS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\nconst fetchDefaultEvents = createGraphQLEffect(DEFAULT_EVENT_TYPE_QUERY, {\n\tsuccessActionType: CALENDAR_ACTIONS.DEFAULT_EVENTS_RETRIEVED,\n\terrorActionType: CALENDAR_ACTIONS.COULD_NOT_RETRIEVE_DATA\n});\n\nconst handleDefaultEventTypes = ({ action, dispatch, updateState, state }) => {\n\tlet eventCategoriesData = get(\n\t\taction,\n\t\t'payload.data.categoryQuery.table._results',\n\t\t[]\n\t);\n\tlet allowedAdhocEvents = get(\n\t\taction,\n\t\t'payload.data.eventQuery.table._results',\n\t\t[]\n\t).filter(e => get(e, 'active.value', false));\n\n\tlet eventCategories = getEventCategories(eventCategoriesData);\n\tconst defaultEventTypes = Object.keys(eventCategories).flatMap(key =>\n\t\teventCategories[key].defaultEvent ? eventCategories[key].sysId : []\n\t);\n\tconst newEventChoices = allowedAdhocEvents.map(event => {\n\t\tlet metadata = {};\n\n\t\ttry {\n\t\t\tmetadata = JSON.parse(\n\t\t\t\tget(event, `category._reference.metadata.value`, '{}')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t`Invalid metadata for event category ${get(\n\t\t\t\t\tevent,\n\t\t\t\t\t'name.displayValue',\n\t\t\t\t\t''\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\tid: get(event, 'sys_id.value'), //eventId,\n\t\t\tmetadata: metadata,\n\t\t\tcategoryId: get(event, 'category.value'),\n\t\t\tlabel: get(event, 'name.displayValue', '')\n\t\t};\n\t});\n\n\t// Check if current user has schedule admin role\n\tlet userRoles = get(action, 'payload.data.userRoles.user.allRoles', []);\n\tconst userIsScheduleAdmin =\n\t\tuserRoles.includes(SCHEDULE_ADMIN_ROLES.ADMIN) ||\n\t\tuserRoles.includes(SCHEDULE_ADMIN_ROLES.SCHEDULE_ADMIN);\n\n\tupdateState({\n\t\tpath: 'calendarControls',\n\t\tvalue: {\n\t\t\t...state.calendarControls,\n\t\t\tdefaultEventTypes: defaultEventTypes,\n\t\t\teventsByEventType: {},\n\t\t\teventMetadata: eventCategories,\n\t\t\tnewEventChoices,\n\t\t\tuserIsScheduleAdmin\n\t\t},\n\t\toperation: 'set'\n\t});\n\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA);\n};\nconst getEventCategories = eventCategoriesData => {\n\tlet eventCategories = {};\n\tfor (let e in eventCategoriesData) {\n\t\tconst sysId = get(eventCategoriesData[e], 'sys_id.value', null);\n\t\tif (!sysId) continue;\n\t\tif (!eventCategories.hasOwnProperty(sysId)) {\n\t\t\tlet metadata = {};\n\n\t\t\ttry {\n\t\t\t\tmetadata = JSON.parse(\n\t\t\t\t\tget(eventCategoriesData[e], 'metadata.value', '')\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Invalid metadata for event category ${get(\n\t\t\t\t\t\teventCategoriesData[e],\n\t\t\t\t\t\t'name.value',\n\t\t\t\t\t\t''\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst eventCategory = {\n\t\t\t\tsysId: sysId,\n\t\t\t\tname: get(eventCategoriesData[e], 'name.value', ''),\n\t\t\t\tmetadata: metadata,\n\t\t\t\tincludeEvents: get(\n\t\t\t\t\teventCategoriesData[e],\n\t\t\t\t\t'include_events.value',\n\t\t\t\t\tnull\n\t\t\t\t),\n\t\t\t\tenclosedUnder: get(\n\t\t\t\t\teventCategoriesData[e],\n\t\t\t\t\t'enclosed_under.value',\n\t\t\t\t\tnull\n\t\t\t\t),\n\t\t\t\tdefaultEvent: true\n\t\t\t};\n\t\t\teventCategories[sysId] = eventCategory;\n\t\t}\n\t}\n\tlet eventCategoriesIncludedInOthers = eventCategoriesData.flatMap(e =>\n\t\te.include_events.value ? e.include_events.value : []\n\t);\n\tlet eventCategoriesEnclosedInOthers = eventCategoriesData.flatMap(e =>\n\t\te.enclosed_under.value ? e.sys_id.value : []\n\t);\n\n\tfor (let e in eventCategoriesIncludedInOthers) {\n\t\teventCategories[\n\t\t\teventCategoriesIncludedInOthers[e]\n\t\t].defaultEvent = false;\n\t}\n\n\tfor (let e in eventCategoriesEnclosedInOthers) {\n\t\teventCategories[\n\t\t\teventCategoriesEnclosedInOthers[e]\n\t\t].defaultEvent = false;\n\t}\n\treturn eventCategories;\n};\n\nconst updateDateRange = ({ state, dispatch, action, updateProperties }) => {\n\tconst startDate = get(action, 'payload.startMoment', moment()).format(\n\t\t'YYYY-MM-DD'\n\t);\n\tconst endDate = get(action, 'payload.endMoment', moment()).format(\n\t\t'YYYY-MM-DD'\n\t);\n\n\tlet previousStartDate = get(state, 'properties.startDate', '');\n\tlet previousEndDate = get(state, 'properties.endDate', '');\n\n\t//Only make further changes if range dates have actually been changed\n\tif (previousStartDate !== startDate || previousEndDate !== endDate) {\n\t\tupdateProperties({\n\t\t\tstartDate,\n\t\t\tendDate\n\t\t});\n\n\t\tif (previousStartDate !== '' || previousEndDate !== '') {\n\t\t\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA);\n\t\t}\n\t}\n\n\tdispatch(NOW_POPOVER_OPENED_SET, { id: POPOVERS.FORECAST, value: false });\n};\n\nconst dispatchFetchForecastData = ({ state, dispatch }) => {\n\tconst {\n\t\tfilter,\n\t\tforecastEnabled,\n\t\tstartDate,\n\t\tendDate,\n\t\tcontextDate,\n\t\ttimezone\n\t} = state.properties;\n\n\tif (!forecastEnabled || !isFilterEmpty(filter)) {\n\t\treturn;\n\t}\n\n\tconst requestPayload = {\n\t\tstartDate: moment\n\t\t\t.tz(startDate || contextDate, timezone)\n\t\t\t.startOf('day')\n\t\t\t.utc()\n\t\t\t.format(INTERNAL_FORMAT.DATE_TIME),\n\t\tendDate: moment\n\t\t\t.tz(endDate || contextDate, timezone)\n\t\t\t.endOf('day')\n\t\t\t.utc()\n\t\t\t.format(INTERNAL_FORMAT.DATE_TIME),\n\t\tassignmentGroups: state.properties.assignmentGroups\n\t};\n\n\tdispatch(CALENDAR_ACTIONS.FETCH_FORECAST_DATA, {\n\t\tdata: requestPayload\n\t});\n};\n\nconst handleLiveReloadHandler = ({ state, dispatch }) => {\n\tconst events = get(state, 'calendarControls.defaultEventTypes', []);\n\tfor (let i in events) {\n\t\tdispatch(CALENDAR_ACTIONS.FETCH_CALENDAR_DATA, {\n\t\t\tendpoint: get(state, 'properties.endpoint', ''),\n\t\t\tdata: {\n\t\t\t\tassignmentGroups: get(state, 'properties.assignmentGroups', ''),\n\t\t\t\tindividualAgents: get(state, 'properties.individualAgents', ''),\n\t\t\t\tstartDate: get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.startDate',\n\t\t\t\t\tmoment().format('YYYY-MM-DD')\n\t\t\t\t),\n\t\t\t\tendDate: get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.endDate',\n\t\t\t\t\tmoment().format('YYYY-MM-DD')\n\t\t\t\t),\n\t\t\t\tpublished: get(state, 'properties.isPublished', false),\n\t\t\t\teventCategories: [events[i]],\n\t\t\t\tfilter: get(state, 'properties.filter', {})\n\t\t\t}\n\t\t});\n\t}\n\n\tdispatchFetchForecastData({ state, dispatch });\n};\n\nconst retrieveCalendarData = createHttpEffect(\n\tSCHEDULE_PROPERTY_DEFAULTS.ENDPOINT,\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\t//pathParams: ['endpoint'],\n\t\tsuccessActionType: CALENDAR_ACTIONS.RETRIEVED_CALENDAR_DATA,\n\t\terrorActionType: CALENDAR_ACTIONS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\nconst processForecastData = ({ action, state, updateState }) => {\n\tconst forecastData = get(action, 'payload.result', []);\n\tconst fail = () => {\n\t\tupdateState({\n\t\t\tpath: `forecastData`,\n\t\t\tvalue: null,\n\t\t\toperation: 'set',\n\t\t\tshouldRender: false\n\t\t});\n\t};\n\n\tif (isEmpty(forecastData)) {\n\t\tfail();\n\t\treturn;\n\t}\n\n\tconst assignmentGroups = uniq(\n\t\tget(state, 'properties.assignmentGroups', '').split(',')\n\t);\n\n\tconst forecastByGroup = assignmentGroups.reduce((map, group) => {\n\t\tmap[group] = {};\n\t\treturn map;\n\t}, {});\n\n\tfor (const { timestamp, ...groupForecastMap } of forecastData) {\n\t\tconst timestampInCalendar = convertEventTimeToCalendarTimeZone(\n\t\t\ttimestamp,\n\t\t\t'UTC',\n\t\t\tstate.properties.timezone\n\t\t);\n\t\tfor (const groupId of assignmentGroups) {\n\t\t\t// when forecast API failed to return forecast data for a certain group on the Calendar\n\t\t\t// we fail this parsing process\n\t\t\tif (!groupForecastMap.hasOwnProperty(groupId)) {\n\t\t\t\tfail();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tforecastByGroup[groupId][timestampInCalendar] = get(\n\t\t\t\tgroupForecastMap,\n\t\t\t\t`${groupId}.forecast`,\n\t\t\t\t0\n\t\t\t);\n\t\t}\n\t}\n\n\tupdateState({\n\t\tpath: `forecastData`,\n\t\tvalue: forecastByGroup,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nconst processCalendarData = ({ action, dispatch, updateState }) => {\n\tlet eventQueried = get(action, 'payload.result.eventsQueried');\n\n\tif (!eventQueried) {\n\t\treturn;\n\t}\n\n\tupdateState({\n\t\tpath: `calendarControls.eventsByEventType.${eventQueried}`,\n\t\tvalue: get(action, `payload.result.shiftData`, {}),\n\t\toperation: 'set',\n\t\t// to avoid flickering issue, don't trigger a render until all responses are processed\n\t\tshouldRender: false\n\t});\n\n\t// concat all timezones associated to each event_type to calendarControls.timeZones\n\t// there could be duplicates but we'll eliminate them later in updateScheduleSpans()\n\tupdateState({\n\t\tpath: `calendarControls.timeZones`,\n\t\tvalue: getTimeZones(get(action, 'payload.result', {})),\n\t\toperation: 'concat',\n\t\tshouldRender: false\n\t});\n\n\tdispatch(CALENDAR_ACTIONS.CHECK_FOR_SPAN_UPDATE);\n};\n\nconst handleRetrievalError = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'calendarControls',\n\t\tvalue: {\n\t\t\tloaded: true,\n\t\t\terror: get(action, 'error', true)\n\t\t},\n\t\toperation: 'merge'\n\t});\n};\n\nconst checkForSpanUpdate = ({ state, dispatch }) => {\n\tlet eventsByEventType = get(\n\t\tstate,\n\t\t'calendarControls.eventsByEventType',\n\t\t{}\n\t);\n\n\tif (\n\t\tget(state, 'calendarControls.loaded', false) ||\n\t\tObject.keys(eventsByEventType).length >=\n\t\t\tget(state, 'calendarControls.defaultEventTypes').length\n\t) {\n\t\tdispatch(CALENDAR_ACTIONS.UPDATE_SCHEDULE_SPANS, {\n\t\t\teventsByEventType\n\t\t});\n\t}\n};\n\nconst updateScheduleSpans = ({ action, state, updateState }) => {\n\t//Take data for all previous API calls for each event type and combine them for processing.\n\tlet eventsByEventType = get(action, 'payload.eventsByEventType', {});\n\tlet dateFormatRegex = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n\n\tfor (let [eventTypeKey, eventTypeValue] of Object.entries(\n\t\teventsByEventType\n\t)) {\n\t\tfor (let [agentKey, agentValue] of Object.entries(eventTypeValue)) {\n\t\t\t//data parameter for each assignment group is normally an array of objects,\n\t\t\t//each representing a schedule span.\n\t\t\t//We need to temporarily convert these parameters as objects, with agent sys id as key.\n\t\t\teventsByEventType[eventTypeKey][agentKey].data = reduce(\n\t\t\t\tagentValue.data,\n\t\t\t\t(result, value) => {\n\t\t\t\t\tif (get(value, 'sysId', '')) result[value.sysId] = value;\n\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\t\t}\n\t}\n\n\tlet combinedEvents = reduce(\n\t\teventsByEventType,\n\t\t(result, events) => {\n\t\t\tmergeWith(result, events, (objValue, srcValue, key) => {\n\t\t\t\t//For the event information data split by date, make sure to concatenate the arrays\n\t\t\t\tif (isArray(objValue) && dateFormatRegex.test(key))\n\t\t\t\t\treturn objValue.concat(srcValue);\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\t\t{}\n\t);\n\n\tfor (let [agentKey, agentValue] of Object.entries(combinedEvents)) {\n\t\t//convert data parameters back to arrays for consistency\n\t\tcombinedEvents[agentKey].data = reduce(\n\t\t\tagentValue.data,\n\t\t\t(result, value) => {\n\t\t\t\tresult.push(value);\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t}\n\n\tlet processedEvents = getEvents(\n\t\tcombinedEvents,\n\t\tget(state, 'properties.timezone', {})\n\t);\n\n\t// fallback to default timezone list when server does not return any timezone\n\tconst timeZones = isEmpty(state.calendarControls.timeZones)\n\t\t? state.properties.availableTimezones\n\t\t: uniqBy(state.calendarControls.timeZones, 'name');\n\n\tupdateState({\n\t\tpath: 'calendarControls',\n\t\tvalue: {\n\t\t\tloaded: true,\n\t\t\terror: false,\n\t\t\tsections: getSections(combinedEvents),\n\t\t\tevents: processedEvents,\n\t\t\ttimeZones\n\t\t},\n\t\toperation: 'assign'\n\t});\n};\n\nconst handlePopoverOpened = ({ action, state, updateProperties, dispatch }) => {\n\tconst {\n\t\tpopoverShowEditButton,\n\t\tpopoverShowDeleteButton,\n\t\tshowAgentRequestIcons,\n\t\tmaxAttendeesToShow\n\t} = state.properties;\n\tconst { user, category } = action.payload.event;\n\tlet currentUserSysId = get(state, 'properties.currentUser.sys_id', null);\n\n\tconst isEventForCurrentUser = currentUserSysId === get(user, 'sysId', '');\n\n\tlet showTimeOffRequestIcon =\n\t\tshowAgentRequestIcons &&\n\t\tisEventForCurrentUser &&\n\t\tcategory === CALENDAR_EVENTS.WORK_SHIFT.CATEGORY;\n\tlet showShiftSwapRequestIcon =\n\t\tshowAgentRequestIcons &&\n\t\tisEventForCurrentUser &&\n\t\tcategory === CALENDAR_EVENTS.WORK_SHIFT.CATEGORY;\n\tconst userIsScheduleAdmin = get(\n\t\tstate,\n\t\t'calendarControls.userIsScheduleAdmin',\n\t\tfalse\n\t);\n\tupdateProperties({\n\t\tpopoverContentState: {\n\t\t\tvalue: POPOVER_STATE.PENDING,\n\t\t\tid: get(action, 'payload.event.id', 'my_event'),\n\t\t\ttimestamp: get(action, 'payload.timestamp')\n\t\t}\n\t});\n\tgetPopoverTemplate(\n\t\taction,\n\t\tupdateProperties,\n\t\tdispatch,\n\t\tpopoverShowEditButton && userIsScheduleAdmin,\n\t\tpopoverShowDeleteButton && userIsScheduleAdmin,\n\t\tshowShiftSwapRequestIcon,\n\t\tshowTimeOffRequestIcon,\n\t\tmaxAttendeesToShow\n\t);\n};\n\nconst handlePopoverClosed = ({ updateProperties }) => {\n\tupdateProperties({\n\t\tpopoverContentState: { value: POPOVER_STATE.DESTROYED },\n\t\tpopoverTemplate: null\n\t});\n};\n\n/**\n * Opens Edit shift modal and sets in state editEvent the selected event\n * from the calendar, if event to edit is a workshift.\n * Otherwise opens event request\n */\nconst handleOpenShiftEditModal = ({ action, state, dispatch, updateState }) => {\n\tconst editEvent = {\n\t\t...get(action, 'payload', {}),\n\t\tcomponentId: Math.random()\n\t\t\t.toString(36)\n\t\t\t.substring(7)\n\t};\n\n\tlet eventCategory = get(editEvent, 'category', '');\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tif (eventCategory === CALENDAR_EVENTS.WORK_SHIFT.CATEGORY) {\n\t\tupdateState({\n\t\t\toperation: 'merge',\n\t\t\tpath: '',\n\t\t\tvalue: {\n\t\t\t\tshowShiftEditModal: true,\n\t\t\t\teditEvent\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconst modalSchema = get(\n\t\t\tstate,\n\t\t\t`calendarControls.eventMetadata.${eventCategory}.metadata.edit`,\n\t\t\t{}\n\t\t);\n\t\tconst modalEventCategoryId = eventCategory;\n\t\tconst modalEventId = get(editEvent, 'schedule.eventType.sysId', '');\n\t\tconst modalTitle = get(editEvent, 'title', '');\n\n\t\tconst startDateTime = get(editEvent, 'start', ' ');\n\t\tconst endDateTime = get(editEvent, 'end', ' ');\n\t\tconst readInTimezone = get(editEvent, 'readInTimezone', null);\n\t\tconst calendarTimezone = get(state, 'properties.timezone', null); // if not found moment defaults to local time\n\n\t\tconst convertedStartDateTime = convertEventTimeToCalendarTimeZone(\n\t\t\tstartDateTime,\n\t\t\treadInTimezone,\n\t\t\tcalendarTimezone\n\t\t);\n\t\tconst convertedEndDateTime = convertEventTimeToCalendarTimeZone(\n\t\t\tendDateTime,\n\t\t\treadInTimezone,\n\t\t\tcalendarTimezone\n\t\t);\n\n\t\tlet startDateTimeSplit = convertedStartDateTime.split(' ');\n\t\tlet endDateTimeSplit = convertedEndDateTime.split(' ');\n\n\t\tlet modalFormData = {\n\t\t\ttitleValue: modalTitle,\n\t\t\tdescriptionValue: get(editEvent, 'description', ''),\n\t\t\tstartDateValue: startDateTimeSplit[0],\n\t\t\tendDateValue: endDateTimeSplit[0],\n\t\t\tstartTimeValue: startDateTimeSplit[1],\n\t\t\tendTimeValue: endDateTimeSplit[1],\n\t\t\tselectedAttendees: _getAssigneesForEvent(\n\t\t\t\teditEvent,\n\t\t\t\tget(state, 'calendarControls.events', [])\n\t\t\t),\n\t\t\tadditionalSelectors: []\n\t\t};\n\n\t\tupdateState({\n\t\t\tshowNewEventModal: true,\n\t\t\tmodalEventSpanId: get(\n\t\t\t\teditEvent,\n\t\t\t\t'schedule.workSchedule.sysId',\n\t\t\t\tget(editEvent, 'record_id', '')\n\t\t\t),\n\t\t\tmodalSchema,\n\t\t\tmodalMode: EDIT,\n\t\t\tmodalEventCategoryId,\n\t\t\tmodalEventId,\n\t\t\tmodalTitle,\n\t\t\tmodalFormData\n\t\t});\n\t}\n};\n\nconst _getAssigneesForEvent = (editEvent, allEvents) => {\n\tconst attendees = {};\n\n\tconst eventId = get(editEvent, 'schedule.workSchedule.sysId', null);\n\n\tallEvents.map(event => {\n\t\tif (get(event, 'schedule.workSchedule.sysId', '') === eventId) {\n\t\t\tvar userId = get(event, 'user.sysId', '');\n\n\t\t\tif (userId !== '') attendees[userId] = get(event, 'user.name', '');\n\t\t}\n\t});\n\n\tlet result = Object.keys(attendees).map(key => {\n\t\treturn { id: key, label: attendees[key] };\n\t});\n\n\tif (result.length <= 0)\n\t\treturn [\n\t\t\t{\n\t\t\t\tid: get(editEvent, 'user.sysId', ''),\n\t\t\t\tlabel: get(editEvent, 'user.name', '')\n\t\t\t}\n\t\t];\n\telse return result;\n};\n\n/**\n * Closed the edit shift modal.\n */\nconst handleModalClose = ({ updateState, action }) => {\n\tif (get(action, 'payload.modal', '') === 'edit-event-modal') {\n\t\tupdateState({\n\t\t\toperation: 'merge',\n\t\t\tpath: '',\n\t\t\tvalue: {\n\t\t\t\terrorMessage: '',\n\t\t\t\tshowShiftEditModal: false,\n\t\t\t\teditEvent: false\n\t\t\t}\n\t\t});\n\t} else if (get(action, 'payload.modal', '') === 'delete-event-modal') {\n\t\tupdateState({\n\t\t\tshowDeleteEventModal: false,\n\t\t\teventToDelete: null,\n\t\t\terrorMessage: null\n\t\t});\n\t}\n};\n\n/**\n * Retrieve from the state the original values of the cmn_schedule_span\n * @param {*} spanId sysId of cmn_schedule_span used to represent an agent schedule event\n * @param {*} state Component state\n */\nconst _getEventOriginalSpanMetadata = (spanId, state) => {\n\tvar calendarTimezone = get(state, 'properties.timezone', null); // if not found moment defaults to local time\n\tif (get(state, 'editEvent.record_id') === spanId) {\n\t\treturn {\n\t\t\tstartDateTime: convertEventTimeToCalendarTimeZone(\n\t\t\t\tget(state, 'editEvent.start'),\n\t\t\t\tget(state, 'editEvent.readInTimezone', null),\n\t\t\t\tcalendarTimezone\n\t\t\t),\n\t\t\tendDateTime: convertEventTimeToCalendarTimeZone(\n\t\t\t\tget(state, 'editEvent.end'),\n\t\t\t\tget(state, 'editEvent.readInTimezone', null),\n\t\t\t\tcalendarTimezone\n\t\t\t),\n\t\t\ttitle: get(state, 'editEvent.title'),\n\t\t\tisChildEvent: false,\n\t\t\tspanId\n\t\t};\n\t} else {\n\t\treturn get(state, 'editEvent.childEvents', [])\n\t\t\t.filter(childEvent => get(childEvent, 'record_id') === spanId)\n\t\t\t.map(childEvent => {\n\t\t\t\treturn {\n\t\t\t\t\tstartDateTime: convertEventTimeToCalendarTimeZone(\n\t\t\t\t\t\tget(childEvent, 'start'),\n\t\t\t\t\t\tget(childEvent, 'readInTimezone'),\n\t\t\t\t\t\tcalendarTimezone\n\t\t\t\t\t),\n\t\t\t\t\tendDateTime: convertEventTimeToCalendarTimeZone(\n\t\t\t\t\t\tget(childEvent, 'end'),\n\t\t\t\t\t\tget(childEvent, 'readInTimezone'),\n\t\t\t\t\t\tcalendarTimezone\n\t\t\t\t\t),\n\t\t\t\t\ttitle: get(childEvent, 'title'),\n\t\t\t\t\tisChildEvent: true,\n\t\t\t\t\tspanId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.pop();\n\t}\n};\n\n/**\n * Edits stagedValue with updates to the end/start time for a particular entry.\n */\nconst handleRecordTimeValueChanged = ({ action, updateState, state }) => {\n\tlet eventSpan = get(action, 'payload.name'); // expected name format \"span_sys_id-type[start||end]-origianDateTime\"\n\tlet newTime = get(action, 'payload.value');\n\tif (!isEmpty(eventSpan)) {\n\t\tconst [spanId, type, timeFormat] = eventSpan.split('-');\n\t\tif (!isEmpty(newTime)) {\n\t\t\tlet currentValue = get(state, `editEvent.stagedValue.${spanId}`);\n\t\t\tif (isEmpty(currentValue)) {\n\t\t\t\tcurrentValue = _getEventOriginalSpanMetadata(spanId, state);\n\t\t\t}\n\n\t\t\tif (!isEmpty(get(action, 'payload.error', {}))) {\n\t\t\t\tconst message = get(\n\t\t\t\t\taction,\n\t\t\t\t\t'payload.error.message',\n\t\t\t\t\tt('There\\'s an issue with the time provided.')\n\t\t\t\t);\n\n\t\t\t\tupdateState({ errorMessage: message });\n\n\t\t\t\tupdateState({\n\t\t\t\t\toperation: 'merge',\n\t\t\t\t\tpath: `editEvent.stagedValue.${spanId}`,\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\t...currentValue,\n\t\t\t\t\t\t[`invalid-${type}`]: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateState({\n\t\t\t\t\toperation: 'merge',\n\t\t\t\t\tpath: `editEvent.stagedValue.${spanId}`,\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\t...currentValue,\n\t\t\t\t\t\ttimeFormat,\n\t\t\t\t\t\t[`new-${type}`]: newTime,\n\t\t\t\t\t\t[`invalid-${type}`]: false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Set delete flag to true on stagedValue for the schedule span entry\n */\nconst handleModalActionSetToDelete = ({ action, state, updateState }) => {\n\tconst spanId = get(action, 'payload.record_id');\n\tconst originalEntry = _getEventOriginalSpanMetadata(spanId, state);\n\tupdateState({\n\t\toperation: 'merge',\n\t\tpath: `editEvent.stagedValue.${spanId}`,\n\t\tvalue: {\n\t\t\t...originalEntry,\n\t\t\tdelete: true\n\t\t}\n\t});\n};\n\n/**\n * Returns false if eventData object was marked to delete in the shift edit modal\n * @param {{setToDelete: boolean, ...}} eventData\n */\nconst filterOutEventsMarkedToDelete = eventData => {\n\treturn !get(eventData, 'delete', false);\n};\n\n/**\n * Spec payload for updateAPI\n *\tpayload\t={\tagentScheduleSysId: string,\n * \t\t\t\tisPublished: boolean,\n * \t\t\t\ttimezone: string,\n * \t\t\t\tworkEvent: JSONEvent,\n *\t\t\t\teventType: string,\n * \t\t\t\tbreaks: [JSONEvent...]\n * }\n * Spec JSONEvent: {\n * \t\tstartDateTime: systemDatetimeString,\n * \t\tendDateTime: systemDatetimeString,\n * \t\ttitle: string,\n * }\n * Spec systemDatetimeString: 'YYYY-MM-DD HH:mm:ss'\n */\nconst _getShiftEditPayload = state => {\n\tconst stagedValue = get(state, 'editEvent.stagedValue', {});\n\tlet payload = {};\n\tpayload.eventCategory = get(\n\t\tstate,\n\t\t'editEvent.schedule.eventType.category.sys_id',\n\t\t''\n\t);\n\tpayload.agentScheduleSysId = get(state, 'editEvent.schedule.sysId');\n\tconst user = get(state, 'editEvent.user', null);\n\tpayload.attendees = user\n\t\t? [\n\t\t\t{\n\t\t\t\tid: get(user, 'sysId', ''),\n\t\t\t\tname: get(user, 'name', '')\n\t\t\t}\n\t\t  ] // eslint-disable-line\n\t\t: [];\n\tpayload.timezone = get(state, 'properties.timezone', null);\n\t// Original values will be overwritten if event exist in state.editEvent.stagedValue\n\tpayload.workEvent = _getEventOriginalSpanMetadata(\n\t\tget(state, 'editEvent.record_id'),\n\t\tstate\n\t);\n\tpayload.eventType = get(state, 'editEvent.schedule.eventType.sysId', '');\n\tpayload.startDateTime = moment\n\t\t.tz(payload.workEvent.startDateTime, payload.timezone)\n\t\t.utc()\n\t\t.format(INTERNAL_FORMAT.DATE_TIME);\n\tpayload.breaks = get(state, 'editEvent.childEvents', []).map(evt => {\n\t\treturn _getEventOriginalSpanMetadata(get(evt, 'record_id'), state);\n\t});\n\tforIn(stagedValue, (eventObj, spanId) => {\n\t\teventObj.startDateTime = get(eventObj, 'new-start', false)\n\t\t\t? moment(get(eventObj, 'startDateTime'), INTERNAL_FORMAT.DATE_TIME)\n\t\t\t\t.hours(\n\t\t\t\t\tmoment(\n\t\t\t\t\t\tget(eventObj, 'new-start'),\n\t\t\t\t\t\tget(eventObj, 'timeFormat')\n\t\t\t\t\t).hours()\n\t\t\t\t)\n\t\t\t\t.minutes(\n\t\t\t\t\tmoment(\n\t\t\t\t\t\tget(eventObj, 'new-start'),\n\t\t\t\t\t\tget(eventObj, 'timeFormat')\n\t\t\t\t\t).minutes()\n\t\t\t\t)\n\t\t\t\t\t.format(INTERNAL_FORMAT.DATE_TIME) // eslint-disable-line\n\t\t\t: get(eventObj, 'startDateTime');\n\t\teventObj.endDateTime = get(eventObj, 'new-end', false)\n\t\t\t? moment(get(eventObj, 'endDateTime'), INTERNAL_FORMAT.DATE_TIME)\n\t\t\t\t.hours(\n\t\t\t\t\tmoment(\n\t\t\t\t\t\tget(eventObj, 'new-end'),\n\t\t\t\t\t\tget(eventObj, 'timeFormat')\n\t\t\t\t\t).hours()\n\t\t\t\t)\n\t\t\t\t.minutes(\n\t\t\t\t\tmoment(\n\t\t\t\t\t\tget(eventObj, 'new-end'),\n\t\t\t\t\t\tget(eventObj, 'timeFormat')\n\t\t\t\t\t).minutes()\n\t\t\t\t)\n\t\t\t\t\t.format(INTERNAL_FORMAT.DATE_TIME) // eslint-disable-line\n\t\t\t: get(eventObj, 'endDateTime');\n\n\t\tif (get(stagedValue, `${spanId}.isChildEvent`, false)) {\n\t\t\tpayload.breaks = payload.breaks.filter(breakInstance => {\n\t\t\t\treturn spanId !== breakInstance.spanId;\n\t\t\t});\n\t\t\tpayload.breaks.push(eventObj);\n\t\t} else {\n\t\t\tpayload.workEvent = eventObj;\n\t\t}\n\t});\n\t// switch to UTC and remove breaks marked to be deleted:\n\tpayload.workEvent = eventDataToUTC(payload.workEvent, payload.timezone);\n\tpayload.breaks = payload.breaks\n\t\t.filter(filterOutEventsMarkedToDelete)\n\t\t.map(k => {\n\t\t\treturn eventDataToUTC(k, payload.timezone);\n\t\t});\n\treturn payload;\n};\n\n/**\n * When available this handler will use the payload generated\n * in the edit shift modal to create/edit shift event data\n */\nconst handleSaveShiftChanges = createHttpEffect(\n\tSHIFT_EDITING_MODAL_CONSTANTS.EDIT_AGENT_SCHEDULE_API_ENDPOINT,\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\t//pathParams: ['endpoint'],\n\t\tsuccessActionType: SHIFT_EDITING_EVENTS.SAVE_CHANGES_SUCCESS,\n\t\terrorActionType: SHIFT_EDITING_EVENTS.SAVE_CHANGES_ERROR\n\t}\n);\n\n/**\n * Handles click action on edit shift modal footer buttons\n */\n\nconst handleModalActionClick = ({ action, dispatch, state, updateState }) => {\n\tconst modalSource = get(action, 'payload.modal');\n\tconst actionType = get(action, 'payload.action.label');\n\tif (modalSource === 'delete-event-modal' && actionType === t('Delete')) {\n\t\tdispatch(EVENT_DELETE_ACTIONS.SUBMIT_DELETE_CONFIRMATION_DIALOG);\n\t} else if (\n\t\tmodalSource === 'delete-event-modal' &&\n\t\tactionType === t('Cancel')\n\t) {\n\t\tdispatch(EVENT_DELETE_ACTIONS.CLOSE_DELETE_CONFIRMATION_DIALOG);\n\t} else if (\n\t\tmodalSource === 'edit-event-modal' &&\n\t\tactionType === SHIFT_EDITING_MODAL_CONSTANTS.MODAL_ACTION_LABEL_CANCEL\n\t) {\n\t\tdispatch(SHIFT_EDITING_EVENTS.CLOSE_SHIFT_EDIT_MODAL, {\n\t\t\tmodal: 'edit-event-modal'\n\t\t});\n\t} else if (\n\t\tmodalSource === 'edit-event-modal' &&\n\t\tactionType === SHIFT_EDITING_MODAL_CONSTANTS.MODAL_ACTION_LABEL_SAVE\n\t) {\n\t\tlet edits = _getShiftEditPayload(state);\n\n\t\tif (!_checkIfStartDatetimesAreBeforeEndDateTimes(edits)) {\n\t\t\tupdateState({\n\t\t\t\terrorMessage: t('Start datetimes must be before end datetimes.')\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch(SHIFT_EDITING_EVENTS.SAVE_CHANGES, {\n\t\t\t\tdata: edits\n\t\t\t});\n\t\t}\n\t}\n};\n\nconst _checkIfStartDatetimesAreBeforeEndDateTimes = edits => {\n\tlet workStartMoment = moment(get(edits, 'workEvent.startDateTime', ''));\n\tlet workEndMoment = moment(get(edits, 'workEvent.endDateTime', ''));\n\n\tif (!workStartMoment.isBefore(workEndMoment)) return false;\n\n\tfor (let { startDateTime, endDateTime } of get(edits, 'breaks', [])) {\n\t\tlet breakStartMoment = moment(startDateTime);\n\t\tlet breakEndMoment = moment(endDateTime);\n\n\t\tif (!breakStartMoment.isBefore(breakEndMoment)) return false;\n\t}\n\n\treturn true;\n};\n\n/**\n * Handles API edit shift response, it will close the modal, popover and refresh the\n * calendar data\n */\nconst handleSaveShiftAPIResult = ({ dispatch }) => {\n\tdispatch(SHIFT_EDITING_EVENTS.CLOSE_SHIFT_EDIT_MODAL, {\n\t\tmodal: 'edit-event-modal'\n\t});\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA);\n};\n\n/**\n * Handles API edit shift error response, it will display an alert with backend error message\n */\nconst handleSaveShiftAPIError = ({ updateState, action }) => {\n\tlet errorMessage = get(\n\t\taction,\n\t\t'payload.data.result.error',\n\t\tGENERIC_EDIT_SHIFT_ERROR\n\t);\n\tupdateState({ errorMessage });\n};\n\n/**\n * Dismisses shift modal alert message\n */\nconst dismissErrorMessage = ({ updateState }) => {\n\tupdateState({ errorMessage: '' });\n};\n\n/**\n * Opens Shift Swap modal and sets its properties to autopopulate requestor info\n */\nconst handleOpenShiftSwapModal = ({ action, dispatch, updateState }) => {\n\tconst swapEvent = get(action, 'payload', {});\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tupdateState({\n\t\tpath: 'shiftSwapRequestDetails',\n\t\tvalue: swapEvent,\n\t\toperation: 'set'\n\t});\n};\n\nconst handleOpenTimeOffModal = ({ action, dispatch, updateState }) => {\n\tconst timeOffEvent = get(action, 'payload', {});\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tupdateState({\n\t\tpath: 'timeOffRequestDetails',\n\t\tvalue: timeOffEvent,\n\t\toperation: 'set'\n\t});\n};\n\nconst updateCalendarTimeZone = ({\n\tstate,\n\taction,\n\tupdateState,\n\tupdateProperties\n}) => {\n\tvar updatedTimeZone = get(action, 'payload.to', 'GMT');\n\n\tupdateProperties({\n\t\ttimezone: updatedTimeZone\n\t});\n\n\tvar convertedEvents = convertAllEventTimes(\n\t\tget(state, 'calendarControls.events', []),\n\t\tupdatedTimeZone,\n\t\ttrue,\n\t\tfalse\n\t);\n\n\tupdateState({\n\t\tpath: 'calendarControls.events',\n\t\tvalue: convertedEvents,\n\t\toperation: 'set'\n\t});\n};\n\nconst updateCalendarView = ({ action, updateProperties }) => {\n\tupdateProperties({\n\t\tstartingView: action.payload.to === 'TIMELINE_DAY' ? 'DAY' : 'WEEK'\n\t});\n};\n\nconst changeCalendarContextDate = ({ action, state, updateProperties }) => {\n\tconst calendarTimezone = get(state, 'properties.timezone', null);\n\tupdateProperties({\n\t\tcontextDate: moment.tz(\n\t\t\taction.payload.contextDate,\n\t\t\tstate.properties.dateFormat,\n\t\t\tcalendarTimezone\n\t\t)\n\t});\n};\n\nconst updateCalendarContextDate = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'calendarControls.contextDate',\n\t\toperation: 'set',\n\t\tvalue: get(action, 'payload.toMoment', moment())\n\t});\n};\n\n// Get all applied values from all filter configs in the form of object\nconst getAppliedFilters = ({ action, updateProperties, dispatch }) => {\n\tvar filter = get(action, 'payload', {});\n\tupdateProperties({\n\t\tfilter: filter\n\t});\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA);\n};\n\n// Opens sn-manager-event-request modal and sets modalForm metadata\nconst openEventRequestModal = ({ action, state, updateState }) => {\n\tconst { contextDate } = state.calendarControls;\n\tconst modalSchema = get(action, 'payload.items[0].metadata.create', {});\n\tconst modalEventCategoryId = get(action, 'payload.items[0].categoryId', '');\n\tconst modalEventId = get(action, 'payload.items[0].id', '');\n\tconst modalTitle = t(\n\t\t'New {0} event',\n\t\tget(action, 'payload.items[0].label', '')\n\t);\n\n\t// populate start & end date time fields\n\tconst today = moment();\n\tconst contextDateMoment = moment(contextDate);\n\tconst startDateTimeMoment = contextDateMoment.clone();\n\n\tif (contextDateMoment.isSame(today, 'day')) {\n\t\t// start time = now() up-rounded to the nearest 1 hour\n\t\t// e.g. 10:00:00 -> 11:00:00, 10:00:01 -> 11:00:00, 10:59:59 -> 11:00:00\n\t\tstartDateTimeMoment\n\t\t\t.hours(0)\n\t\t\t.add(today.hours() + 1, 'hours')\n\t\t\t.startOf('hours');\n\t} else {\n\t\t// when users change calendar's context date by clicking calendar's left/right arrows or select a day in week view\n\t\t// reset start time to 8am so new events will start at 8am (similar to Outlook Calendar)\n\t\tstartDateTimeMoment.hours(8).startOf('hours');\n\t}\n\n\t// end time = start time + 30 minutes (i.e. event duration is 30 minutes)\n\tconst endDateTimeMoment = startDateTimeMoment.clone().add(30, 'minutes');\n\n\tupdateState({\n\t\tshowNewEventModal: true,\n\t\tshowNewEvent: false,\n\t\tmodalEventSpanId: '',\n\t\tmodalSchema,\n\t\tmodalMode: CREATE,\n\t\tmodalEventCategoryId,\n\t\tmodalEventId,\n\t\tmodalTitle,\n\t\tmodalFormData: {\n\t\t\ttitleValue: '',\n\t\t\tdescriptionValue: '',\n\t\t\tselectedAttendees: [],\n\t\t\tadditionalSelectors: [],\n\t\t\tstartDateValue: startDateTimeMoment.format('YYYY-MM-DD'),\n\t\t\tstartTimeValue: startDateTimeMoment.format('HH:mm'),\n\t\t\tendDateValue: endDateTimeMoment.format('YYYY-MM-DD'),\n\t\t\tendTimeValue: endDateTimeMoment.format('HH:mm')\n\t\t}\n\t});\n};\n\nconst dropdownItemSelectedHandler = ({ action, updateState, dispatch }) => {\n\tif (get(action, 'payload.source') === NEW_EVENT_DROPDOWN_SOURCE_ID) {\n\t\tdispatch(CALENDAR_ACTIONS.OPEN_NEW_EVENT_MODAL, action.payload);\n\t\tupdateState({\n\t\t\tnewEventItem: action.payload.value\n\t\t});\n\t}\n};\n\nconst newEventFromPopoverHandler = ({ action, dispatch }) => {\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tdispatch(CALENDAR_ACTIONS.OPEN_NEW_EVENT_MODAL, action.payload);\n};\n\nconst newEventButtonClickHandler = ({ updateState }) => {\n\tupdateState({ showNewEvent: true });\n};\n\nconst newEventSuccessHandler = ({ action, updateState, dispatch }) => {\n\tupdateState({ showNewEventModal: false, newEventItem: [] });\n\tconst actionInfo = get(action, 'meta.request.data', {});\n\tconst { mode, eventCategory } = actionInfo;\n\n\tif (\n\t\tmode === CREATE &&\n\t\teventCategory === CALENDAR_EVENTS.TIME_OFF.CATEGORY\n\t) {\n\t\tconst alertId = 'time-off-submission-success';\n\t\tconst alertMessage = t('Time Off request submitted successfully');\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid: alertId,\n\t\t\tstatus: 'info',\n\t\t\ticon: 'info-circle-outline',\n\t\t\taction: { type: 'dismiss' },\n\t\t\tautoHide: true,\n\t\t\tcontent: alertMessage\n\t\t});\n\t}\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA);\n};\n\nconst closeNewEventRequestModal = ({ updateState }) => {\n\tupdateState({ showNewEventModal: false, newEventItem: [] });\n};\n\nconst showDemandForecastPopover = ({ action, state, updateState }) => {\n\tconst { positionTarget, content } = action.payload;\n\n\t// close existing now-popover instance before opening a new one\n\tupdateState({\n\t\tdemandForecastPopoverProps: {\n\t\t\topened: false\n\t\t}\n\t});\n\n\t// need to use setTimeout because updateState will merge subsequent calls into one\n\tsetTimeout(() => {\n\t\tupdateState({\n\t\t\tdemandForecastPopoverProps: {\n\t\t\t\t...state.demandForecastPopoverProps,\n\t\t\t\topened: true,\n\t\t\t\tpositionTarget\n\t\t\t},\n\t\t\tdemandForecastPopoverContent: content\n\t\t});\n\t}, 100);\n};\n\nconst handlePopoverOpenedSet = ({ action, state, updateState }) => {\n\tconst { id, value } = action.payload;\n\n\tif (id === POPOVERS.FORECAST) {\n\t\tupdateState({\n\t\t\tpath: 'demandForecastPopoverProps',\n\t\t\toperation: 'assign',\n\t\t\tvalue: {\n\t\t\t\topened: value,\n\t\t\t\tpositionTarget: value\n\t\t\t\t\t? state.demandForecastPopoverProps.positionTarget\n\t\t\t\t\t: null // reset positionTarget to null when popover is closed\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst handleForecastPopoverShowAllClicked = ({\n\taction,\n\tstate,\n\tupdateProperties,\n\tdispatch\n}) => {\n\tconst contextDate = moment.tz(\n\t\taction.payload.dateTime,\n\t\tstate.properties.dateFormat,\n\t\tstate.properties.timezone\n\t);\n\tupdateProperties({\n\t\tstartingView: 'DAY',\n\t\tcontextDate\n\t});\n\tdispatch(NOW_POPOVER_OPENED_SET, { id: POPOVERS.FORECAST, value: false });\n};\n\n/**\n * Dismisses both event popover and delete event confirmation Dialog\n * @param {{updateState, dispatch}} coeffects\n */\nconst handleCloseDeleteConfirmationDialog = ({ updateState, dispatch }) => {\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tupdateState({\n\t\tshowDeleteEventModal: false,\n\t\teventToDelete: null,\n\t\terrorMessage: null\n\t});\n};\n\n/**\n * Sets current event as eventToDelete and opens a confirmation dialog\n * @param {{action, payload}} coeffects\n */\nconst handleOpenDeleteConfirmationDialog = ({\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tupdateState({\n\t\tshowDeleteEventModal: true,\n\t\teventToDelete: { ...action.payload }\n\t});\n};\n\n/**\n * Builds deleteEvent payload based on the category and the\n * current event data.\n * @param {{state, dispatch}} coeffects\n */\nconst handleSubmitDeleteEvent = ({ state, dispatch }) => {\n\tlet recordId = get(state, 'eventToDelete.schedule.workSchedule.sysId', '');\n\tlet eventCategory = get(state, 'eventToDelete.category');\n\tlet userId = get(state, 'eventToDelete.user.sysId', '');\n\tlet attendees = [{ id: userId }];\n\tlet startDate = get(state, 'eventToDelete.start', '');\n\t//Used to deactivate cache for other users who share the event so that their participants' list gets updated.\n\tlet attendeesToUpdate = get(\n\t\tstate,\n\t\t'eventToDelete.schedule.workSchedule.participants',\n\t\t[]\n\t);\n\n\t// Default payload\n\tlet data = {\n\t\teventCategory,\n\t\tstartDate,\n\t\trecordId,\n\t\tattendees,\n\t\tattendeesToUpdate\n\t};\n\n\t// If Shift plan exists it means we're dealing with WorkShift events\n\tif (!isEmpty(get(state, 'eventToDelete.schedule.shiftPlan.sysId', ''))) {\n\t\tdata.recordId = get(state, 'eventToDelete.schedule.sysId', '');\n\t}\n\n\t// Only time off uses the record_id for sn_shift_planning_agent_schedule_request records\n\tif (\n\t\tget(state, 'eventToDelete.category') ===\n\t\tCALENDAR_EVENTS.TIME_OFF.CATEGORY\n\t) {\n\t\tdata.recordId = get(state, 'eventToDelete.record_id', '');\n\t}\n\n\tdispatch(EVENT_DELETE_ACTIONS.DELETE_EVENT, { data });\n};\n/**\n * When available this handler will use the payload generated\n * in the edit shift modal to create/edit shift event data\n */\nconst handleDeleteEvent = createHttpEffect(SCHEDULE_DELETE_EVENT_API_ENDPOINT, {\n\tmethod: 'POST',\n\theaders: {\n\t\tAccept: 'application/json',\n\t\t'Content-Type': 'application/json'\n\t},\n\tdataParam: 'data',\n\tsuccessActionType: EVENT_DELETE_ACTIONS.DELETE_EVENT_SUCCEDED,\n\terrorActionType: EVENT_DELETE_ACTIONS.DELETE_EVENT_FAILED\n});\n\n/**\n * Closes confirmation dialog, closes event popover and reloads calendar\n * @param {{dispatch}} coeffects object\n */\nconst handleDeleteEventSucceded = ({ dispatch }) => {\n\tdispatch(EVENT_DELETE_ACTIONS.CLOSE_DELETE_CONFIRMATION_DIALOG);\n\tdispatch(ACTIONS.POPOVER_CLOSED);\n\tdispatch(CALENDAR_ACTIONS.LIVE_RELOAD_DATA);\n};\n\n/**\n * Displays a error message if something went wrong while\n * deleting an event.\n * @param {{action, updateState}} coeffects\n */\nconst handleDeleteEventFailed = ({ action, updateState }) => {\n\tconst errorMessage = get(\n\t\taction,\n\t\t'payload.data.error.message',\n\t\tt('Server Error, please contact your System administrator')\n\t);\n\tupdateState({ errorMessage });\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[CALENDAR_ACTIONS.GET_DEFAULT_EVENTS]: fetchDefaultEvents,\n\t[CALENDAR_ACTIONS.DEFAULT_EVENTS_RETRIEVED]: handleDefaultEventTypes,\n\t[CALENDAR_ACTIONS.DATE_RANGE_CHANGED]: updateDateRange,\n\t[CALENDAR_ACTIONS.CHANGE_CONTEXT_DATE]: changeCalendarContextDate,\n\t[CALENDAR_ACTIONS.FETCH_FORECAST_DATA]: fetchForecastData,\n\t[CALENDAR_ACTIONS.FETCH_FORECAST_DATA_SUCCESS]: processForecastData,\n\t[CALENDAR_ACTIONS.FETCH_CALENDAR_DATA]: retrieveCalendarData,\n\t[CALENDAR_ACTIONS.RETRIEVED_CALENDAR_DATA]: processCalendarData,\n\t[CALENDAR_ACTIONS.COULD_NOT_RETRIEVE_DATA]: handleRetrievalError,\n\t[CALENDAR_ACTIONS.CHECK_FOR_SPAN_UPDATE]: {\n\t\tmodifier: {\n\t\t\tname: 'debounce',\n\t\t\tdelay: 300\n\t\t},\n\t\teffect: checkForSpanUpdate\n\t},\n\t[CALENDAR_ACTIONS.UPDATE_SCHEDULE_SPANS]: updateScheduleSpans,\n\t[ACTIONS.POPOVER_OPENED]: handlePopoverOpened,\n\t[ACTIONS.POPOVER_CLOSED]: handlePopoverClosed,\n\t[ACTIONS.TIMEZONE_CHANGED]: updateCalendarTimeZone,\n\t[ACTIONS.VIEW_CHANGED]: updateCalendarView,\n\t[ACTIONS.CONTEXT_DATE_CHANGED]: updateCalendarContextDate,\n\t[SHIFT_EDITING_EVENTS.OPEN_SHIFT_EDIT_MODAL]: handleOpenShiftEditModal,\n\t[SHIFT_EDITING_EVENTS.SHIFT_EDIT_MODAL_VALUE_CHANGED]: handleRecordTimeValueChanged,\n\t[SHIFT_EDITING_EVENTS.CLOSE_SHIFT_EDIT_MODAL]: handleModalClose,\n\t[NOW_MODAL_FOOTER_ACTION_CLICKED]: handleModalActionClick,\n\t[SHIFT_EDITING_EVENTS.SET_TO_DELETE]: handleModalActionSetToDelete,\n\t[SHIFT_EDITING_EVENTS.SAVE_CHANGES]: handleSaveShiftChanges,\n\t[SHIFT_EDITING_EVENTS.SAVE_CHANGES_SUCCESS]: handleSaveShiftAPIResult,\n\t[SHIFT_EDITING_EVENTS.SAVE_CHANGES_ERROR]: handleSaveShiftAPIError,\n\t[SHIFT_EDITING_EVENTS.DISMISS_ALERT]: dismissErrorMessage,\n\t[SHIFT_EDITING_EVENTS.OPEN_SHIFT_SWAP_MODAL]: handleOpenShiftSwapModal,\n\t[SHIFT_EDITING_EVENTS.OPEN_SHIFT_TIMEOFF_MODAL]: handleOpenTimeOffModal,\n\t[CALENDAR_ACTIONS.LIVE_RELOAD_DATA]: {\n\t\tmodifier: {\n\t\t\tname: 'debounce',\n\t\t\tdelay: 300\n\t\t},\n\t\teffect: handleLiveReloadHandler\n\t},\n\t[APPLIED_FILTERS_OBJECT]: getAppliedFilters,\n\t[CALENDAR_ACTIONS.NEW_EVENT]: newEventButtonClickHandler,\n\t[CALENDAR_ACTIONS.OPEN_NEW_EVENT_MODAL]: openEventRequestModal,\n\t[CALENDAR_ACTIONS.SHOW_DEMAND_FORECAST_POPOVER]: showDemandForecastPopover,\n\t[EVENT_REQUEST_SUBMIT_CREATE_SUCCEEDED]: newEventSuccessHandler,\n\t[NOW_POPOVER_OPENED_SET]: handlePopoverOpenedSet,\n\t[CALENDAR_ACTIONS.DROPDOWN_SELECTED_ITEM_SET]: dropdownItemSelectedHandler,\n\t[EVENT_REQUEST_SUBMIT_EDIT_SUCCEEDED]: newEventSuccessHandler,\n\t[EVENT_REQUEST_MODAL_SET]: closeNewEventRequestModal,\n\t[CALENDAR_ACTIONS.NEW_EVENT_FROM_POPOVER]: newEventFromPopoverHandler,\n\t[EVENT_DELETE_ACTIONS.DELETE_EVENT]: handleDeleteEvent,\n\t[EVENT_DELETE_ACTIONS.DELETE_EVENT_SUCCEDED]: handleDeleteEventSucceded,\n\t[EVENT_DELETE_ACTIONS.DELETE_EVENT_FAILED]: handleDeleteEventFailed,\n\t[EVENT_DELETE_ACTIONS.OPEN_DELETE_CONFIRMATION_DIALOG]: handleOpenDeleteConfirmationDialog,\n\t[EVENT_DELETE_ACTIONS.CLOSE_DELETE_CONFIRMATION_DIALOG]: handleCloseDeleteConfirmationDialog,\n\t[EVENT_DELETE_ACTIONS.SUBMIT_DELETE_CONFIRMATION_DIALOG]: handleSubmitDeleteEvent,\n\t[SHOW_ALL_CLICKED]: handleForecastPopoverShowAllClicked\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"mergeWith\"];","import get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport reduce from 'lodash/reduce';\nimport sortBy from 'lodash/sortBy';\nimport isEmpty from 'lodash/isEmpty';\nimport uniqWith from 'lodash/uniqWith';\nimport {\n\tCALENDAR_SECTION_BACKGROUND_COLOR,\n\tCALENDAR_SECTION_TEXT_COLOR,\n\tCALENDAR_ROW_BACKGROUND_COLOR,\n\tCALENDAR_ROW_TEXT_COLOR,\n\tCALENDAR_EVENTS,\n\tCALENDAR_DRAFT_COLOR,\n\tCALENDAR_DRAFT_BREAK_COLOR,\n\tCALENDAR_DRAFT_TEXT_COLOR,\n\tCALENDAR_INDIVIDUALLY_QUERIED_ID,\n\tCALENDAR_INDIVIDUALLY_QUERIED_LABEL\n} from '../constants.js';\nimport { convertAllEventTimes } from './utils.js';\n\n//Retrieve calendar sections (one per user in each assignment group) from Shift Scheduling API response.\nexport const getSections = apiResponse => {\n\tlet sections = [];\n\tlet otherSection = null;\n\n\t//For each category/assignment group in the API response:\n\tfor (let i in apiResponse) {\n\t\tif (apiResponse.hasOwnProperty(i)) {\n\t\t\tlet section = {};\n\t\t\tlet category = apiResponse[i];\n\n\t\t\tsection.id = i;\n\t\t\tsection.runtimeData = new Map();\n\n\t\t\t//If checking the section of indivually queried users, and not the users in a particular assignment group:\n\t\t\tif (i === CALENDAR_INDIVIDUALLY_QUERIED_ID)\n\t\t\t\tsection.title = CALENDAR_INDIVIDUALLY_QUERIED_LABEL;\n\t\t\telse section.title = get(category, 'name', '');\n\t\t\tsection.bgColor = CALENDAR_SECTION_BACKGROUND_COLOR;\n\t\t\tsection.textColor = CALENDAR_SECTION_TEXT_COLOR;\n\n\t\t\t//Create subsection for each user in this section\n\t\t\tsection.children = reduce(\n\t\t\t\tget(category, 'data', []),\n\t\t\t\t(result, user) => {\n\t\t\t\t\tlet child = {};\n\n\t\t\t\t\tchild.id = get(user, 'sysId', '');\n\t\t\t\t\tchild.title = get(user, 'name', '');\n\t\t\t\t\tchild.bgColor = CALENDAR_ROW_BACKGROUND_COLOR;\n\t\t\t\t\tchild.textColor = CALENDAR_ROW_TEXT_COLOR;\n\n\t\t\t\t\tresult.push(child);\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\t//Remove duplicates\n\t\t\tsection.children = uniqWith(section.children, (a, b) => {\n\t\t\t\treturn a.id === b.id;\n\t\t\t});\n\n\t\t\t//Sort users by full name\n\t\t\tsection.children = sortBy(section.children, child => {\n\t\t\t\treturn child.title;\n\t\t\t});\n\n\t\t\t//\"Other\" section is listed last\n\t\t\tif (section.id === CALENDAR_INDIVIDUALLY_QUERIED_ID)\n\t\t\t\totherSection = section;\n\t\t\telse sections.push(section);\n\t\t}\n\t}\n\n\t//Sort assignment groups by name\n\tsections = sortBy(sections, s => {\n\t\treturn s.title;\n\t});\n\n\t//\"Other\" section is listed last\n\tif (otherSection) sections.push(otherSection);\n\n\treturn sections;\n};\n\n//Retrieve array of event objects to input into calendar component from Shift Scheduling REST API.\n//Reduces Shift Scheduling REST API response to the the objects in it dedicated for each agent.\n//Then returns event span objects from each of that agent's schedules in an array.\nexport const getEvents = (apiResponse, calendarTimezone) => {\n\tlet events = [];\n\ttry {\n\t\t//For each category/assignment group in the API response:\n\t\tevents = reduce(\n\t\t\tapiResponse,\n\t\t\t(result, category) => {\n\t\t\t\t//For each user in this category/assignment group, get that user's schedule spans\n\t\t\t\treturn result.concat(\n\t\t\t\t\treduce(get(category, 'data', []), parseEventsForUser, [])\n\t\t\t\t);\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\tif (!events || events.length <= 0) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn('There are no events after parsing');\n\t\t\treturn [];\n\t\t}\n\n\t\t//Remove duplicates (spans generated from the same cmn_schedule_span record)\n\t\tevents = uniqWith(events, (ev1, ev2) => {\n\t\t\treturn (\n\t\t\t\tget(ev1, 'group', '') === get(ev2, 'group', '') &&\n\t\t\t\tget(ev1, 'record_id', '') === get(ev2, 'record_id', '') &&\n\t\t\t\tget(ev1, 'start', '') === get(ev2, 'start', '') &&\n\t\t\t\tget(ev1, 'end', '') === get(ev2, 'end', '')\n\t\t\t);\n\t\t});\n\n\t\t//Assign span background colors\n\t\tfor (let i in events) {\n\t\t\tlet category = get(events[i], 'category', '');\n\n\t\t\tif (\n\t\t\t\tcategory === CALENDAR_EVENTS.WORK_SHIFT.CATEGORY &&\n\t\t\t\t!events[i].isPublished\n\t\t\t) {\n\t\t\t\tevents[i].bgColor = CALENDAR_DRAFT_COLOR;\n\t\t\t\tevents[i].textColor = CALENDAR_DRAFT_TEXT_COLOR;\n\n\t\t\t\tfor (let j in get(events[i], 'childEvents', []))\n\t\t\t\t\tevents[i].childEvents[\n\t\t\t\t\t\tj\n\t\t\t\t\t].bgColor = CALENDAR_DRAFT_BREAK_COLOR;\n\t\t\t}\n\t\t}\n\n\t\t//Convert to the calendar's current timezone\n\t\tevents = convertAllEventTimes(events, calendarTimezone, false, true);\n\t} catch (error) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('error parsing events from data , error:{0}', [error]);\n\t}\n\n\treturn events;\n};\n\nconst parseEventsForUser = (result, user) => {\n\tvar events = [];\n\tconst schedulesForUserPerDay = get(user, 'schedules', []);\n\tfor (const day in schedulesForUserPerDay) {\n\t\tconst spans = schedulesForUserPerDay[day];\n\t\tfor (let k = 0; k < spans.length; k += 1) {\n\t\t\tconst span = spans[k];\n\t\t\tconst childSpans = get(span, 'childSpans', []);\n\t\t\tconst event = getEventFromShift(user, span);\n\t\t\tif (isArray(childSpans)) {\n\t\t\t\tfor (let l = 0; l < childSpans.length; l += 1) {\n\t\t\t\t\tconst childEvent = getEventFromShift(user, childSpans[l]);\n\t\t\t\t\tevent.childEvents.push(childEvent);\n\t\t\t\t}\n\t\t\t}\n\t\t\tevents.push(event);\n\t\t}\n\t}\n\tresult = result.concat(events);\n\treturn result;\n};\nconst getEventFromShift = (user, shift) => {\n\tconst event = {};\n\tevent.user = {\n\t\tsysId: user.sysId,\n\t\tname: user.name\n\t};\n\tevent.title = get(shift, 'name', '');\n\tevent.description = get(shift, 'description', '');\n\tif (isEmpty(event.description)) {\n\t\tevent.description = get(shift, 'schedule.workSchedule.description', '');\n\t}\n\tevent.participants = get(shift, 'schedule.workSchedule.participants', []);\n\tevent.start = get(shift, 'startTime', get(shift, 'scheduledStartTime', ''));\n\tevent.startTimeDisplayValue = get(shift, 'startTimeDisplayValue', '');\n\tevent.end = get(shift, 'endTime', get(shift, 'scheduledEndTime', ''));\n\tevent.endTimeDisplayValue = get(shift, 'endTimeDisplayValue', '');\n\tevent.isExclusion = get(shift, 'isExclusion', false);\n\tevent.record_id = get(shift, 'sysId', '');\n\tevent.schedule = get(shift, 'schedule', '');\n\tevent.readInTimezone = get(shift, 'readInTimezone', '');\n\tevent.category = get(shift, 'schedule.eventType.category.sys_id', '');\n\tevent.bgColor = get(shift, 'schedule.eventType.color', '');\n\tevent.isPublished = get(shift, 'schedule.isPublished', true);\n\t//Associate this span with this user so that it is displayed in correct section of calendar\n\tevent.group = get(user, 'sysId', '');\n\tevent.childEvents = [];\n\treturn event;\n};\n\nexport const getTimeZones = apiResponse => {\n\tlet timeZones = get(apiResponse, 'timeZones', {});\n\tlet transformedTimeZones = [];\n\tObject.keys(timeZones).forEach(tz => {\n\t\ttransformedTimeZones.push({\n\t\t\tname: tz,\n\t\t\tlabel: timeZones[tz]\n\t\t});\n\t});\n\treturn transformedTimeZones;\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"uniqWith\"];","import '@servicenow/now-button';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-avatar';\nimport '@servicenow/now-highlighted-value';\nimport { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport {\n\tPOPOVER_STATE,\n\tSHIFT_EDITING_EVENTS,\n\tSHIFT_EDITING_MODAL_CONSTANTS,\n\tEVENT_DELETE_ACTIONS\n} from './constants';\nimport { CALENDAR_EVENTS } from '../constants';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { t } from 'sn-translate';\nimport { getUserTimeFormat } from '../../common/selectors';\nconst CALENDAR_SHIFT_SWAP_LABEL = t('Swap Shift');\nconst CALENDAR_TIME_OFF_LABEL = t('Request Time Off');\nconst CALENDAR_EDIT_LABEL = t('Edit');\nconst CALENDAR_DELETE_LABEL = t('Delete');\n\nconst CALENDAR_BREAKS_LABEL = t('Breaks:');\nconst CALENDAR_HOURS_LABEL = t('Hours');\nconst CALENDAR_HOUR_LABEL = t('Hour');\nconst CALENDAR_DAYS_LABEL = t('Days');\nconst CALENDAR_DAY_LABEL = t('Day');\nconst CALENDAR_MINUTES_LABEL = t('Minutes');\nconst CALENDAR_MINUTE_LABEL = t('Minute');\n\n/**\n * Returns as string the range of two moment object formated as follows\n * e.g. => 7:30 am - 5:30 pm\n * @param {moment} startMoment moment\n * @param {moment} endMoment moment\n */\nconst getCalendarEventDurationString = (startMoment, endMoment) => {\n\tlet timeFormat = getUserTimeFormat();\n\n\tif (timeFormat.indexOf(SHIFT_EDITING_MODAL_CONSTANTS.SECONDS_FORMAT) > -1) {\n\t\ttimeFormat = timeFormat.replace(\n\t\t\tSHIFT_EDITING_MODAL_CONSTANTS.SECONDS_FORMAT,\n\t\t\t''\n\t\t);\n\t}\n\treturn `${startMoment.format(timeFormat)} - ${endMoment.format(\n\t\ttimeFormat\n\t)}`;\n};\n\n/**\n * Returns as string the range of two moments + the duration of such range of\n * moment objects\n * e.g. => 7:30 am - 5:30 pm\n * @param {Object} childEvent {start (moment), end (moment) }\n */\nconst __getChildEventDescription = childEvent => {\n\tconst { title, start, end } = childEvent;\n\tconst startMoment = moment(start);\n\tconst endMoment = moment(end);\n\tlet eventDurationInfo = `\n\t\t${title}\n\t\t${getCalendarEventDurationString(startMoment, endMoment)}\n\t\t(${getDurationString(startMoment, endMoment)})\n\t`;\n\treturn eventDurationInfo;\n};\n\n/**\n * Returns an ARIA representation of an event and the childEvents:\n * e.g.:\n * \"Work\n\t\tThursday, February 27th 2020\n\t\t8:00 am - 6:00 pm\n\t\t( 10 Hours)\n\t Breaks:\n\t \tLunch\n\t\t12:00 pm - 1:00 pm\n\t\t( 1 Hours)\n\t,\n\t\tAfternoon\n\t\t2:45 pm - 3:00 pm\n\t\t( 15 Minutes)\"\n * @param {Object} event\n * { title {string}, startMoment {moment}, endMoment {moment}, childEvents {[Object]}}\n */\nconst getAriaDescriptionForEvent = event => {\n\tconst { title, startMoment, endMoment, childEvents } = event;\n\tlet eventDescription = `\n\t\t${title}\n\t\t${startMoment.format('dddd, MMMM Do, YYYY')}\n\t\t${getCalendarEventDurationString(startMoment, endMoment)}\n\t\t(${getDurationString(startMoment, endMoment)})\n\t`;\n\tlet childEventsDescription = isEmpty(childEvents)\n\t\t? ''\n\t\t: `${CALENDAR_BREAKS_LABEL} : ${childEvents\n\t\t\t.map(__getChildEventDescription)\n\t\t\t.join(', ')}`;\n\treturn `${eventDescription} ${childEventsDescription}`;\n};\n\n/**\n * Return as a String the duration between two moment objects\n * e.g.:\n * 3 Hours,\n * 15 Minutes,\n * 10 Days,\n * 1 day 10 Hours and 15 Minutes.\n * @param {moment} startMoment\n * @param {moment} endMoment\n */\nconst getDurationString = (startMoment, endMoment) => {\n\tlet diff = endMoment.diff(startMoment, 'hours');\n\tlet duration = diff;\n\tlet durationType = CALENDAR_HOURS_LABEL;\n\tlet durationString = '';\n\tif (diff >= 24) {\n\t\tduration = endMoment.diff(startMoment, 'days');\n\t\tdurationType = duration >= 2 ? CALENDAR_DAYS_LABEL : CALENDAR_DAY_LABEL;\n\t\tdurationString = `${duration} ${durationType}`;\n\t\t// for events with duration larger than a day, include the hours and minutes\n\t\tdiff = diff % 24;\n\t}\n\tif (diff > 0) {\n\t\tduration = diff;\n\t\tdurationType =\n\t\t\tduration >= 2 ? CALENDAR_HOURS_LABEL : CALENDAR_HOUR_LABEL;\n\t\tdurationString = `${durationString} ${duration} ${durationType}`;\n\t\tdiff = endMoment.minutes() - startMoment.minutes();\n\t\t// if event diff is not rounded to hours, include also the minutes duration string.\n\t\tif (diff > 0) {\n\t\t\tdurationType =\n\t\t\t\tdiff >= 2 ? CALENDAR_MINUTES_LABEL : CALENDAR_MINUTE_LABEL;\n\t\t\tdurationString = `${durationString} and ${diff} ${durationType}`;\n\t\t}\n\t} else {\n\t\tduration = endMoment.diff(startMoment, 'minutes');\n\t\tdurationType =\n\t\t\tduration >= 2 ? CALENDAR_MINUTES_LABEL : CALENDAR_MINUTE_LABEL;\n\t\tdurationString = `${duration} ${durationType}`;\n\t}\n\n\treturn durationString;\n};\n\n/**\n * Return the HTML used in the popver based on a range of moment objects provided\n * as startMoment and endMoment\n * showDurationAsHighlightedValue=true will return the duration as a now-highlighted-value component\n * otherwise the duration string will be returned between parenthesis\n * @param {*} startMoment\n * @param {*} endMoment\n * @param {*} showDurationAsHighlightedValue\n */\nexport const getDurationFormatValue = (\n\tstartMoment,\n\tendMoment,\n\tshowDurationAsHighlightedValue = false\n) => {\n\tconst durationString = getDurationString(startMoment, endMoment).trim();\n\treturn (\n\t\t<span role=\"cell\" className=\"event-duration-string\">\n\t\t\t{showDurationAsHighlightedValue ? (\n\t\t\t\t<now-highlighted-value\n\t\t\t\t\tcolor=\"gray\"\n\t\t\t\t\tlabel={durationString}\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t` (${durationString})`\n\t\t\t)}\n\t\t</span>\n\t);\n};\n\n/**\n * Returns the HTML with the popover information\n * @param {Object} event\n * { title {string}, startMoment {moment}, endMoment {moment}, childEvents {[Object]}}\n */\nexport const getPopoverHtml = (\n\tevent,\n\tdispatch,\n\tpopoverShowEditButton,\n\tpopoverShowDeleteButton,\n\tshowShiftSwapRequestIcon,\n\tshowTimeOffRequestIcon,\n\tmaxAttendeesToShow\n) => {\n\tconst {\n\t\ttitle,\n\t\tdescription,\n\t\tparticipants = [],\n\t\tcategory,\n\t\tchildEvents,\n\t\tstartMoment,\n\t\tendMoment,\n\t\tisPublished\n\t} = event;\n\n\tconst eventAriaLabel = getAriaDescriptionForEvent(event);\n\tconst eventTitle = isPublished ? title : t('{0} (Draft)', [title]);\n\n\tconst renderEventParticipants = () => {\n\t\tconst hasMore = participants.length > maxAttendeesToShow;\n\n\t\treturn (\n\t\t\t<div className=\"event-participants\">\n\t\t\t\t<now-icon icon=\"user-outline\" size=\"md\"></now-icon>\n\t\t\t\t{participants.slice(0, maxAttendeesToShow).map(p => (\n\t\t\t\t\t<now-avatar\n\t\t\t\t\t\tkey={p.sysId}\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tuserName={p.name}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{hasMore ? (\n\t\t\t\t\t<span className=\"more\">\n\t\t\t\t\t\t{t('+{0} more', [\n\t\t\t\t\t\t\tparticipants.length - maxAttendeesToShow\n\t\t\t\t\t\t])}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t};\n\treturn (\n\t\t<div\n\t\t\t// DEF0167402 WCAG: Popover must gain focus after being opened.\n\t\t\thook-insert={vnode => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tvnode.elm.focus();\n\t\t\t\t}, 500);\n\t\t\t}}\n\t\t\tclassName=\"calendar-event-popover\"\n\t\t\ttabindex=\"0\"\n\t\t\taria-label={eventAriaLabel}\n\t\t>\n\t\t\t<div className=\"calendar-event-popover-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={eventTitle}\n\t\t\t\t\tlevel=\"1\"\n\t\t\t\t\tvariant=\"title-primary\"\n\t\t\t\t\twontWrap\n\t\t\t\t\thasNoMargin\n\t\t\t\t></now-heading>\n\t\t\t\t<div className=\"popover-action-container\">\n\t\t\t\t\t{showTimeOffRequestIcon ? (\n\t\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': CALENDAR_TIME_OFF_LABEL\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thigh-contrast\n\t\t\t\t\t\t\ticon=\"user-transfer-outline\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\ttooltip-content={CALENDAR_TIME_OFF_LABEL}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tSHIFT_EDITING_EVENTS.OPEN_SHIFT_TIMEOFF_MODAL,\n\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></now-button-iconic>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{showShiftSwapRequestIcon ? (\n\t\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': CALENDAR_SHIFT_SWAP_LABEL\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thigh-contrast\n\t\t\t\t\t\t\ticon=\"arrow-up-down-outline\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\ttooltip-content={CALENDAR_SHIFT_SWAP_LABEL}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tSHIFT_EDITING_EVENTS.OPEN_SHIFT_SWAP_MODAL,\n\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></now-button-iconic>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{popoverShowDeleteButton ? (\n\t\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': CALENDAR_DELETE_LABEL\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thigh-contrast\n\t\t\t\t\t\t\ticon=\"trash-outline\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\ttooltip-content={CALENDAR_DELETE_LABEL}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tEVENT_DELETE_ACTIONS.OPEN_DELETE_CONFIRMATION_DIALOG,\n\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></now-button-iconic>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{popoverShowEditButton ? (\n\t\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\tconfig-aria={{ 'aria-label': CALENDAR_EDIT_LABEL }}\n\t\t\t\t\t\t\thigh-contrast\n\t\t\t\t\t\t\ticon=\"pencil-outline\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\ttooltip-content={CALENDAR_EDIT_LABEL}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tSHIFT_EDITING_EVENTS.OPEN_SHIFT_EDIT_MODAL,\n\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></now-button-iconic>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"event-date-info\">\n\t\t\t\t<now-icon icon=\"clock-outline\" size=\"md\"></now-icon>\n\t\t\t\t<div>\n\t\t\t\t\t<span>{startMoment.format('dddd, MMMM Do, YYYY')}</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{getCalendarEventDurationString(startMoment, endMoment)}\n\t\t\t\t\t\t{getDurationFormatValue(startMoment, endMoment, false)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{category !== CALENDAR_EVENTS.WORK_SHIFT.CATEGORY &&\n\t\t\t!isEmpty(description) ? (\n\t\t\t\t\t<div className=\"event-description\">\n\t\t\t\t\t\t<now-icon icon=\"text-outline\" size=\"md\"></now-icon>\n\t\t\t\t\t\t<div className=\"event-description-text\">{description}</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : !isEmpty(childEvents) ? (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<span className=\"child-events-title\">\n\t\t\t\t\t\t\t{CALENDAR_BREAKS_LABEL}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div role=\"table\" className=\"child-events-info\">\n\t\t\t\t\t\t\t{childEvents.map(getChildEventPopoverHtml)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t) : null}\n\t\t\t{category === CALENDAR_EVENTS.WORK_SHIFT.CATEGORY ||\n\t\t\tcategory === CALENDAR_EVENTS.TIME_OFF.CATEGORY ? (\n\t\t\t\t\t<div className=\"event-user\">\n\t\t\t\t\t\t<now-icon icon=\"user-outline\" size=\"md\"></now-icon>\n\t\t\t\t\t\t<now-avatar\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tuserName={get(event, 'user.name', '')}\n\t\t\t\t\t\t></now-avatar>\n\t\t\t\t\t\t<span>{get(event, 'user.name', '')}</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\trenderEventParticipants()\n\t\t\t\t)}\n\t\t</div>\n\t);\n};\n\n/**\n * Return the HTML markup for the childEvents of an event\n * @param {Object} event\n * {start {moment}, end {moment}}\n */\nconst getChildEventPopoverHtml = event => {\n\tconst { title, start, end } = event;\n\tconst startMoment = moment(start);\n\tconst endMoment = moment(end);\n\treturn (\n\t\t<div role=\"row\" className=\"child-info\">\n\t\t\t<span role=\"cell\" className=\"child-duration-and-name\">\n\t\t\t\t{`${getCalendarEventDurationString(\n\t\t\t\t\tstartMoment,\n\t\t\t\t\tendMoment\n\t\t\t\t)} ${title}`}\n\t\t\t</span>\n\t\t\t{getDurationFormatValue(startMoment, endMoment, true)}\n\t\t</div>\n\t);\n};\n\n/**\n * Sets the popover content used by the now-calendar.\n * @param {Object} action\n * @param {Object} state\n * @param {Function} dispatch\n */\nexport const getPopoverTemplate = (\n\taction,\n\tupdateProperties,\n\tdispatch,\n\tpopoverShowEditButton = false,\n\tpopoverShowDeleteButton = false,\n\tshowShiftSwapRequestIcon,\n\tshowTimeOffRequestIcon,\n\tmaxAttendeesToShow\n) => {\n\tupdateProperties({\n\t\tpopoverTemplate: getPopoverHtml(\n\t\t\taction.payload.event,\n\t\t\tdispatch,\n\t\t\tpopoverShowEditButton,\n\t\t\tpopoverShowDeleteButton,\n\t\t\tshowShiftSwapRequestIcon,\n\t\t\tshowTimeOffRequestIcon,\n\t\t\tmaxAttendeesToShow\n\t\t),\n\t\tpopoverContentState: {\n\t\t\tvalue: POPOVER_STATE.READY,\n\t\t\tid: get(action, 'payload.event.id', 'my_event'),\n\t\t\ttimestamp: action.payload.timestamp\n\t\t}\n\t});\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.container,.container .content{height:100%;display:flex;flex-direction:column}.container .content .new-event-type-dropdown{display:inline-block;margin-right:.75rem}.calendar-event-popover{padding:1rem;display:flex;flex-direction:column;overflow:hidden}.calendar-event-popover-header{display:flex;align-items:center;margin-bottom:.25rem}.calendar-event-popover-header now-heading{flex:1;overflow:hidden;padding:0 0 .5rem}.calendar-event-popover-header .popover-action-container{margin-top:-.75rem;margin-right:-.75rem}.calendar-event-popover-header .popover-action-container now-button-iconic{margin-left:.5rem}.calendar-event-popover .event-date-info{display:flex;flex-direction:row;font-size:.75rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.calendar-event-popover .event-date-info now-icon{margin-right:.5rem}.calendar-event-popover .event-date-info div span{width:100%;display:inline-block}.calendar-event-popover .event-date-info div span:not(:last-child){margin-bottom:.25rem}.calendar-event-popover .event-date-info div span.event-duration-string{width:auto;padding-left:.5rem}.calendar-event-popover .event-description{display:flex;margin-top:.75rem;font-size:.75rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.calendar-event-popover .event-description now-icon{margin-right:.5rem}.calendar-event-popover .event-description-text{max-height:3.75em;padding-right:.75rem;text-align:justify;position:relative;overflow:hidden}.calendar-event-popover .event-description-text:before{content:\\\"...\\\";position:absolute;right:0;bottom:0}.calendar-event-popover .event-description-text:after{background:RGB(var(--now-color--neutral-0,255,255,255));content:\\\"\\\";position:absolute;right:0;margin-top:.25rem;width:.75rem;height:.75rem}.calendar-event-popover .child-events-title{margin:.5rem 0 .25rem 1.5rem;color:RGB(var(--now-color--neutral-12,66,80,81));font-size:.75rem}.calendar-event-popover .child-events-info{display:flex;flex-direction:column;font-size:.75rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.calendar-event-popover .child-events-info now-icon{margin-right:.5rem}.calendar-event-popover .child-events-info .child-info{display:flex;flex-direction:row;justify-content:space-between;margin-left:1.5rem}.calendar-event-popover .child-events-info .child-info:not(:last-child){margin-bottom:.25rem}.calendar-event-popover .child-events-info .child-info .child-duration-and-name{text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:10rem;float:left}.calendar-event-popover .event-user{display:flex;flex-direction:row;margin-top:1rem;font-size:.75rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.calendar-event-popover .event-user now-icon{margin-right:.5rem}.calendar-event-popover .event-user span{padding-top:.25rem}.calendar-event-popover .event-user now-avatar{margin-right:.5rem}.calendar-event-popover .event-participants{display:flex;align-items:center;margin-top:1rem;font-size:.75rem;color:RGB(var(--now-color--neutral-12,66,80,81))}.calendar-event-popover .event-participants now-icon{margin-right:.5rem}.calendar-event-popover .event-participants now-avatar:not(:first-of-type){margin-left:-.25rem}.calendar-event-popover .event-participants .more{font-size:.75rem;margin-left:.5rem}.new-event-popover{padding:1rem;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content;display:flex;flex-direction:column}.new-event-popover .now-button-bare{width:100%}.new-event-popover .now-button-bare:hover{background:RGB(var(--now-color--neutral-12,66,80,81))}.edit-modal{display:flex;flex-direction:column}.edit-modal-footer{display:flex;flex-direction:row;justify-content:flex-end;margin-top:2.5rem}.edit-modal-footer now-button{margin-left:.5rem}.edit-modal now-alert{margin-bottom:1rem}.edit-modal now-heading{margin-bottom:1.5rem}.edit-modal .shift-range{display:flex;flex-direction:row}.edit-modal .shift-range now-record-time:first-child{margin-right:1rem}.edit-modal .shift-range.main-event{margin-bottom:2rem;padding-right:3.5rem}.edit-modal .shift-range.child-event{margin-bottom:1rem}.edit-modal .shift-range.child-event now-button-iconic{margin:.75rem}.edit-modal .shift-range.child-event:last-child{margin-bottom:2.5rem}.contextual-panel-container{min-width:18rem}\", \"\"]);\n\n// exports\n","import { SchedulingRenderer } from './renderer';\n\nexport const scheduleRenderer = new SchedulingRenderer();\n","module.exports = __TECTONIC__lodash_4_17_15[\"difference\"];","import { t } from 'sn-translate';\nimport {\n\tFORECAST_STATUS,\n\tINTERNAL_FORMAT,\n\tFORECAST_STATUS_ICONS,\n\tFORECAST_STATUS_LABEL\n} from '../../common/calendar/constants';\nimport { CALENDAR_ACTIONS } from '../../common/constants';\nimport { getCoverage } from './coverageCalculator';\nimport moment from 'moment';\n\nconst EM_DASH = String.fromCharCode(8212);\nconst WEEK_VIEW_MISMATCHED_MAX = 5;\n\nexport const getForecastStatus = (coverage, forecast) => {\n\tif (forecast === null) {\n\t\treturn FORECAST_STATUS.noForecast;\n\t}\n\n\tif (coverage === 0 && forecast === 0) {\n\t\treturn FORECAST_STATUS.noStaffed;\n\t}\n\n\tif (coverage < forecast) {\n\t\treturn FORECAST_STATUS.underStaffed;\n\t}\n\n\tif (coverage > forecast) {\n\t\treturn FORECAST_STATUS.overStaffed;\n\t}\n\n\treturn FORECAST_STATUS.wellStaffed;\n};\n\nexport const getForecastInfoDayView = ({ startTime, sections, viewConfig }) => {\n\tconst forecastData = viewConfig.forecastData;\n\tlet coverageSum = 0;\n\tlet forecastSum = 0;\n\tlet foundNullForecast = false;\n\n\tfor (const section of sections) {\n\t\tconst coverage =\n\t\t\tsection.runtimeData &&\n\t\t\tsection.runtimeData.get('coverage-' + viewConfig.viewName);\n\t\tconst forecast = forecastData[section.id];\n\n\t\tif (coverage && forecast) {\n\t\t\tconst coverageKey = startTime.hour();\n\t\t\tconst forecastKey = startTime.format(INTERNAL_FORMAT.DATE_TIME);\n\n\t\t\tconst coverageAtHour = coverage[coverageKey] || 0;\n\t\t\tconst forecastAtHour = forecast[forecastKey] || 0;\n\n\t\t\tcoverageSum += coverageAtHour;\n\t\t\tforecastSum += forecastAtHour;\n\n\t\t\tif (forecast[forecastKey] === null) {\n\t\t\t\tfoundNullForecast = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst status = getForecastStatus(\n\t\tcoverageSum,\n\t\tfoundNullForecast ? null : forecastSum\n\t);\n\tlet label = '';\n\n\tif (foundNullForecast) {\n\t\tlabel = coverageSum;\n\t} else if (coverageSum === 0 && forecastSum === 0) {\n\t\tlabel = EM_DASH;\n\t} else {\n\t\tlabel = `${coverageSum}/${forecastSum}`;\n\t}\n\n\treturn { status, label };\n};\n\nexport const getForecastInfoWeekView = ({\n\tviewConfig,\n\tsections,\n\tevents,\n\tcontextDate,\n\ttimezone\n}) => {\n\tconst forecastData = viewConfig.forecastData;\n\tconst forecastByHour = Array(24).fill(0);\n\tlet foundNullForecast = false;\n\n\tfor (const groupForecast of Object.values(forecastData)) {\n\t\tconst hours = Object.keys(groupForecast);\n\t\tconst index = hours.indexOf(contextDate);\n\n\t\tif (index !== -1) {\n\t\t\tlet i = index;\n\t\t\tfor (let k = 0; k < 24; k++, i++) {\n\t\t\t\tif (groupForecast[hours[i]] === null) {\n\t\t\t\t\tfoundNullForecast = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tforecastByHour[k] += groupForecast[hours[i]];\n\t\t\t}\n\t\t\tif (foundNullForecast) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (foundNullForecast) {\n\t\treturn {\n\t\t\tstatus: FORECAST_STATUS.noForecast,\n\t\t\tdayCoverage: getCoverage(\n\t\t\t\t{ ...viewConfig, xSize: 1, xStep: 1, xUnitName: 'days' },\n\t\t\t\tevents,\n\t\t\t\tcontextDate,\n\t\t\t\tsections,\n\t\t\t\ttimezone,\n\t\t\t\tnull,\n\t\t\t\ttrue\n\t\t\t)\n\t\t};\n\t}\n\n\tlet coverageVsForecast = [];\n\tlet entireDayForecastStatus;\n\tconst momentContextDate = moment(\n\t\tcontextDate,\n\t\tINTERNAL_FORMAT.DATE_TIME\n\t).startOf('day');\n\tlet hasUnderstaffed = false;\n\tlet hasOverstaffed = false;\n\tconst coverageByHour = getCoverage(\n\t\t{ ...viewConfig, xSize: 24, xStep: 60, xUnitName: 'minutes' },\n\t\tevents,\n\t\tcontextDate,\n\t\tsections,\n\t\ttimezone,\n\t\tnull,\n\t\ttrue\n\t);\n\n\tforecastByHour.forEach((forecast, hour) => {\n\t\tconst coverage = coverageByHour[hour];\n\t\tconst status = getForecastStatus(coverage, forecast);\n\n\t\tif (status === FORECAST_STATUS.underStaffed) {\n\t\t\thasUnderstaffed = true;\n\t\t} else if (status === FORECAST_STATUS.overStaffed) {\n\t\t\thasOverstaffed = true;\n\t\t}\n\n\t\tcoverageVsForecast.push({\n\t\t\thour: momentContextDate.clone().add(hour, 'hour'),\n\t\t\tcoverage,\n\t\t\tforecast,\n\t\t\tstatus\n\t\t});\n\t});\n\n\tif (hasUnderstaffed && hasOverstaffed) {\n\t\tentireDayForecastStatus = FORECAST_STATUS.misStaffed;\n\t} else if (hasUnderstaffed) {\n\t\tentireDayForecastStatus = FORECAST_STATUS.underStaffed;\n\t} else if (hasOverstaffed) {\n\t\tentireDayForecastStatus = FORECAST_STATUS.overStaffed;\n\t} else if (\n\t\tcoverageVsForecast.every(\n\t\t\t({ coverage, forecast }) => coverage === 0 && forecast === 0\n\t\t)\n\t) {\n\t\tentireDayForecastStatus = FORECAST_STATUS.noStaffed;\n\t} else {\n\t\tentireDayForecastStatus = FORECAST_STATUS.wellStaffed;\n\t}\n\n\treturn {\n\t\tstatus: entireDayForecastStatus,\n\t\tcoverageVsForecast\n\t};\n};\n\nexport const getMismatchedDataDayView = ({\n\tstartTime,\n\tsections,\n\tviewConfig\n}) => {\n\tconst forecastData = viewConfig.forecastData;\n\tconst mismatched = [];\n\n\tfor (const section of sections) {\n\t\tconst coverage =\n\t\t\tsection.runtimeData &&\n\t\t\tsection.runtimeData.get('coverage-' + viewConfig.viewName);\n\t\tconst forecast = forecastData[section.id];\n\n\t\tif (coverage && forecast) {\n\t\t\tconst coverageKey = startTime.hour();\n\t\t\tconst forecastKey = startTime.format(INTERNAL_FORMAT.DATE_TIME);\n\n\t\t\tconst coverageAtHour = coverage[coverageKey] || 0;\n\t\t\tconst forecastAtHour = forecast[forecastKey] || 0;\n\n\t\t\tif (coverageAtHour !== forecastAtHour) {\n\t\t\t\tmismatched.push({\n\t\t\t\t\ttitle: section.title,\n\t\t\t\t\tvalue: coverageAtHour - forecastAtHour\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn mismatched;\n};\n\nexport const getMismatchedDataWeekView = ({ timeFormat, barChartData }) => {\n\tconst mismatched = [];\n\n\tfor (const hourData of barChartData) {\n\t\tconst { hour, coverage, forecast } = hourData;\n\t\tif (\n\t\t\tcoverage !== forecast &&\n\t\t\tmismatched.length < WEEK_VIEW_MISMATCHED_MAX\n\t\t) {\n\t\t\tmismatched.push({\n\t\t\t\ttitle: hour.format(timeFormat),\n\t\t\t\tvalue: `${coverage}/${forecast}`\n\t\t\t});\n\t\t}\n\t}\n\n\treturn mismatched;\n};\n\nexport const renderForecastCellDayView = ({\n\tcellLabel,\n\tforecastStatus,\n\tsections,\n\tviewConfig,\n\tstartTime,\n\ttimeFormat,\n\tdispatch\n}) => {\n\t// just show a text label when forecast is not available or null\n\tif (forecastStatus === FORECAST_STATUS.noForecast) {\n\t\treturn cellLabel;\n\t}\n\n\treturn (\n\t\t<now-button-bare\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%'\n\t\t\t}}\n\t\t\tlabel={cellLabel}\n\t\t\tsize=\"sm\"\n\t\t\tvariant=\"tertiary\"\n\t\t\tconfigAria={{ 'aria-label': FORECAST_STATUS_LABEL[forecastStatus] }}\n\t\t\ton-click={event => {\n\t\t\t\tlet mismatchedData = null;\n\n\t\t\t\tif (\n\t\t\t\t\tforecastStatus !== FORECAST_STATUS.wellStaffed &&\n\t\t\t\t\tforecastStatus !== FORECAST_STATUS.noStaffed\n\t\t\t\t) {\n\t\t\t\t\tmismatchedData = getMismatchedDataDayView({\n\t\t\t\t\t\tstartTime,\n\t\t\t\t\t\tsections,\n\t\t\t\t\t\tviewConfig\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tdispatch(CALENDAR_ACTIONS.SHOW_DEMAND_FORECAST_POPOVER, {\n\t\t\t\t\tpositionTarget: event.target,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tforecastStatus,\n\t\t\t\t\t\thasBarChart: false,\n\t\t\t\t\t\tdateTime: startTime.format(timeFormat),\n\t\t\t\t\t\tmismatchedTitle: t('Assignment Group'),\n\t\t\t\t\t\tmismatchedData\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const renderForecastCellWeekView = ({\n\tstartTime,\n\tdateFormat,\n\ttimeFormat,\n\tbarChartData,\n\tweekDayCoverage,\n\tforecastStatus,\n\tdispatch\n}) => {\n\tconst onClick = event => {\n\t\tlet mismatchedData = null;\n\n\t\tif (\n\t\t\tforecastStatus !== FORECAST_STATUS.wellStaffed &&\n\t\t\tforecastStatus !== FORECAST_STATUS.noStaffed\n\t\t) {\n\t\t\tmismatchedData = getMismatchedDataWeekView({\n\t\t\t\ttimeFormat,\n\t\t\t\tbarChartData\n\t\t\t});\n\t\t}\n\n\t\treturn dispatch(CALENDAR_ACTIONS.SHOW_DEMAND_FORECAST_POPOVER, {\n\t\t\tpositionTarget: event.target,\n\t\t\tcontent: {\n\t\t\t\tforecastStatus,\n\t\t\t\tbarChartData,\n\t\t\t\thasBarChart: forecastStatus !== FORECAST_STATUS.noStaffed,\n\t\t\t\thasShowAllLink: true, // always show \"Show all\" link\n\t\t\t\tdateTime: startTime.format(dateFormat),\n\t\t\t\tmismatchedTitle: t('Shift'),\n\t\t\t\tmismatchedData\n\t\t\t}\n\t\t});\n\t};\n\n\tif (forecastStatus === FORECAST_STATUS.noForecast) {\n\t\treturn weekDayCoverage;\n\t}\n\n\tif (forecastStatus === FORECAST_STATUS.noStaffed) {\n\t\treturn (\n\t\t\t<now-button-bare\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '32px',\n\t\t\t\t\theight: '32px',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'center'\n\t\t\t\t}}\n\t\t\t\ton-click={onClick}\n\t\t\t\tlabel={EM_DASH}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"tertiary\"\n\t\t\t\tconfigAria={{\n\t\t\t\t\t'aria-label': FORECAST_STATUS_LABEL[forecastStatus]\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<now-button-iconic\n\t\t\ton-click={onClick}\n\t\t\ticon={FORECAST_STATUS_ICONS[forecastStatus]}\n\t\t\tbare={true}\n\t\t\tsize=\"md\"\n\t\t\tvariant=\"tertiary\"\n\t\t\tconfigAria={{\n\t\t\t\t'aria-label': FORECAST_STATUS_LABEL[forecastStatus]\n\t\t\t}}\n\t\t/>\n\t);\n};\n","import { SCHEDULE_PROPERTY_DEFAULTS } from '../../common/constants';\n\nconst ScheduleProps = {\n\t//HTTP endpoint that returns scheduling data. Must be in a particular format.\n\tendpoint: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.ENDPOINT\n\t},\n\t//List of sys ids of sys_user_group records, whose members you'd like to get schedule information for\n\tassignmentGroups: {},\n\t//List of sys ids of sys_user records, of users you'd like to get schedule information for\n\tindividualAgents: {},\n\t//List of filter configs\n\tfilter: {},\n\t//Interval for which you would like to obtain schedule information\n\tstartDate: {},\n\tendDate: {},\n\tcontextDate: {},\n\t//Array of timezones to be made selectable, as well as starting timezone\n\tavailableTimezones: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.AVAILABLE_TIMEZONES\n\t},\n\ttimezone: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.TIMEZONE\n\t},\n\ttimeFormat: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.TIMEFORMAT\n\t},\n\tdateFormat: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.DATE_FORMAT\n\t},\n\t//Configures time axis of calendar. xStep = number of minutes per division, xSize = number of divisions, xStart = offset in divisions.\n\txStep: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTEP\n\t},\n\txSize: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSIZE\n\t},\n\txStart: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTART\n\t},\n\t//Configures colors of specific event types. Takes a JSON object of event type-to-hex code pairings.\n\tspanColors: {},\n\t//Configures format of dates of calendar header.\n\tdatePickerTemplates: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.DATE_PICKER_TEMPLATE\n\t},\n\tshowContextualPanel: {\n\t\tdefault: false\n\t}\n};\n\nexport default {\n\tproperties: ScheduleProps\n};\n","import get from 'lodash/get';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport moment from 'moment-timezone';\n\nimport {\n\tSCHEDULE_ACTIONS,\n\tUSER_GROUP_ACTIONS,\n\tUSER_INFO_ACTIONS,\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tNOW_CALENDAR_SET_CONTEXTUAL_PANEL_VIEW\n} from '../../common/constants';\nimport { CURRENT_USER_QUERY } from '../../common/queries';\nimport { INTERNAL_FORMAT } from '../../common/calendar/constants';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst bootstrap = {\n\teffect({ state, dispatch, updateState }) {\n\t\tif (get(state, 'properties.assignmentGroups', '') === '')\n\t\t\tdispatch(SCHEDULE_ACTIONS.FETCH_CURRENT_USER_DATA, {});\n\t\telse\n\t\t\tupdateState({\n\t\t\t\tpath: 'loaded',\n\t\t\t\tvalue: true,\n\t\t\t\toperation: 'set'\n\t\t\t});\n\t}\n};\n\nconst fetchCurrentUserData = createGraphQLEffect(CURRENT_USER_QUERY, {\n\tsuccessActionType: SCHEDULE_ACTIONS.CURRENT_USER_DATA_OBTAINED,\n\terrorActionType: SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA\n});\n\nconst obtainGroups = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'user',\n\t\tvalue: get(action, 'payload.data.GlideDomain_Query.user.sys_id', null),\n\t\toperation: 'set'\n\t});\n};\n\nconst queryGroupScheduleData = ({ action, updateState, updateProperties }) => {\n\tlet validUser = get(action, 'payload.user', null) !== null;\n\n\tif (validUser) {\n\t\tupdateProperties({\n\t\t\tassignmentGroups: get(action, 'payload.groups', '')\n\t\t});\n\n\t\tupdateState({\n\t\t\tpath: 'loaded',\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t}\n};\n\nconst handleRetrievalError = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'error',\n\t\tvalue: get(action, 'error', true),\n\t\toperation: 'set'\n\t});\n};\n\nconst handleUserData = ({ state, action, updateProperties }) => {\n\tlet dateTimeFormat = get(\n\t\taction,\n\t\t'payload.currentUser.dateTimeFormat',\n\t\t'yyyy-MM-dd HH:mm:ss'\n\t);\n\tlet dateFormat = get(\n\t\taction,\n\t\t'payload.currentUser.dateFormat',\n\t\t'yyyy-MM-dd'\n\t).toUpperCase();\n\tlet timezone = get(\n\t\taction,\n\t\t'payload.currentUser.timeZone',\n\t\tSCHEDULE_PROPERTY_DEFAULTS.TIMEZONE\n\t);\n\tlet meridianMarker = dateTimeFormat.indexOf('a'); //Server Returns 'yyyy-MM-dd HH:mm:ss' Or 'yyyy-MM-dd HH:mm:ss a'\n\tlet timeFormat = meridianMarker === -1 ? 'HH:mm' : 'hh:mm A'; //Moment.js time format\n\t//Use users' timezone instead of browser timezone\n\tconst startDate = get(state, 'properties.startDate', undefined);\n\tlet contextDate = moment\n\t\t.tz(startDate, timezone)\n\t\t.format(INTERNAL_FORMAT.DATE_TIME);\n\tupdateProperties({\n\t\tdateFormat,\n\t\ttimeFormat,\n\t\ttimezone,\n\t\tcontextDate\n\t});\n};\n\nconst setContextualPanelView = ({ action, state, updateState }) => {\n\tconst { contextualPanel } = state;\n\tupdateState({\n\t\t...state,\n\t\tcontextualPanel: {\n\t\t\t...contextualPanel,\n\t\t\tactiveView: action.payload.viewId\n\t\t}\n\t});\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[SCHEDULE_ACTIONS.FETCH_CURRENT_USER_DATA]: fetchCurrentUserData,\n\t[SCHEDULE_ACTIONS.CURRENT_USER_DATA_OBTAINED]: obtainGroups,\n\t[USER_GROUP_ACTIONS.GROUPS_READY]: queryGroupScheduleData,\n\t[USER_INFO_ACTIONS.USER_INFO_READY]: handleUserData,\n\t[SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA]: handleRetrievalError,\n\t[NOW_CALENDAR_SET_CONTEXTUAL_PANEL_VIEW]: setContextualPanelView\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.schedule-container,.schedule-container>div{height:100%;display:block}.schedule-container now-heading{margin:1.5rem}\", \"\"]);\n\n// exports\n","import {\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tSCHEDULE_CALENDAR_VIEW,\n\tCALENDAR_EVENTS\n} from '../../common/constants';\n\nconst ScheduleProps = {\n\tactive: {}, // for refreshing workspace chrome\n\tselectedTab: {\n\t\tdefault: SCHEDULE_CALENDAR_VIEW\n\t},\n\t//HTTP endpoint that returns scheduling data. Must be in a particular format.\n\tendpoint: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.ENDPOINT\n\t},\n\t//Interval for which you would like to obtain schedule information\n\tstartDate: {},\n\tendDate: {},\n\t//Array of timezones to be made selectable, as well as starting timezone\n\tavailableTimezones: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.AVAILABLE_TIMEZONES\n\t},\n\ttimezone: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.TIMEZONE\n\t},\n\t//Configures time axis of calendar. xStep = number of minutes per division, xSize = number of divisions, xStart = offset in divisions.\n\txStep: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTEP\n\t},\n\txSize: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSIZE\n\t},\n\txStart: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTART\n\t},\n\t//Configures colors of specific event types. Takes a JSON object of event type-to-hex code pairings.\n\tspanColors: {\n\t\tdefault: {\n\t\t\t[CALENDAR_EVENTS.WORK_SHIFT.TYPE]: '#68ABDA',\n\t\t\t[CALENDAR_EVENTS.BREAK.TYPE]: '#084876',\n\t\t\t[CALENDAR_EVENTS.TIME_OFF.TYPE]: '#084876'\n\t\t}\n\t},\n\t//Configures format of dates of calendar header.\n\tdatePickerTemplates: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.DATE_PICKER_TEMPLATE\n\t}\n};\n\nexport default {\n\tproperties: ScheduleProps\n};\n","import get from 'lodash/get';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n\nimport {\n\tSCHEDULE_ACTIONS,\n\tCALENDAR_ACTIONS,\n\tSCHEDULE_CALENDAR_VIEW,\n\tSCHEDULE_RECORD_TABLE,\n\tRECORD_WATCHER_UPDATED\n} from '../../common/constants';\n\nimport {\n\tTABBED_LIST_RECORD_COUNT_QUERY,\n\tCURRENT_USER_QUERY\n} from '../../common/queries';\n\nconst { COMPONENT_BOOTSTRAPPED, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nconst bootstrap = {\n\teffect({ dispatch }) {\n\t\tdispatch(SCHEDULE_ACTIONS.FETCH_TABLE_RECORD_COUNTS, {});\n\n\t\tconst table = SCHEDULE_RECORD_TABLE;\n\t\tconst subscribe = 'true';\n\t\tconst filter = 'active=true';\n\t\tdispatch(RECORD_WATCHER_UPDATED, { table, filter, subscribe });\n\t}\n};\n\nconst changeTab = ({ action, dispatch, updateState, updateProperties }) => {\n\tlet tab = get(action, 'payload.value', '');\n\n\tupdateProperties({\n\t\tselectedTab: tab\n\t});\n\n\tif (tab === SCHEDULE_CALENDAR_VIEW) {\n\t\tupdateState({\n\t\t\tpath: 'dirtyState',\n\t\t\tvalue: false,\n\t\t\toperation: 'set'\n\t\t});\n\t}\n\n\tdispatch(SCHEDULE_ACTIONS.FETCH_TABLE_RECORD_COUNTS, {});\n};\n\nconst fetchCurrentUserData = createGraphQLEffect(CURRENT_USER_QUERY, {\n\tsuccessActionType: SCHEDULE_ACTIONS.CURRENT_USER_DATA_OBTAINED,\n\terrorActionType: SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA\n});\n\nconst updateRecordCounts = ({ dispatch }) => {\n\tdispatch(SCHEDULE_ACTIONS.FETCH_TABLE_RECORD_COUNTS, {});\n};\n\nconst fetchTableRecordCounts = createGraphQLEffect(\n\tTABBED_LIST_RECORD_COUNT_QUERY,\n\t{\n\t\tvariableList: ['query'],\n\t\tsuccessActionType: SCHEDULE_ACTIONS.TABLE_RECORD_COUNTS_OBTAINED,\n\t\terrorActionType: SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\nconst addTableRecordCounts = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: '',\n\t\tvalue: {\n\t\t\terror: false,\n\t\t\trecordCounts: get(action, 'payload.data.query', {})\n\t\t},\n\t\toperation: 'merge'\n\t});\n};\n\nconst handleRetrievalError = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'error',\n\t\tvalue: get(action, 'error', true),\n\t\toperation: 'set'\n\t});\n};\n\nconst handleDirtyScheduleState = ({ state, updateState }) => {\n\tif (get(state, 'properties.selectedTab', '') !== SCHEDULE_CALENDAR_VIEW) {\n\t\tupdateState({\n\t\t\tpath: 'dirtyState',\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t}\n};\n\nconst handleFetchingCalendarData = ({ updateState }) => {\n\tupdateState({\n\t\tpath: 'dirtyState',\n\t\tvalue: true,\n\t\toperation: 'set'\n\t});\n};\n\nconst handleSuccessfulCalendarDataFetch = ({ updateState }) => {\n\tupdateState({\n\t\tpath: 'dirtyState',\n\t\tvalue: false,\n\t\toperation: 'set'\n\t});\n};\n\nexport const handleComponentPropertyChanged = ({ action, dispatch }) => {\n\tconst { name, value, previousValue } = action.payload;\n\tif (name === 'active' && value && !previousValue) {\n\t\tupdateRecordCounts({ dispatch });\n\t}\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[COMPONENT_PROPERTY_CHANGED]: handleComponentPropertyChanged,\n\t[SCHEDULE_ACTIONS.SELECTED_ITEM_SET]: changeTab,\n\t[SCHEDULE_ACTIONS.FETCH_CURRENT_USER_DATA]: fetchCurrentUserData,\n\t[SCHEDULE_ACTIONS.TABBED_LIST_FETCH_REQUESTED]: updateRecordCounts,\n\t[SCHEDULE_ACTIONS.FETCH_TABLE_RECORD_COUNTS]: fetchTableRecordCounts,\n\t[SCHEDULE_ACTIONS.TABLE_RECORD_COUNTS_OBTAINED]: addTableRecordCounts,\n\t[SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA]: handleRetrievalError,\n\t[SCHEDULE_ACTIONS.SCHEDULE_STATE_DIRTY]: handleDirtyScheduleState,\n\t[CALENDAR_ACTIONS.FETCH_CALENDAR_DATA]: handleFetchingCalendarData,\n\t[CALENDAR_ACTIONS.RETRIEVED_CALENDAR_DATA]: handleSuccessfulCalendarDataFetch\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","import { RW_ACTIONS, SCHEDULE_ACTIONS } from '../../common/constants';\n\nconst markScheduleStateAsDirty = coeffects => {\n\tconst { dispatch } = coeffects;\n\tdispatch(SCHEDULE_ACTIONS.SCHEDULE_STATE_DIRTY, {});\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[RW_ACTIONS.SUBSCRIPTION_STARTED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Started');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_SUCCEEDED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Succedded');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_FAILED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Failed');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.MESSAGE_RECEIVED]: markScheduleStateAsDirty,\n\t\t[RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Unsubscribed');\n\t\t\t}\n\t\t}\n\t}\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.schedule-container{display:flex;flex-direction:column;height:100%;overflow-y:hidden}.schedule-container now-heading{margin:1.5rem;display:inline-block;padding-top:.5rem}.schedule-container .schedule-tab-content{display:flex;flex-direction:column;min-height:1px;height:100%}.schedule-container .schedule-tab-content .schedule-calendar,.schedule-container .schedule-tab-content .schedule-list,.schedule-container .schedule-tab-content .schedule-list now-record-list-connected{height:100%}.schedule-container .schedule-tab-content .schedule-calendar sn-manager-calendar,.schedule-container .schedule-tab-content .schedule-calendar sn-manager-schedule-view{display:block;position:relative;height:100%}.schedule-container .schedule-tab-content .schedule-calendar-hidden{height:100%;display:none}.schedule-container .schedule-tab-content .schedule-calendar-hidden sn-manager-calendar,.schedule-container .schedule-tab-content .schedule-calendar-hidden sn-manager-schedule-view{display:block;position:relative;height:100%}.schedule-container now-alert-list{position:absolute;left:30%;width:40%}\", \"\"]);\n\n// exports\n","export { default } from './sn-manager-schedule-preview';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view.js';\nimport props from './properties.js';\nimport previewActionHandlers from './actionHandlers.js';\nimport recordWatcherOverrideActions from './recordWatcherOverrideActions.js';\nimport recordWatcherActions from '../../common/actions/recordWatcherActions';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-schedule-preview', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\t...view,\n\t...props,\n\tactions: recordWatcherActions.actions,\n\tactionHandlers: {\n\t\t...recordWatcherActions.actionHandlers,\n\t\t...recordWatcherOverrideActions.actionHandlers,\n\t\t...previewActionHandlers.actionHandlers\n\t},\n\tstyles\n});\n","import get from 'lodash/get';\nimport '@servicenow/now-empty-state';\n\nimport { SCHEDULE_PROPERTY_DEFAULTS } from '../../common/constants';\n\nconst view = state => {\n\tconst loaded = get(state, 'properties.loaded', false);\n\tconst scheduleState = get(\n\t\tstate,\n\t\t'properties.scheduleState',\n\t\t'loading state'\n\t);\n\n\tlet xStep = parseInt(get(state, 'properties.xStep', '60'));\n\tlet xSize = parseInt(get(state, 'properties.xSize', '24'));\n\tlet xStart = parseInt(get(state, 'properties.xStart', '0'));\n\n\tconst _renderCalendar = () => (\n\t\t<sn-manager-schedule-view\n\t\t\tendpoint={get(state, 'properties.endpoint', '')}\n\t\t\tstartDate={state.properties.startDate}\n\t\t\tendDate={state.properties.endDate}\n\t\t\txStep={xStep ? xStep : SCHEDULE_PROPERTY_DEFAULTS.XSTEP}\n\t\t\txSize={xSize ? xSize : SCHEDULE_PROPERTY_DEFAULTS.XSIZE}\n\t\t\txStart={xStart ? xStart : SCHEDULE_PROPERTY_DEFAULTS.XSTART}\n\t\t/>\n\t);\n\n\tconst _renderLoading = () => (\n\t\t<div>\n\t\t\t<now-empty-state\n\t\t\t\theaderText={scheduleState}\n\t\t\t\tbodyText={false}\n\t\t\t\ttype=\"empty\"\n\t\t\t\tvariant=\"auto\"\n\t\t\t/>\n\t\t</div>\n\t);\n\tconst _renderContent = () => {\n\t\tif (loaded) return _renderCalendar();\n\t\treturn _renderLoading();\n\t};\n\n\treturn (\n\t\t<div className=\"schedule-container\">\n\t\t\t<div>{_renderContent()}</div>\n\t\t</div>\n\t);\n};\n\nexport default {\n\tview\n};\n","import { SCHEDULE_PROPERTY_DEFAULTS } from '../../common/constants';\n\nconst props = {\n\tloadAllSchedules: {\n\t\tdefault: true\n\t},\n\tscheduleState: {\n\t\tdefault: 'not loaded'\n\t},\n\tloaded: {\n\t\tdefault: false\n\t},\n\tsysId: {\n\t\tdefault: ''\n\t},\n\tfields: {\n\t\tdefault: {}\n\t},\n\t//HTTP endpoint that returns scheduling data. Must be in a particular format.\n\tendpoint: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.ENDPOINT\n\t},\n\t//Interval for which you would like to obtain schedule information\n\tstartDate: {},\n\tendDate: {},\n\t//Configures time axis of calendar. xStep = number of minutes per division, xSize = number of divisions, xStart = offset in divisions.\n\txStep: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTEP\n\t},\n\txSize: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSIZE\n\t},\n\txStart: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTART\n\t}\n};\n\nexport default {\n\tproperties: props\n};\n","import get from 'lodash/get';\nimport { actionTypes } from '@servicenow/ui-core';\nimport {\n\tSCHEDULE_ACTIONS,\n\tSCHEDULE_FIELDS,\n\tSCHEDULE_PLAN_STATE,\n\tRECORD_WATCHER_UPDATED,\n\tSCHEDULE_TABBED_LISTS,\n\tGFORM_ACTIONS\n} from '../../common/constants';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst updatePreview = (\n\tupdateProperties,\n\tscheduleStateValue,\n\tscheduleStateDisplayValue,\n\tscheduleStartDate\n) => {\n\tvar props = {\n\t\tloaded: scheduleStateValue === SCHEDULE_PLAN_STATE.DRAFT,\n\t\tscheduleState: scheduleStateDisplayValue\n\t};\n\tif (scheduleStartDate) {\n\t\tprops['startDate'] = scheduleStartDate;\n\t\tprops['endDate'] = scheduleStartDate;\n\t}\n\tupdateProperties(props);\n};\n\nconst bootstrap = {\n\teffect({ state, dispatch, updateProperties }) {\n\t\tconst fields = get(state, 'properties.fields', {});\n\t\tconst scheduleState = get(fields, SCHEDULE_FIELDS.STATE, '');\n\t\tif (scheduleState !== '') {\n\t\t\tupdatePreview(\n\t\t\t\tupdateProperties,\n\t\t\t\tfields[SCHEDULE_FIELDS.STATE].value,\n\t\t\t\tfields[SCHEDULE_FIELDS.STATE].displayValue,\n\t\t\t\tfields[SCHEDULE_FIELDS.START_DATE].value\n\t\t\t);\n\t\t}\n\t\tconst scheduleSysId = get(state, 'properties.sysId', '');\n\t\tif (scheduleSysId === '') {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log('Error loading sys id of schedule record');\n\t\t\treturn;\n\t\t}\n\t\tconst table = SCHEDULE_TABBED_LISTS.SCHEDULES;\n\t\tconst subscribe = 'true';\n\t\tconst filterQuery = 'sys_id=' + scheduleSysId;\n\t\tconst filter = btoa(filterQuery).replace(/=/g, '-');\n\t\tdispatch(RECORD_WATCHER_UPDATED, { table, filter, subscribe });\n\t}\n};\n\nconst scheduleStateUpdated = {\n\teffect({ action, updateProperties, dispatch }) {\n\t\tconst scheduleState = get(\n\t\t\taction.payload,\n\t\t\t'schedule_state',\n\t\t\t'not loaded'\n\t\t);\n\t\tdispatch(GFORM_ACTIONS.RELOAD);\n\t\tupdatePreview(\n\t\t\tupdateProperties,\n\t\t\tscheduleState.value,\n\t\t\tscheduleState.display_value\n\t\t);\n\t}\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[SCHEDULE_ACTIONS.SCHEDULE_STATE_UPDATED]: scheduleStateUpdated\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","import {\n\tRW_ACTIONS,\n\tSCHEDULE_ACTIONS,\n\tSCHEDULE_FIELDS\n} from '../../common/constants';\nimport get from 'lodash/get';\nimport indexOf from 'lodash/indexOf';\n\nconst parseAndReadScheduleStateIfChanged = coeffects => {\n\tconst { action, dispatch } = coeffects;\n\tconst record = get(action.payload, 'data.record', {});\n\tconst changes = get(action.payload, 'data.changes', []);\n\tif (indexOf(changes, SCHEDULE_FIELDS.STATE) < 0) return;\n\tconst scheduleState = record[SCHEDULE_FIELDS.STATE];\n\tdispatch(SCHEDULE_ACTIONS.SCHEDULE_STATE_UPDATED, {\n\t\tschedule_state: scheduleState\n\t});\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[RW_ACTIONS.SUBSCRIPTION_STARTED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Started');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_SUCCEEDED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Succedded');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_FAILED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Failed');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.MESSAGE_RECEIVED]: parseAndReadScheduleStateIfChanged,\n\t\t[RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Unsubscribed');\n\t\t\t}\n\t\t}\n\t}\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"indexOf\"];","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.schedule-container{width:100%;height:100%}.schedule-container>div{height:100%}.schedule-container>div sn-manager-calendar,.schedule-container>div sn-manager-schedule-view{display:block;position:relative;height:100%}\", \"\"]);\n\n// exports\n","import './sn-manager-agent-schedule.js';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport scheduleView from './view.js';\nimport scheduleProps from './properties.js';\nimport scheduleActionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-agent-schedule', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\t...scheduleView,\n\t...scheduleProps,\n\t...scheduleActionHandlers,\n\tstyles\n});\n","import '../../common/calendar/sn-manager-calendar';\nimport '../../common/dataproviders/sn-manager-user-groups/sn-manager-user-groups';\nimport '../../common/dataproviders/sn-manager-user-info/sn-manager-user-info';\nimport '@servicenow/now-tabs';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-record-list-connected';\nimport get from 'lodash/get';\nimport forEach from 'lodash/forEach';\nimport '@servicenow/now-alert';\nimport { t } from 'sn-translate';\n\nimport {\n\tSCHEDULE_AGENT_CALENDAR_VIEW, // monthly tab\n\tSCHEDULE_AGENT_TEAM_CALENDAR_VIEW, // team tab\n\tSCHEDULE_AGENT_TABBED_LISTS, // request list\n\tSCHEDULE_PROPERTY_DEFAULTS, // shared with manager workspace\n\tSCHEDULE_AGENT_TABBED_LIST_LABELS, // list for tabs\n\tSCHEDULE_AGENT_TABBED_LIST_COLUMNS,\n\tSCHEDULE_AGENT_TABBED_LIST_QUERIES,\n\tSCHEDULE_AGENT_LABEL\n} from '../../common/constants.js';\n\nimport { SchedulingRenderer } from '../sn-manager-schedule-view/renderer';\n\nconst view = state => {\n\tconst selectedTab = state.properties.selectedTab;\n\tconst items = [];\n\n\tforEach(SCHEDULE_AGENT_TABBED_LIST_LABELS, (value, key) => {\n\t\titems.push({\n\t\t\tid: key,\n\t\t\tlabel: value,\n\t\t\tcount: get(state, ['recordCounts', key, '_rowCount'], '')\n\t\t});\n\t});\n\n\tlet xStep = parseInt(\n\t\tget(state, 'properties.xStep', SCHEDULE_PROPERTY_DEFAULTS.XSTEP)\n\t);\n\tlet xSize = parseInt(\n\t\tget(state, 'properties.xSize', SCHEDULE_PROPERTY_DEFAULTS.XSIZE)\n\t);\n\tlet xStart = parseInt(\n\t\tget(state, 'properties.xStart', SCHEDULE_PROPERTY_DEFAULTS.XSTART)\n\t);\n\n\tconst _renderLoading = () => <div>{t('Loading')}</div>;\n\n\tconst _renderError = () => <div>{t('An error occurred')}</div>;\n\n\tconst _renderTimeline = state => {\n\t\tconst assignmentGroups = get(state, 'properties.assignmentGroups', '');\n\t\tif (assignmentGroups === '') {\n\t\t\treturn <span></span>;\n\t\t}\n\t\treturn (\n\t\t\t<sn-manager-calendar\n\t\t\t\tavailableViewTypes={'TIMELINE'}\n\t\t\t\tstartingView={'DAY'}\n\t\t\t\tendpoint={get(state, 'properties.endpoint', '')}\n\t\t\t\tassignmentGroups={get(state, 'properties.assignmentGroups', '')}\n\t\t\t\tindividualAgents={get(state, 'properties.individualAgents', '')}\n\t\t\t\tcurrentUser={get(state, 'properties.currentUser', {})}\n\t\t\t\tstartDate={get(state, 'properties.startDate', '')}\n\t\t\t\tendDate={get(state, 'properties.endDate', '')}\n\t\t\t\tisPublished={true}\n\t\t\t\tavailableTimezones={get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.availableTimezones',\n\t\t\t\t\t[]\n\t\t\t\t)}\n\t\t\t\ttimezone={get(state, 'properties.timezone', '')}\n\t\t\t\ttimeFormat={get(state, 'properties.timeFormat', '')}\n\t\t\t\txStep={xStep ? xStep : SCHEDULE_PROPERTY_DEFAULTS.XSTEP}\n\t\t\t\txSize={xSize ? xSize : SCHEDULE_PROPERTY_DEFAULTS.XSIZE}\n\t\t\t\txStart={xStart ? xStart : SCHEDULE_PROPERTY_DEFAULTS.XSTART}\n\t\t\t\ttimelineDayTemplateRenderer={new SchedulingRenderer()}\n\t\t\t\ttimelineWeekTemplateRenderer={new SchedulingRenderer()}\n\t\t\t\tdatePickerTemplates={get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.datePickerTemplates',\n\t\t\t\t\t{}\n\t\t\t\t)}\n\t\t\t\tpopoverShowEditButton={false}\n\t\t\t\tpopoverShowDeleteButton={false}\n\t\t\t\tshowAgentRequestIcons={true}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst _renderCalendar = state => {\n\t\tconst assignmentGroups = get(state, 'properties.assignmentGroups', '');\n\t\tif (assignmentGroups === '') {\n\t\t\treturn <span></span>;\n\t\t}\n\t\treturn (\n\t\t\t<sn-manager-calendar\n\t\t\t\tavailableViewTypes={'CALENDAR'}\n\t\t\t\tstartingView={'MONTH'}\n\t\t\t\tendpoint={get(state, 'properties.endpoint', '')}\n\t\t\t\tindividualAgents={get(state, 'properties.userId', '')}\n\t\t\t\tcurrentUser={get(state, 'properties.currentUser', {})}\n\t\t\t\tstartDate={get(state, 'properties.startDate', '')}\n\t\t\t\tendDate={get(state, 'properties.endDate', '')}\n\t\t\t\tisPublished={true}\n\t\t\t\tavailableTimezones={get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.availableTimezones',\n\t\t\t\t\t[]\n\t\t\t\t)}\n\t\t\t\ttimezone={get(state, 'properties.timezone', '')}\n\t\t\t\ttimeFormat={get(state, 'properties.timeFormat', '')}\n\t\t\t\txStep={xStep ? xStep : SCHEDULE_PROPERTY_DEFAULTS.XSTEP}\n\t\t\t\txSize={xSize ? xSize : SCHEDULE_PROPERTY_DEFAULTS.XSIZE}\n\t\t\t\txStart={xStart ? xStart : SCHEDULE_PROPERTY_DEFAULTS.XSTART}\n\t\t\t\ttimelineDayTemplateRenderer={new SchedulingRenderer()}\n\t\t\t\ttimelineWeekTemplateRenderer={new SchedulingRenderer()}\n\t\t\t\thideAgendaView={true}\n\t\t\t\tdatePickerTemplates={get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.datePickerTemplates',\n\t\t\t\t\t{}\n\t\t\t\t)}\n\t\t\t\tshowAgentRequestIcons={true}\n\t\t\t\tpopoverShowEditButton={false}\n\t\t\t\tpopoverShowDeleteButton={false}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst _renderTabbedList = () => (\n\t\t<now-record-list-connected\n\t\t\ttable={selectedTab}\n\t\t\tlistTitle={SCHEDULE_AGENT_TABBED_LIST_LABELS[selectedTab]}\n\t\t\tcolumns={SCHEDULE_AGENT_TABBED_LIST_COLUMNS[selectedTab]}\n\t\t\tquery={SCHEDULE_AGENT_TABBED_LIST_QUERIES[selectedTab]}\n\t\t/>\n\t);\n\n\tconst _renderUserGroup = options => (\n\t\t<sn-manager-user-groups options={options} />\n\t);\n\n\tconst _renderContent = state => {\n\t\tif (state.error) return _renderError();\n\n\t\tconst active = get(state, 'properties.active', false);\n\n\t\tconst selectedTab = state.properties.selectedTab;\n\n\t\tconst hiddenCalendar = !(selectedTab === SCHEDULE_AGENT_CALENDAR_VIEW);\n\t\tconst hiddenTimeline = !(\n\t\t\tselectedTab === SCHEDULE_AGENT_TEAM_CALENDAR_VIEW\n\t\t);\n\t\tconst hiddenRequest = !(\n\t\t\tselectedTab === SCHEDULE_AGENT_TABBED_LISTS.TIME_OFF ||\n\t\t\tselectedTab === SCHEDULE_AGENT_TABBED_LISTS.SHIFT_SWAP ||\n\t\t\tselectedTab === SCHEDULE_AGENT_TABBED_LISTS.APPROVALS\n\t\t);\n\n\t\tconst user = get(state, 'properties.userId', '');\n\t\tconst options = {\n\t\t\tuser\n\t\t};\n\n\t\tif (!active) return _renderLoading();\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<sn-manager-user-info />\n\t\t\t\t{user ? _renderUserGroup(options) : ''}\n\t\t\t\t<div hidden={hiddenTimeline} className=\"calendar-wrapper\">\n\t\t\t\t\t{_renderTimeline(state)}\n\t\t\t\t</div>\n\t\t\t\t<div hidden={hiddenCalendar} className=\"calendar-wrapper\">\n\t\t\t\t\t{_renderCalendar(state)}\n\t\t\t\t</div>\n\t\t\t\t<div hidden={hiddenRequest} className=\"list-pagination\">\n\t\t\t\t\t{!hiddenRequest ? _renderTabbedList() : '<span></span>'}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst _renderSwapAlert = state => {\n\t\treturn state.showSwapAlert ? (\n\t\t\t<now-alert\n\t\t\t\tcontent={t('{0} submitted', state.swapReqNumber)}\n\t\t\t\theader={t('Swap request')}\n\t\t\t\ticonName=\"calendar-fill\"\n\t\t\t\taction={{\n\t\t\t\t\ttype: 'dismiss',\n\t\t\t\t\thref: '',\n\t\t\t\t\tlabel: 'dismiss_swap_alert'\n\t\t\t\t}}\n\t\t\t\tstatus=\"info\"\n\t\t\t></now-alert>\n\t\t) : null;\n\t};\n\n\tconst _renderTimeOffAlert = state => {\n\t\treturn state.showTimeOffAlert ? (\n\t\t\t<now-alert\n\t\t\t\tcontent={t('{0} submitted', state.timeOffRecord)}\n\t\t\t\theader={t('Time off request')}\n\t\t\t\ticonName=\"calendar-fill\"\n\t\t\t\taction={{\n\t\t\t\t\ttype: 'dismiss',\n\t\t\t\t\thref: '',\n\t\t\t\t\tlabel: 'dismiss_timeoff_alert'\n\t\t\t\t}}\n\t\t\t\tstatus=\"info\"\n\t\t\t></now-alert>\n\t\t) : null;\n\t};\n\n\treturn (\n\t\t<div className=\"agent-schedule-container\">\n\t\t\t<div className=\"agent-schedule-header\">\n\t\t\t\t<div className=\"schedule-header-left\">\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={SCHEDULE_AGENT_LABEL}\n\t\t\t\t\t\tlevel=\"1\"\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t\thas-no-margin\n\t\t\t\t\t\twont-wrap\n\t\t\t\t\t></now-heading>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"schedule-header-center\">\n\t\t\t\t\t{_renderSwapAlert(state)}\n\t\t\t\t\t{_renderTimeOffAlert(state)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"schedule-header-right\"></div>\n\t\t\t</div>\n\t\t\t<now-tabs\n\t\t\t\titems={items}\n\t\t\t\tselectedItem={state.properties.selectedTab}\n\t\t\t/>\n\t\t\t<div className=\"agent-schedule-container-content\">\n\t\t\t\t{_renderContent(state)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default {\n\tview\n};\n","import {\n\tSCHEDULE_PROPERTY_DEFAULTS,\n\tSCHEDULE_AGENT_CALENDAR_VIEW\n} from '../../common/constants.js';\n\nconst ScheduleProps = {\n\tactive: {},\n\tuserId: {}, //User sys_id\n\tcurrentUser: {}, //User object payload from GlideDomain Query\n\tselectedTab: {\n\t\tdefault: SCHEDULE_AGENT_CALENDAR_VIEW\n\t},\n\t//HTTP endpoint that returns scheduling data. Must be in a particular format.\n\tendpoint: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.ENDPOINT\n\t},\n\t//List of sys ids of sys_user_group records, whose members you'd like to get schedule information for\n\tassignmentGroups: {\n\t\t//default: 'a393efa1d701120035ae23c7ce61030c' //Application development group\n\t},\n\t//List of sys ids of sys_user records, of users you'd like to get schedule information for\n\tindividualAgents: {\n\t\t//default: '62526fa1d701120035ae23c7ce6103c6' //Guillermo Frohlich is used as default during development.\n\t},\n\t//Interval for which you would like to obtain schedule information\n\tstartDate: {\n\t\t//default: '2020-02-03'\n\t},\n\tendDate: {\n\t\t//default: '2020-02-06'\n\t},\n\t//Array of timezones to be made selectable, as well as starting timezone\n\tavailableTimezones: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.AVAILABLE_TIMEZONES\n\t},\n\ttimezone: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.TIMEZONE\n\t},\n\ttimeFormat: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.TIMEFORMAT\n\t},\n\t//Configures time axis of calendar. xStep = number of minutes per division, xSize = number of divisions, xStart = offset in divisions.\n\txStep: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTEP\n\t},\n\txSize: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSIZE\n\t},\n\txStart: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.XSTART\n\t},\n\t//Configures format of dates of calendar header.\n\tdatePickerTemplates: {\n\t\tdefault: SCHEDULE_PROPERTY_DEFAULTS.DATE_PICKER_TEMPLATE\n\t}\n};\n\nexport default {\n\tproperties: ScheduleProps\n};\n","import get from 'lodash/get';\nimport isNil from 'lodash/isNil';\nimport moment from 'moment';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tSCHEDULE_AGENT_ACTIONS,\n\tUSER_GROUP_ACTIONS,\n\tUSER_INFO_ACTIONS,\n\tNOW_ALERT_ACTION_CLICKED,\n\tDISMISS_SWAP_ALERT,\n\tDISMISS_TIME_OFF_ALERT,\n\tSCHEDULE_PROPERTY_DEFAULTS\n} from '../../common/constants.js';\nimport { AGENT_SCHEDULE_TIME_OFF_SUCCESS } from '../sn-manager-agent-time-off-request/constants';\nimport { TABBED_LIST_RECORD_COUNT_QUERY } from '../../common/queries.js';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst bootstrap = {\n\teffect({ state, dispatch, updateProperties }) {\n\t\tupdateProperties({\n\t\t\tstartDate: moment(get(state, 'properties.startDate', {}))\n\t\t\t\t.startOf('month')\n\t\t\t\t.format('YYYY-MM-DD'),\n\t\t\tendDate: moment(get(state, 'properties.endDate', {}))\n\t\t\t\t.endOf('month')\n\t\t\t\t.format('YYYY-MM-DD')\n\t\t});\n\n\t\tdispatch(SCHEDULE_AGENT_ACTIONS.FETCH_TABLE_RECORD_COUNTS, {});\n\t}\n};\n\nconst changeTab = ({ action, dispatch, updateProperties }) => {\n\tupdateProperties({\n\t\tselectedTab: get(action, 'payload.value', '')\n\t});\n\n\tdispatch(SCHEDULE_AGENT_ACTIONS.FETCH_TABLE_RECORD_COUNTS, {});\n};\n\nconst handleGroupData = ({ action, updateProperties }) => {\n\t//const assignmentGroupData = get(action, 'groups', \"\");\n\tlet assignments = get(action, 'payload.groups', '');\n\tupdateProperties({\n\t\tassignmentGroups: assignments\n\t});\n};\n\nconst updateRecordCounts = ({ dispatch }) => {\n\tdispatch(SCHEDULE_AGENT_ACTIONS.FETCH_TABLE_RECORD_COUNTS, {});\n};\n\nconst fetchTableRecordCounts = createGraphQLEffect(\n\tTABBED_LIST_RECORD_COUNT_QUERY,\n\t{\n\t\tvariableList: ['query'],\n\t\tsuccessActionType: SCHEDULE_AGENT_ACTIONS.TABLE_RECORD_COUNTS_OBTAINED,\n\t\terrorActionType: SCHEDULE_AGENT_ACTIONS.COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\nconst addTableRecordCounts = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: '',\n\t\tvalue: {\n\t\t\terror: false,\n\t\t\trecordCounts: get(action, 'payload.data.query', {})\n\t\t},\n\t\toperation: 'merge'\n\t});\n};\n\nconst handleUserData = ({ action, updateProperties }) => {\n\tlet dateTimeFormat = get(\n\t\taction,\n\t\t'payload.currentUser.dateTimeFormat',\n\t\t'yyyy-MM-dd HH:mm:ss'\n\t);\n\tlet timezone = get(\n\t\taction,\n\t\t'payload.currentUser.timeZone',\n\t\tSCHEDULE_PROPERTY_DEFAULTS.TIMEZONE\n\t);\n\tlet meridianMarker = dateTimeFormat.indexOf('a'); //Server Returns 'yyyy-MM-dd HH:mm:ss' Or 'yyyy-MM-dd HH:mm:ss a'\n\tlet timeFormat = meridianMarker === -1 ? 'HH:mm' : 'hh:mm A'; //Moment.js time format\n\tlet currentUser = get(action, 'payload.currentUser', {});\n\tlet userId = get(currentUser, 'sys_id', '');\n\n\tupdateProperties({\n\t\tuserId,\n\t\tcurrentUser,\n\t\ttimeFormat,\n\t\ttimezone\n\t});\n};\n\nconst handleRetrievalError = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'error',\n\t\tvalue: get(action, 'error', true),\n\t\toperation: 'set'\n\t});\n};\n\nconst handleShiftSwapSuccess = ({ action, updateState }) => {\n\tconst swapReqNumber = get(action, 'payload.swapReqNumber', '');\n\tupdateState({\n\t\tshowSwapAlert: !isNil(swapReqNumber),\n\t\tswapReqNumber\n\t});\n};\n\nconst handleAlertClicked = ({ action, updateState }) => {\n\tconst actionLabel = get(action, 'payload.action.label', '');\n\tif (actionLabel === DISMISS_SWAP_ALERT) {\n\t\tupdateState({\n\t\t\tshowSwapAlert: false,\n\t\t\tswapReqNumber: ''\n\t\t});\n\t} else if (actionLabel == DISMISS_TIME_OFF_ALERT) {\n\t\tupdateState({\n\t\t\tshowTimeOffAlert: false,\n\t\t\ttimeOffRecord: ''\n\t\t});\n\t}\n};\n\nconst handleTimeOffSuccess = ({ action, updateState }) => {\n\tconst timeOffRecord = get(action, 'payload.timeOffRecord', '');\n\tupdateState({\n\t\tshowTimeOffAlert: !isNil(timeOffRecord),\n\t\ttimeOffRecord\n\t});\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[SCHEDULE_AGENT_ACTIONS.SELECTED_ITEM_SET]: changeTab,\n\t[SCHEDULE_AGENT_ACTIONS.TABBED_LIST_FETCH_REQUESTED]: updateRecordCounts,\n\t[SCHEDULE_AGENT_ACTIONS.FETCH_TABLE_RECORD_COUNTS]: fetchTableRecordCounts,\n\t[SCHEDULE_AGENT_ACTIONS.TABLE_RECORD_COUNTS_OBTAINED]: addTableRecordCounts,\n\t[SCHEDULE_AGENT_ACTIONS.COULD_NOT_RETRIEVE_DATA]: handleRetrievalError,\n\t[USER_GROUP_ACTIONS.GROUPS_READY]: handleGroupData,\n\t[USER_INFO_ACTIONS.USER_INFO_READY]: handleUserData,\n\t[SCHEDULE_AGENT_ACTIONS.SHIFT_SWAP_SUBMIT_SUCCESS]: handleShiftSwapSuccess,\n\t[AGENT_SCHEDULE_TIME_OFF_SUCCESS]: handleTimeOffSuccess,\n\t[NOW_ALERT_ACTION_CLICKED]: handleAlertClicked\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.agent-schedule-container{height:100%;overflow-y:hidden}.agent-schedule-container-content{height:calc(100% - 102px);display:flex;flex-direction:column}.agent-schedule-container-content>div,.agent-schedule-container-content>div .calendar-wrapper{height:100%}.agent-schedule-container-content>div .calendar-wrapper sn-manager-calendar{height:100%;display:block}.agent-schedule-container-content>div .list-pagination{height:100%}.agent-schedule-header{display:flex;flex-direction:row;padding:1.5rem .75rem}.agent-schedule-header div{flex:1}\", \"\"]);\n\n// exports\n","import './sn-manager-teams';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport { view } from './view';\nimport {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED\n} from '@servicenow/ui-core/lib/constants';\nimport { isEmpty, isNil } from 'lodash';\n\nimport {\n\tfetchTeamsHandler,\n\thandleFetchTeamsSuccess,\n\thandleFetchAllTeamScores,\n\thandleFetchAllTeamScoreSuccess,\n\terrorHandler,\n\thandleCardItemClick,\n\thandleComponentPropertyChanged\n} from './actionHandlers';\nimport { getSessionData } from '../../utils/utils';\nimport * as teamConstants from './constants';\nimport teamProperties from './defaultProperties';\nimport { constructDataFramePayload } from './helpers';\nimport { MODULES } from '../../common/constants';\nimport { teamDateChangeBehavior } from '../../utils/teamUtils';\n\nexport default createCustomElement('sn-manager-teams', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tbehaviors: [teamDateChangeBehavior],\n\tproperties: teamProperties,\n\tstyles,\n\tactionHandlers: {\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch, properties, updateState }) => {\n\t\t\tlet teamsData = getSessionData(MODULES.TEAMS);\n\t\t\t//If no schema, fetch team schemas\n\t\t\tif (isNil(teamsData.teams) || isEmpty(teamsData.teams)) {\n\t\t\t\t//teamsData.teamProfilesData\n\t\t\t\tdispatch(teamConstants.FETCH_TEAMS, {\n\t\t\t\t\tendpoint: 'teams'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//Update state with session data and fetch scores\n\t\t\t\tlet teams = teamsData.teams;\n\t\t\t\tif (!isNil(teams) && !isEmpty(teams)) {\n\t\t\t\t\tlet dataFramePayload = constructDataFramePayload(\n\t\t\t\t\t\tteams,\n\t\t\t\t\t\tproperties.dateRange,\n\t\t\t\t\t\tdispatch\n\t\t\t\t\t);\n\t\t\t\t\tif (!isEmpty(dataFramePayload)) {\n\t\t\t\t\t\tdispatch(teamConstants.FETCH_ALL_TEAM_SCORES, {\n\t\t\t\t\t\t\tdata: dataFramePayload\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tteams: teams\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[COMPONENT_PROPERTY_CHANGED]: handleComponentPropertyChanged,\n\t\tFETCH_TEAMS: fetchTeamsHandler,\n\t\tFETCH_TEAMS_SUCCESS: handleFetchTeamsSuccess,\n\t\tFETCH_TEAMS_FAILED: errorHandler,\n\t\tFETCH_ALL_TEAM_SCORES: handleFetchAllTeamScores,\n\t\tFETCH_ALL_TEAM_SCORE_SUCCESS: handleFetchAllTeamScoreSuccess,\n\t\tFETCH_ALL_TEAM_SCORE_FAILED: errorHandler,\n\t\t[teamConstants.CARD_CLICKED]: handleCardItemClick,\n\t\t[teamConstants.FETCH_TEAM_SCORES_START]: ({ updateState }) => {\n\t\t\tupdateState({ loadingScores: true });\n\t\t}\n\t}\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.teams-container{padding:1.5rem}.teams-header{display:flex;justify-content:space-between;margin-bottom:2.5rem}.teams-header now-heading{line-height:1.25;padding-top:.5rem}\", \"\"]);\n\n// exports\n","import '../../common/sn-manager-indicator-groups';\nimport '@servicenow/now-empty-state';\nimport { t } from 'sn-translate';\nimport { isNil, isEmpty } from 'lodash';\nimport { generateCardDataForIndicatorGroup } from './helpers';\nimport { getUserDateFormat } from '../../common/selectors';\nimport { formatDateRange } from '../../utils/dateUtils';\nimport { CONTACT_ADMIN_MESSAGE } from '../../common/constants';\n\nexport const view = state => {\n\tconst { dateRange } = state.properties;\n\tconst heading = t('Teams');\n\tconst userDateFormat = getUserDateFormat();\n\tconst formattedDateRange = formatDateRange(dateRange);\n\tconst hasContent = !isNil(state.teams) && !isEmpty(state.teams);\n\n\treturn (\n\t\t<div className=\"teams-container\">\n\t\t\t<div className=\"teams-header\" title={heading}>\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={heading}\n\t\t\t\t\tvariant=\"header-primary\"\n\t\t\t\t\thas-no-margin\n\t\t\t\t/>\n\t\t\t\t{hasContent ? (\n\t\t\t\t\t<now-date-range-picker\n\t\t\t\t\t\tstart={formattedDateRange.start}\n\t\t\t\t\t\tend={formattedDateRange.end}\n\t\t\t\t\t\tformat={userDateFormat}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{hasContent ? (\n\t\t\t\t\tstate.teams.map(team => renderIndicatorGroup(team, state))\n\t\t\t\t) : (\n\t\t\t\t\t<now-empty-state\n\t\t\t\t\t\ttype=\"empty\"\n\t\t\t\t\t\theaderText={t('No team KPIs configured yet')}\n\t\t\t\t\t\tbodyText={CONTACT_ADMIN_MESSAGE}\n\t\t\t\t\t\tvariant=\"fit\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst renderIndicatorGroup = (indicatorGroup, state) => {\n\tconst cardData = generateCardDataForIndicatorGroup(indicatorGroup, state);\n\treturn (\n\t\t<div className=\"indicator-group-container\">\n\t\t\t<now-heading\n\t\t\t\tlabel={indicatorGroup.indicator_group}\n\t\t\t\tvariant=\"header-secondary\"\n\t\t\t/>\n\t\t\t<sn-manager-indicator-groups\n\t\t\t\tindicatorGroupLabel={indicatorGroup.indicator_group}\n\t\t\t\tcardData={cardData}\n\t\t\t\tloadingScores={state.loadingScores}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import './sn-manager-indicator-groups';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport defaultProperties from './defaultProperties';\n\nexport default createCustomElement('sn-manager-indicator-groups', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: defaultProperties,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.indicator-group-set-container{display:flex;flex-wrap:wrap;margin-bottom:.5rem}.indicator-group-set-container sn-manager-indicator-group-card{width:calc(25% - .75rem);margin-right:.75rem;margin-bottom:1.5rem}.indicator-group-set-container sn-manager-indicator-group-card:nth-child(4){margin-right:0}\", \"\"]);\n\n// exports\n","import '@servicenow/now-card';\nimport '../sn-manager-indicator-group-card';\nconst view = state => {\n\tconst { properties: props } = state;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"indicator-group-set-container\"\n\t\t\ttitle={props.indicatorGroupLabel}\n\t\t>\n\t\t\t{renderCards(props)}\n\t\t</div>\n\t);\n};\n\nconst renderCards = props => {\n\treturn props.cardData.map(cardItem => {\n\t\tconst element = (\n\t\t\t<sn-manager-indicator-group-card\n\t\t\t\t{...cardItem}\n\t\t\t\tloadingScores={props.loadingScores}\n\t\t\t/>\n\t\t);\n\t\treturn element;\n\t});\n};\n\nexport default view;\n","const indicatorGroupSetProperties = {\n\tcardData: {\n\t\tdefault: []\n\t},\n\tindicatorGroupLabel: {\n\t\tdefault: ''\n\t},\n\tloadingScores: {\n\t\tdefault: false\n\t}\n};\n\nexport default indicatorGroupSetProperties;\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { getSessionData, setSessionData } from '../../utils/utils';\nimport * as teamConstants from './constants';\nimport { ITEM_SELECTED, SYS_USER_GROUP } from '../../common/constants';\nimport { get, isNil, isEmpty, isEqual } from 'lodash';\nimport { constructDataFramePayload } from './helpers';\nimport { MODULES } from '../../common/constants';\n\nexport const fetchTeamsHandler = createHttpEffect(\n\t'/api/sn_team_perf/ws/:endpoint',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['endpoint'],\n\t\tencodeURIComponent: false,\n\t\tsuccessActionType: teamConstants.FETCH_TEAMS_SUCCESS,\n\t\terrorActionType: teamConstants.FETCH_TEAMS_FAILED\n\t}\n);\n\nexport const handleFetchTeamsSuccess = coeffects => {\n\tconst teams = coeffects.action.payload.result;\n\t//set the Team Profile Schema to Session data\n\tlet sessionData = getSessionData(MODULES.TEAMS);\n\tsessionData.teams = teams;\n\tsetSessionData(MODULES.TEAMS, sessionData);\n\n\t//Update Component state with schema to render the cards\n\tcoeffects.updateState({\n\t\tteams: teams\n\t});\n\n\t//Now that we have the schema, Fetch the scores for the indicators\n\tif (!isNil(teams) && !isEmpty(teams)) {\n\t\tlet dataFramePayload = constructDataFramePayload(\n\t\t\tteams,\n\t\t\tcoeffects.state.properties.dateRange,\n\t\t\tcoeffects.dispatch\n\t\t);\n\t\tif (!isEmpty(dataFramePayload)) {\n\t\t\tcoeffects.dispatch(teamConstants.FETCH_ALL_TEAM_SCORES, {\n\t\t\t\tdata: dataFramePayload\n\t\t\t});\n\t\t}\n\t}\n};\n\nexport const handleFetchAllTeamScores = createHttpEffect(\n\t'api/now/pa/scores/data_frame?multi_indicator_breakdowns=true',\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\tstartActionType: teamConstants.FETCH_TEAM_SCORES_START,\n\t\tsuccessActionType: teamConstants.FETCH_ALL_TEAM_SCORE_SUCCESS,\n\t\terrorActionType: teamConstants.FETCH_ALL_TEAM_SCORE_FAILED\n\t}\n);\n\nexport const handleFetchAllTeamScoreSuccess = coeffects => {\n\tconst rows = coeffects.action.payload.result.rows;\n\n\t//Data Frame API gives scores by rows of Assignment Groups as complex object\n\t// Transform that to a simpler map of assignment group scores\n\tconst teamScores = {};\n\trows.map(row => {\n\t\tteamScores[Object.keys(row.breakdowns)[0]] = row.scores;\n\t});\n\tcoeffects.updateState({\n\t\tteamScores: teamScores,\n\t\tloadingScores: false\n\t});\n};\n\nexport const errorHandler = coeffects => {\n\tconsole.log('Fetch api error', coeffects.action); // eslint-disable-line\n};\n\nexport const handleCardItemClick = coeffects => {\n\tlet cardId = get(coeffects.action, 'payload.cardId', '');\n\tcoeffects.dispatch(ITEM_SELECTED, {\n\t\ttable: SYS_USER_GROUP,\n\t\tsys_id: cardId\n\t});\n};\n\nexport const handleComponentPropertyChanged = ({ action, state, dispatch }) => {\n\tconst { name, value, previousValue } = action.payload;\n\tconst { teams } = state;\n\n\tif (isEqual(value, previousValue)) {\n\t\treturn;\n\t}\n\n\tif (name === 'dateRange' && !isEmpty(teams)) {\n\t\tconst dataFramePayload = constructDataFramePayload(teams, value);\n\t\tdispatch(teamConstants.FETCH_ALL_TEAM_SCORES, {\n\t\t\tdata: dataFramePayload\n\t\t});\n\t}\n};\n","const teamProperties = {\n\tactive: {\n\t\tdefault: false\n\t},\n\tendpoint: {\n\t\tdefault: 'teams'\n\t}\n};\n\nexport default teamProperties;\n","module.exports = __TECTONIC__lodash_4_17_15[\"isFinite\"];","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport coachingView from './view';\nimport coachingProps from './properties';\nimport coachingActionHandlers from './actions';\nimport recordWatcherActions from '../../common/actions/recordWatcherActions';\nimport recordWatcherOverrideActions from './recordWatcherOverrideActions.js';\nimport alertListBehavior from '../../common/behaviors/alertList.js';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-coaching', {\n\trenderer: {\n\t\ttype: snabbdom\n\t},\n\tbehaviors: [alertListBehavior],\n\tinitialState: { skillMatrixLastRefresh: Date.now() },\n\tstyles,\n\t...coachingView,\n\t...coachingProps,\n\tactions: recordWatcherActions.actions,\n\tactionHandlers: {\n\t\t...recordWatcherActions.actionHandlers,\n\t\t...recordWatcherOverrideActions.actionHandlers,\n\t\t...coachingActionHandlers.actionHandlers\n\t}\n});\n","import '@servicenow/now-empty-state';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-tabs';\nimport '@servicenow/now-record-list-connected';\nimport '@servicenow/now-alert';\nimport { t } from 'sn-translate';\nimport '../sn-manager-coaching-skill-matrix/index';\nimport '../sn-manager-coaching-overview';\nimport '../../common/dataproviders/sn-manager-user-groups/sn-manager-user-groups';\nimport {\n\tGROUP_EMPTY_HEADER_MESSAGE,\n\tGROUP_EMPTY_MESSAGE\n} from '../common/constants';\nimport {\n\tCOACHING_SKILLS,\n\tCOACHING_TRAINING,\n\tCOACHING_ASSESSMENTS,\n\titems,\n\tASSESSMENT_TABLE,\n\tASSESSMENT_LIST_TITLE,\n\tASSESSMENT_QUERY,\n\tTRAINING_TABLE,\n\tTRAINING_LIST_TITLE,\n\tTRAINING_QUERY\n} from './constants';\nimport { MANAGER_WORKSPACE_VIEW } from '../../common/constants';\nimport { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport get from 'lodash/get';\n\nconst view = state => {\n\tconst selectedTab = state.properties.selectedTab;\n\tconst managerId = state.properties.managerId;\n\tconst groupIds = state.properties.groupIds;\n\tconst isSkillMatrixTabSelected = selectedTab === COACHING_SKILLS;\n\tconst heading = t('Coaching');\n\tconst alertItems = get(state, 'behaviors.alertList.alertItems', []);\n\tconst qualityIndicatorJSON = get(state, 'qualityIndicatorJSON');\n\n\tconst _renderLoading = () => <now-empty-state type=\"loading\" />;\n\tconst _renderEmpty = () => (\n\t\t<now-empty-state\n\t\t\ttype=\"empty\"\n\t\t\theaderText={GROUP_EMPTY_HEADER_MESSAGE}\n\t\t\tbodyText={GROUP_EMPTY_MESSAGE}\n\t\t/>\n\t);\n\n\tconst _renderOverviewContent = () => (\n\t\t<sn-manager-coaching-overview\n\t\t\tmanager-id={managerId}\n\t\t\tgroup-ids={groupIds}\n\t\t\tqualityIndicatorJSON={qualityIndicatorJSON}\n\t\t></sn-manager-coaching-overview>\n\t);\n\tconst _renderOverview = () => {\n\t\tif (managerId && groupIds) return _renderOverviewContent();\n\t\treturn _renderLoading();\n\t};\n\tconst refreshRequested = {\n\t\ttimestamp: Date.now()\n\t};\n\n\tconst _renderAssessment = () => (\n\t\t<now-record-list-connected\n\t\t\ttable={ASSESSMENT_TABLE}\n\t\t\tlistTitle={ASSESSMENT_LIST_TITLE}\n\t\t\tquery={ASSESSMENT_QUERY}\n\t\t\tview={MANAGER_WORKSPACE_VIEW}\n\t\t\trefreshRequested={refreshRequested}\n\t\t/>\n\t);\n\n\tconst _renderTraining = () => (\n\t\t<now-record-list-connected\n\t\t\ttable={TRAINING_TABLE}\n\t\t\tlistTitle={TRAINING_LIST_TITLE}\n\t\t\tquery={TRAINING_QUERY}\n\t\t\tview={MANAGER_WORKSPACE_VIEW}\n\t\t\thideDeclarativeActions={true}\n\t\t\trefreshRequested={refreshRequested}\n\t\t/>\n\t);\n\n\tconst _renderSkillMatrixContent = () => {\n\t\treturn (\n\t\t\t<sn-manager-coaching-skill-matrix\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: isSkillMatrixTabSelected ? 'block' : 'none'\n\t\t\t\t}}\n\t\t\t\trefreshRequested={{ timestamp: state.skillMatrixLastRefresh }}\n\t\t\t\tmanager-id={managerId}\n\t\t\t\tgroup-ids={groupIds}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst _renderSkillMatrix = () => {\n\t\tif (managerId && groupIds) {\n\t\t\tlet groups = groupIds.split('=')[1];\n\t\t\tif (groups) return _renderSkillMatrixContent();\n\t\t\treturn _renderEmpty();\n\t\t}\n\t\treturn _renderLoading();\n\t};\n\n\tconst _renderOtherTabs = () => {\n\t\tswitch (selectedTab) {\n\t\tcase COACHING_TRAINING:\n\t\t\treturn _renderTraining();\n\t\tcase COACHING_ASSESSMENTS:\n\t\t\treturn _renderAssessment();\n\t\tdefault:\n\t\t\treturn _renderOverview();\n\t\t}\n\t};\n\n\tconst _renderContent = () => {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{_renderSkillMatrix()}\n\t\t\t\t{!isSkillMatrixTabSelected ? _renderOtherTabs() : null}\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\tconst _renderUserGroupFetcher = managerId => {\n\t\tif (managerId) {\n\t\t\treturn (\n\t\t\t\t<sn-manager-user-groups\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tforManagedGroups: true,\n\t\t\t\t\t\tuser: managerId\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"coaching-container\">\n\t\t\t{alertItems.length > 0 ? (\n\t\t\t\t<now-alert-list configAriaLive=\"polite\" items={alertItems} />\n\t\t\t) : null}\n\n\t\t\t<div>{_renderUserGroupFetcher(managerId)}</div>\n\t\t\t<now-heading\n\t\t\t\tlabel={heading}\n\t\t\t\tvariant=\"header-primary\"\n\t\t\t\thas-no-margin\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<now-tabs items={items} selected-item={selectedTab} />\n\t\t\t</div>\n\t\t\t<div className=\"coaching-tab-content\">{_renderContent()}</div>\n\t\t</div>\n\t);\n};\n\nexport default {\n\tview\n};\n","import './coaching-skill-matrix';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport actions from './actions';\nimport view from './view';\nimport properties from './properties';\nimport styles from './styles.scss';\nimport { STATUS } from './constants';\nimport { userPreferencesBehavior } from 'sn-user-preferences';\nexport default createCustomElement('sn-manager-coaching-skill-matrix', {\n\trenderer: { type: snabbdom, view },\n\tbehaviors: [userPreferencesBehavior],\n\tinitialState: {\n\t\tcategories: {},\n\t\tusers: [],\n\t\tpagination: {\n\t\t\tpage: 1,\n\t\t\tlimit: 10,\n\t\t\trecordCount: 0\n\t\t},\n\t\tfilterPanel: false,\n\t\tfilter: {},\n\t\tuserCount: 0,\n\t\tmodel: {},\n\t\tstatus: STATUS.initial,\n\t\tskillAssignmentPopoverProps: {\n\t\t\topened: false,\n\t\t\tmanageOpened: true,\n\t\t\tpositions: [\n\t\t\t\t{\n\t\t\t\t\ttarget: 'bottom-center',\n\t\t\t\t\tcontent: 'top-center'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttarget: 'top-center',\n\t\t\t\t\tcontent: 'bottom-center'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttarget: 'center-end',\n\t\t\t\t\tcontent: 'center-start'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttarget: 'center-start',\n\t\t\t\t\tcontent: 'center-end'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tskillAssignmentPopoverContent: {}\n\t},\n\t...actions,\n\t...properties,\n\tstyles\n});\n","import { COMPONENT_BOOTSTRAPPED } from '@seismic/core/lib/constants';\nimport {\n\tPAGINATION_PAGE_UPDATE,\n\tPAGINATION_LIMIT_UPDATE,\n\tFETCH_MAX_USERS_COLUMNS,\n\tFETCH_MAX_USERS_COLUMNS_SUCCESS,\n\tMAX_USERS_COLUMNS_DEFAULT,\n\tFETCH_START,\n\tSTATUS,\n\tTOGGLE_SIDE_PANEL,\n\tNOW_PANEL_OPENED_SET,\n\tSHOW_SKILL_ASSIGNMENT_POPOVER,\n\tADD_SKILL_TO_USER,\n\tADD_SKILL_TO_USER_SUCCESS,\n\tADD_SKILL_TO_USER_ERROR,\n\tUPDATE_USER_SKILL_LEVEL,\n\tUPDATE_USER_SKILL_LEVEL_SUCCESS,\n\tUPDATE_USER_SKILL_LEVEL_ERROR,\n\tREMOVE_SKILL_FROM_USER,\n\tREMOVE_SKILL_FROM_USER_SUCCESS,\n\tREMOVE_SKILL_FROM_USER_ERROR,\n\tFETCH_SKILL_LEVEL_COLOR_MAP,\n\tFETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS\n} from './constants';\nimport {\n\tFETCH_USERS_REQUESTED,\n\tFETCH_USERS_SUCCEEDED,\n\tFETCH_USER_SKILLS_REQUESTED,\n\tFETCH_SKILL_LEVEL_SUCCEEDED,\n\tFETCH_USER_SKILLS_SUCCEEDED,\n\tFETCH_SKILL_LEVEL_REQUESTED,\n\tERROR_OCCURED,\n\tNOW_BUTTON_CLICKED,\n\tFETCH_SKILL_LEVEL_COUNTS_SUCCESS,\n\tFETCH_SKILL_LEVEL_COUNTS,\n\tPAGINATION_LIMIT\n} from '../common/constants';\n\nimport {\n\tAPPLIED_FILTERS_OBJECT,\n\tNOW_POPOVER_OPENED_SET,\n\tSHOW_ALERT_MESSAGE\n} from '../../common/constants';\n\nimport {\n\tCOMPONENT_NAME as SKILL_ASSIGNMENT_POPOVER,\n\tSKILL_ASSIGNMENT_POPOVER_SUBMIT\n} from '../sn-manager-coaching-skill-assignment-popover/constants';\n\nimport {\n\tfetchSkillLevelEffect,\n\tfetchUserCountEffect,\n\tfetchSkillLevelCounts\n} from '../common/effects';\nimport { skillLevelFetchSucceeded } from '../common/coachingCommonUtils';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport {\n\tuserSkillsFetchSucceeded,\n\thandleButtonClick,\n\thandlePagination,\n\tdataStore,\n\tuserFetchSucceeded,\n\tupdateStatus,\n\tskillLevelCountsFetchSucceeded\n} from './skillMatrixUtils';\nimport {\n\tfetchMaxUsersColumnsEffect,\n\tfetchUserSkillsEffect,\n\taddSkillToUserEffect,\n\tupdateUserSkillLevelEffect,\n\tremoveSkillFromUserEffect,\n\tfetchSkillLevelColorMapEffect\n} from './effects';\nimport get from 'lodash/get';\nimport { t } from 'sn-translate';\n\nexport const toggleSidePanel = ({ state, updateState }) => {\n\tupdateState({ filterPanel: !state.filterPanel });\n};\n\nexport const refreshSkillMatrix = ({ dispatch }) => {\n\tdispatch(FETCH_SKILL_LEVEL_REQUESTED, {\n\t\tpaginationLimit: PAGINATION_LIMIT\n\t});\n};\n\n/* Get all applied values from all filter configs in the form of object,\nGet approprate pagination vals based on this info,\nPass these into func to filter skill matrix */\nexport const getAppliedFilters = ({ state, action, dispatch, updateState }) => {\n\tupdateState({\n\t\tpath: 'filter',\n\t\toperation: 'set',\n\t\tvalue: action.payload,\n\t\tshouldRender: false\n\t});\n\n\tconst groupsUsers = get(action, 'payload.sys_user_grmember');\n\n\tif (groupsUsers && (groupsUsers.group || groupsUsers.user)) {\n\t\tconst queryConditions = [];\n\n\t\tif (groupsUsers.group) {\n\t\t\tqueryConditions.push('groupIN' + groupsUsers.group.join(','));\n\t\t}\n\n\t\tif (groupsUsers.user) {\n\t\t\tqueryConditions.push('userIN' + groupsUsers.user.join(','));\n\t\t}\n\n\t\tdispatch(FETCH_USERS_REQUESTED, {\n\t\t\tgroup_ids: queryConditions.join('^')\n\t\t});\n\t} else {\n\t\t// Default case when there are no filters\n\t\tlet groupIds = get(state, 'properties.groupIds', {});\n\t\tdispatch(FETCH_USERS_REQUESTED, {\n\t\t\tgroup_ids: groupIds\n\t\t});\n\t}\n};\n\nexport const showSkillAssignmentPopover = ({ state, action, updateState }) => {\n\tconst { positionTarget, content } = action.payload;\n\tsetTimeout(() => {\n\t\tupdateState({\n\t\t\tskillAssignmentPopoverProps: {\n\t\t\t\t...state.skillAssignmentPopoverProps,\n\t\t\t\topened: true,\n\t\t\t\tpositionTarget\n\t\t\t},\n\t\t\tskillAssignmentPopoverContent: content\n\t\t});\n\t}, 100);\n};\n\nexport const handlePopoverOpenedSet = ({ state, action, updateState }) => {\n\tconst { id, value } = action.payload;\n\tif (id === SKILL_ASSIGNMENT_POPOVER) {\n\t\tupdateState({\n\t\t\tpath: 'skillAssignmentPopoverProps',\n\t\t\toperation: 'assign',\n\t\t\tvalue: {\n\t\t\t\topened: value,\n\t\t\t\tpositionTarget: value\n\t\t\t\t\t? state.skillAssignmentPopoverProps.positionTarget\n\t\t\t\t\t: null // reset positionTarget to null when popover is closed\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const handleSkillAssignmentPopoverSubmit = ({ action, dispatch }) => {\n\tconst columnData = get(action, 'payload.cell.columnData');\n\n\tif (!columnData) {\n\t\treturn;\n\t}\n\n\tconst userHasSkillId = columnData.id;\n\tconst skillLevelId = action.payload.sysId;\n\n\tif (userHasSkillId === '-1') {\n\t\tconst userId = columnData.user.userId;\n\t\tconst skillId = columnData.skillId;\n\n\t\tdispatch(\n\t\t\tADD_SKILL_TO_USER,\n\t\t\t{ userId, skillId, skillLevelId },\n\t\t\t{ columnData }\n\t\t);\n\t} else if (skillLevelId === '-1') {\n\t\tdispatch(\n\t\t\tREMOVE_SKILL_FROM_USER,\n\t\t\t{ sysId: userHasSkillId },\n\t\t\t{ columnData }\n\t\t);\n\t} else {\n\t\tdispatch(\n\t\t\tUPDATE_USER_SKILL_LEVEL,\n\t\t\t{\n\t\t\t\tsysId: userHasSkillId,\n\t\t\t\tskillLevelId\n\t\t\t},\n\t\t\t{ columnData, newSkillLevel: action.payload }\n\t\t);\n\t}\n};\n\nexport const handleAddSkillToUserSuccess = ({\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst sysId = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Mutation.insert_sys_user_has_skill.sys_id.value'\n\t);\n\n\tif (sysId) {\n\t\trefreshSkillMatrix({ dispatch });\n\t} else {\n\t\tconst skillName = action.meta.columnData.skill;\n\t\tconst userName = action.meta.columnData.user.userName;\n\t\tconst message = t(`Failed to add skill ${skillName} to ${userName}`);\n\n\t\tdispatch(ADD_SKILL_TO_USER_ERROR, { message });\n\t\tupdateState({ status: STATUS.loaded });\n\t}\n};\n\nexport const handleUpdateUserSkillLevelSuccess = ({\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst updateSkillLevelId = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Mutation.update_sys_user_has_skill.skill_level.value'\n\t);\n\tconst { columnData, newSkillLevel } = action.meta;\n\n\tif (updateSkillLevelId === newSkillLevel.sysId) {\n\t\trefreshSkillMatrix({ dispatch });\n\t} else {\n\t\tconst userName = columnData.user.userName;\n\t\tconst skillName = columnData.skill;\n\t\tconst oldLevel = columnData.displayValue;\n\t\tconst newLevel = newSkillLevel.label;\n\t\tconst message = `Failed to change skill ${skillName} from ${oldLevel} to ${newLevel} for ${userName}`;\n\n\t\tdispatch(UPDATE_USER_SKILL_LEVEL_ERROR, { message });\n\t\tupdateState({ status: STATUS.loaded });\n\t}\n};\n\nexport const handleRemoveSkillFromUserSuccess = ({\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst modifiedCount = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Mutation.delete_sys_user_has_skill.modified_count'\n\t);\n\tconst { columnData } = action.meta;\n\n\tif (modifiedCount) {\n\t\trefreshSkillMatrix({ dispatch });\n\t} else {\n\t\tconst skillName = columnData.skill;\n\t\tconst userName = columnData.user.userName;\n\t\tconst message = `Failed to remove skill ${skillName} from ${userName}`;\n\n\t\tdispatch(REMOVE_SKILL_FROM_USER_ERROR, { message });\n\t\tupdateState({ status: STATUS.loaded });\n\t}\n};\n\nexport const handleSkillAssignmentError = ({ action, dispatch }) => {\n\tconst message = get(action, 'payload.message');\n\n\tif (message) {\n\t\tdispatch(SHOW_ALERT_MESSAGE, {\n\t\t\tid: 'skill-assignment-error',\n\t\t\tstatus: 'critical',\n\t\t\ticon: 'circle-close-outline',\n\t\t\taction: { type: 'dismiss' },\n\t\t\tcontent: message\n\t\t});\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[ERROR_OCCURED]: logErrorEffect,\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch, state }) => {\n\t\t\tconst maxUsersColumns = dataStore.get('max_users_columns');\n\t\t\tif (!maxUsersColumns) dispatch(FETCH_MAX_USERS_COLUMNS);\n\t\t\telse {\n\t\t\t\tlet groupIds = get(state, 'properties.groupIds', {});\n\t\t\t\tdispatch(FETCH_USERS_REQUESTED, {\n\t\t\t\t\tgroup_ids: groupIds\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[FETCH_MAX_USERS_COLUMNS_SUCCESS]: ({ action, dispatch, state }) => {\n\t\t\tconst maxUsersColumns = get(\n\t\t\t\taction.payload,\n\t\t\t\t'data.GlideRecord_Query.sys_properties._results[0].value.value',\n\t\t\t\tMAX_USERS_COLUMNS_DEFAULT\n\t\t\t);\n\t\t\tdataStore.set('max_users_columns', maxUsersColumns);\n\t\t\tlet groupIds = get(state, 'properties.groupIds', {});\n\t\t\tdispatch(FETCH_SKILL_LEVEL_COLOR_MAP, {\n\t\t\t\tgroup_ids: groupIds\n\t\t\t});\n\t\t},\n\t\t[FETCH_MAX_USERS_COLUMNS]: fetchMaxUsersColumnsEffect,\n\t\t[FETCH_SKILL_LEVEL_COLOR_MAP]: fetchSkillLevelColorMapEffect,\n\t\t[FETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS]: ({\n\t\t\taction,\n\t\t\tdispatch,\n\t\t\tstate\n\t\t}) => {\n\t\t\tconst colorMap = get(\n\t\t\t\taction.payload,\n\t\t\t\t'data.GlideRecord_Query.sys_properties._results[0].value.value',\n\t\t\t\t''\n\t\t\t);\n\n\t\t\tdataStore.set('color_map', colorMap);\n\t\t\tlet groupIds = get(state, 'properties.groupIds', {});\n\t\t\tdispatch(FETCH_USERS_REQUESTED, {\n\t\t\t\tgroup_ids: groupIds\n\t\t\t});\n\t\t},\n\t\t[FETCH_USERS_REQUESTED]: fetchUserCountEffect,\n\t\t[FETCH_USERS_SUCCEEDED]: userFetchSucceeded,\n\t\t[FETCH_SKILL_LEVEL_REQUESTED]: fetchSkillLevelEffect,\n\t\t[FETCH_SKILL_LEVEL_SUCCEEDED]: skillLevelFetchSucceeded,\n\t\t[FETCH_SKILL_LEVEL_COUNTS]: fetchSkillLevelCounts,\n\t\t[FETCH_SKILL_LEVEL_COUNTS_SUCCESS]: skillLevelCountsFetchSucceeded,\n\t\t[FETCH_USER_SKILLS_REQUESTED]: fetchUserSkillsEffect,\n\t\t[FETCH_USER_SKILLS_SUCCEEDED]: userSkillsFetchSucceeded,\n\t\t[NOW_BUTTON_CLICKED]: handleButtonClick,\n\t\t[PAGINATION_PAGE_UPDATE]: handlePagination,\n\t\t[PAGINATION_LIMIT_UPDATE]: handlePagination,\n\t\t[FETCH_START]: updateStatus(STATUS.loading),\n\t\t[TOGGLE_SIDE_PANEL]: toggleSidePanel,\n\t\t[NOW_PANEL_OPENED_SET]: toggleSidePanel,\n\t\t[APPLIED_FILTERS_OBJECT]: getAppliedFilters,\n\t\t[SHOW_SKILL_ASSIGNMENT_POPOVER]: showSkillAssignmentPopover,\n\t\t[SKILL_ASSIGNMENT_POPOVER_SUBMIT]: handleSkillAssignmentPopoverSubmit,\n\t\t[NOW_POPOVER_OPENED_SET]: handlePopoverOpenedSet,\n\t\t[ADD_SKILL_TO_USER]: addSkillToUserEffect,\n\t\t[ADD_SKILL_TO_USER_SUCCESS]: handleAddSkillToUserSuccess,\n\t\t[ADD_SKILL_TO_USER_ERROR]: handleSkillAssignmentError,\n\t\t[UPDATE_USER_SKILL_LEVEL]: updateUserSkillLevelEffect,\n\t\t[UPDATE_USER_SKILL_LEVEL_SUCCESS]: handleUpdateUserSkillLevelSuccess,\n\t\t[UPDATE_USER_SKILL_LEVEL_ERROR]: handleSkillAssignmentError,\n\t\t[REMOVE_SKILL_FROM_USER]: removeSkillFromUserEffect,\n\t\t[REMOVE_SKILL_FROM_USER_SUCCESS]: handleRemoveSkillFromUserSuccess,\n\t\t[REMOVE_SKILL_FROM_USER_ERROR]: handleSkillAssignmentError\n\t}\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"findIndex\"];","import '@servicenow/now-icon';\nimport '@servicenow/now-tooltip';\n// eslint-disable-next-line no-unused-vars\nimport { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '../../common/sn-manager-tooltip-wrapper';\nimport { OUTLINED_ICON } from '../common/constants';\nimport {\n\tCIRCLE_FILL,\n\tCIRCLE_OUTLINED,\n\tCIRCLE_QUARTER_FILL,\n\tCIRCLE_HALF_FILL,\n\tCIRCLE_THREE_QUARTER_FILL\n} from './constants';\n\nconst _geticonUnit = (skillLabel, count, color, icon) => {\n\treturn (\n\t\t<span className=\"sn-manager-now-icon\">\n\t\t\t<sn-manager-tooltip-wrapper text={`${skillLabel} (${count})`}>\n\t\t\t\t<now-icon\n\t\t\t\t\ticon={icon}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tstyle={{ color: color }}\n\t\t\t\t></now-icon>\n\t\t\t\t<span>{count}</span>\n\t\t\t</sn-manager-tooltip-wrapper>\n\t\t</span>\n\t);\n};\nconst _assignIcons = (sysIds, skillLevels) => {\n\tconst icons = [\n\t\tCIRCLE_QUARTER_FILL,\n\t\tCIRCLE_HALF_FILL,\n\t\tCIRCLE_THREE_QUARTER_FILL\n\t];\n\treturn sysIds.slice(1, 4).map((sysId, index) => {\n\t\treturn _geticonUnit(\n\t\t\tskillLevels.get(sysId).skillLabel,\n\t\t\tskillLevels.get(sysId).count,\n\t\t\tskillLevels.get(sysId).color,\n\t\t\ticons[index]\n\t\t);\n\t});\n};\nconst _getIcons = skillLevels => {\n\tconst sysIds = Array.from(skillLevels.keys());\n\treturn [\n\t\t_geticonUnit(\n\t\t\tskillLevels.get(OUTLINED_ICON).skillLabel,\n\t\t\tskillLevels.get(OUTLINED_ICON).count,\n\t\t\tnull,\n\t\t\tCIRCLE_OUTLINED\n\t\t)\n\t]\n\t\t.concat(_assignIcons(sysIds, skillLevels))\n\t\t.concat(\n\t\t\tsysIds.slice(4).map(sysId => {\n\t\t\t\treturn _geticonUnit(\n\t\t\t\t\tskillLevels.get(sysId).skillLabel,\n\t\t\t\t\tskillLevels.get(sysId).count,\n\t\t\t\t\tskillLevels.get(sysId).color,\n\t\t\t\t\tCIRCLE_FILL\n\t\t\t\t);\n\t\t\t})\n\t\t);\n};\n\nexport default state => {\n\tconst skillLevels = state.properties.skillLevels;\n\treturn <div>{_getIcons(skillLevels)}</div>;\n};\n","import { createCustomElement } from '@seismic/core';\nimport { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport '@servicenow/now-tooltip';\nimport styles from './styles.scss';\n\nconst SmTooltipWrapper = (state, dispatch) => {\n\tconst setTargetRef = ref => dispatch('PROPERTIES_SET', { targetRef: ref });\n\tconst {\n\t\tproperties: { text }\n\t} = state;\n\treturn (\n\t\t<Fragment>\n\t\t\t<span\n\t\t\t\thook-insert={({ elm }) => setTargetRef(elm)}\n\t\t\t\thook-destroy={() => setTargetRef(null)}\n\t\t\t\tclassName=\"now-align -inline-center\"\n\t\t\t\taria-label={text}\n\t\t\t\ttab-index=\"0\"\n\t\t\t>\n\t\t\t\t<slot className=\"trigger-content\" />\n\t\t\t</span>\n\t\t\t<now-tooltip\n\t\t\t\ttarget-ref={state.properties.targetRef}\n\t\t\t\tcontent={text}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\ncreateCustomElement('sn-manager-tooltip-wrapper', {\n\tview: SmTooltipWrapper,\n\tproperties: {\n\t\ttext: { default: '' },\n\t\ttargetRef: { default: null }\n\t},\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{z-index:3000;display:inline-block}\", \"\"]);\n\n// exports\n","export const CIRCLE_FILL = 'circle-fill';\n\nexport const CIRCLE_OUTLINED = 'circle-outline';\nexport const CIRCLE_QUARTER_FILL = 'circle-quarter-fill';\nexport const CIRCLE_HALF_FILL = 'circle-half-fill';\nexport const CIRCLE_THREE_QUARTER_FILL = 'circle-three-quarter-fill';\n","export default {\n\tproperties: { skillLevels: {} }\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.sn-manager-now-icon{margin-right:.25rem;font-size:1rem}sn-manager-tooltip-wrapper{width:2.5rem}now-icon{color:RGB(var(--now-color--neutral-12,66,80,81));margin-bottom:.125rem}span{color:RGB(var(--now-color--neutral-9,99,114,116));margin-left:.25rem}\", \"\"]);\n\n// exports\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tFETCH_START,\n\tFETCH_MAX_USERS_COLUMNS_SUCCESS,\n\tADD_SKILL_TO_USER_SUCCESS,\n\tADD_SKILL_TO_USER_ERROR,\n\tUPDATE_USER_SKILL_LEVEL_SUCCESS,\n\tUPDATE_USER_SKILL_LEVEL_ERROR,\n\tREMOVE_SKILL_FROM_USER_SUCCESS,\n\tREMOVE_SKILL_FROM_USER_ERROR,\n\tFETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS\n} from './constants';\nimport {\n\tFETCH_USER_SKILLS_SUCCEEDED,\n\tERROR_OCCURED\n} from '../common/constants';\nimport { GRAPHQL_MAX_LIMIT } from '../../common/constants';\nconst fetchMaxUsersColumnsQuery = `query {\n\tGlideRecord_Query {\n\t\tsys_properties(queryConditions: \"name=cmn_skill.ws_max_users_columns_skill_matrix\", pagination: { limit: 1 }) {\n\t\t\t_results {\n\t\t\t\tvalue {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst fetchSkillLevelColorMapQuery = `query {\n\tGlideRecord_Query {\n\t\tsys_properties(queryConditions: \"name=com.snc.skills_management.skill_level_color_map\", pagination: { limit: 1 }) {\n\t\t\t_results {\n\t\t\t\tvalue {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst skillQuery = `query ($paginationLimit: Int, $offset: Int,$recommendationCondition: String, $approvalCondition: String, $queryUser: String, $queryUserHasSkill: String, $queryCategory: String, $querySkill: String, $appliedSkills: String ) {\n\tGlideAggregateRecord_Query(tableName: \"sys_user_grmember\", queryConditions: $queryUser, groupBy: [\"user\"], groupPagination: {limit: $paginationLimit, offset: $offset}) {\n\t\taggregates {\n\t\t\tcount\n\t\t\tgroupBy {\n\t\t\tfield\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t    _query {\n\t\t\tqueryAppliedSkills: GlideRecord_Query {\n\t\t\t\tcmn_skill_m2m_category(queryConditions: $appliedSkills, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t_results {\n\t\t\t\t\t\tskill {\n\t\t\t\t\t\t  value\n\t\t\t\t\t\t  displayValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcategory {\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_query {\n\t\t\t\t\t\t\tquerySkillLevelTypeAppliedSkills: GlideRecord_Query {\n\t\t\t\t\t\t\t\tcmn_skill(queryConditions: $querySkill) {\n\t\t\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\t\t\tlevel_type {\n\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tqueryWithUser: GlideRecord_Query {\n\t\t\t\tsys_user_has_skill(queryConditions: $queryUserHasSkill, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tskill {\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tskill_level {\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\t_query {\n\t\t\t\t\tqueryWithSkillCategory: GlideRecord_Query {\n\t\t\t\t\t\tcmn_skill_m2m_category(queryConditions: $queryCategory, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tcategory {\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tqueryWithSkill: GlideRecord_Query {\n\t\t\t\t\t\tcmn_skill_level(queryConditions: \"sys_id=$$parent.skill_level$$\") {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tcolor {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tqueryWithSkillLevel: GlideRecord_Query {\n\t\t\t\t\t\tcmn_skill(queryConditions: $querySkill) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tlevel_type {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\trecommendations: GlideRecord_Query {\n\t\t\t\tsn_sre_user_predicted_skill(queryConditions: $recommendationCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tuser {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t\t}\n\t\t\t\t\tskill {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t\t}\n\t\t\t\t\tskill_level {\n\t\t\t\t\tdisplayValue\n\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\t_query {\n\t\t\t\t\tapproval: GlideRecord_Query {\n\t\t\t\t\t\tsysapproval_approver(queryConditions: $approvalCondition, pagination: {limit: 1}) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tdocument_id {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstate {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tqueryWithSkillCategory: GlideRecord_Query {\n\t\t\t\t\t\tcmn_skill_m2m_category(queryConditions: $queryCategory, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tcategory {\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tqueryWithSkill: GlideRecord_Query {\n\t\t\t\t\t\tcmn_skill_level(queryConditions: \"sys_id=$$parent.skill_level$$\") {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tcolor {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqueryWithSkillLevel: GlideRecord_Query {\n\t\t\t\t\t\tcmn_skill(queryConditions: $querySkill) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\tlevel_type {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\t}\n\t}\n\t}\n`;\n\nexport const fetchMaxUsersColumnsEffect = createGraphQLEffect(\n\tfetchMaxUsersColumnsQuery,\n\t{\n\t\tsuccessActionType: FETCH_MAX_USERS_COLUMNS_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nexport const fetchSkillLevelColorMapEffect = createGraphQLEffect(\n\tfetchSkillLevelColorMapQuery,\n\t{\n\t\tsuccessActionType: FETCH_SKILL_LEVEL_COLOR_MAP_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nexport const fetchUserSkillsEffect = createGraphQLEffect(skillQuery, {\n\tvariableList: [\n\t\t'paginationLimit',\n\t\t'appliedSkills',\n\t\t'offset',\n\t\t'recommendationCondition',\n\t\t'approvalCondition',\n\t\t'queryUser',\n\t\t'queryUserHasSkill',\n\t\t'queryCategory',\n\t\t'querySkill'\n\t],\n\tstartActionType: FETCH_START,\n\tsuccessActionType: FETCH_USER_SKILLS_SUCCEEDED,\n\terrorActionType: ERROR_OCCURED\n});\n\nexport const addSkillToUserMutation = `\nmutation ($userId: String!, $skillId: String!, $skillLevelId: String!) {\n\tGlideRecord_Mutation {\n\t\tinsert_sys_user_has_skill(user: $userId, skill: $skillId, skill_level: $skillLevelId) {\n\t\t\tsys_id {\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const updateUserSkillLevelMutation = `\nmutation ($sysId: String!, $skillLevelId: String!) {\n\tGlideRecord_Mutation {\n\t\tupdate_sys_user_has_skill(sys_id: $sysId, skill_level: $skillLevelId) {\n\t\t\tskill_level {\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nexport const removeSkillFromUserMutation = `\nmutation ($sysId: String!) {\n\tGlideRecord_Mutation {\n\t\tdelete_sys_user_has_skill(sys_id: $sysId) {\n\t\t\tmodified_count\n\t\t}\n\t}\n}`;\n\nexport const addSkillToUserEffect = createGraphQLEffect(\n\taddSkillToUserMutation,\n\t{\n\t\tvariableList: ['userId', 'skillId', 'skillLevelId'],\n\t\tstartActionType: FETCH_START,\n\t\tsuccessActionType: ADD_SKILL_TO_USER_SUCCESS,\n\t\terrorActionType: ADD_SKILL_TO_USER_ERROR\n\t}\n);\n\nexport const updateUserSkillLevelEffect = createGraphQLEffect(\n\tupdateUserSkillLevelMutation,\n\t{\n\t\tvariableList: ['sysId', 'skillLevelId'],\n\t\tstartActionType: FETCH_START,\n\t\tsuccessActionType: UPDATE_USER_SKILL_LEVEL_SUCCESS,\n\t\terrorActionType: UPDATE_USER_SKILL_LEVEL_ERROR\n\t}\n);\n\nexport const removeSkillFromUserEffect = createGraphQLEffect(\n\tremoveSkillFromUserMutation,\n\t{\n\t\tvariableList: ['sysId'],\n\t\tstartActionType: FETCH_START,\n\t\tsuccessActionType: REMOVE_SKILL_FROM_USER_SUCCESS,\n\t\terrorActionType: REMOVE_SKILL_FROM_USER_ERROR\n\t}\n);\n","import '@servicenow/now-button';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-record-list';\nimport '@servicenow/now-record-list-panel';\nimport 'sn-component-filter';\nimport '../../common/sn-manager-filter-config';\nimport '../sn-manager-coaching-skill-assignment-popover';\nimport { createRef } from '@servicenow/ui-renderer-snabbdom';\nimport { customCellRenderer, dataStore } from './skillMatrixUtils';\nimport { STATUS } from './constants';\nimport { t } from 'sn-translate';\nimport {\n\tSKILL_EMPTY_HEADER_MESSAGE,\n\tSKILL_EMPTY_MESSAGE,\n\tSKILL_TITLE,\n\tSWAP_AXES,\n\tADD_SKILL,\n\tBUTTON_SWAP_AXES,\n\tBUTTON_ADD_SKILL,\n\tREFRESH_LIST,\n\tBUTTON_REFRESH_LIST,\n\tFILTER,\n\tBUTTON_FILTER\n} from '../common/constants';\n\nimport {\n\tCOACHING_MODULE_SYSID,\n\tNOW_POPOVER_OPENED_SET\n} from '../../common/constants';\nimport { COMPONENT_NAME as SKILL_ASSIGNMENT_POPOVER } from '../sn-manager-coaching-skill-assignment-popover/constants';\n\nimport { TABLES } from '../../common/constants';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nconst _renderEmpty = () => (\n\t<now-empty-state\n\t\ttype=\"empty\"\n\t\theaderText={SKILL_EMPTY_HEADER_MESSAGE}\n\t\tbodyText={SKILL_EMPTY_MESSAGE}\n\t/>\n);\n\nconst _renderInitialLoading = () => <now-empty-state type=\"loading\" />;\n\nexport default (state, { dispatch }) => {\n\tconst {\n\t\tcategories,\n\t\tuserCount,\n\t\tpagination,\n\t\tskillAssignmentPopoverProps,\n\t\tskillAssignmentPopoverContent\n\t} = state;\n\n\tconst flip = get(state, 'properties.flip');\n\tconst _renderContent = () => {\n\t\tconst maxUsersColumns = dataStore.get('max_users_columns');\n\t\tlet loading =\n\t\t\tstate.status === STATUS.loading ||\n\t\t\tstate.status === STATUS.initial ||\n\t\t\t!maxUsersColumns ||\n\t\t\t(Object.keys(categories).length === 0 &&\n\t\t\t\tstate.status === STATUS.loading);\n\n\t\treturn _renderList(maxUsersColumns, loading);\n\t};\n\n\tconst _renderList = (maxUsersColumns, loading) => {\n\t\tif (\n\t\t\tObject.keys(categories).length === 0 &&\n\t\t\t!loading &&\n\t\t\tisEmpty(state.filter)\n\t\t)\n\t\t\treturn <div className=\"skill-content\">{_renderEmpty()}</div>;\n\t\telse if (isEmpty(state.model) && loading)\n\t\t\treturn (\n\t\t\t\t<div className=\"skill-content\">{_renderInitialLoading()}</div>\n\t\t\t);\n\t\telse {\n\t\t\tconst containerRef = createRef();\n\n\t\t\treturn (\n\t\t\t\t<div className=\"skill-matrix-container\" ref={containerRef}>\n\t\t\t\t\t<div className=\"skill-title\">\n\t\t\t\t\t\t<now-heading\n\t\t\t\t\t\t\tlabel={SKILL_TITLE}\n\t\t\t\t\t\t\tvariant=\"header-primary\"\n\t\t\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\t\t></now-heading>\n\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\ticon=\"sync-outline\"\n\t\t\t\t\t\t\ttooltipContent={REFRESH_LIST}\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tconfigAria={{ 'aria-label': REFRESH_LIST }}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\ttype: BUTTON_REFRESH_LIST\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></now-button>\n\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\ticon=\"filter-outline\"\n\t\t\t\t\t\t\ttooltip-content={FILTER}\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\ttype: BUTTON_FILTER\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': FILTER\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></now-button>\n\t\t\t\t\t\t{userCount > maxUsersColumns ? null : (\n\t\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\t\tlabel={SWAP_AXES}\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\t\ttype: BUTTON_SWAP_AXES\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ttooltip-content={SWAP_AXES}\n\t\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t\t'aria-label': SWAP_AXES\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></now-button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<now-button\n\t\t\t\t\t\t\tlabel={ADD_SKILL}\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tappend-to-payload={{\n\t\t\t\t\t\t\t\ttype: BUTTON_ADD_SKILL,\n\t\t\t\t\t\t\t\ttable: TABLES.SYS_USER_HAS_SKILL,\n\t\t\t\t\t\t\t\tid: '-1'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttooltip-content={ADD_SKILL}\n\t\t\t\t\t\t\tconfig-aria={{\n\t\t\t\t\t\t\t\t'aria-label': ADD_SKILL\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></now-button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"skill-matrix\">\n\t\t\t\t\t\t<div className=\"skill-matrix-treegrid-panel\">\n\t\t\t\t\t\t\t<now-treegrid\n\t\t\t\t\t\t\t\tcustomCellRenderer={customCellRenderer}\n\t\t\t\t\t\t\t\thideCellFilter={true}\n\t\t\t\t\t\t\t\thideCheckboxHover={true}\n\t\t\t\t\t\t\t\thideColumnFiltering={true}\n\t\t\t\t\t\t\t\thideColumnGrouping={true}\n\t\t\t\t\t\t\t\thideColumnSorting={true}\n\t\t\t\t\t\t\t\thideColumnResizing={true}\n\t\t\t\t\t\t\t\thideRowSelector={true}\n\t\t\t\t\t\t\t\thideSelectAll={true}\n\t\t\t\t\t\t\t\thideQuickEdit={true}\n\t\t\t\t\t\t\t\tgridModel={state.model}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\t// Workaround for popover and scroll issue.\n\t\t\t\t\t\t\t\thook-update={(old, vnode) => {\n\t\t\t\t\t\t\t\t\tconst childNode = get(\n\t\t\t\t\t\t\t\t\t\tvnode,\n\t\t\t\t\t\t\t\t\t\t'elm.shadowRoot.childNodes',\n\t\t\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (childNode && !isEmpty(childNode)) {\n\t\t\t\t\t\t\t\t\t\tconst scrollableDiv =\n\t\t\t\t\t\t\t\t\t\t\tchildNode[0].firstChild;\n\t\t\t\t\t\t\t\t\t\tscrollableDiv.onscroll = () => {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\t\t\t\t\t\tskillAssignmentPopoverProps,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'opened',\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\t\tNOW_POPOVER_OPENED_SET,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: SKILL_ASSIGNMENT_POPOVER\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<now-record-list-panel\n\t\t\t\t\t\t\t\tpanelTitle={t('Filters')}\n\t\t\t\t\t\t\t\trenderHeader={true}\n\t\t\t\t\t\t\t\trenderPanelHeader={true}\n\t\t\t\t\t\t\t\tpanelOpened={state.filterPanel}\n\t\t\t\t\t\t\t\thidePadding={true}\n\t\t\t\t\t\t\t\tpanelSize={'sm'}\n\t\t\t\t\t\t\t\thook-update={({ elm }) => {\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tconst isSkillMatrixVisible =\n\t\t\t\t\t\t\t\t\t\t\tcontainerRef.current &&\n\t\t\t\t\t\t\t\t\t\t\tcontainerRef.current.offsetParent;\n\n\t\t\t\t\t\t\t\t\t\tconst isFilterPanelVisible =\n\t\t\t\t\t\t\t\t\t\t\telm && elm.clientWidth > 0;\n\n\t\t\t\t\t\t\t\t\t\t// when skill matrix and filter panel are both visible\n\t\t\t\t\t\t\t\t\t\t// set focus to the close (x) button in the filter panel\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tisSkillMatrixVisible &&\n\t\t\t\t\t\t\t\t\t\t\tisFilterPanelVisible\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tconst panelCloseBtn = elm.shadowRoot.querySelector(\n\t\t\t\t\t\t\t\t\t\t\t\t'.now-record-list-panel-close-btn'\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (panelCloseBtn) {\n\t\t\t\t\t\t\t\t\t\t\t\tpanelCloseBtn.shadowRoot\n\t\t\t\t\t\t\t\t\t\t\t\t\t.querySelector('button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.focus();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"now-record-list-panel-body -no-padding\">\n\t\t\t\t\t\t\t\t\t<sn-manager-filter-config\n\t\t\t\t\t\t\t\t\t\tsysId={COACHING_MODULE_SYSID}\n\t\t\t\t\t\t\t\t\t\tpaddingRequired={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</now-record-list-panel>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{flip && !isEmpty(categories) ? (\n\t\t\t\t\t\t\t<now-pagination {...pagination} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<now-popover\n\t\t\t\t\t\tappendToPayload={{ id: SKILL_ASSIGNMENT_POPOVER }}\n\t\t\t\t\t\t{...skillAssignmentPopoverProps}\n\t\t\t\t\t>\n\t\t\t\t\t\t<sn-manager-coaching-skill-assignment-popover\n\t\t\t\t\t\t\tslot=\"content\"\n\t\t\t\t\t\t\t{...skillAssignmentPopoverContent}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</now-popover>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\treturn _renderContent();\n};\n","module.exports = __TECTONIC__$servicenow_now_record_list_panel;","import '@servicenow/now-heading';\nimport '@servicenow/now-highlighted-value';\nimport '@servicenow/now-button';\nimport '@servicenow/now-radio-buttons';\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\nimport { COMPONENT_NAME } from './constants';\n\nexport default createCustomElement(COMPONENT_NAME, {\n\trenderer: { type: snabbdom, view },\n\tproperties: {\n\t\tpresetSkillLevelId: { default: null },\n\t\tskillLevels: { default: [] }\n\t},\n\tinitialState: {\n\t\tselectedSkillLevelId: null\n\t},\n\tactionHandlers,\n\tstyles\n});\n","module.exports = __TECTONIC__$servicenow_now_radio_buttons;","import { t } from 'sn-translate';\nimport { getRadioButtonsProps } from './selectors';\nimport { CANCEL_CLICKED, OKAY_CLICKED } from './constants';\n\nexport default (state, { dispatch }) => {\n\tconst radioButtonProps = getRadioButtonsProps(state);\n\n\treturn (\n\t\t<div className=\"skill-assignment-popover\">\n\t\t\t<now-heading\n\t\t\t\tlabel={t('Choose a skill level')}\n\t\t\t\tlevel=\"3\"\n\t\t\t\tvariant=\"title-primary\"\n\t\t\t\thasNoMargin\n\t\t\t/>\n\t\t\t<now-radio-buttons {...radioButtonProps} />\n\t\t\t<div className=\"actions\">\n\t\t\t\t<now-button\n\t\t\t\t\tlabel={t('Cancel')}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\ton-click={() => dispatch(CANCEL_CLICKED)}\n\t\t\t\t/>\n\t\t\t\t<now-button\n\t\t\t\t\tlabel={t('OK')}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\ton-click={() => dispatch(OKAY_CLICKED)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import {\n\tNOW_POPOVER_OPENED_SET,\n\tNOW_RADIO_BUTTONS_VALUE_SET\n} from '../../common/constants';\nimport {\n\tCOMPONENT_NAME,\n\tOKAY_CLICKED,\n\tCANCEL_CLICKED,\n\tSKILL_ASSIGNMENT_POPOVER_SUBMIT\n} from './constants';\nimport { getSelectedSkillLevel } from './selectors';\n\nexport default {\n\t[NOW_RADIO_BUTTONS_VALUE_SET]: ({ action, updateState }) => {\n\t\tconst { value } = action.payload;\n\n\t\tupdateState({\n\t\t\tselectedSkillLevelId: value\n\t\t});\n\n\t\taction.stopPropagation();\n\t},\n\t[CANCEL_CLICKED]: ({ action, dispatch, updateState }) => {\n\t\t// close the popover\n\t\tdispatch(NOW_POPOVER_OPENED_SET, {\n\t\t\tid: COMPONENT_NAME,\n\t\t\tvalue: false\n\t\t});\n\n\t\t// silently set selectedSkillLevelId back to null\n\t\tupdateState({\n\t\t\tpath: 'selectedSkillLevelId',\n\t\t\toperation: 'set',\n\t\t\tvalue: null,\n\t\t\tshouldRender: false\n\t\t});\n\n\t\taction.stopPropagation();\n\t},\n\t[OKAY_CLICKED]: ({ action, state, dispatch }) => {\n\t\tconst { presetSkillLevelId } = state.properties;\n\t\tconst selectedSkillLevel = getSelectedSkillLevel(state);\n\n\t\tif (!presetSkillLevelId && !selectedSkillLevel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tselectedSkillLevel &&\n\t\t\tpresetSkillLevelId !== selectedSkillLevel.sysId\n\t\t) {\n\t\t\tdispatch(SKILL_ASSIGNMENT_POPOVER_SUBMIT, selectedSkillLevel);\n\t\t}\n\n\t\t// close the popover\n\t\tdispatch(CANCEL_CLICKED);\n\n\t\taction.stopPropagation();\n\t}\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.skill-assignment-popover{padding:1rem;display:flex;flex-direction:column;max-width:18rem;min-height:15rem}.actions{display:flex;justify-content:flex-end}.actions now-button{margin-left:.5rem}\", \"\"]);\n\n// exports\n","import {\n\tFETCH_SKILL_LEVEL_REQUESTED,\n\tPAGINATION_LIMIT\n} from '../common/constants';\n\nexport default {\n\tproperties: {\n\t\trefreshRequested: {\n\t\t\tdefault: {\n\t\t\t\ttimestamp: Date.now()\n\t\t\t},\n\t\t\tonChange(newValue, oldValue, { dispatch }) {\n\t\t\t\tif (newValue.timestamp !== oldValue.timestamp) {\n\t\t\t\t\tdispatch(FETCH_SKILL_LEVEL_REQUESTED, {\n\t\t\t\t\t\tpaginationLimit: PAGINATION_LIMIT\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmanagerId: {},\n\t\tskillLevelType: {},\n\t\tskillLevelCounts: {},\n\t\tgroupIds: {},\n\t\tflip: { default: true }\n\t}\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.skill-content{justify-content:center}.skill-content,.skill-matrix-container{display:flex;flex-direction:column;height:100%}.skill-matrix-container{padding-top:1.5rem;overflow:auto}.skill-matrix-container .skill-title{display:flex}.skill-matrix-container .skill-matrix{display:flex;flex-direction:column;width:100%;height:100%;overflow:auto}.skill-matrix-container .skill-matrix-treegrid-panel{display:flex;flex-direction:row;height:100%;width:100%;overflow:auto}.skill-matrix-container .skill-matrix-treegrid-panel now-record-list-panel{border-top:1px solid rgb(var(--now-color--divider-tertiary,var(--now-color--neutral-3,209,214,214)))}.skill-matrix-container .skill-matrix-treegrid-panel now-treegrid{display:block;height:100%;border:1px solid rgb(var(--now-color--divider-tertiary,var(--now-color--neutral-3,209,214,214)));flex:1;overflow:auto}now-heading{width:100%;padding-left:1.5rem;padding-right:1.5rem}now-button{margin-right:.5rem;padding-bottom:1rem;width:auto}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\n\ncreateCustomElement('sn-manager-coaching-overview', {\n\tproperties: {\n\t\tmanagerId: {\n\t\t\tdefault: ''\n\t\t},\n\t\tgroupIds: {},\n\t\tqualityIndicatorJSON: {}\n\t},\n\tinitialState: {},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}sn-layout{display:block;padding:1.5rem}sn-layout div.coaching-overview-column{margin:0 .75rem .75rem 0}sn-layout div.coaching-overview-column:last-child{margin-right:0}sn-layout div.coaching-overview-row{margin:0 .75rem 1.5rem 0}.cas-overview-section{display:flex;flex-direction:column;margin-bottom:1.5rem;padding:1rem;background:RGB(var(--now-color--neutral-1,246,247,247))}.cas-overview-section:last-child{margin-bottom:0}.cas-overview-card-container{display:flex;flex-direction:row;min-height:20rem}sn-manager-coaching-overview-card.coaching-vis-asmt-by-state{padding-right:1rem;width:25%}sn-manager-coaching-overview-card.coaching-vis-asmt-by-oppo{width:75%}\", \"\"]);\n\n// exports\n","import { t } from 'sn-translate';\nimport get from 'lodash/get';\nimport '@devsnc/sn-layout';\nimport '../sn-manager-coaching-overview-card';\nimport '../sn-manager-coaching-top-assigned-skills';\nimport '../sn-manager-coaching-timeseries';\nimport {\n\tINDICATOR_QUALITY_TRAINEE_SURVEY_SCORE,\n\tASSESSMENTS_LABEL,\n\tOVERDUE_TRAINING_LABEL,\n\tASSESSMENTS_PAST30DAYS_LABEL,\n\tAVERAGE_QUALITY_TIME_SERIES_TITLE\n} from '../common/constants';\n\nconst LAYOUT_MODEL = {\n\tdefault: {\n\t\ttype: 'rowColumn',\n\t\troot: {\n\t\t\ttype: 'row',\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\tsize: 8,\n\t\t\t\t\trows: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'row',\n\t\t\t\t\t\t\tsize: 12,\n\t\t\t\t\t\t\tslotName: 'col1-row1'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'row',\n\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\t\t\tsize: 9,\n\t\t\t\t\t\t\t\t\tslotName: 'col1-row2-col1'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\t\t\tsize: 3,\n\t\t\t\t\t\t\t\t\tslotName: 'col1-row2-col2'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\tsize: 4,\n\t\t\t\t\tslotName: 'col2'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n};\n\nconst REPORTS = {\n\tassessmentByState: {\n\t\treportTitle: t('Assessment by State (past 30 days)'),\n\t\treportId: 'eb1f4696b32b001013a082c136a8dcdc',\n\t\tstyleConfigurations: {\n\t\t\tdataLabelConfig: {\n\t\t\t\tshowTotal: true,\n\t\t\t\ttotalLabel: ASSESSMENTS_LABEL\n\t\t\t},\n\t\t\tregisterConfig: {\n\t\t\t\tshowPercentages: false\n\t\t\t},\n\t\t\theight: 'auto',\n\t\t\twidth: 'auto'\n\t\t}\n\t},\n\tassessmentByOpportunity: {\n\t\treportTitle: t('Assessment by Opportunity (past 30 days)'),\n\t\treportId: 'a0043382b357401013a082c136a8dc09',\n\t\tstyleConfigurations: {\n\t\t\thideRegister: true\n\t\t}\n\t},\n\toverdueTraining: {\n\t\treportTitle: OVERDUE_TRAINING_LABEL,\n\t\treportId: 'd0e47782b357401013a082c136a8dc58',\n\t\tautoClickBehavior: true\n\t}\n};\n\nconst defaultQualityIndicatorProps = {\n\ttitle: AVERAGE_QUALITY_TIME_SERIES_TITLE,\n\tsys_id: INDICATOR_QUALITY_TRAINEE_SURVEY_SCORE\n};\n\nconst view = state => {\n\tlet qualityIndicatorProps = defaultQualityIndicatorProps;\n\ttry {\n\t\tqualityIndicatorProps = JSON.parse(\n\t\t\tget(state, 'properties.qualityIndicatorJSON')\n\t\t);\n\t\t// eslint-disable-next-line no-empty\n\t} catch (error) {}\n\n\treturn (\n\t\t<sn-layout model={LAYOUT_MODEL}>\n\t\t\t<div className=\"coaching-overview-row\" slot=\"col1-row1\">\n\t\t\t\t<div className=\"cas-overview-section\">\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={ASSESSMENTS_PAST30DAYS_LABEL}\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t></now-heading>\n\t\t\t\t\t<div className=\"cas-overview-card-container\">\n\t\t\t\t\t\t<sn-manager-coaching-overview-card\n\t\t\t\t\t\t\tclassName=\"coaching-vis-asmt-by-state\"\n\t\t\t\t\t\t\t{...REPORTS.assessmentByState}\n\t\t\t\t\t\t></sn-manager-coaching-overview-card>\n\t\t\t\t\t\t<sn-manager-coaching-overview-card\n\t\t\t\t\t\t\tclassName=\"coaching-vis-asmt-by-oppo\"\n\t\t\t\t\t\t\t{...REPORTS.assessmentByOpportunity}\n\t\t\t\t\t\t></sn-manager-coaching-overview-card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"coaching-overview-column\" slot=\"col1-row2-col1\">\n\t\t\t\t<sn-manager-coaching-timeseries\n\t\t\t\t\ttitle={qualityIndicatorProps.title}\n\t\t\t\t\tindicator-ids={[qualityIndicatorProps.sys_id]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"coaching-overview-column\" slot=\"col1-row2-col2\">\n\t\t\t\t<div className=\"cas-overview-section\">\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={OVERDUE_TRAINING_LABEL}\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t></now-heading>\n\t\t\t\t\t<sn-manager-coaching-overview-card\n\t\t\t\t\t\t{...REPORTS.overdueTraining}\n\t\t\t\t\t></sn-manager-coaching-overview-card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"coaching-overview-column\" slot=\"col2\">\n\t\t\t\t<div className=\"cas-overview-section\">\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={t('Top assigned skills (past 30 days)')}\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t></now-heading>\n\t\t\t\t\t<sn-manager-coaching-top-assigned-skills\n\t\t\t\t\t\tmanager-id={state.properties.managerId}\n\t\t\t\t\t\tgroup-ids={state.properties.groupIds}\n\t\t\t\t\t></sn-manager-coaching-top-assigned-skills>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</sn-layout>\n\t);\n};\n\nexport default view;\n","module.exports = __TECTONIC__$devsnc_sn_layout;","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\n\n//Currently only support single score and barchart, extend functionality if needed.\ncreateCustomElement('sn-manager-coaching-overview-card', {\n\tproperties: {\n\t\treportId: { default: '' }, //09e79884b353001013a082c136a8dca3\n\t\treportTitle: { default: '' },\n\t\tautoClickBehavior: { default: false },\n\t\tstyleConfigurations: {\n\t\t\tdefault: {\n\t\t\t\thideRegister: true\n\t\t\t}\n\t\t}\n\t},\n\tinitialState: {},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.cas-overview-card{height:100%;background-color:RGB(var(--now-color--neutral-0,255,255,255));--now-line-height:$now-global-line-height}sn-component-visualization{height:100%;min-height:8rem}\", \"\"]);\n\n// exports\n","// eslint-disable no-unused-vars\n// import { t } from 'sn-translate';\nimport '@servicenow/now-card';\nimport '@servicenow/now-heading';\nimport 'sn-component-visualization';\n\n// eslint-enable no-unused-vars\n\nconst view = state => {\n\tconst {\n\t\tproperties: { reportId, styleConfigurations, autoClickBehavior }\n\t} = state;\n\n\treturn (\n\t\t<now-card className=\"cas-overview-card\">\n\t\t\t<sn-component-visualization\n\t\t\t\tstyleConfigurations={styleConfigurations}\n\t\t\t\tsys-id={reportId}\n\t\t\t\tauto-click-behavior={autoClickBehavior}\n\t\t\t></sn-component-visualization>\n\t\t</now-card>\n\t);\n};\n\nexport default view;\n","// import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n// import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\n// import {\n\n// } from './action';\n// import get from 'lodash/get';\n// import { createLog } from '../../utils/logger';\n\n// const LOG = createLog('sn-manager-coaching-assessment');\n\nconst actionHandlers = {};\n\nexport default actionHandlers;\n","import './coaching-top-assigned-skills';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport actions from './actions';\nimport view from './view';\nimport properties from './properties';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-coaching-top-assigned-skills', {\n\trenderer: { type: snabbdom, view },\n\tinitialState: {\n\t\tskillCount: [],\n\t\tuserCount: 0,\n\t\tloaded: false\n\t},\n\t...actions,\n\t...properties,\n\tstyles\n});\n","import { COMPONENT_BOOTSTRAPPED } from '@seismic/core/lib/constants';\nimport {\n\tFETCH_SKILL_LEVEL_REQUESTED,\n\tFETCH_SKILL_LEVEL_SUCCEEDED,\n\tFETCH_SKILL_LEVEL_COUNTS,\n\tFETCH_SKILL_LEVEL_COUNTS_SUCCESS,\n\tERROR_OCCURED,\n\tITEM_SELECTED,\n\tFETCH_USERS_REQUESTED,\n\tFETCH_USERS_SUCCEEDED\n} from '../common/constants';\nimport {\n\tfetchSkillLevelCounts,\n\tfetchSkillLevelEffect,\n\tfetchUserCountEffect\n} from '../common/effects';\nimport { skillLevelFetchSucceeded } from '../common/coachingCommonUtils';\nimport logErrorEffect from '../../utils/logErrorEffect';\n\nimport {\n\tuserFetchSucceeded,\n\tskillLevelCountsFetchSucceeded,\n\tskillCountFetchSucceeded,\n\taddColorCount\n} from './topAssignedSkillsUtils';\nimport {\n\tFETCH_SKILL_AND_COUNT_REQUESTED,\n\tFETCH_SKILL_AND_COUNT_SUCCEEDED,\n\tADD_COLOR_COUNT_TO_SKILL_COUNT,\n\tNOW_TEXT_LINK_CLICKED\n} from './constants';\nimport { fetchSkillAndCountEffect } from './effects';\n\nexport default {\n\tactionHandlers: {\n\t\t[ERROR_OCCURED]: logErrorEffect,\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ state, dispatch }) => {\n\t\t\tconst { groupIds } = state.properties;\n\t\t\tdispatch(FETCH_USERS_REQUESTED, {\n\t\t\t\tgroup_ids: groupIds\n\t\t\t});\n\t\t},\n\t\t[FETCH_USERS_REQUESTED]: fetchUserCountEffect,\n\t\t[FETCH_USERS_SUCCEEDED]: userFetchSucceeded,\n\t\t[FETCH_SKILL_LEVEL_REQUESTED]: fetchSkillLevelEffect,\n\t\t[FETCH_SKILL_LEVEL_SUCCEEDED]: skillLevelFetchSucceeded,\n\t\t[FETCH_SKILL_LEVEL_COUNTS]: fetchSkillLevelCounts,\n\t\t[FETCH_SKILL_LEVEL_COUNTS_SUCCESS]: skillLevelCountsFetchSucceeded,\n\t\t[FETCH_SKILL_AND_COUNT_REQUESTED]: fetchSkillAndCountEffect,\n\t\t[FETCH_SKILL_AND_COUNT_SUCCEEDED]: skillCountFetchSucceeded,\n\t\t[ADD_COLOR_COUNT_TO_SKILL_COUNT]: addColorCount,\n\t\t[NOW_TEXT_LINK_CLICKED]: ({ action: { payload }, dispatch }) => {\n\t\t\tdispatch(ITEM_SELECTED, {\n\t\t\t\ttable: payload.table,\n\t\t\t\tsys_id: payload.id\n\t\t\t});\n\t\t}\n\t}\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { FETCH_SKILL_AND_COUNT_SUCCEEDED } from './constants';\nimport { ERROR_OCCURED } from '../common/constants';\n\nconst taskGroupBySkillQuery = `query ($queryCondition: String)\n{\n\tincidentAggregateResult: GlideAggregate_Query(tableName: \"task_m2m_skill\", queryConditions: $queryCondition, groupBy: \"skill\") {\n\t  count\n\t  groupBy {\n\t\tvalue\n\t\tdisplayValue\n\t\t_query {\n\t\t  queryWithSkill: GlideRecord_Query {\n\t\t\tcmn_skill(queryConditions: \"name=$$parent.displayValue$$\") {\n\t\t\t  _results {\n\t\t\t\tlevel_type {\n\t\t\t\t  value\n\t\t\t\t  displayValue\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n\t}\n  }\n  `;\n\nexport const fetchSkillAndCountEffect = createGraphQLEffect(\n\ttaskGroupBySkillQuery,\n\t{\n\t\tvariableList: ['queryCondition'],\n\t\tsuccessActionType: FETCH_SKILL_AND_COUNT_SUCCEEDED,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n","// eslint-disable-next-line no-unused-vars\nimport { Fragment } from '@seismic/snabbdom-renderer';\nimport get from 'lodash/get';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-record-list';\nimport {\n\tGROUP_EMPTY_HEADER_MESSAGE,\n\tGROUP_EMPTY_MESSAGE,\n\tSKILL_COUNT_EMPTY_MESSAGE\n} from '../common/constants';\nimport { buildGridProps } from './topAssignedSkillsUtils';\n\nexport default state => {\n\tconst { skillCount } = state;\n\tconst groupIds = get(state, 'properties.groupIds');\n\tconst _renderLoading = () => <now-empty-state type=\"loading\" />;\n\tconst _renderEmpty = () => (\n\t\t<now-empty-state\n\t\t\ttype=\"empty\"\n\t\t\theaderText={GROUP_EMPTY_HEADER_MESSAGE}\n\t\t\tbodyText={GROUP_EMPTY_MESSAGE}\n\t\t/>\n\t);\n\tconst _renderEmptySkillCount = () => (\n\t\t<now-empty-state type=\"empty\" bodyText={SKILL_COUNT_EMPTY_MESSAGE} />\n\t);\n\tconst _renderContent = () => {\n\t\tif (groupIds && groupIds.split('=')[1]) {\n\t\t\tif (state.loaded) return _renderList();\n\t\t\treturn _renderLoading();\n\t\t} else return _renderEmpty();\n\t};\n\tconst _renderList = () => (\n\t\t<div>\n\t\t\t{skillCount.length > 0 ? (\n\t\t\t\t<now-table {...buildGridProps(skillCount)} />\n\t\t\t) : (\n\t\t\t\t_renderEmptySkillCount()\n\t\t\t)}\n\t\t</div>\n\t);\n\treturn <div className=\"top-assigned-skills\">{_renderContent()}</div>;\n};\n","export default {\n\tproperties: {\n\t\tmanagerId: {},\n\t\tskillLevelType: {},\n\t\tskillLevelCounts: {},\n\t\tgroupIds: {}\n\t}\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.top-assigned-skills{border:1px solid rgb(var(--now-color--divider-tertiary,var(--now-color--neutral-3,209,214,214)))}now-empty-state{display:block;background-color:RGB(var(--now-color--neutral-0,255,255,255));padding-top:2rem;padding-bottom:2rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport { AVERAGE_QUALITY_TIME_SERIES_TITLE } from '../common/constants';\n\ncreateCustomElement('sn-manager-coaching-timeseries', {\n\tproperties: {\n\t\tindicatorIds: { default: [] },\n\t\ttitle: { default: AVERAGE_QUALITY_TIME_SERIES_TITLE }\n\t},\n\tinitialState: {\n\t\tassignmentGroups: [],\n\t\tselectedGroupId: ''\n\t},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.cas-overview-card{background-color:RGB(var(--now-color--neutral-0,255,255,255));--now-line-height:$now-global-line-height}.cas-overview-section{display:block;margin-bottom:1.5rem;padding:1rem;background:RGB(var(--now-color--neutral-1,246,247,247))}.cas-overview-section:last-child{margin-bottom:0}.cas-overview-card-header{display:flex;flex-direction:row;margin-bottom:1rem}.cas-overview-card-header now-heading{flex:1 1 auto}.dropdown-container{margin:0 1.5rem;display:flex;flex-direction:column}.dropdown-container .dropdown-label{font-size:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116));padding:0 0 .125rem}.dropdown-container now-dropdown{margin:0;border-bottom:1px solid rgb(var(--now-color--neutral-5,172,180,181))}sn-component-visualization{min-height:10.5rem}\", \"\"]);\n\n// exports\n","// eslint-disable no-unused-vars\n// import { t } from 'sn-translate';\nimport '@servicenow/now-card';\nimport '@servicenow/now-heading';\nimport 'sn-component-visualization';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { BREAKDOWNS, ASSIGNMENT_GROUP_LABEL } from '../../common/constants';\nimport '@devsnc/sn-form-controls';\n// eslint-enable no-unused-vars\n\nconst view = state => {\n\tconst {\n\t\tproperties: { title, indicatorIds }\n\t} = state;\n\n\tconst assignmentGroups = get(state, 'assignmentGroups', []);\n\tconst selectedGroupId =\n\t\tget(state, 'selectedGroupId', null) ||\n\t\tget(assignmentGroups, '[0].id', '');\n\n\t//:8a4dde73c6112278017a6a4baf547aa7 software\n\tconst dataConfigurations =\n\t\tisEmpty(indicatorIds) || !selectedGroupId\n\t\t\t? []\n\t\t\t: indicatorIds.map(indicatorId => {\n\t\t\t\treturn {\n\t\t\t\t\tuuid: `${indicatorId}:${BREAKDOWNS.assignment_group}:${selectedGroupId}`,\n\t\t\t\t\tsource_type: 'analytics',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\tstart_time: moment()\n\t\t\t\t\t\t.subtract(30, 'days')\n\t\t\t\t\t\t.format('YYYY-MM-DD'),\n\t\t\t\t\tend_time: moment().format('YYYY-MM-DD')\n\t\t\t\t};\n\t\t\t});\n\n\treturn (\n\t\t<div className=\"cas-overview-section\">\n\t\t\t<div className=\"cas-overview-card-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={title}\n\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t></now-heading>\n\t\t\t\t{!isEmpty(assignmentGroups) ? (\n\t\t\t\t\t<div className=\"dropdown-container\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\taria-label={ASSIGNMENT_GROUP_LABEL}\n\t\t\t\t\t\t\tclassName=\"dropdown-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ASSIGNMENT_GROUP_LABEL}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\titems={assignmentGroups}\n\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\tselected-items={[selectedGroupId]}\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t></now-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<now-card className=\"cas-overview-card\">\n\t\t\t\t<sn-component-visualization\n\t\t\t\t\tdataConfigurations={dataConfigurations}\n\t\t\t\t></sn-component-visualization>\n\t\t\t</now-card>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","module.exports = __TECTONIC__$devsnc_sn_form_controls;","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport {\n\tNOW_DROPDOWN_ITEM_CLICKED,\n\tGRAPHQL_MAX_LIMIT\n} from '../../common/constants';\nimport { COACHING_VIS_FETCH_GROUPS_SUCCEEDED } from './action';\nimport get from 'lodash/get';\n\n// import { createLog } from '../../utils/logger';\n// const LOG = createLog('sn-manager-coaching-assessment');\n\nconst managedGroupsQuery = `query {\n\tGlideRecord_Query {\n\t\tdirectGroups: sys_user_group(queryConditions: \"manager=javascript:gs.getUserID()\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tassignment_group: _row_data {\n\t\t\t\t\tlabel: displayValue\n\t\t\t\t\tid: uniqueValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tadditionalGroups: sn_wfo_add_manager(queryConditions: \"manager=javascript:gs.getUserID()\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tassignment_group {\n\t\t\t\t\t\tid: value\n\t\t\t\t\t\tlabel: displayValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\nconst fetchManagedGroupsGraphql = createGraphQLEffect(managedGroupsQuery, {\n\tsuccessActionType: COACHING_VIS_FETCH_GROUPS_SUCCEEDED\n\t// errorActionType\n});\n\nconst actionHandlers = {\n\t[COMPONENT_BOOTSTRAPPED]: fetchManagedGroupsGraphql,\n\t[COACHING_VIS_FETCH_GROUPS_SUCCEEDED]: ({\n\t\tupdateState,\n\t\taction: { payload }\n\t}) => {\n\t\tconst directGroups = get(\n\t\t\tpayload,\n\t\t\t'data.GlideRecord_Query.directGroups._results',\n\t\t\t[]\n\t\t); //[0]._row_data\n\t\tconst addGroups = get(\n\t\t\tpayload,\n\t\t\t'data.GlideRecord_Query.additionalGroups._results',\n\t\t\t[]\n\t\t);\n\t\tconst assignmentGroups = [\n\t\t\t...directGroups.map(e => {\n\t\t\t\treturn {\n\t\t\t\t\t...e.assignment_group,\n\t\t\t\t\ttype: 'direct'\n\t\t\t\t};\n\t\t\t}),\n\t\t\t...addGroups.map(e => {\n\t\t\t\treturn {\n\t\t\t\t\t...e.assignment_group,\n\t\t\t\t\ttype: 'additional'\n\t\t\t\t};\n\t\t\t})\n\t\t];\n\n\t\tupdateState({\n\t\t\tassignmentGroups\n\t\t});\n\t},\n\t[NOW_DROPDOWN_ITEM_CLICKED]: ({ updateState, action: { payload } }) => {\n\t\tupdateState({\n\t\t\tselectedGroupId: get(payload, 'item.id', '')\n\t\t});\n\t}\n};\n\nexport default actionHandlers;\n","export const COACHING_VIS_FETCH_GROUPS_SUCCEEDED =\n\t'COACHING_VIS#FETCH_GROUPS_SUCCEEDED';\n","// import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n// import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\n// import {\n\n// } from './action';\n// import get from 'lodash/get';\n// import { createLog } from '../../utils/logger';\n\n// const LOG = createLog('sn-manager-coaching-assessment');\n\nconst actionHandlers = {};\n\nexport default actionHandlers;\n","import { COACHING_OVERVIEW } from './constants';\n\nconst CoachingProps = {\n\tactive: {},\n\tselectedTab: {\n\t\tdefault: COACHING_OVERVIEW\n\t},\n\tmanagerId: {},\n\tgroupIds: {}\n};\n\nexport default {\n\tproperties: CoachingProps\n};\n","import { COMPONENT_BOOTSTRAPPED } from '@seismic/core/lib/constants';\nimport { FETCH_MANAGER_REQUESTED, FETCH_MANAGER_SUCCEEDED } from './constants';\nimport { ERROR_OCCURED } from '../common/constants';\nimport { SELECTED_ITEM_SET } from './constants';\nimport { managerFetchSucceeded, changeTab } from './coachingUtils';\nimport { fetchManagerEffect } from './effects';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { queryGroupScheduleData } from '../common/coachingCommonUtils';\nimport {\n\tRECORD_WATCHER_UPDATED,\n\tUSER_GROUP_ACTIONS,\n\tTABLES\n} from '../../common/constants';\n\nexport default {\n\tactionHandlers: {\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch }) => {\n\t\t\tdispatch(FETCH_MANAGER_REQUESTED);\n\n\t\t\t// register a record watcher to refresh the skill matrix tab if needed\n\t\t\tconst table = TABLES.SYS_USER_HAS_SKILL;\n\t\t\tconst subscribe = 'true';\n\t\t\tconst filterQuery = 'active=true';\n\t\t\tconst filter = btoa(filterQuery).replace(/=/g, '-');\n\t\t\tdispatch(RECORD_WATCHER_UPDATED, { table, filter, subscribe });\n\t\t},\n\t\t[ERROR_OCCURED]: logErrorEffect,\n\t\t[USER_GROUP_ACTIONS.GROUPS_READY]: queryGroupScheduleData,\n\t\t[FETCH_MANAGER_REQUESTED]: fetchManagerEffect,\n\t\t[FETCH_MANAGER_SUCCEEDED]: managerFetchSucceeded,\n\t\t[SELECTED_ITEM_SET]: changeTab\n\t}\n};\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const managerFetchSucceeded = ({\n\taction,\n\tupdateProperties,\n\tupdateState\n}) => {\n\tconst managerId = get(action.payload, 'data.GlideDomain_Query.user.sys_id');\n\tconst qualityIndicatorJSON = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.quality_indicator_json._results[0].value.value'\n\t);\n\tif (!isEmpty(qualityIndicatorJSON)) {\n\t\tupdateState({\n\t\t\tqualityIndicatorJSON\n\t\t});\n\t}\n\tupdateProperties({\n\t\tmanagerId: managerId\n\t});\n};\n\nexport const changeTab = ({ action, updateProperties }) => {\n\tupdateProperties({\n\t\tselectedTab: get(action, 'payload.value', '')\n\t});\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { FETCH_MANAGER_SUCCEEDED } from './constants';\nimport { ERROR_OCCURED } from '../common/constants';\n\nconst managerQuery = `\n{\n\tGlideDomain_Query {\n\t\tuser {\n\t\t\tsys_id\n\t\t}\n\t}\n\tGlideRecord_Query {\n\t\tquality_indicator_json: sys_properties(queryConditions: \"name=sn_coaching.coaching_overview_default_quality_indicator\", pagination: { limit: 1 }) {\n\t\t\t_results {\n\t\t\t\tvalue {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const fetchManagerEffect = createGraphQLEffect(managerQuery, {\n\tsuccessActionType: FETCH_MANAGER_SUCCEEDED,\n\terrorActionType: ERROR_OCCURED\n});\n","import { RW_ACTIONS, TABLES } from '../../common/constants';\nimport { COACHING_SKILLS } from './constants';\nimport get from 'lodash/get';\n\nconst handleMessageReceived = ({ action, state, updateState }) => {\n\tconst active = get(state, 'properties.active', false);\n\tconst selectedTab = get(state, 'properties.selectedTab', '');\n\tconst tableName = action.payload.data.table_name;\n\n\tif (\n\t\t(!active && tableName === TABLES.SYS_USER_HAS_SKILL) ||\n\t\tselectedTab !== COACHING_SKILLS\n\t) {\n\t\tupdateState({\n\t\t\tpath: 'skillMatrixLastRefresh',\n\t\t\tvalue: Date.now(),\n\t\t\toperation: 'set',\n\t\t\tshouldRender: false\n\t\t});\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[RW_ACTIONS.SUBSCRIPTION_STARTED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Started');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_SUCCEEDED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Succedded');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_FAILED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Failed');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.MESSAGE_RECEIVED]: handleMessageReceived,\n\t\t[RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Unsubscribed');\n\t\t\t}\n\t\t}\n\t}\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.coaching-container{display:flex;flex-direction:column;height:100%}.coaching-container now-heading{margin:1.5rem;display:inline-block;padding-top:.5rem}.coaching-container .coaching-tab-content{height:100%;overflow-y:auto}.coaching-container .coaching-tab-content sn-manager-coaching-skill-matrix{display:block;height:100%}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\n\ncreateCustomElement('sn-manager-coaching-assessment', {\n\tproperties: {\n\t\ttable: { default: '' },\n\t\tsysId: { default: '' },\n\t\tfields: { default: {} },\n\t\tassessmentView: { default: 'manager_workspace_side_panel' },\n\t\tcurrentUser: { default: null }\n\t},\n\tinitialState: {\n\t\tdetailView: {\n\t\t\tshow: false,\n\t\t\tasmtId: '',\n\t\t\tassessmentState: '',\n\t\t\tclicked: false\n\t\t},\n\t\tsurveyView: {\n\t\t\tshow: false,\n\t\t\ttriggerId: '',\n\t\t\ttriggerTable: '',\n\t\t\tmetricType: ''\n\t\t},\n\t\tsingleAsmt: false,\n\t\tloadingAssessments: true,\n\t\tassessments: [],\n\t\tasmtId: '',\n\t\tasmtState: ''\n\t},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host(sn-manager-coaching-assessment){display:block;position:absolute;left:0;right:0;top:0;bottom:0}.cas-container{padding:1.5rem;height:100%;overflow-y:auto;display:flex;flex-direction:column}.cas-empty-state{flex:1 0 auto}sn-manager-coaching-asmt-survey{display:block;height:100%;width:100%}now-button{padding-right:1rem;float:right}\", \"\"]);\n\n// exports\n","// eslint-disable-next-line no-unused-vars\nimport { NowRecordFormSectionElement } from '@servicenow/now-record-form-connected';\nimport '../sn-manager-coaching-asmt-detail';\nimport '../sn-manager-coaching-asmt-card-list';\nimport '../sn-manager-coaching-asmt-survey';\nimport { t } from 'sn-translate';\nimport '@servicenow/now-empty-state';\nimport get from 'lodash/get';\nimport { EMPTY_STATE_TYPES } from '../../common/constants';\nimport { LOADING_ASSESSMENTS_MESSAGE } from '../common/constants';\n// const COACHING_ASSESSMENT_TABLE = 'sn_coaching_assessment';\n\nconst assessmentHeadingTag = (\n\t<now-heading\n\t\tlabel={t('Assessments')}\n\t\thasNoMargin={true}\n\t\tlevel=\"2\"\n\t\tpurpose=\"header\"\n\t\tvariant=\"header-secondary\"\n\t/>\n);\n\nconst renderEmptyState = (type, message) => {\n\treturn (\n\t\t<div className=\"cas-container\">\n\t\t\t{assessmentHeadingTag}\n\t\t\t<div className=\"cas-empty-state\">\n\t\t\t\t<now-empty-state type={type} bodyText={message || ''} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst view = state => {\n\t/* to differentiate form record and sidebar assessment record\n\t * form record will be identified as currentTable, currentSysId\n\t * assessment record will be id-ed by asmtId\n\t */\n\n\tconst {\n\t\tproperties: {\n\t\t\ttable: currentTable,\n\t\t\tsysId: currentSysId,\n\t\t\tassessmentView\n\t\t},\n\t\tassessments,\n\t\tassessmentsState,\n\t\tloadingAssessments,\n\t\tdetailView,\n\t\tsurveyView\n\t} = state;\n\tconst currentUser = get(state, 'properties.currentUser.user.userId', null);\n\tconst trainee = get(state, 'properties.fields.assigned_to.value', null);\n\n\tif (loadingAssessments)\n\t\treturn renderEmptyState(\n\t\t\tEMPTY_STATE_TYPES.LOADING,\n\t\t\tLOADING_ASSESSMENTS_MESSAGE\n\t\t);\n\n\tif (surveyView.show) {\n\t\treturn (\n\t\t\t<sn-manager-coaching-asmt-survey\n\t\t\t\t{...surveyView}\n\t\t\t></sn-manager-coaching-asmt-survey>\n\t\t);\n\t}\n\n\tif (\n\t\t(detailView.show &&\n\t\t\t(detailView.assessmentState == 1 ||\n\t\t\t\tdetailView.assessmentState == 2)) ||\n\t\t(detailView.show && detailView.clicked)\n\t) {\n\t\treturn (\n\t\t\t<sn-manager-coaching-asmt-detail\n\t\t\t\tassessment-view={assessmentView}\n\t\t\t\tasmt-id={detailView.asmtId}\n\t\t\t\tsurvey-in-progress={get(\n\t\t\t\t\tassessmentsState,\n\t\t\t\t\t`${detailView.asmtId}.canStartSurvey`,\n\t\t\t\t\tfalse\n\t\t\t\t)}\n\t\t\t\tcompleted={get(\n\t\t\t\t\tassessmentsState,\n\t\t\t\t\t`${detailView.asmtId}.completed`,\n\t\t\t\t\tfalse\n\t\t\t\t)}\n\t\t\t\tassessmentState={detailView.assessmentState}\n\t\t\t></sn-manager-coaching-asmt-detail>\n\t\t);\n\t}\n\n\treturn (\n\t\t<sn-manager-coaching-asmt-card-list\n\t\t\tassessments={assessments}\n\t\t\tassessments-state={assessmentsState}\n\t\t\ttask-id={currentSysId}\n\t\t\ttask-table={currentTable}\n\t\t\tcurrentUser={currentUser}\n\t\t\ttrainee={trainee}\n\t\t/>\n\t);\n};\n\nexport default view;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport { DEFAULT_ASMT_VIEW } from '../common/constants';\n\ncreateCustomElement('sn-manager-coaching-asmt-detail', {\n\tproperties: {\n\t\tassessmentView: { default: DEFAULT_ASMT_VIEW },\n\t\tasmtId: { default: '' },\n\t\tsurveyInProgress: { default: false },\n\t\tassessmentState: { default: '' }\n\t},\n\t//TODO the searchTerm is a workaround for issue when copying now-typeahead\n\t//once we move to use now-typeahead directly, this won't be needed.\n\tinitialState: {\n\t\tskills: {\n\t\t\tsearchTerm: '',\n\t\t\tallSkills: [],\n\t\t\tallAwardedSkills: [],\n\t\t\tselectedSkillIds: []\n\t\t},\n\t\ttrainings: {\n\t\t\tsearchTerm: '',\n\t\t\tallTrainings: [],\n\t\t\tassignedTrainings: [],\n\t\t\tselectedTrainingIds: []\n\t\t},\n\t\tcompleted: false\n\t},\n\ttransformState(state) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcompleted: state.properties.completed || state.completed\n\t\t};\n\t},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host(sn-manager-coaching-asmt-detail){display:block;height:100%;width:100%}.cas-detail-container{display:flex;flex-direction:column;height:100%;overflow:hidden;position:relative}.cas-detail-container .btn-back{margin:.75rem}.cas-detail-container .content{overflow-x:hidden;overflow-y:auto;height:calc(100% - 7.5rem)}.cas-detail-container sn-manager-button-footer{--sn-manager-button-footer-padding:.75rem;position:absolute;left:0;bottom:0;width:100%}.cas-detail-container now-record-form-section-connected{margin:0 1.5rem}.cas-detail-container-footer{display:flex;flex-direction:column;flex:1 0 auto;margin-top:1rem;background-color:RGB(var(--now-color--neutral-0,255,255,255));padding:0 1.5rem;border-left:1px solid rgb(var(--now-color--divider-tertiary,var(--now-color--neutral-3,209,214,214)))}.cas-detail-multi-field{flex:1 0 auto}.cas-detail-multi-field now-typeahead-multi{display:block;width:min-content;width:-webkit-min-content;min-width:100%}\", \"\"]);\n\n// exports\n","// eslint-disable-next-line no-unused-vars\nimport {\n\tCOMPLETE_ASMT_LABEL,\n\tSAVE_LABEL,\n\tCOACHING_ASSESSMENT_TABLE,\n\tASSESSMENTS_LABEL\n} from '../common/constants';\nimport {\n\tCAS_DETAIL_BACKBTN_CLICKED,\n\tCAS_DETAIL_SAVE_CLICKED,\n\tCAS_DETAIL_COMPLETE_CLICKED\n} from './action';\nimport { REFRESH_ASSESSMENT_LIST } from '../sn-manager-coaching-assessment/action';\n\nimport { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport '../../common/sn-manager-button-footer';\nimport '@servicenow/now-typeahead';\nimport '@servicenow/now-record-form-connected';\nimport { t } from 'sn-translate';\nimport { SKILL_MULTI_NAME, TRAINING_MULTI_NAME } from './actionHandlers';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nconst COMPLETE_BUTTON = {\n\tlabel: COMPLETE_ASMT_LABEL,\n\tvariant: 'primary',\n\tactions: [\n\t\t{\n\t\t\tname: CAS_DETAIL_COMPLETE_CLICKED\n\t\t},\n\t\t{\n\t\t\tname: GFORM_ACTIONS.GFORM_INTERNAL_BATCH_ACTIONS,\n\t\t\tpayload: {\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SET_VALUE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tfieldName: 'state',\n\t\t\t\t\t\t\tvalue: '3' //Closed Complete\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SAVE,\n\t\t\t\t\t\tpayload: {}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n};\n\nconst SAVE_BUTTON = {\n\tlabel: SAVE_LABEL,\n\tvariant: 'secondary',\n\tactions: [\n\t\t{\n\t\t\tname: CAS_DETAIL_SAVE_CLICKED\n\t\t},\n\t\t{\n\t\t\tname: GFORM_ACTIONS.GFORM_SAVE,\n\t\t\tpayload: {}\n\t\t},\n\t\t{\n\t\t\tname: REFRESH_ASSESSMENT_LIST\n\t\t}\n\t]\n};\n\n// const startSurveyBtn = {\n// \tlabel: START_SURVEY_LABEL,\n// \tactions: [\n// \t\t{\n// \t\t\tname: CAS_START_SURVEY\n// \t\t}\n// \t]\n// };\n\nconst getItemsWithHint = items => {\n\treturn [\n\t\t{\n\t\t\tlabel: t('Start typing to search'),\n\t\t\tchildren: items\n\t\t}\n\t];\n};\n\nconst setMinHeightInCollapsedFormSection = vnode => {\n\tlet childNodes = Array.from(\n\t\tget(vnode, 'elm.shadowRoot.childNodes', [])\n\t).filter(n => n.localName == 'now-record-form-section-column-layout');\n\tif (!isEmpty(childNodes)) {\n\t\tlet section = childNodes.pop();\n\t\tsection.style.minHeight = 'fit-content';\n\t\tsection.style.backgroundColor =\n\t\t\t'RGB(var(--now-color--neutral-0, 255,255,255))';\n\t}\n};\n\nconst view = (state, dispatch) => {\n\tconst {\n\t\tproperties: { assessmentView, asmtId, assessmentState },\n\t\tskills: { allSkills, selectedSkillIds, searchTerm: skillsSearchTerm },\n\t\ttrainings: {\n\t\t\tallTrainings,\n\t\t\tselectedTrainingIds,\n\t\t\tsearchTerm: trainingsSearchTerm\n\t\t},\n\t\tcompleted\n\t} = state;\n\n\tconst skillItems = skillsSearchTerm\n\t\t? allSkills\n\t\t: getItemsWithHint(allSkills);\n\tconst trainingItems = trainingsSearchTerm\n\t\t? allTrainings\n\t\t: getItemsWithHint(allTrainings);\n\n\tconst footerButtons =\n\t\t(assessmentState != 1 && assessmentState != 2) || completed\n\t\t\t? null\n\t\t\t: [COMPLETE_BUTTON, SAVE_BUTTON];\n\treturn (\n\t\t<div className=\"cas-detail-container\">\n\t\t\t<now-button-bare\n\t\t\t\tlabel={ASSESSMENTS_LABEL}\n\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize=\"md\"\n\t\t\t\tclassName=\"btn-back\"\n\t\t\t\tconfigAria={{\n\t\t\t\t\t'aria-label': t('Go back to Assessment list')\n\t\t\t\t}}\n\t\t\t\ton-click={() => dispatch(CAS_DETAIL_BACKBTN_CLICKED)}\n\t\t\t/>\n\t\t\t<div className=\"content\">\n\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\ttable={COACHING_ASSESSMENT_TABLE}\n\t\t\t\t\tsysId={asmtId}\n\t\t\t\t\tview={assessmentView}\n\t\t\t\t\thook-update={setMinHeightInCollapsedFormSection}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"cas-detail-container-footer\" slot=\"footer\">\n\t\t\t\t\t\t<div className=\"cas-detail-multi-field\">\n\t\t\t\t\t\t\t<now-typeahead-multi\n\t\t\t\t\t\t\t\tname={SKILL_MULTI_NAME}\n\t\t\t\t\t\t\t\titems={skillItems}\n\t\t\t\t\t\t\t\tselected-items={selectedSkillIds}\n\t\t\t\t\t\t\t\tlabel={t('Add skills')}\n\t\t\t\t\t\t\t\tfilter-type=\"contains\"\n\t\t\t\t\t\t\t\tvalue={skillsSearchTerm}\n\t\t\t\t\t\t\t\tdisable-auto-select\n\t\t\t\t\t\t\t\tdisabled={completed}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<now-typeahead-multi\n\t\t\t\t\t\t\t\tname={TRAINING_MULTI_NAME}\n\t\t\t\t\t\t\t\titems={trainingItems}\n\t\t\t\t\t\t\t\tselected-items={selectedTrainingIds}\n\t\t\t\t\t\t\t\tlabel={t('Add training')}\n\t\t\t\t\t\t\t\tfilter-type=\"contains\"\n\t\t\t\t\t\t\t\tvalue={trainingsSearchTerm}\n\t\t\t\t\t\t\t\tdisable-auto-select\n\t\t\t\t\t\t\t\tdisabled={completed}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{footerButtons ? (\n\t\t\t\t\t\t\t<sn-manager-button-footer\n\t\t\t\t\t\t\t\tbuttons-config={footerButtons}\n\t\t\t\t\t\t\t></sn-manager-button-footer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</now-record-form-section-connected>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nconst awardedSkillQuery = `sn_coaching_skills_to_award(queryConditions: $awardedSkillsCond, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t_results {\n\t\tskill {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t}\n\t\tsource_table {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t}\n\t\tsource_id {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t}\n\t}\n}`;\n\nconst assignedTrainings = `sn_coaching_assessment_recommended_learning(queryConditions: $assignedTrainingsCond, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t_results {\n\t\tsys_id {\n\t\t    value\n\t\t}\n\t\trecommendation_table {\n\t\t\tvalue\n\t\t}\n\t\trecommendation_id {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t\tnumber:_documentIdRef(fieldName: \"number\") {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t}\n\t\t}\n\t\tkb_short_description: recommendation_id {\n\t\t\t_documentIdRef(fieldName: \"short_description\") {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t}\n\t\t}\n\t\tcr_name: recommendation_id {\n\t\t\t_documentIdRef(fieldName: \"name\") {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nexport const skillTrainingQuery = `query($awardedSkillsCond: String!, $assignedTrainingsCond: String!) {\n\tGlideRecord_Query {\n\t\t${awardedSkillQuery}\n\t\t${assignedTrainings}\n\t}\n}`;\n//\t\t${allTrainings}\n//\t\t${allSkillQuery}\nexport const skillQuery = `query($skillCondition: String!) {\n\tGlideRecord_Query {\n\t\tcmn_skill(queryConditions: $skillCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nexport const trainingQuery = `query($kbCondition: String!, $trainingCondition: String!) {\n\tGlideRecord_Query {\n\t\tkb_knowledge(queryConditions: $kbCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tnumber {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tshort_description {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsn_coaching_recommendation(queryConditions: $trainingCondition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tnumber {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tname {\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n","const LOG_STATUS_KEY = '__SEISMIC_LOG_LEVEL';\n\nexport const LOG_LEVEL_ALL = 0;\nexport const LOG_LEVEL_DEBUG = 1;\nexport const LOG_LEVEL_LOG = 2;\nexport const LOG_LEVEL_INFO = 2;\nexport const LOG_LEVEL_WARN = 3;\nexport const LOG_LEVEL_ERROR = 4;\n\n// set default logging level\nif (typeof window[LOG_STATUS_KEY] === 'undefined') {\n\twindow[LOG_STATUS_KEY] = LOG_LEVEL_ERROR;\n}\n\nexport function enable(logLevel = LOG_LEVEL_ALL) {\n\tswitch (logLevel) {\n\tdefault:\n\t\tlogLevel = LOG_LEVEL_ERROR;\n\tcase LOG_LEVEL_ALL:\n\tcase LOG_LEVEL_DEBUG:\n\tcase LOG_LEVEL_LOG:\n\tcase LOG_LEVEL_INFO:\n\tcase LOG_LEVEL_WARN:\n\tcase LOG_LEVEL_ERROR:\n\t\twindow[LOG_STATUS_KEY] = logLevel;\n\t\tbreak;\n\t}\n}\n\nexport function disable() {\n\twindow[LOG_STATUS_KEY] = LOG_LEVEL_ERROR;\n}\n\n/**\n * Simple logging utilty to include context\n * @usage const LOG = createLog('ComponentName');\n *\n * @param name\n * @return {{log, debug, warn, error}}\n */\nexport function createLog(name) {\n\tfunction _log(type, level, args) {\n\t\tif (level < window[LOG_STATUS_KEY]) {\n\t\t\treturn;\n\t\t}\n\t\targs = Array.prototype.splice.call(args, 0);\n\t\targs.unshift(`(${name})`);\n\t\tconsole[type].apply(console, args); //eslint-disable-line no-console\n\t}\n\n\treturn {\n\t\tdebug: function() {\n\t\t\t_log('debug', LOG_LEVEL_DEBUG, arguments);\n\t\t},\n\t\tlog: function() {\n\t\t\t_log('log', LOG_LEVEL_LOG, arguments);\n\t\t},\n\t\tinfo: function() {\n\t\t\t_log('info', LOG_LEVEL_INFO, arguments);\n\t\t},\n\t\twarn: function() {\n\t\t\t_log('warn', LOG_LEVEL_WARN, arguments);\n\t\t},\n\t\terror: function() {\n\t\t\t_log('error', LOG_LEVEL_ERROR, arguments);\n\t\t}\n\t};\n}\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport { VIEW } from './action';\n\ncreateCustomElement('sn-manager-coaching-asmt-card-list', {\n\tproperties: {\n\t\tassessments: { default: [] },\n\t\tassessmentsState: { default: {} },\n\t\ttableName: {\n\t\t\tdefault: 'sn_coaching_assessment'\n\t\t},\n\t\tformView: {\n\t\t\tdefault: 'manager_workspace_side_panel_manual'\n\t\t},\n\t\ttaskId: { default: '' },\n\t\ttaskTable: { default: '' },\n\t\tcurrentUser: { default: null },\n\t\ttrainee: { default: null }\n\t},\n\tinitialState: { currentView: VIEW.list },\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.assessment-list-container{display:flex;flex-direction:column;height:100%;overflow:hidden}.assessment-list-container header{display:flex;align-items:center;justify-content:space-between;margin:1.5rem}.assessment-list-container .cas-card-list{flex:1;overflow-x:hidden;overflow-y:auto;padding:0 1.5rem 1.5rem}.cas-card{margin:0 0 1.5rem}.cas-card:last-child{margin-bottom:0}.cas-card now-card-header{padding-bottom:1rem}.cas-card now-label-value-stacked{padding-bottom:.5rem}.cas-card now-label-value-stacked:last-child{padding-bottom:0}.assessment-create{display:flex;flex-direction:column;height:100%;overflow:hidden;position:relative}.assessment-create .btn-back{margin:.75rem}.assessment-create .content{overflow-x:hidden;overflow-y:auto;height:calc(100% - 7.5rem)}.assessment-create sn-manager-button-footer{--sn-manager-button-footer-padding:.75rem;position:absolute;left:0;bottom:0;width:100%}.assessment-create now-record-form-section-connected{margin:0 1rem 0 .25rem}\", \"\"]);\n\n// exports\n","// eslint-disable-next-line no-unused-vars\nimport { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '../sn-manager-coaching-asmt-card';\nimport { ASSESSMENTS_LABEL } from '../common/constants';\nimport {\n\tASSESSMENTS_LIST_EMPTY_HEADER_MESSAGE,\n\tASSESSMENTS_LIST_EMPTY_BODY_MESSAGE\n} from './constants';\nimport get from 'lodash/get';\nimport { t } from 'sn-translate';\nimport { GFORM_ACTIONS } from '@devsnc/sn-scripting-environment';\nimport { VIEW, GO_TO_CREATE_VIEW, GO_TO_LIST_VIEW } from './action';\nimport isEmpty from 'lodash/isEmpty';\nimport '@servicenow/now-empty-state';\n\nconst view = (state, dispatch) => {\n\tconst {\n\t\tproperties: {\n\t\t\tassessments,\n\t\t\tassessmentsState,\n\t\t\ttaskId,\n\t\t\ttaskTable,\n\t\t\tcurrentUser,\n\t\t\ttrainee\n\t\t}\n\t} = state;\n\n\tconst asmtCards = assessments\n\t\t.filter(\n\t\t\tasmt =>\n\t\t\t\tget(asmt, 'sys_id.value', '') &&\n\t\t\t\t!get(assessmentsState, `${asmt.sys_id.value}.completed`, false)\n\t\t)\n\t\t.map(asmt => (\n\t\t\t<sn-manager-coaching-asmt-card\n\t\t\t\tclassName=\"cas-card\"\n\t\t\t\tassessment={asmt}\n\t\t\t/>\n\t\t));\n\n\tconst footerButtons = [\n\t\t{\n\t\t\tlabel: t('Cancel'),\n\t\t\tvariant: 'secondary',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tname: GO_TO_LIST_VIEW\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: t('Save'),\n\t\t\tvariant: 'primary',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tname: GFORM_ACTIONS.GFORM_SAVE\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\tconst _renderEmpty = () => (\n\t\t<now-empty-state\n\t\t\tclassName=\"cas-card-list\"\n\t\t\ttype=\"empty\"\n\t\t\theaderText={ASSESSMENTS_LIST_EMPTY_HEADER_MESSAGE}\n\t\t\tbodyText={ASSESSMENTS_LIST_EMPTY_BODY_MESSAGE}\n\t\t/>\n\t);\n\tconst renderListView = () => {\n\t\treturn (\n\t\t\t<div className=\"assessment-list-container\">\n\t\t\t\t<header>\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={ASSESSMENTS_LABEL}\n\t\t\t\t\t\tlevel=\"1\"\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t\twont-wrap\n\t\t\t\t\t\thas-no-margin\n\t\t\t\t\t></now-heading>\n\t\t\t\t\t<now-button-iconic\n\t\t\t\t\t\ticon=\"plus-outline\"\n\t\t\t\t\t\ttooltipContent={t('Create New')}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t'aria-label': t('Create a new assessment')\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ton-click={() => dispatch(GO_TO_CREATE_VIEW)}\n\t\t\t\t\t></now-button-iconic>\n\t\t\t\t</header>\n\t\t\t\t{asmtCards.length ? (\n\t\t\t\t\t<div className=\"cas-card-list\">{asmtCards}</div>\n\t\t\t\t) : (\n\t\t\t\t\t_renderEmpty()\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst renderCreateView = () => {\n\t\tconst { tableName, formView } = state.properties;\n\t\tlet intervalId = null;\n\n\t\tconst setMinHeightInCollapsedFormSection = vnode => {\n\t\t\tintervalId = setInterval(() => {\n\t\t\t\tlet childNodes = Array.from(\n\t\t\t\t\tget(vnode, 'elm.shadowRoot.childNodes', [])\n\t\t\t\t).filter(\n\t\t\t\t\tn => n.localName == 'now-record-form-section-column-layout'\n\t\t\t\t);\n\t\t\t\tif (!isEmpty(childNodes)) {\n\t\t\t\t\tlet section = childNodes.pop();\n\t\t\t\t\tsection.style.minHeight = 'fit-content';\n\t\t\t\t\tsection.style.backgroundColor =\n\t\t\t\t\t\t'RGB(var(--now-color--neutral-0, 255,255,255))';\n\t\t\t\t\tclearInterval(intervalId);\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t};\n\n\t\tconst cleanup = () => {\n\t\t\tif (intervalId !== null) {\n\t\t\t\tclearInterval(intervalId);\n\t\t\t}\n\t\t};\n\n\t\tlet query = ``;\n\t\tif (trainee) {\n\t\t\tquery = `table_name=${taskTable}^record=${taskId}^assigned_to=${currentUser}^\n\t\t\tassessment_of=${trainee}`;\n\t\t} else {\n\t\t\tquery = `table_name=${taskTable}^record=${taskId}^assigned_to=${currentUser}`;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"assessment-create\">\n\t\t\t\t<now-button-bare\n\t\t\t\t\tlabel={ASSESSMENTS_LABEL}\n\t\t\t\t\ticonStart=\"chevron-left-fill\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tclassName=\"btn-back\"\n\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t'aria-label': t('Go back to Assessment list')\n\t\t\t\t\t}}\n\t\t\t\t\ton-click={() => dispatch(GO_TO_LIST_VIEW)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\t\tsysId=\"-1\"\n\t\t\t\t\t\ttable={tableName}\n\t\t\t\t\t\tview={formView}\n\t\t\t\t\t\thook-insert={setMinHeightInCollapsedFormSection}\n\t\t\t\t\t\thook-destroy={cleanup}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div slot=\"footer\">\n\t\t\t\t\t\t\t<sn-manager-button-footer\n\t\t\t\t\t\t\t\tbuttons-config={footerButtons}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</now-record-form-section-connected>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tswitch (state.currentView) {\n\tcase VIEW.list:\n\t\treturn renderListView();\n\tcase VIEW.create:\n\t\treturn renderCreateView();\n\tdefault:\n\t\tthrow new Error(`No renderer found for view ${state.currentView}`);\n\t}\n};\n\nexport default view;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\n\ncreateCustomElement('sn-manager-coaching-asmt-card', {\n\tproperties: {\n\t\tassessment: { default: {} }\n\t},\n\tinitialState: {\n\t\t// asmtId: '',\n\t\t// asmtState: ''\n\t},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host(sn-manager-coaching-asmt-card){margin-bottom:1rem;display:block;width:100%;max-width:25rem}now-card-header{margin:.75rem 0}now-label-value-stacked{margin-bottom:.75rem}\", \"\"]);\n\n// exports\n","// eslint-disable-next-line no-unused-vars\nimport { t } from 'sn-translate';\nimport '@servicenow/now-card';\nimport get from 'lodash/get';\nimport { CARD_FIELDS, ASSESSMENT_LABEL } from '../common/constants';\nimport { CAS_CARD_CLICKED } from './action';\n\nconst view = (state, dispatch) => {\n\tconst {\n\t\tproperties: { assessment }\n\t} = state;\n\tconst labelValueItems = CARD_FIELDS.reduce((result, field) => {\n\t\tif (field in assessment && assessment[field].displayValue)\n\t\t\tresult.push({\n\t\t\t\tlabel: assessment[field].label,\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tvalue: assessment[field].displayValue\n\t\t\t\t}\n\t\t\t});\n\t\treturn result;\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<now-card\n\t\t\t\tsize=\"md\"\n\t\t\t\tinteraction=\"click\"\n\t\t\t\ton-click={() =>\n\t\t\t\t\tdispatch(CAS_CARD_CLICKED, {\n\t\t\t\t\t\tassessment\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<now-card-header\n\t\t\t\t\theading={{\n\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\tassessment,\n\t\t\t\t\t\t\t\t'opportunity._reference.opportunity_name.displayValue',\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t) || ASSESSMENT_LABEL,\n\t\t\t\t\t\tsize: 'sm',\n\t\t\t\t\t\tlines: 2\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\ttruncated\n\t\t\t\t\twrapped\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\tdelimiter=\",\"\n\t\t\t\t\titems={labelValueItems}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t/>\n\t\t\t\t<now-card-footer\n\t\t\t\t\tlabel={`${assessment.due_date.label}: ${assessment.due_date.displayValue}`}\n\t\t\t\t/>\n\t\t\t</now-card>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","// import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n// import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\n// import {\n\n// } from './action';\n// import get from 'lodash/get';\n// import { createLog } from '../../utils/logger';\n\n// const LOG = createLog('sn-manager-coaching-assessment');\n\nconst actionHandlers = {};\n\nexport default actionHandlers;\n","import { t } from 'sn-translate';\nexport const ASSESSMENTS_LIST_EMPTY_HEADER_MESSAGE = t(\n\t'No Assessments Available'\n);\nexport const ASSESSMENTS_LIST_EMPTY_BODY_MESSAGE = t(\n\t'There are no assessments for this record. Please click the + icon to create one.'\n);\n","import { VIEW, GO_TO_CREATE_VIEW, GO_TO_LIST_VIEW } from './action';\nimport get from 'lodash/get';\nimport { FORM_RECORD_OPERATION_STATUS } from '../../common/constants';\nimport { RECORD_STATUS_CHANGED } from '@devsnc/sn-scripting-environment';\nimport { REFRESH_ASSESSMENT_LIST } from '../sn-manager-coaching-assessment/action';\n\nconst goToCreateView = ({ updateState }) => {\n\tupdateState({\n\t\tcurrentView: VIEW.create\n\t});\n};\n\nconst goToListView = ({ updateState }) => {\n\tupdateState({\n\t\tcurrentView: VIEW.list\n\t});\n};\n\nconst handleRecordStatusChanged = ({ dispatch, action }) => {\n\tconst status = get(action, 'payload.status');\n\tif (status === FORM_RECORD_OPERATION_STATUS.inserted) {\n\t\tdispatch(REFRESH_ASSESSMENT_LIST, {});\n\t}\n};\n\nconst actionHandlers = {\n\t[GO_TO_CREATE_VIEW]: goToCreateView,\n\t[GO_TO_LIST_VIEW]: goToListView,\n\t[RECORD_STATUS_CHANGED]: handleRecordStatusChanged\n};\n\nexport default actionHandlers;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport { COACHING_ASSESSMENT_TABLE } from '../common/constants';\n\ncreateCustomElement('sn-manager-coaching-asmt-survey', {\n\tproperties: {\n\t\tmetricType: { default: '' },\n\t\ttriggerId: { default: '' },\n\t\ttriggerTable: { default: COACHING_ASSESSMENT_TABLE }\n\t},\n\tinitialState: {},\n\tactionHandlers,\n\trenderer: { type: snabbdom },\n\tview,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host(sn-manager-coaching-asmt-survey){display:flex;flex-direction:column;height:100%}.cas-survey-iframe-container{flex:1 1 auto;height:calc(100% - 50px)}.cas-survey-iframe-container iframe{height:100%;width:100%;display:block}.cas-survey-footer{border-color:RGB(var(--now-color--neutral-3,209,214,214));border-top:1px solid transparent;border-top-color:rgb(var(--now-color--neutral-3,209,214,214));display:flex;overflow-x:auto;padding:.5rem}.cas-survey-footer now-button{flex:0 1 auto;margin-left:.5rem}.cas-survey-footer now-button:first-child{margin-left:auto}\", \"\"]);\n\n// exports\n","// eslint-disable-next-line no-unused-vars\nimport { createRef, Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-button';\nimport get from 'lodash/get';\nimport invoke from 'lodash/invoke';\nimport {\n\tCAS_SURVEY_BTN_CLICKED,\n\tSAVE_LABEL,\n\tSUBMIT_LABEL,\n\tCANCEL_LABEL,\n\tCOACHING_ASSESSMENT_TABLE,\n\tSUBMIT_BTN_ID,\n\tCANCEL_BTN_ID,\n\tSAVE_BTN_ID\n} from '../common/constants';\n\nconst SURVEY_BUTTONS = [\n\t{\n\t\tlabel: SUBMIT_LABEL,\n\t\tvariant: 'primary',\n\t\tid: SUBMIT_BTN_ID,\n\t\tvalidationFunction: 'submitAssessment'\n\t},\n\t{\n\t\tlabel: CANCEL_LABEL,\n\t\tvariant: 'secondary',\n\t\tid: CANCEL_BTN_ID,\n\t\tvalidationFunction: 'cancelAssessment'\n\t},\n\t{\n\t\tlabel: SAVE_LABEL,\n\t\tvariant: 'secondary',\n\t\tid: SAVE_BTN_ID,\n\t\tvalidationFunction: 'saveAssessment'\n\t}\n];\n\nconst view = (state, dispatch) => {\n\tconst {\n\t\tproperties: { metricType, triggerId, triggerTable }\n\t} = state;\n\tconst iframeRef = createRef();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"cas-survey-iframe-container\">\n\t\t\t\t<iframe\n\t\t\t\t\tref={iframeRef}\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\tsrc={`assessment_take2.do?sysparm_assessable_type=${metricType}&sysparm_trigger_id=${triggerId}&sysparm_trigger_table=${triggerTable}&sysparm_hide_header=true&sysparm_button_row_invisible=true`}\n\t\t\t\t\ttitle=\"Provide training feedback\"\n\t\t\t\t\tid=\"survey_iframe\"\n\t\t\t\t\tframe-border=\"0\"\n\t\t\t\t></iframe>\n\t\t\t</div>\n\t\t\t<div className=\"cas-survey-footer\">\n\t\t\t\t{SURVEY_BUTTONS.map(btn =>\n\t\t\t\t\tgetSurveyBtn(\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tiframeRef,\n\t\t\t\t\t\ttriggerId,\n\t\t\t\t\t\tmetricType,\n\t\t\t\t\t\tbtn\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nfunction getSurveyBtn(dispatch, iframeRef, triggerId, metricType, btn) {\n\treturn (\n\t\t<now-button\n\t\t\tlabel={btn.label}\n\t\t\tsize=\"md\"\n\t\t\tvariant={btn.variant}\n\t\t\ton-click={() => {\n\t\t\t\tconst iframeContentWindow = get(\n\t\t\t\t\tiframeRef,\n\t\t\t\t\t'current.contentWindow',\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tiframeContentWindow &&\n\t\t\t\t\tinvoke(iframeContentWindow, btn.validationFunction) &&\n\t\t\t\t\tclickSurveyBtnById(iframeContentWindow, btn.id)\n\t\t\t\t)\n\t\t\t\t\tdispatch(CAS_SURVEY_BTN_CLICKED, {\n\t\t\t\t\t\ttriggerId,\n\t\t\t\t\t\tmetricType,\n\t\t\t\t\t\ttriggerTable: COACHING_ASSESSMENT_TABLE,\n\t\t\t\t\t\tactionId: btn.id\n\t\t\t\t\t});\n\t\t\t}}\n\t\t></now-button>\n\t);\n}\n\nfunction clickSurveyBtnById(contentWindow, btnId) {\n\tif (contentWindow.document.getElementById(btnId)) {\n\t\tcontentWindow.document.getElementById(btnId).click();\n\t\treturn true;\n\t} else if (contentWindow.document.getElementById(btnId + '_sign')) {\n\t\tcontentWindow.document.getElementById(btnId + '_sign').click();\n\t\treturn true;\n\t} else return false;\n}\n\nexport default view;\n","module.exports = __TECTONIC__lodash_4_17_15[\"invoke\"];","// import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\n// import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\n// import {\n\n// } from './action';\n// import get from 'lodash/get';\n// import { createLog } from '../../utils/logger';\n\n// const LOG = createLog('sn-manager-coaching-assessment');\n\nconst actionHandlers = {};\n\nexport default actionHandlers;\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport {\n\tREFRESH_ASSESSMENT_LIST,\n\tCAS_LOAD_ASSESSMENT,\n\tCAS_LOAD_ASSESSMENT_SUCCEEDED\n} from './action';\nimport {\n\tCAS_DETAIL_BACKBTN_CLICKED,\n\tCAS_START_SURVEY,\n\tCAS_DETAIL_ASSESSMENT_COMPLETED\n} from '../sn-manager-coaching-asmt-detail/action';\nimport get from 'lodash/get';\nimport { CAS_CARD_CLICKED } from '../sn-manager-coaching-asmt-card/action';\nimport {\n\tCAS_PAGE_LIMIT,\n\tASSIGNED_TO_ME_QUERY,\n\tASSIGNED_MY_GROUP_QUERY\n} from './constants';\nimport {\n\tCOACHING_ASSESSMENT_TABLE,\n\tCAS_SURVEY_BTN_CLICKED,\n\tSUBMIT_BTN_ID\n} from '../common/constants';\nimport { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n// import { createLog } from '../../utils/logger';\n\n// const LOG = createLog('sn-manager-coaching-assessment');\nconst coachSurveyQuery = `coachSurvey: GlideRecord_Query {\n\tasmt_assessment_instance(queryConditions: \"trigger_id=$$parent.sys_id$$^trigger_table=$$parent.sys_class_name$$^metric_type=$$parent.coach_survey$$\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}){\n\t\t_results {\n\t\t\tsys_id {\n\t\t\t\tvalue\n\t\t\t}\n\t\t\tstate {\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst assessmentQuery = `query($condition: String!, $limit: Int) {\n\tGlideRecord_Query {\n\t\tcoachingAssessment: sn_coaching_assessment(queryConditions: $condition, pagination: {limit: $limit}) {\n\t\t\t_results {\n\t\t\t\tsys_id {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\tstate {\n\t\t\t\t\tlabel\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tnumber {\n\t\t\t\t\tlabel\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tassessment_of {\n\t\t\t\t\tlabel\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tdue_date {\n\t\t\t\t\tlabel\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tsys_created_on {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tcoach_survey {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\topportunity {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t\t_reference {\n\t\t\t\t\t\topportunity_name {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdescription {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassigned_to {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t\t_query{\n\t\t\t\t\t${coachSurveyQuery}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst fetchAssessmentGraphql = createGraphQLEffect(assessmentQuery, {\n\tvariableList: ['condition', 'limit'],\n\tsuccessActionType: CAS_LOAD_ASSESSMENT_SUCCEEDED\n\t// errorActionType\n});\n\nfunction canStartSurvey(assessment) {\n\tif (\n\t\t!get(assessment, 'coach_survey.value', null) ||\n\t\t!get(assessment, 'assigned_to.value', null)\n\t)\n\t\treturn false;\n\n\tconst completedSurvey = get(\n\t\tassessment,\n\t\t'_query.coachSurvey.asmt_assessment_instance._results',\n\t\t[]\n\t).filter(survey => get(survey, 'state.value', '') === 'complete');\n\treturn completedSurvey.length === 0;\n}\n\nfunction initialSurveyDetailViewState(assessments) {\n\tif (assessments.length === 1) {\n\t\tconst showSurvey = canStartSurvey(assessments[0]);\n\t\tconst surveyView = {\n\t\t\tshow: showSurvey,\n\t\t\ttrigger_id: assessments[0].sys_id.value,\n\t\t\ttrigger_table: COACHING_ASSESSMENT_TABLE,\n\t\t\tmetric_type: assessments[0].coach_survey.value\n\t\t};\n\t\tconst detailView = {\n\t\t\tshow: !showSurvey,\n\t\t\tasmtId: assessments[0].sys_id.value,\n\t\t\tassessmentState: assessments[0].state.value,\n\t\t\tclicked: false\n\t\t};\n\t\treturn { surveyView, detailView };\n\t}\n\treturn {};\n}\nfunction initialAssessmentsState(assessments) {\n\tlet assessmentsState = {};\n\tfor (const asmt of assessments) {\n\t\tassessmentsState[asmt.sys_id.value] = {\n\t\t\tsysId: asmt.sys_id.value,\n\t\t\tcanStartSurvey: canStartSurvey(asmt)\n\t\t};\n\t}\n\treturn assessmentsState;\n}\nconst actionHandlers = {\n\t[REFRESH_ASSESSMENT_LIST]: coeffects => {\n\t\tconst {\n\t\t\tdispatch,\n\t\t\tstate: {\n\t\t\t\tproperties: { sysId: currentSysId, table: currentTable }\n\t\t\t},\n\t\t\tupdateState\n\t\t} = coeffects;\n\n\t\t//query for coaching assessments in all states related to current form record, ordered from oldest to newest\n\t\tconst commonQuery = `record=${currentSysId}^table_name=${currentTable}^ORDERBYdue_date^NQparent=${currentSysId}^ORDERBYdue_date`;\n\t\tconst asmtQueryCondition = `${ASSIGNED_TO_ME_QUERY}^${commonQuery}^NQ${ASSIGNED_MY_GROUP_QUERY}^${commonQuery}`;\n\n\t\tupdateState({\n\t\t\tloadingAssessments: true\n\t\t});\n\t\tdispatch(CAS_LOAD_ASSESSMENT, {\n\t\t\tcondition: asmtQueryCondition,\n\t\t\tlimit: CAS_PAGE_LIMIT\n\t\t});\n\t},\n\t[COMPONENT_BOOTSTRAPPED]: ({ dispatch }) => {\n\t\tdispatch(REFRESH_ASSESSMENT_LIST);\n\t},\n\t[CAS_LOAD_ASSESSMENT]: fetchAssessmentGraphql,\n\t[CAS_LOAD_ASSESSMENT_SUCCEEDED]: coeffects => {\n\t\tconst assessments = get(\n\t\t\tcoeffects,\n\t\t\t'action.payload.data.GlideRecord_Query.coachingAssessment._results',\n\t\t\t[]\n\t\t);\n\t\tconst { updateState } = coeffects;\n\n\t\tupdateState({\n\t\t\tassessments,\n\t\t\tassessmentsState: initialAssessmentsState(assessments),\n\t\t\tloadingAssessments: false,\n\t\t\t...initialSurveyDetailViewState(assessments)\n\t\t});\n\t},\n\t[CAS_CARD_CLICKED]: ({\n\t\taction: {\n\t\t\tpayload: { assessment }\n\t\t},\n\t\tupdateState,\n\t\tstate\n\t}) => {\n\t\tif (!assessment) return;\n\n\t\tif (\n\t\t\tget(\n\t\t\t\tstate,\n\t\t\t\t`assessmentsState.${assessment.sys_id.value}.canStartSurvey`,\n\t\t\t\tfalse\n\t\t\t)\n\t\t)\n\t\t\tupdateState({\n\t\t\t\tsurveyView: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\ttrigger_id: assessment.sys_id.value,\n\t\t\t\t\ttrigger_table: COACHING_ASSESSMENT_TABLE,\n\t\t\t\t\tmetric_type: assessment.coach_survey.value\n\t\t\t\t},\n\t\t\t\tdetailView: {\n\t\t\t\t\t...state.detailView\n\t\t\t\t}\n\t\t\t});\n\t\telse\n\t\t\tupdateState({\n\t\t\t\tdetailView: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tasmtId: assessment.sys_id.value,\n\t\t\t\t\tassessmentState: assessment.state.value,\n\t\t\t\t\tclicked: true\n\t\t\t\t}\n\t\t\t});\n\t},\n\t[CAS_DETAIL_BACKBTN_CLICKED]: ({ updateState, state }) => {\n\t\tupdateState({\n\t\t\tdetailView: {\n\t\t\t\t...state.detailView,\n\t\t\t\tshow: false,\n\t\t\t\tclicked: false\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_SURVEY_BTN_CLICKED]: ({ updateState, state, action: { payload } }) => {\n\t\tupdateState({\n\t\t\t...(payload.actionId === SUBMIT_BTN_ID && {\n\t\t\t\tassessmentsState: {\n\t\t\t\t\t...state.assessmentsState,\n\t\t\t\t\t[payload.triggerId]: {\n\t\t\t\t\t\t...state.assessmentsState[payload.triggerId],\n\t\t\t\t\t\tcanStartSurvey: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdetailView: {\n\t\t\t\t...state.detailView,\n\t\t\t\tshow: true,\n\t\t\t\tasmtId: payload.triggerId\n\t\t\t},\n\t\t\tsurveyView: {\n\t\t\t\t...state.surveyView,\n\t\t\t\tshow: false\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_START_SURVEY]: ({ updateState, state }) => {\n\t\tupdateState({\n\t\t\tsurveyView: {\n\t\t\t\t...state.surveyView,\n\t\t\t\tshow: true\n\t\t\t},\n\t\t\tdetailView: {\n\t\t\t\t...state.detailView,\n\t\t\t\tshow: false\n\t\t\t}\n\t\t});\n\t},\n\t[CAS_DETAIL_ASSESSMENT_COMPLETED]: ({ updateState, action }) => {\n\t\tupdateState({\n\t\t\tpath: `assessmentsState.${action.payload}.completed`,\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t}\n};\n\nexport default actionHandlers;\n","export const CAS_PAGE_LIMIT = 10;\nexport const ASSIGNED_TO_ME_QUERY = `assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe`;\nexport const ASSIGNED_MY_GROUP_QUERY = `assignment_groupDYNAMICd6435e965f510100a9ad2572f2b47744`;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nconst view = (state, dispatch) => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Records go here</h2>\n\t\t</div>\n\t);\n};\n\nexport default createCustomElement('sn-manager-records', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t}\n});\n","import './manager-user-overview';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport properties from './properties';\nimport actionHandlers from './actionHandlers';\n\ncreateCustomElement('sn-manager-user-overview', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tcapacityOverride: {\n\t\t\tdefault: {\n\t\t\t\tisDone: false,\n\t\t\t\tmessage: '',\n\t\t\t\tisError: false\n\t\t\t}\n\t\t}\n\t},\n\tactionHandlers,\n\tproperties,\n\tstyles\n});\n","import '../sn-manager-user-details';\nimport '../sn-manager-user-profile-card-container';\nimport '../sn-manager-user-skills-panel';\nimport '../../common/sn-manager-embedded-list';\nimport '../../common/dataproviders/sn-manager-user-groups';\nimport get from 'lodash/get';\nimport '../../channels/sn-manager-user-channels-container';\nimport '../../channels/sn-manager-user-current-work-container';\nimport '../../channels/sn-manager-agent-presence-history-container';\nimport { RENDER_PRESENCE_HISTORY_COMPONENT } from './constants';\nimport { CRITICAL, INFO, DISMISS } from './constants';\n\n/**\n * Render the sn-manager-embedded-list giving a list configuration Obj\n * @param {*} param0 {table, query, header, vuew}\n * @param {*} sysId sys_id of user to be replaced in query placeholder string on the list config.\n */\nconst __renderSubList = ({ table, query, header, view, type }, sysId) => {\n\tif (type === RENDER_PRESENCE_HISTORY_COMPONENT)\n\t\treturn <sn-manager-agent-presence-history-container agentId={sysId} />;\n\tlet fixedQuery = query.replace('{{sysId}}', sysId);\n\treturn (\n\t\t<sn-manager-embedded-list\n\t\t\ttable={table}\n\t\t\tquery={fixedQuery}\n\t\t\theader={header}\n\t\t\tview={view}\n\t\t/>\n\t);\n};\n\n/**\n * @param {*} lists Array of list configurations to render\n * @param {*} sysId\n */\nconst __renderEmbeddedLists = (lists, sysId) => {\n\treturn (\n\t\t<div className=\"profile-lists-container\">\n\t\t\t{lists.map(list => __renderSubList(list, sysId))}\n\t\t</div>\n\t);\n};\n\nconst view = state => {\n\tconst sysId = get(state, 'properties.sysId', '');\n\tconst currentUser = get(state, 'properties.currentUser', {});\n\tlet sublists = get(state, 'properties.sublists', []);\n\tconst view = get(state, 'properties.view', '');\n\tconst agentDetails = get(state, 'properties.agentDetails', {});\n\tconst capacityOverride = get(state, 'capacityOverride');\n\tconst {\n\t\tname,\n\t\tavatar,\n\t\tisAgentAssociatedWithAwa,\n\t\thasPermission\n\t} = agentDetails;\n\n\tif (\n\t\tisAgentAssociatedWithAwa &&\n\t\thasPermission &&\n\t\tsublists.length > 0 &&\n\t\tsublists[0].type != RENDER_PRESENCE_HISTORY_COMPONENT\n\t)\n\t\tsublists.unshift({ type: RENDER_PRESENCE_HISTORY_COMPONENT });\n\n\tlet options = {\n\t\tuser: sysId,\n\t\tforManagedGroups: true\n\t};\n\treturn (\n\t\t<div className=\"overview-main-container\">\n\t\t\t<section className=\"profile-stats\">\n\t\t\t\t<sn-manager-user-groups options={options} />\n\t\t\t\t{capacityOverride.isDone\n\t\t\t\t\t? _renderCapacityOverrideMessage(capacityOverride)\n\t\t\t\t\t: null}\n\t\t\t\t{isAgentAssociatedWithAwa ? (\n\t\t\t\t\t<sn-manager-user-current-work-container sysId={sysId} />\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"profile-stats-separator\">\n\t\t\t\t\t<sn-manager-user-profile-card-container\n\t\t\t\t\t\tsysId={sysId}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tview={view}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<aside\n\t\t\t\t\tclassName=\"profile-stats-details flexed-container-rows\"\n\t\t\t\t\taria-label=\"agent-data\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flexed\">\n\t\t\t\t\t\t{isAgentAssociatedWithAwa ? (\n\t\t\t\t\t\t\t<sn-manager-user-channels-container\n\t\t\t\t\t\t\t\tagentId={sysId}\n\t\t\t\t\t\t\t\tagentName={name}\n\t\t\t\t\t\t\t\tavatar={avatar}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<sn-manager-user-skills-panel\n\t\t\t\t\t\t\tsysId={sysId}\n\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flexed-custom\">\n\t\t\t\t\t\t{__renderEmbeddedLists(sublists, sysId)}\n\t\t\t\t\t</div>\n\t\t\t\t</aside>\n\t\t\t</section>\n\t\t</div>\n\t);\n};\n\n/**\n * Render the agents capacity override message\n * @param capacityOverride obj\n */\nconst _renderCapacityOverrideMessage = capacityOverride => {\n\tconst message = get(capacityOverride, 'message', '');\n\tconst isError = get(capacityOverride, 'isError', false);\n\tconst status = isError ? CRITICAL : INFO;\n\treturn (\n\t\t<now-alert\n\t\t\tcontent={message}\n\t\t\taction={{ type: DISMISS }}\n\t\t\tstatus={status}\n\t\t\thook-insert={node =>\n\t\t\t\tnode.elm.scrollIntoView({ behavior: 'smooth' })\n\t\t\t}\n\t\t\thook-update={node =>\n\t\t\t\tnode.elm.scrollIntoView({ behavior: 'smooth' })\n\t\t\t}\n\t\t/>\n\t);\n};\nexport default view;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandler';\n\ncreateCustomElement('sn-manager-user-details', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tshowAllTeammates: false,\n\t\tuser: {}\n\t},\n\tproperties: {\n\t\tsysId: {},\n\t\tteammatesLimit: { default: 3 }\n\t},\n\tactionHandlers,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.user-details-section{width:100%;padding:1.5rem;min-height:100%}.user-details-section,.user-details-section .agent-avatar-container{display:flex;flex-direction:column}.user-details-section .agent-avatar-container now-avatar{margin:0 auto 1.5rem}.user-details-section .agent-avatar-container now-heading{margin:0 auto}.user-details-section .agent-avatar-container now-heading:first-of-type,.user-details-section .detail-block{margin-bottom:1rem}.user-details-section .detail-block .user-detail-label{color:RGB(var(--now-color--neutral-9,99,114,116));line-height:1.33333;font-size:.75rem}.user-details-section .detail-block .phone-entry:not(:last-child){margin-bottom:.75rem}.user-details-section .manager now-avatar,.user-details-section .team now-avatar{vertical-align:top;display:inline-block}.user-details-section .manager .team-member-entry,.user-details-section .team .team-member-entry{margin:.25rem 0 1rem;cursor:pointer}.user-details-section .manager .team-member-entry .team-values,.user-details-section .team .team-member-entry .team-values{vertical-align:middle;display:inline-block;width:calc(100% - 42px)}.user-details-section .manager .team-member-entry .team-contact-name,.user-details-section .team .team-member-entry .team-contact-name{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;font-size:1rem;margin-left:.5rem;font-weight:500;width:100%}.user-details-section .manager .team-member-entry .team-contact-title,.user-details-section .team .team-member-entry .team-contact-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;font-size:.75rem;margin-left:.5rem;font-weight:300;width:100%}.user-details-section .manager .expand-link,.user-details-section .team .expand-link{cursor:pointer;color:RGB(var(--now-color--secondary-1,1,119,142))}\", \"\"]);\n\n// exports\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom'; // eslint-disable-line\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-avatar';\nimport '@servicenow/now-button';\nimport { t } from 'sn-translate';\nimport get from 'lodash/get';\nimport orderBy from 'lodash/orderBy';\nimport filter from 'lodash/filter';\nimport flow from 'lodash/flow';\nimport map from 'lodash/map';\nimport partialRight from 'lodash/partialRight';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n\tDETAIL_SECTION_TYPE,\n\tEMPTY,\n\tgetValue,\n\tITEM_SELECTED\n} from './userDetailUtils';\nimport {\n\tACTIONS,\n\tSHOW_ALL_TEAMMATES_LINK_TEXT,\n\tSHOW_LESS_TEAMMATES_LINK_TEXT\n} from './constants';\n\nconst _renderUserEntry = (dispatch, item) => {\n\tlet avatarPayload = {\n\t\tuserName: item.name.displayValue,\n\t\tsize: 'md',\n\t\tariaHidden: true\n\t};\n\n\tif (!isEmpty(item.avatar.displayValue))\n\t\tavatarPayload.imageSrc = `/${item.avatar.displayValue}`;\n\tconst element = (\n\t\t<div\n\t\t\tclassName=\"team-member-entry\"\n\t\t\ttabindex=\"0\"\n\t\t\trole=\"member\"\n\t\t\taria-label={`${item.name.displayValue} - ${item.title.displayValue}`}\n\t\t\ton-click={() =>\n\t\t\t\tdispatch(ITEM_SELECTED, {\n\t\t\t\t\ttable: 'sys_user',\n\t\t\t\t\tsys_id: item.sys_id.value,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tadditionalIdentifier: 'member-overview'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t>\n\t\t\t<now-avatar {...avatarPayload}></now-avatar>\n\t\t\t<div className=\"team-values\">\n\t\t\t\t<span className=\"team-contact-name\">\n\t\t\t\t\t{item.name.displayValue}\n\t\t\t\t</span>\n\t\t\t\t{item.title && (\n\t\t\t\t\t<span className=\"team-contact-title\">\n\t\t\t\t\t\t{item.title.displayValue}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n\treturn element;\n};\n\nconst _renderTeam = (teammates, dispatch, showAllTeammates, teammatesLimit) => {\n\tif (!teammates) return [];\n\n\tif (!showAllTeammates && teammatesLimit) {\n\t\tteammates = teammates.slice(0, teammatesLimit);\n\t}\n\treturn teammates.map(item => {\n\t\tlet userObj = get(item, 'user._reference');\n\t\treturn _renderUserEntry(dispatch, userObj);\n\t});\n};\n\nconst _renderManager = (dispatch, item) => {\n\tconst userObject = get(item, '_reference', {});\n\n\tif (Object.keys(userObject).length == 0) return <div />;\n\treturn [\n\t\t<span className=\"user-detail-label\">{t('Manager')}</span>,\n\t\t_renderUserEntry(dispatch, userObject)\n\t];\n};\n\nconst _reducePhoneEntries = (dispatch, item) => {\n\tlet value = `${item.value} (${item.label})`;\n\tlet label = '';\n\treturn (\n\t\t<div className=\"phone-entry\">\n\t\t\t<now-label-value-stacked\n\t\t\t\titems={[{ label, value }]}\n\t\t\t\ttruncated\n\t\t\t\twrapped\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst _reduceGroups = item => {\n\tconst commonLinkProps = {\n\t\thref: 'javascript:void(0)',\n\t\ttype: 'text-link',\n\t\tkeyTable: 'sys_user_group',\n\t\tunderlined: true\n\t};\n\tif (item.type == 'text') {\n\t\tlet value = { value: item.displayValue, type: 'string' };\n\t\tif (!isEmpty(item.value)) {\n\t\t\tvalue = {\n\t\t\t\t...commonLinkProps,\n\t\t\t\tlabel: item.displayValue,\n\t\t\t\tkeyId: item.value\n\t\t\t};\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"detail-block details\">\n\t\t\t\t<div>\n\t\t\t\t\t<now-label-value-stacked\n\t\t\t\t\t\ttruncated\n\t\t\t\t\t\twrapped\n\t\t\t\t\t\titems={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: item.labelToShow,\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (item.type == 'list') {\n\t\tlet items = item.map((entry, idx) => {\n\t\t\tentry.label = idx === 0 ? t('Other assignment groups') : '';\n\t\t\tentry.value = {\n\t\t\t\t...commonLinkProps,\n\t\t\t\tlabel: entry.group.displayValue,\n\t\t\t\tkeyId: entry.group.value\n\t\t\t};\n\t\t\treturn entry;\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"detail-block details\">\n\t\t\t\t<div>\n\t\t\t\t\t<now-label-value-stacked items={items} truncated wrapped />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nconst _reduceDetailEntries = userDetail => {\n\tconst label = get(userDetail, 'labelToShow', '');\n\tconst value = get(userDetail, 'displayValue', '');\n\n\treturn { label, value: { type: 'string', value: value } };\n};\n\nconst _reduceToItems = (userDetail, userSysId, userName, reducer) => {\n\tconst detailDisplayValue = getValue(userDetail['displayValue']);\n\tconst detailValue = getValue(userDetail['value']);\n\tconst allowEmpty = getValue(userDetail['emptyValue']);\n\n\tif (userDetail.type == 'list') {\n\t\treturn reducer(userDetail);\n\t} else if (\n\t\t!isEmpty(allowEmpty) &&\n\t\tallowEmpty != EMPTY &&\n\t\t(detailValue === EMPTY && detailDisplayValue === EMPTY)\n\t) {\n\t\tuserDetail['displayValue'] = allowEmpty;\n\t} else if (detailValue === EMPTY && detailDisplayValue === EMPTY) {\n\t\treturn null;\n\t}\n\n\tconst layoutLabel = get(userDetail, 'layoutLabel', '');\n\tconst label = get(userDetail, 'label', '');\n\n\tuserDetail['labelToShow'] = layoutLabel === '' ? label : layoutLabel;\n\tuserDetail['name'] = userName;\n\n\treturn reducer(userDetail, userSysId);\n};\n\nconst _getSectionItems = (userDetails, section, sys_Id, reducer) => {\n\tlet userName = getValue(userDetails['name']);\n\tconst dataFlow = flow([\n\t\tpartialRight(filter, x => x.section === section),\n\t\tpartialRight(orderBy, x => x.order),\n\t\tpartialRight(map, detail =>\n\t\t\t_reduceToItems(detail, sys_Id, userName, reducer)\n\t\t),\n\t\tpartialRight(filter, element => element !== null)\n\t]);\n\treturn dataFlow(userDetails);\n};\n\nconst view = (state, { dispatch }) => {\n\tlet userDetails = get(state, 'user', []);\n\tconst sysId = get(state, 'properties.sysId', '');\n\tconst userName = get(state, 'user.name.displayValue', '');\n\tconst title = get(state, 'user.title.displayValue', '');\n\tconst avatar = get(state, 'user.avatar.displayValue', '');\n\tconst teammatesLimit = get(state, 'properties.teammatesLimit', 3);\n\tconst showAllTeammates = get(state, 'showAllTeammates', false);\n\tlet teammates = get(userDetails, 'teammates', []);\n\tlet otherGroups = _getSectionItems(\n\t\tuserDetails,\n\t\tDETAIL_SECTION_TYPE.GROUPS,\n\t\tsysId,\n\t\t_reduceGroups\n\t);\n\t// let primaryAssignmentGroup = get(userDetails, 'primary_group.value');\n\tlet phoneEntries =\n\t\t_getSectionItems(userDetails, DETAIL_SECTION_TYPE.PHONE, sysId, item =>\n\t\t\t_reducePhoneEntries(dispatch, item)\n\t\t) || [];\n\tlet detailEntries = _getSectionItems(\n\t\tuserDetails,\n\t\tDETAIL_SECTION_TYPE.DETAILS,\n\t\tsysId,\n\t\t_reduceDetailEntries\n\t);\n\tlet locationSection = _getSectionItems(\n\t\tuserDetails,\n\t\tDETAIL_SECTION_TYPE.LOCATION,\n\t\tsysId,\n\t\t_reduceDetailEntries\n\t);\n\treturn (\n\t\t<div className=\"user-details-section\">\n\t\t\t{!isEmpty(userName) ? (\n\t\t\t\t<div className=\"agent-avatar-container\">\n\t\t\t\t\t<now-avatar\n\t\t\t\t\t\tuserName={userName}\n\t\t\t\t\t\timageSrc={avatar}\n\t\t\t\t\t\tsize=\"xl\"\n\t\t\t\t\t\tariaHidden=\"true\"\n\t\t\t\t\t\tshowPresencePattern={false}\n\t\t\t\t\t></now-avatar>\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={userName}\n\t\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\t\thasNoMargin={true}\n\t\t\t\t\t></now-heading>\n\t\t\t\t\t{!isEmpty(title) ? (\n\t\t\t\t\t\t<now-heading\n\t\t\t\t\t\t\tlabel={title}\n\t\t\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t\t\t></now-heading>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{!isEmpty(detailEntries) ? (\n\t\t\t\t<div className=\"detail-block details\">\n\t\t\t\t\t<now-label-value-stacked\n\t\t\t\t\t\titems={detailEntries}\n\t\t\t\t\t\ttruncated\n\t\t\t\t\t\twrapped\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{!isEmpty(otherGroups) ? <Fragment>{otherGroups}</Fragment> : null}\n\t\t\t{!isEmpty(locationSection) ? (\n\t\t\t\t<div className=\"detail-block details\">\n\t\t\t\t\t<now-label-value-stacked\n\t\t\t\t\t\titems={locationSection}\n\t\t\t\t\t\ttruncated\n\t\t\t\t\t\twrapped\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{!isEmpty(phoneEntries) ? (\n\t\t\t\t<div className=\"detail-block details\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"user-detail-label\">{t('Phone')}</span>\n\t\t\t\t\t\t{phoneEntries}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<div className=\"detail-block manager\">\n\t\t\t\t{_getSectionItems(\n\t\t\t\t\tuserDetails,\n\t\t\t\t\tDETAIL_SECTION_TYPE.MANAGER,\n\t\t\t\t\tsysId,\n\t\t\t\t\titem => _renderManager(dispatch, item)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{!isEmpty(teammates) ? (\n\t\t\t\t<div className=\"detail-block team\">\n\t\t\t\t\t<span className=\"user-detail-label\">{t('Teammates')}</span>\n\t\t\t\t\t{_renderTeam(\n\t\t\t\t\t\tteammates,\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tshowAllTeammates,\n\t\t\t\t\t\tteammatesLimit\n\t\t\t\t\t)}\n\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tshowAllTeammates\n\t\t\t\t\t\t\t\t? SHOW_LESS_TEAMMATES_LINK_TEXT\n\t\t\t\t\t\t\t\t: SHOW_ALL_TEAMMATES_LINK_TEXT\n\t\t\t\t\t\t}\n\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\tdispatch(ACTIONS.EXPAND_TEAMMATES_LIST);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","module.exports = __TECTONIC__lodash_4_17_15[\"orderBy\"];","module.exports = __TECTONIC__lodash_4_17_15[\"filter\"];","module.exports = __TECTONIC__lodash_4_17_15[\"flow\"];","module.exports = __TECTONIC__lodash_4_17_15[\"partialRight\"];","import { actionTypes } from '@servicenow/ui-core';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { ACTIONS } from './constants';\nimport {\n\tbootstrapDetailsData,\n\tnavigateToRelatedGroup,\n\tfetchUserDetailsEffect,\n\tprocessUserDetailsPayload,\n\ttoggleTeammatesList\n} from './effects';\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrapDetailsData,\n\t[ACTIONS.STACKED_VALUE_LINK_CLICKED]: navigateToRelatedGroup,\n\t[ACTIONS.EXPAND_TEAMMATES_LIST]: toggleTeammatesList,\n\t[ACTIONS.USER_DETAILS_REQUESTED]: fetchUserDetailsEffect,\n\t[ACTIONS.USER_DETAILS_REQUEST_SUCCEEDED]: processUserDetailsPayload,\n\t[ACTIONS.USER_DETAILS_REQUEST_FAILED]: logErrorEffect\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { PROFILE_USER_DETAIL_FIELDS, ACTIONS } from './constants';\nimport { glideRecordQuery as query } from './userQuery';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport reduce from 'lodash/reduce';\nimport omit from 'lodash/omit';\nimport {\n\tformatColumns,\n\tEMPTY,\n\tgetValue,\n\tDETAILS_METADATA\n} from './userDetailUtils';\nimport { ITEM_SELECTED } from '../../common/constants';\n\n/* Simplify graphql result payload into a single array\n * @param {string} columns - Comma separated column names\n * @returns {string} - graphql formated string of columns\n */\n\nconst readNestedQueryResults = queryResults => {\n\tconst reduceToMetadataObjects = (accumulator, value, key) => {\n\t\tif (value && value.aggregates) {\n\t\t\taccumulator[key] = { ...value.aggregates[0] };\n\t\t\treturn accumulator;\n\t\t}\n\n\t\tif (!value) return accumulator;\n\n\t\t// Used for aggregator queries\n\t\tif (value.items) {\n\t\t\tconst reduceToFieldHighlightObject = item => {\n\t\t\t\tconst field = getValue(item.field);\n\t\t\t\tif (field === EMPTY) return;\n\t\t\t\taccumulator[field] = { ...item };\n\t\t\t};\n\t\t\tvalue.items.forEach(reduceToFieldHighlightObject);\n\t\t}\n\n\t\t// Used to retrieve all members of the team\n\t\tif (key === 'teammates') {\n\t\t\taccumulator[key] = get(value, 'sys_user_grmember._results');\n\t\t}\n\n\t\tif (key === 'other_groups') {\n\t\t\taccumulator[key] = get(value, 'sys_user_grmember._results');\n\t\t}\n\n\t\t// Used to retrieve all members of the team\n\t\tif (key === 'manager_primary_group') {\n\t\t\taccumulator[key] = {}; // get(value, 'sys_user._results[0]');\n\t\t\taccumulator[key]._reference = get(value, 'sys_user._results[0]');\n\t\t\taccumulator[key].value = get(\n\t\t\t\tvalue,\n\t\t\t\t'sys_user._results[0].sys_id.value'\n\t\t\t);\n\t\t\taccumulator[key].displayValue = get(\n\t\t\t\tvalue,\n\t\t\t\t'sys_user._results[0].name.displayValue'\n\t\t\t);\n\t\t}\n\n\t\treturn accumulator;\n\t};\n\n\treturn reduce(queryResults, reduceToMetadataObjects, {});\n};\n\n/**\n * Maps de GraphQL result into a more usable metadata for the sn-user-details component\n * @param {*} action\n */\nexport const getUserDetails = action => {\n\tconst error = get(action, 'payload.errors', []);\n\tconst results = get(\n\t\taction,\n\t\t`payload.data.GlideRecord_Query.${action.meta.options.templateVars.table}._results[0]`,\n\t\t[]\n\t);\n\tif (error && error.length > 0) {\n\t\tconsole.log('Error while loading data', error); // eslint-disable-line no-console\n\t}\n\n\tif (results.length <= 0) return [];\n\n\tconst nestedQueryResults = readNestedQueryResults(results['_query']);\n\tconst merged = merge(\n\t\tomit(results, '_query'),\n\t\tnestedQueryResults,\n\t\tDETAILS_METADATA\n\t);\n\treturn merged;\n};\n\n/**\n * If any of the elements on the Details component is clicked and it's\n * type is 'link-text' we proceed to nav into that record on WS\n */\nexport const navigateToRelatedGroup = ({ action, dispatch }) => {\n\tlet sys_id = get(action, 'payload.item.keyId');\n\tlet table = get(action, 'payload.item.keyTable');\n\n\tif (!isEmpty(sys_id) && !isEmpty(table)) {\n\t\tdispatch(ITEM_SELECTED, {\n\t\t\trender_type: 'record',\n\t\t\ttable,\n\t\t\tsys_id\n\t\t});\n\t}\n};\n\n/**\n * Graphql effect used to retrieve the current agent's data\n */\nexport const fetchUserDetailsEffect = createGraphQLEffect(query, {\n\ttemplateVarList: ['table', 'fields'],\n\tvariableList: ['conditions', 'table', 'columns'],\n\tsuccessActionType: ACTIONS.USER_DETAILS_REQUEST_SUCCEEDED,\n\terrorActionType: ACTIONS.USER_DETAILS_REQUEST_FAILED\n});\n\n/**\n * Triggered when component is initially bootstrapped used\n * to dispatch the action that will retrieve the data from\n * the current sys_user record\n */\nexport const bootstrapDetailsData = ({ properties, dispatch }) => {\n\tdispatch(ACTIONS.USER_DETAILS_REQUESTED, {\n\t\ttable: 'sys_user',\n\t\tconditions: `sys_id=${properties.sysId}`,\n\t\tfields: formatColumns(PROFILE_USER_DETAIL_FIELDS),\n\t\tcolumns: PROFILE_USER_DETAIL_FIELDS.join(',')\n\t});\n};\n\n/**\n * Action handler used to process the graphql result payload int\n * an object that can be set as property\n */\nexport const processUserDetailsPayload = ({ action, updateState }) => {\n\tupdateState({ user: getUserDetails(action) });\n};\n\n/**\n * Action handler used to process the graphql result payload int\n * an object that can be set as property\n */\nexport const toggleTeammatesList = ({ state, updateState }) => {\n\tupdateState({ showAllTeammates: !get(state, 'showAllTeammates', true) });\n};\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\n/* Format the GraphQL that returns all the information required for the User Profile (Form) > Overview section\n * @param {string} table - Name of the table\n * @param {string} fields - Name of the columns\n * @param {string} conditions - Encoded query\n * @TODO: Figure out the way to also retrieve some of the stats needed for other subcomponents:\n * - PTO\n * - SKILLS\n * - ASSIGNED TRAINING\n * - CSAT DATA\n * - ETC.\n */\n\nexport const glideRecordQuery = `\n\tquery($conditions: String, $pagination: Glide_PaginationInputType) {\n\t\tGlideRecord_Query {\n\t\t\t{{table}}(queryConditions: $conditions, pagination: $pagination) {\n\t\t\t\t_results {\n                    {{fields}}\n                    manager {\n                        _reference {\n                            sys_id {\n                                value\n                            }\n                            name {\n                                displayValue\n                            }\n                            avatar {\n                                displayValue\n                            }\n                            title {\n                              displayValue\n                            }\n                        }\n                    }\n                    _query {\n                        manager_primary_group: GlideRecord_Query {\n                          sys_user(queryConditions: \"sys_id=$$parent.primary_group.manager$$\") {\n                            _results {\n                                name {\n                                    displayValue\n                                }\n                                avatar {\n                                    displayValue\n                                }\n                                title {\n                                  displayValue\n                                }\n                                sys_id {\n                                  value\n                                }\n                                value\n                            }\n                          }\n                        }\n\n                        teammates: GlideRecord_Query {\n                          sys_user_grmember (queryConditions: \"group=$$parent.primary_group$$^user!=$$parent.sys_id$$\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n                            _rowCount\n                            _results {\n                              user {\n                                _reference {\n                                  avatar {\n                                    displayValue\n                                  }\n                                  title {\n                                    displayValue\n                                  }\n                                  name {\n                                    displayValue\n                                  }\n                                  sys_id {\n                                    value\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n\n                        other_groups: GlideRecord_Query {\n                          sys_user_grmember(queryConditions: \"user=$$parent.sys_id$$^group!=$$parent.primary_group$$\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n                            _results {\n                              group {\n                                value\n                                displayValue\n                              }\n                            }\n                          }\n                        }\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n`;\n/**\n * GraphQL query string to fetch the fields required by the sysapproval_approver\n * Ribbon component, we need to figure out a way to make this template more generic so it can be\n * used for any type of approval records.\n */\nexport const skillRecomendationQuery = `\nquery($condition: String!) {\n    GlideRecord_Query {\n      sysapproval_approver (queryConditions: $condition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n        _results {\n          sysapproval {\n            _reference {\n              sys_id {\n                value\n              }\n              state {\n                value\n                displayValue\n              }\n\n              sys_class_name {\n                value\n                displayValue\n              }\n            }\n\n          }\n\n          _query  {\n            {{table}}: GlideRecord_Query {\n              {{table}} (queryConditions: \"sys_id=$$parent.sysapproval$$\") {\n                _results {\n                  {{fields}}\n                }\n              }\n            }\n\n            {{tableChangeRequest}}: GlideRecord_Query {\n              {{tableChangeRequest}} (queryConditions: \"sys_id=$$parent.sysapproval$$\") {\n                _results {\n                  {{fieldsChangeRequest}}\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const userDetailsQuery = `\n\tquery($conditions: String, $pagination: Glide_PaginationInputType) {\n\t\tGlideRecord_Query {\n\t\t\t{{table}}(queryConditions: $conditions, pagination: $pagination) {\n\t\t\t\t_results {\n\t\t\t\t\t{{fields}}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n`;\n","module.exports = __TECTONIC__lodash_4_17_15[\"omit\"];","import './manager-user-profile-card-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport { t } from 'sn-translate';\nimport { getUserDateFormat } from '../../common/selectors';\nimport { createDateChangeBehavior } from '../../common/behaviors/dateChangeBehavior';\nimport { API_DATE_FORMAT } from '../../common/constants';\n\ncreateCustomElement('sn-manager-user-profile-card-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tbehaviors: [\n\t\tcreateDateChangeBehavior({\n\t\t\tdateFormat: {\n\t\t\t\tinternal: API_DATE_FORMAT,\n\t\t\t\texternal: getUserDateFormat()\n\t\t\t}\n\t\t})\n\t],\n\tproperties: {\n\t\tsysId: {},\n\t\tcurrentUser: {},\n\t\theader: { default: t('KPIs') },\n\t\tview: {}\n\t},\n\tinitialState: {\n\t\tloading: true,\n\t\tgroups: []\n\t},\n\tactionHandlers,\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.stats-card-container{background:RGB(var(--now-color--neutral-1,246,247,247));margin:1.5rem;height:18.4375rem}.stats-card-container now-heading{float:left;margin:1rem}.stats-card-container .cards-container-controls{margin:1rem;display:inline-flex;flex-direction:row;align-items:flex-end;float:right}.stats-card-container .cards-container-controls .dropdown-container{margin:0 1.5rem;display:flex;flex-direction:column}.stats-card-container .cards-container-controls .dropdown-container .dropdown-label{font-size:.75rem;color:RGB(var(--now-color--neutral-9,99,114,116));padding:0 0 .125rem}.stats-card-container .cards-container-controls .dropdown-container now-dropdown{margin:0;border-bottom:1px solid rgb(var(--now-color--neutral-5,172,180,181))}.stats-card-container .cards-container-controls .dropdown-container .divider-dropdown{border-top:1px solid rgb(var(--now-color--neutral-5,172,180,181));width:100%;margin:0;height:1px}.stats-card-container .cards-container-controls now-date-range-picker{display:inline-block}.stats-card-container .flexed-row-cards{flex-grow:1;display:flex;flex-direction:row;margin:1.5rem 0;padding-bottom:1rem;width:100%}.stats-card-container .flexed-row-cards.card-size-1 now-card,.stats-card-container .flexed-row-cards.card-size-2 now-card{width:50%}.stats-card-container .flexed-row-cards.card-size-3 now-card{width:33%}.stats-card-container .flexed-row-cards.card-size-4 now-card{width:25%}.stats-card-container .flexed-row-cards.card-size-5 now-card{width:20%}.stats-card-container .flexed-row-cards now-card{width:calc(100% - 2rem);background:RGB(var(--now-color--neutral-0,255,255,255));margin:0 .375rem;height:100%}.stats-card-container .flexed-row-cards now-card:first-child{margin-left:1rem}.stats-card-container .flexed-row-cards now-card:last-child{margin-right:1rem}.stats-card-container .flexed-row-cards now-card-header{padding-bottom:.5rem;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214));height:1.5rem}.stats-card-container .flexed-row-cards .card-stats{margin-top:1rem;height:7.375rem;display:flex;flex-direction:column;justify-content:space-between}.stats-card-container .flexed-row-cards .card-stats:after,.stats-card-container .flexed-row-cards .card-stats:before{content:\\\"\\\";display:block;width:0;height:0}.stats-card-container .flexed-row-cards .card-stats:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.stats-card-container .flexed-row-cards .card-stats:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.stats-card-container .flexed-row-cards .card-stats+.stats-card-container .flexed-row-cards .card-stats{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.stats-card-container .flexed-row-cards .card-stats .score-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;font-weight:400;font-size:1rem;color:RGB(var(--now-color--neutral-21,0,0,0))}.stats-card-container .flexed-row-cards .card-stats .score-bold{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;font-size:2.5rem;font-weight:300;line-height:1.25;color:RGB(var(--now-color--neutral-21,0,0,0))}.stats-card-container .flexed-row-cards .card-stats .score-unit{font-size:2.25rem;font-weight:300;color:RGB(var(--now-color--neutral-21,0,0,0))}now-dropdown{float:right;margin:1rem}.user-profile-cards-loader,.user-profile-error-message{text-align:center;margin:0 auto;width:100%}.user-profile-cards-loader now-empty-state,.user-profile-error-message now-empty-state{display:block;align-items:center;flex:1}.user-profile-cards-loader now-text-link,.user-profile-error-message now-text-link{margin-top:.75rem;display:block}\", \"\"]);\n\n// exports\n","import { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport '@servicenow/now-loader';\nimport '@servicenow/now-dropdown';\nimport '@servicenow/now-alert';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-date-range-picker';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-text-link';\nimport { t } from 'sn-translate';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n\tSCORE_NA_LABEL,\n\tASSIGNMENT_GROUP_LABEL,\n\tITEM_SELECTED,\n\tSYS_USER,\n\tSYS_USER_GROUP,\n\tKPI_GROUP_M2M_PA_INDICATORS,\n\tMANAGER_WORKSPACE_VIEW\n} from '../../common/constants';\nimport { getUserDateFormat } from '../../common/selectors';\nimport { formatDateRange } from '../../utils/dateUtils';\nimport {\n\tUSER_EMPTY_ERROR_MESSAGE,\n\tADMIN_EMPTY_ERROR_MESSAGE\n} from '../../common/constants';\nconst LOADING_HEADER_TEXT = t('Loading');\nconst LOADING_BODY_TEXT = t('Loading the KPIs configured for this user.');\n\nexport const CONFIG_KPI_LINK_TEXT = t('Configure Team KPIs');\nexport const CONFIG_KPI_ARIA_LABEL = t(\n\t'Click here to open a new window to configure team KPIs'\n);\nexport const EMPTY_LABEL_PLACEHOLDER = t('(Empty)');\n/**\n * Returns a wrapper markup for the now-loader component, used while the KPI info\n * is being fetched and processed.\n */\nconst _renderLoading = header => {\n\treturn (\n\t\t<div className=\"stats-card-container\">\n\t\t\t<div className=\"cards-container-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={header}\n\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t></now-heading>\n\t\t\t\t<div className=\"cards-container-controls\"></div>\n\t\t\t\t<div className=\"flexed-row-cards\">\n\t\t\t\t\t<div className=\"user-profile-cards-loader\">\n\t\t\t\t\t\t<now-empty-state\n\t\t\t\t\t\t\tbodyText={LOADING_BODY_TEXT}\n\t\t\t\t\t\t\theaderText={LOADING_HEADER_TEXT}\n\t\t\t\t\t\t\ttype=\"loading\"\n\t\t\t\t\t\t\tvariant=\"fit\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n/**\n * Return a Info message in case that some edge cases are triggered by the user.\n * @param {*} msg\n */\nconst _renderKPIErrorMessage = hasAdminRole => {\n\tlet msg = hasAdminRole\n\t\t? ADMIN_EMPTY_ERROR_MESSAGE\n\t\t: USER_EMPTY_ERROR_MESSAGE;\n\treturn (\n\t\t<div className=\"user-profile-error-message\">\n\t\t\t<now-empty-state type=\"empty\" bodyText={msg} variant=\"fit\" />\n\t\t\t{hasAdminRole ? (\n\t\t\t\t<now-text-link\n\t\t\t\t\tlabel={CONFIG_KPI_LINK_TEXT}\n\t\t\t\t\tconfigAria={{ ariaLabel: CONFIG_KPI_ARIA_LABEL }}\n\t\t\t\t\ttitle={CONFIG_KPI_LINK_TEXT}\n\t\t\t\t\topens-window\n\t\t\t\t\thref=\"/sn_team_perf_kpi_group_list.do\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t></now-text-link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\n/**\n * If there's already a selectedGroup on state we return such value,\n * otherwise we return the first available group set on properties.groups\n * @param {*} state\n */\nconst __getSelectedGroup = state => {\n\treturn get(state, 'selectedGroup')\n\t\t? get(state, 'selectedGroup')\n\t\t: get(state, 'groups[0].sys_id');\n};\n\n/**\n * Based on the selectedGroup we build the payload used to render the card components here\n * by merging the metadata coming from the PA REST API with the current agent's selected group.\n * @param {*} state\n */\nconst _buildCardsPayload = state => {\n\tlet indicatorProfiles = get(state, 'profiles', []);\n\tlet rawData = get(state, 'rowData', []);\n\tconst selectedGroup = __getSelectedGroup(state);\n\n\t/**\n\t * Filter from all KPI Profiles/Reporting groups only the ones that are\n\t * associated with selectedGroup\n\t * @param {*} profile\n\t */\n\tconst __filterProfileByGroup = profile => {\n\t\t// let groups = get(profile, 'assignment_groups', []).filter((grp) => grp.assignment_group_id === selectedGroup);\n\t\t// return groups.length > 0;\n\t\treturn get(profile, 'assignment_group.value', false) === selectedGroup;\n\t};\n\n\t/**\n\t * From all available breakdowns let's filter only the one that contains\n\t * the selectedGroup\n\t * @param {*} indicatorData\n\t */\n\tconst __filterScoresByGroup = indicatorData => {\n\t\treturn get(indicatorData, `breakdowns.${selectedGroup}`, false);\n\t};\n\n\tconst __buildKPIMap = indicatorArray => {\n\t\tlet indicatorMapObj = {};\n\t\tindicatorArray.forEach(indicator => {\n\t\t\tlet order = get(indicator, 'order.value', 0);\n\t\t\tlet label = get(indicator, 'label.displayValue');\n\t\t\tlabel = isEmpty(label)\n\t\t\t\t? get(indicator, 'kpi.displayValue', t('N/A'))\n\t\t\t\t: label;\n\t\t\tindicatorMapObj[indicator.kpi.value] = {\n\t\t\t\tunit: get(indicator, 'kpi._reference.unit.displayValue', ''),\n\t\t\t\tdisplay_aggregate: get(\n\t\t\t\t\tindicator,\n\t\t\t\t\t'display_aggregate.value',\n\t\t\t\t\t''\n\t\t\t\t),\n\t\t\t\t// eslint-disable-next-line no-alert\n\t\t\t\t...indicator,\n\t\t\t\torder,\n\t\t\t\tcardLabel: label\n\t\t\t};\n\t\t});\n\t\treturn indicatorMapObj;\n\t};\n\tlet profile = indicatorProfiles.filter(__filterProfileByGroup).pop();\n\t// If state.selectedGroup doesn't have a KPI associated we return empty array\n\tif (isEmpty(profile)) return [];\n\tlet scores = rawData.filter(__filterScoresByGroup);\n\tscores = get(scores, '[0].scores', []);\n\tlet indicators = get(\n\t\tprofile,\n\t\t'_query.queryWithIndicator.sn_team_perf_kpi_group_m2m_pa_indicators._results',\n\t\t[]\n\t);\n\tlet indicatorMap = __buildKPIMap(indicators);\n\tlet mergedScoreAndIndicators = map(\n\t\tscores,\n\t\t(indicatorValueObj, indicator_id) => {\n\t\t\tlet kpiMap = get(indicatorMap, indicator_id, {});\n\t\t\tlet aggregateType = get(kpiMap, 'display_aggregate.value');\n\t\t\treturn {\n\t\t\t\t...kpiMap,\n\t\t\t\t...indicatorValueObj,\n\t\t\t\t// TODO: normalizedValue logic will be replaced with Hieu map implementation\n\t\t\t\tnormalizedValue:\n\t\t\t\t\taggregateType == 'average'\n\t\t\t\t\t\t? indicatorValueObj.stats.formattedAverage\n\t\t\t\t\t\t: indicatorValueObj.stats.formattedSumOfScores\n\t\t\t};\n\t\t}\n\t);\n\t// Finalfilter to make sure scores that are not part of indicator are excluded and sort so cards\n\t// render with the right order.\n\treturn mergedScoreAndIndicators\n\t\t.filter(scoreIndicator => !isEmpty(scoreIndicator.cardLabel))\n\t\t.sort((curr, next) => {\n\t\t\treturn curr.order > next.order ? 1 : -1;\n\t\t});\n};\n\nconst _renderUserIndicatorCard = (cardData, dispatch, view) => {\n\tconst label = get(cardData, 'label', SCORE_NA_LABEL);\n\tconst indicator = get(cardData, 'indicator', '-1');\n\tconst sysId = get(cardData, 'sysId', '-1');\n\tconst group = get(cardData, 'group', SCORE_NA_LABEL);\n\tconst groupName = get(cardData, 'groupName', EMPTY_LABEL_PLACEHOLDER);\n\tconst userName = get(cardData, 'userName', EMPTY_LABEL_PLACEHOLDER);\n\tlet score = get(cardData, 'score', SCORE_NA_LABEL);\n\t// score value can be an empty string, we need to perform futher validation:\n\tscore = isEmpty(score) ? SCORE_NA_LABEL : score;\n\tconst actionName = get(cardData, 'actionName', '');\n\tconst actionMetadata = get(cardData, 'actionMetadata', '');\n\tconst hasInteraction = !isEmpty(actionMetadata) && !isEmpty(actionName);\n\tlet ariaRole,\n\t\tariaLabel = null;\n\tif (hasInteraction) {\n\t\tariaRole = 'tabpanel';\n\t\tariaLabel = __getAriaTextForCard(cardData);\n\t}\n\n\tconst __getAriaTextForCard = cardData => {\n\t\treturn `${cardData.label} ${cardData.score}`;\n\t};\n\tconst memberIdentifier = `${indicator}${group}${sysId}`;\n\tlet kpiCardProps = {\n\t\tsize: 'lg',\n\t\tinteraction: 'none',\n\t\ttabindex: '0',\n\t\tariaRole: { ariaRole },\n\t\tariaLabel: { ariaLabel }\n\t};\n\n\t// If user is an admin or a manager\n\t// we allow click action to drilldown into\n\t// KPI table/chart component\n\tif (view === MANAGER_WORKSPACE_VIEW) {\n\t\tkpiCardProps = {\n\t\t\t...kpiCardProps,\n\t\t\tinteraction: 'click',\n\t\t\t'on-click': () =>\n\t\t\t\tdispatch(ITEM_SELECTED, {\n\t\t\t\t\ttable: KPI_GROUP_M2M_PA_INDICATORS,\n\t\t\t\t\tsys_id: memberIdentifier,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\t'0Table': SYS_USER_GROUP,\n\t\t\t\t\t\t'0SysId': group,\n\t\t\t\t\t\t'0Label': groupName,\n\t\t\t\t\t\t'1Table': SYS_USER,\n\t\t\t\t\t\t'1SysId': sysId,\n\t\t\t\t\t\t'1Label': userName,\n\t\t\t\t\t\t'2Table': KPI_GROUP_M2M_PA_INDICATORS,\n\t\t\t\t\t\t'2SysId': memberIdentifier,\n\t\t\t\t\t\t'2Label': label,\n\t\t\t\t\t\tteam: group,\n\t\t\t\t\t\tindicator: indicator,\n\t\t\t\t\t\tmember: sysId\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\t}\n\n\treturn (\n\t\t<now-card {...kpiCardProps}>\n\t\t\t<now-card-header\n\t\t\t\theading={{\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tsize: 'sm',\n\t\t\t\t\tlines: 1,\n\t\t\t\t\tvariant: 'secondary',\n\t\t\t\t\tunderlined: true\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className=\"card-stats\">\n\t\t\t\t<span className=\"score-bold\" title={score}>\n\t\t\t\t\t{score}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</now-card>\n\t);\n};\n\nconst view = (state, { dispatch }) => {\n\t// If KPI information isn't fetched then we render the spinner component\n\tconst header = get(state, 'properties.header', t('KPIs'));\n\tconst view = get(state, 'properties.view');\n\tconst sysId = get(state, 'properties.sysId', '-1');\n\tconst hasAdminRole = get(state, 'hasAdminRole', false);\n\tconst userName = get(state, 'userName', '');\n\tlet loading = get(state, 'loading', false);\n\tif (loading) return _renderLoading(header);\n\n\tlet groups = get(state, 'groups', []);\n\t// If current agent is not associated to any group then we show error message\n\t// Ideally Manager will drilldown to a profile from an Group list view\n\t// is possible that Managers drilldown to a profile from another list view that\n\t// references users.\n\tif (isEmpty(groups)) _renderKPIErrorMessage(hasAdminRole);\n\n\tlet dropDownGroups = groups.map(grp => {\n\t\treturn { id: grp.sys_id, label: grp.name };\n\t});\n\tlet cardDataTop = _buildCardsPayload(state);\n\tlet selectedGroup = __getSelectedGroup(state);\n\t// based on the number of cards available this class will allow proper width between all child now-card components\n\tconst containerClass = `flexed-row-cards card-size-${cardDataTop.length}`;\n\tconst {\n\t\tproperties: { dateRange }\n\t} = state;\n\tconst userDateFormat = getUserDateFormat();\n\tconst formattedDateRange = formatDateRange(dateRange);\n\tconst groupName = get(\n\t\tdropDownGroups.filter(grp => grp.id === selectedGroup),\n\t\t'[0].label',\n\t\tEMPTY_LABEL_PLACEHOLDER\n\t);\n\n\treturn (\n\t\t<div className=\"stats-card-container\">\n\t\t\t<div className=\"cards-container-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={header}\n\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t></now-heading>\n\t\t\t\t<div className=\"cards-container-controls\">\n\t\t\t\t\t{!isEmpty(dropDownGroups) ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<div className=\"dropdown-container\">\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\taria-label={ASSIGNMENT_GROUP_LABEL}\n\t\t\t\t\t\t\t\t\tclassName=\"dropdown-label\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ASSIGNMENT_GROUP_LABEL}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\t\t\t\titems={dropDownGroups}\n\t\t\t\t\t\t\t\t\tpanel-fit-props=\"{}\"\n\t\t\t\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\t\t\t\tselected-items={[selectedGroup]}\n\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\tbare\n\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t></now-dropdown>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<now-date-range-picker\n\t\t\t\t\t\t\t\tstart={formattedDateRange.start}\n\t\t\t\t\t\t\t\tend={formattedDateRange.end}\n\t\t\t\t\t\t\t\tformat={userDateFormat}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className={containerClass}>\n\t\t\t\t{isEmpty(cardDataTop) || isEmpty(groups)\n\t\t\t\t\t? _renderKPIErrorMessage(hasAdminRole)\n\t\t\t\t\t: null}\n\t\t\t\t{cardDataTop.map(cardData =>\n\t\t\t\t\t_renderUserIndicatorCard(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: cardData.cardLabel,\n\t\t\t\t\t\t\tscore: cardData.normalizedValue,\n\t\t\t\t\t\t\tindicator: cardData.kpi.value,\n\t\t\t\t\t\t\tgroup: selectedGroup,\n\t\t\t\t\t\t\tgroupName,\n\t\t\t\t\t\t\tsysId,\n\t\t\t\t\t\t\tuserName\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tview\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import { actionTypes } from '@servicenow/ui-core';\nimport * as effects from './effects';\nimport { ACTIONS } from '../../utils/constants';\nimport logErrorEffect from '../../utils/logErrorEffect';\nconst { CHANGE_USER_GROUP } = ACTIONS;\n\nconst { COMPONENT_BOOTSTRAPPED, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nconst actionHandlers = {\n\t// [COMPONENT_PROPERTY_CHANGED]: effects.handleGroupsPropertyUpdate,\n\t[COMPONENT_BOOTSTRAPPED]: effects.fetchGroupsAndIndicatorGroupsEffect,\n\tFETCH_INDICATORS_TO_GROUP_START: effects.startLoadingState,\n\tFETCH_INDICATORS_TO_GROUPS_DATA: effects.fetchUserIndicatorGroups(),\n\tFETCH_INDICATORS_TO_GROUPS_DATA_SUCCESS:\n\t\teffects.handleFetchIndicatorToGroupsSuccess,\n\tFETCH_GROUP_INDICATOR_SCORES: effects.fetchGroupIndicatorScoresEffect,\n\tFETCH_GROUP_INDICATOR_SCORES_SUCCESS:\n\t\teffects.handleFetchGroupIndicatorScoresSucceded,\n\tCOULD_NOT_RETRIEVE_DATA: logErrorEffect,\n\t[CHANGE_USER_GROUP]: effects.handleUpdateSelectedGroup,\n\t[COMPONENT_PROPERTY_CHANGED]: effects.onComponentPropertyChanged\n};\n\nexport default actionHandlers;\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { createHttpEffect } from '@servicenow/ui-effect-http';\nimport get from 'lodash/get';\nimport partial from 'lodash/partial';\nimport {\n\tACTIONS,\n\tFETCH_MULTI_INDICATOR_BREAKDOWNs_API_ENDPOINT\n} from '../../utils/constants';\nimport query from './indicatorGroupQuery';\nimport isEmpty from 'lodash/isEmpty';\nimport * as commonSelectors from '../../common/selectors';\nimport { t } from 'sn-translate';\nconst {\n\tFETCH_INDICATORS_TO_GROUP_START,\n\tFETCH_GROUP_INDICATOR_SCORES,\n\tFETCH_GROUP_INDICATOR_SCORES_SUCCESS,\n\tFETCH_INDICATORS_TO_GROUPS_DATA_SUCCESS,\n\tFETCH_INDICATORS_TO_GROUPS_DATA,\n\tCOULD_NOT_RETRIEVE_DATA\n} = ACTIONS;\n\nconst ADMIN_ROLE = 'admin';\nconst KPI_ADMIN_ROLE = 'sn_team_perf.team_performance_admin';\n\nconst assignmentGroupBreakdown = commonSelectors.getAssignmentGroupBreakdown();\n\nconst assignedToBreakdown = commonSelectors.getAssignedToBreakdown();\n\nconst breakdownRelation = commonSelectors.getMembersBreakdownRelation();\n\n/**\n * Effect that dynamically builds GraphQL with expected payload\n * used to retrieve all indicators2assignment_group record\n * based on the given condition on the metadata object\n *\n * e.g. {condition: 'assignment_group=foo^ORassignment_group=bar'}\n */\nexport const fetchUserIndicatorGroups = () => {\n\treturn createGraphQLEffect(query, {\n\t\tvariableList: ['condition'],\n\t\tstartActionType: FETCH_INDICATORS_TO_GROUP_START,\n\t\tsuccessActionType: FETCH_INDICATORS_TO_GROUPS_DATA_SUCCESS,\n\t\terrorActionType: COULD_NOT_RETRIEVE_DATA\n\t});\n};\n\n/**\n * Effect for handling the loading state\n */\nexport const startLoadingState = ({ updateState }) => {\n\tupdateState({ loading: true });\n};\n\n/**\n * Dispatches the action to fetch the group indicator scores\n * @param {*} dispatch Dispatch fn coming from the component\n * @param {*} uuid [Array of sys_id of indicator scores]\n * @param {*} dateRangeStart Start date string set on date-range-picker cmponent\n * @param {*} dateRangeEnd End date string set on date-range-picker cmponent\n */\nconst fetchUserIndicatorData = (\n\tdispatch,\n\tuuid,\n\tdateRangeStart,\n\tdateRangeEnd\n) => {\n\tdispatch(FETCH_GROUP_INDICATOR_SCORES, {\n\t\tdata: {\n\t\t\tuuid,\n\t\t\tbreakdown: assignmentGroupBreakdown,\n\t\t\tbreakdownRelation: breakdownRelation,\n\t\t\tsort: assignmentGroupBreakdown,\n\t\t\tsortDesc: false,\n\t\t\tfrom: dateRangeStart,\n\t\t\tto: dateRangeEnd,\n\t\t\tlimit: 999,\n\t\t\tpage: 1,\n\t\t\tpageSize: 50\n\t\t}\n\t});\n};\n\n/**\n * Extract from the payload all the PA KPI ids into an array,\n * after that we use the new formed array to fetch the scores\n * @param {*} payload\n * @param {*} dispatch\n */\nexport const constructDataFramePayload = (\n\tpayload,\n\tuserSysId,\n\tdispatch,\n\tupdateState,\n\tdateRange\n) => {\n\tlet uuid = [];\n\tlet profiles = [];\n\tpayload.forEach(groupResult => {\n\t\tlet indicatorGroups = get(\n\t\t\tgroupResult,\n\t\t\t'_query.queryIndicatorGroups.sn_team_perf_kpi_group_m2m_sys_user_group._results',\n\t\t\t[]\n\t\t);\n\t\tif (!isEmpty(indicatorGroups)) profiles.push(indicatorGroups[0]);\n\t\tindicatorGroups.forEach(indicatorGroup => {\n\t\t\tlet indicators = get(\n\t\t\t\tindicatorGroup,\n\t\t\t\t'_query.queryWithIndicator.sn_team_perf_kpi_group_m2m_pa_indicators._results',\n\t\t\t\t[]\n\t\t\t);\n\t\t\tindicators.forEach(indicator => {\n\t\t\t\tif (!isEmpty(get(indicator, 'kpi.value'))) {\n\t\t\t\t\tuuid.push(\n\t\t\t\t\t\t`${get(\n\t\t\t\t\t\t\tindicator,\n\t\t\t\t\t\t\t'kpi.value'\n\t\t\t\t\t\t)}:${assignedToBreakdown}:${userSysId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\tupdateState({ profiles, uuid });\n\tif (uuid.length > 0) {\n\t\tfetchUserIndicatorData(dispatch, uuid, dateRange.start, dateRange.end);\n\t} else {\n\t\t// DEF0084757 - in case of no kpi profiles available we need\n\t\t// to set the loading state to false so the UI can render.\n\t\tupdateState({ loading: false });\n\t}\n};\n\n/**\n * If an external component updates properties.groups,\n * this effect will fetch the required indicators/score associated\n * with the given list of groups.\n * @param {*} param\n */\nexport const fetchGroupsAndIndicatorGroupsEffect = ({\n\tdispatch,\n\tproperties\n}) => {\n\tlet userId = get(properties, 'sysId', []);\n\tlet condition = 'user=' + userId;\n\tdispatch(FETCH_INDICATORS_TO_GROUPS_DATA, { condition });\n};\n\n/**\n * Triggered when user changes the selected group within the component\n * @param {*} param\n */\nexport const handleUpdateSelectedGroup = ({ updateState, action }) => {\n\tupdateState({\n\t\tselectedGroup: get(action, 'payload.value[0]')\n\t});\n};\n\nexport const handleFetchIndicatorToGroupsSuccess = ({\n\tproperties,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst _parseGroupsPayload = groupPayload => {\n\t\treturn {\n\t\t\tsys_id: groupPayload.group.value,\n\t\t\tname: groupPayload.group.displayValue,\n\t\t\torder: get(\n\t\t\t\tgroupPayload,\n\t\t\t\t'_query.queryIndicatorGroups.sn_team_perf_kpi_group_m2m_sys_user_group._results[0].order.value',\n\t\t\t\t0\n\t\t\t)\n\t\t};\n\t};\n\n\t/**\n\t * Excludes groups if they are not part of an indicator group.\n\t * @param {*} groupsPayload\n\t */\n\tconst _excludeGroupsWithoutIndicators = groupsPayload => {\n\t\treturn (\n\t\t\tget(\n\t\t\t\tgroupsPayload,\n\t\t\t\t'_query.queryIndicatorGroups.sn_team_perf_kpi_group_m2m_sys_user_group._results',\n\t\t\t\t[]\n\t\t\t).length > 0\n\t\t);\n\t};\n\n\t/**\n\t * Returns true if current user manages group with <groupSysId>, otherwise false.\n\t * @param {*} groupSysId\n\t * @param {*} properties\n\t */\n\tconst _currentUserHasAccessToGroup = (groupSysId, properties) => {\n\t\tconst currentUserId = get(\n\t\t\tproperties,\n\t\t\t'currentUser.user.sys_id',\n\t\t\t'INVALID_SYS_ID'\n\t\t);\n\t\tlet managedGroupsJSON = [];\n\t\ttry {\n\t\t\tmanagedGroupsJSON = get(\n\t\t\t\tJSON.parse(window.sessionStorage.getItem(currentUserId)),\n\t\t\t\t'managedGroups',\n\t\t\t\t[]\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// eslint-disable-next-line no-empty\n\t\t}\n\n\t\tlet userId = get(properties, 'sysId', []);\n\t\t// return true if current manager manages any of the agent's groups or\n\t\t// current agent profile belongs to the current logged in user, this\n\t\t// to support on Agent Workspace\n\t\treturn (\n\t\t\tmanagedGroupsJSON.indexOf(groupSysId) > -1 ||\n\t\t\tcurrentUserId === userId\n\t\t);\n\t};\n\n\t/**\n\t * Manager should only be able to see KPIs of Groups that it Manages\n\t * either by an Addn Manager Record or as a direct Manager\n\t * @param {*} groupsPayload\n\t * returns true if group sys_id is present in the managedGroups session storage for\n\t * this user\n\t */\n\tconst _excludeGroupsWhereCurrentUserIsNotManager = partial(\n\t\t(properties, groupsPayload) => {\n\t\t\treturn _currentUserHasAccessToGroup(\n\t\t\t\tgroupsPayload.group.value,\n\t\t\t\tproperties\n\t\t\t);\n\t\t},\n\t\tproperties\n\t);\n\n\tconst _sortGroupsByOrderValue = (current, next) => {\n\t\treturn current.order > next.order ? 1 : -1;\n\t};\n\n\tlet groupsPayload = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Query.sys_user_grmember._results'\n\t);\n\tlet groups = groupsPayload\n\t\t.filter(_excludeGroupsWithoutIndicators)\n\t\t.filter(_excludeGroupsWhereCurrentUserIsNotManager)\n\t\t.map(_parseGroupsPayload)\n\t\t.sort(_sortGroupsByOrderValue);\n\n\t// Check if user has any admin role to add KPIs in case of empty case\n\tlet userRoles = get(properties, 'currentUser.user.allRoles', []);\n\tlet hasAdminRole =\n\t\tuserRoles.indexOf(KPI_ADMIN_ROLE) > -1 ||\n\t\tuserRoles.indexOf(ADMIN_ROLE) > -1;\n\tlet userName = get(groupsPayload, '[0].user.displayValue', t('Empty'));\n\tlet updateStateValues = {\n\t\tgroups,\n\t\thasAdminRole,\n\t\tuserName\n\t};\n\tlet primaryGroup = get(\n\t\tgroupsPayload,\n\t\t'[0]._query.primaryAssignmentGroup.sys_user._results[0].primary_group.value',\n\t\tfalse\n\t);\n\tif (\n\t\t!isEmpty(groupsPayload) &&\n\t\tprimaryGroup &&\n\t\t_currentUserHasAccessToGroup(primaryGroup, properties)\n\t) {\n\t\tupdateStateValues.selectedGroup = primaryGroup;\n\t}\n\tupdateState({\n\t\toperation: 'merge',\n\t\tpath: '',\n\t\tvalue: updateStateValues\n\t});\n\tlet dateRange = get(properties, 'dateRange');\n\tlet userSysId = get(properties, 'sysId');\n\tconstructDataFramePayload(\n\t\tgroupsPayload,\n\t\tuserSysId,\n\t\tdispatch,\n\t\tupdateState,\n\t\tdateRange\n\t);\n};\n\nexport const fetchGroupIndicatorScoresEffect = createHttpEffect(\n\tFETCH_MULTI_INDICATOR_BREAKDOWNs_API_ENDPOINT,\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\tsuccessActionType: FETCH_GROUP_INDICATOR_SCORES_SUCCESS,\n\t\terrorActionType: COULD_NOT_RETRIEVE_DATA\n\t}\n);\n\nexport const handleFetchGroupIndicatorScoresSucceded = coeffects => {\n\tconst rows = get(coeffects, 'action.payload.result.rows', []);\n\tcoeffects.updateState({\n\t\trowData: rows,\n\t\tloading: false\n\t});\n};\n\nexport const onComponentPropertyChanged = ({\n\taction,\n\tstate,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst {\n\t\tuuid,\n\t\tproperties: { dateRange }\n\t} = state;\n\n\t// Ensure that we only fetch new data if the date-range actually changed any value.\n\tconst previousStart = get(action, 'payload.previousValue.start');\n\tconst newStart = get(action, 'payload.value.start');\n\tconst previousEnd = get(action, 'payload.previousValue.end');\n\tconst newEnd = get(action, 'payload.value.end');\n\n\tif (\n\t\tuuid.length > 0 &&\n\t\t(previousStart != newStart || previousEnd != newEnd)\n\t) {\n\t\tupdateState({ loading: true });\n\t\tfetchUserIndicatorData(dispatch, uuid, dateRange.start, dateRange.end);\n\t}\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"partial\"];","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nconst query = `\nquery ($condition: String!) {\n\tGlideRecord_Query {\n\t\tsys_user_grmember(queryConditions: $condition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\tgroup {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tuser {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\t_query {\n\t\t\t\t\tprimaryAssignmentGroup: GlideRecord_Query {\n\t\t\t\t\t\tsys_user (queryConditions: \"sys_id=$$parent.user$$^primary_groupISNOTEMPTY\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tprimary_group {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tqueryIndicatorGroups: GlideRecord_Query {\n\t\t\t\t\t\tsn_team_perf_kpi_group_m2m_sys_user_group (queryConditions: \"assignment_group=$$parent.group$$\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkpi_group {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tassignment_group {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\torder {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_query {\n\t\t\t\t\t\t\t\t\tqueryWithIndicator: GlideRecord_Query {\n\t\t\t\t\t\t\t\t\t\tsn_team_perf_kpi_group_m2m_pa_indicators(queryConditions: \"parentISEMPTY^kpi_group=$$parent.kpi_group$$^ORDERBYorder\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\t\t\t\t\tkpi {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t_reference {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunit {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\torder {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay_aggregate {\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n`;\n\nexport default query;\n","import './manager-user-skills-panel';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport actionHandlers from './actionHandlers';\nimport recordWatcherActionHanders from './recordWatcherActionHandlers';\nimport recordWatcherActions from '../../common/actions/recordWatcherActions';\nimport { t } from 'sn-translate';\n\ncreateCustomElement('sn-manager-user-skills-panel', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tsysId: {},\n\t\theader: { default: t('Skills') },\n\t\tcurrentUser: {}\n\t},\n\tactions: recordWatcherActions.actions,\n\tactionHandlers: {\n\t\t...actionHandlers,\n\t\t...recordWatcherActions.actionHandlers,\n\t\t...recordWatcherActionHanders.actionHandlers\n\t},\n\tstyles\n});\n","// eslint-disable-next-line no-unused-vars\nimport { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-loader';\nimport '@servicenow/now-alert';\nimport '@servicenow/now-chart-bar';\nimport '@servicenow/now-card';\nimport '@servicenow/now-button';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-text-link';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport forIn from 'lodash/forIn';\nimport { t } from 'sn-translate';\nimport '../../common/sn-manager-skill-recommendation-card/skill-recommendation-card';\n\nconst __renderProficiencyChart = skillData => {\n\tlet seriesData = [];\n\tforIn(skillData.proficiencyBreakdown, (value, key) => {\n\t\tlet label = isEmpty(key) ? t('(Empty)') : key;\n\t\tseriesData.push({\n\t\t\tProficiency: label,\n\t\t\tlevel: value\n\t\t});\n\t});\n\tlet colorsAvailable = [\n\t\t'#4C95D1',\n\t\t'#F1AB7E',\n\t\t'#48A151',\n\t\t'#E587E5',\n\t\t'#E7F0F6'\n\t];\n\tlet colorMap = seriesData.reduce(\n\t\t(prev, current, idx) => {\n\t\t\tprev[current.Proficiency] = colorsAvailable[idx];\n\t\t\treturn prev;\n\t\t},\n\t\t{ Proficiency: '#FFFFFF' }\n\t);\n\tlet skillCountLabel = t('Skill count:');\n\tconst options = {\n\t\twidth: 'auto',\n\t\theight: '150',\n\t\ttype: 'basic',\n\t\tshowTooltip: true,\n\t\ttooltipConfig: {\n\t\t\tsmallSpacing: true,\n\t\t\toneLine: true,\n\t\t\toritentation: 'vertical',\n\t\t\tjustifyItems: 'center'\n\t\t},\n\t\thideRegister: true,\n\t\tseriesConfig: {\n\t\t\t[skillCountLabel]: {\n\t\t\t\tx: 'Proficiency',\n\t\t\t\ty: 'level',\n\t\t\t\tcolorMap\n\t\t\t}\n\t\t},\n\t\tseriesData\n\t};\n\n\tlet label = t('{0} Skill Proficiency', skillData.label);\n\tlet header = {\n\t\tlabel,\n\t\tsize: 'sm',\n\t\tlines: 1\n\t};\n\n\treturn (\n\t\t<now-card tabindex=\"0\">\n\t\t\t<now-card-header heading={header}></now-card-header>\n\t\t\t<now-chart-bar {...options}></now-chart-bar>\n\t\t</now-card>\n\t);\n};\n\nconst ASSIGN_SKILLS_BUTTON_LABEL = t('Add skills');\n\nconst _renderSkillCards = (state, dispatch) => {\n\tconst cards = get(state, 'skillsCountCards', []);\n\tconst message = get(state, 'message');\n\tconst loading = get(state, 'loading', false);\n\tif (loading) return <now-empty-state type=\"loading\" variant=\"fit\" />;\n\tif (isEmpty(cards) && !isEmpty(message))\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<now-empty-state\n\t\t\t\t\theaderText={t('Attention')}\n\t\t\t\t\tbodyText={message}\n\t\t\t\t></now-empty-state>\n\t\t\t\t{get(state, 'showSkillsModuleLink', false) ? (\n\t\t\t\t\t<div className=\"skill-action-container\">\n\t\t\t\t\t\t<now-text-link\n\t\t\t\t\t\t\tlabel={ASSIGN_SKILLS_BUTTON_LABEL}\n\t\t\t\t\t\t\tconfigAria={{\n\t\t\t\t\t\t\t\tariaLabel: ASSIGN_SKILLS_BUTTON_LABEL\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle={ASSIGN_SKILLS_BUTTON_LABEL}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\t\ton-click={() => {\n\t\t\t\t\t\t\t\tdispatch('ITEM_SELECTED', {\n\t\t\t\t\t\t\t\t\ttable: 'sys_user_has_skill',\n\t\t\t\t\t\t\t\t\tsys_id: '-1',\n\t\t\t\t\t\t\t\t\ttitle: ASSIGN_SKILLS_BUTTON_LABEL,\n\t\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\t\tquery: `user=${get(\n\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\t'properties.sysId'\n\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></now-text-link>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</Fragment>\n\t\t);\n\n\treturn (\n\t\t<div className=\"skills-panel-content\">\n\t\t\t<div className=\"skills-count-container\">\n\t\t\t\t{cards.map(card => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<now-card className=\"count-card\" tabindex=\"0\">\n\t\t\t\t\t\t\t\t<now-card-header\n\t\t\t\t\t\t\t\t\theading={{\n\t\t\t\t\t\t\t\t\t\tlabel: card.label,\n\t\t\t\t\t\t\t\t\t\tsize: 'sm'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\taria-label={`${card.label} Skill count: ${card.count}`}\n\t\t\t\t\t\t\t\t\tclassName=\"count\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{card.count}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</now-card>\n\t\t\t\t\t\t\t{__renderProficiencyChart(card)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst view = (state, { dispatch }) => {\n\tconst header = get(state, 'properties.header');\n\tconst recommendationLoading = get(state, 'recommendationLoading', false);\n\tconst result = get(state, 'result', {});\n\tconst hideRecommendation = get(state, 'hideRecommendation', false);\n\n\treturn (\n\t\t<div className=\"skills-panel grayed-panel\">\n\t\t\t<now-heading\n\t\t\t\tlabel={header}\n\t\t\t\tlevel=\"2\"\n\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\thas-no-margin\n\t\t\t/>\n\t\t\t{!hideRecommendation ? (\n\t\t\t\t<sn-manager-skill-recommendation-card\n\t\t\t\t\tresult={result}\n\t\t\t\t\tloading={recommendationLoading}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t{_renderSkillCards(state, dispatch)}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import '@servicenow/now-button';\nimport '@servicenow/now-text-link';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-dropdown';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { t } from 'sn-translate';\nimport { BTN_APPROVE } from '../../utils/constants';\nimport { RECOMMENDATION_ACTIONS } from '../constants';\n\nconst _renderRecommendationHeader = hideActions => {\n\treturn (\n\t\t<div className=\"recommendation-header\">\n\t\t\t<div className=\"recommendation-header-content\">\n\t\t\t\t<now-icon icon=\"lightbulb-outline\" size=\"md\"></now-icon>\n\t\t\t\t<span className=\"recommendation-header-title\">\n\t\t\t\t\t{t('Recommendation')}\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t{!hideActions ? (\n\t\t\t\t<div className=\"recommendation-header-content -static\">\n\t\t\t\t\t<now-dropdown\n\t\t\t\t\t\tbare\n\t\t\t\t\t\thide-caret\n\t\t\t\t\t\thide-label\n\t\t\t\t\t\ticon=\"ellipsis-v-outline\"\n\t\t\t\t\t\titems={RECOMMENDATION_ACTIONS}\n\t\t\t\t\t\tpanel-fit-props=\"{}\"\n\t\t\t\t\t\tselect=\"single\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t></now-dropdown>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nconst _renderRecommendationBody = recommendedSkill => {\n\tconst taskCount = get(recommendedSkill, 'taskCount.value', 0);\n\tconst rejectedCount = get(recommendedSkill, 'rejectedTaskCount.value', 0);\n\tconst user = get(\n\t\trecommendedSkill,\n\t\t'user._reference.first_name.displayValue',\n\t\t''\n\t);\n\tconst count = taskCount - rejectedCount;\n\tconst text = t(\n\t\t'{0} recently closed {1} tasks related to this skill. Add this skill to enhance routing and assigning tasks to this user.',\n\t\tuser,\n\t\tcount\n\t);\n\n\treturn (\n\t\t<div className=\"recommendation-body\">\n\t\t\t<span>{text}</span>\n\t\t</div>\n\t);\n};\n\nconst _renderRecommendationFooter = (recommendedSkill, approval) => {\n\treturn (\n\t\t<div className=\"recommendation-footer\">\n\t\t\t<now-button-bare\n\t\t\t\tlabel={t('Add skill')}\n\t\t\t\tsize=\"md\"\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tappend-to-payload={{\n\t\t\t\t\ttype: BTN_APPROVE,\n\t\t\t\t\tapproval,\n\t\t\t\t\trecommendedSkill\n\t\t\t\t}}\n\t\t\t\tconfig-aria={{\n\t\t\t\t\t'aria-label': t('Add recommended skill to user')\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst _renderSkillRecommendation = (\n\trecommendedSkill,\n\tapproval,\n\thideActions\n) => {\n\tconst label = recommendedSkill.skill.displayValue;\n\n\treturn (\n\t\t<div className=\"recommendation\">\n\t\t\t{_renderRecommendationHeader(hideActions)}\n\t\t\t<div className=\"recommendation-title\">\n\t\t\t\t<span>{label}</span>\n\t\t\t</div>\n\t\t\t{_renderRecommendationBody(recommendedSkill, approval)}\n\t\t\t{!hideActions\n\t\t\t\t? _renderRecommendationFooter(recommendedSkill, approval)\n\t\t\t\t: null}\n\t\t</div>\n\t);\n};\n\nconst view = state => {\n\tconst loading = get(state, 'properties.loading', false);\n\tconst result = get(state, 'properties.result', {});\n\tconst recommendedSkill = get(result, 'recommendedSkill', {});\n\tconst approval = get(result, 'approval', '');\n\tconst hideActions = get(state, 'properties.hideActions', false);\n\n\tif (loading) return <now-empty-state type=\"loading\" variant=\"fit\" />;\n\n\tif (isEmpty(approval) || isEmpty(recommendedSkill)) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<div className=\"skills-recommendation-content\">\n\t\t\t{_renderSkillRecommendation(\n\t\t\t\trecommendedSkill,\n\t\t\t\tapproval,\n\t\t\t\thideActions\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.recommendation{background-color:RGB(var(--now-color--alert-info-0,195,221,240),.35);border-color:var(--now-color--neutral-5,172,180,181);display:block;flex:0 0 auto;margin-bottom:1rem;padding:1rem 1.5rem;width:100%}.recommendation-header{display:flex;margin:0;position:relative;width:100%}.recommendation-header-content{align-items:center;color:RGB(var(--now-color--neutral-12,66,80,81));display:flex;flex:1 1 auto;font-size:.75rem;overflow:hidden;position:relative}.recommendation-header-content.-static{flex:0 0 auto}.recommendation-header-content>now-icon{display:flex;justify-content:center;margin-right:.5rem}.recommendation-header-title{font-weight:400}.recommendation-header-title,.recommendation-title{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;display:block;position:relative}.recommendation-title{font-weight:700;font-size:1rem}.recommendation-body{color:RGB(var(--now-color--neutral-18,22,27,28));font-size:1rem;margin-bottom:.25rem;margin-top:1rem;position:relative;width:100%}.recommendation-footer{margin-top:.5rem;width:100%}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.skills-panel{background:RGB(var(--now-color--neutral-1,246,247,247));margin:0 .75rem 0 0;padding:1rem}.skills-panel now-heading{margin:0 0 1rem}.skills-panel .skill-action-container{width:100%;display:flex;text-align:center}.skills-panel .skill-action-container now-text-link{display:block;margin:.75rem auto 0}.skills-panel .skills-panel-content{display:flex;flex-direction:row}.skills-panel .skills-panel-content .skills-count-container,.skills-panel .skills-panel-content .skills-proficiency-container{display:flex;flex-direction:column;flex:1}.skills-panel .skills-panel-content .skills-count-container>div,.skills-panel .skills-panel-content .skills-proficiency-container>div{display:flex;flex-direction:row;margin-bottom:.75rem}.skills-panel .skills-panel-content .skills-count-container>div:last-child,.skills-panel .skills-panel-content .skills-proficiency-container>div:last-child{margin-bottom:0}.skills-panel .skills-panel-content .skills-count-container>div now-card,.skills-panel .skills-panel-content .skills-proficiency-container>div now-card{flex:1;height:100%;background:RGB(var(--now-color--neutral-0,255,255,255));margin-left:1rem}.skills-panel .skills-panel-content .skills-count-container>div now-card.count-card,.skills-panel .skills-panel-content .skills-proficiency-container>div now-card.count-card{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;font-size:2.5rem;font-weight:300;height:100%;flex:0.5}.skills-panel .skills-panel-content .skills-count-container>div now-card.count-card .count,.skills-panel .skills-panel-content .skills-proficiency-container>div now-card.count-card .count{height:9.375rem;margin-top:1rem;line-height:1.25}.skills-panel .skills-panel-content .skills-count-container>div now-card now-chart-bar,.skills-panel .skills-panel-content .skills-proficiency-container>div now-card now-chart-bar{margin-top:1rem}.skills-panel .skills-panel-content .skills-count-container>div now-card:first-child,.skills-panel .skills-panel-content .skills-proficiency-container>div now-card:first-child{margin-left:0}.skills-panel .skills-panel-content .skills-count-container>div now-card-header,.skills-panel .skills-panel-content .skills-proficiency-container>div now-card-header{padding-bottom:.5rem;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214));height:1.5rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block}\", \"\"]);\n\n// exports\n","import * as effects from './effects';\nimport { ACTIONS } from '../../utils/constants';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { NOW_DROPDOWN_ITEM_SELECTED } from '../../common/constants';\n\nconst {\n\tAPPROVE_RECOMMENDATION,\n\tBUTTON_CLICKED,\n\tERROR_OCCURED,\n\tFETCH_SKILL_RECOMMENDATION,\n\tFETCH_SKILL_RECOMMENDATION_SUCCEEDED,\n\tFETCH_SKILL_RECOMMENDATION_STARTED,\n\tFETCH_SKILLS_COUNT_AGGREGATOR_START,\n\tFETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS,\n\tFETCH_SKILLS_COUNT_AGGREGATOR_ERROR,\n\tSKILL_ASSIGNED\n} = ACTIONS;\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst actionHandlers = {\n\t[COMPONENT_BOOTSTRAPPED]: effects.bootstrap,\n\t[FETCH_SKILLS_COUNT_AGGREGATOR_START]: effects.fetchSkillCountDataEffect,\n\t[FETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS]:\n\t\teffects.fetchSkillCountHandlerEffect,\n\t[FETCH_SKILLS_COUNT_AGGREGATOR_ERROR]: effects.fetchSkillCountHandlerEffect,\n\t[FETCH_SKILL_RECOMMENDATION]: effects.fetchSkillRecommendations,\n\t[FETCH_SKILL_RECOMMENDATION_SUCCEEDED]: effects.skillRecommendationsHandler,\n\t[FETCH_SKILL_RECOMMENDATION_STARTED]: effects.updateLoadingState,\n\t[ERROR_OCCURED]: effects.errorHandler,\n\t[BUTTON_CLICKED]: effects.handleButtonClick,\n\t[APPROVE_RECOMMENDATION]: effects.assignSkill,\n\t[SKILL_ASSIGNED]: effects.bootstrap,\n\t[NOW_DROPDOWN_ITEM_SELECTED]: effects.handleDropdownItemSelectedEffect\n};\n\nexport default actionHandlers;\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { t } from 'sn-translate';\nimport { ACTIONS, BTN_APPROVE } from '../../utils/constants';\nimport {\n\tITEM_SELECTED,\n\tRECORD_WATCHER_UPDATED,\n\tGRAPHQL_MAX_LIMIT\n} from '../../common/constants';\n\nconst {\n\tAPPROVE_RECOMMENDATION,\n\tSKILL_ASSIGNED,\n\tERROR_OCCURED,\n\tFETCH_SKILL_RECOMMENDATION,\n\tFETCH_SKILL_RECOMMENDATION_SUCCEEDED,\n\tFETCH_SKILL_RECOMMENDATION_STARTED,\n\tFETCH_SKILLS_COUNT_AGGREGATOR_START,\n\tFETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS,\n\tFETCH_SKILLS_COUNT_AGGREGATOR_ERROR,\n\tDRILLDOWN_SKILL_CARD\n} = ACTIONS;\n\nconst skillRecommendationQuery = `query ($condition: String!, $limit: Int, $approvalCondition: String!) {\n    GlideRecord_Query {\n      sn_sre_user_predicted_skill(queryConditions: $condition, pagination: {limit: $limit}) {\n        _results {\n          skill {\n            value\n            displayValue\n          }\n          task_count {\n            value\n            displayValue\n          }\n          rejected_task_count {\n            value\n            displayValue\n          }\n          user {\n            value\n\t\t\tdisplayValue\n\t\t\t_reference {\n\t\t\t\tfirst_name {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tlast_name {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t}\n          }\n          sys_id {\n            value\n          }\n          _query {\n            approval: GlideRecord_Query {\n              sysapproval_approver(queryConditions: $approvalCondition, pagination: {limit: 1}) {\n                _results {\n                  document_id {\n                    value\n                    displayValue\n                  }\n                  state {\n                    value\n                    displayValue\n                  }\n                  sys_id {\n                    value\n                  }\n                  value\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst skillsCountquery = `\nquery ($condition: String!, $proficiencyCondition: String!) {\n\tskillsCount: GlideAggregateRecord_Query(\n\t\ttableName: \"sys_user_has_skill\",\n\t\tqueryConditions: $condition,\n\t\tgroupBy: \"skill.level_type\") {\n\t\taggregates {\n\t\tcount\n\t\tgroupBy {\n\t\t\tfield\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t}\n\t  }\n\t}\n\n\tskillProficiency: GlideAggregateRecord_Query(\n\t\ttableName: \"sys_user_has_skill\",\n\t\tqueryConditions: $proficiencyCondition,\n\t\tgroupBy: [\"skill_level\", \"skill.level_type\"],\n\t\torderBy: \"skill_level.value\") {\n\t\taggregates {\n\t\t  count\n\t\t  min(field: \"skill_level.value\")\n\t\t  groupBy {\n\t\t\tfield\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t  }\n\t\t}\n\t}\n}\n`;\n\n/**\n * Fired when skills-panel boosttap, this sets the state.loader to true and\n * dispatches the action to execute the graphql effect to fetch the skill's data.\n * It also dispatches an action to fetch skill recommendations\n * @param {*} coeffects\n */\nexport const bootstrap = coeffects => {\n\tconst { state, properties, dispatch } = coeffects;\n\tconst currentUser = get(state, 'properties.currentUser.user.sys_id', '');\n\n\tdispatch(FETCH_SKILLS_COUNT_AGGREGATOR_START, {\n\t\tcondition: `skill.level_typeISNOTEMPTY^user=${properties.sysId}`,\n\t\tproficiencyCondition: `skill_levelISNOTEMPTY^skill.level_typeISNOTEMPTY^user=${properties.sysId}`\n\t});\n\n\tif (isEmpty(currentUser)) return;\n\n\tdispatch(FETCH_SKILL_RECOMMENDATION, {\n\t\tcondition: `user=${properties.sysId}^state=requested^manual=false^skill.level_typeISNOTEMPTY^ORDERBYDESCtask_count`,\n\t\tlimit: 1,\n\t\tapprovalCondition: `document_id=$$parent.sys_id$$^source_table=sn_sre_user_predicted_skill^state=requested^approver=${currentUser}`\n\t});\n};\n\n/**\n * Fetches the skillCount and other aggregator used by the skill-panel component.\n */\nexport const fetchSkillCountDataEffect = createGraphQLEffect(skillsCountquery, {\n\tvariableList: ['condition', 'proficiencyCondition'],\n\tsuccessActionType: FETCH_SKILLS_COUNT_AGGREGATOR_SUCCESS,\n\terrorActionType: FETCH_SKILLS_COUNT_AGGREGATOR_ERROR\n});\n\n/**\n * Parses graphql result data into a flattened array\n * @param {*} payload\n */\nconst _processAggregatePayload = (payload, properties) => {\n\tlet skillsCountArray = [];\n\tlet aggregateData = get(payload, 'data.skillsCount.aggregates', []);\n\tlet proficiencyData = get(payload, 'data.skillProficiency.aggregates', []);\n\tlet userSysId = get(properties, 'sysId');\n\taggregateData.forEach(aggregate => {\n\t\tlet skillType = get(aggregate, 'groupBy[0].displayValue');\n\t\tlet count = get(aggregate, 'count', t('N/A'));\n\t\tlet field = get(aggregate, 'groupBy[0].field');\n\t\tlet value = get(aggregate, 'groupBy[0].value');\n\t\tlet proficiencyBreakdown = proficiencyData\n\t\t\t.filter(entry => {\n\t\t\t\treturn get(entry, 'groupBy[0].value') == value;\n\t\t\t})\n\t\t\t.map(entry => {\n\t\t\t\tlet skillLevel = get(entry, 'groupBy[1]');\n\t\t\t\tlet levelIntValue = get(entry, 'min', 0);\n\t\t\t\treturn {\n\t\t\t\t\tcount: entry.count,\n\t\t\t\t\tlevelIntValue,\n\t\t\t\t\t...skillLevel\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort((a, b) => a.levelIntValue - b.levelIntValue)\n\t\t\t.reduce((accum, current) => {\n\t\t\t\tif (get(accum, get(current, 'displayValue'))) {\n\t\t\t\t\taccum[get(current, 'displayValue')] += get(\n\t\t\t\t\t\tcurrent,\n\t\t\t\t\t\t'count',\n\t\t\t\t\t\t0\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\taccum[get(current, 'displayValue')] = get(\n\t\t\t\t\t\tcurrent,\n\t\t\t\t\t\t'count',\n\t\t\t\t\t\t0\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn accum;\n\t\t\t}, {});\n\t\tlet actionMetadata = {\n\t\t\ttable: 'sys_user_has_skill',\n\t\t\tquery: `${field}=${value}^user=${userSysId}`\n\t\t};\n\t\tskillsCountArray.push({\n\t\t\tlabel: skillType,\n\t\t\tcount,\n\t\t\tactionMetadata,\n\t\t\tactionName: DRILLDOWN_SKILL_CARD,\n\t\t\tproficiencyBreakdown\n\t\t});\n\t});\n\treturn skillsCountArray;\n};\n\n/**\n * Sets in the state, all values required from the graphql effect response,\n * @param {*} param0\n */\nexport const fetchSkillCountHandlerEffect = ({\n\taction,\n\tupdateState,\n\tproperties\n}) => {\n\tlet errors = get(action, 'payload.errors', []);\n\n\tif (!isEmpty(errors)) {\n\t\tupdateState({\n\t\t\toperation: 'merge',\n\t\t\tpath: '',\n\t\t\tvalue: {\n\t\t\t\tmessage: t(\n\t\t\t\t\t'Server error, please contact your ServiceNow administration'\n\t\t\t\t),\n\t\t\t\tloading: false\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tlet skillsCountArray = _processAggregatePayload(action.payload, properties);\n\n\tif (!isEmpty(skillsCountArray)) {\n\t\tupdateState({\n\t\t\toperation: 'merge',\n\t\t\tpath: '',\n\t\t\tvalue: {\n\t\t\t\tskillsCountCards: skillsCountArray,\n\t\t\t\tloading: false\n\t\t\t}\n\t\t});\n\t} else {\n\t\tlet showSkillsModuleLink = false;\n\t\tconst userRoles = get(properties, 'currentUser.user.allRoles', []);\n\t\tif (\n\t\t\tuserRoles.indexOf('admin') > -1 ||\n\t\t\tuserRoles.indexOf('skill_manager') > -1\n\t\t) {\n\t\t\tshowSkillsModuleLink = true;\n\t\t}\n\t\tupdateState({\n\t\t\toperation: 'merge',\n\t\t\tpath: '',\n\t\t\tvalue: {\n\t\t\t\tloading: false,\n\t\t\t\tmessage: t('Skills have not been assigned to this user.'),\n\t\t\t\tshowSkillsModuleLink\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Fired up when user clicks on any of the score cards representing\n * the skill count.\n */\nexport const drilldownIntoList = ({ dispatch, action }) => {\n\tlet params = get(action, 'payload', {});\n\tdispatch('ITEM_SELECTED', {\n\t\trenderer_type: 'list',\n\t\tparams\n\t});\n};\n\n/**\n * Fetch skill recommendations for the user\n */\nexport const fetchSkillRecommendations = createGraphQLEffect(\n\tskillRecommendationQuery,\n\t{\n\t\tvariableList: ['condition', 'limit', 'approvalCondition'],\n\t\tsuccessActionType: FETCH_SKILL_RECOMMENDATION_SUCCEEDED,\n\t\tstartActionType: FETCH_SKILL_RECOMMENDATION_STARTED,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\n/**\n * Extracts recommended skill from the query result and updates state\n * @param {*} coeffects\n */\nexport const skillRecommendationsHandler = ({ action, updateState }) => {\n\tconst userPredictedSkill = get(\n\t\taction,\n\t\t`payload.data.GlideRecord_Query.sn_sre_user_predicted_skill._results[0]`,\n\t\t{}\n\t);\n\n\tconst approval = get(\n\t\tuserPredictedSkill,\n\t\t'_query.approval.sysapproval_approver._results[0].sys_id.value',\n\t\t''\n\t);\n\n\tlet result = {};\n\n\tif (!isEmpty(userPredictedSkill))\n\t\tresult = {\n\t\t\trecommendedSkill: {\n\t\t\t\tskill: userPredictedSkill.skill,\n\t\t\t\tuser: userPredictedSkill.user,\n\t\t\t\ttaskCount: userPredictedSkill.task_count,\n\t\t\t\trejectedTaskCount: userPredictedSkill.rejected_task_count,\n\t\t\t\tsysId: userPredictedSkill.sys_id.value\n\t\t\t},\n\t\t\tapproval\n\t\t};\n\n\tupdateState({\n\t\toperation: 'merge',\n\t\tpath: '',\n\t\tvalue: {\n\t\t\tresult,\n\t\t\trecommendationLoading: false\n\t\t}\n\t});\n};\n\nexport const updateLoadingState = ({ updateState }) => {\n\tupdateState({ recommendationLoading: true });\n};\n\nexport const errorHandler = ({ action, updateState }) => {\n\tupdateState({ loading: false });\n\t// eslint-disable-next-line no-console\n\tconsole.error(action.type, action.payload);\n};\n\n/**\n * Handles button click on the recommendation panel\n * @param {*} coeffects\n */\nexport const handleButtonClick = ({ action, dispatch, updateState }) => {\n\tconst type = get(action, 'payload.type', '');\n\tconst approval = get(action, 'payload.approval', '');\n\tconst recommendedSkill = get(action, 'payload.recommendedSkill', {});\n\n\tif (type === BTN_APPROVE) {\n\t\tconst filter = btoa('sys_id=' + recommendedSkill.sysId).replace(\n\t\t\t/=/g,\n\t\t\t'-'\n\t\t);\n\t\tdispatch(RECORD_WATCHER_UPDATED, {\n\t\t\ttable: 'sn_sre_user_predicted_skill',\n\t\t\tfilter,\n\t\t\tsubscribe: 'true'\n\t\t});\n\t\tdispatch(APPROVE_RECOMMENDATION, {\n\t\t\ttableName: 'sysapproval_approver',\n\t\t\tsys_id: approval,\n\t\t\tdata: { state: 'approved' }\n\t\t});\n\t\tupdateState({ hideRecommendation: true });\n\t}\n};\n\nexport const assignSkill = createHttpEffect(\n\t'/api/now/table/:tableName/:sys_id',\n\t{\n\t\tmethod: 'PATCH',\n\t\tpathParams: ['tableName', 'sys_id'],\n\t\tdataParam: 'data',\n\t\tsuccessActionType: SKILL_ASSIGNED,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nexport const handleDropdownItemSelectedEffect = ({\n\tstate,\n\taction,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst selectedItem = get(action, 'payload.value[0]', '');\n\tconst approval = get(state, 'result.approval', '');\n\tconst recommendedSkill = get(state, 'result.recommendedSkill', {});\n\n\tswitch (selectedItem) {\n\tcase 0:\n\t\tdispatch(ITEM_SELECTED, {\n\t\t\ttable: 'sysapproval_approver',\n\t\t\tsys_id: approval\n\t\t});\n\t\tbreak;\n\tcase 1:\n\t\tdispatch(RECORD_WATCHER_UPDATED, {\n\t\t\ttable: 'sn_sre_user_predicted_skill',\n\t\t\tfilter: btoa('sys_id=' + recommendedSkill.sysId).replace(\n\t\t\t\t/=/g,\n\t\t\t\t'-'\n\t\t\t),\n\t\t\tsubscribe: 'true'\n\t\t});\n\t\tdispatch(APPROVE_RECOMMENDATION, {\n\t\t\ttableName: 'sysapproval_approver',\n\t\t\tsys_id: approval,\n\t\t\tdata: { state: 'approved' }\n\t\t});\n\t\tupdateState({ hideRecommendation: true });\n\t\tbreak;\n\tcase 2:\n\t\tdispatch(RECORD_WATCHER_UPDATED, {\n\t\t\ttable: 'sn_sre_user_predicted_skill',\n\t\t\tfilter: btoa('sys_id=' + recommendedSkill.sysId).replace(\n\t\t\t\t/=/g,\n\t\t\t\t'-'\n\t\t\t),\n\t\t\tsubscribe: 'true'\n\t\t});\n\t\tdispatch(APPROVE_RECOMMENDATION, {\n\t\t\ttableName: 'sysapproval_approver',\n\t\t\tsys_id: approval,\n\t\t\tdata: { state: 'rejected' }\n\t\t});\n\t\tupdateState({ hideRecommendation: true });\n\t\tbreak;\n\tcase 3:\n\t\tupdateState({ hideRecommendation: true });\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n};\n","import { RW_ACTIONS } from '../../common/constants';\nimport { ACTIONS } from '../../utils/constants';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nconst { SKILL_ASSIGNED } = ACTIONS;\n\nconst parseMessage = ({ action, dispatch, updateState }) => {\n\tconst approvalState = get(action, 'payload.data.record.state', {});\n\n\tif (!isEmpty(approvalState) && approvalState.value !== 'requested') {\n\t\tupdateState({ hideRecommendation: false, result: {} });\n\t\tdispatch(SKILL_ASSIGNED);\n\t}\n};\n\nexport default {\n\tactionHandlers: {\n\t\t[RW_ACTIONS.SUBSCRIPTION_STARTED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Started');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_SUCCEEDED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Succedded');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.SUBSCRIPTION_FAILED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Failed');\n\t\t\t}\n\t\t},\n\t\t[RW_ACTIONS.MESSAGE_RECEIVED]: parseMessage,\n\t\t[RW_ACTIONS.SUBSCRIPTION_UNSUBSCRIBED]: {\n\t\t\teffect: () => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Override Subscription Unsubscribed');\n\t\t\t}\n\t\t}\n\t}\n};\n","import './manager-embedded-list';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './styles.scss';\nimport view from './view';\n\ncreateCustomElement('sn-manager-embedded-list', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\ttable: {},\n\t\tquery: {},\n\t\theader: { default: '' },\n\t\tcolumns: {},\n\t\tview: {}\n\t},\n\tstyles\n});\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.grayed-panel{background:RGB(var(--now-color--neutral-1,246,247,247));padding-top:1rem}.grayed-panel now-heading{padding:0 1rem}.grayed-panel .embedded-list-wrapper-padding{padding:1rem}.grayed-panel .embedded-list-wrapper-padding .embedded-list-wrapper-border{border:1px solid rgb(var(--now-color--neutral-3,209,214,214))}\", \"\"]);\n\n// exports\n","import '@servicenow/now-heading';\nimport '@servicenow/now-record-list-connected';\nimport { get } from 'lodash';\nimport defaultProperties from './defaultProperties';\n\nconst view = state => {\n\tconst { table, query, header, view } = get(state, 'properties');\n\tconst listProps = {\n\t\t...defaultProperties, // eslint-disable-line\n\t\ttable,\n\t\tquery,\n\t\tview,\n\t\tfixedQuery: query\n\t};\n\treturn (\n\t\t<div className=\"grayed-panel\">\n\t\t\t<now-heading\n\t\t\t\tlabel={header}\n\t\t\t\tlevel=\"2\"\n\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\thas-no-margin\n\t\t\t/>\n\t\t\t<div className=\"embedded-list-wrapper-padding\">\n\t\t\t\t<div className=\"embedded-list-wrapper-border\">\n\t\t\t\t\t<now-record-list-connected {...listProps} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","const listProperties = {\n\tlimit: 10,\n\tlistType: 'RELATED',\n\tmaxColumns: 5,\n\thideTitle: true,\n\thideRefreshButton: true,\n\thideHeader: true,\n\thideSelectAll: true,\n\thideLastRefreshedText: true,\n\thideColumnGrouping: true,\n\thideColumnSorting: false,\n\thidePagination: true,\n\thideCellFilter: true,\n\thideColumnFiltering: true,\n\thidePanelFooter: true,\n\thideRowSelector: true,\n\thideCheckboxHover: true,\n\thideUnnecessaryRowSelectors: true,\n\thideFilterPanel: true,\n\thideQuickEdit: true\n};\n\nexport default listProperties;\n","export { default } from './sn-manager-user-groups';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-user-channels-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tchannelsData: [],\n\t\tselectedChannelIds: [],\n\t\tgridProps: {},\n\t\trowCount: 0,\n\t\tdataUpdatedTime: Date.now(),\n\t\tisOverrideButtonDisabled: true,\n\t\tloading: true,\n\t\tallRecordsSelected: false,\n\t\toverrideModal: {\n\t\t\tshowModal: false,\n\t\t\tchannelInfo: {},\n\t\t\tagentInfo: {}\n\t\t}\n\t},\n\tproperties: {\n\t\tagentId: {\n\t\t\tdefault: ''\n\t\t},\n\t\tagentName: {\n\t\t\tdefault: ''\n\t\t},\n\t\tavatar: {\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-record-list';\nimport '../sn-manager-channels-header';\nimport { getHeaderProps } from './helper';\nimport '../sn-manager-user-override-capacity';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-alert';\nimport get from 'lodash/get';\n\nconst view = state => {\n\tconst channels = get(state, 'channelsData');\n\tconst len = channels.length;\n\tlet cssClass =\n\t\tlen >= 4\n\t\t\t? 'sn-manager-user-channels-4'\n\t\t\t: 'sn-manager-user-channels' + '-' + len;\n\treturn (\n\t\t<div className={cssClass}>\n\t\t\t{state.loading\n\t\t\t\t? _renderEmptyState(state.loading)\n\t\t\t\t: _renderList(state)}\n\t\t</div>\n\t);\n};\n\nconst _renderList = state => {\n\tconst {\n\t\tgridProps,\n\t\tselectedChannelIds,\n\t\tallRecordsSelected,\n\t\toverrideModal,\n\t\tchannelsData\n\t} = state;\n\tconst headerProps = getHeaderProps(state);\n\tconst len = channelsData.length;\n\tlet cssClass =\n\t\tlen >= 4\n\t\t\t? 'sn-manager-now-table-4'\n\t\t\t: 'sn-manager-now-table' + '-' + len;\n\treturn (\n\t\t<div>\n\t\t\t{overrideModal.showModal ? (\n\t\t\t\t<sn-manager-user-override-capacity\n\t\t\t\t\tchannelInfo={overrideModal.channelInfo}\n\t\t\t\t\tagentInfo={overrideModal.agentInfo}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t<sn-manager-channels-header {...headerProps} />\n\t\t\t<div className={cssClass}>\n\t\t\t\t<now-table\n\t\t\t\t\tallRecordsSelected={allRecordsSelected}\n\t\t\t\t\thideCheckboxHover={true}\n\t\t\t\t\thideLastRefreshedText={true}\n\t\t\t\t\thideTitleRowCount={true}\n\t\t\t\t\thideRefreshButton={true}\n\t\t\t\t\thideFilterPanel={true}\n\t\t\t\t\thideDeclarativeActions={true}\n\t\t\t\t\thideRowSelector={!headerProps.isButtonEnabled}\n\t\t\t\t\tloading={false}\n\t\t\t\t\tgridModel={gridProps}\n\t\t\t\t\thideColumnGrouping={true}\n\t\t\t\t\tselectedRecords={selectedChannelIds}\n\t\t\t\t\thidePanel={true}\n\t\t\t\t\thideSelectAll={true}\n\t\t\t\t\thidePagination={true}\n\t\t\t\t\thideColumnFiltering={true}\n\t\t\t\t\thideColumnSorting={false}\n\t\t\t\t\thideCellFilter={true}\n\t\t\t\t\thideQuickEdit={true}\n\t\t\t\t\thideMenuButton={true}\n\t\t\t\t\thideHeader={true}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nconst _renderEmptyState = () => {\n\treturn (\n\t\t<now-empty-state\n\t\t\tbodyText={false}\n\t\t\theaderText={false}\n\t\t\ttype=\"loading\"\n\t\t\tvariant=\"fit\"\n\t\t/>\n\t);\n};\n\nexport default view;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-user-override-capacity', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tisApplyDisabled: true,\n\t\toverridenCapacity: '',\n\t\tmessage: ''\n\t},\n\tproperties: {\n\t\tchannelInfo: {\n\t\t\tdefault: {}\n\t\t},\n\t\tagentInfo: {\n\t\t\tdefault: {}\n\t\t}\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-tabs';\nimport '@servicenow/now-record-list-connected';\nimport '@servicenow/now-button';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-record-list';\nimport '@servicenow/now-alert';\nimport { footerAction } from './helpers';\nimport overrideCapacityView from './overrideCapacityView';\nimport { OVERRIDE_CAPACITY_LABEL } from './constants';\nimport get from 'lodash/get';\n\nconst view = state => {\n\tconst isApplyDisabled = get(state, 'isApplyDisabled', true);\n\treturn (\n\t\t<now-modal\n\t\t\tfooter-actions={footerAction(isApplyDisabled)}\n\t\t\theader-label={OVERRIDE_CAPACITY_LABEL}\n\t\t\topened={true}\n\t\t\tcontentFullWidth={false}\n\t\t\tsize=\"lg\"\n\t\t>\n\t\t\t{overrideCapacityView(state)}\n\t\t</now-modal>\n\t);\n};\n\nexport default view;\n","import '@servicenow/now-label-value';\nimport '@servicenow/now-label-value';\nimport { getLabelsAndValues } from './helpers';\nimport '@servicenow/now-alert';\nimport '@servicenow/now-input';\nimport {\n\tNUMBER,\n\tAGENT_NAME_LABEL,\n\tCAPACITY_LABEL,\n\tSELECTED_AGENT_LABEL,\n\tOVERRIDE_CAPACITY_INPUT_LABEL\n} from './constants';\nimport get from 'lodash/get';\nimport '@servicenow/now-avatar';\n\nexport default state => {\n\tconst channelIfo = get(state, 'properties.channelInfo', {});\n\tconst agentInfo = get(state, 'properties.agentInfo', {});\n\tconst message = get(state, 'message', '');\n\tlet avatarPayload = {\n\t\tuserName: agentInfo.name,\n\t\timageSrc: agentInfo.avatar,\n\t\tsize: 'md',\n\t\tariaHidden: true\n\t};\n\treturn (\n\t\t<div className=\"agent-capacity-override\">\n\t\t\t{message ? (\n\t\t\t\t<div className=\"agent-capacity-override-alert\">\n\t\t\t\t\t<now-alert\n\t\t\t\t\t\tstatus=\"info\"\n\t\t\t\t\t\ticon=\"bell-outline\"\n\t\t\t\t\t\theader=\"\"\n\t\t\t\t\t\tcontent={message}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<div className=\"agent-capacity-override-selected-agent\">\n\t\t\t\t<div className=\"agent-capacity-override-label\">\n\t\t\t\t\t<now-label-value-stacked\n\t\t\t\t\t\titem-min-width=\"4rem\"\n\t\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\t\titems={getLabelsAndValues(channelIfo)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"agent-capacity-override-selected-agent-header-title\">\n\t\t\t\t\t{SELECTED_AGENT_LABEL}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"agent-capacity-override-selected-agent-list\">\n\t\t\t\t\t<div className=\"agent-capacity-override-selected-agent-list-header\">\n\t\t\t\t\t\t<span className=\"agent-capacity-override-selected-agent-header\">\n\t\t\t\t\t\t\t{AGENT_NAME_LABEL}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"agent-capacity-override-selected-agent-header\">\n\t\t\t\t\t\t\t{CAPACITY_LABEL}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"agent-capacity-override-selected-agent-list-value\">\n\t\t\t\t\t\t<div className=\"agent-capacity-override-selected-agent-list-avatar\">\n\t\t\t\t\t\t\t<now-avatar {...avatarPayload} />\n\t\t\t\t\t\t\t<span className=\"agent-capacity-override-selected-agent-header\">\n\t\t\t\t\t\t\t\t{agentInfo.name}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"agent-capacity-override-selected-agent-list-capacity\">\n\t\t\t\t\t\t\t<span className=\"agent-capacity-override-selected-agent-header\">\n\t\t\t\t\t\t\t\t{channelIfo.totalCapacity}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"agent-capacity-override-input\">\n\t\t\t\t<now-input\n\t\t\t\t\ttype={NUMBER}\n\t\t\t\t\tlabel={OVERRIDE_CAPACITY_INPUT_LABEL}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tplaceholder=\"Enter new capacity\"\n\t\t\t\t></now-input>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport {\n\tNOW_INPUT,\n\tFOOTER_CLICKED,\n\tOVERRIDE_CAPACITY_REQUESTED,\n\tNOW_MODAL_OPENED_SET,\n\tOVERRIDE_CAPACITY_SUCCEEDED,\n\tOVERRIDE_CAPACITY_FAILED,\n\tOVERRIDE_AGENTS_CAPACITY_ENDPOINT,\n\tFETCH_OVERRIDE_CAPACITY_MESSAGE,\n\tFETCH_OVERRIDE_CAPACITY_MESSAGE_SUCCEEDED,\n\tFETCH_OVERRIDE_CAPACITY_MESSAGE_FAILED,\n\tOVERRIDE_AGENTS_CAPACITY_MESSAGE_ENDPOINT\n} from './constants';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport get from 'lodash/get';\nimport { USER_CHANNEL_MODAL_CLOSED } from '../sn-manager-user-channels-container/constants';\nimport { USER_OVERVIEW_SHOW_OVERRIDE_MSG } from '../../teams/sn-manager-user-overview/constants';\n\nconst buildBootstrapData = ({ dispatch }) => {\n\tdispatch(FETCH_OVERRIDE_CAPACITY_MESSAGE);\n};\n\nconst handleCapacityInput = ({ action, updateState }) => {\n\tconst overridenCapacityValue = get(action, 'payload.fieldValue', '');\n\tif (\n\t\toverridenCapacityValue != '' &&\n\t\tNumber.isInteger(parseFloat(overridenCapacityValue)) &&\n\t\tparseFloat(overridenCapacityValue) >= 0\n\t)\n\t\tupdateState({\n\t\t\toverridenCapacity: overridenCapacityValue,\n\t\t\tisApplyDisabled: false\n\t\t});\n\telse\n\t\tupdateState({\n\t\t\tisApplyDisabled: true\n\t\t});\n};\n\nconst handleFooterClicked = ({ state, action, dispatch }) => {\n\tconst payload = get(action, 'payload.action', '');\n\tconst overridenCapacity = get(state, 'overridenCapacity');\n\tconst agentInfo = get(state, 'properties.agentInfo');\n\tconst channelInfo = get(state, 'properties.channelInfo');\n\t!payload.id\n\t\t? dispatch(OVERRIDE_CAPACITY_REQUESTED, {\n\t\t\tdata: {\n\t\t\t\tagentId: agentInfo.sysId,\n\t\t\t\tchannelId: channelInfo.sysId,\n\t\t\t\tcapacityOverride: overridenCapacity\n\t\t\t}\n\t\t  }) // eslint-disable-line\n\t\t: dispatch(NOW_MODAL_OPENED_SET);\n};\n\nconst handleEscapeAndDismiss = ({ dispatch }) => {\n\tdispatch(USER_CHANNEL_MODAL_CLOSED);\n};\n\nconst handleOverrideCapacitySucceeded = ({ action, dispatch }) => {\n\tconst payload = get(action, 'payload.result');\n\tdispatch(USER_CHANNEL_MODAL_CLOSED, {\n\t\tcapacityOverride: {\n\t\t\tisDone: true,\n\t\t\tisError: payload.isError,\n\t\t\tmessage: payload.message\n\t\t}\n\t});\n\tdispatch(USER_OVERVIEW_SHOW_OVERRIDE_MSG, {\n\t\tcapacityOverride: {\n\t\t\tisDone: true,\n\t\t\tisError: payload.isError,\n\t\t\tmessage: payload.message\n\t\t}\n\t});\n};\n\nconst handlOverrideCapacityRequested = createHttpEffect(\n\tOVERRIDE_AGENTS_CAPACITY_ENDPOINT,\n\t{\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tdataParam: 'data',\n\t\tsuccessActionType: OVERRIDE_CAPACITY_SUCCEEDED,\n\t\terrorActionType: OVERRIDE_CAPACITY_FAILED\n\t}\n);\n\nconst handleFOverrideCapacityMessage = createHttpEffect(\n\tOVERRIDE_AGENTS_CAPACITY_MESSAGE_ENDPOINT,\n\t{\n\t\tmethod: 'GET',\n\t\tsuccessActionType: FETCH_OVERRIDE_CAPACITY_MESSAGE_SUCCEEDED,\n\t\terrorActionType: FETCH_OVERRIDE_CAPACITY_MESSAGE_FAILED\n\t}\n);\n\nconst handleOverrideCapacityMessageSucceeded = ({ action, updateState }) => {\n\tconst payload = get(action, 'payload.result', {});\n\tconst message = get(payload, 'message', '');\n\tupdateState({\n\t\tmessage: message\n\t});\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: buildBootstrapData,\n\t[FETCH_OVERRIDE_CAPACITY_MESSAGE]: handleFOverrideCapacityMessage,\n\t[FETCH_OVERRIDE_CAPACITY_MESSAGE_SUCCEEDED]: handleOverrideCapacityMessageSucceeded,\n\t[FETCH_OVERRIDE_CAPACITY_MESSAGE_FAILED]: logErrorEffect,\n\t[NOW_INPUT]: handleCapacityInput,\n\t[FOOTER_CLICKED]: handleFooterClicked,\n\t[OVERRIDE_CAPACITY_REQUESTED]: handlOverrideCapacityRequested,\n\t[OVERRIDE_CAPACITY_SUCCEEDED]: handleOverrideCapacitySucceeded,\n\t[OVERRIDE_CAPACITY_FAILED]: logErrorEffect,\n\t[NOW_MODAL_OPENED_SET]: handleEscapeAndDismiss\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.agent-capacity-override-label{position:relative;top:.5rem}.agent-capacity-override-selected-agent{overflow:auto;height:14rem;position:relative;top:.5rem;font-size:1rem}.agent-capacity-override-selected-agent-list-header{display:flex;flex:1;padding:.5rem;border:.0625rem solid rgb(var(--now-color--neutral-3,209,214,214));width:99.9%;border-bottom:0;font-weight:600}.agent-capacity-override-selected-agent-list-value{display:flex;flex:1;padding:.5rem;border:.0625rem solid rgb(var(--now-color--neutral-3,209,214,214));width:99.9%}.agent-capacity-override-selected-agent-header{width:50%;position:relative;left:.625rem;padding:.125rem}.agent-capacity-override-selected-agent-list{position:relative;top:2rem}.agent-capacity-override-selected-agent-list-avatar{position:relative;width:50%;left:.5rem}.agent-capacity-override-selected-agent-list-capacity{width:50%;align-items:center;display:flex}.agent-capacity-override-selected-agent-header-title{font-size:1.25rem;position:relative;font-size:.75rem;top:1.5rem;color:grey;margin-bottom:.25rem}.agent-capacity-override-input{display:flex;flex:1;position:sticky;bottom:1rem;height:4rem}\", \"\"]);\n\n// exports\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n\tbuildGridModel,\n\tremoveChannelId,\n\tgetSelectedChannelObj\n} from './helper';\nimport {\n\tFETCH_USER_CHANNEL_DATA,\n\tFETCH_USER_CHANNEL_DATA_SUCCEEDED,\n\tFETCH_USER_CHANNEL_DATA_FAILED,\n\tAGENTS_CHANNEL_INFO_ENDPOINT,\n\tUSER_CHANNEL_REFRESH_REQUESTED,\n\tNOW_BUTTON_CLICKED,\n\tGRID_CHECKBOX_TOGGLED,\n\tOPEN_RECORD,\n\tITEM_SELECTED,\n\tSERVICE_CHANNEL_TABLE,\n\tUSER_CHANNEL_OVERRIDE_CLICKED,\n\tUSER_CHANNEL_MODAL_CLOSED\n} from './constants';\n\nconst buildBootstrapData = ({ state, dispatch, updateState }) => {\n\tconst agentSysId = get(state, 'properties.agentId');\n\tconst agentName = get(state, 'properties.agentName');\n\tconst avatar = get(state, 'properties.avatar');\n\tupdateState({\n\t\tloading: true,\n\t\toverrideModal: {\n\t\t\t...state.overrideModal,\n\t\t\tagentInfo: {\n\t\t\t\tsysId: agentSysId,\n\t\t\t\tname: agentName,\n\t\t\t\tavatar: avatar\n\t\t\t}\n\t\t}\n\t});\n\tdispatch(FETCH_USER_CHANNEL_DATA, { agentId: agentSysId });\n};\n\nconst fetchUserChannelData = createHttpEffect(AGENTS_CHANNEL_INFO_ENDPOINT, {\n\tmethod: 'GET',\n\tpathParams: ['agentId'],\n\tsuccessActionType: FETCH_USER_CHANNEL_DATA_SUCCEEDED,\n\terrorActionType: FETCH_USER_CHANNEL_DATA_FAILED\n});\n\nconst fetchUserChannelDataSucceeded = ({ updateState, action }) => {\n\tconst data = get(action, 'payload.result', []);\n\tupdateState({\n\t\tchannelsData: data,\n\t\tgridProps: buildGridModel(data),\n\t\trowCount: data.length,\n\t\tloading: false,\n\t\tdataUpdatedTime: Date.now(),\n\t\tselectedChannelIds: [],\n\t\tallRecordsSelected: false,\n\t\tisOverrideButtonDisabled: true\n\t});\n};\n\nconst handleNowButtonClicked = ({ action, dispatch }) => {\n\tconst payload = get(action, 'payload', {});\n\tif (payload.event)\n\t\tdispatch(payload.event, {\n\t\t\t...payload\n\t\t});\n};\n\nconst handleCheckboxToggled = ({ state, action, updateState }) => {\n\tlet allRecordsSelected = false;\n\tlet selectedChannelIds = [...state.selectedChannelIds];\n\tconst payload = get(action, 'payload', '');\n\tlet record = payload.value;\n\tif (Array.isArray(record)) {\n\t\tif (payload.checked) {\n\t\t\tselectedChannelIds = record;\n\t\t\tif (record.length > 1) allRecordsSelected = true;\n\t\t\telse allRecordsSelected = false;\n\t\t} else {\n\t\t\tallRecordsSelected = false;\n\t\t\tselectedChannelIds = [];\n\t\t}\n\t} else {\n\t\tif (payload.checked) selectedChannelIds.push(payload.value);\n\t\telse\n\t\t\tselectedChannelIds = removeChannelId(\n\t\t\t\tselectedChannelIds,\n\t\t\t\tpayload.value\n\t\t\t);\n\t}\n\tupdateState({\n\t\tselectedChannelIds: selectedChannelIds,\n\t\tisOverrideButtonDisabled: selectedChannelIds.length == 1 ? false : true,\n\t\tallRecordsSelected: allRecordsSelected\n\t});\n\tif (state.isOverrideButtonDisabled && selectedChannelIds.length) {\n\t\tconst channelData = getSelectedChannelObj(\n\t\t\tstate.channelsData,\n\t\t\tselectedChannelIds[0]\n\t\t);\n\t\tif (channelData.length > 0) {\n\t\t\tconst channelInfo = channelData[0];\n\t\t\tupdateState({\n\t\t\t\toverrideModal: {\n\t\t\t\t\t...state.overrideModal,\n\t\t\t\t\tchannelInfo: {\n\t\t\t\t\t\tsysId: channelInfo.channelId,\n\t\t\t\t\t\tname: channelInfo.channelName,\n\t\t\t\t\t\tdefaultCapacity: channelInfo.defaultCapacity,\n\t\t\t\t\t\ttotalCapacity: channelInfo.totalCapacity,\n\t\t\t\t\t\tcapacityInUse: channelInfo.capacityInUse\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\n\nconst openRecordHandler = ({ action, dispatch }) => {\n\tconst {\n\t\tpayload: { cell }\n\t} = action;\n\tconst sysId = get(cell, 'columnData.value');\n\tdispatch(ITEM_SELECTED, {\n\t\ttable: SERVICE_CHANNEL_TABLE,\n\t\tsys_id: sysId,\n\t\tparams: {\n\t\t\tsysId: sysId,\n\t\t\tselectedTabIndex: 0\n\t\t}\n\t});\n};\nconst handleOverrideClicked = ({ state, updateState }) => {\n\tupdateState({\n\t\toverrideModal: {\n\t\t\t...state.overrideModal,\n\t\t\tshowModal: true\n\t\t}\n\t});\n};\n\nconst handleOverrideModalClosed = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst capacityOverride = get(action, 'payload.capacityOverride', []);\n\tif (!isEmpty(capacityOverride)) {\n\t\tupdateState({\n\t\t\toverrideModal: {\n\t\t\t\t...state.overrideModal,\n\t\t\t\tshowModal: false\n\t\t\t},\n\t\t\tselectedChannelIds: [],\n\t\t\tisOverrideButtonDisabled: true\n\t\t});\n\t\tdispatch(USER_CHANNEL_REFRESH_REQUESTED);\n\t} else {\n\t\tupdateState({\n\t\t\toverrideModal: {\n\t\t\t\t...state.overrideModal,\n\t\t\t\tshowModal: false\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: buildBootstrapData,\n\t[FETCH_USER_CHANNEL_DATA]: fetchUserChannelData,\n\t[FETCH_USER_CHANNEL_DATA_SUCCEEDED]: fetchUserChannelDataSucceeded,\n\t[FETCH_USER_CHANNEL_DATA_FAILED]: logErrorEffect,\n\t[USER_CHANNEL_REFRESH_REQUESTED]: buildBootstrapData,\n\t[USER_CHANNEL_OVERRIDE_CLICKED]: handleOverrideClicked,\n\t[NOW_BUTTON_CLICKED]: handleNowButtonClicked,\n\t[GRID_CHECKBOX_TOGGLED]: handleCheckboxToggled,\n\t[OPEN_RECORD]: openRecordHandler,\n\t[USER_CHANNEL_MODAL_CLOSED]: handleOverrideModalClosed\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.sn-manager-user-channels-0{height:18.75rem}.sn-manager-user-channels-0,.sn-manager-user-channels-1{background:RGB(var(--now-color--neutral-1,246,247,247));margin:0 .75rem 1.5rem 0;padding:0 1rem 1rem}.sn-manager-user-channels-1{height:11.75rem}.sn-manager-user-channels-2{height:13.75rem}.sn-manager-user-channels-2,.sn-manager-user-channels-3{background:RGB(var(--now-color--neutral-1,246,247,247));margin:0 .75rem 1.5rem 0;padding:0 1rem 1rem}.sn-manager-user-channels-3{height:16.25rem}.sn-manager-user-channels-4{background:RGB(var(--now-color--neutral-1,246,247,247));margin:0 .75rem 1.5rem 0;padding:0 1rem 1rem;height:18.75rem}.sn-manager-now-table{height:12rem}.sn-manager-now-table,.sn-manager-now-table-0{display:block;overflow-y:auto;border:.0625rem solid rgb(var(--now-color--neutral-3,209,214,214))}.sn-manager-now-table-0{height:13rem}.sn-manager-now-table-1{height:6rem}.sn-manager-now-table-1,.sn-manager-now-table-2{display:block;overflow-y:auto;border:.0625rem solid rgb(var(--now-color--neutral-3,209,214,214))}.sn-manager-now-table-2{height:8rem}.sn-manager-now-table-3{height:10.5rem}.sn-manager-now-table-3,.sn-manager-now-table-4{display:block;overflow-y:auto;border:.0625rem solid rgb(var(--now-color--neutral-3,209,214,214))}.sn-manager-now-table-4{height:13rem}\", \"\"]);\n\n// exports\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers.js';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-user-current-work-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tloading: true,\n\t\treports: {},\n\t\trefreshFrequency: '5'\n\t},\n\tproperties: {\n\t\tsysId: ''\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-heading';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-uxf-visualization-connected';\nimport { isEmpty } from 'lodash';\n\nimport { HEADER, LOADING_BODY_TEXT, LOADING_HEADER_TEXT } from './constants';\n\nconst view = state => {\n\tconst { reports, loading, refreshFrequency } = state;\n\n\tconst totalNumberOfReports = Object.keys(reports).length;\n\tconst numberOfReports = totalNumberOfReports > 5 ? 5 : totalNumberOfReports;\n\tconst className = `kpi-container-inner report-size-${numberOfReports}`;\n\n\treturn (\n\t\t<div className=\"current-work-container\">\n\t\t\t<div className=\"kpi-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={HEADER}\n\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\tvariant=\"header-tertiary\"\n\t\t\t\t\thas-no-margin\n\t\t\t\t></now-heading>\n\t\t\t</div>\n\t\t\t<div className=\"kpi-container\">\n\t\t\t\t<div className={className}>\n\t\t\t\t\t{!isEmpty(Object.keys(reports))\n\t\t\t\t\t\t? _renderReports(reports, refreshFrequency)\n\t\t\t\t\t\t: _renderEmptyState(loading)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst _renderReports = (reportData, refreshFrequency) => {\n\treturn Object.values(reportData).map(reportItem => {\n\t\tconst element = (\n\t\t\t<now-uxf-visualization-connected\n\t\t\t\tlabel={reportItem.report}\n\t\t\t\tdataConfigurations={JSON.stringify(\n\t\t\t\t\treportItem.data_configurations\n\t\t\t\t)}\n\t\t\t\trefreshFrequency={refreshFrequency}\n\t\t\t\tborder={true}\n\t\t\t/>\n\t\t);\n\t\treturn element;\n\t});\n};\n\nconst _renderEmptyState = loading => {\n\treturn (\n\t\t<div className=\"empty-state-loader\">\n\t\t\t{loading ? (\n\t\t\t\t<now-empty-state\n\t\t\t\t\tbodyText={LOADING_BODY_TEXT}\n\t\t\t\t\theaderText={LOADING_HEADER_TEXT}\n\t\t\t\t\ttype=\"loading\"\n\t\t\t\t\tvariant=\"fit\"\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<now-empty-state />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport {\n\tFETCH_AGENT_KPI,\n\tFETCH_AGENT_KPI_SUCCEEDED,\n\tFETCH_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG_SUCCESS,\n\tERROR_OCCURED,\n\tAGENT_KPI_ENDPOINT\n} from './constants';\nimport { SYS_PROP_KPI_AUTO_REFRESH_INTERVAL_SECONDS } from '../common/constants';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport get from 'lodash/get';\nimport { getProperty } from 'sn-uxpage-presource';\n\nconst buildBootstrapData = ({ state, dispatch, updateState }) => {\n\tconst agentSysId = get(state, 'properties.sysId');\n\tconst refreshFrequency = getProperty(\n\t\tSYS_PROP_KPI_AUTO_REFRESH_INTERVAL_SECONDS,\n\t\t'30'\n\t);\n\tupdateState({ loading: true, refreshFrequency: refreshFrequency });\n\tdispatch(FETCH_AGENT_KPI, { agentId: agentSysId });\n};\n\nconst fetchAgentKpi = createHttpEffect(AGENT_KPI_ENDPOINT, {\n\tmethod: 'GET',\n\tpathParams: ['agentId'],\n\tsuccessActionType: FETCH_AGENT_KPI_SUCCEEDED,\n\terrorActionType: ERROR_OCCURED\n});\n\nconst fetchAgentKpiSucceeded = ({ updateState, action, dispatch }) => {\n\tconst reports = get(action, 'payload.result', []);\n\tif (Object.keys(reports).length == 0) {\n\t\tupdateState({ loading: false });\n\t}\n\tupdateState({ reports: reports, shouldRender: false });\n\tObject.keys(reports).map(reportId => {\n\t\tdispatch(\n\t\t\tFETCH_KPI_REPORTCONFIG,\n\t\t\t{ sys_id: reportId },\n\t\t\t{ sys_id: reportId }\n\t\t);\n\t});\n};\n\nconst fetchKpiReportConfig = createHttpEffect(\n\t'/api/now/reporting/reports/series/:sys_id',\n\t{\n\t\tmethod: 'POST',\n\t\tpathParams: ['sys_id'],\n\t\tbatch: false,\n\t\tsuccessActionType: FETCH_KPI_REPORTCONFIG_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchKpiReportConfigSuccess = ({ state, action, updateState }) => {\n\tconst reports = get(state, 'reports');\n\tconst agentSysId = get(state, 'properties.sysId');\n\tconst reportId = get(action, 'meta.sys_id', '');\n\tconst reportConfig = get(action, 'payload.result.data_configurations', '');\n\treportConfig[0].filter_query +=\n\t\t'^' + reports[reportId].filter.field + '=' + agentSysId;\n\n\tupdateState({\n\t\tpath: `reports.${reportId}`,\n\t\tvalue: { data_configurations: reportConfig },\n\t\toperation: 'merge'\n\t});\n\tupdateState({ loading: false });\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: buildBootstrapData,\n\t[FETCH_AGENT_KPI]: fetchAgentKpi,\n\t[FETCH_AGENT_KPI_SUCCEEDED]: fetchAgentKpiSucceeded,\n\t[FETCH_KPI_REPORTCONFIG]: fetchKpiReportConfig,\n\t[FETCH_KPI_REPORTCONFIG_SUCCESS]: fetchKpiReportConfigSuccess,\n\t[ERROR_OCCURED]: logErrorEffect\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.current-work-container{background:RGB(var(--now-color--neutral-1,246,247,247));margin:1.5rem}.current-work-container .kpi-header{display:flex;height:2rem}.current-work-container .kpi-header now-heading{float:left;margin:1rem}.current-work-container .kpi-container{padding:0 0 1rem 1rem}.current-work-container .kpi-container-inner{display:flex;flex-flow:row wrap;position:relative}.current-work-container .kpi-container-inner.report-size-1 now-uxf-visualization-connected,.current-work-container .kpi-container-inner.report-size-2 now-uxf-visualization-connected{flex:0 1 calc(50% - 0.75rem)}.current-work-container .kpi-container-inner.report-size-3 now-uxf-visualization-connected{flex:0 1 calc(33% - 0.75rem)}.current-work-container .kpi-container-inner.report-size-4 now-uxf-visualization-connected{flex:0 1 calc(25% - 0.75rem)}.current-work-container .kpi-container-inner.report-size-5 now-uxf-visualization-connected{flex:0 1 calc(20% - 0.75rem)}.current-work-container .kpi-container-inner now-uxf-visualization-connected{background:RGB(var(--now-color--neutral-0,255,255,255));margin:1.5rem .75rem 0 0;min-width:12.5rem}.empty-state-loader{text-align:center;margin:0 auto;width:100%}.empty-state-loader now-empty-state{display:block;align-items:center;flex:1}\", \"\"]);\n\n// exports\n","import './agent-presence-history-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\n\nexport default createCustomElement(\n\t'sn-manager-agent-presence-history-container',\n\t{\n\t\trenderer: {\n\t\t\ttype: snabbdom,\n\t\t\tview\n\t\t},\n\t\tproperties: {\n\t\t\tagentId: {\n\t\t\t\tdefault: ''\n\t\t\t}\n\t\t},\n\t\tinitialState: {\n\t\t\tagentPresenceHistory: [],\n\t\t\ttitle: '',\n\t\t\tloading: true,\n\t\t\tencodedQuery: ''\n\t\t},\n\t\tactionHandlers,\n\t\tstyles\n\t}\n);\n","import get from 'lodash/get';\nimport '@servicenow/now-chart-donut-pie';\nimport '../sn-manager-channels-header';\nimport { getHeaderProps, formatTime, getInteraction } from './helpers';\nimport '@servicenow/now-empty-state';\n\nconst view = state => {\n\treturn (\n\t\t<div className=\"grayed-panel\">\n\t\t\t{state.loading ? _renderEmptyState() : _renderNowDonutChart(state)}\n\t\t</div>\n\t);\n};\n\nconst _renderNowDonutChart = state => {\n\tconst presenceStateHistory = get(state, 'agentPresenceHistory', []);\n\tconst headerProps = getHeaderProps(state);\n\treturn (\n\t\t<div>\n\t\t\t<sn-manager-channels-header {...headerProps} />\n\t\t\t<div className=\"sn-manager-wrapper-padding\">\n\t\t\t\t<div className=\"sn-manager-wrapper-border\">\n\t\t\t\t\t<now-chart-donut-pie\n\t\t\t\t\t\ttype=\"donut\"\n\t\t\t\t\t\torderBy=\"dataOrder\"\n\t\t\t\t\t\ttooltipConfig={{}}\n\t\t\t\t\t\tregisterPosition=\"right\"\n\t\t\t\t\t\tinteractions={getInteraction()}\n\t\t\t\t\t\tregisterConfig={{\n\t\t\t\t\t\t\tshowPercentages: false,\n\t\t\t\t\t\t\torientation: 'vertical',\n\t\t\t\t\t\t\tconfig: {\n\t\t\t\t\t\t\t\tfontSize: '0.75rem'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjustifyItems: 'center',\n\t\t\t\t\t\t\tdisableGrid: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tlabelTruncation={0}\n\t\t\t\t\t\tshowDataLabels={false}\n\t\t\t\t\t\tdataLabelConfig={{\n\t\t\t\t\t\t\tshowTotal: false,\n\t\t\t\t\t\t\tvalueType: 'value',\n\t\t\t\t\t\t\tlabelSize: '1rem'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tyFormat={time => formatTime(time.toString())}\n\t\t\t\t\t\tlocale=\"en-US\"\n\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\theight=\"auto\"\n\t\t\t\t\t\taccessibilityConfig={{ monochrome: false }}\n\t\t\t\t\t\tconfigAria={{}}\n\t\t\t\t\t\tseriesData={presenceStateHistory}\n\t\t\t\t\t\tseriesConfig={{\n\t\t\t\t\t\t\tpie: { x: 'presenceState', y: 'time' }\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nconst _renderEmptyState = () => {\n\treturn (\n\t\t<now-empty-state\n\t\t\tbodyText={false}\n\t\t\theaderText={false}\n\t\t\ttype=\"loading\"\n\t\t\tvariant=\"fit\"\n\t\t/>\n\t);\n};\n\nexport default view;\n","module.exports = __TECTONIC__$servicenow_now_chart_donut_pie;","import {\n\tAGENT_PRESENCE_HISTORY_REFRESH_REQUESTED,\n\tAGENT_PRESENCE_HISTORY_PIE_CLICKED,\n\tHOUR,\n\tHOURS,\n\tMINUTE,\n\tMINUTES\n} from './constants';\n\nexport const getHeaderProps = state => {\n\treturn {\n\t\theaderLabel: state.title,\n\t\theaderLevel: '2',\n\t\theaderVariant: 'header-tertiary',\n\t\thideRowCount: true,\n\t\thideRefreshText: false,\n\t\tisButtonEnabled: false,\n\t\tcustomConf: {\n\t\t\ttype: 'card'\n\t\t},\n\t\tdataUpdatedTime: state.dataUpdatedTime,\n\t\trefreshEvent: AGENT_PRESENCE_HISTORY_REFRESH_REQUESTED\n\t};\n};\n\nexport const getInteraction = () => {\n\treturn [\n\t\t{\n\t\t\teventName: 'click',\n\t\t\tdispatchName: AGENT_PRESENCE_HISTORY_PIE_CLICKED\n\t\t}\n\t];\n};\n\nexport const formatTime = time => {\n\tif (time == '') return;\n\tconst splittedValue = time.split('.');\n\tlet hour = 0;\n\tlet min = 0;\n\tlet formattedString = '';\n\tif (splittedValue.length == 2) {\n\t\thour = parseInt(splittedValue[0]);\n\t\tmin = parseInt(splittedValue[1]);\n\t}\n\tif (hour != 0)\n\t\tif (hour == 1) formattedString += hour + ' ' + HOUR;\n\t\telse formattedString += hour + ' ' + HOURS;\n\tif (min != 0)\n\t\tif (min == 1) formattedString += ' ' + min + ' ' + MINUTE;\n\t\telse formattedString += ' ' + min + ' ' + MINUTES;\n\n\treturn formattedString.trim();\n};\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport {\n\tFETCH_AGENT_PRESENCE_STATE_HISTORY_ENDPONT,\n\tFETCH_AGENT_PRESENCE_STATE_HISTORY,\n\tFETCH_AGENT_PRESENCE_STATE_HISTORY_SUCCEDDED,\n\tFETCH_AGENT_PRESENCE_STATE_HISTORY_FAILED,\n\tAGENT_PRESENCE_HISTORY_REFRESH_REQUESTED,\n\tAGENT_PRESENCE_HISTORY_PIE_CLICKED,\n\tNOW_BUTTON_CLICKED,\n\tITEM_SELECTED,\n\tAWA_AGENT_PRESENCE_TABLE,\n\tTITLE,\n\tCOLUMNS\n} from './constants';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport get from 'lodash/get';\n\nconst fetchBootStrapData = ({ state, dispatch, updateState }) => {\n\tupdateState({\n\t\tloading: true\n\t});\n\tconst agentId = get(state, 'properties.agentId', '');\n\tdispatch(FETCH_AGENT_PRESENCE_STATE_HISTORY, {\n\t\tagentId: agentId\n\t});\n};\n\nconst handleFetchAgentPresenceHistory = createHttpEffect(\n\tFETCH_AGENT_PRESENCE_STATE_HISTORY_ENDPONT,\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['agentId'],\n\t\tsuccessActionType: FETCH_AGENT_PRESENCE_STATE_HISTORY_SUCCEDDED,\n\t\terrorActionType: FETCH_AGENT_PRESENCE_STATE_HISTORY_FAILED\n\t}\n);\n\nconst handleFetchAgentPresenceHistorySucceeded = ({ updateState, action }) => {\n\tconst payload = get(action, 'payload.result', {});\n\tupdateState({\n\t\tagentPresenceHistory: payload.presenceHistory,\n\t\ttitle: payload.title ? payload.title : TITLE,\n\t\tencodedQuery: payload.encodedQuery,\n\t\tdataUpdatedTime: Date.now(),\n\t\tloading: false\n\t});\n};\n\nconst handleNowButtonClicked = ({ action, dispatch }) => {\n\tconst payload = get(action, 'payload', {});\n\tif (payload.event)\n\t\tdispatch(payload.event, {\n\t\t\t...payload\n\t\t});\n};\n\nconst handlePieClicked = ({ state, dispatch }) => {\n\tconst encodedQuery = get(state, 'encodedQuery', '');\n\tlet params = {\n\t\tlistTitle: TITLE,\n\t\ttable: AWA_AGENT_PRESENCE_TABLE,\n\t\tquery: encodedQuery,\n\t\tcolumns: COLUMNS,\n\t\tdisableQuickEdit: true\n\t};\n\tdispatch(ITEM_SELECTED, {\n\t\trenderer_type: 'layout',\n\t\ttitle: TITLE,\n\t\tparams\n\t});\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: fetchBootStrapData,\n\t[FETCH_AGENT_PRESENCE_STATE_HISTORY]: handleFetchAgentPresenceHistory,\n\t[FETCH_AGENT_PRESENCE_STATE_HISTORY_SUCCEDDED]: handleFetchAgentPresenceHistorySucceeded,\n\t[FETCH_AGENT_PRESENCE_STATE_HISTORY_FAILED]: logErrorEffect,\n\t[AGENT_PRESENCE_HISTORY_REFRESH_REQUESTED]: fetchBootStrapData,\n\t[NOW_BUTTON_CLICKED]: handleNowButtonClicked,\n\t[AGENT_PRESENCE_HISTORY_PIE_CLICKED]: handlePieClicked\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.grayed-panel{height:20.25rem;background:RGB(var(--now-color--neutral-1,246,247,247))}.grayed-panel .sn-manager-wrapper-padding{padding:0 1rem 1rem}.grayed-panel .sn-manager-wrapper-padding .sn-manager-wrapper-border{height:15rem;border:1px solid rgb(var(--now-color--neutral-3,209,214,214));background:RGB(var(--now-color--neutral-0,255,255,255))}now-empty-state{position:relative;top:1rem}\", \"\"]);\n\n// exports\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.overview-main-container{width:100%;display:flex;flex-direction:row;height:100%;overflow-y:auto;align-items:center;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}.user-profile{flex-grow:1;width:16.66%;display:inline-block;align-self:stretch;min-height:100vh;overflow:visible}.user-profile .user-profile-details{align-self:stretch;height:100%}.user-profile .user-profile-details sn-manager-user-details{min-height:100%;display:flex}.profile-stats{flex-grow:1;width:83.33%;display:inline-block;align-self:flex-start;min-height:100vh;border-left:1px solid rgb(var(--now-color--neutral-7,135,147,148));margin-left:-.0625rem}.stats-content{flex-direction:row;align-items:flex-start;flex-wrap:wrap;flex-flow:row wrap;align-content:flex-end}.stats-card-container{flex-grow:1;display:flex;flex-direction:row;margin-top:1.5rem}.stats-card-container sn-manager-profile-card{margin:0 1rem;width:25%}.flexed-container-rows{display:flex;flex-direction:row;padding:0 1.5rem}.flexed-container-rows .flexed{width:50%}.flexed-container-rows .flexed,.flexed-container-rows .flexed-custom{flex:1;display:flex;flex-direction:column}.flexed-container-rows .flexed-custom .profile-lists-container{margin-left:.75rem}.flexed-container-rows .flexed-custom .profile-lists-container sn-manager-agent-presence-history-container,.flexed-container-rows .flexed-custom .profile-lists-container sn-manager-embedded-list:not(:last-child){display:block;margin-bottom:1.5rem}now-alert{margin-left:1.5rem;margin-right:1.5rem}\", \"\"]);\n\n// exports\n","import { t } from 'sn-translate';\n\nconst properties = {\n\ttable: { default: 'sys_user' },\n\tsysId: {},\n\tuser: {},\n\tgForm: {},\n\tcurrentUser: {},\n\tview: {},\n\tsublists: {\n\t\tdefault: [\n\t\t\t{\n\t\t\t\theader: t('Upcoming Time Off'),\n\t\t\t\ttable: 'sn_shift_planning_agent_schedule_request',\n\t\t\t\tquery:\n\t\t\t\t\t'agent={{sysId}}^end>javascript:gs.endOfToday()^ORDERBYstart',\n\t\t\t\tview: 'manager_workspace_user_profile'\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: t('Assigned Training'),\n\t\t\t\ttable: 'sn_coaching_assessment_recommended_learning',\n\t\t\t\tquery:\n\t\t\t\t\t'assessment.assessment_of={{sysId}}^learning_finished=pending^ORDERBYdue_date',\n\t\t\t\tview: 'manager_workspace_user_profile'\n\t\t\t}\n\t\t]\n\t},\n\tagentDetails: {\n\t\tdefault: {\n\t\t\tname: '',\n\t\t\tisAgentAssociatedWithAwa: false,\n\t\t\tavatar: ''\n\t\t}\n\t}\n};\n\nexport default properties;\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport get from 'lodash/get';\nimport {\n\tFETCH_AGENT_ASSOCIATION_WITH_AWA,\n\tFETCH_AGENT_ASSOCIATION_WITH_AWA_SUCCEEDED,\n\tFETCH_AGENT_ASSOCIATION_WITH_AWA_FAILED,\n\tFETCH_AGENT_ASSOCIATION_WITH_AWA_ENDPOINT,\n\tUSER_OVERVIEW_SHOW_OVERRIDE_MSG,\n\tALERT_ACTION_CLICKED\n} from './constants';\n\nconst buildBootstrapData = ({ state, dispatch }) => {\n\tconst agentSysId = get(state, 'properties.sysId');\n\tdispatch(FETCH_AGENT_ASSOCIATION_WITH_AWA, { agentId: agentSysId });\n};\n\nconst fetchAgentAssociationWithAwa = createHttpEffect(\n\tFETCH_AGENT_ASSOCIATION_WITH_AWA_ENDPOINT,\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['agentId'],\n\t\tsuccessActionType: FETCH_AGENT_ASSOCIATION_WITH_AWA_SUCCEEDED,\n\t\terrorActionType: FETCH_AGENT_ASSOCIATION_WITH_AWA_FAILED\n\t}\n);\n\nconst fetchAgentAssociationWithAwaSucceeded = ({\n\tupdateProperties,\n\taction\n}) => {\n\tconst userInfo = get(action, 'payload.result', false);\n\tupdateProperties({\n\t\tagentDetails: { ...userInfo }\n\t});\n};\n\nconst handleAlertActionClicked = ({ updateState }) => {\n\tupdateState({\n\t\tcapacityOverride: {\n\t\t\tisDone: false,\n\t\t\tmessage: '',\n\t\t\tisError: false\n\t\t}\n\t});\n};\n\nconst showCapacityOverrideMessage = ({ action, updateState }) => {\n\tconst capacityOverride = get(action, 'payload.capacityOverride', []);\n\tupdateState({\n\t\tcapacityOverride: capacityOverride\n\t});\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: buildBootstrapData,\n\t[FETCH_AGENT_ASSOCIATION_WITH_AWA]: fetchAgentAssociationWithAwa,\n\t[FETCH_AGENT_ASSOCIATION_WITH_AWA_SUCCEEDED]: fetchAgentAssociationWithAwaSucceeded,\n\t[FETCH_AGENT_ASSOCIATION_WITH_AWA_FAILED]: logErrorEffect,\n\t[USER_OVERVIEW_SHOW_OVERRIDE_MSG]: showCapacityOverrideMessage,\n\t[ALERT_ACTION_CLICKED]: handleAlertActionClicked\n};\n","import './user-schedule-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport scheduleActionHandlers from './actionHandlers';\ncreateCustomElement('sn-manager-user-schedule-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\ttable: { default: 'sys_user' },\n\t\tsysId: {},\n\t\ttimezone: {},\n\t\tstartDate: {},\n\t\tendDate: {}\n\t},\n\tstyles,\n\t...scheduleActionHandlers\n});\n","import '../../common/calendar';\nimport get from 'lodash/get';\nimport {\n\tSCHEDULE_AGENT_CALENDAR_VIEW,\n\tSCHEDULE_PROPERTY_DEFAULTS\n} from '../../common/constants';\nconst view = state => {\n\tconst sysId = get(state, 'properties.sysId', '');\n\tconst startDate = get(state, 'properties.startDate', '');\n\tconst endDate = get(state, 'properties.endDate', '');\n\treturn (\n\t\t<div className=\"user-profile-schedule\">\n\t\t\t<sn-manager-calendar\n\t\t\t\tavailableViewTypes={'CALENDAR'}\n\t\t\t\tstartingView={'MONTH'}\n\t\t\t\tindividualAgents={sysId}\n\t\t\t\tselectedTab={SCHEDULE_AGENT_CALENDAR_VIEW}\n\t\t\t\tstartDate={startDate}\n\t\t\t\tendDate={endDate}\n\t\t\t\ttimezone={get(\n\t\t\t\t\tstate,\n\t\t\t\t\t'properties.timezone',\n\t\t\t\t\tSCHEDULE_PROPERTY_DEFAULTS.TIMEZONE\n\t\t\t\t)}\n\t\t\t\tdatePickerTemplates={\n\t\t\t\t\tSCHEDULE_PROPERTY_DEFAULTS.DATE_PICKER_TEMPLATE\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import './sn-manager-calendar.js';\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".user-profile-schedule{height:100%}.user-profile-schedule sn-manager-calendar{display:block;height:100%}\", \"\"]);\n\n// exports\n","import get from 'lodash/get';\nimport moment from 'moment';\nimport { actionTypes } from '@servicenow/ui-core';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tSCHEDULE_ACTIONS,\n\tSCHEDULE_PROPERTY_DEFAULTS\n} from '../../common/constants';\nimport { CURRENT_USER_QUERY } from '../../common/queries';\nimport isEmpty from 'lodash/isEmpty';\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst bootstrap = ({ state, dispatch, updateProperties }) => {\n\tupdateProperties({\n\t\tstartDate: moment(get(state, 'properties.startDate', {}))\n\t\t\t.startOf('month')\n\t\t\t.format('YYYY-MM-DD'),\n\t\tendDate: moment(get(state, 'properties.endDate', {}))\n\t\t\t.endOf('month')\n\t\t\t.format('YYYY-MM-DD')\n\t});\n\n\tdispatch(SCHEDULE_ACTIONS.FETCH_CURRENT_USER_DATA, {});\n};\n\nconst setUserData = ({ action, updateProperties }) => {\n\tconst user = get(action, 'payload.data.GlideDomain_Query.user', null);\n\tif (!isEmpty(user)) {\n\t\tupdateProperties({\n\t\t\ttimezone: get(user, 'timeZone', SCHEDULE_PROPERTY_DEFAULTS.TIMEZONE)\n\t\t});\n\t}\n};\n\nconst fetchCurrentUserData = createGraphQLEffect(CURRENT_USER_QUERY, {\n\tsuccessActionType: SCHEDULE_ACTIONS.CURRENT_USER_DATA_OBTAINED,\n\terrorActionType: SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA\n});\n\nconst handleRetrievalError = ({ action, updateState }) => {\n\tupdateState({\n\t\tpath: 'error',\n\t\tvalue: get(action, 'error', true),\n\t\toperation: 'set'\n\t});\n};\n\nconst handlers = {\n\t[COMPONENT_BOOTSTRAPPED]: bootstrap,\n\t[SCHEDULE_ACTIONS.FETCH_CURRENT_USER_DATA]: fetchCurrentUserData,\n\t[SCHEDULE_ACTIONS.CURRENT_USER_DATA_OBTAINED]: setUserData,\n\t[SCHEDULE_ACTIONS.COULD_NOT_RETRIEVE_DATA]: handleRetrievalError\n};\n\nexport default {\n\tactionHandlers: handlers\n};\n","export { default } from './team-performance';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport chromeTabActive, {\n\tCHROME_TAB_ACTIVE_CHANGED\n} from '../../common/behaviors/chromeTabActive';\nimport styles from './styles.scss';\n\nexport default createCustomElement('sn-manager-team-performance', {\n\trenderer: { type: snabbdom, view },\n\tbehaviors: [chromeTabActive],\n\tproperties: {\n\t\tsysId: {}, // sys_user_group,\n\t\tactive: {\n\t\t\tdefault: true\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[CHROME_TAB_ACTIVE_CHANGED]: ({ action, updateProperties }) => {\n\t\t\tconst { active } = action.payload;\n\n\t\t\tupdateProperties({ active });\n\t\t}\n\t},\n\tstyles\n});\n","import { t } from 'sn-translate';\n\nexport default ({ properties: { sysId, active } }) => {\n\treturn (\n\t\t<sn-manager-team-drilldown team={sysId} active={active}>\n\t\t\t<now-heading\n\t\t\t\tslot=\"heading\"\n\t\t\t\tlabel={t('Performance')}\n\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\tlevel=\"2\"\n\t\t\t\twontWrap={true}\n\t\t\t\thas-no-margin\n\t\t\t/>\n\t\t</sn-manager-team-drilldown>\n\t);\n};\n","import {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_DISCONNECTED\n} from '@servicenow/ui-core/lib/constants';\nimport { closestElement } from '../../utils/domUtils';\n\nexport const CHROME_TAB_ACTIVE_CHANGED = 'CHROME_TAB_ACTIVE_CHANGED';\n\n// We need to use a WeakMap to keep track of components using this behavior.\n// Using WeakMap is better than Map in this case because we need to store \n// the host element as the key in the map.\nconst mutationObserver = new WeakMap();\n\nexport const setupObserver = (host, dispatch) => {\n\tif (mutationObserver.has(host)) {\n\t\treturn;\n\t}\n\n\t// traverse the DOM up until we found the Chrome tab panel\n\tconst chromeTab = closestElement('.chrome-tab-panel', host);\n\n\tif (!chromeTab) {\n\t\treturn;\n\t}\n\n\tconst observer = new MutationObserver(mutations => {\n\t\tconst active = mutations[0].oldValue !== null;\n\n\t\tdispatch(CHROME_TAB_ACTIVE_CHANGED, { host, active });\n\t});\n\n\tobserver.observe(chromeTab, {\n\t\tattributes: true,\n\t\tattributeOldValue: true,\n\t\tattributeFilter: ['hidden'] // Chrome adds `hidden` attribute when it hides a tab panel\n\t});\n\n\tmutationObserver.set(host, observer);\n};\n\nexport default {\n\tname: 'chromeTabActive',\n\tactionHandlers: {\n\t\t[COMPONENT_BOOTSTRAPPED]: ({ action, dispatch }) => {\n\t\t\tconst { host } = action.payload;\n\n\t\t\tsetupObserver(host, dispatch);\n\t\t},\n\t\t[COMPONENT_DISCONNECTED]: ({ action }) => {\n\t\t\tconst { host } = action.payload;\n\n\t\t\tif (mutationObserver.has(host)) {\n\t\t\t\tmutationObserver.get(host).disconnect();\n\t\t\t\tmutationObserver.delete(host);\n\t\t\t}\n\t\t}\n\t}\n};\n","export const closestElement = (selector, base) => {\n\tconst helper = element => {\n\t\tif (!element || element === document || element === window) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (element.assignedSlot) {\n\t\t\telement = element.assignedSlot;\n\t\t}\n\n\t\tconst found = element.closest(selector);\n\t\treturn found ? found : helper(element.getRootNode().host);\n\t};\n\n\treturn helper(base);\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"sn-manager-team-drilldown{--header--padding:1.5rem 1.5rem 1rem}\", \"\"]);\n\n// exports\n","export { default } from './team-drilldown';\n","import '@servicenow/now-card';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-pagination';\nimport '@servicenow/now-record-list';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-date-range-picker';\nimport '@servicenow/now-highlighted-value';\nimport '@servicenow/now-record-list-connected';\nimport 'sn-component-visualization';\nimport { createCustomElement } from '@servicenow/ui-core';\nimport { userPreferencesBehavior } from 'sn-user-preferences';\nimport { t } from 'sn-translate';\nimport { teamDateChangeBehavior } from '../../utils/teamUtils';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport actionHandlers from './actionHandlers';\nimport initialState from './initialState';\nimport view from './view';\nimport styles from './styles.scss';\n\n/**\n * A component that displays performance metrics of a team or a user during a specific date range.\n *\n * ```jsx\n * <sn-manager-team-drilldown\n *    team=\"f31b182fb3210010ed7fc9c316a8dc2a\"\n *    indicator=\"31efe602d7130100b96d45a3ce610300\"\n *    member=\"8aacb036b3120010ed7fc9c316a8dcec\"\n * />\n * ```\n *\n * @seismicElement sn-manager-member-drilldown\n * @summary Displays detailed information about performance of a user.\n *\n * */\nexport default createCustomElement('sn-manager-team-drilldown', {\n\trenderer: { type: snabbdom, view },\n\tbehaviors: [userPreferencesBehavior, teamDateChangeBehavior],\n\tproperties: {\n\t\tactive: {\n\t\t\tdefault: false\n\t\t},\n\n\t\t/**\n\t\t * `sys_id` of an existing `sys_user_group` record.\n\t\t * @type {string}\n\t\t */\n\t\tteam: {\n\t\t\trequired: true,\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\t/**\n\t\t * `sys_id` of an existing `sys_user` record.\n\t\t * Optional. If omitted, show metrics of all members in team\n\t\t * @type {string}\n\t\t */\n\t\tmember: {\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\t/**\n\t\t * `sys_id` of an existing `pa_indicators` record.\n\t\t * Optional. If omitted, show metrics of parent KPIs only\n\t\t * @type {string}\n\t\t */\n\t\tindicator: {\n\t\t\tschema: { type: 'string' }\n\t\t},\n\t\t/**\n\t\t * Option to show Primary label next to member name\n\t\t */\n\t\tprimaryGroupLabel: {\n\t\t\tdefault: {\n\t\t\t\tvisible: true,\n\t\t\t\ttext: t('Primary')\n\t\t\t}\n\t\t}\n\t},\n\tinitialState,\n\tactionHandlers,\n\tstyles\n});\n","module.exports = __TECTONIC__$servicenow_now_pagination;","import {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED\n} from '@servicenow/ui-core/lib/constants';\nimport { t } from 'sn-translate';\nimport { getUserPreference, setUserPreference } from 'sn-user-preferences';\nimport {\n\tfetchParentIndicatorsEffect,\n\tfetchIndicatorsEffect,\n\tfetchScoresEffect,\n\tfetchPrimaryMembersEffect,\n\tfetchMemberDataEffect\n} from './effects';\nimport {\n\tSTATUS,\n\tDEFAULT_PAGE_SIZE,\n\tFETCH_PARENT_INDICATORS,\n\tFETCH_PARENT_INDICATORS_START,\n\tFETCH_PARENT_INDICATORS_SUCCESS,\n\tFETCH_PARENT_INDICATORS_ERROR,\n\tFETCH_INDICATORS,\n\tFETCH_INDICATORS_START,\n\tFETCH_INDICATORS_SUCCESS,\n\tFETCH_INDICATORS_ERROR,\n\tFETCH_SCORES,\n\tFETCH_SCORES_START,\n\tFETCH_SCORES_SUCCESS,\n\tFETCH_SCORES_ERROR,\n\tFETCH_PRIMARY_MEMBERS,\n\tFETCH_PRIMARY_MEMBERS_START,\n\tFETCH_PRIMARY_MEMBERS_SUCCESS,\n\tFETCH_PRIMARY_MEMBERS_ERROR,\n\tFETCH_MEMBER_DATA,\n\tFETCH_MEMBER_DATA_START,\n\tFETCH_MEMBER_DATA_SUCCESS,\n\tFETCH_MEMBER_DATA_ERROR\n} from './constants';\nimport {\n\tSN_VISUALIZATION_POINT_CLICKED,\n\tPAGINATION_LIMIT_UPDATE,\n\tPAGINATION_PAGE_UPDATE,\n\tHTTP_ERROR_OCCURRED,\n\tCONTACT_ADMIN_MESSAGE\n} from '../../common/constants';\nimport {\n\tcreateTeam,\n\tcreateIndicatorFromJson,\n\tcreateMemberFromJson\n} from './utils';\nimport { isMemberPropProvided } from './selectors';\nimport initialState from './initialState';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport * as commonSelectors from '../../common/selectors';\n\nexport const updateStatus = status => ({ updateState }) =>\n\tupdateState({ status });\n\nexport const fetchScores = (state, dispatch) => {\n\tconst {\n\t\tteam,\n\t\tmember,\n\t\tindicator,\n\t\tparentIndicators,\n\t\tchildIndicators,\n\t\tpagination,\n\t\tproperties\n\t} = state;\n\tconst { dateRange } = properties;\n\tconst primaryBreakdown = commonSelectors.getAssignmentGroupBreakdown();\n\tconst secondaryBreakDown = commonSelectors.getAssignedToBreakdown();\n\tconst breakdownRelation = commonSelectors.getMembersBreakdownRelation();\n\tlet indicators = [];\n\n\tif (!isEmpty(indicator)) {\n\t\tindicators.push(indicator);\n\t}\n\n\tif (!isEmpty(parentIndicators)) {\n\t\tindicators = indicators.concat(parentIndicators);\n\t}\n\n\tif (!isEmpty(childIndicators)) {\n\t\tindicators = indicators.concat(childIndicators);\n\t}\n\n\tif (!isEmpty(team) && !isEmpty(indicators)) {\n\t\tconst uuid = indicators.map(\n\t\t\tindicator => `${indicator.sysId}:${primaryBreakdown}:${team.sysId}`\n\t\t);\n\n\t\tconst breakdown = secondaryBreakDown;\n\t\tconst sort = secondaryBreakDown;\n\t\tconst sortDesc = false;\n\t\tconst limit = 99999; // API should support -1 as unlimited\n\t\tconst from = dateRange.start;\n\t\tconst to = dateRange.end;\n\t\tconst data = {\n\t\t\tuuid,\n\t\t\tbreakdown,\n\t\t\tbreakdownRelation,\n\t\t\tsort,\n\t\t\tsortDesc,\n\t\t\tlimit,\n\t\t\tfrom,\n\t\t\tto\n\t\t};\n\n\t\tif (isEmpty(member)) {\n\t\t\tdata.page = pagination.page;\n\t\t\tdata.pageSize = pagination.pageSize;\n\t\t} else {\n\t\t\tdata.elementsFilter = [member.sysId];\n\t\t\tdata.page = 1;\n\t\t\tdata.pageSize = 1;\n\t\t}\n\n\t\tdispatch(\n\t\t\tFETCH_SCORES,\n\t\t\t{ data },\n\t\t\t{\n\t\t\t\tnewState: {\n\t\t\t\t\tteam,\n\t\t\t\t\tindicator,\n\t\t\t\t\tparentIndicators,\n\t\t\t\t\tchildIndicators,\n\t\t\t\t\tdateRange,\n\t\t\t\t\tpagination\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport const fetchPrimaryMembers = (state, { dispatch, updateState }) => {\n\tconst { team, members } = state;\n\tconst uncachedMembers = members.filter(\n\t\tmember => !team.primaryMembersMap.hasOwnProperty(member.sysId)\n\t);\n\n\tif (isEmpty(uncachedMembers)) {\n\t\tupdateState(state);\n\t\treturn;\n\t}\n\n\tdispatch(\n\t\tFETCH_PRIMARY_MEMBERS,\n\t\t{\n\t\t\tteam: team.sysId,\n\t\t\tmembers: uncachedMembers.map(member => member.sysId).join(',')\n\t\t},\n\t\t{\n\t\t\tnewState: state,\n\t\t\tuncachedMembers\n\t\t}\n\t);\n};\n\nexport const handleFetchIndicatorsSuccess = ({\n\taction,\n\tstate,\n\tproperties,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst result = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sn_team_perf_kpi_group_m2m_sys_user_group._results[0]',\n\t\t{}\n\t);\n\n\tconst assignmentGroup = get(result, 'assignment_group');\n\n\tif (!assignmentGroup) {\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'empty',\n\t\t\t\theaderText: t('No KPI group configured yet'),\n\t\t\t\tbodyText: CONTACT_ADMIN_MESSAGE\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tconst indicatorResult = get(\n\t\tresult,\n\t\t'_query.indicator.sn_team_perf_kpi_group_m2m_pa_indicators._results[0]'\n\t);\n\n\tconst parentIndicatorsResult = get(\n\t\tresult,\n\t\t'_query.indicators.sn_team_perf_kpi_group_m2m_pa_indicators._results'\n\t);\n\n\tconst childIndicatorsResults = get(\n\t\tresult,\n\t\t'_query.childIndicators.sn_team_perf_kpi_group_m2m_pa_indicators._results'\n\t);\n\n\tconst indicator = indicatorResult\n\t\t? createIndicatorFromJson(indicatorResult)\n\t\t: state.indicator;\n\n\tconst parentIndicators = parentIndicatorsResult\n\t\t? parentIndicatorsResult.map(createIndicatorFromJson)\n\t\t: state.parentIndicators;\n\n\tconst childIndicators = childIndicatorsResults\n\t\t? childIndicatorsResults.map(createIndicatorFromJson)\n\t\t: state.childIndicators;\n\n\tif (\n\t\tisEmpty(indicator) &&\n\t\tisEmpty(parentIndicators) &&\n\t\tisEmpty(childIndicators)\n\t) {\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'empty',\n\t\t\t\theaderText: t('No KPIs configured yet'),\n\t\t\t\tbodyText: CONTACT_ADMIN_MESSAGE\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tconst team = createTeam(\n\t\tassignmentGroup.sysId,\n\t\tassignmentGroup.displayValue\n\t);\n\n\tconst member = isMemberPropProvided(state)\n\t\t? { sysId: properties.member } // at this time, we don't have member data yet, so create a sample one\n\t\t: null;\n\n\tfetchScores(\n\t\t{\n\t\t\t...state,\n\t\t\tteam,\n\t\t\tmember,\n\t\t\tindicator,\n\t\t\tparentIndicators,\n\t\t\tchildIndicators\n\t\t},\n\t\tdispatch\n\t);\n};\n\nexport const handleFetchScoresSuccess = ({\n\taction,\n\tstate,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst [teamJson, ...membersJson] = get(action.payload, 'result.rows', [\n\t\tnull\n\t]);\n\n\tif (isEmpty(membersJson)) {\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'empty',\n\t\t\t\theaderText: t('No data yet'),\n\t\t\t\tbodyText: t(\n\t\t\t\t\t'Once we have data for this group, the KPIs will be displayed here.'\n\t\t\t\t)\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tlet { member, members } = state;\n\tlet {\n\t\tteam,\n\t\tpagination,\n\t\tparentIndicators,\n\t\tchildIndicators\n\t} = action.meta.newState;\n\n\tteam = { ...team, scores: teamJson.scores };\n\n\tif (isMemberPropProvided(state)) {\n\t\tmember = { ...member, ...createMemberFromJson(membersJson[0]) };\n\t} else {\n\t\tmembers = membersJson.map(createMemberFromJson);\n\t\tpagination = {\n\t\t\t...pagination,\n\t\t\trowCount: get(action.payload, 'result.row_count', 0)\n\t\t};\n\t}\n\n\tconst newState = {\n\t\t...action.meta.newState,\n\t\tteam,\n\t\tmember,\n\t\tmembers,\n\t\tpagination,\n\t\tstatus: STATUS.scoresLoaded\n\t};\n\n\tif (\n\t\t!isEmpty(members) &&\n\t\t(!isEmpty(parentIndicators) || !isEmpty(childIndicators))\n\t) {\n\t\tfetchPrimaryMembers(newState, { dispatch, updateState });\n\t} else {\n\t\tupdateState(newState);\n\t}\n};\n\nexport const handleFetchMemberDataSuccess = ({\n\taction,\n\tstate,\n\tupdateState\n}) => {\n\tconst result = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sys_user._results[0]',\n\t\t{}\n\t);\n\tconst member = {\n\t\t...state.member,\n\t\tavatar: get(result, 'avatar.displayValue', null)\n\t};\n\tupdateState({ member, status: STATUS.memberDataLoaded });\n};\n\nexport const handleFetchPrimaryMembersSuccess = ({ action, updateState }) => {\n\tconst { newState, uncachedMembers } = action.meta;\n\tconst { team } = newState;\n\tconst result = get(action.payload, 'result', []);\n\tconst resultMap = result.reduce((map, user) => {\n\t\tmap[user.sys_id] = true;\n\t\treturn map;\n\t}, {});\n\tconst primaryMembersMap = uncachedMembers.reduce((map, member) => {\n\t\tmap[member.sysId] = resultMap.hasOwnProperty(member.sysId);\n\t\treturn map;\n\t}, {});\n\tconst newTeam = {\n\t\t...team,\n\t\tprimaryMembersMap: {\n\t\t\t...team.primaryMembersMap,\n\t\t\t...primaryMembersMap\n\t\t}\n\t};\n\n\tupdateState({\n\t\t...action.meta.newState,\n\t\tteam: newTeam,\n\t\tstatus: STATUS.primaryMembersLoaded\n\t});\n};\n\nexport const handlePagination = ({ action, state, dispatch, updateState }) => {\n\tconst pagination = { ...state.pagination };\n\n\tif (action.type === PAGINATION_PAGE_UPDATE) {\n\t\tpagination.page = action.payload.page;\n\t} else if (action.type === PAGINATION_LIMIT_UPDATE) {\n\t\tpagination.pageSize = action.payload.limit;\n\t\tpagination.page = Math.min(\n\t\t\tpagination.page,\n\t\t\tMath.ceil(pagination.rowCount / pagination.pageSize)\n\t\t);\n\t}\n\n\tif (!isEqual(pagination, state.pagination)) {\n\t\tfetchScores({ ...state, pagination }, dispatch);\n\t\tupdateState({ pagination });\n\n\t\tif (action.type === PAGINATION_LIMIT_UPDATE) {\n\t\t\tsetUserPreference('rowcount', pagination.pageSize, dispatch);\n\t\t}\n\t}\n};\n\nexport const handleTimeSeriesClick = ({ action, updateState }) => {\n\tconst x = get(action.payload, 'data.allData.Series.x', '');\n\n\tif (isEmpty(x)) {\n\t\treturn;\n\t}\n\n\tconst timestamp = Number(x);\n\tconst selectedDate = moment.utc(timestamp).format('YYYY-MM-DD');\n\n\tupdateState({ selectedDate });\n};\n\nexport const onComponentBootstrapped = ({\n\tstate,\n\tproperties,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst { team, indicator } = properties;\n\n\tif (isEmpty(team)) {\n\t\tthrow new Error('team prop is empty');\n\t}\n\n\tif (isMemberPropProvided(state)) {\n\t\tdispatch(FETCH_MEMBER_DATA, { sys_id: properties.member });\n\t} else {\n\t\tconst rowcount = Number(\n\t\t\tgetUserPreference('rowcount', { properties }, DEFAULT_PAGE_SIZE)\n\t\t);\n\t\tif (rowcount !== state.pagination.pageSize) {\n\t\t\tupdateState({\n\t\t\t\tpagination: { ...state.pagination, pageSize: rowcount }\n\t\t\t});\n\t\t}\n\t}\n\n\tif (indicator) {\n\t\tdispatch(FETCH_INDICATORS, { team, indicator });\n\t} else {\n\t\tdispatch(FETCH_PARENT_INDICATORS, { team });\n\t}\n};\n\nexport const onComponentPropertyChanged = ({\n\taction,\n\tstate,\n\tproperties,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst { name, value, previousValue } = action.payload;\n\n\tif (isEqual(value, previousValue)) {\n\t\treturn;\n\t}\n\n\tif (name === 'dateRange') {\n\t\tupdateState({ selectedDate: null });\n\t\tfetchScores(state, dispatch);\n\t} else if (name === 'indicator' || name === 'team' || name === 'member') {\n\t\tupdateState(initialState);\n\t\tonComponentBootstrapped({ state, properties, dispatch, updateState });\n\t}\n};\n\nexport const handleErrors = ({ action, state, updateState }) => {\n\tswitch (action.type) {\n\tcase FETCH_PARENT_INDICATORS_ERROR:\n\tcase FETCH_INDICATORS_ERROR:\n\tcase FETCH_SCORES_ERROR:\n\tcase FETCH_MEMBER_DATA_ERROR:\n\tcase FETCH_PRIMARY_MEMBERS_ERROR:\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'loading-error',\n\t\t\t\theaderText: t('Unable to fetch metric data')\n\t\t\t}\n\t\t});\n\t\tbreak;\n\tcase HTTP_ERROR_OCCURRED:\n\t\tif (isEmpty(state.error)) {\n\t\t\tupdateState({\n\t\t\t\terror: {\n\t\t\t\t\ttype: 'loading-error'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: onComponentBootstrapped,\n\t[COMPONENT_PROPERTY_CHANGED]: {\n\t\teffect: onComponentPropertyChanged,\n\t\tmodifier: { name: 'debounce', delay: 300 }\n\t},\n\t[FETCH_PARENT_INDICATORS]: fetchParentIndicatorsEffect,\n\t[FETCH_PARENT_INDICATORS_START]: updateStatus(STATUS.indicatorsLoading),\n\t[FETCH_PARENT_INDICATORS_SUCCESS]: handleFetchIndicatorsSuccess,\n\t[FETCH_PARENT_INDICATORS_ERROR]: handleErrors,\n\t[FETCH_INDICATORS]: fetchIndicatorsEffect,\n\t[FETCH_INDICATORS_START]: updateStatus(STATUS.indicatorsLoading),\n\t[FETCH_INDICATORS_SUCCESS]: handleFetchIndicatorsSuccess,\n\t[FETCH_INDICATORS_ERROR]: handleErrors,\n\t[FETCH_SCORES]: fetchScoresEffect,\n\t[FETCH_SCORES_START]: updateStatus(STATUS.scoresLoading),\n\t[FETCH_SCORES_SUCCESS]: handleFetchScoresSuccess,\n\t[FETCH_SCORES_ERROR]: handleErrors,\n\t[FETCH_MEMBER_DATA]: fetchMemberDataEffect,\n\t[FETCH_MEMBER_DATA_START]: updateStatus(STATUS.memberDataLoading),\n\t[FETCH_MEMBER_DATA_SUCCESS]: handleFetchMemberDataSuccess,\n\t[FETCH_MEMBER_DATA_ERROR]: handleErrors,\n\t[FETCH_PRIMARY_MEMBERS]: fetchPrimaryMembersEffect,\n\t[FETCH_PRIMARY_MEMBERS_START]: updateStatus(STATUS.primaryMembersLoading),\n\t[FETCH_PRIMARY_MEMBERS_SUCCESS]: handleFetchPrimaryMembersSuccess,\n\t[FETCH_PRIMARY_MEMBERS_ERROR]: handleErrors,\n\t[PAGINATION_PAGE_UPDATE]: handlePagination,\n\t[PAGINATION_LIMIT_UPDATE]: handlePagination,\n\t[SN_VISUALIZATION_POINT_CLICKED]: handleTimeSeriesClick,\n\t[HTTP_ERROR_OCCURRED]: handleErrors\n};\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tFETCH_PARENT_INDICATORS_START,\n\tFETCH_PARENT_INDICATORS_SUCCESS,\n\tFETCH_PARENT_INDICATORS_ERROR,\n\tFETCH_INDICATORS_START,\n\tFETCH_INDICATORS_SUCCESS,\n\tFETCH_INDICATORS_ERROR,\n\tFETCH_SCORES_START,\n\tFETCH_SCORES_SUCCESS,\n\tFETCH_SCORES_ERROR,\n\tFETCH_PRIMARY_MEMBERS_START,\n\tFETCH_PRIMARY_MEMBERS_SUCCESS,\n\tFETCH_PRIMARY_MEMBERS_ERROR,\n\tFETCH_MEMBER_DATA_START,\n\tFETCH_MEMBER_DATA_SUCCESS,\n\tFETCH_MEMBER_DATA_ERROR\n} from './constants';\nimport {\n\tfetchParentIndicatorsQuery,\n\tfetchIndicatorsQuery,\n\tfetchMemberDataQuery\n} from './queries';\n\nexport const fetchScoresEffect = createHttpEffect(\n\t'/api/now/pa/scores/data_frame?multi_indicator_breakdowns=true',\n\t{\n\t\tmethod: 'POST',\n\t\tdataParam: 'data',\n\t\tstartActionType: FETCH_SCORES_START,\n\t\tsuccessActionType: FETCH_SCORES_SUCCESS,\n\t\terrorActionType: FETCH_SCORES_ERROR\n\t}\n);\n\nexport const fetchParentIndicatorsEffect = createGraphQLEffect(\n\tfetchParentIndicatorsQuery,\n\t{\n\t\ttemplateVarList: ['team'],\n\t\tstartActionType: FETCH_PARENT_INDICATORS_START,\n\t\tsuccessActionType: FETCH_PARENT_INDICATORS_SUCCESS,\n\t\terrorActionType: FETCH_PARENT_INDICATORS_ERROR\n\t}\n);\n\nexport const fetchIndicatorsEffect = createGraphQLEffect(fetchIndicatorsQuery, {\n\ttemplateVarList: ['team', 'indicator'],\n\tstartActionType: FETCH_INDICATORS_START,\n\tsuccessActionType: FETCH_INDICATORS_SUCCESS,\n\terrorActionType: FETCH_INDICATORS_ERROR\n});\n\nexport const fetchMemberDataEffect = createGraphQLEffect(fetchMemberDataQuery, {\n\tvariableList: ['sys_id'],\n\tstartActionType: FETCH_MEMBER_DATA_START,\n\tsuccessActionType: FETCH_MEMBER_DATA_SUCCESS,\n\terrorActionType: FETCH_MEMBER_DATA_ERROR\n});\n\nexport const fetchPrimaryMembersEffect = createHttpEffect(\n\t'/api/now/table/sys_user?sysparm_query=primary_group%3D:team^sys_idIN:members&sysparm_fields=sys_id',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['team', 'members'],\n\t\tstartActionType: FETCH_PRIMARY_MEMBERS_START,\n\t\tsuccessActionType: FETCH_PRIMARY_MEMBERS_SUCCESS,\n\t\terrorActionType: FETCH_PRIMARY_MEMBERS_ERROR\n\t}\n);\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nexport const fetchParentIndicatorsQuery = `{\n\tGlideRecord_Query {\n\t\tsn_team_perf_kpi_group_m2m_sys_user_group(queryConditions: \"assignment_group={{team}}\", pagination: {limit: 1}) {\n\t\t\t_results {\n\t\t\t\tassignment_group {\n\t\t\t\t\tsysId: value\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\t_query {\n\t\t\t\t\tindicators: GlideRecord_Query {\n\t\t\t\t\t\tsn_team_perf_kpi_group_m2m_pa_indicators(queryConditions: \"kpi_group=$$parent.kpi_group$$^parentISEMPTY^ORDERBYorder\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkpi {\n\t\t\t\t\t\t\t\t\tsysId: value\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisplay_aggregate {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const fetchIndicatorsQuery = `{\n\tGlideRecord_Query {\n\t\tsn_team_perf_kpi_group_m2m_sys_user_group(queryConditions: \"assignment_group={{team}}\", pagination: {limit: 1}) {\n\t\t\t_results {\n\t\t\t\tassignment_group {\n\t\t\t\t\tsysId: value\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\t_query {\n\t\t\t\t\tindicator: GlideRecord_Query {\n\t\t\t\t\t\tsn_team_perf_kpi_group_m2m_pa_indicators(queryConditions: \"kpi_group=$$parent.kpi_group$$^kpi={{indicator}}\", pagination: {limit: 1}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkpi {\n\t\t\t\t\t\t\t\t\tsysId: value\n\t\t\t\t\t\t\t\t\t_reference {\n\t\t\t\t\t\t\t\t\t\tcube {\n\t\t\t\t\t\t\t\t\t\t\t_reference {\n\t\t\t\t\t\t\t\t\t\t\t\tfacts_table {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfacts_table_pktable {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfacts_table_pkview {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisplay_aggregate {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tchildIndicators: GlideRecord_Query {\n\t\t\t\t\t\tsn_team_perf_kpi_group_m2m_pa_indicators(queryConditions: \"kpi_group=$$parent.kpi_group$$^parent.kpi={{indicator}}^ORDERBYorder\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tsys_id {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkpi {\n\t\t\t\t\t\t\t\t\tsysId: value\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel {\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisplay_aggregate {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nexport const fetchMemberDataQuery = `query ($sys_id: String!) {\n  GlideRecord_Query {\n    sys_user(sys_id: $sys_id) {\n      _results {\n        avatar {\n          displayValue\n        }\n      }\n    }\n  }\n}\n`;\n","import { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport { focusWithinClassManager } from '../../utils/focusUtils';\nimport {\n\tITEM_SELECTED,\n\tSYS_USER_GROUP,\n\tSYS_USER,\n\tSCORE_NA_LABEL\n} from '../../common/constants';\nimport { MEMBER_NAME } from './constants';\nimport isEmpty from 'lodash/isEmpty';\n\nconst scoreTextStyles = {\n\tcolor: 'RGB(var(--now-color--neutral-12,66,80,81))'\n};\n\nconst renderMemberName = ({ cell, dispatch }, checkFocusIn) => (\n\t<Fragment>\n\t\t<a\n\t\t\ttarget=\"_blank\"\n\t\t\thref=\"javascript:void(0)\"\n\t\t\ton-focus={checkFocusIn}\n\t\t\ton-blur={checkFocusIn}\n\t\t\ton-click={evt => {\n\t\t\t\tevt.preventDefault();\n\t\t\t\tconst additionalIdentifier =\n\t\t\t\t\t(cell.team ? cell.team.sysId : '-1') +\n\t\t\t\t\t(cell.member ? cell.member.sysId : '-1');\n\t\t\t\tdispatch(ITEM_SELECTED, {\n\t\t\t\t\ttable: SYS_USER,\n\t\t\t\t\tsys_id: cell.member.sysId,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tadditionalIdentifier: btoa(additionalIdentifier),\n\t\t\t\t\t\t'0Table': SYS_USER_GROUP,\n\t\t\t\t\t\t'0SysId': cell.team.sysId,\n\t\t\t\t\t\t'0Label': cell.team.name,\n\t\t\t\t\t\t'1Table': SYS_USER,\n\t\t\t\t\t\t'1SysId': cell.member.sysId,\n\t\t\t\t\t\t'1Label': cell.member.name\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{cell.columnData.displayValue}\n\t\t</a>\n\t\t{cell.primaryGroupLabel && cell.primaryGroupLabel.visible ? (\n\t\t\t<now-highlighted-value\n\t\t\t\tstyle={{\n\t\t\t\t\tpadding: 'var(--primary-group-label--padding, 0 1rem)'\n\t\t\t\t}}\n\t\t\t\tcolor=\"low\"\n\t\t\t\tlabel={cell.primaryGroupLabel.text}\n\t\t\t\tvariant=\"tertiary\"\n\t\t\t/>\n\t\t) : null}\n\t</Fragment>\n);\n\nconst renderScore = ({ cell, dispatch }, checkFocusIn) => {\n\tconst { value, displayValue } = cell.columnData;\n\n\tif (isEmpty(value)) {\n\t\treturn <span style={scoreTextStyles}>{SCORE_NA_LABEL}</span>;\n\t}\n\n\tif (Number(value) === 0) {\n\t\treturn <span style={scoreTextStyles}>{displayValue}</span>;\n\t}\n\n\treturn (\n\t\t<a\n\t\t\ttarget=\"_blank\"\n\t\t\thref=\"javascript:void(0)\"\n\t\t\ton-focus={checkFocusIn}\n\t\t\ton-blur={checkFocusIn}\n\t\t\ton-click={evt => {\n\t\t\t\tevt.preventDefault();\n\t\t\t\tconst memberIdentifier =\n\t\t\t\t\t(cell.indicator ? cell.indicator.m2mSysId : '-1') +\n\t\t\t\t\t(cell.team ? cell.team.sysId : '-1') +\n\t\t\t\t\t(cell.member ? cell.member.sysId : '-1');\n\t\t\t\tconst groupIdentifier =\n\t\t\t\t\t(cell.indicator ? cell.indicator.m2mSysId : '-1') +\n\t\t\t\t\t(cell.team ? cell.team.sysId : '-1') +\n\t\t\t\t\t'-1';\n\t\t\t\tlet groupParams = {\n\t\t\t\t\t'0Table': SYS_USER_GROUP,\n\t\t\t\t\t'0SysId': cell.team.sysId,\n\t\t\t\t\t'0Label': cell.team.name,\n\t\t\t\t\t'1Table': 'sn_team_perf_kpi_group_m2m_pa_indicators',\n\t\t\t\t\t'1SysId': groupIdentifier,\n\t\t\t\t\t'1Label': cell.indicator.name,\n\t\t\t\t\tteam: cell.team.sysId,\n\t\t\t\t\tindicator: cell.indicator.sysId,\n\t\t\t\t\tmember: '-1'\n\t\t\t\t};\n\t\t\t\tlet memberParams = {\n\t\t\t\t\t'0Table': SYS_USER_GROUP,\n\t\t\t\t\t'0SysId': cell.team.sysId,\n\t\t\t\t\t'0Label': cell.team.name,\n\t\t\t\t\t'1Table': SYS_USER,\n\t\t\t\t\t'1SysId': cell.member ? cell.member.sysId : '-1',\n\t\t\t\t\t'1Label': cell.member ? cell.member.name : '',\n\t\t\t\t\tteam: cell.team.sysId,\n\t\t\t\t\tindicator: cell.indicator.sysId,\n\t\t\t\t\tmember: cell.member ? cell.member.sysId : '-1'\n\t\t\t\t};\n\n\t\t\t\tconst destination = {\n\t\t\t\t\ttable: 'sn_team_perf_kpi_group_m2m_pa_indicators',\n\t\t\t\t\tsys_id: memberIdentifier,\n\t\t\t\t\tparams: memberParams\n\t\t\t\t};\n\n\t\t\t\tif (cell.member) {\n\t\t\t\t\tdestination.params['2Table'] =\n\t\t\t\t\t\t'sn_team_perf_kpi_group_m2m_pa_indicators';\n\t\t\t\t\tdestination.params['2SysId'] = memberIdentifier;\n\t\t\t\t\tdestination.params['2Label'] = cell.indicator.name;\n\t\t\t\t\tdispatch(ITEM_SELECTED, destination);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(ITEM_SELECTED, {\n\t\t\t\t\t\ttable: 'sn_team_perf_kpi_group_m2m_pa_indicators',\n\t\t\t\t\t\tsys_id: groupIdentifier,\n\t\t\t\t\t\tparams: groupParams\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{displayValue}\n\t\t</a>\n\t);\n};\n\nconst customRenderer = state => {\n\tconst { cell, rowCellIndex } = state;\n\tlet containerRef = null;\n\n\tconst checkFocusIn = evt => {\n\t\tlet focusIsWithin;\n\n\t\tif ('focus' === evt.type) {\n\t\t\tfocusIsWithin = true;\n\t\t} else if ('blur' === evt.type) {\n\t\t\tfocusIsWithin = false;\n\t\t}\n\n\t\tfocusWithinClassManager(containerRef, '-focus-within', focusIsWithin);\n\t};\n\n\tconst _renderChildren = () => {\n\t\tif (cell.columnName === MEMBER_NAME) {\n\t\t\treturn renderMemberName(state, checkFocusIn);\n\t\t}\n\t\treturn renderScore(state, checkFocusIn);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tkey={`cell_${rowCellIndex}_content`}\n\t\t\tclassName={`sn-list-grid-cell`}\n\t\t>\n\t\t\t<div\n\t\t\t\tref={el => {\n\t\t\t\t\tcontainerRef = el;\n\t\t\t\t}}\n\t\t\t\tclassName=\"sn-text-link\"\n\t\t\t>\n\t\t\t\t{_renderChildren()}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default {\n\tget: () => customRenderer\n};\n","import isBoolean from 'lodash/isBoolean';\n\nexport const elementHasActiveElement = (node, root = document) => {\n\tconst activeElement = root.activeElement;\n\n\tif (!activeElement) {\n\t\treturn false;\n\t}\n\n\tif (node == activeElement || node.contains(activeElement)) {\n\t\treturn true;\n\t}\n\n\tif (activeElement.shadowRoot) {\n\t\treturn elementHasActiveElement(node, activeElement.shadowRoot);\n\t}\n\n\treturn false;\n};\n\nexport const focusWithinClassManager = (\n\tcontainer,\n\tclassName,\n\tfocusIsWithin\n) => {\n\tif (!container || !className) {\n\t\treturn false;\n\t}\n\n\tconst addClass = isBoolean(focusIsWithin)\n\t\t? focusIsWithin\n\t\t: elementHasActiveElement(container);\n\n\tif (addClass) {\n\t\tcontainer.classList.add(className);\n\t} else {\n\t\tcontainer.classList.remove(className);\n\t}\n\n\treturn true;\n};\n","module.exports = __TECTONIC__lodash_4_17_15[\"isBoolean\"];","import { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport { t } from 'sn-translate';\nimport { chartStyleConfig, STATUS } from './constants';\nimport {\n\tgetIndicator,\n\tgetHeadingText,\n\tgetPaginationProps,\n\tgetSingleScoreValue,\n\tgetRecordTableProps,\n\tgetTeamScoreTableProps,\n\tgetMemberScoreTableProps,\n\tgetDateRangePickerProps,\n\tgetTimeSeriesChartDataConfig,\n\tgetMemberAvatarProps,\n\tgetRecordTableHeading,\n\tgetSelectedDate\n} from './selectors';\nimport isEmpty from 'lodash/isEmpty';\n\nconst renderHeader = state => {\n\tconst headingText = getHeadingText(state);\n\tconst avatarProps = getMemberAvatarProps(state);\n\tconst dateRangePickerProps = getDateRangePickerProps(state);\n\n\treturn (\n\t\t<header>\n\t\t\t<slot name=\"heading\">\n\t\t\t\t<div className=\"heading\">\n\t\t\t\t\t{avatarProps ? <now-avatar {...avatarProps} /> : null}\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tlabel={headingText}\n\t\t\t\t\t\tvariant=\"header-primary\"\n\t\t\t\t\t\twontWrap={true}\n\t\t\t\t\t\thas-no-margin\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</slot>\n\t\t\t<now-date-range-picker {...dateRangePickerProps} />\n\t\t</header>\n\t);\n};\n\nconst renderRibbon = state => {\n\tconst indicator = getIndicator(state);\n\tconst chartDataConfig = getTimeSeriesChartDataConfig(state);\n\tconst singleScoreValue = getSingleScoreValue(state);\n\n\treturn (\n\t\t<div className=\"ribbon\">\n\t\t\t<now-card\n\t\t\t\tsize=\"lg\"\n\t\t\t\tinteraction=\"none\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\taria-role=\"tabpanel\"\n\t\t\t\taria-label={`${indicator.name} ${singleScoreValue}`}\n\t\t\t>\n\t\t\t\t<now-card-header\n\t\t\t\t\theading={{\n\t\t\t\t\t\tlabel: indicator.name,\n\t\t\t\t\t\tsize: 'sm',\n\t\t\t\t\t\tlines: 1,\n\t\t\t\t\t\tvariant: 'secondary',\n\t\t\t\t\t\tunderlined: true\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className=\"card-stats\">\n\t\t\t\t\t<span className=\"score-bold\" title={singleScoreValue}>\n\t\t\t\t\t\t{singleScoreValue}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</now-card>\n\t\t\t<sn-component-visualization\n\t\t\t\tstyleConfigurations={chartStyleConfig}\n\t\t\t\tdataConfigurations={chartDataConfig}\n\t\t\t\tchartType=\"line\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst renderTeamScoresTable = state => {\n\tconst gridProps = getTeamScoreTableProps(state);\n\tconst paginationProps = getPaginationProps(state);\n\n\treturn (\n\t\t<div className=\"team-scores-table\">\n\t\t\t<now-treegrid {...gridProps} />\n\t\t\t<now-pagination {...paginationProps} />\n\t\t</div>\n\t);\n};\n\nconst renderMemberScoresTable = state => {\n\treturn (\n\t\t<div className=\"member-scores-table\">\n\t\t\t<now-table {...getMemberScoreTableProps(state)} />\n\t\t</div>\n\t);\n};\n\nconst renderRecordsTable = (state, { updateState }) => {\n\tconst heading = getRecordTableHeading(state);\n\tconst recordTableProps = getRecordTableProps(state);\n\tconst selectedDate = getSelectedDate(state);\n\n\treturn (\n\t\t<div className=\"records-table\">\n\t\t\t<div className=\"records-table-heading\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={heading}\n\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\twontWrap={true}\n\t\t\t\t/>\n\t\t\t\t{selectedDate ? (\n\t\t\t\t\t<now-button-bare\n\t\t\t\t\t\tlabel={t('Clear filter')}\n\t\t\t\t\t\tclassName=\"btn-clear-filter\"\n\t\t\t\t\t\ticonStart=\"close-fill\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\thidePadding\n\t\t\t\t\t\ton-click={() => updateState({ selectedDate: null })}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<now-record-list-connected {...recordTableProps} />\n\t\t</div>\n\t);\n};\n\nconst renderContent = (state, coeffects) => {\n\tconst {\n\t\tteam,\n\t\tmember,\n\t\tmembers,\n\t\tindicator,\n\t\tparentIndicators,\n\t\tchildIndicators\n\t} = state;\n\tconst hasTeam = !isEmpty(team);\n\tconst hasMember = !isEmpty(member);\n\tconst hasMembers = !isEmpty(members);\n\tconst hasIndicator = !isEmpty(indicator);\n\tconst hasParentIndicators = !isEmpty(parentIndicators);\n\tconst hasChildIndicators = !isEmpty(childIndicators);\n\tconst hasFactsTable = !isEmpty(indicator.factsTable);\n\n\tconst showHeader = hasTeam || hasMember;\n\tconst showRibbon = hasIndicator;\n\tconst showTeamScores =\n\t\thasMembers && (hasParentIndicators || hasChildIndicators);\n\tconst showMemberScores = hasMember && hasChildIndicators;\n\tconst showRecords = !hasChildIndicators && hasFactsTable;\n\treturn (\n\t\t<Fragment>\n\t\t\t{showHeader ? renderHeader(state) : null}\n\t\t\t{showRibbon ? renderRibbon(state) : null}\n\t\t\t{showTeamScores ? renderTeamScoresTable(state) : null}\n\t\t\t{showMemberScores ? renderMemberScoresTable(state) : null}\n\t\t\t{showRecords ? renderRecordsTable(state, coeffects) : null}\n\t\t</Fragment>\n\t);\n};\n\nexport const isLoading = state => {\n\tconst { team, status } = state;\n\n\treturn (\n\t\tstatus === STATUS.initial ||\n\t\tstatus === STATUS.indicatorsLoading ||\n\t\tstatus === STATUS.memberDataLoading ||\n\t\t((status === STATUS.scoresLoading ||\n\t\t\tstatus === STATUS.primaryMembersLoading) &&\n\t\t\tisEmpty(team))\n\t);\n};\n\nexport default (state, coeffects) => {\n\tif (!isEmpty(state.error)) {\n\t\treturn (\n\t\t\t<now-empty-state\n\t\t\t\ttype={state.error.type}\n\t\t\t\theaderText={state.error.headerText}\n\t\t\t\tbodyText={state.error.bodyText}\n\t\t\t/>\n\t\t);\n\t}\n\tif (isLoading(state)) {\n\t\treturn (\n\t\t\t<now-empty-state\n\t\t\t\ttype=\"loading\"\n\t\t\t\tbodyText={t('Loading performance metrics...')}\n\t\t\t/>\n\t\t);\n\t}\n\treturn renderContent(state, coeffects);\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;flex-direction:column;height:100%;overflow:hidden}header{justify-content:space-between;padding:var(--header--padding,1.5rem)}header,header .heading{display:flex;align-items:center}header .heading{margin-right:.75rem;min-width:0}header now-avatar{margin-right:.5rem}header now-heading{min-width:0}now-empty-state{flex:1}.ribbon{background:RGB(var(--now-color--neutral-1,246,247,247));display:flex;margin:0 1.5rem 1.5rem;padding:1rem;overflow:hidden}.ribbon,.ribbon now-card{flex-grow:0;flex-shrink:0}.ribbon now-card{background:RGB(var(--now-color--neutral-0,255,255,255));margin:0 .75rem 0 0;height:var(--score-card--height,12.5rem);width:var(--score-card--width,15.625rem)}.ribbon now-card-header{padding-bottom:.5rem;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214));height:1.5rem}.ribbon .card-stats{margin-top:1rem}.ribbon .card-stats:after,.ribbon .card-stats:before{content:\\\"\\\";display:block;width:0;height:0}.ribbon .card-stats:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.ribbon .card-stats:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.ribbon .card-stats+.ribbon .card-stats{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.ribbon .card-stats .score-title{font-weight:400;font-size:1rem;color:var(--now-color--neutral-3,209,214,214)}.ribbon .card-stats .score-bold,.ribbon .card-stats .score-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block}.ribbon .card-stats .score-bold{font-size:2.5rem;font-weight:300;line-height:1.25}.ribbon .card-stats .score-unit{font-size:2.25rem;font-weight:300;color:RGB(var(--now-color--neutral-6,154,164,165))}.ribbon sn-component-visualization{background:RGB(var(--now-color--neutral-0,255,255,255));border:1px solid rgb(var(--now-color--divider-tertiary,var(--now-color--neutral-3,209,214,214)));flex:1;height:var(--timeseries-chart--height,12.5rem);width:var(--timeseries-chart--width,calc(100% - 15.625rem));padding:1rem;min-width:0}.member-scores-table,.records-table,.team-scores-table{display:flex;flex-direction:column;flex:1;overflow:hidden}.records-table-heading{margin:1rem 1.5rem 0;display:flex}.records-table .btn-clear-filter{margin-left:1rem}now-record-list-connected,now-table,now-treegrid{border-top:1px solid rgb(var(--now-color--neutral-5,172,180,181));flex:1;overflow-x:hidden;overflow-y:auto}\", \"\"]);\n\n// exports\n","import './approval-request';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-approval-request', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\ttable: { default: 'sysapproval_approver' },\n\t\tsysId: {},\n\t\tfields: {},\n\t\tcurrentUser: {},\n\t\tview: {}\n\t},\n\tactionHandlers,\n\n\tstyles\n});\n","import get from 'lodash/get';\nimport { NowRecordFormSectionElement } from '@servicenow/now-record-form-connected'; // eslint-disable-line\nimport '../sn-manager-skill-recommendation-card/skill-recommendation-card';\nimport isEmpty from 'lodash/isEmpty';\n\nconst renderBody = state => {\n\tconst fields = get(state, 'properties.fields', {});\n\n\tconst sourceTable = fields.source_table.value;\n\tconst approvingId = fields.document_id.value;\n\tconst result = get(state, 'result', {});\n\tconst loading = get(state, 'loading', false);\n\n\tconst recommendationProps = {\n\t\thideActions: true,\n\t\tresult,\n\t\tloading\n\t};\n\n\treturn (\n\t\t<div className=\"approval-body\">\n\t\t\t{sourceTable === 'sn_sre_user_predicted_skill' ? (\n\t\t\t\t<section className=\"approval-body-recommendation\">\n\t\t\t\t\t<div className=\"skill-recommendation\">\n\t\t\t\t\t\t<sn-manager-skill-recommendation-card\n\t\t\t\t\t\t\t{...recommendationProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null}\n\t\t\t<section className=\"approval-body-form\">\n\t\t\t\t<now-record-form-section-connected\n\t\t\t\t\ttable={sourceTable}\n\t\t\t\t\tsysId={approvingId}\n\t\t\t\t\tview={get(state, 'properties.view', 'default')}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</div>\n\t);\n};\n\nconst view = state => {\n\tconst fields = get(state, 'properties.fields', {});\n\n\treturn (\n\t\t<div className=\"approval\">\n\t\t\t{isEmpty(fields) ? (\n\t\t\t\t<now-empty-state type=\"empty\" variant=\"fit\" />\n\t\t\t) : (\n\t\t\t\trenderBody(state)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import * as effects from './effects';\nimport { ACTIONS } from '../../utils/constants';\nimport { actionTypes } from '@servicenow/ui-core';\n\nconst {\n\tERROR_OCCURED,\n\tFETCH_SKILL_RECOMMENDATION,\n\tFETCH_SKILL_RECOMMENDATION_SUCCEEDED,\n\tFETCH_SKILL_RECOMMENDATION_STARTED\n} = ACTIONS;\n\nconst { COMPONENT_BOOTSTRAPPED } = actionTypes;\n\nconst actionHandlers = {\n\t[COMPONENT_BOOTSTRAPPED]: effects.bootstrap,\n\t[FETCH_SKILL_RECOMMENDATION]: effects.fetchSkillRecommendations,\n\t[FETCH_SKILL_RECOMMENDATION_SUCCEEDED]: effects.skillRecommendationsHandler,\n\t[FETCH_SKILL_RECOMMENDATION_STARTED]: effects.updateLoadingState,\n\t[ERROR_OCCURED]: effects.errorHandler\n};\n\nexport default actionHandlers;\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport get from 'lodash/get';\nimport { ACTIONS } from '../../utils/constants';\nimport isEmpty from 'lodash/isEmpty';\nimport { GRAPHQL_MAX_LIMIT } from '../constants';\nconst {\n\tERROR_OCCURED,\n\tFETCH_SKILL_RECOMMENDATION,\n\tFETCH_SKILL_RECOMMENDATION_SUCCEEDED,\n\tFETCH_SKILL_RECOMMENDATION_STARTED\n} = ACTIONS;\n\nconst skillRecommendationQuery = `query ($condition: String!) {\n\tGlideRecord_Query {\n\t  sn_sre_user_predicted_skill(queryConditions: $condition, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t_results {\n\t\t  skill {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t  }\n\t\t  task_count {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t  }\n\t\t  rejected_task_count {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t  }\n\t\t  user {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t\t_reference {\n\t\t\t  first_name {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t  }\n\t\t\t  last_name {\n\t\t\t\tvalue\n\t\t\t\tdisplayValue\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t  sys_id {\n\t\t\tvalue\n\t\t  }\n\t\t}\n\t  }\n\t}\n  }\n\n`;\n\n/**\n * Fired when skills-panel boosttap, this sets the state.loader to true and\n * dispatches the action to execute the graphql effect to fetch the skill's data.\n * It also dispatches an action to fetch skill recommendations\n * @param {*} coeffects\n */\nexport const bootstrap = coeffects => {\n\tconst { state, dispatch } = coeffects;\n\tconst fields = get(state, 'properties.fields', {});\n\tif (isEmpty(fields)) return;\n\tconst userPredictedSkill = fields.document_id.value;\n\n\tdispatch(FETCH_SKILL_RECOMMENDATION, {\n\t\tcondition: `sys_id=${userPredictedSkill}`\n\t});\n};\n\n/**\n * Fetch skill recommendations for the user\n */\nexport const fetchSkillRecommendations = createGraphQLEffect(\n\tskillRecommendationQuery,\n\t{\n\t\tvariableList: ['condition'],\n\t\tsuccessActionType: FETCH_SKILL_RECOMMENDATION_SUCCEEDED,\n\t\tstartActionType: FETCH_SKILL_RECOMMENDATION_STARTED,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\n/**\n * Extracts recommended skill from the query result and updates state\n * @param {*} coeffects\n */\nexport const skillRecommendationsHandler = ({ state, action, updateState }) => {\n\tconst userPredictedSkill = get(\n\t\taction,\n\t\t`payload.data.GlideRecord_Query.sn_sre_user_predicted_skill._results[0]`,\n\t\t{}\n\t);\n\n\tconst approval = get(state, 'properties.sysId', '');\n\n\tupdateState({\n\t\toperation: 'merge',\n\t\tpath: '',\n\t\tvalue: {\n\t\t\tresult: {\n\t\t\t\trecommendedSkill: {\n\t\t\t\t\tskill: userPredictedSkill.skill,\n\t\t\t\t\tuser: userPredictedSkill.user,\n\t\t\t\t\ttaskCount: userPredictedSkill.task_count,\n\t\t\t\t\trejectedTaskCount: userPredictedSkill.rejected_task_count,\n\t\t\t\t\tsysId: userPredictedSkill.sys_id.value\n\t\t\t\t},\n\t\t\t\tapproval\n\t\t\t},\n\t\t\tloading: false\n\t\t}\n\t});\n};\n\nexport const updateLoadingState = ({ updateState }) => {\n\tupdateState({ loading: true });\n};\n\nexport const errorHandler = ({ action, updateState }) => {\n\tupdateState({ loading: false });\n\tconsole.error(action.type, action.payload);\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:block;height:100%;overflow-x:hidden;overflow-y:auto;scroll-behavior:smooth;width:100%;padding:0 1.5rem 1.5rem}\", \"\"]);\n\n// exports\n","import './channel-details-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\nimport actionHandlers from './actionHandlers';\n\nexport default createCustomElement('sn-manager-channel-details-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tloading: true,\n\t\treportData: [],\n\t\tchannelName: '',\n\t\tsupervisorListConfig: {},\n\t\trenderChannelTabs: false,\n\t\tqueuesIds: [],\n\t\tisRefreshRequested: false,\n\t\tuseDefaultSortOrder: {\n\t\t\tAGENT: true,\n\t\t\tQUEUE: true\n\t\t},\n\t\tuseDefaultFilters: {\n\t\t\tAGENT: true,\n\t\t\tQUEUE: true\n\t\t},\n\t\tassignmentGroups: '',\n\t\tinitializationDone: false,\n\t\tshowFilter: true\n\t},\n\tproperties: {\n\t\tsysId: '',\n\t\tactive: {\n\t\t\tdefault: false\n\t\t}\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-heading';\nimport '../sn-manager-channel-kpis';\nimport '../sn-manager-channels-tabs';\nimport { isEmpty, forEach } from 'lodash';\nimport {\n\tCHANNEL_DEFAULT_TAB_ITEMS,\n\tCHANNEL_DEFAULT_TAB_LIST_DETAILS\n} from './constants';\nimport '../common/dataProviders/sn-manager-channel-supervisor-list-config/channel-supervisor-list-config';\nimport { SUPERVISOR_VIEW_NAME } from '../common/constants';\nimport {\n\tgetSupervisorViewConfigQuery,\n\tgetWorkItemDefaultQuery\n} from '../common/helpers';\nimport '../../common/sn-manager-filter-config';\nimport { CHANNELS_MODULE_SYSID } from '../../common/constants';\nimport { PAGE } from '../common/constants';\nimport { getFilterDetails } from '../common/helpers';\n\nconst _renderChannelTabs = state => {\n\tlet tabItems = [];\n\tlet supervisorListConfigDetails = {};\n\tconst {\n\t\tsupervisorListConfig,\n\t\tqueuesIds,\n\t\tisRefreshRequested,\n\t\tuseDefaultSortOrder,\n\t\tuseDefaultFilters,\n\t\tassignmentGroups,\n\t\tchannelName,\n\t\tproperties: { sysId }\n\t} = state;\n\tconst allQueuesIds = queuesIds.join(',');\n\tif (\n\t\t!isEmpty(supervisorListConfig) &&\n\t\t!isEmpty(supervisorListConfig[sysId])\n\t) {\n\t\tconst supervisorLists = supervisorListConfig[sysId];\n\t\tfor (const property in supervisorLists) {\n\t\t\tconst supervisorList = supervisorLists[property];\n\t\t\tconst {\n\t\t\t\ttabTitle,\n\t\t\t\tviewName,\n\t\t\t\tlistTitle,\n\t\t\t\tworkItemAlias\n\t\t\t} = supervisorList;\n\t\t\tconst supervisorListConfigQuery = getSupervisorViewConfigQuery(\n\t\t\t\tworkItemAlias,\n\t\t\t\tsysId,\n\t\t\t\tallQueuesIds,\n\t\t\t\tassignmentGroups\n\t\t\t);\n\n\t\t\tif (viewName) {\n\t\t\t\tsupervisorListConfigDetails[viewName] = {\n\t\t\t\t\ttable: viewName,\n\t\t\t\t\tlistTitle: listTitle,\n\t\t\t\t\tview: SUPERVISOR_VIEW_NAME,\n\t\t\t\t\tquery: supervisorListConfigQuery\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttabItems.push({\n\t\t\t\tid: viewName,\n\t\t\t\tlabel: tabTitle\n\t\t\t});\n\t\t}\n\t}\n\tCHANNEL_DEFAULT_TAB_LIST_DETAILS.WORK_ITEMS.query = getWorkItemDefaultQuery(\n\t\tsysId,\n\t\tallQueuesIds,\n\t\tassignmentGroups\n\t);\n\tforEach(CHANNEL_DEFAULT_TAB_ITEMS, item => {\n\t\ttabItems.push(item);\n\t});\n\tconst selectedTab = tabItems[0].id;\n\tconst tabListDetails = {\n\t\t...supervisorListConfigDetails,\n\t\t...CHANNEL_DEFAULT_TAB_LIST_DETAILS\n\t};\n\n\treturn (\n\t\t<div className=\"channel-tabs-container\">\n\t\t\t<sn-manager-channels-tabs\n\t\t\t\ttabItems={tabItems}\n\t\t\t\ttabListDetails={tabListDetails}\n\t\t\t\tselectedTab={selectedTab}\n\t\t\t\tassignmentGroups={assignmentGroups}\n\t\t\t\tchannelId={sysId}\n\t\t\t\tisRefreshRequested={isRefreshRequested}\n\t\t\t\tuseDefaultSortOrder={useDefaultSortOrder}\n\t\t\t\tuseDefaultFilters={useDefaultFilters}\n\t\t\t\tname={channelName}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst _renderSupervisorListConfigFetcher = sysId => {\n\treturn (\n\t\t<sn-manager-channel-supervisor-list-config serviceChannelId={sysId} />\n\t);\n};\n\nconst _getFilterRelatedData = sysId => {\n\tconst { allGroups, selectedGroups } = getFilterDetails(PAGE.CHANNEL, sysId);\n\treturn {\n\t\tfilterQuery: 'sys_idIN' + allGroups,\n\t\tselectedGroups: selectedGroups\n\t};\n};\n\nconst view = state => {\n\tconst {\n\t\tchannelName,\n\t\trenderChannelTabs,\n\t\tproperties: { sysId },\n\t\tshowFilter\n\t} = state;\n\treturn (\n\t\t<div className=\"channel-details-container\">\n\t\t\t<div className=\"channel-details-container-header\">\n\t\t\t\t<now-heading\n\t\t\t\t\tlabel={channelName}\n\t\t\t\t\tvariant=\"header-primary\"\n\t\t\t\t\tclassName=\"header-color\"\n\t\t\t\t\thasNoMargin={true}\n\t\t\t\t/>\n\t\t\t\t{showFilter ? (\n\t\t\t\t\t<sn-manager-filter-config\n\t\t\t\t\t\tsysId={CHANNELS_MODULE_SYSID}\n\t\t\t\t\t\tshowTitle={false}\n\t\t\t\t\t\toverrideFilterConfig={true}\n\t\t\t\t\t\tfilterRelatedData={_getFilterRelatedData(sysId)}\n\t\t\t\t\t\tresetFiltersOption={false}\n\t\t\t\t\t\tshowLoadingIcon={false}\n\t\t\t\t\t></sn-manager-filter-config>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{!state.loading || !isEmpty(state.reportData)\n\t\t\t\t? _renderReportContainer(state.reportData)\n\t\t\t\t: ''}\n\n\t\t\t{renderChannelTabs ? _renderChannelTabs(state) : ''}\n\n\t\t\t{_renderSupervisorListConfigFetcher(sysId)}\n\t\t</div>\n\t);\n};\n\nconst _renderReportContainer = reportData => {\n\treturn <sn-manager-channel-kpis reportData={reportData} />;\n};\n\nexport default view;\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.channel-details-container{height:100%;display:flex;flex-direction:column}.channel-details-container-header{display:flex;justify-content:space-between;padding:1.5rem;min-height:80px}.channel-details-container-header sn-manager-filter-config{height:2.8125rem;margin-top:-4px}.channel-tabs-container{margin-top:2.5rem;height:100%}\", \"\"]);\n\n// exports\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport {\n\tFETCH_REPORTS,\n\tFETCH_REPORTS_SUCCESS,\n\tFETCH_ALL_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG,\n\tFETCH_KPI_REPORTCONFIG_SUCCESS,\n\tFETCH_INTERACTIVE_REFERENCE_FIELD,\n\tFETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD,\n\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\tFETCH_QUEUES_IDS,\n\tFETCH_QUEUES_IDS_SUCCESS,\n\tERROR_OCCURED\n} from './constants';\nimport { get, isEmpty } from 'lodash';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport {\n\tCOMPONENT_BOOTSTRAPPED,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_RENDERED\n} from '@servicenow/ui-core/lib/constants';\nimport { channelReportsQuery, fetchQueuesIdsQuery } from './queries';\nimport { getSessionData, setSessionData } from '../../utils/utils';\nimport { MODULES, APPLIED_FILTERS_OBJECT } from '../../common/constants';\nimport {\n\tCHANNEL_SUPERVISOR_LIST_CONFIG_READY,\n\tUPDATE_DEFAULT_SORT_ORDER,\n\tUPDATE_FILTERS,\n\tSYS_PROP_FILTER_CONFIG_ENABLE\n} from '../common/constants';\nimport { getProperty } from 'sn-uxpage-presource';\nimport forEach from 'lodash/forEach';\nimport {\n\tgetFilterDetails,\n\tupdateAppliedFilters,\n\thasFilterChanged,\n\taddReportToList\n} from '../common/helpers';\nimport { PAGE } from '../common/constants';\n\nexport const fetchQueuesIdsSuccess = ({ action, updateState }) => {\n\tconst managedQueues = {};\n\tconst data = get(action, 'payload.data');\n\tconst groupQueues = get(\n\t\tdata,\n\t\t'GlideRecord_Query.awa_group_queue_priority._results'\n\t);\n\tforEach(groupQueues, item => {\n\t\tconst queueId = item && item.queue ? item.queue.value : '';\n\t\tmanagedQueues[queueId] = {\n\t\t\tservice_channel: get(item, 'queue._reference.service_channel.value')\n\t\t};\n\t});\n\n\tconst queuesIds = [];\n\tObject.keys(managedQueues).forEach(queue => {\n\t\tif (queuesIds.indexOf(queue) == -1) {\n\t\t\tqueuesIds.push(queue);\n\t\t}\n\t});\n\tupdateState({\n\t\tqueuesIds\n\t});\n};\n\nconst fetchReports = createGraphQLEffect(channelReportsQuery, {\n\tvariableList: ['conditions', 'sysId'],\n\tsuccessActionType: FETCH_REPORTS_SUCCESS,\n\terrorActionType: ERROR_OCCURED\n});\n\nconst fetchReportsSuccess = ({ action, updateState, dispatch }) => {\n\tconst reports = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Query.m2m_awa_service_channel_report._results',\n\t\t[]\n\t);\n\tconst channelName = get(\n\t\taction,\n\t\t'payload.data.GlideRecord_Query.awa_service_channel._results[0].name.value',\n\t\t''\n\t);\n\tupdateState({ channelName: channelName });\n\tdispatch(FETCH_ALL_KPI_REPORTCONFIG, { reports: reports });\n};\n\nconst fetchAllKpiReportConfig = ({ action, dispatch, updateState }) => {\n\tconst reports = get(action, 'payload.reports', []);\n\tif (isEmpty(reports)) updateState({ loading: false });\n\telse {\n\t\treports.forEach(reportitem => {\n\t\t\tconst report = get(reportitem, 'report', {});\n\t\t\tconst label = get(reportitem, 'label', {});\n\t\t\tif (isEmpty(report)) return;\n\t\t\tdispatch(\n\t\t\t\tFETCH_KPI_REPORTCONFIG,\n\t\t\t\t{ sys_id: report.value },\n\t\t\t\t{ report_name: label.value || report.displayValue }\n\t\t\t);\n\t\t});\n\t}\n};\n\nconst fetchKpiReportConfig = createHttpEffect(\n\t'/api/now/reporting/reports/series/:sys_id',\n\t{\n\t\tmethod: 'POST',\n\t\tpathParams: ['sys_id'],\n\t\tbatch: false,\n\t\tsuccessActionType: FETCH_KPI_REPORTCONFIG_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchKpiReportConfigSuccess = ({ action, dispatch }) => {\n\tconst reportConfig = get(\n\t\taction,\n\t\t'payload.result.data_configurations[0]',\n\t\t''\n\t);\n\tconst reportLabel = get(action, 'meta.report_name', '');\n\tconst referenceTable = reportConfig.source_id;\n\n\tdispatch(\n\t\tFETCH_INTERACTIVE_REFERENCE_FIELD,\n\t\t{ referenceTable: referenceTable },\n\t\t{ reportConfig, reportLabel }\n\t);\n};\n\nconst fetchInteractiveReferenceField = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/channel/:referenceTable',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['referenceTable'],\n\t\tsuccessActionType: FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchInteractiveReferenceFieldSuccess = ({\n\taction,\n\tstate,\n\tdispatch,\n\tupdateState\n}) => {\n\tconst referenceField = get(action, 'payload.result', '');\n\tconst reportConfig = get(action, 'meta.reportConfig', { filter_query: '' });\n\tconst reportLabel = get(action, 'meta.reportLabel', '');\n\tconst channelId = state.properties.sysId;\n\treportConfig.filter_query += '^' + referenceField + '=' + channelId;\n\tconst referenceTable = reportConfig.source_id;\n\tconst showFilter = get(state, 'showFilter');\n\tif (showFilter) {\n\t\tdispatch(\n\t\t\tFETCH_GROUP_INTERACTIVE_REFERENCE_FIELD,\n\t\t\t{ referenceTable: referenceTable },\n\t\t\t{ reportConfig, reportLabel }\n\t\t);\n\t} else {\n\t\taddReportToList(reportConfig, reportLabel, updateState);\n\t}\n};\n\nconst fetchGroupInteractiveReferenceField = createHttpEffect(\n\t'/api/sn_channel_mgmt/awa_channel_management_report_api/group/:referenceTable',\n\t{\n\t\tmethod: 'GET',\n\t\tpathParams: ['referenceTable'],\n\t\tsuccessActionType: FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS,\n\t\terrorActionType: ERROR_OCCURED\n\t}\n);\n\nconst fetchGroupInteractiveReferenceFieldSuccess = ({\n\taction,\n\tstate,\n\tupdateState\n}) => {\n\tconst referenceField = get(action, 'payload.result', '');\n\tconst reportConfig = get(action, 'meta.reportConfig', { filter_query: '' });\n\tconst reportLabel = get(action, 'meta.reportLabel', '');\n\tconst assignmentGroups = state.assignmentGroups;\n\treportConfig.filter_query +=\n\t\t'^' + referenceField + '.sys_idIN' + assignmentGroups;\n\taddReportToList(reportConfig, reportLabel, updateState);\n};\n\nconst updateSupervisorListConfig = ({ action, updateState }) => {\n\tconst supervisorListConfig = get(action, 'payload.supervisorListConfig');\n\tupdateState({ supervisorListConfig, renderChannelTabs: true });\n};\n\nconst updateDefaultSortOrderEffect = ({ action, updateState }) => {\n\tconst { type, defaultSort } = get(action, 'payload');\n\tupdateState({\n\t\tpath: `useDefaultSortOrder.${type}`,\n\t\tvalue: defaultSort,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nexport const updateFiltersEffect = ({ action, updateState }) => {\n\tconst { type } = get(action, 'payload');\n\tupdateState({\n\t\tpath: `useDefaultFilters.${type}`,\n\t\tvalue: false,\n\t\toperation: 'set',\n\t\tshouldRender: false\n\t});\n};\n\nexport const fetchQueuesIds = createGraphQLEffect(fetchQueuesIdsQuery, {\n\tvariableList: ['queryConditions'],\n\tsuccessActionType: FETCH_QUEUES_IDS_SUCCESS,\n\terrorActionType: ERROR_OCCURED\n});\n\nexport const filtersAppliedEffect = ({\n\tstate,\n\taction,\n\tupdateState,\n\tdispatch\n}) => {\n\tvar groups;\n\tvar groupsInAppliedBucket;\n\tconst channelSysId = get(state, 'properties.sysId', '');\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\n\tconst allGroups = sessionData.channelGroupMap[channelSysId];\n\tif (\n\t\tObject.keys(action.payload).length == 0 ||\n\t\tObject.keys(action.payload.sn_wfo_manager_groups).length == 0\n\t) {\n\t\tgroups = sessionData.channelGroupMap[channelSysId].join();\n\t\tgroupsInAppliedBucket = [];\n\t} else {\n\t\tvar groupsSelected =\n\t\t\taction.payload.sn_wfo_manager_groups.grmember_group;\n\t\tgroupsInAppliedBucket = groupsSelected;\n\t\tgroups = groupsSelected.join();\n\t}\n\n\tsetSessionData(MODULES.CHANNELS, sessionData);\n\tupdateAppliedFilters(allGroups, groupsInAppliedBucket);\n\tupdateState({ assignmentGroups: groups, reportData: [] });\n\n\tdispatch(FETCH_REPORTS, {\n\t\tconditions: 'service_channel.sys_id=' + channelSysId + '^ORDERBYorder',\n\t\tsysId: 'sys_id=' + channelSysId\n\t});\n\n\tconst queryConditions = 'groupIN' + groups;\n\tdispatch(FETCH_QUEUES_IDS, {\n\t\tqueryConditions\n\t});\n};\n\nconst isQueueRelatedToGroupsSelected = (queue, assignmentGroups) => {\n\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\tconst groups = assignmentGroups.split(',');\n\tconst { queueGroupMap = {} } = sessionData;\n\treturn queueGroupMap[queue].some(function(group) {\n\t\treturn groups.includes(group);\n\t});\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: ({ host, dispatch, updateState }) => {\n\t\tconst channelSysId = host.sysId;\n\t\tlet sessionData = getSessionData(MODULES.CHANNELS);\n\t\tconst { managedQueues = {} } = sessionData;\n\t\tconst queuesIds = [];\n\t\tconst showFilter = getProperty(SYS_PROP_FILTER_CONFIG_ENABLE, true);\n\t\tconst { allGroups, selectedGroups } = getFilterDetails(\n\t\t\tPAGE.CHANNEL,\n\t\t\tchannelSysId\n\t\t);\n\t\tconst selectedGroupsCount = selectedGroups.length;\n\t\tconst assignmentGroups = selectedGroupsCount\n\t\t\t? selectedGroups.join()\n\t\t\t: allGroups.join();\n\n\t\tObject.keys(managedQueues).forEach(queue => {\n\t\t\tif (\n\t\t\t\tmanagedQueues[queue] &&\n\t\t\t\tmanagedQueues[queue].service_channel == channelSysId &&\n\t\t\t\tisQueueRelatedToGroupsSelected(queue, assignmentGroups)\n\t\t\t) {\n\t\t\t\tif (queuesIds.indexOf(queue) == -1) {\n\t\t\t\t\tqueuesIds.push(queue);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tupdateState({\n\t\t\tqueuesIds,\n\t\t\tisRefreshRequested: true,\n\t\t\tassignmentGroups: assignmentGroups,\n\t\t\tinitializationDone: true,\n\t\t\tshowFilter: showFilter\n\t\t});\n\n\t\tdispatch(FETCH_REPORTS, {\n\t\t\tconditions:\n\t\t\t\t'service_channel.sys_id=' + channelSysId + '^ORDERBYorder',\n\t\t\tsysId: 'sys_id=' + channelSysId\n\t\t});\n\t},\n\t[FETCH_REPORTS]: fetchReports,\n\t[FETCH_REPORTS_SUCCESS]: fetchReportsSuccess,\n\t[FETCH_ALL_KPI_REPORTCONFIG]: fetchAllKpiReportConfig,\n\t[FETCH_KPI_REPORTCONFIG]: fetchKpiReportConfig,\n\t[FETCH_KPI_REPORTCONFIG_SUCCESS]: fetchKpiReportConfigSuccess,\n\t[FETCH_INTERACTIVE_REFERENCE_FIELD]: fetchInteractiveReferenceField,\n\t[FETCH_INTERACTIVE_REFERENCE_FIELD_SUCCESS]: fetchInteractiveReferenceFieldSuccess,\n\t[FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD]: fetchGroupInteractiveReferenceField,\n\t[FETCH_GROUP_INTERACTIVE_REFERENCE_FIELD_SUCCESS]: fetchGroupInteractiveReferenceFieldSuccess,\n\t[ERROR_OCCURED]: logErrorEffect,\n\t[CHANNEL_SUPERVISOR_LIST_CONFIG_READY]: updateSupervisorListConfig,\n\t[FETCH_QUEUES_IDS]: fetchQueuesIds,\n\t[FETCH_QUEUES_IDS_SUCCESS]: fetchQueuesIdsSuccess,\n\t[COMPONENT_PROPERTY_CHANGED]: ({ action, updateState }) => {\n\t\tconst {\n\t\t\tpayload: { name, value }\n\t\t} = action;\n\t\tif (name == 'active' && value) {\n\t\t\tupdateState({ isRefreshRequested: true });\n\t\t} else if (name == 'active' && !value) {\n\t\t\tupdateState({ isRefreshRequested: false });\n\t\t}\n\t},\n\t[COMPONENT_RENDERED]: ({ state, dispatch, updateState }) => {\n\t\tconst channelSysId = get(state, 'properties.sysId', '');\n\t\tconst assignmentGroups = get(state, 'assignmentGroups').split(',');\n\t\tif (\n\t\t\tstate.initializationDone &&\n\t\t\thasFilterChanged(PAGE.CHANNEL, channelSysId, assignmentGroups)\n\t\t) {\n\t\t\tconst { selectedGroups } = getFilterDetails(\n\t\t\t\tPAGE.CHANNEL,\n\t\t\t\tchannelSysId\n\t\t\t);\n\t\t\tconst selectedGroupsCount = selectedGroups.length;\n\t\t\tdispatch(\n\t\t\t\tAPPLIED_FILTERS_OBJECT,\n\t\t\t\tselectedGroupsCount\n\t\t\t\t\t? {\n\t\t\t\t\t\tsn_wfo_manager_groups: {\n\t\t\t\t\t\t\tgrmember_group: selectedGroups\n\t\t\t\t\t\t}\n\t\t\t\t\t  } // eslint-disable-line\n\t\t\t\t\t: { sn_wfo_manager_groups: {} }\n\t\t\t);\n\t\t}\n\n\t\tupdateState({\n\t\t\tpath: 'useDefaultSortOrder.AGENT',\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t\tupdateState({\n\t\t\tpath: 'useDefaultSortOrder.QUEUE',\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t\tupdateState({\n\t\t\tpath: 'useDefaultFilters.AGENT',\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t\tupdateState({\n\t\t\tpath: 'useDefaultFilters.QUEUE',\n\t\t\tvalue: true,\n\t\t\toperation: 'set'\n\t\t});\n\t},\n\t[UPDATE_DEFAULT_SORT_ORDER]: updateDefaultSortOrderEffect,\n\t[UPDATE_FILTERS]: updateFiltersEffect,\n\t[APPLIED_FILTERS_OBJECT]: filtersAppliedEffect\n};\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\nexport const channelReportsQuery = `query($conditions: String!,$sysId: String!) {\n\tGlideRecord_Query {\n\t\tm2m_awa_service_channel_report(queryConditions: $conditions, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t_results {\n\t\t\t\treport {\n\t\t\t\t\tvalue\n\t\t\t\t\tdisplayValue\n\t\t\t\t}\n\t\t\t\tlabel {\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\t\n\t\t},\n\t\tawa_service_channel(queryConditions: $sysId){\n\t\t\t_results{\n\t\t\t\tname{\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nexport const fetchQueuesIdsQuery = `\n\tquery ($queryConditions: String!) {\n\t\tGlideRecord_Query {\n\t  \t\tawa_group_queue_priority(queryConditions: $queryConditions, pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t_results {\n\t\t\t\t\tqueue {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\t_reference {\n\t\t\t\t\t\t\tservice_channel {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t  \t\t}\n\t\t}\n  \t}\n`;\n","export { default } from './training-article';\n","import '@servicenow/now-empty-state';\nimport '@servicenow/now-icon';\nimport '@servicenow/now-heading';\n\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport actionHandlers from './actionHandlers';\nimport view from './view';\nimport styles from './styles.scss';\nimport { STATUS } from './constants';\n\nexport default createCustomElement('sn-manager-training-article', {\n\trenderer: { type: snabbdom, view },\n\tproperties: {\n\t\tsysId: {} // sn_coaching_recommendation,\n\t},\n\tinitialState: {\n\t\tarticle: null,\n\t\terror: null,\n\t\tstatus: STATUS.initial\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport { fetchTrainingRecordEffect } from './effects';\nimport {\n\tSTATUS,\n\tFETCH_TRAINING_RECORD,\n\tFETCH_TRAINING_RECORD_SUCCESS,\n\tFETCH_TRAINING_RECORD_START\n} from './constants';\nimport get from 'lodash/get';\n\nexport const updateStatus = status => ({ updateState }) =>\n\tupdateState({ status });\n\nexport const handleComponentBootstrapped = ({ properties, dispatch }) => {\n\tconst { sysId } = properties;\n\tdispatch(FETCH_TRAINING_RECORD, { sysId });\n};\n\nexport const handleFetchTraingRecordSuccess = ({ action, updateState }) => {\n\tconst articleResult = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sn_coaching_recommendation._results[0]',\n\t\tnull\n\t);\n\n\tif (!articleResult) {\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'empty'\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tconst article = {\n\t\tnumber: articleResult.number.displayValue,\n\t\ttitle: articleResult.name.displayValue,\n\t\tcontentHtml: articleResult.message.displayValue,\n\t\tcategory: articleResult.learning_category.displayValue,\n\t\tupdatedOn: articleResult.sys_updated_on.displayValue\n\t};\n\n\tupdateState({ article, status: STATUS.articleLoaded });\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: handleComponentBootstrapped,\n\t[FETCH_TRAINING_RECORD]: fetchTrainingRecordEffect,\n\t[FETCH_TRAINING_RECORD_START]: updateStatus(STATUS.articleLoading),\n\t[FETCH_TRAINING_RECORD_SUCCESS]: handleFetchTraingRecordSuccess\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { fetchTrainingRecordQuery } from './queries';\nimport {\n\tFETCH_TRAINING_RECORD_START,\n\tFETCH_TRAINING_RECORD_SUCCESS,\n\tFETCH_TRAINING_RECORD_ERROR\n} from './constants';\n\nexport const fetchTrainingRecordEffect = createGraphQLEffect(\n\tfetchTrainingRecordQuery,\n\t{\n\t\tvariableList: ['sysId'],\n\t\tstartActionType: FETCH_TRAINING_RECORD_START,\n\t\tsuccessActionType: FETCH_TRAINING_RECORD_SUCCESS,\n\t\terrorActionType: FETCH_TRAINING_RECORD_ERROR\n\t}\n);\n","export const fetchTrainingRecordQuery = `query ($sysId: String!) {\n  GlideRecord_Query {\n    sn_coaching_recommendation(sys_id: $sysId) {\n      _results {\n        number {\n          displayValue\n        }\n        name {\n          displayValue\n        }\n        message {\n          displayValue\n        }\n        learning_category {\n          displayValue\n        }\n        sys_updated_on {\n          displayValue\n        }\n      }\n    }\n  }\n}`;\n","import { createElement } from '@servicenow/ui-renderer-snabbdom';\nimport { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport { t } from 'sn-translate';\nimport { STATUS } from './constants';\nimport moment from 'moment';\n\nexport const renderError = state => <now-empty-state type={state.error.type} />;\n\nexport const renderLoading = () => (\n\t<now-empty-state type=\"loading\" bodyText={t('Loading article...')} />\n);\n\nexport const renderArticle = state => {\n\tconst { article } = state;\n\tconst updated = t('Updated {0}', moment(article.updatedOn).fromNow());\n\tconst category = article.category;\n\tconst articleContentHtml = createElement('article', {\n\t\tprops: { innerHTML: article.contentHtml }\n\t});\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<header>\n\t\t\t\t<div className=\"category\">{category}</div>\n\t\t\t\t<now-heading\n\t\t\t\t\thas-no-margin\n\t\t\t\t\tlabel={article.title}\n\t\t\t\t\tlevel=\"1\"\n\t\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\t/>\n\t\t\t\t<ul className=\"meta-list\">\n\t\t\t\t\t<li className=\"meta-list-item\">\n\t\t\t\t\t\t<now-icon icon=\"calendar-outline\" size=\"sm\" />\n\t\t\t\t\t\t<span>{updated}</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</header>\n\t\t\t{articleContentHtml}\n\t\t</Fragment>\n\t);\n};\n\nexport const isLoading = state => {\n\tconst { status } = state;\n\n\treturn status === STATUS.initial || status === STATUS.articleLoading;\n};\n\nexport default state => {\n\tif (state.error) {\n\t\treturn renderError(state);\n\t}\n\tif (isLoading(state)) {\n\t\treturn renderLoading();\n\t}\n\treturn renderArticle(state);\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;flex-direction:column;height:100%;padding:var(--training-article--padding,1.5rem);overflow:auto}now-empty-state{flex:1}header{border-bottom:1px solid rgb(var(--now-color--divider-tertiary));color:RGB(var(--now-color--neutral-9));display:flex;flex-direction:column;padding:0 0 1.25rem;margin:0 0 1rem}now-heading{margin-bottom:.75rem}article{padding:0 0 1.5rem}.category{font-size:var(--training-article-category--font-size,.75rem);margin-bottom:.75rem}.meta-list{display:inline-flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}.meta-list-item{align-items:center;display:flex;margin:0 .5rem 0 0}.meta-list-item now-icon{margin:0 .25rem 0 0}\", \"\"]);\n\n// exports\n","export { default } from './coaching-assigned-training';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\n\nexport default createCustomElement('sn-manager-coaching-assigned-training', {\n\trenderer: { type: snabbdom, view },\n\tproperties: {\n\t\tsysId: {}, // sn_coaching_assessment_recommended_learning\n\t\tfields: {}\n\t}\n});\n","import get from 'lodash/get';\n\nexport default state => {\n\tconst recommendationTable = get(\n\t\tstate.properties,\n\t\t'fields.recommendation_table',\n\t\tnull\n\t);\n\tconst recommendationId = get(\n\t\tstate.properties,\n\t\t'fields.recommendation_id',\n\t\tnull\n\t);\n\n\tif (!recommendationTable || !recommendationId) {\n\t\treturn <now-empty-state type=\"empty\" />;\n\t}\n\n\tif (recommendationTable.value === 'sn_coaching_recommendation') {\n\t\treturn <sn-manager-training-article sysId={recommendationId.value} />;\n\t}\n\n\treturn (\n\t\t<sn-knowledge-discussion-wrapper\n\t\t\ttable={recommendationTable.value}\n\t\t\tsys-id={recommendationId.value}\n\t\t/>\n\t);\n};\n","export { default } from './overlapping-requests';\n","import '@servicenow/now-heading';\nimport '@servicenow/now-card';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-label-value';\nimport { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport actionHandlers from './actionHandlers';\nimport view from './view';\nimport styles from './styles.scss';\nimport { STATUS } from './constants';\n\nexport default createCustomElement('sn-manager-overlapping-requests', {\n\trenderer: { type: snabbdom, view },\n\tproperties: {\n\t\tsysId: {}, // sysapproval_approver\n\t\tfields: {}\n\t},\n\tinitialState: {\n\t\toverlappingRequests: null,\n\t\terror: null,\n\t\tstatus: STATUS.initial\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport { fetchOverlappingRequestsEffect } from './effects';\nimport {\n\tSTATUS,\n\tFETCH_OVERLAPPING_REQUESTS,\n\tFETCH_OVERLAPPING_REQUESTS_START,\n\tFETCH_OVERLAPPING_REQUESTS_SUCCESS,\n\tFETCH_OVERLAPPING_REQUESTS_ERROR\n} from './constants';\nimport { ITEM_SELECTED, NOW_CARD_CLICKED } from '../../common/constants';\nimport get from 'lodash/get';\n\nexport const updateStatus = status => ({ updateState }) =>\n\tupdateState({ status });\n\nexport const handleComponentBootstrapped = ({\n\tproperties,\n\tupdateState,\n\tdispatch\n}) => {\n\tconst requestSysId = get(properties, 'fields.document_id.value', null);\n\n\tif (requestSysId) {\n\t\tdispatch(FETCH_OVERLAPPING_REQUESTS, { requestSysId });\n\t} else {\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'empty'\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const handleFetchOverlappingRequestsSuccess = ({\n\taction,\n\tupdateState\n}) => {\n\tconst overlappingRequests = get(\n\t\taction.payload,\n\t\t'data.GlideRecord_Query.sn_shift_planning_agent_schedule_request._results[0]._query.overlappingRequests.sn_shift_planning_agent_schedule_request._results',\n\t\tnull\n\t);\n\n\tif (overlappingRequests) {\n\t\tupdateState({\n\t\t\toverlappingRequests,\n\t\t\tstatus: STATUS.overlappingRequestLoaded\n\t\t});\n\t} else {\n\t\tupdateState({\n\t\t\terror: {\n\t\t\t\ttype: 'empty'\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const handleFetchOverlappingRequestsError = ({ updateState }) => {\n\tupdateState({\n\t\terror: {\n\t\t\ttype: 'loading-error'\n\t\t}\n\t});\n};\n\nexport const handleCardClick = ({ action, dispatch }) => {\n\tconst approvalSysId = get(\n\t\taction.payload,\n\t\t'request._query.approval.sysapproval_approver._results[0].sysId.value',\n\t\tnull\n\t);\n\n\tif (approvalSysId) {\n\t\tdispatch(ITEM_SELECTED, {\n\t\t\ttable: 'sysapproval_approver',\n\t\t\tsys_id: approvalSysId\n\t\t});\n\t}\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: handleComponentBootstrapped,\n\t[FETCH_OVERLAPPING_REQUESTS]: fetchOverlappingRequestsEffect,\n\t[FETCH_OVERLAPPING_REQUESTS_START]: updateStatus(\n\t\tSTATUS.overlappingRequestLoading\n\t),\n\t[FETCH_OVERLAPPING_REQUESTS_SUCCESS]: handleFetchOverlappingRequestsSuccess,\n\t[FETCH_OVERLAPPING_REQUESTS_ERROR]: handleFetchOverlappingRequestsError,\n\t[NOW_CARD_CLICKED]: handleCardClick\n};\n","import { createGraphQLEffect } from '@servicenow/ui-effect-graphql';\nimport { fetchOverlappingRequestsQuery } from './queries';\nimport {\n\tFETCH_OVERLAPPING_REQUESTS_START,\n\tFETCH_OVERLAPPING_REQUESTS_SUCCESS,\n\tFETCH_OVERLAPPING_REQUESTS_ERROR\n} from './constants';\n\nexport const fetchOverlappingRequestsEffect = createGraphQLEffect(\n\tfetchOverlappingRequestsQuery,\n\t{\n\t\tvariableList: ['requestSysId'],\n\t\tstartActionType: FETCH_OVERLAPPING_REQUESTS_START,\n\t\tsuccessActionType: FETCH_OVERLAPPING_REQUESTS_SUCCESS,\n\t\terrorActionType: FETCH_OVERLAPPING_REQUESTS_ERROR\n\t}\n);\n","import { GRAPHQL_MAX_LIMIT } from '../../common/constants';\n\n/**\n * Get all pending and approved requests that overlap $requestSysId\n */\nexport const fetchOverlappingRequestsQuery = `query ($requestSysId: String!) {\n\tGlideRecord_Query {\n\t\tsn_shift_planning_agent_schedule_request(sys_id: $requestSysId) {\n\t\t\t_results {\n\t\t\t\t_query {\n\t\t\t\t\toverlappingRequests: GlideRecord_Query {\n\t\t\t\t\t\tsn_shift_planning_agent_schedule_request(queryConditions: \"sys_id!=$$parent.sys_id$$^start<=$$parent.end$$^end>=$$parent.start$$^state!=3^ORDERBYstart\", pagination: {limit: ${GRAPHQL_MAX_LIMIT}}) {\n\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\tsysId: sys_id {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tagent {\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstart {\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tend {\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstate {\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\tdisplayValue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_query {\n\t\t\t\t\t\t\t\t\tapproval: GlideRecord_Query {\n\t\t\t\t\t\t\t\t\t\tsysapproval_approver(queryConditions: \"document_id=$$parent.sys_id$$\", pagination: {limit: 1}) {\n\t\t\t\t\t\t\t\t\t\t\t_results {\n\t\t\t\t\t\t\t\t\t\t\t\tsysId: sys_id {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n","import { Fragment } from '@seismic/snabbdom-renderer'; // eslint-disable-line\nimport { t } from 'sn-translate';\nimport { STATUS } from './constants';\nimport { getCardStatus, getCardAriaLabel } from './selectors';\n\nexport const renderError = state => <now-empty-state {...state.error} />;\n\nexport const renderLoading = () => (\n\t<now-empty-state type=\"loading\" bodyText={false} />\n);\n\nexport const renderCards = state => {\n\tconst { overlappingRequests } = state;\n\n\treturn overlappingRequests.map(request => {\n\t\tconst { sysId, agent, start, end, state } = request;\n\t\tconst configAria = {\n\t\t\t'aria-label': getCardAriaLabel(request)\n\t\t};\n\n\t\treturn (\n\t\t\t<now-card\n\t\t\t\tkey={sysId.value}\n\t\t\t\tsize=\"lg\"\n\t\t\t\tinteraction=\"click\"\n\t\t\t\tconfigAria={configAria}\n\t\t\t\tappend-to-payload={{ request }}\n\t\t\t>\n\t\t\t\t<now-card-header\n\t\t\t\t\theading={{\n\t\t\t\t\t\tlabel: agent.displayValue,\n\t\t\t\t\t\tsize: 'sm',\n\t\t\t\t\t\tlines: 2\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<now-label-value-stacked\n\t\t\t\t\talign=\"horizontal\"\n\t\t\t\t\twrapped={true}\n\t\t\t\t\titems={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: t('Start date'),\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tvalue: start.displayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: t('End date'),\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tvalue: end.displayValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: t('State'),\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: 'highlighted-value',\n\t\t\t\t\t\t\t\tlabel: state.displayValue,\n\t\t\t\t\t\t\t\tstatus: getCardStatus(state.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</now-card>\n\t\t);\n\t});\n};\n\nexport const isLoading = state => {\n\tconst { status } = state;\n\n\treturn (\n\t\tstatus === STATUS.initial || status === STATUS.overlappingRequestLoading\n\t);\n};\n\nexport const renderContent = state => {\n\tif (state.error) {\n\t\treturn renderError(state);\n\t}\n\tif (isLoading(state)) {\n\t\treturn renderLoading();\n\t}\n\treturn renderCards(state);\n};\n\nexport default state => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-heading\n\t\t\t\tlabel={t('Overlapping requests')}\n\t\t\t\tlevel=\"3\"\n\t\t\t\tvariant=\"header-secondary\"\n\t\t\t\twont-wrap\n\t\t\t\thas-no-margin\n\t\t\t/>\n\t\t\t{renderContent(state)}\n\t\t</Fragment>\n\t);\n};\n","import { t } from 'sn-translate';\n\nexport const getCardStatus = requestState => {\n\tswitch (requestState) {\n\tcase '2':\n\t\treturn 'positive';\n\tcase '3':\n\t\treturn 'critical';\n\tdefault:\n\t\treturn 'low';\n\t}\n};\n\nexport const getCardAriaLabel = ({ agent, start, end, state }) =>\n\tt(`Agent {0} start date {1} end date {2} state {3}`, [\n\t\tagent.displayValue,\n\t\tstart.displayValue,\n\t\tend.displayValue,\n\t\tstate.displayValue\n\t]);\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;flex-direction:column;height:100%;padding:1.5rem;overflow-x:hidden;overflow-y:auto}now-empty-state{flex:1}now-card{padding:0 0 1rem}now-card:last-child,now-heading{padding:0 0 1.5rem}\", \"\"]);\n\n// exports\n","import './manager-user-active-work-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport actionHandlers from './actionHandlers';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-user-active-work-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tinitialState: {\n\t\tallActiveWork: [],\n\t\tpaginatedActiveWork: [],\n\t\tloading: true,\n\t\tgridProps: {},\n\t\tpagination: {},\n\t\tdataUpdatedTime: Date.now(),\n\t\trowCount: 0\n\t},\n\tproperties: {\n\t\tsysId: ''\n\t},\n\tactionHandlers,\n\tstyles\n});\n","import '@servicenow/now-record-list';\nimport '../sn-manager-channels-header';\nimport { getHeaderProps } from './helper';\nconst view = state => {\n\treturn (\n\t\t<div className=\"sn-manager-user-active-work-container\">\n\t\t\t{state.loading ? _renderEmptyState() : _renderList(state)}\n\t\t</div>\n\t);\n};\n\nconst _renderList = state => {\n\tconst { gridProps, pagination, loading } = state;\n\tconst headerProps = getHeaderProps(state);\n\treturn (\n\t\t<div className=\"sn-manager-user-active-work-list\">\n\t\t\t<sn-manager-channels-header {...headerProps} />\n\t\t\t<hr />\n\t\t\t<now-table\n\t\t\t\thideCheckboxHover={true}\n\t\t\t\thideLastRefreshedText={true}\n\t\t\t\thideTitleRowCount={true}\n\t\t\t\thideRefreshButton={true}\n\t\t\t\thideFilterPanel={true}\n\t\t\t\thideDeclarativeActions={true}\n\t\t\t\thideRowSelector={true}\n\t\t\t\tloading={false}\n\t\t\t\tgridModel={gridProps}\n\t\t\t\thideColumnGrouping={true}\n\t\t\t\thidePanel={true}\n\t\t\t\thideSelectAll={true}\n\t\t\t\thidePagination={true}\n\t\t\t\thideColumnFiltering={true}\n\t\t\t\thideColumnSorting={false}\n\t\t\t\thideCellFilter={true}\n\t\t\t\thideQuickEdit={true}\n\t\t\t\thideMenuButton={true}\n\t\t\t\thideHeader={true}\n\t\t\t/>\n\t\t\t{!loading ? <now-pagination {...pagination} /> : ''}\n\t\t</div>\n\t);\n};\n\nconst _renderEmptyState = () => {\n\treturn (\n\t\t<now-empty-state\n\t\t\tbodyText={false}\n\t\t\theaderText={false}\n\t\t\ttype=\"loading\"\n\t\t\tvariant=\"fit\"\n\t\t/>\n\t);\n};\n\nexport default view;\n","import { createHttpEffect } from '@servicenow/ui-effect-http';\nimport logErrorEffect from '../../utils/logErrorEffect';\nimport {\n\tFETCH_ACTIVE_WORK,\n\tFETCH_ACTIVE_WORK_SUCCEEDED,\n\tFETCH_ACTIVE_WORK_FAILED,\n\tPAGINATION_PAGE_UPDATE,\n\tPAGINATION_LIMIT_UPDATE,\n\tAGENTS_ACTIVE_WORK_ENDPOINT,\n\tOPEN_RECORD,\n\tITEM_SELECTED,\n\tACTIVE_WORK_REFRESH_REQUESTED,\n\tNOW_BUTTON_CLICKED\n} from './constants';\nimport { COMPONENT_BOOTSTRAPPED } from '@servicenow/ui-core/lib/constants';\nimport get from 'lodash/get';\nimport {\n\thandlePagination,\n\tbuildPaginationModel,\n\tbuildGridModel\n} from './helper';\n\nconst fetchActiveWork = createHttpEffect(AGENTS_ACTIVE_WORK_ENDPOINT, {\n\tmethod: 'GET',\n\tpathParams: ['agentId'],\n\tsuccessActionType: FETCH_ACTIVE_WORK_SUCCEEDED,\n\terrorActionType: FETCH_ACTIVE_WORK_FAILED\n});\n\nconst fetchActiveWorkSucceeded = ({ updateState, action }) => {\n\tconst data = get(action, 'payload.result', []);\n\tconst pagination = buildPaginationModel(data.length);\n\tconst paginatedActiveWorkData = data.slice(0, pagination.limit);\n\tupdateState({\n\t\tgridProps: buildGridModel(paginatedActiveWorkData, data.length),\n\t\tallActiveWork: data,\n\t\tpaginatedActiveWork: paginatedActiveWorkData,\n\t\trowCount: data.length,\n\t\tloading: false,\n\t\tdataUpdatedTime: Date.now(),\n\t\tpagination: pagination\n\t});\n};\n\nconst buildBootstrapData = ({ state, dispatch, updateState }) => {\n\tconst agentSysId = get(state, 'properties.sysId');\n\tupdateState({\n\t\tloading: true\n\t});\n\tdispatch(FETCH_ACTIVE_WORK, { agentId: agentSysId });\n};\n\nconst openRecordHandler = ({ action, dispatch }) => {\n\tconst {\n\t\tpayload: { cell }\n\t} = action;\n\tconst tableName = get(cell, 'columnData.documentIdReference');\n\tconst sysId = get(cell, 'columnData.value');\n\tdispatch(ITEM_SELECTED, {\n\t\ttable: tableName,\n\t\tsys_id: sysId,\n\t\tparams: {\n\t\t\tsysId: sysId,\n\t\t\tselectedTabIndex: 0\n\t\t}\n\t});\n};\n\nconst handleNowButtonClicked = ({ action, dispatch }) => {\n\tconst payload = get(action, 'payload', {});\n\tif (payload.event)\n\t\tdispatch(payload.event, {\n\t\t\t...payload\n\t\t});\n};\n\nexport default {\n\t[COMPONENT_BOOTSTRAPPED]: buildBootstrapData,\n\t[FETCH_ACTIVE_WORK]: fetchActiveWork,\n\t[FETCH_ACTIVE_WORK_SUCCEEDED]: fetchActiveWorkSucceeded,\n\t[FETCH_ACTIVE_WORK_FAILED]: logErrorEffect,\n\t[PAGINATION_PAGE_UPDATE]: handlePagination,\n\t[PAGINATION_LIMIT_UPDATE]: handlePagination,\n\t[OPEN_RECORD]: openRecordHandler,\n\t[ACTIVE_WORK_REFRESH_REQUESTED]: buildBootstrapData,\n\t[NOW_BUTTON_CLICKED]: handleNowButtonClicked\n};\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;flex-direction:column}.sn-manager-user-active-work-container,:host{height:100%}.sn-manager-user-active-work-list{height:80%}\", \"\"]);\n\n// exports\n","import './manager-user-pending-work-container';\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './view';\nimport styles from './styles.scss';\n\ncreateCustomElement('sn-manager-user-pending-work-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tsysId: {}\n\t},\n\tstyles\n});\n","import '@servicenow/now-heading';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-record-list-connected';\nimport { AWA_WORK_ITEM, LIST_TITLE } from './constants';\nimport { MANAGER_WORKSPACE_VIEW } from '../../common/constants';\n\nconst view = state => {\n\tconst { sysId } = state.properties;\n\tconst query = `state=pending_accept^assigned_to=${sysId}`;\n\treturn (\n\t\t<div className=\"pending-work-container\">\n\t\t\t<now-record-list-connected\n\t\t\t\ttable={AWA_WORK_ITEM}\n\t\t\t\tlistTitle={LIST_TITLE}\n\t\t\t\tquery={query}\n\t\t\t\thideDeclarativeActions={true}\n\t\t\t\tview={MANAGER_WORKSPACE_VIEW}\n\t\t\t\theaderSize=\"md\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default view;\n","import { t } from 'sn-translate';\n\nexport const AWA_WORK_ITEM = 'awa_work_item';\nexport const LIST_TITLE = t('Pending Work');\n","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./styles.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pending-work-container{height:100%}\", \"\"]);\n\n// exports\n"],"sourceRoot":""}