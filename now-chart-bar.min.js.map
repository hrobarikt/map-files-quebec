{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_chart_bar/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_chart_bar/./src/index.js","webpack://__TECTONIC__$servicenow_now_chart_bar/./src/now-chart-bar.js","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_library_enhanced_element_19_8_3\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_library_chart_19_8_3\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_behavior_theme_19_8_3\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__xenolith_4_1_6\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$devsnc_sn_chart_screen_reader_table\"","webpack://__TECTONIC__$servicenow_now_chart_bar/./src/_now-chart-bar.scss?34fd","webpack://__TECTONIC__$servicenow_now_chart_bar/./src/_now-chart-bar.scss","webpack://__TECTONIC__$servicenow_now_chart_bar//mnt/jenkins/workspace/motive_design-system_quebec-LAU4EC4LTND4QOM764JRONU2HSYHYZ6QDWUSLZIXTBP7KKZ7BWQQ/target/checkout/node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_chart_bar/./src/schemas/chart-bar-schema.js","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_now_tooltip\"","webpack://__TECTONIC__$servicenow_now_chart_bar/external \"__TECTONIC__$servicenow_library_schemas_19_8_3\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","createNowChartBarDriver","COMPONENT_DOM_READY","COMPONENT_PROPERTY_CHANGED","COMPONENT_DISCONNECTED","actionTypes","version","require","registry","window","___NOW_DESIGN_SYSTEM_PACKAGES___","DEFAULT_BUTTON_LABEL","DEFAULT_BUTTON_ICON","PROPERTIES","accessibilityConfig","xenolith","schema","accessibilityConfigSchema","accessibilityMode","default","type","accessibilityTable","configAria","anyOf","properties","chart","configAriaSchema","additionalProperties","barWidth","dataLabelConfig","dataLabelConfigSchema","datasetConfig","patternProperties","seriesConfigSchema","displayByCategory","extents","extraMargin","left","right","top","bottom","hardMute","height","oneOf","const","hideRegister","hideGridlines","hideYAxis","locale","mutedSeries","items","registerConfig","registerConfigSchema","registerPosition","enum","selectedPoints","seriesConfig","seriesData","showDataLabels","showTooltip","tooltipConfig","thresholdConfig","thresholdConfigSchema","thresholdData","thresholdDataPointSchema","width","xAxisConfig","axisConfigSchema","axisType","xFormat","yAxisConfig","yFormat","yUnit","gridConfig","strokeWidth","dashPattern","color","interactions","eventName","dispatchName","orderBy","orientation","accessibilityTableCaption","enableContextualButton","contextualButtonConfig","label","icon","createChartInstance","host","state","chartContainer","shadowRoot","getElementById","HorizontalBar","node","theme","behaviors","VerticalBar","XENOLITH_PROPERTIES","SR_TABLE_PROPERTIES","buildAndSanitizePropsMaps","preProcessMap","createXenoPropPreProcessMap","processArgs","showDataOnHover","getDataFn","processDataFn","getClosestDataOnClick","getClosestSeriesOnClick","updateState","payload","stopPropagation","targetRef","textContent","content","opened","path","operation","DO_TOTAL_RE","buildSRTExportOptions","exportType","dataStreams","configKey","dataKey","coords","forcePercent","aggregators","test","formatters","x","format","scale","unit","y","buildSRTBarProps","length","firstConfig","values","catSums","needPercentages","catKey","for","dataPoint","series","newData","map","newDP","nextYKey","dValue","Math","round","buildAccessibilityTableOptions","props","tableOptions","createEnhancedElement","initialState","infoTooltip","view","dispatch","chartInstance","JSON","stringify","Fragment","className","size","on-click","id","options","data","exportChartData","manage-opened","target-ref","delay","show","hide","styles","behavior","themeBehavior","actionHandlers","createTooltipActionHandler","ref","createXenoDomReadyHandler","xenoPropList","observedProps","reactions","processValue","args","v","getMutedSeries","action","previousValue","setTimeout","destroy","createAndInitChartInstance","applyPropToChartInstance","unschedule","meta","effect","schedule","dispatches","__TECTONIC__$servicenow_library_enhanced_element_19_8_3","__TECTONIC__$servicenow_library_chart_19_8_3","__TECTONIC__$servicenow_ui_core","__TECTONIC__sn_translate","__TECTONIC__$servicenow_behavior_theme_19_8_3","__TECTONIC__xenolith_4_1_6","__TECTONIC__$devsnc_sn_chart_screen_reader_table","result","toString","push","useSourceMap","list","this","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","monochrome","tickConfig","position","fontFamily","fontStyle","fontWeight","fontSize","labelFit","rotation","translation","tickFormat","tickPadding","tickSizeInner","tickSizeOuter","ticks","tickArguments","tickValues","disabled","labelColor","tickColor","wrapLabels","truncationType","maximumSize","titleConfig","padding","customLocation","anchor","title","autoRotateLabels","align","stacked","clipped","collisions","showBox","fontColor","config","valueColor","mutedOpacity","separator","expandToFit","legendOnly","showBorder","smallSpacing","oneLine","justifyItems","disableGrid","showPercentages","colorMap","colorPalette","opacity","axis","hideLabel","hideValue","__TECTONIC__$servicenow_now_button","__TECTONIC__$servicenow_now_tooltip","__TECTONIC__$servicenow_library_schemas_19_8_3"],"mappings":"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","file":"now-chart-bar.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","import './now-chart-bar';\nexport {createNowChartBarDriver} from '../drivers';\n","import {createEnhancedElement} from '@servicenow/library-enhanced-element';\nimport {\n\tbuildAndSanitizePropsMaps,\n\tcreateXenoDomReadyHandler,\n\tapplyPropToChartInstance,\n\tcreateAndInitChartInstance,\n\tcreateXenoPropPreProcessMap\n} from '@servicenow/library-chart';\nimport {actionTypes} from '@servicenow/ui-core';\nimport {Fragment} from '@servicenow/ui-renderer-snabbdom';\nimport {exportChartData} from '@servicenow/library-chart';\nimport {t} from 'sn-translate';\nimport themeBehavior from '@servicenow/behavior-theme';\nimport {VerticalBar, HorizontalBar} from 'xenolith/dist/es';\nimport '@devsnc/sn-chart-screen-reader-table';\nimport styles from './_now-chart-bar.scss';\nimport {\n\taccessibilityConfigSchema,\n\taxisConfigSchema,\n\tdataLabelConfigSchema,\n\tregisterConfigSchema,\n\tseriesConfigSchema,\n\tthresholdConfigSchema,\n\tthresholdDataPointSchema\n} from './schemas/chart-bar-schema';\nimport '@servicenow/now-button';\nimport '@servicenow/now-tooltip';\nimport {\n\tcreateTooltipActionHandler,\n\tschedule,\n\tunschedule\n} from '@servicenow/now-tooltip';\nimport {configAriaSchema} from '@servicenow/library-schemas';\nconst {\n\tCOMPONENT_DOM_READY,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCOMPONENT_DISCONNECTED\n} = actionTypes;\n\n/*\n * TODO: This is a temporary way of debugging customer problems during the\n * Seismic 18 upgrade process, because tectonic resolution makes it hard to\n * know what version of a component is running. Remove when not needed.\n * Intentionally runs in dev + production environments so we can debug all builds.\n */\nconst {name, version} = require('../package.json');\nconst registry = (window.___NOW_DESIGN_SYSTEM_PACKAGES___ =\n\twindow.___NOW_DESIGN_SYSTEM_PACKAGES___ || {});\nif (!registry[name]) {\n\tregistry[name] = version;\n}\n\nconst DEFAULT_BUTTON_LABEL = t('Reset');\nconst DEFAULT_BUTTON_ICON = 'close-fill';\n\nconst PROPERTIES = {\n\t/**\n\t * Sets accessibility options.\n\t * @type {AccessibilityConfig}\n\t */\n\taccessibilityConfig: {xenolith: true, schema: accessibilityConfigSchema},\n\t/**\n\t * When true, enables accessibility options for the chart. See `accessibilityConfig` for available options.\n\t * @type {boolean}\n\t */\n\taccessibilityMode: {\n\t\txenolith: true,\n\t\tdefault: false,\n\t\tschema: {type: 'boolean'}\n\t},\n\t/**\n\t * When true, displays a screen-readable table below the chart for accessibility.\n\t * @type {boolean}\n\t */\n\taccessibilityTable: {default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Supplies an aria-label that describes the chart for screen readers.\n\t * Pass an object whose keys reference a specific HTML element within the\n\t * component. The value of each key is an object that contains\n\t * an ARIA property (or properties) and corresponding value(s). These ARIA\n\t * properties are set on the specified element.\n\t * The 'chart' key corresponds to the inner html `<div>` element in\n\t * now-chart-bar that wraps the chart and the register. Use this property to\n\t * supply an aria-label that describes the chart for screen readers. See\n\t * https://www.w3.org/TR/wai-aria-1.1/ for other properties and accepted values.\n\t * @type {{ 'aria-*': string }}\n\t */\n\tconfigAria: {\n\t\tschema: {\n\t\t\tanyOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tchart: configAriaSchema\n\t\t\t\t\t},\n\t\t\t\t\tadditionalProperties: false\n\t\t\t\t},\n\t\t\t\tconfigAriaSchema\n\t\t\t]\n\t\t}\n\t},\n\t/**\n\t * Width in pixels of each bar in a stacked bar chart,\n\t * or the total width in pixels of a single group of bars in a grouped bar chart.\n\t * The chart calculates the bar height to achieve to desired bar width.\n\t * Note: Do not set this property and the `height` property. If both `barWidth` and `height` are set in pixels,\n\t * the height calculated from the `barWidth` property overrides the value of the `height` property.\n\t * @type {number}\n\t */\n\tbarWidth: {xenolith: true, schema: {type: 'number'}},\n\t/**\n\t * Data label when the `showDataLabels` property is true. Includes the strategy for generating\n\t * labels, type styling, and alignment options.\n\t * @type {DataLabelConfig}\n\t */\n\tdataLabelConfig: {xenolith: true, schema: dataLabelConfigSchema},\n\t/**\n\t * Common series configuration settings. When a series configuration is used for mutliple series,\n\t * it can be defined here and referenced from other series configuration properties using the `for` keyword.\n\t * This property is a map object containing the dataset name and the configuration for the series.\n\t * @type {Object<string, SeriesConfig>}\n\t */\n\tdatasetConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tpatternProperties: {\n\t\t\t\t'.*': seriesConfigSchema\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * When true, displays a different color for each category and enables `colorMap` and `colorPalette` properties in the `seriesConfig` object.\n\t * @type {boolean}\n\t */\n\tdisplayByCategory: {\n\t\txenolith: true,\n\t\tdefault: false,\n\t\tschema: {type: 'boolean'}\n\t},\n\t/**\n\t * Fixed or dynamic extents, limiting the data values displayed on the chart to a specific range.\n\t * To specify an extent, pass an object whose keys are the axis names and whose values are array\n\t * tuples holding `[min, max]` values. By default, the range is calculated dynamically from the data,\n\t * which corresponds to passing `dynamic` as both the min and max extent value for both x and y axes.\n\t *\n\t * For example:\n\t * ```js\n\t * extents: {\n\t *   x: ['dynamic', 10000],\n\t *   y: [0, 100]\n\t * }\n\t * ```\n\t * @type {Object<string, Array<number | string>>}\n\t */\n\textents: {xenolith: true, schema: {type: 'object'}},\n\t/**\n\t * Extra space around the chart body in addition to\n\t * the space allocated for the axes.\n\t * @type {{left: number, right: number, top: number, bottom: number}}\n\t */\n\textraMargin: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tleft: {type: 'number'},\n\t\t\t\tright: {type: 'number'},\n\t\t\t\ttop: {type: 'number'},\n\t\t\t\tbottom: {type: 'number'}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * When true, redraws the chart with new extents that only include non-muted data.\n\t * By default, the `mutedSeries` content is removed, but the chart extents are\n\t * not changed to reflect the updated range of the data represented.\n\t * @type {boolean}\n\t */\n\thardMute: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * The chart's height in pixels. Enter either the number of pixels, or the string `auto`\n\t * to use the height of the parent DOM element.\n\t * @type {'auto' | number}\n\t */\n\theight: {\n\t\txenolith: true,\n\t\tschema: {oneOf: [{const: 'auto'}, {type: 'number'}]}\n\t},\n\t/**\n\t * When true, hides the register that appears beside the chart.\n\t * @type {boolean}\n\t */\n\thideRegister: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * When true, hides the dependent axis gridlines on the chart.\n\t * @type {boolean}\n\t */\n\thideGridlines: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * When true, hides the dependent axis on the chart.\n\t * @type {boolean}\n\t */\n\thideYAxis: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Configures time and number formatting for different languages.\n\t * Specify the locale using one of the following two-part `language-COUNTRY` IETF codes:\n\t * `ar-AE`, `ar-BH`, `ar-DJ`, `ar-DZ`, `ar-EG`, `ar-EH`, `ar-ER`, `ar-IL`, `ar-IQ`, `ar-JO`, `ar-KM`, `ar-KW`, `ar-LB`, `ar-LY`, `ar-MA`,\n\t * `ar-MR`, `ar-OM`, `ar-PS`, `ar-QA`, `ar-SA`, `ar-SD`, `ar-SO`, `ar-SS`, `ar-SY`, `ar-TD`, `ar-TN`, `ar-YE`,\n\t * `ca-ES`, `cs-CZ`, `de-CH`, `de-DE`, `en-CA`, `en-GB`, `en-IN`, `en-US` (default), `es-ES`, `es-MX`, `fi-FI`, `fr-CA`, `fr-FR`,\n\t * `he-IL`, `hu-HU`, `it-IT`, `ja-JP`, `ko-KR`, `mk-MK`, `nl-NL`, `pl-PL`, `pr-BR`, `ru-RU`, `sv-SE`, `uk-UA`, `zh-CN`\n\t * @type {string}\n\t */\n\tlocale: {xenolith: true, schema: {type: 'string'}},\n\t/**\n\t * Name of the series to mute on the chart. Use the `hardMute` property to set muting\n\t * behavior. Soft muted series are removed, but the chart extents remain the same. Hard muted\n\t * series are removed and the chart extents are recalculated.\n\t * @type {string | Array<string> | Set<string>}\n\t */\n\tmutedSeries: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\toneOf: [\n\t\t\t\t{type: 'string'},\n\t\t\t\t{type: 'array', items: {type: 'string'}},\n\t\t\t\t{type: 'object'}\n\t\t\t]\n\t\t}\n\t},\n\t/**\n\t * Configures options for the register displayed beside the chart.\n\t * @type {RegisterConfig}\n\t */\n\tregisterConfig: {xenolith: true, schema: registerConfigSchema},\n\t/**\n\t * Sets the position and orientation of the register in relation to the chart. If you pass in the values `top` or `bottom`,\n\t * the register displays horizontally. If you pass in the values `left` or `right`,\n\t * the register displays vertically. These orientations override values in the `registerConfig` property.\n\t * @type {('top'|'bottom'|'left'|'right')}\n\t */\n\tregisterPosition: {\n\t\txenolith: true,\n\t\tschema: {type: 'string', enum: ['top', 'bottom', 'left', 'right']}\n\t},\n\t/**\n\t * A set of datapoints which should be highlighted\n\t * @type {SeriesDataPoint[]}\n\t */\n\tselectedPoints: {\n\t\txenolith: true,\n\t\tschema: {oneOf: [{type: 'object'}, {type: 'array'}]}\n\t},\n\t/**\n\t * The main configuration for the chart. This property is a map object containing\n\t * the chart name and seriesConfig object.\n\t * @type {Object<string, SeriesConfig>}\n\t */\n\tseriesConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': seriesConfigSchema}}\n\t},\n\t/**\n\t * The array of data points defining the main plotted element on the chart.\n\t * Works in conjunction with the `seriesConfig` property.\n\t * @type {SeriesDataPoint[]}\n\t */\n\tseriesData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array'}\n\t},\n\t/**\n\t * When true, shows labels for data values on the chart. Works in conjunction with the `dataLabelConfig`\n\t * property, which controls how the labels appear on the chart.\n\t * @type {boolean}\n\t */\n\tshowDataLabels: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * When true, shows a tooltip on hover that contains the closest data points from each\n\t * series. Works in conjunction with the `tooltipConfig` property, which controls how the tooltip appears.\n\t * @type {boolean}\n\t */\n\tshowTooltip: {xenolith: true, default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Configures the register, which displays values in a tooltip when hovering\n\t * over the chart.\n\t * @type {RegisterConfig}\n\t */\n\ttooltipConfig: {xenolith: true, schema: registerConfigSchema},\n\t/**\n\t * Configures the threshold element, which is an optionally labeled set of independent y values.\n\t * This property is a map object containing the series name and the\n\t * configuration for the threshold.\n\t * @type {Object<string, ThresholdConfig>}\n\t */\n\tthresholdConfig: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'object', patternProperties: {'.*': thresholdConfigSchema}}\n\t},\n\t/**\n\t * Array of data points defining the target element on the chart.\n\t * Works in conjunction with the `thresholdConfig` property.\n\t * @type {ThresholdsDataPoint[]}\n\t */\n\tthresholdData: {\n\t\txenolith: true,\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'array', items: thresholdDataPointSchema}\n\t},\n\t/**\n\t * The chart's width in pixels. Enter either the number of pixels, or the string `auto`\n\t * to use the width of the parent DOM element.\n\t * @type {'auto' | number}\n\t */\n\twidth: {\n\t\txenolith: true,\n\t\tschema: {oneOf: [{const: 'auto'}, {type: 'number'}]}\n\t},\n\t/**\n\t * Configuration for the x axis.\n\t * @type {AxisConfig}\n\t */\n\txAxisConfig: {xenolith: true, schema: axisConfigSchema},\n\t/**\n\t * Type of scale used with the dependent axis.\n\t * For descriptions of each type, see [d3 scales](https://github.com/d3/d3-scale).\n\t * @type {('linear'|'time'|'timeLocal'|'log'|'band'|'point')}\n\t */\n\taxisType: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['linear', 'time', 'timeLocal', 'log', 'band', 'point']\n\t\t}\n\t},\n\t/**\n\t * Format string or function to display x values on the chart and axes. By default, the component uses the category name.\n\t * @type {string | function}\n\t */\n\txFormat: {xenolith: true, accessibilityTable: true},\n\t/**\n\t * Configure the dependent axis, including axis orientation, tick mark configuration and axis title options.\n\t * @type {AxisConfig}\n\t */\n\tyAxisConfig: {xenolith: true, schema: axisConfigSchema},\n\t/**\n\t * Format string or function to display dependent axis values on the chart and axes.\n\t * - Strings are passed to d3 and must conform to their number formatting code. See [Number Formats](https://github.com/d3/d3/blob/master/API.md#number-formats-d3-format).\n\t * - Functions must accept a number and return a string.\n\t * @type {string | function}\n\t */\n\tyFormat: {xenolith: true, accessibilityTable: true},\n\t/**\n\t * The unit of measure for y values.\n\t * If present, the component appends the unit to the end of all y values on the chart.\n\t * @type {string}\n\t */\n\tyUnit: {xenolith: true, schema: {type: 'string'}},\n\t/**\n\t * Configures color and style of dependent axis gridlines.\n\t * @type {{strokeWidth: number, dashPattern: string, color: string}}\n\t */\n\tgridConfig: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tstrokeWidth: {type: 'number'},\n\t\t\t\tdashPattern: {type: 'string'},\n\t\t\t\tcolor: {type: 'string'}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Defines custom actions dispatched on mouse events.\n\t * Values can either be:\n\t * - A String of preconfigured actions defined below.\n\t * - An `actionConfig` object with a possible dispatch:\n\t * ```\n\t * {\n\t *  eventName: 'click' // Name of the DOM event to subscribe to.\n\t *  getCoordsFn: 'getMouseCoords' // Either a string of a predefined function, nothing, or a custom function that gets the mouse coordinates and returns coordinates to use.\n\t *  getDataFn: 'getClosestData' // Either a string of a predefined function or a custom function that gets the coordinates from the previous callback and returns a data set.\n\t *  processDataFn: 'displayFoundData' // Either a string of a predefined function or a custom function that geta both the coordinates and the data returned by the previous callback. Can also be an array of string/functions invoked in order.\n\t *  dispatchName: 'SN_TIMESERIES#MY_CLICK' // If provided, an action with the configured name is dispatched with the result of both `getCoordsFn` and `getDataFn`.\n\t * }\n\t * ```\n\t *\n\t * The following predefined functions are available for the `actionConfig` callbacks:\n\t * - getCoordsFn: 'getMouseCoords'\n\t * - getDataFn: 'getClosestData', 'getClosestSeriesToMouse'\n\t * - processDataFn: 'displayFoundData'\n\t *\n\t * The following preconfigured interactions are available:\n\t * - `showDataOnHover`: Shows data close to the mouse in the register and/or tooltip on hover and clears the data when the user clicks out of the chart.\n\t * - `getClosestDataOnClick`: Dispatches a `SN_TIMESERIES#CLICK` event with the current coordinates and closest data to the mouse on click.\n\t * - `getClosestSeriesOnClick`: Dispatches a `SN_TIMESERIES#CLICK` event with the current coordinates and closest data and series to the mouse on click.\n\t *\n\t * @type {Array<string | ActionConfig>}\n\t */\n\tinteractions: {\n\t\txenolith: true,\n\t\tdefault: ['showDataOnHover'],\n\t\tschema: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: [\n\t\t\t\t\t\t\t'showDataOnHover',\n\t\t\t\t\t\t\t'getClosestDataOnClick',\n\t\t\t\t\t\t\t'getClosestSeriesOnClick'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\teventName: {type: 'string'},\n\t\t\t\t\t\t\tdispatchName: {type: 'string'}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Specifies the order in which to draw the bars.\n\t * - `alphabetical`: Draws bars in alphabetical order by label text.\n\t * - `dataOrder`: Draws bars in the same order as presented in `seriesData`.\n\t * - `size`: Draws bars in the order of largest to smallest. This is the default.\n\t * @type {('alphabetical'|'dataOrder'|'size')}\n\t */\n\torderBy: {\n\t\txenolith: true,\n\t\tschema: {type: 'string', enum: ['alphabetical', 'dataOrder', 'size']}\n\t},\n\t/**\n\t * Specifies the type of bar chart to render.\n\t * - `basic`: Draws one bar per data value. Use for single-series charts.\n\t * - `stacked`: Draws bars of stacked segments, one segment for each series value.\n\t * - `normalized`: Draws stacked bars of the same length that each represent a percentage of a total.\n\t * - `grouped`: Draws groups of bars for each category, one bar for each series value.\n\t * @type {('basic'|'stacked'|'normalized'|'grouped')}\n\t */\n\ttype: {\n\t\txenolith: true,\n\t\tschema: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['basic', 'stacked', 'normalized', 'grouped']\n\t\t}\n\t},\n\t/**\n\t * Specifies the orientation of the bar chart.\n\t * - `vertical`: Bars are drawn vertically from the bottom.\n\t * - `horizontal`: Bars are drawn horizontally from the left.\n\t * @type {('vertical'|'horizontal')}\n\t */\n\torientation: {\n\t\tdefault: 'vertical',\n\t\tschema: {type: 'string', enum: ['vertical', 'horizontal']}\n\t},\n\t/**\n\t * Caption for the accessibility data table.\n\t * @type {string}\n\t */\n\taccessibilityTableCaption: {\n\t\taccessibilityTable: true,\n\t\tschema: {type: 'string'}\n\t},\n\t/**\n\t * Controls whether the button is shown or hidden\n\t * @type {boolean}\n\t */\n\tenableContextualButton: {default: false, schema: {type: 'boolean'}},\n\t/**\n\t * Set the label and icon for the contextual button.\n\t * Label sets the text label.\n\t * Icon is displayed at the start of the button.\n\t * See the `now-icon` component documentation for valid inputs for icon.\n\t * @type {{label: string, icon: string}}\n\t */\n\tcontextualButtonConfig: {\n\t\tdefault: {\n\t\t\tlabel: DEFAULT_BUTTON_LABEL,\n\t\t\ticon: DEFAULT_BUTTON_ICON\n\t\t},\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tlabel: {type: 'string'},\n\t\t\t\ticon: {type: 'string'}\n\t\t\t},\n\t\t\tadditionalProperties: false\n\t\t}\n\t}\n};\n\nconst createChartInstance = function({properties, host, state}) {\n\tconst chartContainer = host.shadowRoot.getElementById('chart-container');\n\tif (properties.orientation === 'horizontal') {\n\t\treturn new HorizontalBar({\n\t\t\tnode: chartContainer,\n\t\t\ttheme: state.behaviors.theme\n\t\t});\n\t} else {\n\t\treturn new VerticalBar({\n\t\t\tnode: chartContainer,\n\t\t\ttheme: state.behaviors.theme\n\t\t});\n\t}\n};\n\nconst {XENOLITH_PROPERTIES, SR_TABLE_PROPERTIES} = buildAndSanitizePropsMaps(\n\tPROPERTIES\n);\nconst INTERACTIONS_MAP = {\n\tshowDataOnHover: [\n\t\t{\n\t\t\teventName: 'mousemove',\n\t\t\tgetDataFn: 'getClosestData',\n\t\t\tprocessDataFn: 'displayFoundData'\n\t\t},\n\t\t{\n\t\t\teventName: 'mouseout',\n\t\t\tprocessDataFn: 'clearData'\n\t\t}\n\t],\n\tgetClosestDataOnClick: [\n\t\t{\n\t\t\teventName: 'click',\n\t\t\tgetDataFn: 'getClosestData',\n\t\t\tdispatchName: 'NOW_CHART_BAR#CLICK'\n\t\t}\n\t],\n\tgetClosestSeriesOnClick: [\n\t\t{\n\t\t\teventName: 'click',\n\t\t\tgetDataFn: 'getClosestSeriesToMouse',\n\t\t\tdispatchName: 'NOW_CHART_BAR#CLICK'\n\t\t}\n\t]\n};\nconst preProcessMap = createXenoPropPreProcessMap();\npreProcessMap.interactions.processArgs = INTERACTIONS_MAP;\n\n// array of properties to observe, where each element has the `xenolith` name, and reactions is an array of steps to take when the observed\n// property changes. Reactions are processed in order. Can be one of three types:\n//   dispatch: dispatch an action, args -> `type` and optional `processValue` function. payload has the (optionally processed) updated value.\n//   updateState: update this components state. args -> `operation`, `path` and optional `processValue` function. component of state is updated with (optionally processed) value\n//   updateProperties: update this components property. args -> `operation`, `propName` and optional `processValue` function. component of state is updated with (optionally processed) value\nconst OBSERVED_PROPERTIES = [\n\t{\n\t\txenolith: 'computedBarWidth',\n\t\treactions: [\n\t\t\t{\n\t\t\t\ttype: 'dispatch',\n\t\t\t\tprocessValue: (value) => ({value}),\n\t\t\t\targs: {type: 'NOW_CHART_BAR#BAR_WIDTH_CHANGED'}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\txenolith: 'requestTooltip',\n\t\treactions: [\n\t\t\t{\n\t\t\t\t// Cannot use updateState because the tooltip need to use schedule.\n\t\t\t\ttype: 'dispatch',\n\t\t\t\targs: {type: 'PRIVATE#TOOLTIP_REQUEST'}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\txenolith: 'mutedSeries',\n\t\treactions: [\n\t\t\t{\n\t\t\t\ttype: 'dispatch',\n\t\t\t\targs: {type: 'NOW_CHART_BAR#MUTED_SERIES_CHANGED'},\n\t\t\t\tprocessValue: (v, chart) => chart.getMutedSeries()\n\t\t\t}\n\t\t]\n\t}\n];\n\nconst showTooltip = (updateState, {payload, stopPropagation}) => {\n\tlet value;\n\tstopPropagation();\n\n\tif (!payload) {\n\t\tvalue = {content: '', opened: false};\n\t} else {\n\t\tconst {targetRef, textContent} = payload;\n\t\tvalue = {\n\t\t\ttargetRef,\n\t\t\tcontent: textContent,\n\t\t\topened: true\n\t\t};\n\t}\n\n\tupdateState({\n\t\tpath: 'infoTooltip',\n\t\toperation: 'set',\n\t\tvalue\n\t});\n};\n\nconst DO_TOTAL_RE = /^stacked$/;\nconst buildSRTExportOptions = (properties) => {\n\tconst {xFormat, axisType, yFormat, yUnit, type = 'stacked'} = properties;\n\n\tconst exportType = 'flatTable';\n\tconst forcePercent = type === 'normalized';\n\tconst dataStreams = [\n\t\t{configKey: 'seriesConfig', dataKey: 'seriesData', coords: ['y']}\n\t];\n\tconst aggregators = DO_TOTAL_RE.test(type)\n\t\t? [{type: 'sum', key: 'y', configKey: 'seriesConfig'}]\n\t\t: null;\n\tconst formatters = {\n\t\tx: {format: xFormat, scale: 'ordinal', unit: null},\n\t\ty: {format: yFormat, scale: axisType, unit: yUnit}\n\t};\n\treturn {exportType, dataStreams, forcePercent, aggregators, formatters};\n};\n\n// if 'normalized' chart, need to make sure percentages are in the data\nconst buildSRTBarProps = (properties) => {\n\tconst {type = 'stacked'} = properties;\n\tif (type !== 'normalized') return properties;\n\t// just check the first data point, assume all the rest have the same props\n\tconst {seriesConfig, seriesData, datasetConfig} = properties;\n\tif (!seriesData || seriesData.length === 0) return properties;\n\tconst firstConfig = Object.values(seriesConfig)[0];\n\tconst catSums = {};\n\tlet needPercentages = false;\n\tconst catKey =\n\t\tfirstConfig.for && datasetConfig[firstConfig.for].x\n\t\t\t? datasetConfig[firstConfig.for].x\n\t\t\t: firstConfig.x || 'x';\n\tfor (const dataPoint of seriesData) {\n\t\tcatSums[dataPoint[catKey]] = 0;\n\t\tfor (const series of Object.values(seriesConfig)) {\n\t\t\tcatSums[dataPoint[catKey]] +=\n\t\t\t\ttypeof dataPoint[series.y] === 'number' ? dataPoint[series.y] : 0;\n\t\t\tneedPercentages =\n\t\t\t\tneedPercentages || typeof dataPoint[`${series.y}_percent`] !== 'number';\n\t\t}\n\t}\n\tif (!needPercentages) return properties;\n\t// need to add percentages to data points. we have the series sums, so just add in a _percent field to each data point\n\tconst newData = seriesData.map((d) => {\n\t\tconst newDP = {...d};\n\t\tfor (const series of Object.values(seriesConfig)) {\n\t\t\tconst nextYKey = series.y;\n\t\t\tif (typeof d[`${nextYKey}_percent`] !== 'number') {\n\t\t\t\tconst dValue = typeof d[nextYKey] === 'number' ? d[nextYKey] : 0;\n\t\t\t\tnewDP[`${nextYKey}_percent`] = catSums[d[catKey]]\n\t\t\t\t\t? Math.round((dValue * 100) / catSums[d[catKey]])\n\t\t\t\t\t: 0;\n\t\t\t}\n\t\t}\n\t\treturn newDP;\n\t});\n\n\t// substitute new data, with percentages\n\treturn {...properties, seriesData: newData};\n};\n\nconst buildAccessibilityTableOptions = (props) => {\n\tconst tableOptions = {};\n\tfor (const name of SR_TABLE_PROPERTIES.values()) {\n\t\ttableOptions[name] = props[name];\n\t}\n\treturn tableOptions;\n};\n\n/** @seismicView now-chart-bar */\nconst view = (state, {dispatch}) => {\n\tconst {properties, infoTooltip, chartInstance} = state;\n\tconst {\n\t\taccessibilityTable,\n\t\tenableContextualButton,\n\t\tcontextualButtonConfig\n\t} = properties;\n\tconst {\n\t\tlabel = DEFAULT_BUTTON_LABEL,\n\t\ticon = DEFAULT_BUTTON_ICON\n\t} = contextualButtonConfig;\n\tconst {content, targetRef, opened} = infoTooltip;\n\n\t/*\n    Must 1) wait for the chartInstance / behavior to be instatiated\n    2) only apply the theme if it is different or else it triggers a Xenolith render.\n  */\n\tif (\n\t\tchartInstance &&\n\t\tstate.behaviors.theme &&\n\t\tJSON.stringify(state.behaviors.theme) !==\n\t\t\tJSON.stringify(chartInstance.theme)\n\t) {\n\t\tchartInstance.theme = state.behaviors.theme;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{enableContextualButton ? (\n\t\t\t\t<div className=\"now-chart-contextual-button-wrapper\">\n\t\t\t\t\t<now-button\n\t\t\t\t\t\tclassName=\"now-chart-contextual-button\"\n\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\ton-click={() =>\n\t\t\t\t\t\t\tdispatch(() => ({\n\t\t\t\t\t\t\t\ttype: 'NOW_CHART_BAR#CONTEXTUAL_BUTTON_CLICKED'\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<div id=\"chart-container\" />\n\t\t\t{accessibilityTable ? (\n\t\t\t\t<div className=\"now-chart-screen-reader-table-parent\">\n\t\t\t\t\t<sn-chart-screen-reader-table\n\t\t\t\t\t\toptions={buildAccessibilityTableOptions(properties)}\n\t\t\t\t\t\tdata={exportChartData(\n\t\t\t\t\t\t\tchartInstance,\n\t\t\t\t\t\t\tbuildSRTBarProps(properties),\n\t\t\t\t\t\t\tbuildSRTExportOptions(properties)\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tclassName=\"now-chart-screen-reader-table\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<now-tooltip\n\t\t\t\tid=\"tooltip\"\n\t\t\t\tmanage-opened\n\t\t\t\tcontent={content}\n\t\t\t\ttarget-ref={targetRef}\n\t\t\t\topened={opened}\n\t\t\t\tdelay={{show: 0, hide: 0}}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\n/**\n * Chart that compares categories of data, displaying either numbers or percentages of a whole.\n *\n * ```jsx\n * const options = {\n *   width: \"auto\",\n *   height: \"auto\",\n *   type: \"stacked\",\n *   showTooltip: true,\n *   xAxisConfig: { title: \"Fruit\" },\n *   seriesConfig: {\n *     apples: { x: \"fruit\", y: \"apple\"}\n *     pears: { x: \"fruit\", y: \"pear\"}\n *     plums: { x: \"fruit\", y: \"plum\"}\n *   },\n *   seriesData: [\n * \t   {fruit: \"Sold\", apple: 5, pear: 2, plum: 9},\n *     ...otherData\n *   ]\n * }\n * <now-chart-bar {...options} />\n * ```\n *\n * @seismicElement now-chart-bar\n * @summary Compares categorical data with vertical or horizontal bars.\n */\ncreateEnhancedElement('now-chart-bar', {\n\tproperties: PROPERTIES,\n\tinitialState: {\n\t\tinfoTooltip: {targetRef: null, content: '', opened: false}\n\t},\n\tview,\n\tstyles,\n\tbehaviors: [\n\t\t{\n\t\t\tbehavior: themeBehavior,\n\t\t\toptions: {\n\t\t\t\titems: [\n\t\t\t\t\t'type.fontFamily',\n\t\t\t\t\t'global.*',\n\t\t\t\t\t'datavis.*',\n\t\t\t\t\t'menu.backgroundColor',\n\t\t\t\t\t'menu.borderRadius'\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t],\n\tactionHandlers: {\n\t\t...createTooltipActionHandler((updateState) => {\n\t\t\tupdateState({\n\t\t\t\tpath: 'infoTooltip',\n\t\t\t\toperation: 'set',\n\t\t\t\tvalue: {ref: null, content: '', opened: false}\n\t\t\t});\n\t\t}),\n\t\t[COMPONENT_DOM_READY]: createXenoDomReadyHandler(\n\t\t\t{\n\t\t\t\txenoPropList: XENOLITH_PROPERTIES,\n\t\t\t\tpreProcessMap,\n\t\t\t\tobservedProps: OBSERVED_PROPERTIES\n\t\t\t},\n\t\t\tcreateChartInstance\n\t\t),\n\t\t[COMPONENT_PROPERTY_CHANGED]: ({\n\t\t\taction,\n\t\t\tstate,\n\t\t\tdispatch,\n\t\t\tupdateState,\n\t\t\thost,\n\t\t\tproperties\n\t\t}) => {\n\t\t\tconst {name, value, previousValue} = action.payload;\n\n\t\t\t// recreate the appropriate chart when orientation changes\n\t\t\tif (name === 'orientation') {\n\t\t\t\tif (state.chartInstance && value !== state.chartInstance.orientation) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tstate.chartInstance.destroy();\n\t\t\t\t\t\tcreateAndInitChartInstance(\n\t\t\t\t\t\t\t{state, properties, host, updateState, dispatch},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\txenoPropList: XENOLITH_PROPERTIES,\n\t\t\t\t\t\t\t\tpreProcessMap\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreateChartInstance\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapplyPropToChartInstance({\n\t\t\t\t\tchartInstance: state.chartInstance,\n\t\t\t\t\tvalue,\n\t\t\t\t\tpreviousValue,\n\t\t\t\t\tname,\n\t\t\t\t\txenoPropList: XENOLITH_PROPERTIES,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tpreProcessMap,\n\t\t\t\t\tstate,\n\t\t\t\t\tupdateState,\n\t\t\t\t\thost,\n\t\t\t\t\tproperties\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[COMPONENT_DISCONNECTED]: ({action, state}) => {\n\t\t\tunschedule(action.meta.id);\n\t\t\tstate.chartInstance.destroy();\n\t\t},\n\t\t'PRIVATE#TOOLTIP_REQUEST': {\n\t\t\tstopPropagation: true,\n\t\t\teffect: ({action, updateState}) => {\n\t\t\t\tschedule(action.meta.id, showTooltip.bind(null, updateState, action));\n\t\t\t}\n\t\t}\n\t},\n\tdispatches: {\n\t\t/**\n\t\t * Dispatched when the bar width is changed\n\t\t */\n\t\t'NOW_CHART_BAR#BAR_WIDTH_CHANGED': {},\n\t\t/**\n\t\t * Dispatched when the user interacts with the register and mutes/unmutes a series. Payload includes a set of all mutedSeries\n\t\t * @type {{mutedSeries: Set}}\n\t\t */\n\t\t'NOW_CHART_BAR#MUTED_SERIES_CHANGED': {},\n\t\t/**\n\t\t * Dispatched when the user interacts with the contextual button\n\t\t */\n\t\t'NOW_CHART_BAR#CONTEXTUAL_BUTTON_CLICKED': {}\n\t}\n});\n","module.exports = __TECTONIC__$servicenow_library_enhanced_element_19_8_3;","module.exports = __TECTONIC__$servicenow_library_chart_19_8_3;","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_behavior_theme_19_8_3;","module.exports = __TECTONIC__xenolith_4_1_6;","module.exports = __TECTONIC__$devsnc_sn_chart_screen_reader_table;","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./_now-chart-bar.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}:host{display:flex;overflow:auto;flex-direction:column}#chart-container,:host{width:100%;height:100%}.xn-register-item-group{position:relative}.xn-register-item-group:focus{outline:none}.xn-register-item-group:focus:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;box-shadow:inset 0 0 0 2px RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color_focus-ring_shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.xn-register-item-group:focus::-moz-focus-inner{border-style:none}.xn-register-item-group:active:before,.xn-register-item-group:hover:before{content:\\\"\\\";position:absolute;top:0;left:0;z-index:-1;width:100%;height:100%}.xn-register-item-group:hover:before{background-color:RGB(var(--now-datavis_color_chart--primary,var(--now-color--neutral-2,228,230,231)))}.xn-register-item-group:active:before{background-color:RGB(var(--now-datavis_color_chart--secondary,var(--now-color--neutral-4,191,197,198)))}.xn-focusable:focus{outline:2px solid RGB(var(--now-color_focus-ring,var(--now-color--secondary-1,1,119,142)));outline-offset:2px}.xn-focusable:focus::-moz-focus-inner{border-style:none}.now-chart-screen-reader-table-parent{position:relative;height:0}.now-chart-screen-reader-table-parent .now-chart-screen-reader-table{position:absolute;top:0;left:0;margin-block-start:.75rem}.now-chart-contextual-button-wrapper{position:relative;width:0;height:0}.now-chart-contextual-button-wrapper .now-chart-contextual-button{position:absolute;top:0;left:0}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","export const accessibilityConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tmonochrome: {type: 'boolean'}\n\t}\n};\n\nconst tickConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tposition: {type: 'string', enum: ['center', 'before', 'after', 'inline']},\n\t\tfontFamily: {type: 'string'},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tlabelFit: {type: 'string'},\n\t\trotation: {type: 'number'},\n\t\ttranslation: {type: 'array', items: {type: 'number'}},\n\t\ttickFormat: {type: 'string'},\n\t\ttickPadding: {type: 'number'},\n\t\ttickSizeInner: {type: 'number'},\n\t\ttickSizeOuter: {type: 'number'},\n\t\tticks: {type: ['number', 'object']},\n\t\ttickArguments: {type: 'array'},\n\t\ttickValues: {type: 'array', items: {type: 'number'}},\n\t\tdisabled: {type: 'boolean'},\n\t\tlabelColor: {type: 'string'},\n\t\ttickColor: {type: 'string'},\n\t\tstrokeWidth: {type: 'number'},\n\t\twrapLabels: {type: 'boolean'},\n\t\ttruncationType: {type: 'string', enum: ['start', 'middle', 'end']},\n\t\tmaximumSize: {type: 'number'}\n\t}\n};\n\nconst titleConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: ['string', 'number']},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\ttranslation: {type: 'array', items: {type: 'number'}},\n\t\tpadding: {type: 'number'},\n\t\tcolor: {type: 'string'},\n\t\tcustomLocation: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tx: {type: 'number'},\n\t\t\t\ty: {type: 'number'},\n\t\t\t\tr: {type: 'number'},\n\t\t\t\tanchor: {type: 'string', enum: ['middle', 'start', 'end']}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const axisConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\torientation: {type: 'string', enum: ['left', 'right', 'top', 'bottom']},\n\t\ttickConfig: tickConfigSchema,\n\t\ttitleConfig: titleConfigSchema,\n\t\ttranslation: {type: 'array', items: {type: 'number'}},\n\t\tstrokeWidth: {type: 'number'},\n\t\ttitle: {type: 'string'},\n\t\tautoRotateLabels: {type: 'boolean'}\n\t}\n};\n\nexport const dataLabelConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tformatters: {type: 'object'},\n\t\talign: {type: 'string', enum: ['above', 'top', 'middle', 'bottom']},\n\t\tstacked: {type: 'string', enum: ['individual', 'cumulative', 'total']},\n\t\tclipped: {type: 'string', enum: ['show', 'hide', 'nudge']},\n\t\tcollisions: {type: 'string', enum: ['show', 'hide']},\n\t\tshowBox: {type: 'boolean'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {oneOf: [{type: 'string'}, {type: 'number'}]},\n\t\tfontColor: {type: 'string'}\n\t}\n};\n\nconst registerStyleConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tvalueColor: {type: 'string'},\n\t\tmutedOpacity: {type: 'number'},\n\t\tlabelColor: {type: 'string'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {oneOf: [{type: 'string'}, {type: 'number'}]},\n\t\tfontStyle: {type: 'string'},\n\t\tfontWeight: {type: 'string'},\n\t\tseparator: {type: 'string'},\n\t\txFormat: {type: 'string'},\n\t\tyFormat: {type: 'string'}\n\t}\n};\n\nexport const registerConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tconfig: registerStyleConfigSchema,\n\t\torientation: {type: 'string', enum: ['horizontal', 'vertical']},\n\t\texpandToFit: {type: 'boolean'},\n\t\tlegendOnly: {type: 'boolean'},\n\t\tshowBorder: {type: 'boolean'},\n\t\tsmallSpacing: {type: 'boolean'},\n\t\toneLine: {type: 'boolean'},\n\t\tjustifyItems: {type: 'string', enum: ['start', 'center', 'end']},\n\t\tdisableGrid: {type: 'boolean'},\n\t\thardMute: {type: 'boolean'},\n\t\tshowPercentages: {type: 'boolean'}\n\t}\n};\n\nexport const seriesConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tcolor: {type: 'string'},\n\t\tcolorMap: {type: 'object'},\n\t\tcolorPalette: {type: 'array', items: {type: 'string'}},\n\t\tfor: {type: 'string'},\n\t\tmutedOpacity: {type: 'number'},\n\t\topacity: {type: 'number'},\n\t\tx: {type: 'string'},\n\t\ty: {type: 'string'}\n\t}\n};\n\nexport const thresholdConfigSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taxis: {type: 'string'},\n\t\tfontColor: {type: 'string'},\n\t\tfontFamily: {type: 'string'},\n\t\tfontSize: {type: 'string'},\n\t\tfontStyle: {type: 'string'},\n\t\tstrokeWidth: {type: 'number'},\n\t\tdashPattern: {type: 'string'},\n\t\thideLabel: {type: 'boolean'},\n\t\thideValue: {type: 'boolean'},\n\t\tformat: {type: 'string'},\n\t\tcolor: {type: 'string'}\n\t}\n};\n\nexport const thresholdDataPointSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tvalue: {type: 'number'},\n\t\ttype: {type: 'string'},\n\t\tlabel: {type: 'string'}\n\t}\n};\n","module.exports = __TECTONIC__$servicenow_now_button;","module.exports = __TECTONIC__$servicenow_now_tooltip;","module.exports = __TECTONIC__$servicenow_library_schemas_19_8_3;"],"sourceRoot":""}