{"version":3,"sources":["webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/webpack/bootstrap","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/constants.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"get\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"isEmpty\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./node_modules/@servicenow/now-typeahead/node_modules/@servicenow/ui-core/lib/constants.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_list_menu\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/behaviors/listMenu/listMenuBehavior.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/listMenu/listMenuUtils.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__sn_user_preferences\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/index.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/listMenu/recordListMenuConnected.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/modal/newListModal.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$devsnc_sn_glide_form_controls\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_condition_builder\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_input\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_select\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_tabs\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_typeahead\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/modal/modalConstants.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/modal/utils.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"includes\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/modal/newListModal.scss?6400","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/modal/newListModal.scss","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"without\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__$servicenow_now_loader\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/behaviors/newListModal/modalBehavior.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/listMenu/utils.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/behaviors/listMenu/actions.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/listMenu/listMenuModel.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"flatten\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/schemas/lists.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/schemas/myLists.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__cuid_2_1_6\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"find\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"has\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/external \"__TECTONIC__lodash_4_17_4[\\\"isEqual\\\"]\"","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/behaviors/newListModal/newListModalBehavior.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/behaviors/newListModal/actions.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/schemas/newListModal.js","webpack://__TECTONIC__$servicenow_now_record_list_menu_connected/./src/components/listMenu/actions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RECORD_LIST_MENU_ITEM_CLICKED","RECORD_LIST_MENU_SELECTED_ITEM_UPDATED","RECORD_LIST_MENU_ERROR","COMPONENT_PROPERTY_CHANGED","LIST_MODULE_NOTIFICATION","ADD_LIST_NOTIFICATIONS","EDITING_LISTS","LIST_ERROR_STATE","SELECT_LIST_MENU_ITEM","SELECT_NEW_LIST_ITEM","TOGGLE_NETWORK_INDICATOR","UPDATE_LIST_MENU_QUERY","UPDATE_SELECTED_MENU_ITEM","NOW_CONTENT_TREE_ITEM_CLICKED","CONTENT_UPDATED","NOW_CONTENT_TREE_EXPANDED_ITEMS_SET","CREATE_LIST","MOD_LIST","SYS_AW","MY_LIST","LIST","AW_MY_LIST","UX_MY_LIST","AW_LIST","UX_LIST","CRUD_OPS","CREATE","UPDATE","DESTROY","LIST_MENU_CRUD_OPERATION_CREATE","LIST_MENU_CRUD_OPERATION","LIST_MENU_CRUD_OPERATION_SUCCESS","LIST_MENU_CRUD_OPERATION_ERROR","LIST_MENU_CRUD_OPERATION_UPDATE","LIST_MENU_CRUD_OPERATION_DESTROY","CRUD_OPS_ACTIONS","DIRTY_CHANGED","PRESOURCE_PATH","LIST_MENU_PRESOURCE_BUCKET","LIST_MENU_PRESOURCE_KEY","OPEN_MODAL","CLOSE_MODAL","MODAL_TYPES","NEW_LIST","NOW_DROPDOWN_ITEM_CLICKED","DROPDOWN_ITEMS_SELECTED","TABLE_SELECTED_SET","NOW_SELECT_SELECTED","NOW_TABS_SELECTED_SET","NOW_TYPEAHEAD_MULTI_SELECTED_SET","PROPAGATE_SELECTED_COLUMNS","NEW_LIST_MODAL_COLUMN_SELECT_SUCCESSFUL","NEW_LIST_MODAL_COLUMN_SELECT_ERROR","SELECT_INVALID_SET","INPUT_INVALID_SET","INPUT_VALUE_SET","TABLE_INVALID_SET","TYPEAHEAD_INVALID_SET","CONDITION_BUILDER_ENCODED_QUERY_SET","MODAL_FOOTER_ACTION_CLICKED","MODAL_OPENED_SET","LIST_MENU_DATA_PROVIDER_BOOTSTRAP","LIST_MENU_FETCH_LIST_DISPATCH","LIST_MENU_FETCH_LIST","LIST_MENU_FETCH_AW_LIST","LIST_MENU_FETCH_UX_LIST","LIST_MENU_FETCH_LIST_COMPLETE","LIST_MENU_FETCH_LIST_ERROR","LIST_MENU_ITEM_DELETE","LIST_MENU_ITEM_DELETE_COMPLETE","LIST_MENU_ITEM_DELETE_ERROR","LIST_MENU_ITEM_TOGGLE_EDIT_STATE","LIST_MENU_UPDATE_ITEM_ORDER","LIST_MENU_UPDATE_ORDER","LIST_MENU_UPDATE_ORDER_COMPLETE","LIST_MENU_UPDATE_ORDER_ERROR","LIST_MENU_HANDLE_ACTIVE_TAB","LIST_MENU_LIST_ID_CHANGED","SET_LOADING","TYPE_CATEGORY","USER_PREF_EXPANDED_ITEMS_NAME","__TECTONIC__lodash_4_17_4","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__sn_translate","PACKAGE_NAME","HELPERS_SCHEDULED","HELPERS_DEFER","HELPERS_IMMEDIATE","COMPONENT_INTERNAL_ACTION","SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED","ACTION_HANDLED","ACTION_DISPATCHED","STATE_UPDATED","NOW_UI_EVENT","NOW_METRICS_LEVEL_PROP","NOW_METRIC_TYPES_PROP","COMPONENT_MODE_SUSPEND","COMPONENT_MODE_ACTIVE","NOW_MODE_PROP","NOW_MODE_ATTR","NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP","NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR","NOW_COMPONENT_NAME_PROP","NOW_COMPONENT_NAME_ATTR","NOW_ID_PROP","NOW_ID_ATTR","NOW_HOIST_PREPEND_TO_PROP","NOW_HOIST_APPEND_TO_PROP","NOW_HOIST_PREPEND_TO_ATTR","NOW_HOIST_APPEND_TO_ATTR","NOW_HOIST_PROP","NOW_HOIST_ATTR","COMPONENT_ACTION_DISPATCHED","COMPONENT_STATE_UPDATED","COMPONENT_TREE_RENDERED","COMPONENT_DOM_TREE_READY","COMPONENT_RENDER_REQUESTED","COMPONENT_PROPERTY_UPDATE_REQUESTED","COMPONENT_DOM_READY","COMPONENT_RENDERED","COMPONENT_BOOTSTRAPPED","COMPONENT_DISCONNECTED","COMPONENT_CONNECTED","ON_BOOTSTRAP_LIFECYCLE","ON_DISCONNECT_LIFECYCLE","ON_CONNECT_LIFECYCLE","PROPERTIES_SET_LIFECYCLE","PROPERTY_SELECTOR_SIGIL","APPEND_TO_META_PROP_NAME","APPEND_TO_PAYLOAD_PROP_NAME","DEFER_ATTRIBUTE","HOIST_FIRST_SCROLL_PARENT","SEISMIC_HOIST_TAG_NAME","HOIST_ATTR","HOIST_APPEND_TO_ATTR","HOIST_APPEND_TO_PROP","COMPONENT_NAME_PROP","COMPONENT_NAME_ATTR","SET_INITIAL_STATE","PARSE_PROP_CONF_KEY","SHOULD_NOT_PROPAGATE","PROPERTIES_SET","HANDLE_ACTIONS","STORE_UPDATED","ATTRIBUTE_SET","COMPONENT_ID_ATTRIBUTE","DISPATCH_EVENT","__TECTONIC__$servicenow_ui_core","__TECTONIC__$servicenow_now_list_menu","dispatchUpdate","dispatch","previousValue","dispatchAction","action","listMenuBehavior","initialState","properties","list","default","selectable","myList","selectedMenuItem","activeTabId","listMenuModel","itemOrder","listIdSelected","actionHandlers","__TECTONIC__$servicenow_ui_effect_graphql","fetchQueryAction","item","title","displayValue","selectedListId","id","table","targetTable","columns","conditions","isResourceReady","resource","isReading","__TECTONIC__sn_user_preferences","createCustomElement","renderer","type","snabbdom","view","state","componentId","modalProps","hideCreateNewTab","hideListCreation","forceRefresh","isEditing","loading","listMenuOpen","selectionPath","selectColumns","newTabDefaultColumns","lists","hideModal","newListModalData","buildModalData","style","height","modalData","active-tab-id","component-id","force-refresh","hide-list-creation","is-editing","list-menu-open","selected-item-path","effect","hasFetched","isWorkspace","afterInitialLoad","configurationId","error","fetchListTrigger","onChange","isDirty","listId","undefined","listMenuCrud","menuTabUpdate","tabId","newListItem","orderUpdate","listModel","selectedItemUpdate","tiny","workspaceConfigId","onConnect","host","window","listComponentRegistry","WeakMap","set","packageJson","version","onDisconnect","delete","behaviors","dirtyBehavior","modalBehaviors","userPreferencesBehavior","newListModalBehavior","dispatches","tabArray","useiFrame","modalTabID","invalidFields","revealInvalidity","footerButtons","label","CREATE_LIST_LABEL","variant","tooltipContent","CREATE_BUTTON_ID","configAria","CANCEL_LABEL","CANCEL_BUTTON_ID","renderModalBody","className","renderTabSpecificFields","renderSecondaryFields","CREATE_FROM_EXISTING_ID","selectedListID","isInvalid","SELECT_LIST_NAME","message","SELECT_LIST_MESSAGE","SELECT_LIST_LABEL","items","search","selectedItem","FIELD_CLASS_NAME","manageInvalid","invalid","messages","placeholder","SELECT_TABLE_PLACEHOLDER","required","renderNameInput","SELECT_TABLE_NAME","SELECT_TABLE_MESSAGE","SELECT_TABLE_LABEL","onValueChange","dictionaryAttributes","referringRecordId","LIST_NAME_NAME","LIST_NAME_MESSAGE","LIST_NAME_LABEL","LIST_NAME_INPUT_PLACEHOLDER","minlength","LIST_NAME_INPUT_MIN","maxlength","LIST_NAME_INPUT_MAX","CREATE_NEW_ID","renderSelectColumns","renderConditionBuilder","selectedColumns","thisTabSelectedColumns","SELECT_COLUMNS_NAME","SELECT_COLUMNS_MESSAGE","SELECT_COLUMNS_LABEL","map","columnItem","columnName","displayName","concat","getDotWalkedColumns","selectedItems","tableName","DEFAULT_CONDITIONS_TABLE","tableLabel","encodedQuery","DEFAULT_CONDITIONS_QUERY","hideRelatedListQueryConditions","legacy","size","header-label","NEW_LIST_MODAL_TITLE","manage-opened","opened","footerActions","NEW_LIST_MODAL_SUBTITLE","CREATE_FROM_EXISTING_LABEL","push","CREATE_NEW_LABEL","tabState","fromExisting","selectedList","listName","hasManuallyEnteredListName","currentEncodedQuery","createNew","tableDisplayName","coeffects","stopPropagation","payload","updateState","path","operation","newInvalidFields","DUPLICATE_NAME_TEXT","colArray","frontEndColArray","split","forEach","backEndCol","includes","processListPreExistingColumns","options","col","join","styles","__TECTONIC__$devsnc_sn_glide_form_controls","__TECTONIC__$servicenow_now_condition_builder","__TECTONIC__$servicenow_now_input","__TECTONIC__$servicenow_now_modal","__TECTONIC__$servicenow_now_select","__TECTONIC__$servicenow_now_tabs","__TECTONIC__$servicenow_now_typeahead","MESSAGE_ICON","status","content","icon","dotWalked","result","toString","useSourceMap","this","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","__TECTONIC__$servicenow_now_loader","modalBehavior","actionToDispatch","arr","entries","indexOf","data","unshift","reduce","acc","cat","children","fetchAwListMenuGQLEffect","createGraphQLEffect","listAwReadQuery","variableList","successActionType","errorActionType","fetchUxListMenuGQLEffect","listUxReadQuery","listMenuDeleteItemEffect","myListDestroyQuery","updateListMenuMyListEffect","myListUpdateQuery","templateVarList","listMenuCrudOperationCreateEffect","myListInsertQuery","listMenuCrudOperationUpdateEffect","listMenuCrudOperationDestroyEffect","dispatchFetchList","meta","workspaceId","dispatchUpdatedSelectedItem","queryAction","Date","now","handleListId","flattened","availableLists","find","listItem","getInitialList","updatedSelectedItem","selectList","listMenuWorkspaceAwareQueryPresourceData","crudOp","previousListMenuItems","updateProperties","getListMenuModel","hasNewList","newList","alertList","dispatchNewListNotification","additionalProps","listIdErrorMessage","extraInfo","updatedSelected","myLists","sys_id","order","updateOrder","updatedMyList","target","getOrderedListMenuModel","variables","assign","getListModel","getMyListModel","getOrderedMyListModel","reducedItemOrder","myListModel","index","orderedMyListModel","getListStacks","listMenu","categories","filter","category","tablePrefix","canEdit","canExpand","newListForm","form","myListData","orderData","sort","a","b","reducedLists","accum","currentValue","__TECTONIC__cuid_2_1_6","newListModalSelectedColumnsEffect","newListModalSelectedColumnsQuery","GlideListMenu_Query","getAllColumnsForNewList","listColumns","defaultColumns","FETCH_LISTS","timestamp","MENU_ITEM_CLICKED","query","setSelectedMenuItem","MENU_ITEM_EXPANDED","USER_PREF_UPDATE","REORDER_LIST","UPDATE_LIST_ORDER"],"mappings":"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","file":"now-record-list-menu-connected.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","// Actions\nexport const RECORD_LIST_MENU_ITEM_CLICKED =\n\t'NOW_RECORD_LIST_MENU_CONNECTED#ITEM_CLICKED';\nexport const RECORD_LIST_MENU_SELECTED_ITEM_UPDATED =\n\t'NOW_RECORD_LIST_MENU_CONNECTED#SELECTED_ITEM_UPDATED';\nexport const RECORD_LIST_MENU_ERROR = 'NOW_RECORD_LIST_MENU_CONNECTED#ERROR';\nexport const COMPONENT_PROPERTY_CHANGED = 'SEISMIC_COMPONENT_PROPERTY_CHANGED';\nexport const LIST_MODULE_NOTIFICATION =\n\t'WORKSPACE_LIST_MODULE#NOTIFICATION_ADDED';\nexport const ADD_LIST_NOTIFICATIONS = 'ADD_LIST_NOTIFICATIONS';\nexport const EDITING_LISTS = 'EDITING_LISTS';\nexport const LIST_ERROR_STATE = 'LIST_ERROR_STATE';\nexport const SELECT_LIST_MENU_ITEM = 'SELECT_LIST_MENU_ITEM';\nexport const SELECT_NEW_LIST_ITEM = 'SELECT_NEW_LIST_ITEM';\nexport const TOGGLE_NETWORK_INDICATOR = 'TOGGLE_MENU_NETWORK_INDICATOR';\nexport const UPDATE_LIST_MENU_QUERY = 'UPDATE_LIST_MENU_QUERY';\nexport const UPDATE_SELECTED_MENU_ITEM = 'UPDATE_SELECTED_MENU_ITEM';\nexport const NOW_CONTENT_TREE_ITEM_CLICKED = 'NOW_CONTENT_TREE#ITEM_CLICKED';\nexport const CONTENT_UPDATED = 'CONTENT_UPDATED';\nexport const NOW_CONTENT_TREE_EXPANDED_ITEMS_SET =\n\t'NOW_CONTENT_TREE#EXPANDED_ITEMS_SET';\nexport const CREATE_LIST = 'NOW_LIST_MENU#NEW_LIST_BUTTON_CLICKED';\n\n// Tabs panel modifier\nexport const MOD_LIST = 'list';\n\nexport const SYS_AW = 'sys_aw';\nexport const MY_LIST = '_my_list';\nexport const LIST = '_list';\nexport const AW_MY_LIST = 'sys_aw_my_list';\nexport const UX_MY_LIST = 'sys_ux_my_list';\nexport const AW_LIST = 'sys_aw_list';\nexport const UX_LIST = 'sys_ux_list';\n\nexport const CRUD_OPS = {\n\tCREATE: 'CREATE',\n\tUPDATE: 'UPDATE',\n\tDESTROY: 'DESTROY'\n};\n\n// Crud operations\nexport const LIST_MENU_CRUD_OPERATION = 'LIST_MENU_CRUD_OPERATION';\nexport const LIST_MENU_CRUD_OPERATION_SUCCESS =\n\t'LIST_MENU_CRUD_OPERATION_SUCCESS';\nexport const LIST_MENU_CRUD_OPERATION_ERROR = 'LIST_MENU_CRUD_OPERATION_ERROR';\n\n// Create\nexport const LIST_MENU_CRUD_OPERATION_CREATE = `LIST_MENU_CRUD_OPERATION_CREATE`;\n\n// Update\nexport const LIST_MENU_CRUD_OPERATION_UPDATE = `LIST_MENU_CRUD_OPERATION_UPDATE`;\n\n// Error\nexport const LIST_MENU_CRUD_OPERATION_DESTROY = `LIST_MENU_CRUD_OPERATION_DESTROY`;\n\nexport const CRUD_OPS_ACTIONS = {\n\t[CRUD_OPS.CREATE]: LIST_MENU_CRUD_OPERATION_CREATE,\n\t[CRUD_OPS.UPDATE]: LIST_MENU_CRUD_OPERATION_UPDATE,\n\t[CRUD_OPS.DESTROY]: LIST_MENU_CRUD_OPERATION_DESTROY\n};\n\nexport const DIRTY_CHANGED = 'DIRTY_CHANGED';\n\nexport const PRESOURCE_PATH = 'ux_globals.presource';\nexport const LIST_MENU_PRESOURCE_BUCKET = 'now-record-list-menu-connected';\nexport const LIST_MENU_PRESOURCE_KEY = 'listMenuWorkspaceAwareQuery';\n\n// New List Modal constants\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const MODAL_TYPES = {\n\tNEW_LIST: 'NEW_LIST'\n};\nexport const NOW_DROPDOWN_ITEM_CLICKED = 'NOW_DROPDOWN#ITEM_CLICKED';\nexport const DROPDOWN_ITEMS_SELECTED = 'NOW_DROPDOWN#SELECTED_ITEMS_SET';\nexport const TABLE_SELECTED_SET = 'TABLE_SELECTED_SET';\n\nexport const NOW_SELECT_SELECTED = 'NOW_SELECT#SELECTED_ITEM_SET';\nexport const NOW_TABS_SELECTED_SET = 'NOW_TABS#SELECTED_ITEM_SET';\nexport const NOW_TYPEAHEAD_MULTI_SELECTED_SET =\n\t'NOW_TYPEAHEAD_MULTI#SELECTED_ITEMS_SET';\nexport const PROPAGATE_SELECTED_COLUMNS =\n\t'NOW_RECORD_LIST_MENU#PROPAGATE_SELECTED_COLUMNS';\nexport const NEW_LIST_MODAL_COLUMN_SELECT_SUCCESSFUL =\n\t'NEW_LIST_MODAL_COLUMN_SELECT_SUCCESSFUL';\nexport const NEW_LIST_MODAL_COLUMN_SELECT_ERROR =\n\t'NEW_LIST_MODAL_COLUMN_SELECT_ERROR';\nexport const SELECT_INVALID_SET = 'NOW_SELECT#INVALID_SET';\nexport const INPUT_INVALID_SET = 'NOW_INPUT#INVALID_SET';\nexport const INPUT_VALUE_SET = 'NOW_INPUT#VALUE_SET';\nexport const TABLE_INVALID_SET = 'TABLE_INVALID_SET';\nexport const TYPEAHEAD_INVALID_SET = 'NOW_TYPEAHEAD#INVALID_SET';\nexport const CONDITION_BUILDER_ENCODED_QUERY_SET =\n\t'NOW_CONDITION_BUILDER#ENCODED_QUERY_SET';\nexport const MODAL_FOOTER_ACTION_CLICKED = 'NOW_MODAL#FOOTER_ACTION_CLICKED';\nexport const MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\n\n// List Menu Data fetching actions\nexport const LIST_MENU_DATA_PROVIDER_BOOTSTRAP =\n\t'LIST_MENU_DATA_PROVIDER_BOOTSTRAP';\nexport const LIST_MENU_FETCH_LIST_DISPATCH = 'LIST_MENU_FETCH_LIST_DISPATCH';\nexport const LIST_MENU_FETCH_LIST = 'LIST_MENU_FETCH_LIST';\nexport const LIST_MENU_FETCH_AW_LIST = 'LIST_MENU_FETCH_AW_LIST';\nexport const LIST_MENU_FETCH_UX_LIST = 'LIST_MENU_FETCH_UX_LIST';\nexport const LIST_MENU_FETCH_LIST_COMPLETE = 'LIST_MENU_FETCH_LIST_COMPLETE';\nexport const LIST_MENU_FETCH_LIST_ERROR = 'LIST_MENU_FETCH_LIST_ERROR';\n\n// List Menu Delete actions\nexport const LIST_MENU_ITEM_DELETE = 'LIST_MENU_ITEM_DELETE';\nexport const LIST_MENU_ITEM_DELETE_COMPLETE = 'LIST_MENU_ITEM_DELETE_COMPLETE';\nexport const LIST_MENU_ITEM_DELETE_ERROR = 'LIST_MENU_ITEM_DELETE_ERROR';\n\n// List menu order actions\nexport const LIST_MENU_ITEM_TOGGLE_EDIT_STATE =\n\t'LIST_MENU_ITEM_TOGGLE_EDIT_STATE';\nexport const LIST_MENU_UPDATE_ITEM_ORDER = 'LIST_MENU_UPDATE_ITEM_ORDER';\nexport const LIST_MENU_UPDATE_ORDER = 'LIST_MENU_UPDATE_ORDER';\nexport const LIST_MENU_UPDATE_ORDER_COMPLETE = 'LIST_MENU_UPDATE_ORDER';\nexport const LIST_MENU_UPDATE_ORDER_ERROR = 'LIST_MENU_UPDATE_ORDER';\n\n// Active Tab\nexport const LIST_MENU_HANDLE_ACTIVE_TAB = 'LIST_MENU_HANDLE_ACTIVE_TAB';\n\nexport const LIST_MENU_LIST_ID_CHANGED = 'LIST_MENU_LIST_ID_CHANGED';\n\nexport const SET_LOADING = 'SET_LOADING';\n\nexport const TYPE_CATEGORY = 'category';\n\nexport const USER_PREF_EXPANDED_ITEMS_NAME = 'workspace.expandedListMenuItems';\n","module.exports = __TECTONIC__lodash_4_17_4[\"get\"];","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__lodash_4_17_4[\"isEmpty\"];","/**\n * Copyright (c) 2020 ServiceNow, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *  \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *  \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PACKAGE_NAME = exports.HELPERS_SCHEDULED = exports.HELPERS_DEFER = exports.HELPERS_IMMEDIATE = exports.COMPONENT_INTERNAL_ACTION = exports.SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED = exports.ACTION_HANDLED = exports.ACTION_DISPATCHED = exports.STATE_UPDATED = exports.NOW_UI_EVENT = exports.NOW_METRICS_LEVEL_PROP = exports.NOW_METRIC_TYPES_PROP = exports.COMPONENT_MODE_SUSPEND = exports.COMPONENT_MODE_ACTIVE = exports.NOW_MODE_PROP = exports.NOW_MODE_ATTR = exports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP = exports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR = exports.NOW_COMPONENT_NAME_PROP = exports.NOW_COMPONENT_NAME_ATTR = exports.NOW_ID_PROP = exports.NOW_ID_ATTR = exports.NOW_HOIST_PREPEND_TO_PROP = exports.NOW_HOIST_APPEND_TO_PROP = exports.NOW_HOIST_PREPEND_TO_ATTR = exports.NOW_HOIST_APPEND_TO_ATTR = exports.NOW_HOIST_PROP = exports.NOW_HOIST_ATTR = exports.COMPONENT_ACTION_DISPATCHED = exports.COMPONENT_STATE_UPDATED = exports.COMPONENT_TREE_RENDERED = exports.COMPONENT_DOM_TREE_READY = exports.COMPONENT_RENDER_REQUESTED = exports.COMPONENT_PROPERTY_UPDATE_REQUESTED = exports.COMPONENT_DOM_READY = exports.COMPONENT_RENDERED = exports.COMPONENT_PROPERTY_CHANGED = exports.COMPONENT_BOOTSTRAPPED = exports.COMPONENT_DISCONNECTED = exports.COMPONENT_CONNECTED = exports.ON_BOOTSTRAP_LIFECYCLE = exports.ON_DISCONNECT_LIFECYCLE = exports.ON_CONNECT_LIFECYCLE = exports.PROPERTIES_SET_LIFECYCLE = exports.PROPERTY_SELECTOR_SIGIL = exports.APPEND_TO_META_PROP_NAME = exports.APPEND_TO_PAYLOAD_PROP_NAME = exports.DEFER_ATTRIBUTE = exports.HOIST_FIRST_SCROLL_PARENT = exports.SEISMIC_HOIST_TAG_NAME = exports.HOIST_ATTR = exports.HOIST_APPEND_TO_ATTR = exports.HOIST_APPEND_TO_PROP = exports.COMPONENT_NAME_PROP = exports.COMPONENT_NAME_ATTR = exports.SET_INITIAL_STATE = exports.PARSE_PROP_CONF_KEY = exports.SHOULD_NOT_PROPAGATE = exports.PROPERTIES_SET = exports.HANDLE_ACTIONS = exports.STORE_UPDATED = exports.ATTRIBUTE_SET = exports.COMPONENT_ID_ATTRIBUTE = exports.DISPATCH_EVENT = void 0;\nvar DISPATCH_EVENT = 'DISPATCH_CUSTOM_EVENT';\nexports.DISPATCH_EVENT = DISPATCH_EVENT;\nvar COMPONENT_ID_ATTRIBUTE = 'component-id';\nexports.COMPONENT_ID_ATTRIBUTE = COMPONENT_ID_ATTRIBUTE;\nvar ATTRIBUTE_SET = 'ATTRIBUTE_SET';\nexports.ATTRIBUTE_SET = ATTRIBUTE_SET;\nvar STORE_UPDATED = 'STORE_UPDATED';\nexports.STORE_UPDATED = STORE_UPDATED;\nvar HANDLE_ACTIONS = 'handle-actions';\nexports.HANDLE_ACTIONS = HANDLE_ACTIONS;\nvar PROPERTIES_SET = 'PROPERTIES_SET';\nexports.PROPERTIES_SET = PROPERTIES_SET;\nvar SHOULD_NOT_PROPAGATE = [PROPERTIES_SET, STORE_UPDATED];\nexports.SHOULD_NOT_PROPAGATE = SHOULD_NOT_PROPAGATE;\nvar PARSE_PROP_CONF_KEY = 'unstableParse';\nexports.PARSE_PROP_CONF_KEY = PARSE_PROP_CONF_KEY;\nvar SET_INITIAL_STATE = 'SET_INITIAL_STATE';\nexports.SET_INITIAL_STATE = SET_INITIAL_STATE;\nvar COMPONENT_NAME_ATTR = 'component-name';\nexports.COMPONENT_NAME_ATTR = COMPONENT_NAME_ATTR;\nvar COMPONENT_NAME_PROP = 'componentName';\nexports.COMPONENT_NAME_PROP = COMPONENT_NAME_PROP;\nvar HOIST_APPEND_TO_PROP = 'hoistAppendTo';\nexports.HOIST_APPEND_TO_PROP = HOIST_APPEND_TO_PROP;\nvar HOIST_APPEND_TO_ATTR = 'hoist-append-to';\nexports.HOIST_APPEND_TO_ATTR = HOIST_APPEND_TO_ATTR;\nvar HOIST_ATTR = 'hoist';\nexports.HOIST_ATTR = HOIST_ATTR;\nvar SEISMIC_HOIST_TAG_NAME = 'SEISMIC-HOIST';\nexports.SEISMIC_HOIST_TAG_NAME = SEISMIC_HOIST_TAG_NAME;\nvar HOIST_FIRST_SCROLL_PARENT = 'now-unstable-first-scroll-parent';\nexports.HOIST_FIRST_SCROLL_PARENT = HOIST_FIRST_SCROLL_PARENT;\nvar DEFER_ATTRIBUTE = 'defer';\nexports.DEFER_ATTRIBUTE = DEFER_ATTRIBUTE;\nvar APPEND_TO_PAYLOAD_PROP_NAME = 'appendToPayload';\nexports.APPEND_TO_PAYLOAD_PROP_NAME = APPEND_TO_PAYLOAD_PROP_NAME;\nvar APPEND_TO_META_PROP_NAME = 'appendToMeta';\nexports.APPEND_TO_META_PROP_NAME = APPEND_TO_META_PROP_NAME;\nvar PROPERTY_SELECTOR_SIGIL = '@';\nexports.PROPERTY_SELECTOR_SIGIL = PROPERTY_SELECTOR_SIGIL;\nvar PROPERTIES_SET_LIFECYCLE = 'onPropertiesSet'; // legacy life cycle functions\n\nexports.PROPERTIES_SET_LIFECYCLE = PROPERTIES_SET_LIFECYCLE;\nvar ON_CONNECT_LIFECYCLE = 'onConnect';\nexports.ON_CONNECT_LIFECYCLE = ON_CONNECT_LIFECYCLE;\nvar ON_DISCONNECT_LIFECYCLE = 'onDisconnect';\nexports.ON_DISCONNECT_LIFECYCLE = ON_DISCONNECT_LIFECYCLE;\nvar ON_BOOTSTRAP_LIFECYCLE = 'onBootstrap'; // public action types\n\nexports.ON_BOOTSTRAP_LIFECYCLE = ON_BOOTSTRAP_LIFECYCLE;\nvar COMPONENT_CONNECTED = 'SEISMIC_COMPONENT_CONNECTED';\nexports.COMPONENT_CONNECTED = COMPONENT_CONNECTED;\nvar COMPONENT_DISCONNECTED = 'SEISMIC_COMPONENT_DISCONNECTED';\nexports.COMPONENT_DISCONNECTED = COMPONENT_DISCONNECTED;\nvar COMPONENT_BOOTSTRAPPED = 'SEISMIC_COMPONENT_BOOTSTRAPPED';\nexports.COMPONENT_BOOTSTRAPPED = COMPONENT_BOOTSTRAPPED;\nvar COMPONENT_PROPERTY_CHANGED = 'SEISMIC_COMPONENT_PROPERTY_CHANGED';\nexports.COMPONENT_PROPERTY_CHANGED = COMPONENT_PROPERTY_CHANGED;\nvar COMPONENT_RENDERED = 'SEISMIC_COMPONENT_RENDERED';\nexports.COMPONENT_RENDERED = COMPONENT_RENDERED;\nvar COMPONENT_DOM_READY = 'SEISMIC_COMPONENT_DOM_READY';\nexports.COMPONENT_DOM_READY = COMPONENT_DOM_READY;\nvar COMPONENT_PROPERTY_UPDATE_REQUESTED = 'SEISMIC_COMPONENT_PROPERTY_UPDATE_REQUESTED';\nexports.COMPONENT_PROPERTY_UPDATE_REQUESTED = COMPONENT_PROPERTY_UPDATE_REQUESTED;\nvar COMPONENT_RENDER_REQUESTED = 'SEISMIC_COMPONENT_RENDER_REQUESTED';\nexports.COMPONENT_RENDER_REQUESTED = COMPONENT_RENDER_REQUESTED;\nvar COMPONENT_DOM_TREE_READY = 'SEISMIC_COMPONENT_DOM_TREE_READY';\nexports.COMPONENT_DOM_TREE_READY = COMPONENT_DOM_TREE_READY;\nvar COMPONENT_TREE_RENDERED = 'SEISMIC_COMPONENT_TREE_RENDERED';\nexports.COMPONENT_TREE_RENDERED = COMPONENT_TREE_RENDERED;\nvar COMPONENT_STATE_UPDATED = 'SEISMIC_COMPONENT_STATE_UPDATED';\nexports.COMPONENT_STATE_UPDATED = COMPONENT_STATE_UPDATED;\nvar COMPONENT_ACTION_DISPATCHED = 'SEISMIC_COMPONENT_ACTION_DISPATCHED'; // now namespace\n\nexports.COMPONENT_ACTION_DISPATCHED = COMPONENT_ACTION_DISPATCHED;\nvar NOW_HOIST_ATTR = 'now-hoist';\nexports.NOW_HOIST_ATTR = NOW_HOIST_ATTR;\nvar NOW_HOIST_PROP = 'nowHoist';\nexports.NOW_HOIST_PROP = NOW_HOIST_PROP;\nvar NOW_HOIST_APPEND_TO_ATTR = 'now-hoist-append-to';\nexports.NOW_HOIST_APPEND_TO_ATTR = NOW_HOIST_APPEND_TO_ATTR;\nvar NOW_HOIST_PREPEND_TO_ATTR = 'now-hoist-prepend-to';\nexports.NOW_HOIST_PREPEND_TO_ATTR = NOW_HOIST_PREPEND_TO_ATTR;\nvar NOW_HOIST_APPEND_TO_PROP = 'nowHoistAppendTo';\nexports.NOW_HOIST_APPEND_TO_PROP = NOW_HOIST_APPEND_TO_PROP;\nvar NOW_HOIST_PREPEND_TO_PROP = 'nowHoistPrependTo';\nexports.NOW_HOIST_PREPEND_TO_PROP = NOW_HOIST_PREPEND_TO_PROP;\nvar NOW_ID_ATTR = 'now-id';\nexports.NOW_ID_ATTR = NOW_ID_ATTR;\nvar NOW_ID_PROP = 'nowId';\nexports.NOW_ID_PROP = NOW_ID_PROP;\nvar NOW_COMPONENT_NAME_ATTR = 'now-name';\nexports.NOW_COMPONENT_NAME_ATTR = NOW_COMPONENT_NAME_ATTR;\nvar NOW_COMPONENT_NAME_PROP = 'nowName';\nexports.NOW_COMPONENT_NAME_PROP = NOW_COMPONENT_NAME_PROP;\nvar NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR = 'now-enable-property-setting-prevention';\nexports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR = NOW_ENABLE_PROPERTY_SETTING_PREVENTION_ATTR;\nvar NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP = 'nowEnablePropertySettingPrevention'; // modes\n\nexports.NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP = NOW_ENABLE_PROPERTY_SETTING_PREVENTION_PROP;\nvar NOW_MODE_ATTR = 'now-mode';\nexports.NOW_MODE_ATTR = NOW_MODE_ATTR;\nvar NOW_MODE_PROP = 'nowMode';\nexports.NOW_MODE_PROP = NOW_MODE_PROP;\nvar COMPONENT_MODE_ACTIVE = 'active';\nexports.COMPONENT_MODE_ACTIVE = COMPONENT_MODE_ACTIVE;\nvar COMPONENT_MODE_SUSPEND = 'suspend'; // metrics\n\nexports.COMPONENT_MODE_SUSPEND = COMPONENT_MODE_SUSPEND;\nvar NOW_METRIC_TYPES_PROP = 'nowMetricTypes';\nexports.NOW_METRIC_TYPES_PROP = NOW_METRIC_TYPES_PROP;\nvar NOW_METRICS_LEVEL_PROP = 'nowMetricsLevel';\nexports.NOW_METRICS_LEVEL_PROP = NOW_METRICS_LEVEL_PROP;\nvar NOW_UI_EVENT = 'NOW_UI_EVENT'; // now event types\n\nexports.NOW_UI_EVENT = NOW_UI_EVENT;\nvar STATE_UPDATED = 'STATE_UPDATED';\nexports.STATE_UPDATED = STATE_UPDATED;\nvar ACTION_DISPATCHED = 'ACTION_DISPATCHED';\nexports.ACTION_DISPATCHED = ACTION_DISPATCHED;\nvar ACTION_HANDLED = 'ACTION_HANDLED';\nexports.ACTION_HANDLED = ACTION_HANDLED;\nvar SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED = 'SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED';\nexports.SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED = SCHEDULE_IMMEDIATELY_DO_NOT_USE_OR_YOU_WILL_BE_IMMEDIATELY_FIRED;\nvar COMPONENT_INTERNAL_ACTION = 'NOW_COMPONENT_INTERNAL_ACTION';\nexports.COMPONENT_INTERNAL_ACTION = COMPONENT_INTERNAL_ACTION;\nvar HELPERS_IMMEDIATE = 'HELPERS_IMMEDIATE';\nexports.HELPERS_IMMEDIATE = HELPERS_IMMEDIATE;\nvar HELPERS_DEFER = 'HELPERS_DEFER';\nexports.HELPERS_DEFER = HELPERS_DEFER;\nvar HELPERS_SCHEDULED = 'HELPERS_SCHEDULED';\nexports.HELPERS_SCHEDULED = HELPERS_SCHEDULED;\nvar PACKAGE_NAME = '@servivcenow/ui-core';\nexports.PACKAGE_NAME = PACKAGE_NAME;\n//# sourceMappingURL=constants.js.map","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__$servicenow_now_list_menu;","import {AW_LIST} from '../../../constants';\n\nimport actionHandlers from './actions';\nimport get from 'lodash/get';\n\nexport const dispatchUpdate = (\n\tdispatch,\n\tpreviousValue,\n\tvalue,\n\tdispatchAction,\n\taction\n) => {\n\tconst previousTimestamp = get(previousValue, 'timestamp', '0');\n\tconst newTimeStamp = get(value, 'timestamp', '0');\n\n\tif (previousTimestamp !== newTimeStamp) {\n\t\tdispatch(dispatchAction, action);\n\t}\n};\nconst listMenuBehavior = {\n\tname: 'listMenuBehavior',\n\tinitialState: {},\n\tproperties: {\n\t\t// SELECTABLE PROPERTIES\n\t\tlist: {default: {}, selectable: true},\n\t\tmyList: {default: {}, selectable: true},\n\t\tselectedMenuItem: {default: {}, selectable: true},\n\t\tactiveTabId: {default: AW_LIST, selectable: true},\n\n\t\t// Internal state\n\t\tlistMenuModel: {default: {}},\n\n\t\t/*\n\t\tOTHER PROPERTIES\n\t\t*/\n\t\titemOrder: {default: {}},\n\t\tlistIdSelected: {default: false}\n\t},\n\tactionHandlers\n};\n\nexport default listMenuBehavior;\n","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","import get from 'lodash/get';\n\nexport function fetchQueryAction(item) {\n\tif (!item) {\n\t\treturn {};\n\t}\n\tconst {\n\t\tdisplayValue: title,\n\t\tid: selectedListId,\n\t\ttable,\n\t\ttargetTable,\n\t\tcolumns,\n\t\tconditions\n\t} = item;\n\n\treturn {\n\t\tselectedListId,\n\t\ttargetTable,\n\t\ttable,\n\t\ttitle,\n\t\tconditions,\n\t\tcolumns\n\t};\n}\n\nexport function isResourceReady(resource) {\n\tconst isReading = get(resource, 'status.reading', false);\n\tif (isReading) return !isReading;\n\n\tconst hasData = get(resource, 'data', null);\n\n\treturn hasData !== null || false;\n}\n","module.exports = __TECTONIC__sn_user_preferences;","export {\n\tdefault as nowRecordListMenuConnected\n} from './components/listMenu/recordListMenuConnected';\nexport {\n\tdefault as listMenuBehavior\n} from './components/behaviors/listMenu/listMenuBehavior';\n","import '../modal/newListModal';\nimport '@servicenow/now-loader';\nimport {\n\tLIST_MENU_CRUD_OPERATION,\n\tLIST_MENU_DATA_PROVIDER_BOOTSTRAP,\n\tLIST_MENU_FETCH_LIST_DISPATCH,\n\tLIST_MENU_HANDLE_ACTIVE_TAB,\n\tLIST_MENU_LIST_ID_CHANGED,\n\tLIST_MENU_UPDATE_ITEM_ORDER,\n\tUPDATE_SELECTED_MENU_ITEM\n} from '../../constants';\nimport {createCustomElement} from '@servicenow/ui-core';\n/* eslint-disable */\nimport {dirtyBehavior, nowListMenu} from '@servicenow/now-list-menu';\nimport {default as modalBehaviors} from '../behaviors/newListModal/modalBehavior';\n/* eslint-enable */\nimport {COMPONENT_DOM_READY} from '@servicenow/ui-core/lib/constants';\nimport {buildModalData} from './utils';\nimport {dispatchUpdate} from '../behaviors/listMenu/listMenuBehavior';\nimport {default as listMenuBehavior} from '../behaviors/listMenu/listMenuBehavior';\nimport {default as newListModalBehavior} from '../behaviors/newListModal/newListModalBehavior';\nimport {userPreferencesBehavior} from 'sn-user-preferences';\nimport actionHandlers from './actions';\nimport get from 'lodash/get';\nimport packageJson from '../../../package.json';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\n\nconst view = state => {\n\tconst {\n\t\tcomponentId,\n\t\tmodalProps,\n\t\tproperties: {\n\t\t\tactiveTabId,\n\t\t\thideCreateNewTab,\n\t\t\thideListCreation,\n\t\t\tforceRefresh,\n\t\t\tisEditing,\n\t\t\tloading,\n\t\t\tlistMenuOpen,\n\t\t\tlist,\n\t\t\tmyList,\n\t\t\tselectedMenuItem: {selectionPath},\n\t\t\tselectColumns,\n\t\t\tnewTabDefaultColumns\n\t\t}\n\t} = state;\n\n\tconst lists = {\n\t\t[list.key]: list,\n\t\t[myList.key]: myList\n\t};\n\n\tconst hideModal = !get(modalProps, 'type', '');\n\tconst newListModalData = buildModalData(lists, list);\n\n\treturn (\n\t\t<div style={{height: '100%'}}>\n\t\t\t{!hideModal ? (\n\t\t\t\t<sn-record-list-menu-modal-new-list\n\t\t\t\t\tmodalProps={modalProps}\n\t\t\t\t\tmodalData={newListModalData}\n\t\t\t\t\thideCreateNewTab={hideCreateNewTab}\n\t\t\t\t\tselectColumns={selectColumns}\n\t\t\t\t\tnewTabDefaultColumns={newTabDefaultColumns}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t<now-list-menu\n\t\t\t\tactive-tab-id={activeTabId}\n\t\t\t\tcomponent-id={`${componentId}-list-menu`}\n\t\t\t\tforce-refresh={forceRefresh}\n\t\t\t\thide-list-creation={hideListCreation}\n\t\t\t\tis-editing={isEditing}\n\t\t\t\tlists={lists}\n\t\t\t\tlist-menu-open={listMenuOpen}\n\t\t\t\tloading={loading}\n\t\t\t\tselected-item-path={selectionPath}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\n/**\n * A collapsable sidebar menu panel component to select items such as lists, with accordions for list items and tabs for different menus.\n *\n * ```jsx\n * <now-record-list-menu-connected\n * \t\tconfigurationId={...}\n * \t\thideListCreation={...} />\n * ```\n *\n * @seismicElement now-record-list-menu-connected\n * @summary A collapsable sidebar menu panel component to select items such as lists, with accordions for list items and tabs for different menus.\n */\ncreateCustomElement('now-record-list-menu-connected', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tactionHandlers: {\n\t\t...actionHandlers,\n\t\t[COMPONENT_DOM_READY]: {\n\t\t\teffect: ({dispatch}) => {\n\t\t\t\tdispatch(LIST_MENU_DATA_PROVIDER_BOOTSTRAP);\n\t\t\t}\n\t\t}\n\t},\n\tinitialState: {\n\t\thasFetched: false,\n\t\tisWorkspace: false\n\t},\n\tproperties: {\n\t\t/**\n\t\t * An internal initial flag that indicates if the initial load has been completed.\n\t\t * @private\n\t\t */\n\t\tafterInitialLoad: {default: false},\n\t\t/**\n\t\t * Table conditions selectable prop for use in list navigation.\n\t\t * @type {string}\n\t\t */\n\t\tconditions: {default: '', selectable: true},\n\t\t/**\n\t\t * Represents a unique ID for the configuration used to fetch lists.\n\t\t * @type {string}\n\t\t * @uib.required\n\t\t */\n\t\tconfigurationId: {default: ''},\n\t\t/**\n\t\t * Table columns selectable prop for use in list navigation.\n\t\t * @type {string}\n\t\t */\n\t\tcolumns: {default: '', selectable: true},\n\t\t/**\n\t\t * Toggles the user's ability to create new lists.\n\t\t * @type {boolean}\n\t\t */\n\t\thideListCreation: {default: false},\n\t\t/**\n\t\t * A selectable object of information used to display error message\n\t\t * @type {object}\n\t\t */\n\t\terror: {default: {}, selectable: true},\n\t\t/**\n\t\t * Toggles the user's ability to create new lists from\n\t\t * the 'Create New' tab in the 'New list' modal.\n\t\t * @type {boolean}\n\t\t */\n\t\thideCreateNewTab: {default: false},\n\t\t/**\n\t\t * An object to handle the dispatch of fetching lists.\n\t\t * @private\n\t\t */\n\t\tfetchListTrigger: {\n\t\t\tdefault: {},\n\t\t\tonChange(value, previousValue, {dispatch}) {\n\t\t\t\tdispatchUpdate(\n\t\t\t\t\tdispatch,\n\t\t\t\t\tpreviousValue,\n\t\t\t\t\tvalue,\n\t\t\t\t\tLIST_MENU_FETCH_LIST_DISPATCH,\n\t\t\t\t\t{}\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Timestamp of last forced refresh.\n\t\t * @private\n\t\t */\n\t\tforceRefresh: {},\n\t\t/**\n\t\t * A flag that indicates a user is currently editing the list menu.\n\t\t * @type {boolean}\n\t\t */\n\t\tisDirty: {default: false},\n\t\t/**\n\t\t * A private flag that indicates a user is currently editing the list menu.\n\t\t * @private\n\t\t */\n\t\tisEditing: {\n\t\t\tdefault: false\n\t\t},\n\t\t/**\n\t\t * Represents a unique ID for the instance of the list rendered.\n\t\t * @type {string}\n\t\t */\n\t\tlistId: {\n\t\t\tdefault: '',\n\t\t\tonChange(value, previousValue, {dispatch}) {\n\t\t\t\tif (previousValue !== undefined && value !== previousValue) {\n\t\t\t\t\tdispatch(LIST_MENU_LIST_ID_CHANGED, {listId: value});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * An object handling CRUD operations for the list menu.\n\t\t * @type {object}\n\t\t */\n\t\tlistMenuCrud: {\n\t\t\tdefault: {},\n\t\t\tonChange(value, previousValue, {dispatch}) {\n\t\t\t\tconst action = {listMenuCrud: value};\n\t\t\t\tdispatchUpdate(\n\t\t\t\t\tdispatch,\n\t\t\t\t\tpreviousValue,\n\t\t\t\t\tvalue,\n\t\t\t\t\tLIST_MENU_CRUD_OPERATION,\n\t\t\t\t\taction\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Denotes whether the menu is open.\n\t\t * @type {boolean}\n\t\t */\n\t\tlistMenuOpen: {default: true},\n\t\t/**\n\t\t * A private flag that indicates whether or not new data is being fetched to populate the menu.\n\t\t * @private\n\t\t */\n\t\tloading: {default: true},\n\t\t/**\n\t\t * An object to handle the dispatch of selecting a new menu tab.\n\t\t * @private\n\t\t */\n\t\tmenuTabUpdate: {\n\t\t\tdefault: {},\n\t\t\tonChange(value, previousValue, {dispatch}) {\n\t\t\t\tconst action = {\n\t\t\t\t\ttabId: get(value, 'tabId')\n\t\t\t\t};\n\n\t\t\t\tdispatchUpdate(\n\t\t\t\t\tdispatch,\n\t\t\t\t\tpreviousValue,\n\t\t\t\t\tvalue,\n\t\t\t\t\tLIST_MENU_HANDLE_ACTIVE_TAB,\n\t\t\t\t\taction\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The ID of a new list being added to the menu.\n\t\t * @private\n\t\t */\n\t\tnewListItem: {},\n\t\t/**\n\t\t * An object to handle the dispatch of reordering menu items.\n\t\t * @private\n\t\t */\n\t\torderUpdate: {\n\t\t\tdefault: {},\n\t\t\tonChange(value, previousValue, {dispatch}) {\n\t\t\t\tconst action = {\n\t\t\t\t\tlistModel: get(value, 'listModel'),\n\t\t\t\t\tisEditing: get(value, 'isEditing')\n\t\t\t\t};\n\n\t\t\t\tdispatchUpdate(\n\t\t\t\t\tdispatch,\n\t\t\t\t\tpreviousValue,\n\t\t\t\t\tvalue,\n\t\t\t\t\tLIST_MENU_UPDATE_ITEM_ORDER,\n\t\t\t\t\taction\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Array of all available column selections in the new modal.\n\t\t */\n\t\tselectColumns: {\n\t\t\tdefault: []\n\t\t},\n\t\t/**\n\t\t * Array of default columns for the 'Create new' tab in the new modal.\n\t\t */\n\t\tnewTabDefaultColumns: {\n\t\t\tdefault: []\n\t\t},\n\t\t/**\n\t\t * An object to handle the dispatch of selecting a menu item.\n\t\t * @private\n\t\t */\n\t\tselectedItemUpdate: {\n\t\t\tdefault: {},\n\t\t\tonChange(value, previousValue, {dispatch}) {\n\t\t\t\tconst action = {\n\t\t\t\t\tselectedMenuItem: get(value, 'selectedMenuItem')\n\t\t\t\t};\n\n\t\t\t\tdispatchUpdate(\n\t\t\t\t\tdispatch,\n\t\t\t\t\tpreviousValue,\n\t\t\t\t\tvalue,\n\t\t\t\t\tUPDATE_SELECTED_MENU_ITEM,\n\t\t\t\t\taction\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * List Id Selectable prop for use in list navigation.\n\t\t * @type {string}\n\t\t */\n\t\tselectedListId: {default: '', selectable: true},\n\t\t/**\n\t\t * Target Table (sys_aw_list, sys_aw_my_list) Selectable prop for use in list navigation.\n\t\t * @type {string}\n\t\t */\n\t\ttargetTable: {default: '', selectable: true},\n\t\t/**\n\t\t * Table name Selectable prop for use in list navigation.\n\t\t * @type {string}\n\t\t */\n\t\ttable: {default: '', selectable: true},\n\t\t/**\n\t\t * Table title Selectable prop for use in list navigation.\n\t\t * @type {string}\n\t\t */\n\t\ttitle: {default: '', selectable: true},\n\t\t/**\n\t\t * Tiny ID value for the current list. Used to prevent automatic selection of a list\n\t\t * when opening a list shared with a tiny URL.\n\t\t * @type {string}\n\t\t */\n\t\ttiny: {},\n\t\t/**\n\t\t * Represents a unique ID for the instance of the workspace, used to fetch lists.\n\t\t * Required: Yes (For Workspace Only)\n\t\t * @type {string}\n\t\t */\n\t\tworkspaceConfigId: {default: ''}\n\t},\n\tonConnect(host) {\n\t\tif (!window.listComponentRegistry) {\n\t\t\twindow.listComponentRegistry = new WeakMap();\n\t\t}\n\t\twindow.listComponentRegistry.set(host, packageJson.version);\n\t},\n\tonDisconnect(host) {\n\t\tif (window.listComponentRegistry) {\n\t\t\twindow.listComponentRegistry.delete(host);\n\t\t}\n\t},\n\t// onBootstrap(host, {dispatch}) {\n\t// \tdispatch(LIST_MENU_DATA_PROVIDER_BOOTSTRAP);\n\t// },\n\tbehaviors: [\n\t\tdirtyBehavior,\n\t\tmodalBehaviors,\n\t\tlistMenuBehavior,\n\t\tuserPreferencesBehavior,\n\t\tnewListModalBehavior\n\t],\n\tdispatches: {\n\t\t/**\n\t\t * Fired when selecting a list from the menu in the context of a Workspace (ie. Agent Workspace) only.\n\t\t * @type {{selectedListId: string, targetTable: string, menuTab: string, table: string, title: string, conditions: string, columns: string}}\n\t\t */\n\t\tUPDATE_LIST_MENU_QUERY: {},\n\t\t/**\n\t\t * Fired when selecting a list from the menu outside the Workspace (ie. Agent Workspace) context.\n\t\t * @type {{title: string, params: object, redirectEmptyState: boolean}}\n\t\t */\n\t\tCONTENT_UPDATED: {},\n\t\t/**\n\t\t * Fired when selecting a list from the menu outside the Workspace context (ie. In UIB).\n\t\t * @type {{columns: string, conditions: string, table: string, targetTable: string, selectedListId: string}}\n\t\t */\n\t\t'NOW_RECORD_LIST_MENU_CONNECTED#ITEM_CLICKED': {},\n\t\t/**\n\t\t * Fired when list is in an error state (ie. In UIB).\n\t\t * @type {{error: object}}\n\t\t */\n\t\t'NOW_RECORD_LIST_MENU_CONNECTED#ERROR': {}\n\t}\n});\n","import '@devsnc/sn-glide-form-controls';\nimport '@servicenow/now-condition-builder';\nimport '@servicenow/now-input';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-select';\nimport '@servicenow/now-tabs';\nimport '@servicenow/now-typeahead';\nimport {\n\tCANCEL_BUTTON_ID,\n\tCANCEL_LABEL,\n\tCREATE_BUTTON_ID,\n\tCREATE_FROM_EXISTING_ID,\n\tCREATE_FROM_EXISTING_LABEL,\n\tCREATE_LIST_LABEL,\n\tCREATE_NEW_ID,\n\tCREATE_NEW_LABEL,\n\tDEFAULT_CONDITIONS_QUERY,\n\tDEFAULT_CONDITIONS_TABLE,\n\tDUPLICATE_NAME_TEXT,\n\tFIELD_CLASS_NAME,\n\tLIST_NAME_INPUT_MAX,\n\tLIST_NAME_INPUT_MIN,\n\tLIST_NAME_INPUT_PLACEHOLDER,\n\tLIST_NAME_LABEL,\n\tLIST_NAME_MESSAGE,\n\tLIST_NAME_NAME,\n\tNEW_LIST_MODAL_SUBTITLE,\n\tNEW_LIST_MODAL_TITLE,\n\tSELECT_COLUMNS_LABEL,\n\tSELECT_COLUMNS_MESSAGE,\n\tSELECT_COLUMNS_NAME,\n\tSELECT_LIST_LABEL,\n\tSELECT_LIST_MESSAGE,\n\tSELECT_LIST_NAME,\n\tSELECT_TABLE_LABEL,\n\tSELECT_TABLE_MESSAGE,\n\tSELECT_TABLE_NAME,\n\tSELECT_TABLE_PLACEHOLDER,\n\tTABLE_INVALID_SET,\n\tTYPEAHEAD_INVALID_SET\n} from './modalConstants';\nimport {\n\tCLOSE_MODAL,\n\tCOMPONENT_PROPERTY_CHANGED,\n\tCONDITION_BUILDER_ENCODED_QUERY_SET,\n\tCRUD_OPS,\n\tINPUT_INVALID_SET,\n\tINPUT_VALUE_SET,\n\tLIST_MENU_CRUD_OPERATION,\n\tMODAL_FOOTER_ACTION_CLICKED,\n\tMODAL_OPENED_SET,\n\tNOW_SELECT_SELECTED,\n\tNOW_TABS_SELECTED_SET,\n\tNOW_TYPEAHEAD_MULTI_SELECTED_SET,\n\tPROPAGATE_SELECTED_COLUMNS,\n\tSELECT_INVALID_SET,\n\tTABLE_SELECTED_SET\n} from '../../constants';\nimport {createCustomElement} from '@seismic/core';\nimport {getDotWalkedColumns} from './utils';\nimport {t} from 'sn-translate';\nimport get from 'lodash/get';\nimport includes from 'lodash/includes';\nimport isEmpty from 'lodash/isEmpty';\nimport snabbdom from '@seismic/snabbdom-renderer';\nimport styles from './newListModal.scss';\nimport without from 'lodash/without';\n\nconst view = (state, {dispatch}) => {\n\tconst {\n\t\tproperties: {\n\t\t\tmodalProps: {useiFrame},\n\t\t\tmodalData,\n\t\t\thideCreateNewTab,\n\t\t\tselectColumns\n\t\t},\n\t\tmodalTabID\n\t} = state;\n\n\tconst invalidFields = get(state, `tabState.${modalTabID}.invalidFields`, []);\n\tconst revealInvalidity = get(\n\t\tstate,\n\t\t`tabState.${modalTabID}.revealInvalidity`,\n\t\tfalse\n\t);\n\n\tconst footerButtons = [\n\t\t{\n\t\t\tlabel: CREATE_LIST_LABEL,\n\t\t\tvariant: 'primary',\n\t\t\ttooltipContent: CREATE_LIST_LABEL,\n\t\t\tid: CREATE_BUTTON_ID,\n\t\t\tconfigAria: {'aria-label': CREATE_LIST_LABEL}\n\t\t},\n\t\t{\n\t\t\tlabel: CANCEL_LABEL,\n\t\t\tvariant: 'secondary',\n\t\t\ttooltipContent: CANCEL_LABEL,\n\t\t\tid: CANCEL_BUTTON_ID,\n\t\t\tconfigAria: {'aria-label': CANCEL_LABEL}\n\t\t}\n\t];\n\n\tconst renderTabs = () => {\n\t\tconst tabArray = [\n\t\t\t{id: CREATE_FROM_EXISTING_ID, label: CREATE_FROM_EXISTING_LABEL}\n\t\t];\n\t\tif (!hideCreateNewTab)\n\t\t\ttabArray.push({id: CREATE_NEW_ID, label: CREATE_NEW_LABEL});\n\t\treturn tabArray;\n\t};\n\n\tlet modalContent = () => {\n\t\tif (!useiFrame) {\n\t\t\treturn (\n\t\t\t\t<div className=\"sn-new-list-modal-content\">\n\t\t\t\t\t<div className=\"sn-modal-subheader\">\n\t\t\t\t\t\t<h2 className=\"sn-modal-subhead\">{NEW_LIST_MODAL_SUBTITLE}</h2>\n\t\t\t\t\t\t<now-tabs items={renderTabs()} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{renderModalBody()}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn <div></div>;\n\t};\n\n\tconst renderModalBody = () => {\n\t\treturn (\n\t\t\t<div className=\"sn-new-list-modal-body\">\n\t\t\t\t{renderTabSpecificFields()}\n\t\t\t\t{renderSecondaryFields()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst renderTabSpecificFields = () => {\n\t\tif (modalTabID === CREATE_FROM_EXISTING_ID) {\n\t\t\tconst selectedListID = get(\n\t\t\t\tstate,\n\t\t\t\t'tabState.fromExisting.selectedList.id',\n\t\t\t\t''\n\t\t\t);\n\t\t\tconst isInvalid =\n\t\t\t\tincludes(invalidFields, SELECT_LIST_NAME) && revealInvalidity;\n\t\t\tconst message = isInvalid ? SELECT_LIST_MESSAGE : [];\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<now-select\n\t\t\t\t\t\tlabel={SELECT_LIST_LABEL}\n\t\t\t\t\t\titems={modalData}\n\t\t\t\t\t\tsearch=\"initial\"\n\t\t\t\t\t\tselectedItem={selectedListID}\n\t\t\t\t\t\tclassName={FIELD_CLASS_NAME}\n\t\t\t\t\t\tmanageInvalid\n\t\t\t\t\t\tinvalid={isInvalid}\n\t\t\t\t\t\tmessages={message}\n\t\t\t\t\t\tplaceholder={SELECT_TABLE_PLACEHOLDER}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tname={SELECT_LIST_NAME}\n\t\t\t\t\t/>\n\t\t\t\t\t{renderNameInput()}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tconst value = get(state, 'tabState.createNew.table', '');\n\t\t\tconst displayValue = get(\n\t\t\t\tstate,\n\t\t\t\t'tabState.createNew.tableDisplayName',\n\t\t\t\t''\n\t\t\t);\n\t\t\tconst isInvalid =\n\t\t\t\tincludes(invalidFields, SELECT_TABLE_NAME) && revealInvalidity;\n\t\t\tconst message = isInvalid ? SELECT_TABLE_MESSAGE : [];\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{renderNameInput()}\n\t\t\t\t\t<div className={FIELD_CLASS_NAME}>\n\t\t\t\t\t\t<sn-record-tablename-connected\n\t\t\t\t\t\t\tlabel={SELECT_TABLE_LABEL}\n\t\t\t\t\t\t\tplaceholder={SELECT_TABLE_PLACEHOLDER}\n\t\t\t\t\t\t\tonValueChange={({value, displayValue, error}) => {\n\t\t\t\t\t\t\t\tif (error) dispatch(TABLE_INVALID_SET);\n\t\t\t\t\t\t\t\telse if (value)\n\t\t\t\t\t\t\t\t\tdispatch(TABLE_SELECTED_SET, {\n\t\t\t\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\t\t\t\tdisplayValue: displayValue\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tdisplayValue={displayValue}\n\t\t\t\t\t\t\tinvalid={isInvalid}\n\t\t\t\t\t\t\tmessages={message}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tname={SELECT_TABLE_NAME}\n\t\t\t\t\t\t\tdictionaryAttributes={{}}\n\t\t\t\t\t\t\treferringRecordId={'-1'}></sn-record-tablename-connected>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst renderNameInput = () => {\n\t\tconst value = get(state, `tabState.${modalTabID}.listName`, '');\n\t\tconst isInvalid =\n\t\t\tincludes(invalidFields, LIST_NAME_NAME) && revealInvalidity;\n\t\tconst message = isInvalid ? LIST_NAME_MESSAGE : [];\n\n\t\treturn (\n\t\t\t<now-input\n\t\t\t\tlabel={LIST_NAME_LABEL}\n\t\t\t\tvalue={value}\n\t\t\t\tname={LIST_NAME_NAME}\n\t\t\t\tplaceholder={LIST_NAME_INPUT_PLACEHOLDER}\n\t\t\t\trequired\n\t\t\t\tmanageInvalid\n\t\t\t\tinvalid={isInvalid}\n\t\t\t\tminlength={LIST_NAME_INPUT_MIN}\n\t\t\t\tmaxlength={LIST_NAME_INPUT_MAX}\n\t\t\t\tclassName={FIELD_CLASS_NAME}\n\t\t\t\tmessages={message}></now-input>\n\t\t);\n\t};\n\n\tconst renderSecondaryFields = () => {\n\t\tconst hideSecondaryFields =\n\t\t\t(modalTabID === CREATE_FROM_EXISTING_ID &&\n\t\t\t\tincludes(invalidFields, SELECT_LIST_NAME)) ||\n\t\t\t(modalTabID === CREATE_NEW_ID &&\n\t\t\t\tincludes(invalidFields, SELECT_TABLE_NAME));\n\n\t\treturn !hideSecondaryFields ? (\n\t\t\t<div className=\"sn-new-list-modal-secondary-fields\">\n\t\t\t\t{renderSelectColumns()}\n\t\t\t\t{renderConditionBuilder()}\n\t\t\t</div>\n\t\t) : null;\n\t};\n\n\tconst renderSelectColumns = () => {\n\t\tconst itemizeColumns = selectedColumns => {\n\t\t\tif (selectedColumns) {\n\t\t\t\treturn selectedColumns\n\t\t\t\t\t.map(columnItem => {\n\t\t\t\t\t\treturn {id: columnItem.columnName, label: columnItem.displayName};\n\t\t\t\t\t})\n\t\t\t\t\t.concat(\n\t\t\t\t\t\tgetDotWalkedColumns(\n\t\t\t\t\t\t\tget(state, 'tabState.fromExisting.selectedList', '')\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t}\n\t\t\treturn [{id: '', label: ''}];\n\t\t};\n\t\tconst thisTabSelectedColumns = get(\n\t\t\tstate,\n\t\t\t`tabState.${modalTabID}.columns`,\n\t\t\t[]\n\t\t);\n\t\tconst isInvalid =\n\t\t\t(includes(invalidFields, SELECT_COLUMNS_NAME) ||\n\t\t\t\tisEmpty(thisTabSelectedColumns)) &&\n\t\t\trevealInvalidity;\n\t\tconst message = isInvalid ? SELECT_COLUMNS_MESSAGE : [];\n\n\t\treturn (\n\t\t\t<div className={'sn-modal-column-select'}>\n\t\t\t\t<now-typeahead-multi\n\t\t\t\t\tlabel={SELECT_COLUMNS_LABEL}\n\t\t\t\t\titems={itemizeColumns(selectColumns)}\n\t\t\t\t\tselectedItems={thisTabSelectedColumns}\n\t\t\t\t\trequired\n\t\t\t\t\tmanageInvalid\n\t\t\t\t\tinvalid={isInvalid}\n\t\t\t\t\tmessages={message}\n\t\t\t\t\tsearch=\"contains\"\n\t\t\t\t\tclassName={FIELD_CLASS_NAME}\n\t\t\t\t\tname={SELECT_COLUMNS_NAME}></now-typeahead-multi>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst renderConditionBuilder = () => {\n\t\tconst tableName = get(\n\t\t\tstate,\n\t\t\t`tabState.${modalTabID}.table`,\n\t\t\tDEFAULT_CONDITIONS_TABLE\n\t\t);\n\t\tconst tableLabel = tableName;\n\t\tconst encodedQuery = get(\n\t\t\tstate,\n\t\t\t`tabState.${modalTabID}.conditions`,\n\t\t\tDEFAULT_CONDITIONS_QUERY\n\t\t);\n\n\t\treturn (\n\t\t\t<div className={'sn-modal-condition-builder'}>\n\t\t\t\t<div className=\"field-label\">{t('Add Filters')}</div>\n\t\t\t\t<now-condition-builder\n\t\t\t\t\ttableName={tableName}\n\t\t\t\t\ttableLabel={tableLabel}\n\t\t\t\t\tencodedQuery={encodedQuery}\n\t\t\t\t\thideRelatedListQueryConditions={true}\n\t\t\t\t\tlegacy={true}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<now-modal\n\t\t\tsize=\"lg\"\n\t\t\theader-label={NEW_LIST_MODAL_TITLE}\n\t\t\tmanage-opened\n\t\t\topened={true}\n\t\t\tfooterActions={footerButtons}>\n\t\t\t{modalContent()}\n\t\t</now-modal>\n\t);\n};\n\ncreateCustomElement('sn-record-list-menu-modal-new-list', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tproperties: {\n\t\tmodalProps: {},\n\t\tmodalData: {default: []},\n\t\thideCreateNewTab: {default: false},\n\t\tselectColumns: {default: []},\n\t\tnewTabDefaultColumns: {default: []}\n\t},\n\tinitialState: {\n\t\tmodalTabID: CREATE_FROM_EXISTING_ID,\n\t\ttabState: {\n\t\t\tfromExisting: {\n\t\t\t\tselectedList: {},\n\t\t\t\ttable: '',\n\t\t\t\tlistName: '',\n\t\t\t\thasManuallyEnteredListName: false,\n\t\t\t\tcolumns: [],\n\t\t\t\tconditions: '',\n\t\t\t\tcurrentEncodedQuery: '',\n\t\t\t\tinvalidFields: [SELECT_LIST_NAME, LIST_NAME_NAME, SELECT_COLUMNS_NAME],\n\t\t\t\trevealInvalidity: false\n\t\t\t},\n\t\t\tcreateNew: {\n\t\t\t\ttable: '',\n\t\t\t\ttableDisplayName: '',\n\t\t\t\tlistName: '',\n\t\t\t\tcolumns: [],\n\t\t\t\tconditions: '',\n\t\t\t\tcurrentEncodedQuery: '',\n\t\t\t\tinvalidFields: [LIST_NAME_NAME, SELECT_TABLE_NAME, SELECT_COLUMNS_NAME],\n\t\t\t\trevealInvalidity: false\n\t\t\t}\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[MODAL_OPENED_SET]: {\n\t\t\teffect: coeffects => {\n\t\t\t\tconst {dispatch} = coeffects;\n\n\t\t\t\tdispatch(CLOSE_MODAL);\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[NOW_TABS_SELECTED_SET]: {\n\t\t\teffect: ({\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {value}\n\t\t\t\t},\n\t\t\t\tupdateState\n\t\t\t}) => {\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: 'modalTabID',\n\t\t\t\t\tvalue: value,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[SELECT_INVALID_SET]: {\n\t\t\teffect: ({\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {value}\n\t\t\t\t},\n\t\t\t\tupdateState,\n\t\t\t\tstate: {modalTabID}\n\t\t\t}) => {\n\t\t\t\tif (value) {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\tvalue: SELECT_LIST_NAME,\n\t\t\t\t\t\toperation: 'push'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[NOW_SELECT_SELECTED]: {\n\t\t\teffect: coeffects => {\n\t\t\t\tconst {\n\t\t\t\t\taction: {\n\t\t\t\t\t\tpayload: {item}\n\t\t\t\t\t},\n\t\t\t\t\tdispatch,\n\t\t\t\t\tupdateState,\n\t\t\t\t\tstate,\n\t\t\t\t\tstate: {modalTabID, tabState}\n\t\t\t\t} = coeffects;\n\t\t\t\tconst conditions = item.conditions || '';\n\t\t\t\tconst invalidFields = get(\n\t\t\t\t\tstate,\n\t\t\t\t\t`tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tconst newInvalidFields = without(\n\t\t\t\t\tinvalidFields,\n\t\t\t\t\tSELECT_LIST_NAME,\n\t\t\t\t\tLIST_NAME_NAME,\n\t\t\t\t\tSELECT_COLUMNS_NAME\n\t\t\t\t);\n\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: 'tabState.fromExisting',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\t...tabState.fromExisting,\n\t\t\t\t\t\tselectedList: item,\n\t\t\t\t\t\ttable: item.table,\n\t\t\t\t\t\tconditions: conditions,\n\t\t\t\t\t\tcurrentEncodedQuery: conditions,\n\t\t\t\t\t\tinvalidFields: newInvalidFields\n\t\t\t\t\t},\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tif (\n\t\t\t\t\t!get(state, 'tabState.fromExisting.hasManuallyEnteredListName', true)\n\t\t\t\t) {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: 'tabState.fromExisting.listName',\n\t\t\t\t\t\tvalue: item.label + DUPLICATE_NAME_TEXT,\n\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tdispatch(PROPAGATE_SELECTED_COLUMNS, {tableName: item.table});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[COMPONENT_PROPERTY_CHANGED]: {\n\t\t\teffect: coeffects => {\n\t\t\t\tconst {\n\t\t\t\t\taction: {\n\t\t\t\t\t\tpayload: {name, value}\n\t\t\t\t\t},\n\t\t\t\t\tproperties: {newTabDefaultColumns, selectColumns},\n\t\t\t\t\tstate,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tmodalTabID,\n\t\t\t\t\t\ttabState: {\n\t\t\t\t\t\t\tfromExisting: {selectedList}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tupdateState\n\t\t\t\t} = coeffects;\n\n\t\t\t\tif (name === 'selectColumns') {\n\t\t\t\t\tif (modalTabID === CREATE_FROM_EXISTING_ID) {\n\t\t\t\t\t\tconst processListPreExistingColumns = () => {\n\t\t\t\t\t\t\tif (selectedList.columns && value) {\n\t\t\t\t\t\t\t\tconst colArray = [];\n\t\t\t\t\t\t\t\tconst frontEndColArray = selectedList.columns.split(',');\n\t\t\t\t\t\t\t\tselectColumns.forEach(backEndCol => {\n\t\t\t\t\t\t\t\t\tif (frontEndColArray.includes(backEndCol.columnName)) {\n\t\t\t\t\t\t\t\t\t\tcolArray.push({\n\t\t\t\t\t\t\t\t\t\t\tid: backEndCol.columnName,\n\t\t\t\t\t\t\t\t\t\t\tlabel: backEndCol.displayName\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn colArray.concat(getDotWalkedColumns(selectedList));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tpath: 'tabState.fromExisting.columns',\n\t\t\t\t\t\t\tvalue: processListPreExistingColumns(),\n\t\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (modalTabID === CREATE_NEW_ID) {\n\t\t\t\t\t\tconst processTableDefaultColumns = () => {\n\t\t\t\t\t\t\tif (newTabDefaultColumns) {\n\t\t\t\t\t\t\t\treturn newTabDefaultColumns.map(columnItem => {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tid: columnItem.columnName,\n\t\t\t\t\t\t\t\t\t\tlabel: columnItem.displayName\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tpath: 'tabState.createNew.columns',\n\t\t\t\t\t\t\tvalue: processTableDefaultColumns(),\n\t\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isEmpty(get(state, `tabState.${modalTabID}.invalidFields`, []))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst invalidFields = get(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newInvalidFields = without(\n\t\t\t\t\t\t\tinvalidFields,\n\t\t\t\t\t\t\tSELECT_COLUMNS_NAME\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\t\tvalue: newInvalidFields,\n\t\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[INPUT_INVALID_SET]: {\n\t\t\teffect: ({\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {name, value}\n\t\t\t\t},\n\t\t\t\tupdateState,\n\t\t\t\tstate: {modalTabID}\n\t\t\t}) => {\n\t\t\t\tif (value) {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\tvalue: name,\n\t\t\t\t\t\toperation: 'push'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[INPUT_VALUE_SET]: {\n\t\t\teffect: ({\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {value}\n\t\t\t\t},\n\t\t\t\tstate,\n\t\t\t\tstate: {modalTabID},\n\t\t\t\tupdateState\n\t\t\t}) => {\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: `tabState.${modalTabID}.listName`,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tconst invalidFields = get(\n\t\t\t\t\tstate,\n\t\t\t\t\t`tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tconst newInvalidFields = without(invalidFields, LIST_NAME_NAME);\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\tvalue: newInvalidFields,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tif (modalTabID === CREATE_FROM_EXISTING_ID) {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: `tabState.fromExisting.hasManuallyEnteredListName`,\n\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[TABLE_INVALID_SET]: {\n\t\t\teffect: ({updateState, state: {modalTabID}}) => {\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\tvalue: SELECT_TABLE_NAME,\n\t\t\t\t\toperation: 'push'\n\t\t\t\t});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[TABLE_SELECTED_SET]: {\n\t\t\teffect: coeffects => {\n\t\t\t\tconst {\n\t\t\t\t\taction: {\n\t\t\t\t\t\tpayload: {value, displayValue}\n\t\t\t\t\t},\n\t\t\t\t\tstate,\n\t\t\t\t\tstate: {modalTabID},\n\t\t\t\t\tupdateState,\n\t\t\t\t\tdispatch\n\t\t\t\t} = coeffects;\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: 'tabState.createNew.table',\n\t\t\t\t\tvalue: value,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: 'tabState.createNew.tableDisplayName',\n\t\t\t\t\tvalue: displayValue,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tconst invalidFields = get(\n\t\t\t\t\tstate,\n\t\t\t\t\t`tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tconst newInvalidFields = without(invalidFields, SELECT_TABLE_NAME);\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\tvalue: newInvalidFields,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tdispatch(PROPAGATE_SELECTED_COLUMNS, {tableName: value});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[TYPEAHEAD_INVALID_SET]: {\n\t\t\teffect: coeffects => {\n\t\t\t\tconst {\n\t\t\t\t\taction,\n\t\t\t\t\tupdateState,\n\t\t\t\t\tstate: {modalTabID}\n\t\t\t\t} = coeffects;\n\t\t\t\tconst value = get(action, 'payload.value', false);\n\t\t\t\tif (value) {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\tvalue: SELECT_COLUMNS_NAME,\n\t\t\t\t\t\toperation: 'push'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[NOW_TYPEAHEAD_MULTI_SELECTED_SET]: {\n\t\t\teffect: coeffects => {\n\t\t\t\tconst {\n\t\t\t\t\taction: {\n\t\t\t\t\t\tpayload: {value}\n\t\t\t\t\t},\n\t\t\t\t\tstate,\n\t\t\t\t\tstate: {modalTabID},\n\t\t\t\t\tupdateState\n\t\t\t\t} = coeffects;\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: `tabState.${modalTabID}.columns`,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t\tif (isEmpty(value)) {\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\tvalue: SELECT_COLUMNS_NAME,\n\t\t\t\t\t\toperation: 'push'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst invalidFields = get(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\t[]\n\t\t\t\t\t);\n\t\t\t\t\tconst newInvalidFields = without(invalidFields, SELECT_COLUMNS_NAME);\n\t\t\t\t\tupdateState({\n\t\t\t\t\t\tpath: `tabState.${modalTabID}.invalidFields`,\n\t\t\t\t\t\tvalue: newInvalidFields,\n\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[CONDITION_BUILDER_ENCODED_QUERY_SET]: {\n\t\t\teffect: ({\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {value}\n\t\t\t\t},\n\t\t\t\tstate: {modalTabID},\n\t\t\t\tupdateState\n\t\t\t}) => {\n\t\t\t\tupdateState({\n\t\t\t\t\tpath: `tabState.${modalTabID}.currentEncodedQuery`,\n\t\t\t\t\tvalue,\n\t\t\t\t\toperation: 'set'\n\t\t\t\t});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[MODAL_FOOTER_ACTION_CLICKED]: {\n\t\t\teffect: ({\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\taction: {id}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstate,\n\t\t\t\tstate: {modalTabID},\n\t\t\t\tupdateState,\n\t\t\t\tdispatch\n\t\t\t}) => {\n\t\t\t\tif (id === CANCEL_BUTTON_ID) {\n\t\t\t\t\tdispatch(CLOSE_MODAL);\n\t\t\t\t} else if (id === CREATE_BUTTON_ID) {\n\t\t\t\t\tif (isEmpty(get(state, `tabState.${modalTabID}.invalidFields`, []))) {\n\t\t\t\t\t\tconst listName = get(state, `tabState.${modalTabID}.listName`, '');\n\t\t\t\t\t\tconst table = get(state, `tabState.${modalTabID}.table`, '');\n\t\t\t\t\t\tlet columns = get(state, `tabState.${modalTabID}.columns`, []);\n\t\t\t\t\t\tcolumns = columns.map(col => col.id).join();\n\t\t\t\t\t\tconst conditions = get(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`tabState.${modalTabID}.currentEncodedQuery`,\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst options = {\n\t\t\t\t\t\t\ttitle: listName,\n\t\t\t\t\t\t\ttable: table,\n\t\t\t\t\t\t\tcolumns: columns,\n\t\t\t\t\t\t\tconditions: conditions\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst listMenuCrud = {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ttype: CRUD_OPS.CREATE\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdispatch(LIST_MENU_CRUD_OPERATION, {listMenuCrud});\n\t\t\t\t\t\tdispatch(CLOSE_MODAL);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdateState({\n\t\t\t\t\t\t\tpath: `tabState.${modalTabID}.revealInvalidity`,\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t\toperation: 'set'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t}\n\t},\n\tstyles\n});\n","module.exports = __TECTONIC__$devsnc_sn_glide_form_controls;","module.exports = __TECTONIC__$servicenow_now_condition_builder;","module.exports = __TECTONIC__$servicenow_now_input;","module.exports = __TECTONIC__$servicenow_now_modal;","module.exports = __TECTONIC__$servicenow_now_select;","module.exports = __TECTONIC__$servicenow_now_tabs;","module.exports = __TECTONIC__$servicenow_now_typeahead;","import {t} from 'sn-translate';\n\nconst MESSAGE_STATUS = 'critical';\nconst MESSAGE_ICON = 'circle-exclamation-outline';\n\nexport const FIELD_CLASS_NAME = 'sn-modal-field';\n\nexport const NEW_LIST_MODAL_TITLE = t('New List');\nexport const NEW_LIST_MODAL_SUBTITLE = t(\n\t'You can create another version of an existing list or an entirely new one.'\n);\nexport const CREATE_FROM_EXISTING_LABEL = t('Start from existing');\nexport const CREATE_FROM_EXISTING_ID = 'fromExisting';\nexport const CREATE_NEW_LABEL = t('Create your own');\nexport const CREATE_NEW_ID = 'createNew';\n\nexport const SELECT_LIST_LABEL = t('List');\nexport const SELECT_LIST_NAME = 'select-list-field';\nexport const SELECT_LIST_MESSAGE = [\n\t{\n\t\tstatus: MESSAGE_STATUS,\n\t\tcontent: t('Please choose an existing list'),\n\t\ticon: MESSAGE_ICON\n\t}\n];\n\nexport const SELECT_TABLE_LABEL = t('Select Source');\nexport const SELECT_TABLE_PLACEHOLDER = t('-- Select --');\nexport const SELECT_TABLE_NAME = 'select-table-field';\nexport const SELECT_TABLE_MESSAGE = [\n\t{\n\t\ttype: 'error',\n\t\tmessage: t('Please select the source for your new list')\n\t}\n];\n\nexport const LIST_NAME_LABEL = t('List Name');\nexport const LIST_NAME_INPUT_PLACEHOLDER = t('Give your new list a name');\nexport const LIST_NAME_INPUT_MIN = 1;\nexport const LIST_NAME_INPUT_MAX = 40;\nexport const LIST_NAME_NAME = 'list-name-field';\nexport const LIST_NAME_MESSAGE = [\n\t{\n\t\tstatus: MESSAGE_STATUS,\n\t\tcontent: t('Please give your list a name'),\n\t\ticon: MESSAGE_ICON\n\t}\n];\nexport const DUPLICATE_NAME_TEXT = ' Copy';\n\nexport const SELECT_COLUMNS_LABEL = t('Select Columns');\nexport const SELECT_COLUMNS_NAME = 'select-columns-field';\nexport const SELECT_COLUMNS_MESSAGE = [\n\t{\n\t\tstatus: MESSAGE_STATUS,\n\t\tcontent: t('Please select at least one column'),\n\t\ticon: MESSAGE_ICON\n\t}\n];\n\nexport const DEFAULT_CONDITIONS_TABLE = 'incidents';\nexport const DEFAULT_CONDITIONS_QUERY = 'active=true';\n\nexport const CANCEL_LABEL = t('Cancel');\nexport const CANCEL_BUTTON_ID = 'cancel-button';\nexport const CREATE_LIST_LABEL = t('Create');\nexport const CREATE_BUTTON_ID = 'create-button';\n","export const getDotWalkedColumns = selectedList => {\n\tconst dotWalked = [];\n\tif (selectedList && selectedList.columns) {\n\t\tconst columnIDs = selectedList.columns.split(',');\n\t\tcolumnIDs.forEach(col => {\n\t\t\tif (col.includes('.')) {\n\t\t\t\tdotWalked.push({id: col, label: col});\n\t\t\t}\n\t\t});\n\t}\n\treturn dotWalked;\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"includes\"];","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/@tectonic/component-archetype-dev/node_modules/sass-loader/dist/cjs.js??ref--6-3!./newListModal.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;height:0}.now-line-height-crop:before{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-end:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;height:0}.now-line-height-crop--sm:before{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-end:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color_text--primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color_text--secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color_text--tertiary,var(--now-color--neutral-9,99,114,116)))}.sn-modal-iframe{border:0 solid #9e9e9e;width:100%;height:32.5rem}.sn-new-list-modal-content .sn-modal-subheader{position:sticky;top:0;background-color:RGB(var(--now-color--neutral-0,255,255,255));z-index:1}.sn-new-list-modal-content .sn-modal-subheader .sn-modal-subhead{color:RGB(var(--now-color_grouped--gray-4,97,102,105));font-size:.75rem;margin:0;margin-bottom:.75rem;font-family:Source Sans Pro,sans-serif;font-weight:350}.sn-new-list-modal-content .sn-new-list-modal-body{padding-top:1rem;height:100%;min-height:6.25rem;width:inherit;display:block}.sn-new-list-modal-content .sn-new-list-modal-body .field-label{font-size:.75rem;text-align:left;font-family:Source Sans Pro,sans-serif;color:RGB(var(--now-color_grouped--gray-4,97,102,105));font-weight:350}.sn-new-list-modal-content .sn-new-list-modal-body .sn-modal-field{margin-bottom:1.5rem;width:100%}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __TECTONIC__lodash_4_17_4[\"without\"];","module.exports = __TECTONIC__$servicenow_now_loader;","import {CLOSE_MODAL, OPEN_MODAL} from '../../../constants';\nimport isEmpty from 'lodash/isEmpty';\n\nconst modalBehavior = {\n\tname: 'modalBehavior',\n\tproperties: {},\n\tinitialState: {\n\t\tmodalProps: {\n\t\t\ttype: ''\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[OPEN_MODAL]: {\n\t\t\teffect: ({action, updateState}) => {\n\t\t\t\tupdateState({\n\t\t\t\t\tmodalProps: {\n\t\t\t\t\t\t...action.payload.modalProps\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t},\n\t\t[CLOSE_MODAL]: {\n\t\t\teffect: ({updateState, dispatch, action}) => {\n\t\t\t\tconst {\n\t\t\t\t\tpayload: {actionToDispatch}\n\t\t\t\t} = action;\n\t\t\t\tupdateState({\n\t\t\t\t\tmodalProps: {\n\t\t\t\t\t\ttype: ''\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!isEmpty(actionToDispatch)) dispatch(actionToDispatch);\n\t\t\t},\n\t\t\tstopPropagation: true\n\t\t}\n\t}\n};\n\nexport default modalBehavior;\n","import {MY_LIST} from '../../constants';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const buildModalData = (lists, list) => {\n\tif (isEmpty(list)) return [];\n\tconst arr = [];\n\tfor (let [key, value] of Object.entries(lists)) {\n\t\tkey.indexOf(MY_LIST) !== -1 && !isEmpty(value.data)\n\t\t\t? arr.unshift(value)\n\t\t\t: arr.push(...value.data);\n\t}\n\treturn arr.reduce((acc, cat) => {\n\t\tconst o = {\n\t\t\tchildren: cat['children'] || cat['data'],\n\t\t\tlabel: cat['label'] || cat['title'],\n\t\t\tid: cat['id'] || cat['key']\n\t\t};\n\t\treturn [...acc, o];\n\t}, []);\n};\n","import {\n\tAW_LIST,\n\tAW_MY_LIST,\n\tCRUD_OPS,\n\tCRUD_OPS_ACTIONS,\n\tLIST_ERROR_STATE,\n\tLIST_MENU_CRUD_OPERATION,\n\tLIST_MENU_CRUD_OPERATION_CREATE,\n\tLIST_MENU_CRUD_OPERATION_DESTROY,\n\tLIST_MENU_CRUD_OPERATION_ERROR,\n\tLIST_MENU_CRUD_OPERATION_SUCCESS,\n\tLIST_MENU_CRUD_OPERATION_UPDATE,\n\tLIST_MENU_DATA_PROVIDER_BOOTSTRAP,\n\tLIST_MENU_FETCH_AW_LIST,\n\tLIST_MENU_FETCH_LIST_COMPLETE,\n\tLIST_MENU_FETCH_LIST_DISPATCH,\n\tLIST_MENU_FETCH_LIST_ERROR,\n\tLIST_MENU_FETCH_UX_LIST,\n\tLIST_MENU_HANDLE_ACTIVE_TAB,\n\tLIST_MENU_ITEM_DELETE,\n\tLIST_MENU_ITEM_DELETE_COMPLETE,\n\tLIST_MENU_ITEM_DELETE_ERROR,\n\tLIST_MENU_ITEM_TOGGLE_EDIT_STATE,\n\tLIST_MENU_LIST_ID_CHANGED,\n\tLIST_MENU_PRESOURCE_BUCKET,\n\tLIST_MENU_PRESOURCE_KEY,\n\tLIST_MENU_UPDATE_ITEM_ORDER,\n\tLIST_MENU_UPDATE_ORDER,\n\tLIST_MODULE_NOTIFICATION,\n\tPRESOURCE_PATH,\n\tRECORD_LIST_MENU_ERROR,\n\tRECORD_LIST_MENU_SELECTED_ITEM_UPDATED,\n\tSET_LOADING,\n\tUPDATE_SELECTED_MENU_ITEM,\n\tUX_LIST,\n\tUX_MY_LIST\n} from '../../../constants';\nimport {PROPERTIES_SET} from '@servicenow/ui-core/lib/constants';\nimport {UPDATE_LIST_MENU_QUERY} from '../../../constants';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {fetchQueryAction} from '../../listMenu/listMenuUtils';\nimport {\n\tgetListMenuModel,\n\tgetOrderedListMenuModel\n} from '../../listMenu/listMenuModel';\nimport {listAwReadQuery, listUxReadQuery} from '../../../schemas/lists';\nimport {\n\tmyListDestroyQuery,\n\tmyListInsertQuery,\n\tmyListUpdateQuery\n} from '../../../schemas/myLists';\nimport {t} from 'sn-translate';\nimport cuid from 'cuid';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\n\n/*\nGRAPHQL EFFECTS\n*/\nconst fetchAwListMenuGQLEffect = createGraphQLEffect(listAwReadQuery, {\n\tvariableList: ['workspaceId'],\n\tsuccessActionType: LIST_MENU_FETCH_LIST_COMPLETE,\n\terrorActionType: LIST_MENU_FETCH_LIST_ERROR\n});\n\nconst fetchUxListMenuGQLEffect = createGraphQLEffect(listUxReadQuery, {\n\tvariableList: ['configurationId'],\n\tsuccessActionType: LIST_MENU_FETCH_LIST_COMPLETE,\n\terrorActionType: LIST_MENU_FETCH_LIST_ERROR\n});\n\nconst listMenuDeleteItemEffect = createGraphQLEffect(myListDestroyQuery, {\n\tvariableList: ['sys_id'],\n\tsuccessActionType: LIST_MENU_ITEM_DELETE_COMPLETE,\n\terrorActionType: LIST_MENU_ITEM_DELETE_ERROR\n});\n\nconst updateListMenuMyListEffect = createGraphQLEffect(myListUpdateQuery, {\n\tvariableList: ['order', 'sys_id'],\n\ttemplateVarList: ['targetTable']\n});\n\nconst listMenuCrudOperationCreateEffect = createGraphQLEffect(\n\tmyListInsertQuery,\n\t{\n\t\tvariableList: ['title', 'table', 'columns', 'conditions'],\n\t\ttemplateVarList: ['targetTable'],\n\t\tsuccessActionType: LIST_MENU_CRUD_OPERATION_SUCCESS,\n\t\terrorActionType: LIST_MENU_CRUD_OPERATION_ERROR\n\t}\n);\n\nconst listMenuCrudOperationUpdateEffect = createGraphQLEffect(\n\tmyListUpdateQuery,\n\t{\n\t\tvariableList: ['sys_id', 'title', 'columns', 'conditions', 'order'],\n\t\ttemplateVarList: ['targetTable'],\n\t\tsuccessActionType: LIST_MENU_CRUD_OPERATION_SUCCESS,\n\t\terrorActionType: LIST_MENU_CRUD_OPERATION_ERROR\n\t}\n);\n\nconst listMenuCrudOperationDestroyEffect = createGraphQLEffect(\n\tmyListDestroyQuery,\n\t{\n\t\tvariableList: ['sys_id'],\n\t\ttemplateVarList: ['targetTable'],\n\t\tsuccessActionType: LIST_MENU_CRUD_OPERATION_SUCCESS,\n\t\terrorActionType: LIST_MENU_CRUD_OPERATION_ERROR\n\t}\n);\n\nconst dispatchFetchList = (\n\tdispatch,\n\t{workspaceConfigId, configurationId},\n\tmeta = {}\n) => {\n\tif (isEmpty(configurationId))\n\t\tdispatch(LIST_MENU_FETCH_AW_LIST, {workspaceId: workspaceConfigId}, meta);\n\telse dispatch(LIST_MENU_FETCH_UX_LIST, {configurationId}, meta);\n};\n\nconst listMenuFetchListDispatchEffect = coeffects => {\n\tconst {dispatch, properties} = coeffects;\n\tconst {workspaceConfigId, configurationId, listMenuModel} = properties;\n\tconst meta = {\n\t\tcrudOp: CRUD_OPS.CREATE,\n\t\tpreviousListMenuItems: get(listMenuModel, 'myList.data.length', 0)\n\t};\n\tdispatchFetchList(dispatch, {workspaceConfigId, configurationId}, meta);\n};\n\nconst listMenuBootstrapEffect = coeffects => {\n\tconst {dispatch, properties, updateState} = coeffects;\n\tconst {workspaceConfigId, configurationId} = properties;\n\tconst isWorkspace = isEmpty(configurationId);\n\n\tupdateState({isWorkspace: isWorkspace});\n\n\tif (isWorkspace) {\n\t\tconst listMenuWorkspaceAwareQueryPresourceData = get(\n\t\t\twindow,\n\t\t\t`${PRESOURCE_PATH}[\"${LIST_MENU_PRESOURCE_BUCKET}:${LIST_MENU_PRESOURCE_KEY}\"].data`\n\t\t);\n\n\t\tif (listMenuWorkspaceAwareQueryPresourceData) {\n\t\t\tdispatch(LIST_MENU_FETCH_LIST_COMPLETE, {\n\t\t\t\tdata: listMenuWorkspaceAwareQueryPresourceData\n\t\t\t});\n\t\t} else {\n\t\t\tdispatchFetchList(dispatch, {workspaceConfigId, configurationId});\n\t\t}\n\t} else {\n\t\tdispatchFetchList(dispatch, {workspaceConfigId, configurationId});\n\t}\n};\n\n/*\nLIST_MENU_FETCH_LIST_COMPLETE\n*/\n\nconst dispatchUpdatedSelectedItem = (list, state, dispatch) => {\n\tconst {\n\t\tproperties: {selectedMenuItem},\n\t\tisWorkspace\n\t} = state;\n\n\tif (isEqual(selectedMenuItem, list)) return {};\n\n\tconst queryAction = fetchQueryAction(list);\n\n\tif (isWorkspace) dispatch(UPDATE_LIST_MENU_QUERY, queryAction);\n\telse {\n\t\tconst {\n\t\t\tselectedListId,\n\t\t\ttargetTable,\n\t\t\ttable,\n\t\t\ttitle,\n\t\t\tconditions,\n\t\t\tcolumns\n\t\t} = queryAction;\n\n\t\tdispatch(RECORD_LIST_MENU_SELECTED_ITEM_UPDATED, {\n\t\t\tselectedListId,\n\t\t\ttargetTable,\n\t\t\ttable,\n\t\t\ttitle,\n\t\t\tconditions,\n\t\t\tcolumns\n\t\t});\n\t}\n\n\treturn {\n\t\tselectedMenuItem: list,\n\t\tforceRefresh: `${Date.now()}`,\n\t\t...queryAction\n\t};\n};\n\nconst selectList = (list, state, dispatch) => {\n\tif (!list) return {};\n\n\tconst updatedSelectedItem = dispatchUpdatedSelectedItem(\n\t\tlist,\n\t\tstate,\n\t\tdispatch\n\t);\n\n\tconst activeTabId = list.targetTable;\n\n\treturn {\n\t\tlistIdSelected: true,\n\t\tactiveTabId,\n\t\tnewListItem: list,\n\t\t...updatedSelectedItem\n\t};\n};\n\nconst getListById = (availableLists, id) =>\n\tfind(availableLists, item => {\n\t\treturn item.id === id;\n\t});\n\nconst getInitialListItem = ({data}) => {\n\treturn data.length > 0\n\t\t? data.find(listItem => listItem.children.length > 0).children[0]\n\t\t: {};\n};\n\nconst getInitialList = listMenuModel => {\n\treturn listMenuModel.myList.data.length > 0\n\t\t? listMenuModel.myList.data[0]\n\t\t: getInitialListItem(listMenuModel.list);\n};\n\nconst handleListId = (listMenuModel, listId, state, dispatch) => {\n\tconst {flattened} = listMenuModel;\n\tconst {\n\t\tproperties: {tiny},\n\t\thasFetched,\n\t\tisWorkspace\n\t} = state;\n\n\tif (!flattened.length || (tiny && !hasFetched))\n\t\treturn {\n\t\t\tactiveTabId: isWorkspace ? AW_LIST : UX_LIST\n\t\t};\n\n\tconst list = isEmpty(listId)\n\t\t? getInitialList(listMenuModel)\n\t\t: getListById(flattened, listId);\n\n\tif (!list) return {};\n\n\treturn selectList(list, state, dispatch);\n};\n\nconst dispatchNewListNotification = (dispatch, list) => {\n\tdispatch(LIST_MODULE_NOTIFICATION, {\n\t\talertList: [\n\t\t\t{\n\t\t\t\tid: `now_alert_positive_${cuid()}`,\n\t\t\t\tstatus: 'positive',\n\t\t\t\tcontent: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tvalue: t('{0} was created', get(list, 'displayValue'))\n\t\t\t\t},\n\t\t\t\taction: {type: 'dismiss'}\n\t\t\t}\n\t\t]\n\t});\n};\n\nconst listMenuFetchListCompleteEffect = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\tstate,\n\t\tproperties,\n\t\taction,\n\t\tupdateState,\n\t\tupdateProperties\n\t} = coeffects;\n\n\tconst listMenuModel = getListMenuModel(action.payload, state.isWorkspace);\n\tconst myListLength = listMenuModel.myList.data.length;\n\tconst previousMyListLength = get(action, 'meta.previousListMenuItems', 0);\n\tconst hasNewList = myListLength > previousMyListLength;\n\tlet listId;\n\n\tif (has(action, 'meta.crudOp')) {\n\t\tswitch (action.meta.crudOp) {\n\t\t\tcase CRUD_OPS.CREATE:\n\t\t\t\tif (hasNewList) {\n\t\t\t\t\tconst newList =\n\t\t\t\t\t\tlistMenuModel.myList.data[listMenuModel.myList.data.length - 1];\n\t\t\t\t\tlistId = newList.id;\n\t\t\t\t\tdispatchNewListNotification(dispatch, newList);\n\t\t\t\t} else {\n\t\t\t\t\tlistId = properties.listId;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CRUD_OPS.UPDATE:\n\t\t\t\tlistId = properties.listId || properties.selectedListId;\n\t\t\t\tbreak;\n\t\t\tcase CRUD_OPS.DESTROY:\n\t\t\t\tlistId = undefined;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t} else {\n\t\tlistId = properties.listId;\n\t}\n\n\tconst additionalProps = handleListId(listMenuModel, listId, state, dispatch);\n\n\t// listId not found\n\tif (isEmpty(additionalProps) && (!properties.tiny || state.hasFetched)) {\n\t\tconst listIdErrorMessage = {\n\t\t\terror: {\n\t\t\t\tmessage: t('List not found'),\n\t\t\t\textraInfo: t('Invalid list ID')\n\t\t\t}\n\t\t};\n\n\t\tif (state.isWorkspace) {\n\t\t\tdispatch(LIST_ERROR_STATE, listIdErrorMessage);\n\t\t} else {\n\t\t\tupdateProperties(listIdErrorMessage);\n\t\t\tdispatch(RECORD_LIST_MENU_ERROR, listIdErrorMessage);\n\t\t}\n\t}\n\n\tupdateState({hasFetched: true});\n\n\tdispatch(PROPERTIES_SET, {\n\t\t...additionalProps,\n\t\tlistMenuModel,\n\t\tlist: listMenuModel.list,\n\t\tmyList: listMenuModel.myList\n\t});\n\tdispatch(SET_LOADING, {loading: false});\n};\n\n/*\nLIST_MENU_ITEM_DELETE\n*/\n\nconst listMenuDeleteCompleteEffect = ({state, dispatch}) => {\n\tconst {workspaceConfigId, configurationId} = state.properties;\n\tdispatchFetchList(dispatch, {workspaceConfigId, configurationId});\n};\n\nconst listMenuDeleteErrorEffect = () => {};\n\n/*\n\tUPDATE ORDER ACTIONS\n*/\n\nconst updatedSelectedItem = (dispatch, myLists, state) => {\n\tconst selectedMenuItem = get(state, 'properties.selectedMenuItem', {});\n\tconst updatedMyList = find(\n\t\tmyLists.data,\n\t\ttarget => target.id === selectedMenuItem.id\n\t);\n\tif (updatedMyList && !isEqual(updatedMyList, selectedMenuItem)) {\n\t\treturn dispatchUpdatedSelectedItem(updatedMyList, state, dispatch);\n\t}\n\n\treturn {};\n};\n\nconst updateOrder = (dispatch, myLists) => {\n\tmyLists.data.map(({id: sys_id, order, targetTable}) => {\n\t\tdispatch(LIST_MENU_UPDATE_ORDER, {order, sys_id, targetTable});\n\t});\n};\n\nconst listMenuToggleEditStateEffect = ({state, dispatch, action}) => {\n\tconst {isEditing} = action.payload;\n\tconst {listMenuModel} = state.properties;\n\tconst {myList} = listMenuModel;\n\n\tlet updatedSelected = {};\n\tif (!isEditing) {\n\t\tupdateOrder(dispatch, myList);\n\t\tupdatedSelected = updatedSelectedItem(dispatch, myList, state);\n\t}\n\n\tdispatch(PROPERTIES_SET, {\n\t\tisEditing,\n\t\tafterInitialLoad: true,\n\t\t...updatedSelected\n\t});\n};\n\nconst updateItemOrderEffect = ({state, action, updateProperties}) => {\n\tconst listMenuModel = getOrderedListMenuModel(\n\t\tstate.properties.listMenuModel,\n\t\taction.payload.listModel\n\t);\n\n\tupdateProperties({\n\t\tlistMenuModel,\n\t\tlist: listMenuModel.list,\n\t\tmyList: listMenuModel.myList,\n\t\tisEditing: get(action, 'payload.isEditing', false),\n\t\tafterInitialLoad: true\n\t});\n};\n\n/*\n\tITEM AND TAB SELECTION\n*/\n\nconst handleActiveTabIdEffect = ({state, dispatch, action}) => {\n\tconst {activeTabId} = state.properties;\n\tconst {tabId} = action.payload;\n\n\tif (tabId !== activeTabId) dispatch(PROPERTIES_SET, {activeTabId: tabId});\n};\n\nconst listMenuListIdChangedEffect = ({state, dispatch, action}) => {\n\tconst {listMenuModel} = state.properties;\n\tconst {listId} = action.payload;\n\n\tconst additionalProps = handleListId(listMenuModel, listId, state, dispatch);\n\n\tif (!isEmpty(additionalProps))\n\t\tdispatch('PROPERTIES_SET', {...additionalProps});\n};\n\nconst updateSelectedMenuItemEffect = ({action, updateProperties}) => {\n\tupdateProperties({\n\t\tselectedMenuItem: action.payload.selectedMenuItem,\n\t\tlistId: action.payload.selectedMenuItem.id,\n\t\tforceRefresh: get(action, 'payload.forceRefresh', Date.now())\n\t});\n};\n\n/*\n\tCRUD OPERATIONS\n*/\nconst listMenuCrudEffect = ({state, dispatch, action}) => {\n\tconst {\n\t\tproperties: {selectedMenuItem},\n\t\tisWorkspace\n\t} = state;\n\tconst {listMenuCrud} = action.payload;\n\tconst {type, options} = listMenuCrud;\n\tconst sys_id = get(selectedMenuItem, 'id');\n\tconst variables = Object.assign(\n\t\t{},\n\t\t{sys_id, targetTable: isWorkspace ? AW_MY_LIST : UX_MY_LIST},\n\t\toptions\n\t);\n\tif (has(CRUD_OPS, type)) {\n\t\tdispatch(CRUD_OPS_ACTIONS[type], {...variables}, {crudOp: type});\n\t}\n};\n\nconst listMenuOperationSuccessEffect = ({state, dispatch, action}) => {\n\tconst {workspaceConfigId, configurationId} = state.properties;\n\tconst meta = has(action, 'meta.crudOp') ? {crudOp: action.meta.crudOp} : {};\n\tdispatchFetchList(dispatch, {workspaceConfigId, configurationId}, meta);\n};\n\nconst listMenuOperationErrorEffect = () => {};\n\nexport default {\n\t[LIST_MENU_DATA_PROVIDER_BOOTSTRAP]: {\n\t\teffect: listMenuBootstrapEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_FETCH_LIST_DISPATCH]: {\n\t\teffect: listMenuFetchListDispatchEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_FETCH_AW_LIST]: {\n\t\t...fetchAwListMenuGQLEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_FETCH_UX_LIST]: {\n\t\t...fetchUxListMenuGQLEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_FETCH_LIST_COMPLETE]: {\n\t\teffect: listMenuFetchListCompleteEffect,\n\t\tstopPropagation: true\n\t},\n\n\t/*\n\tDELETE ACTIONS\n\t*/\n\t[LIST_MENU_ITEM_DELETE]: {\n\t\teffect: listMenuDeleteItemEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_ITEM_DELETE_COMPLETE]: {\n\t\teffect: listMenuDeleteCompleteEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_ITEM_DELETE_ERROR]: {\n\t\teffect: listMenuDeleteErrorEffect,\n\t\tstopPropagation: true\n\t},\n\n\t/*\n\tUPDATE ORDER ACTIONS\n\t*/\n\t[LIST_MENU_ITEM_TOGGLE_EDIT_STATE]: {\n\t\teffect: listMenuToggleEditStateEffect,\n\t\tstopPropagation: true\n\t},\n\n\t[LIST_MENU_UPDATE_ORDER]: {\n\t\t...updateListMenuMyListEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_UPDATE_ITEM_ORDER]: {\n\t\teffect: updateItemOrderEffect,\n\t\tstopPropagation: true\n\t},\n\n\t/*\n\tITEM AND TAB SELECTION\n\t*/\n\t[LIST_MENU_HANDLE_ACTIVE_TAB]: {\n\t\teffect: handleActiveTabIdEffect,\n\t\tstopPropagation: true\n\t},\n\n\t[LIST_MENU_LIST_ID_CHANGED]: {\n\t\teffect: listMenuListIdChangedEffect,\n\t\tstopPropagation: true\n\t},\n\n\t[UPDATE_SELECTED_MENU_ITEM]: {\n\t\teffect: updateSelectedMenuItemEffect,\n\t\tstopPropagation: true\n\t},\n\n\t/*\n\tCRUD OPERATIONS\n\t*/\n\t[LIST_MENU_CRUD_OPERATION]: {\n\t\teffect: listMenuCrudEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_CRUD_OPERATION_CREATE]: {\n\t\t...listMenuCrudOperationCreateEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_CRUD_OPERATION_UPDATE]: {\n\t\t...listMenuCrudOperationUpdateEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_CRUD_OPERATION_DESTROY]: {\n\t\t...listMenuCrudOperationDestroyEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_CRUD_OPERATION_SUCCESS]: {\n\t\teffect: listMenuOperationSuccessEffect,\n\t\tstopPropagation: true\n\t},\n\t[LIST_MENU_CRUD_OPERATION_ERROR]: {\n\t\teffect: listMenuOperationErrorEffect,\n\t\tstopPropagation: true\n\t}\n};\n","import {t} from 'sn-translate';\nimport flatten from 'lodash/flatten';\nimport get from 'lodash/get';\n\nimport {LIST, MY_LIST, SYS_AW} from '../../constants';\n\nexport function getListModel(data = {}, targetTable = SYS_AW) {\n\treturn {\n\t\ttitle: t('Lists'),\n\t\tkey: targetTable + LIST,\n\t\tcanEdit: false,\n\t\tcanExpand: true,\n\t\tdata,\n\t\tnewListForm: {}\n\t};\n}\n\nexport function getMyListModel(data = {}, targetTable = SYS_AW) {\n\treturn {\n\t\ttitle: t('My Lists'),\n\t\tkey: targetTable + MY_LIST,\n\t\tcanEdit: true,\n\t\tcanExpand: false,\n\t\tdata,\n\t\tnewListForm: {\n\t\t\tform: targetTable + '_my_list.do',\n\t\t\tview: targetTable === SYS_AW ? 'aw_modal' : 'ux_modal'\n\t\t}\n\t};\n}\n\nconst reduceItemOrder = myListModel => {\n\treturn myListModel.data.reduce(\n\t\t(acc, {id}, index) => ({\n\t\t\t...acc,\n\t\t\t[id]: (index + 1) * 10\n\t\t}),\n\t\t{}\n\t);\n};\n\nexport function getOrderedMyListModel(myListData, orderData) {\n\treturn {\n\t\t...myListData,\n\t\tdata: myListData.data\n\t\t\t.map(item => ({\n\t\t\t\t...item,\n\t\t\t\torder: orderData[item.id] || item.order\n\t\t\t}))\n\t\t\t.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t})\n\t};\n}\n\nexport function getOrderedListMenuModel(listMenuModel, myList) {\n\tconst reducedItemOrder = reduceItemOrder(myList);\n\tconst orderedMyListModel = getOrderedMyListModel(myList, reducedItemOrder);\n\n\tconst flattened = getListStacks(listMenuModel.list, orderedMyListModel);\n\n\treturn {list: listMenuModel.list, myList: orderedMyListModel, flattened};\n}\n\nexport const getListStacks = (lists, myLists) => {\n\tconst reducedLists = lists.data.reduce((accum, currentValue) => {\n\t\treturn [...accum, ...currentValue.children];\n\t}, []);\n\n\treturn flatten([...myLists.data, ...reducedLists]);\n};\n\nexport function getListMenuModel(payload, isWorkspace) {\n\tconst listMenu = get(\n\t\tpayload,\n\t\t`data.${\n\t\t\tisWorkspace ? 'GlideListMenu_Query' : 'GlideUxListMenuLayout_Query'\n\t\t}.getListMenuLayout.listMenu`\n\t);\n\tconst categories = get(listMenu, 'categoryItems').filter(\n\t\tcategory => category.children.length > 0\n\t);\n\tconst tablePrefix = get(listMenu, 'targetTablePrefix', SYS_AW);\n\tconst list = getListModel(categories, tablePrefix);\n\tconst myList = getMyListModel(get(listMenu, 'menuItems'), tablePrefix);\n\n\tconst flattened = getListStacks(list, myList);\n\n\treturn {flattened, list, myList};\n}\n","module.exports = __TECTONIC__lodash_4_17_4[\"flatten\"];","export const listAwReadQuery = `\nquery ($workspaceId: String!) {\n\tGlideListMenu_Query {\n\t  \tgetListMenuLayout(workspaceId: $workspaceId) {\n\t\t\tlistMenu {\n\t\t\t\tcategoryItems {\n\t\t\t\t  \tisExpanded\n\t\t\t\t  \tdisplayValue\n\t\t\t\t  \tid\n\t\t\t\t  \tlabel\n\t\t\t\t  \tselectionPath\n\t\t\t\t  \ttype\n\t\t\t\t  \tchildren {\n\t\t\t\t\t\t...listMenuItem\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t\tmenuItems {\n\t\t\t\t  \t...listMenuItem\n\t\t\t\t}\n\t\t\t\ttargetTablePrefix\n\t\t\t}\n\t  }\n\t}\n}\n  \nfragment listMenuItem on GlideListMenu_ListMenuItemType {\n\tcolumns\n\tconditions\n\tdisplayValue\n\tid\n\tlabel\n\torder\n\ttable\n\ttargetTable\n\tselectionPath\n}\n`;\n\nexport const listUxReadQuery = `\nquery ($configurationId: String!) {\n\tGlideUxListMenuLayout_Query {\n\t  \tgetListMenuLayout(configurationId: $configurationId) {\n\t\t\tlistMenu {\n\t\t\t\tcategoryItems {\n\t\t\t\t  \tisExpanded\n\t\t\t\t  \tdisplayValue\n\t\t\t\t  \tid\n\t\t\t\t  \tlabel\n\t\t\t\t  \tselectionPath\n\t\t\t\t  \ttype\n\t\t\t\t  \tchildren {\n\t\t\t\t\t\t...listMenuItem\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t\tmenuItems {\n\t\t\t\t  \t...listMenuItem\n\t\t\t\t}\n\t\t\t\ttargetTablePrefix\n\t\t\t}\n\t  }\n\t}\n}\n  \nfragment listMenuItem on GlideUxListMenuLayout_ListMenuItemType {\n\tcolumns\n\tconditions\n\tdisplayValue\n\tid\n\tlabel\n\torder\n\ttable\n\ttargetTable\n\tselectionPath\n}\n`;\n","export const myListDestroyQuery = `\nmutation ($sys_id: String!){\n  GlideRecord_Mutation {\n    delete_{{targetTable}}(sys_id: $sys_id) {\n      modified_count\n    }\n  }\n}\n`;\n\nexport const myListUpdateQuery = `\nmutation ($sys_id: String!, $title: String, $columns: String, $conditions: String, $order: String){\n  GlideRecord_Mutation {\n    update_{{targetTable}}(sys_id: $sys_id, title: $title, columns: $columns, condition: $conditions, order: $order) {\n      sys_id {\n        value\n      }\n      title {\n        value\n        displayValue\n      }\n      columns {\n        value\n      }\n      condition {\n        value\n      }\n      order {\n        value\n      }\n    }\n  }\n}\n`;\n\nexport const myListInsertQuery = `\nmutation ($title: String!, $table: String!, $columns: String!, $conditions: String!){\n  GlideRecord_Mutation {\n    insert_{{targetTable}}(title: $title, table: $table, columns: $columns, condition: $conditions) {\n      title {\n        value\n      }\n      table {\n        value\n      }\n      columns {\n        value\n      }\n      condition {\n        value\n      }\n    }\n  }\n}\n`;\n","module.exports = __TECTONIC__cuid_2_1_6;","module.exports = __TECTONIC__lodash_4_17_4[\"find\"];","module.exports = __TECTONIC__lodash_4_17_4[\"has\"];","module.exports = __TECTONIC__lodash_4_17_4[\"isEqual\"];","import actionHandlers from './actions';\n\nconst newListModalBehavior = {\n\tname: 'newListModalBehavior',\n\tinitialState: {},\n\tproperties: {\n\t\tselectColumns: {default: []},\n\t\tnewTabDefaultColumns: {default: []}\n\t},\n\tactionHandlers\n};\n\nexport default newListModalBehavior;\n","import {\n\tNEW_LIST_MODAL_COLUMN_SELECT_ERROR,\n\tNEW_LIST_MODAL_COLUMN_SELECT_SUCCESSFUL,\n\tPROPAGATE_SELECTED_COLUMNS\n} from '../../../constants';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {newListModalSelectedColumnsQuery} from '../../../schemas/newListModal';\n\nconst newListModalSelectedColumnsEffect = createGraphQLEffect(\n\tnewListModalSelectedColumnsQuery,\n\t{\n\t\tvariableList: ['tableName'],\n\t\tsuccessActionType: NEW_LIST_MODAL_COLUMN_SELECT_SUCCESSFUL,\n\t\terrorActionType: NEW_LIST_MODAL_COLUMN_SELECT_ERROR\n\t}\n);\n\nconst listMenuOperationErrorEffect = () => {};\n\nexport default {\n\t[PROPAGATE_SELECTED_COLUMNS]: {\n\t\t...newListModalSelectedColumnsEffect,\n\t\tstopPropagation: true\n\t},\n\t[NEW_LIST_MODAL_COLUMN_SELECT_SUCCESSFUL]: {\n\t\teffect: coeffects => {\n\t\t\tconst {\n\t\t\t\taction: {\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tGlideListMenu_Query: {\n\t\t\t\t\t\t\t\tgetAllColumnsForNewList: {listColumns, defaultColumns}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tupdateProperties\n\t\t\t} = coeffects;\n\t\t\tupdateProperties({\n\t\t\t\tselectColumns: listColumns,\n\t\t\t\tnewTabDefaultColumns: defaultColumns\n\t\t\t});\n\t\t}\n\t},\n\t[NEW_LIST_MODAL_COLUMN_SELECT_ERROR]: {\n\t\teffect: listMenuOperationErrorEffect,\n\t\tstopPropagation: true\n\t}\n};\n","export const newListModalSelectedColumnsQuery = `query($tableName: String!) {\n\tGlideListMenu_Query {\n\t\tgetAllColumnsForNewList(tableName: $tableName) {\n\t\tlistColumns {\n\t\tcolumnName\n\t\tdisplayName\n\t\t}\n\t\tdefaultColumns {\n\t\tcolumnName\n\t\tdisplayName\n\t\t}\n\t}\n  }\n}`;\n","import {\n\tCREATE_LIST,\n\tLIST_MENU_ITEM_TOGGLE_EDIT_STATE,\n\tMODAL_TYPES,\n\tNOW_TABS_SELECTED_SET,\n\tOPEN_MODAL,\n\tRECORD_LIST_MENU_ITEM_CLICKED,\n\tSET_LOADING,\n\tUPDATE_LIST_MENU_QUERY,\n\tUPDATE_SELECTED_MENU_ITEM,\n\tUSER_PREF_EXPANDED_ITEMS_NAME\n} from '../../constants';\nimport {\n\tFETCH_LISTS,\n\tMENU_ITEM_CLICKED,\n\tMENU_ITEM_EXPANDED,\n\tREORDER_LIST,\n\tUPDATE_LIST_ORDER\n} from '@servicenow/now-list-menu';\nimport {PROPERTIES_SET} from '@servicenow/ui-core/lib/constants';\nimport {USER_PREF_UPDATE} from 'sn-user-preferences';\nimport {fetchQueryAction} from '../listMenu/listMenuUtils';\n\nconst setSelectedMenuItem = ({dispatch, item, isWorkspace}) => {\n\tconst query = fetchQueryAction(item);\n\tconst {\n\t\tselectedListId,\n\t\ttargetTable,\n\t\ttable,\n\t\ttitle,\n\t\tconditions,\n\t\tcolumns\n\t} = query;\n\n\tdispatch(PROPERTIES_SET, {\n\t\tselectedMenuItem: item,\n\t\tforceRefresh: `${Date.now()}`,\n\t\t...query\n\t});\n\n\tif (isWorkspace) {\n\t\tdispatch(UPDATE_LIST_MENU_QUERY, query);\n\t} else {\n\t\tdispatch(RECORD_LIST_MENU_ITEM_CLICKED, {\n\t\t\tselectedListId,\n\t\t\ttargetTable,\n\t\t\ttable,\n\t\t\ttitle,\n\t\t\tconditions,\n\t\t\tcolumns\n\t\t});\n\t}\n};\n\nexport default {\n\t[SET_LOADING]: {\n\t\teffect: ({dispatch, action}) => {\n\t\t\tdispatch(PROPERTIES_SET, {loading: action.payload.loading});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[FETCH_LISTS]: {\n\t\teffect: ({dispatch}) => {\n\t\t\tdispatch(PROPERTIES_SET, {fetchListTrigger: {timestamp: Date.now()}});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[UPDATE_SELECTED_MENU_ITEM]: {\n\t\teffect: ({dispatch, action}) => {\n\t\t\tdispatch(PROPERTIES_SET, {\n\t\t\t\tselectedItemUpdate: {\n\t\t\t\t\tselectedMenuItem: action.payload.selectedMenuItem,\n\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t...action.payload\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[MENU_ITEM_CLICKED]: {\n\t\teffect: ({state, dispatch, action}) => {\n\t\t\tconst item = action.payload.item;\n\t\t\tconst {isWorkspace} = state;\n\n\t\t\tif (!item.children) setSelectedMenuItem({dispatch, isWorkspace, item});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[NOW_TABS_SELECTED_SET]: {\n\t\teffect: ({dispatch, action}) => {\n\t\t\tdispatch(PROPERTIES_SET, {\n\t\t\t\tmenuTabUpdate: {tabId: action.payload.value, timestamp: Date.now()}\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[MENU_ITEM_EXPANDED]: {\n\t\teffect: ({action, dispatch}) => {\n\t\t\tdispatch(USER_PREF_UPDATE, {\n\t\t\t\tname: USER_PREF_EXPANDED_ITEMS_NAME,\n\t\t\t\tvalue: action.payload.items\n\t\t\t});\n\t\t}\n\t},\n\t[REORDER_LIST]: {\n\t\teffect: ({dispatch, action}) => {\n\t\t\tconst {isEditing} = action.payload;\n\t\t\tdispatch(LIST_MENU_ITEM_TOGGLE_EDIT_STATE, {isEditing});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[UPDATE_LIST_ORDER]: {\n\t\teffect: ({dispatch, action}) => {\n\t\t\tconst {listModel, isEditing} = action.payload;\n\t\t\tdispatch(PROPERTIES_SET, {\n\t\t\t\torderUpdate: {listModel, isEditing, timestamp: Date.now()}\n\t\t\t});\n\t\t},\n\t\tstopPropagation: true\n\t},\n\t[CREATE_LIST]: {\n\t\teffect: ({\n\t\t\tdispatch,\n\t\t\taction: {\n\t\t\t\tpayload: {useiFrame}\n\t\t\t},\n\t\t\tproperties: {\n\t\t\t\tlist: {newListForm}\n\t\t\t}\n\t\t}) => {\n\t\t\tif (!useiFrame) {\n\t\t\t\tdispatch(OPEN_MODAL, {\n\t\t\t\t\tmodalProps: {\n\t\t\t\t\t\ttype: MODAL_TYPES.NEW_LIST,\n\t\t\t\t\t\tnewListForm,\n\t\t\t\t\t\tuseiFrame\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstopPropagation: true\n\t}\n};\n"],"sourceRoot":""}