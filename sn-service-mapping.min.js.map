{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_service_mapping/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$devsnc_library_opws_mapping_shared\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-shared/constants.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__lodash_4_17_4\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-shared/indicatorTypes.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-shared/itemTypes.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/eventBus.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_ui_effect_http\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/timelineFunctors.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/timelineConstants.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/sendEventToMapEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectReceiveHistoryData.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-settings-menu-behavior/mapSettingsMenuBehavior.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectGetMapChangeItems.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-shared/setHistoryChangesFilter.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-settings-menu-behavior/mapSettingsModifiedEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_label_value\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_heading\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/getSidePanelHeader.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-card/actionTypes.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/effectMarkCisInMap.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/json.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapEventsWhitelist.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/settingsMenuSections.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectInitHistoryMode.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/effectDropdownItemSelected.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_image\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_button\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__moment_2_24_0\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/sn-map-properties/actionTypes.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectOnMapVisibilityChanges.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapBlocking.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-initial-data-behavior/mapServiceSeverityEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-initial-data-behavior/mapStaticDataEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_ui_effect_graphql\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-initial-data-behavior/effectMapIsLoaded.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectGetAlertsForCis.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectGetAlertsForBS.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectGetIndicatorsForCis.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapContainer.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapContainer.scss?b03a","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapContainer.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapContainerView.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/topAreaJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/headerFieldsJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/timelineJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__sn_component_timeline\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/mapHeaderPanel.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/toggleCheckedEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/mapHeaderPanel.scss?bd12","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/mapHeaderPanel.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-header-panel/mapHeaderPanelView.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-settings-menu-behavior/mapToggleSettingsEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_toggle\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_dropdown\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/mapSidePanel.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/mapSidePanelView.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_record_common\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/sn-map-properties/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/sn-map-properties/snMapProperties.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/sn-map-properties/snMapPropertiesView.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/sn-map-properties/snMapProperties.scss?6654","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/sn-map-properties/snMapProperties.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/actions/mapCardTypes.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-card/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-card/snMapChangeCard.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-card/getChangeCardContentJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-problem-card/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-problem-card/snMapProblemCard.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-problem-card/getProblemCardContentJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-problem-card/snMapProblemCard.scss?3eb1","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-problem-card/snMapProblemCard.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-affected-ci-card/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-affected-ci-card/snMapAffectedCiCard.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-affected-ci-card/getAffectedCiCardContentJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-affected-ci-card/snMapAffectedCiCard.scss?d146","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-affected-ci-card/snMapAffectedCiCard.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-request-card/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-request-card/snMapChangeRequestCard.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-request-card/getChangeRequestCardContentJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-request-card/snMapChangeRequest.scss?a542","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-change-request-card/snMapChangeRequest.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-incident-card/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-incident-card/snMapIncidentCard.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-incident-card/getIncidentCardContentJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-incident-card/snMapIncidentCard.scss?9120","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-incident-card/snMapIncidentCard.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-outages-card/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-outages-card/snMapOutageCard.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-outages-card/getOutageCardContentJsx.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-outages-card/snMapOutageCard.scss?f680","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-outages-card/snMapOutageCard.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/snMapRelatedItemsList.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/snMapRelatedItemsList.scss?d375","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/snMapRelatedItemsList.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/snMapRelatedItemsListView.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/getAltFooterBuilder.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/effectOpenAlertForm.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/effectOpenIndicatorForm.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/sn-map-related-items-list/effectMarkCisInMapForIndicator.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/mapSidePanel.scss?4e16","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-side-panel/mapSidePanel.scss","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__$servicenow_now_empty_state\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/mapEventReceivedEffect.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-initial-data-behavior/mapInitialDataBehavior.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/external \"__TECTONIC__cuid_2_1_6\"","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/index.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/behaviorServiceHistory.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectResolveHistoryState.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectOnTimelineRangeUpdated.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectHighlightTimelineEvent.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectOnTimelineEventSelection.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/computedUrl.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectComputeRelatedTypes.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectMapDisconnected.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/handleGetAlertsResponse.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectMapRelatedItemsRefresh.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectMapGetAlertItems.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/getMapIndicatorsForCis.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/behavior-service-history/effectChangeCardInHistory.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectSidePanelBackAction.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectOnCardSelection.js","webpack://__TECTONIC__$devsnc_sn_service_mapping/./src/map-container/effectContainerToggleSidePanel.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$devsnc_library_opws_mapping_shared","__TECTONIC__$servicenow_ui_renderer_snabbdom","SYS_PROPERTIES","parsedValue","Number","parseInt","sanitizedValue","Math","max","isNaN","LOGGING","log","caller","SN_MAP_CONNECTED","NOC_EVENT_FROM_MAP_ARRIVED","NOC_EVENT_TO_MAP_SENT","NOC_MAP_APP_COMPONENT_ID","MAP_APP_NOTIFICATIONS_COMPONENT_ID_BASE","MAP_HISTORY_STATES","CURRENT","HISTORY","COMPARE","CI_PROPERTY_CHANGE_STATES","REMOVED","ADDED","MODIFIED","SYS_PROP_MAX_HISTORY_CHANGES_DISPLAYED","EVT_WS_SET_MAP_HISTORY_STATE","CONTEXT_SELECTION_STATES","MAP","TIMELINE","LOADING_STATES","ERROR","DONE","LOADING","BLOCKED","__TECTONIC__lodash_4_17_4","__TECTONIC__sn_translate","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","INDICATOR_IDS","MAP_AFFECTED_CIS","MAP_INCIDENT","MAP_PROBLEM","MAP_CHANGE_REQUEST","MAP_CHANGE_REQUEST_CURRENT","MAP_CHANGE_REQUEST_PLANNED","MAP_CHANGE_REQUEST_PAST","MAP_OUTAGES","MAP_OUTAGES_CURRENT","MAP_OUTAGES_PLANNED","MAP_OUTAGES_PAST","CARD_COMPONENTS","INDICATOR_IDS_HASH","_identity","MAP_CHANGE_REQUEST_COMMON_SORT_OPTIONS","ACTION_TYPES","OPEN_INDICATOR_FORM_INVOKED","MAP_INDICATOR_CARD_SELECTED","label","field","order","MAP_OUTAGES_COMMON_SORT_OPTIONS","toolTipInfo","cardComponentName","sortOptions","groupBy","attributes","INDICATOR_TYPES","table","ciField","TYPE_IDS","snOpwsRelatedItemsListTypeIds","MAP_TOPO_CHANGES","snOpwsRelatedItemsListCardComponents","isHistory","ITEM_TYPES","snOpwsRelatedItemsListItemTypes","HISTORY_ITEM_TYPES","contextMap","Map","connectMapListener","mapId","dispatch","event","context","stopPropagation","stopImmediatePropagation","detail","channelFn","stopMe","workspaceEventReceiver","effectInitHistoryMode","MAP_INIT_HISTORY","createMapEventListener","args","mapEventsWhitelist","debug","constants","destroyMapListeners","initEventBus","iframeRef","eventBusElm","iframeElm","current","innerDoc","contentDocument","getElementById","getEventBusElement","mapEventListener","connectEventListener","set","addEventListener","dispatchEventToMap","eventName","e","Error","stack","delete","removeEventListener","__TECTONIC__$servicenow_ui_effect_http","getEmptyTimelineData","events","ranges","totalRange","displayRange","selectedTimelineEvents","selectedEvents","selectedRanges","highlightedEventIds","_eventsIndex","isHistoryMap","mapHistoryState","MAP_CONSTANTS","resolveMapHistoryState","displayChanges","escapeNaN","sanitizeHistoryRange","start","end","serviceCreationTime","upperDateLimit","fixedStart","fixedEnd","min","isRangeIncluded","included","wrapping","formatRange","mStart","mEnd","moment","duration","diff","humanize","format","forceTimelineRefresh","updateProperties","properties","timelineData","operation","path","UNITS","SECOND","MINUTE","HOUR","DAY","WEEK","MONTH","TIMELINE_ITEM_TYPES","BS_CREATED","TOPOLOGY","CI","INFRA_PATH","SEVERITY","TIMELINE_TYPE_TO_BUBBLE_GROUP","DEFAULT_BUBBLE_ICON","icon","DEFAULT_CHANGE_LABELS","labelPlural","DEFAULT_RANGE_PERIOD","ACTION_TIMELINE_DISPLAY_RANGE_UPDATED","EVT_DISABLE_PULLING_MANAGER","EVT_ENABLE_PULLING_MANAGER","EVT_STOP_MASHUPS","EVT_RESUME_MASHUPS","BUBBLE_STYLE","CHANGE_LABELS","SEVERITY_LABELS","1","2","3","4","5","PAN_STEP","ZOOM_STEP","EVT_SCHEDULE_FIT_TO_SCREEN","EVT_LAYOUT_REAPPLIED","effectHandlers","sendEventToMapHandler","coeffects","action","payload","timelineConstants","MAP_HISTORY_DATA_REQUEST","MAP_HISTORY_DATA_REQUEST_SUCCEEDED","MAP_HISTORY_DATA_REQUEST_FAILED","CONSTANTS","NOC_ERROR_OCCURRED","MAP_HISTORY_DATA_SET","getHistoryData","createHttpEffect","method","batch","queryParams","successActionType","errorActionType","reduceTimelineData","bubble","changes","severities","prevTimestamp","type","timestamp","time","next","data","historyDataResponse","updateState","storedServiceCreationTime","checkForError","requestedRange","historyData","error","loadingState","rawTimelineData","reduceRight","POSITIVE_INFINITY","reverse","currDataRange","allChanges","severityRanges","mapSettingsMenuBehavior","actionHandlers","mapSettingsModifiedEffect","NOC_SETTINGS_MODIFIED_EVENT","createActionConfig","mapToggleSettingsEffect","MAP_TOGGLE_SETTINGS_VIEW","mapSettingsModalClosedEffect","RELATED_ITEMS_PAGE_SIZE","DEFAULTS","SORT_OPTIONS","find","GET_HISTORY_CHANGES_REQUEST","GET_HISTORY_CHANGES_REQUEST_STARTED","GET_HISTORY_CHANGES_REQUEST_SUCCEEDED","GET_HISTORY_CHANGES_REQUEST_FAILED","DEFAULT_RANGE_DAYS","getMapChangeItems","serviceId","topologyChangesRange","userMeta","relatedItemIds","topoChangesItemsCache","state","selectedType","forceRefresh","warn","updatedTimestamp","currentTimestamp","items","range","endTime","Date","now","startTime","cardsAreLoading","getHistoryChanges","startActionType","filterByCiIds","ciIdsLookup","change","ciId","generateItem","tz","dateTimeFormat","message","description","displayTimestamp","formatChangeCards","filteredChanges","sortConfig","sorted","slice","filter","Boolean","historyChangesResponse","selectedSortOption","relatedItemsRefreshParams","ciIds","option","filterChangeCards","filteredItems","relatedItemsResponse","lastUpdated","totalRecords","filterApplied","historyChangesFailure","sendEventToMapEffect","clearAllSelections","clearCardSelection","snOpwsRelatedItemsListActionTypes","CARD_SELECTED","clearTimelineSelections","clearMapSelection","setHistoryChangesFilter","itemType","currItemIds","size","ciFilter","clearTimelineHighlight","MAP_EVENT_NAMES","EVT_WS_OPTIONS_POPOVER_CONTROLS_TRANSFER","MAP_SETTINGS_SET","mapSettings","newMapSettings","indicatorIds","indicatorsSection","getIndicatorsSection","keys","setIndicatorIds","model","indicatorsIds","__TECTONIC__$servicenow_now_label_value","__TECTONIC__$servicenow_now_heading","LABEL_PROPERTIES_HEADER","LABEL_RELATED_ITEMS_HEADER","LABEL_PROPERTIES_HISTORY_HEADER","LABEL_RELATED_ITEMS_HISTORY_HEADER","HOST_LABEL_FORMAT","CI_AND_HOST_LABEL_FORMAT","LABEL_NAME","TITLE_RELATED_ITEMS","TITLE_CHANGES","TITLE_PROPERTIES","TITLE_PROPERTIES_HISTORY_OF","TITLE_SINGLE_CHANGE_SELECTED","TITLE_CHANGES_SELECTED","LABEL_ON","LABEL_STARTING","LABEL_ENDING","getLabelJsx","onClick","className","tooltip","jsx","on-click","href","variant","openCiFormHandler","sections","sectionId","section","isEndpoint","tableName","sysId","sys_id","parent_table","parent_sys_id","getCiRelatedHeader","mapProperties","hostLabel","ciLabel","hostLabelFormatted","replace","formatHostLabelText","ciTypeAlt","getCiType","iconImage","src","alt","height","width","fit","position","ciFormHandler","hostFormHandler","truncatedCiLabel","truncatedHostLabel","ciLabelJsx","hostLabelJsx","getItemsSecondaryTitle","count","filterType","ciType","buildCiLabel","truncate","truncator","_truncate","text","getHistoryChangesDates","timestamps","getHistoryRangeTimestamps","dateFormat","startDate","endDate","needBoth","itemsModel","_section","startsWith","getElementType","getSidePanelTitle","isFilterActive","isPropertiesPanel","getSidePanelHeaderJsx","ciRelatedHeader","ciRelatedHeaderJsx","secondaryTitle","getPropertiesSecondaryTitle","secondaryTitleJsx","level","historyHeaderAttrsJsx","dates","nameItemWrapped","aria-label","getHistoryHeaderAttrs","TOPO_CHANGE_CARD_SELECTED","MAP_GET_CIS_OF_ALERT_REQUEST","MAP_GET_CIS_OF_ALERT_STARTED","MAP_GET_CIS_OF_ALERT_SUCCEEDED","MAP_GET_CIS_OF_ALERT_FAILED","getAffectedCisRequest","markCisOnMap","getAffectedCis","isSelected","alertHistoryId","alertHistorySysId","handleGetCisResponse","info","markChangeOnMap","WHITE_LIST","EVT_WS_GET_SERVICE_NAME","EVT_WS_SEVERITY_COLORS_GETTER_SENT","sa_status_change","wsMapLoaderStateChanged","EVT_WS_ALERT_PANEL_UPDATE","EVT_WS_HISTORY_CHANGES_PANEL_UPDATE","EVT_WS_INDICATOR_PANEL_UPDATE","settingsMenuSections","initialRange","candidateRange","timelineCandidates","effectReceiveHistoryData","showSeverity","__TECTONIC__$servicenow_ui_core","ITEM_IDS","FULL_MAP","onDropdownItemClicked","dropdownId","isEm","mapInitialData","serviceName","baseURL","window","open","openFullMap","ITEM_CLICKED","DROPDOWN_ID","__TECTONIC__$servicenow_now_image","__TECTONIC__$servicenow_now_button","__TECTONIC__moment_2_24_0","BACK_ACTION","onMapVisibilityChange","isVisible","MAP_VISIBILITY_CHANGE","BLOCKING_MESSAGE","syncBlockingState","graphDTOData","isMapBlocked","isBlocked","blockingState","reason","getBlockingReason","url","getListViewURL","openListView","showBlockedMap","rememberForSession","showLargeMap","MAP_TIMESTAMP_CHANGED","MAP_GET_SERVICE_SEVERITY","MAP_GET_SERVICE_SEVERITY_STARTED","MAP_GET_SERVICE_SEVERITY_SUCCEEDED","MAP_GET_SERVICE_SEVERITY_FAILED","mapServiceSeverityTimestampChangedEffect","getServiceSeverityEffect","serviceSeverityResponseEffect","severity","formatComplexFieldsToCamelCase","serviceSeverity","MAP_LOAD_INITIAL_DATA","MAP_LOAD_INITIAL_DATA_STARTED","MAP_LOAD_INITIAL_DATA_SUCCEEDED","MAP_LOAD_INITIAL_DATA_FAILED","mapRequestStaticDataEffect","createGraphQLEffect","GQL_QUERY","variableList","concatinatingPropertiesNames","query","mapFieldValues","outField","displayName","formatPropertiesRespones","normalizedResponse","reduce","result","getValue","sanitizer","propertyName","setServiceNameOnMap","setServiceNameCb","getDisplayValue","mapStaticDataResponseEffect","formatServiceResponse","sysProperties","record","topologyChangesRangePref","timeZoneOffset","getUserMeta","getVariables","serviceQuery","sysPropertiesQuery","__TECTONIC__$servicenow_ui_effect_graphql","mapIsLoaded","isInitializing","MAP_IS_LOADED","MAP_GET_ALERTS_FOR_CIS","MAP_GET_ALERTS_FOR_CIS_REQUEST","MAP_GET_ALERTS_FOR_CIS_REQUEST_STARTED","MAP_GET_ALERTS_FOR_CIS_REQUEST_SUCCEEDED","MAP_GET_ALERTS_FOR_CIS_REQUEST_FAILED","getMapAlertsForCisEffectHandler","MAP_GET_ALERTS_FOR_BS","MAP_GET_ALERTS_FOR_BS_REQUEST","MAP_GET_ALERTS_FOR_BS_REQUEST_STARTED","MAP_GET_ALERTS_FOR_BS_REQUEST_SUCCEEDED","MAP_GET_ALERTS_FOR_BS_REQUEST_FAILED","getMapAlertsForBSeffectHandler","LABEL_LAST_UPDATED_TIME","reduceItemFields","ciFieldName","fieldKey","keyNoPrefix","removePrefix","newKey","newValue","displayValue","formatItem","rawItem","number","task","handleGetMapIndicatorsForCisResponse","selectedindicatorId","selectedItemIds","isMapElementSelected","queryRes","values","GlideRecord_Query","results","MAP_GET_INDICATORS_FOR_CIS_REQUEST_STARTED","MAP_GET_INDICATORS_FOR_CIS_REQUEST_SUCCEEDED","MAP_GET_INDICATORS_FOR_CIS_REQUEST_FAILED","default","packageVersion","require","version","COMPONENT_DISCONNECTED","actionTypes","createNocElement","renderer","snabbdom","view","styles","initialState","severitiesGetter","indicatorsPanelData","isOpen","selectable","schema","oneOf","computed","computedUrl","relatedItemTypes","selectedCardId","effectComputeRelatedTypes","mapEventReceivedEffect","effectMapRelatedItemsRefresh","REFRESH_REQUESTED","effectGetAlertsForCis","handleGetAlertsResponse","handleGetMapAlertsResponse","handleGetMapAlertsFailed","effectGetAlertsForBS","effectGetMapChangeItems","effectGetIndicatorsForCis","effectSidePanelBackAction","RELATED_ITEMS_BACK","relatedItemsBack","PROPERTIES_BACK","propertiesBack","effectMapDisconnected","effectOnCardSelection","onCardSelection","effectOnMapVisibilityChange","effectContainerToggleSidePanel","TOGGLE_SIDE_PANEL","toggleSidePanel","behaviors","mapInitialDataBehavior","nocErrorBehavior","behaviorNocNotification","behaviorServiceHistory","LABEL_MAIN","LABEL_LOADING","LABEL_LOADING_HISTORY","LABEL_MAP_FRAME","LABEL_OPEN_LIST_VIEW","LABEL_LOAD_BLOCKED_MAP","onIframeLoad","componentId","notifications","createRef","timelineJsx","getTimelineJsx","headerFieldsJsx","getHeaderFieldsJsx","extraSpacingAfterHeading","loadingStateJsx","loadingText","loadingProps","headerText","bodyText","getLoadingStateJsx","bodyJsx","ref","title","on-load","map-component-id","is-loading","is-blocked","map-history-state","anchorElm","anchor-elm","action-on-change","effectOnMapVisibilityChanges","service-id","map-id","is-history","is-em","service-severity","map-initial-data","map-settings","LABEL_SEVERITY","processStatus","ownedBy","mapTitleItems","severityValue","severityLabel","severityHighlightedItem","showIcon","status","GENERAL","EM_SEVERITY_TO_EDS_STATUS","getSeverityHighlightedItem","getDisplayName","align","has-no-margin","dispStart","dispEnd","start-date","end-date","display-start-date","display-end-date","event-data","range-data","zoom-step-percent","min-zoom-spread","pan-step-percent","is-compact-view","manage-selections","selected-events","selected-ranges","highlighted-event-ids","__TECTONIC__sn_component_timeline","COMPONENT_DOM_READY","isLoading","toggleCheckedEffect","effectDropdownItemSelected","toggleModel","itemId","enabled","toggle","LABEL_HEADER","LABEL_MORE","SETTINGS_MODAL_TITLE","LABEL_OPEN_SETTINGS","LABEL_OPEN_FULL_MAP","LABEL_OPEN_HISTORY_MAP","generateAdditionalInfoRow","row","generateToggleLabelItem","idx","isShown","String","additionalInfoId","descriptionId","additionalInfo","isAdditionalInfoShown","additionalInfoRows","generateAdditionalInfoJsx","descriptionFieldJsx","labelledByIds","labelJsx","labelPlainText","includes","labelVnode","dangerouslyCreateElementFromString","parseLabel","iconJsx","append-to-payload","manage-checked","props-checked","props-disabled","isDisabled","aria-labelledby","generateSectionContainerJsx","index","togglesJsx","str","cssClassSection","class","charAt","toLocaleUpperCase","substr","toLocaleLowerCase","openSettings","mapSettingsMenuActions","openHistoryMap","fakeId","genUniqueSysId","params","moreItems","formJsx","mapHeader","getMapHeaderJsx","headerButtonsJsx","currentMapButtons","Fragment","disabled","manage-selected-items","hide-caret","hide-label","select","selected-items","tooltip-content","config-aria","getHeaderButtonsJsx","notificationsComponentId","manage-opened","opened","content-full-width","header-label","component-id","__TECTONIC__$servicenow_now_toggle","__TECTONIC__$servicenow_now_modal","__TECTONIC__$servicenow_now_dropdown","mapComponentId","effectToggleSidePanel","LABEL_SIDE_PANEL","sidePanelPayload","sidePanelStatePropertyName","getPropertiesTab","actionComponent","actionAttributes","assignmentId","getRelatedItemsTab","itemTypes","itemIds","itemsResponse","actions","wrapperClass","__TECTONIC__$servicenow_now_record_common","EMPTY","createLabelValue","newValues","previous","edsItems","wrapped","createLabelValueWithLink","linkLabel","openForm","hostName","prepareClusterNodes","buildValues","createSectionData","meta","oldValue","changeState","isLink","prepareLabelValueWithLink","getItemValue","getItemPrevious","generateSection","sectionItems","panelHeaderJsx","sectionsMap","sectionJsx","heading","backButton","getBackButtonJsx","showBackButton","actionType","headingJsx","panelHeaderWrapperJsx","generateViewFn","getCardContentJsx","openFormActionType","cardSelectedActionType","createCardComponent","componentName","LABEL_CHANGE_TIME","getChangeCardContentJsx","labelValueItems","truncated","footerFieldName","descriptionFieldName","getProblemCardContentJsx","assignedTo","assignmentGroup","cmdbCi","relatedIncidents","jsxBuilder","getAvatarElementJsx","getLabelValueElementJsx","cardJsx","getIndicatorCardWithAvatarJsx","getAffectedCiCardContentJsx","sysClassName","supportGroup","itemsCol1","formatComplexFieldToStringLabelValue","itemsCol2","getLabelValueJsx","getChangeRequestCardContentJsx","selectedTab","workStart","workEnd","getIncidentCardContentJsx","priority","getHighlightedLabelValueElementJsx","headingFieldName","getOutageCardContentJsx","begin","beginTime","effectOpenAlertForm","OPEN_ALERT_FORM_INVOKED","openAlertForm","snOpwsAlertCardActionTypes","ALERT_CARD_SELECTED","effectMarkCisInMap","indicatorTypes","effectOpenIndicatorForm","openIndicatorForm","effectMarkCisInMapForIndicator","getSelectedCis","changeCardActionTypes","wrapperComponentId","headerTitle","sidePanelHeaderJsx","sidePanelHeaderWrapperJsx","slot","altFooterTextBuilder","getAltFooterBuilder","manage-selected-item-id","selected-item-id","last-updated","total-records","item-types","header-title","show-back-button","hide-refresh-button","alt-footer-text-builder","nDays","alertId","typeId","cmdbCiId","__TECTONIC__$servicenow_now_empty_state","updateRelatedItems","mapPayload","arrivedAt","isInteractive","refreshRelatedItems","onIndicatorPanelUpdate","indicatorId","getIndicatorId","updatedIndicatorData","currIndicatorsPanelData","newUpdate","currHash","sysIds","newHash","shouldUpdateIndicatorsPanelData","isInitialized","mapStaticDataEffect","onGetServiceName","color","onSeverityColorsGetter","ALERTS","mapServiceSeverityEffect","effectMapIsLoaded","isLoaded","isFailed","resolveLoadingState","initialDataVars","__TECTONIC__cuid_2_1_6","lastChangesCounters","effectResolveHistoryState","resolveHistoryState","ACTION_TYPES_CHANGE_CARD_SELECTED","effectHighlightTimelineEvent","effectOnTimelineRangeUpdated","TIMELINE_RANGE_UPDATED","onTimelineRangeUpdated","effectOnTimelineEventSelection","TIMELINE_DATA_SELECTED_UPDATED","onTimelineEventSelection","APPROVED_CHANGE_DESCRIPTION","NOTIFICATION_SELECT_SHORTER_RANGE","NOTIFICATION_SHORTER_RANGE_SELECTED","NOTIFICATION_CANNOT_DISPLAY_LIMIT","groupTimelineRanges","newSeverity","group","groupTimelineEvents","groupName","approved","resolveApprovedChangeDescription","filterChangesByDisplayRange","filterSeveritiesByDisplayRange","sev","resolveSeverityColor","mapRangeCategories","bulk","mapEventCategories","mapChangeToId","ch","resolveChangesLimit","changesLimit","NOC_SHOW_NOTIFICATION","candidateStart","lowerIdx","changeBefore","updLowerboundary","lastChangeTime","fixCandidateRangeStart","maxHistoryChangesDisplayed","sanitizedRange","eventsGrouping","eventsMapping","severityRangeFilter","rangesMapping","payloadForMap","isCompare","from","to","checkpoints","newTimelineData","MAP_SETTINGS_SET_ACTION_TYPES","applyCandidateRange","currentViewStart","currentViewEnd","currStart","currEnd","currentDisplayRange","onNextFrame","Set","markCards","GLOBALS","BS_URL","ASSURANCE","MAPPING","mapSettingsMenuBehaviorActionTypes","getBaseItemTypes","buildIndicatorType","indicator","settingsModel","indicatorType","indicatorTypeBuilder","baseItemTypes","alerts","requestedTime","alertsSafe","formatAlertsResponse","alertsSelectionState","effect","interceptors","newEffects","effectMapGetAlertItems","setChangeCardsinHistory","getGraphQlMapIndicatorsEffect","effects","firstRecord","urlData","extArgs","bsid","pathIds","servicelist","listof","sortOption","infraPathCis","decodeURIComponent","sortByField","isOrderASC","firstRow","getQueryParams","getDynamicGraphQl","relatedItem","selectedTable","selectedCiField","selectedGroupBy","sysparm_cmdb_ci_field","sysparm_table","sysparm_query","getIndicatorParams","queryConditions","qlQuery","createIndicatorsGraphQl","allAttrStr","attribute","buildGqlForAllAttributes","has","mapPropertiesActionTypes","setTimeout"],"mappings":"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","file":"sn-service-mapping.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","module.exports = __TECTONIC__$devsnc_library_opws_mapping_shared;","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\n\nconst SYS_PROP_MAX_HISTORY_CHANGES_DISPLAYED = 'itom_map_app.max_history_changes_displayed';\n\nconst SYS_PROPERTIES = {\n\t[SYS_PROP_MAX_HISTORY_CHANGES_DISPLAYED](value) {\n\t\tconst parsedValue = Number.parseInt(value);\n\t\tconst sanitizedValue = Math.max(isNaN(parsedValue) ? 1000 : parsedValue, 1);\n\t\tif(Number(value) !== sanitizedValue)\n\t\t\tLOGGING.log(`sys_property ${SYS_PROP_MAX_HISTORY_CHANGES_DISPLAYED} has value ${value}, sanitized to be ${sanitizedValue}`, {caller: 'sn-service-mapping:SYS_PROPERTIES'});\n\t\treturn sanitizedValue;\n\t}\n};\n\nexport default {\n\tSN_MAP_CONNECTED: 'SN_MAP_CONNECTED',\n\n\tNOC_EVENT_FROM_MAP_ARRIVED: 'NOC_EVENT_FROM_MAP_ARRIVED',\n\tNOC_EVENT_TO_MAP_SENT: 'NOC_EVENT_TO_MAP_SENT',\n\n\tNOC_MAP_APP_COMPONENT_ID: 'noc-map-app-root',\n\tMAP_APP_NOTIFICATIONS_COMPONENT_ID_BASE: 'map-app-notifications',\n\n\tMAP_HISTORY_STATES: {\n\t\tCURRENT: 'CURRENT_VIEW',\n\t\tHISTORY: 'HISTORY_VIEW',\n\t\tCOMPARE: 'COMPARE_VIEW'\n\t},\n\n\tCI_PROPERTY_CHANGE_STATES:{\n\t\tREMOVED: 'REMOVED',\n\t\tADDED: 'ADDED',\n\t\tMODIFIED: 'MODIFIED'\n\t},\n\n\tSYS_PROPERTIES,\n\n\tSYS_PROP_MAX_HISTORY_CHANGES_DISPLAYED,\n\t\n\n\t/**\n\t * send to angular map and update about history mode.\n\t * {\n\t * \t\tisCompare\n\t * \t\tfrom: UNIX format, when isCompare is true\n\t * \t\tto: UNIX format, when isCompare is true\n\t * \t\ttimestamp: UNIX format, when isCompare is false\n\t * \t\tcheckpoints: array of change ids in current displayRange\n\t * }\n\t */\n\tEVT_WS_SET_MAP_HISTORY_STATE: 'EVT_WS_SET_MAP_HISTORY_STATE',\n\n\t/**\n\t * Enum of possible states when filtering contextual panel.\n\t */\n\tCONTEXT_SELECTION_STATES: {\n\t\tMAP: 'MAP', //map element is selected (CI or connection)\n\t\tTIMELINE: 'TIMELINE' //change/event is selected on the timeline.\n\t},\n\n\t/**\n\t * Enum of loading states of map. \n\t * Values are compatible with now-empty-state.type\n\t */\n\tLOADING_STATES: {\n\t\tERROR: 'loading-error',\n\t\tDONE: null,\n\t\tLOADING: 'loading',\n\t\tBLOCKED: 'empty'\n\t}\n};\n\n","module.exports = __TECTONIC__lodash_4_17_4;","module.exports = __TECTONIC__sn_translate;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import {t} from 'sn-translate';\nimport {mapKeys as _mapKeys, identity as _identity} from 'lodash';\n/**\n * Ids of static item types that are displayed on map.\n * This is a base list, it doesn't contain indicator ids.\n */\nexport const INDICATOR_IDS = {\n\tMAP_AFFECTED_CIS:  'Mashup_551b76e80a0005fa024dff5a10d18659',//'MAP_AFFECTED_CIS',\n\tMAP_INCIDENT: 'Mashup_0b8c240d0a0004df3e3fa857b6a69fa2', //'MAP_INCIDENT',\n\tMAP_PROBLEM: 'Mashup_549969a80a0005fa7cece9af9fcd1f40', //'MAP_PROBLEM',\n\tMAP_CHANGE_REQUEST: 'Mashup_CHANGE_REQUEST',\n\tMAP_CHANGE_REQUEST_CURRENT: 'Mashup_121aabb60a0004df1a01db883df90dca', //'MAP_CHANGE_CURRENT',\n\tMAP_CHANGE_REQUEST_PLANNED: 'Mashup_124f2c6b0a0004df065f564c7640046d', // 'MAP_CHANGE_PLANNED',\n\tMAP_CHANGE_REQUEST_PAST: 'Mashup_1251fb6e0a0004df15fcd8c0efe73220', // 'MAP_CHANGE_PAST',\n\tMAP_OUTAGES: 'Mashup_MAP_OUTAGES',\n\tMAP_OUTAGES_CURRENT: 'Mashup_10f4992c0a0004df1d2f88787491ac5f', //'MAP_OUTAGES_CURRENT'\n\tMAP_OUTAGES_PLANNED: 'Mashup_11187d690a0004df70b2954211df5b94', //MAP_OUTAGES_PLANNED\n\tMAP_OUTAGES_PAST: 'Mashup_1118095d0a0004df7591d3bc3b82e0c8' // MAP_OUTAGES_PAST\n};\n\nexport const INDICATOR_IDS_HASH = _mapKeys(INDICATOR_IDS, _identity);\n\nexport const CARD_COMPONENTS = {\n\t[INDICATOR_IDS.MAP_AFFECTED_CIS]: 'sn-map-task-ci-card',\n\t[INDICATOR_IDS.MAP_INCIDENT]: 'sn-map-incident-card',\n\t[INDICATOR_IDS.MAP_PROBLEM]: 'sn-map-problem-card',\n\t[INDICATOR_IDS.MAP_CHANGE_REQUEST]: 'sn-map-change-request-card',\n\t[INDICATOR_IDS.MAP_OUTAGES]: 'sn-map-outages-card',\n};\n\nexport const ACTION_TYPES = {\n\t/**\n     * dispatches to open Workspace tab\n     */\n\tOPEN_INDICATOR_FORM_INVOKED: 'SN_MAP_INDICATOR_CARD#OPEN_INDICATOR_FORM_INVOKED',\n\n\tMAP_INDICATOR_CARD_SELECTED: 'SN_MAP_INDICATOR_CARD#CARD_SELECTED'\n\n};\n\n\n/**\n * Hard-coded list of static item types that are displayed on map.\n * This is a base list, it doesn't contain indicators, that are added dynamically from map event.\n * Each type should include\n * - id: String\n * - label: translated String\n * - cardComponentName: remember to import the component so it will be registered on DOM.\n * - sortOptions: hardcoded list of all sorting options for the type: [{id, label, order, field}]\n */\n\n\nconst MAP_CHANGE_REQUEST_COMMON_SORT_OPTIONS = [\n\t{\n\t\tid: 'type_asc',\n\t\tlabel: t('Type (A-Z)'),\n\t\tfield: 'type',\n\t\torder: 'asc'\n\t},\n\t{\n\t\tid: 'state_asc',\n\t\tlabel: t('State (Z-A)'),\n\t\tfield: 'state',\n\t\torder: 'desc'\n\t},\n\t{\n\t\tid: 'assigned_to_asc',\n\t\tlabel: t('Assigned To (A-Z)'),\n\t\tfield: 'assigned_to',\n\t\torder: 'asc'\n\t},\n\t{\n\t\tid: 'assignment_group_asc',\n\t\tlabel: t('Assignment Group (A-Z)'),\n\t\tfield: 'assignment_group',\n\t\torder: 'asc'\n\t}\n];\n\nconst MAP_OUTAGES_COMMON_SORT_OPTIONS = [\n\t{\n\t\tid: 'duration',\n\t\tlabel: t('Duration (newest first)'),\n\t\tfield: 'duration',\n\t\torder: 'desc'\n\t},\n\t{\n\t\tid: 'type_asc',\n\t\tlabel: t('Type (A-Z)'),\n\t\tfield: 'type',\n\t\torder: 'asc'\n\t},\n\t{\n\t\tid: 'configuration_item_asc',\n\t\tlabel: t('Configuration Item (A-Z)'),\n\t\tfield: 'cmdb_ci',\n\t\torder: 'asc'\n\t}\n];\n\nconst MAP_CHANGE_REQUEST_CURRENT = {\n\tid: INDICATOR_IDS.MAP_CHANGE_REQUEST_CURRENT,\n\tlabel: t('Change Request - Current'),\n\ttoolTipInfo: t('Open ‘Full Map’ for all change requests'),\n\tcardComponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_CHANGE_REQUEST],\n\tsortOptions: [\n\t\t{\n\t\t\tid: 'current_start_time',\n\t\t\tlabel: t('Start Time (newest first)'),\n\t\t\tfield: 'work_start',\n\t\t\torder: 'desc'\n\t\t},\n\t\t...MAP_CHANGE_REQUEST_COMMON_SORT_OPTIONS\n\n\t],\n\tgroupBy: 'type',\n\tattributes: [\n\t\t'short_description',\n\t\t'number',\n\t\t'cmdb_ci',\n\t\t'assigned_to',\n\t\t'assignment_group',\n\t\t'sys_id',\n\t\t'start_date', // planned\n\t\t'end_date',\n\t\t'work_start', // actual\n\t\t'work_end',\n\t\t'type',\n\t\t'state'\n\t]\n};\n\nconst MAP_OUTAGES_CURRENT = {\n\tid: INDICATOR_IDS.MAP_OUTAGES_CURRENT,\n\tlabel: t('Outages - Current'),\n\ttoolTipInfo: t('Open ‘Full Map’ for all outages'),\n\tcardComponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_OUTAGES],\n\tsortOptions: [\n\t\t{\n\t\t\tid: 'current_start_time',\n\t\t\tlabel: t('Start Time (newest first)'),\n\t\t\tfield: 'begin',\n\t\t\torder: 'desc'\n\t\t},\n\t\t...MAP_OUTAGES_COMMON_SORT_OPTIONS\n\t],\n\tgroupBy: 'type',\n\tattributes: [\n\t\t'task_number',\n\t\t'sys_id',\n\t\t'cmdb_ci',\n\t\t'begin',\n\t\t'end',\n\t\t'duration',\n\t\t'type',\n\t\t'name'\n\t]\n};\n\nconst MAP_CHANGE_REQUEST_PLANNED = {\n\t...MAP_CHANGE_REQUEST_CURRENT,\n\tid: INDICATOR_IDS.MAP_CHANGE_REQUEST_PLANNED,\n\tlabel: t('Change Request- Planned'),\n\tsortOptions: [\n\t\t{\n\t\t\tid: 'planned_start_date',\n\t\t\tlabel: t('Planned Start Time (newest first)'),\n\t\t\tfield: 'start_date',\n\t\t\torder: 'desc'\n\t\t},\n\t\t{\n\t\t\tid: 'planned_end_date',\n\t\t\tlabel: t('Planned End Time (newest first)'),\n\t\t\tfield: 'end_date',\n\t\t\torder: 'desc'\n\t\t},\n\t\t...MAP_CHANGE_REQUEST_COMMON_SORT_OPTIONS\n\n\t]\n};\n\nconst MAP_CHANGE_REQUEST_PAST = {\n\t...MAP_CHANGE_REQUEST_CURRENT,\n\tid: INDICATOR_IDS.MAP_CHANGE_REQUEST_PAST,\n\tlabel: t('Change Request - Past'),\n\tsortOptions: [\n\t\t{\n\t\t\tid: 'past_start_date',\n\t\t\tlabel: t('Start Time (newest first)'),\n\t\t\tfield: 'start_date',\n\t\t\torder: 'desc'\n\t\t},\n\t\t{\n\t\t\tid: 'past_end_date',\n\t\t\tlabel: t('End Time (newest first)'),\n\t\t\tfield: 'end_date',\n\t\t\torder: 'desc'\n\t\t},\n\t\t...MAP_CHANGE_REQUEST_COMMON_SORT_OPTIONS\n\t]\n};\n\nconst MAP_OUTAGES_PLANNED = {\n\t...MAP_OUTAGES_CURRENT,\n\tid: INDICATOR_IDS.MAP_OUTAGES_PLANNED,\n\tlabel: t('Outages - Planned'),\n\tsortOptions: [\n\t\t{\n\t\t\tid: 'planned_start_time',\n\t\t\tlabel: t('Start Time (newest first)'),\n\t\t\tfield: 'begin',\n\t\t\torder: 'desc'\n\t\t},\n\t\t{\n\t\t\tid: 'planned_end_time',\n\t\t\tlabel: t('End Time (newest first)'),\n\t\t\tfield: 'end',\n\t\t\torder: 'desc'\n\t\t},\n\t\t...MAP_OUTAGES_COMMON_SORT_OPTIONS\n\t]\n};\n\nconst MAP_OUTAGES_PAST = {\n\t...MAP_OUTAGES_CURRENT,\n\tid: INDICATOR_IDS.MAP_OUTAGES_PAST,\n\tlabel: t('Outages - Past'),\n\tsortOptions: [...MAP_OUTAGES_PLANNED.sortOptions]\n};\n\nexport const INDICATOR_TYPES = [\n\t{\n\t\tid: INDICATOR_IDS.MAP_AFFECTED_CIS,\n\t\tlabel: t('Affected CI\\'s'),\n\t\ttoolTipInfo: t('Open ‘Full Map’ for all Affected CI'),\n\t\tcardComponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_AFFECTED_CIS],\n\t\tsortOptions: [\n\t\t\t{\n\t\t\t\tid: 'updated',\n\t\t\t\tlabel: t('Updated (newest first)'),\n\t\t\t\tfield: 'sys_updated_on',\n\t\t\t\torder: 'desc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'class_name',\n\t\t\t\tlabel: t('Class (A-Z)'),\n\t\t\t\tfield: 'sys_class_name',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'configuration_item_asc',\n\t\t\t\tlabel: t('Configuration Item (A-Z)'),\n\t\t\t\tfield: 'ci_item',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'support_group_asc',\n\t\t\t\tlabel: t('Support Group (A-Z)'),\n\t\t\t\tfield: 'support_group',\n\t\t\t\torder: 'asc'\n\t\t\t}\n\n\n\t\t],\n\t\ttable: 'affected_cis_view',\n\t\tciField: 'task_ci_item',\n\t\tgroupBy: 'ci_can_print',\n\t\tattributes: [\n\t\t\t'task_task',\n\t\t\t'task_sys_updated_on',\n\t\t\t'task_ci_item',\n\t\t\t'task_sys_id',\n\t\t\t'ci_sys_class_name',\n\t\t\t'ci_support_group'\n\t\t]\n\t},\n\t{\n\t\tid: INDICATOR_IDS.MAP_INCIDENT,\n\t\tlabel: t('Incident'),\n\t\ttoolTipInfo: t('Open ‘Full Map’ for all incidents'),\n\t\tcardComponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_INCIDENT],\n\t\tsortOptions: [\n\t\t\t{\n\t\t\t\tid: 'updated_asc',\n\t\t\t\tlabel: t('Updated (newest first)'),\n\t\t\t\tfield: 'sys_updated_on',\n\t\t\t\torder: 'desc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'priority_asc',\n\t\t\t\tlabel: t('Priority (A-Z)'),\n\t\t\t\tfield: 'priority',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'state_asc',\n\t\t\t\tlabel: t('State (A-Z)'),\n\t\t\t\tfield: 'state',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'configuration_item_asc',\n\t\t\t\tlabel: t('Configuration Item (A-Z)'),\n\t\t\t\tfield: 'cmdb_ci',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'assigned_to_asc',\n\t\t\t\tlabel: t('Assigned To (A-Z)'),\n\t\t\t\tfield: 'assigned_to',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'assignment_group_asc',\n\t\t\t\tlabel: t('Assignment Group (A-Z)'),\n\t\t\t\tfield: 'assignment_group',\n\t\t\t\torder: 'asc'\n\t\t\t}\n\t\t],\n\t\tgroupBy: 'active',\n\t\tattributes: [\n\t\t\t'number',\n\t\t\t'sys_id',\n\t\t\t'short_description',\n\t\t\t'assigned_to',\n\t\t\t'assignment_group',\n\t\t\t'cmdb_ci',\n\t\t\t'priority',\n\t\t\t'state',\n\t\t\t'sys_updated_on',\n\t\t\t'sys_class_name'\n\t\t]\n\t},\n\t{\n\t\tid: INDICATOR_IDS.MAP_PROBLEM,\n\t\tlabel: t('Problem'),\n\t\ttoolTipInfo: t('Open ‘Full Map’ for all problems'),\n\t\tcardComponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_PROBLEM],\n\t\tsortOptions: [\n\t\t\t{\n\t\t\t\tid: 'updated_asc',\n\t\t\t\tlabel: t('Updated (newest first)'),\n\t\t\t\tfield: 'sys_updated_on',\n\t\t\t\torder: 'desc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'configuration_item_asc',\n\t\t\t\tlabel: t('Configuration Item (A-Z)'),\n\t\t\t\tfield: 'cmdb_ci',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'state_asc',\n\t\t\t\tlabel: t('State (A-Z)'),\n\t\t\t\tfield: 'state',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'assigned_to_asc',\n\t\t\t\tlabel: t('Assigned To (A-Z)'),\n\t\t\t\tfield: 'assigned_to',\n\t\t\t\torder: 'asc'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'assignment_group_asc',\n\t\t\t\tlabel: t('Assignment Group (A-Z)'),\n\t\t\t\tfield: 'assignment_group',\n\t\t\t\torder: 'asc'\n\t\t\t}\n\t\t],\n\t\tgroupBy: 'active',\n\t\tattributes: [\n\t\t\t'number',\n\t\t\t'sys_id',\n\t\t\t'short_description',\n\t\t\t'assigned_to',\n\t\t\t'assignment_group',\n\t\t\t'cmdb_ci',\n\t\t\t'related_incidents',\n\t\t\t'state',\n\t\t\t'sys_updated_on',\n\t\t\t'sys_class_name'\n\t\t]\n\t},\n\tMAP_CHANGE_REQUEST_CURRENT,\n\tMAP_CHANGE_REQUEST_PLANNED,\n\tMAP_CHANGE_REQUEST_PAST,\n\tMAP_OUTAGES_CURRENT,\n\tMAP_OUTAGES_PLANNED,\n\tMAP_OUTAGES_PAST\n];\n\n","import {t} from 'sn-translate';\nimport {\n\tsnOpwsRelatedItemsListTypeIds, \n\tsnOpwsRelatedItemsListCardComponents, \n\tsnOpwsRelatedItemsListItemTypes\n} from '@devsnc/library-opws-mapping-shared';\n\n/**\n * Ids of static item types that are displayed on map.\n * This is a base list, it doesn't contain indicator ids.\n */\nexport const TYPE_IDS = {\n\t...snOpwsRelatedItemsListTypeIds,\n\tMAP_TOPO_CHANGES: 'MAP_TOPO_CHANGES'\n};\n\n\nexport const CARD_COMPONENTS = {\n\t...snOpwsRelatedItemsListCardComponents,\n\t[TYPE_IDS.MAP_TOPO_CHANGES]: 'sn-map-change-card',\n\t//TODO hard-code all indicator ids and card-types in here\n};\n\nconst MAP_TOPO_CHANGES = {\n\tid: TYPE_IDS.MAP_TOPO_CHANGES,\n\tisHistory: false,\n\tlabel: t('Changes on Service'),\n\tcardComponentName: CARD_COMPONENTS[TYPE_IDS.MAP_TOPO_CHANGES],\n\tsortOptions: [\n\t\t{\n\t\t\tid: 'time_desc',\n\t\t\tlabel: t('Change time (newest first)'),\n\t\t\tfield: 'time',\n\t\t\torder: 'desc'\n\t\t},\n\t\t{\n\t\t\tid: 'message_asc',\n\t\t\tlabel: t('Description (A-Z)'),\n\t\t\tfield: 'message',\n\t\t\torder: 'asc'\n\t\t}\n\t]\n};\n/**\n * Hard-coded list of static item types that are displayed on map.\n * This is a base list, it doesn't contain indicators, that are added dynamically from map event.\n * Each type should include \n * - id: String\n * - label: translated String\n * - cardComponentName: remember to import the component so it will be registered on DOM.\n * - sortOptions: hardcoded list of all sorting options for the type: [{id, label, order, field}]\n */\nexport const ITEM_TYPES = [\n\t...snOpwsRelatedItemsListItemTypes,\n\tMAP_TOPO_CHANGES\n];\n\nexport const HISTORY_ITEM_TYPES = [\n\t{\n\t\t...MAP_TOPO_CHANGES,\n\t\tisHistory: true\n\t}\n];\n\n","import {get as _get} from 'lodash';\nimport {stringify} from './json';\nimport constants from '../map-shared/constants';\nimport mapEventsWhitelist from './mapEventsWhitelist';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport effectInitHistoryMode from '../behavior-service-history/effectInitHistoryMode';\n\nconst DOM_EVENT_BUS_ID = 'DOM_EVENT_BUS_ID';\nconst EVT_MAP_TO_WORKSPACE = 'EVT_MAP_TO_WORKSPACE';\n//first event dispatched from map to pass seismic-to-map callback.\nconst EVT_CONNECT_MAP_TO_SEISMIC_BUS = 'EVT_CONNECT_MAP_TO_SEISMIC_BUS';\n\n/**\n * Mapping of eventBus objects per each map instance.\n * Mapped by mapId (mapId is unique for each map application and has nothing to do with serviceId):\n * `eventBusElm` - the element inside the map iframe, on which event listeners are set.\n * `connectEventListener` - one time listener that is used t oreceive first ping fro mmap with workspaceEventReceiver() function.\n * `mapEventListener` - original listener function for event arriving from map (EVT_MAP_TO_WORKSPACE).\n * `workspaceEventReceiver` - the fucntion received from hte angular map that should be called to send event back to the map.\n */\nconst contextMap = new Map();\n\nconst connectMapListener = (mapId, dispatch) => event => {\n\tif (!event)\n\t\treturn;\n\n\tconst context = contextMap.get(mapId);\n\tevent.stopPropagation();\n\tevent.stopImmediatePropagation();\n\n\tconst {channelFn, stopMe} = event.detail;\n\tcontext.workspaceEventReceiver = channelFn;\n\tstopMe();\n\n\t//the moment we have event bus connected to the iframe, trigger history mode init (if applicable)\n\tdispatch(effectInitHistoryMode.ACTION_TYPES.MAP_INIT_HISTORY);\n};\n\nconst createMapEventListener = dispatch => event => {\n\tif (!event)\n\t\treturn;\n\n\tevent.stopPropagation();\n\tevent.stopImmediatePropagation();\n\n\tconst {name, args} = event.detail;\n\n\tif (mapEventsWhitelist[name]) {\n\t\tLOGGING.debug(`NOC/MAP: Map event received ${name}, ${stringify(args)}`);\n\t\tdispatch(constants.NOC_EVENT_FROM_MAP_ARRIVED, {name, args});\n\t}\n};\n\nconst getEventBusElement = iframeRef => {\n\tconst iframeElm = iframeRef.current || iframeRef;\n\tconst innerDoc = iframeElm.contentDocument || _get(iframeElm, 'contentWindow.document');\n\tconst currEventBusElm = innerDoc ? innerDoc.getElementById(DOM_EVENT_BUS_ID) : null;\n\n\treturn currEventBusElm || null;\n};\n\nexport const initEventBus = (dispatch, iframeRef, mapId) => {\n\tLOGGING.debug(`NOC/MAP: initEventBus with mapId: ${mapId}`);\n\tconst danglingContext = contextMap.get(mapId);\n    \n\tif (danglingContext)\n\t\tdestroyMapListeners(mapId);\n\n\tconst eventBusElm = getEventBusElement(iframeRef);\n\n\tif (!eventBusElm)\n\t\treturn false;\n\n\n\tconst context = {\n\t\teventBusElm,\n\t\tmapEventListener: createMapEventListener(dispatch),\n\t\tconnectEventListener: connectMapListener(mapId, dispatch)\n\t};\n\n\tcontextMap.set(mapId, context);\n\n\t//listening on custom event with specific name from map.\n\teventBusElm.addEventListener(EVT_MAP_TO_WORKSPACE, context.mapEventListener);\n\n\t//one-time event, waiting for first event from map and receiving callback for seismic-to-map communication\n\teventBusElm.addEventListener(EVT_CONNECT_MAP_TO_SEISMIC_BUS, context.connectEventListener);\n\n\treturn true;\n};\n\nexport const dispatchEventToMap = (eventName, args, mapId) => {\n\tLOGGING.debug(`NOC/MAP: map iframe: Sending event to map ${eventName}, ${stringify(args)}`);\n\tconst context = contextMap.get(mapId);\n\n\tif (!context) {\n\t\tconst e = new Error(`NOC/MAP: dispatchEventToMap could not find context by mapId ${mapId}. From [${eventName}]`);\n\t\tLOGGING.debug(stringify(e.stack));\n\t\treturn;\n\t}\n\n\tconst {workspaceEventReceiver} = context;\n\tif (workspaceEventReceiver) \n\t\tworkspaceEventReceiver(eventName, args);\n    \n};\n\nexport const destroyMapListeners = mapId => {\n\tLOGGING.debug(`NOC/MAP: destroyMapListeners with mapId: ${mapId}`);\n\tconst context = contextMap.get(mapId);\n\n\tif (!context) \n\t\treturn;\n\n\tcontextMap.delete(mapId);\n\tcontext.eventBusElm.removeEventListener(EVT_CONNECT_MAP_TO_SEISMIC_BUS, context.connectEventListener);\n\tcontext.eventBusElm.removeEventListener(EVT_MAP_TO_WORKSPACE, context.mapEventListener);\n};","module.exports = __TECTONIC__$servicenow_ui_effect_http;","import moment from 'moment';\nimport MAP_CONSTANTS from '../map-shared/constants';\n\n\nexport const getEmptyTimelineData = () => ({\n\tevents: [\n\t\t//events are topology changes\n\t],\n\n\tranges: [\n\t\t//ranges are severity changes\n\t],\n\n\t//both ranges are objects with {start: <long>, end: <long>}\n\ttotalRange: null,\n\tdisplayRange: null,\n\n\t//Js:Set() of IDs of selected timeline events, stores state of timeline selection filter.\n\tselectedTimelineEvents: null,\n\t//manage-selections is true, storing selected items here\n\tselectedEvents: [],\n\tselectedRanges: [],\n\n\n\t//IDs of highlighted events.\n\t//This Set allows fast reset of highlighted event w/o full traversal over all visible events.\n\t//Use _eventsIndex to fetch event object.\n\thighlightedEventIds: [],\n\n\t//Map from change object in displayChanges to event object in timelineData.events\n\t//this structure allows O(1) access from change card to change icon on the timeline.\n\t_eventsIndex: new Map()\n});\n\nexport const isHistoryMap = mapHistoryState => \n\t(mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.HISTORY || mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.COMPARE);\n\n/**\n * Given array of history changes for the current displayRange,\n * Returns a value ofor mapHistoryState.\n * @param {*} param0 \n * @param {'HISTORY' | 'COMPARE'} see MAP_CONSTANTS.MAP_HISTORY_STATES\n */\nexport const resolveMapHistoryState = ({displayChanges}) => \n\t!displayChanges || displayChanges.length === 0\n\t\t? MAP_CONSTANTS.MAP_HISTORY_STATES.HISTORY\n\t\t: MAP_CONSTANTS.MAP_HISTORY_STATES.COMPARE;\n\nconst escapeNaN = n => isNaN(Number(n)) ? -1 : Number(n);\n\n/**\n * Escaping of timeline range limits.\n * Timeline range cannot be before the service creation after, and acnnot be in future.\n * start date should be always before the end date.\n * @param {*} param0 \n * @return {{start: Number, end: Number}} - the sanitized range\n */\nexport const sanitizeHistoryRange = ({start, end, serviceCreationTime, upperDateLimit}) => {\n\tconst fixedStart = Math.max(serviceCreationTime, escapeNaN(start));\n\tconst fixedEnd = Math.min(upperDateLimit, escapeNaN(end));\n\n\treturn {\n\t\tstart: Math.min(fixedStart, fixedEnd),\n\t\tend: Math.max(fixedStart, fixedEnd)\n\t};\n};\n\nexport const isRangeIncluded = (included, wrapping) => {\n\t//input validation\n\tif (!included || !wrapping || wrapping.start < 0 || included.start < 0)\n\t\treturn false;\n\n\treturn included.start >= wrapping.start && included.end <= wrapping.end;\n};\n\n/**\n * Time range formatter for debug logs.\n * @param {*} start a timestamp or Date\n * @param {*} end a timestamp or Date\n */\nexport const formatRange = (start, end) => {\n\tconst mStart = moment(start);\n\tconst mEnd = moment(end);\n\tconst duration = moment.duration(mEnd.diff(mStart));\n\n\treturn `${duration.humanize()}: ${mStart.format('MMM-DD HH:mm:ss')} - ${mEnd.format('MMM-DD HH:mm:ss')}`;\n};\n\n/**\n * Forcing timeline refresh (rendering) is useful after the contianer has changed its size or visibility,\n * and the timeline needs to resize itself.\n * @param updateProperties {Function} - must be the updateProperties function for the map-container component.\n */\nexport const forceTimelineRefresh = updateProperties =>\n\tupdateProperties(({properties}) => {\n\t\tconst {highlightedEventIds} = properties.timelineData;\n\t\treturn {\n\t\t\toperation: 'assign',\n\t\t\tpath: 'timelineData',\n\t\t\tvalue:{\n\t\t\t\t//adding meaningless item to highlightedEventIds t otrigger difference in the timeline input props.\n\t\t\t\thighlightedEventIds: [...highlightedEventIds, -1]\n\t\t\t} \n\t\t};\n\t});","import {t} from 'sn-translate';\nimport {camelCase as _camelCase} from 'lodash';\n\n//Shorthands for tiem conversion into timestamps\nconst UNITS = {\n\tSECOND: 1000,\n\tMINUTE: 1000 * 60,\n\tHOUR: 1000 * 60 * 60,\n\tDAY: 1000 * 60 * 60 * 24,\n\tWEEK: 1000 * 60 * 60 * 24 * 7,\n\tMONTH: 1000 * 60 * 60 * 24 * 30\n};\n\nconst TIMELINE_ITEM_TYPES = {\n\tBS_CREATED: 'TIMELINE_START', //only service creation/timeline start (single bubble)\n\tTOPOLOGY: 'TOPOLOGY', //added/removed CIs\n\tCI: 'CI', //modified properties in CI\n\tINFRA_PATH: 'INFRA_PATH', //storage and network path\n\tSEVERITY: 'SEVERITY' //service severity ranges\n};\n\nconst TIMELINE_TYPE_TO_BUBBLE_GROUP = {\n\t[TIMELINE_ITEM_TYPES.TOPOLOGY]: TIMELINE_ITEM_TYPES.TOPOLOGY,\n\t[TIMELINE_ITEM_TYPES.CI]: TIMELINE_ITEM_TYPES.TOPOLOGY,\n\t[TIMELINE_ITEM_TYPES.INFRA_PATH]: TIMELINE_ITEM_TYPES.TOPOLOGY,\n\t// APPROVED_CHANGE: 'APPROVED_CHANGE' //Not in use for Paris\n};\n\nconst DEFAULT_BUBBLE_ICON = {\n\ticon: _camelCase('change-outline')\n};\n\nconst DEFAULT_CHANGE_LABELS = {\n\tlabel: t('map history change'),\n\tlabelPlural: t('map history changes')\n};\n\nexport default {\n\tUNITS,\n\tDEFAULT_RANGE_PERIOD: UNITS.WEEK,\n\tACTION_TIMELINE_DISPLAY_RANGE_UPDATED: 'TIMELINE_CHART#DISPLAY_RANGE_UPDATED',\n\tEVT_DISABLE_PULLING_MANAGER: 'sa_pulling_manager_disable',\n\tEVT_ENABLE_PULLING_MANAGER: 'sa_pulling_manager_enable',\n\tEVT_STOP_MASHUPS: 'ws.stop_mashups',\n\tEVT_RESUME_MASHUPS: 'ws.resume_mashups',\n\n\tTIMELINE_ITEM_TYPES,\n\n\tTIMELINE_TYPE_TO_BUBBLE_GROUP,\n\n\t//bubble style contains `icon` and `color` proeprties\n\tBUBBLE_STYLE: {\n\t\t[TIMELINE_ITEM_TYPES.BS_CREATED]: {\n\t\t\ticon: _camelCase('circle-arrow-down-outline')\n\t\t},\n\t\t[TIMELINE_TYPE_TO_BUBBLE_GROUP.TOPOLOGY]: DEFAULT_BUBBLE_ICON,\n\t\t//Not in use for Paris\n\t\t// [TIMELINE_TYPE_TO_BUBBLE_GROUP.APPROVED_CHANGE]: { \n\t\t// \t...DEFAULT_BUBBLE_ICON,\n\t\t// \t// color: '#629136' //FIXME: cannot pass here design-system variable. Cannot set color, need a solution on timeline level\n\t\t// }\n\t},\n\n\tCHANGE_LABELS: {\n\t\t[TIMELINE_ITEM_TYPES.BS_CREATED]: {\n\t\t\tlabel: t('Service creation')\n\t\t},\n\t\t[TIMELINE_TYPE_TO_BUBBLE_GROUP.TOPOLOGY]: DEFAULT_CHANGE_LABELS\n\t},\n\n\tSEVERITY_LABELS: {\n\t\t1: t('Critical service severity'),\n\t\t2: t('Major service severity'),\n\t\t3: t('Minor service severity'),\n\t\t4: t('Warning service severity'),\n\t\t5: t('OK service severity')\n\t},\n\n\tPAN_STEP: 10,\n\tZOOM_STEP: 25\n};\n","import constants from '../map-shared/constants';\nimport {dispatchEventToMap} from './eventBus';\n\nconst ACTION_TYPES = {\n\tNOC_EVENT_TO_MAP_SENT: constants.NOC_EVENT_TO_MAP_SENT,\n\n\t//events that are sent from siesmic to the angular map\n\n\t//mark elements on map by CI/element id.\n\t'sa.markNodes': 'sa.markNodes',\n\n\t//reset current selections on the map\n\t'sa.clearAllSelections': 'sa.clearAllSelections',\n\n\t//sets a schedule to fit map to screen after next rendering.\n\tEVT_SCHEDULE_FIT_TO_SCREEN: 'snc.scheduleFitToScreen',\n\n\t//request to re-render the map.\n\tEVT_LAYOUT_REAPPLIED: 'snc.layoutReapplied',\n};\n\nconst sendEventToMapHandler = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tname,\n\t\t\t\targs\n\t\t\t}\n\t\t}, \n\t\tproperties: {\n\t\t\tmapId\n\t\t}\n\t} = coeffects;\n    \n\tdispatchEventToMap(name, args, mapId);\n};\n\nconst effectHandlers = {\n\tsendEventToMapHandler\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {isArray as _isArray} from 'lodash';\nimport {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, checkForError, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport timelineConstants from './timelineConstants';\nimport MAP_CONSTANTS from '../map-shared/constants';\n\nconst {TIMELINE_ITEM_TYPES} = timelineConstants;\n\nconst ACTION_TYPES = {\n\tMAP_HISTORY_DATA_REQUEST: 'MAP_HISTORY_DATA_REQUEST',\n\tMAP_HISTORY_DATA_REQUEST_SUCCEEDED: 'MAP_HISTORY_DATA_REQUEST_SUCCEEDED',\n\tMAP_HISTORY_DATA_REQUEST_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n\tMAP_HISTORY_DATA_SET: 'MAP_HISTORY_DATA_SET'\n};\n\nconst getHistoryData = createHttpEffect('/api/sn_itom_map_app/embedded_map/timeline', {\n\tmethod: 'GET',\n\tbatch: false,\n\tqueryParams: ['serviceId', 'startTime', 'endTime', 'showSeverity'],\n\tsuccessActionType: ACTION_TYPES.MAP_HISTORY_DATA_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.MAP_HISTORY_DATA_REQUEST_FAILED\n});\n\n/**\n * Reducer function to run with reduce on timelineData response.\n * @param {*} timelineData - {changes: {}, severities: {}}.\n * * lastSeverityTimestamp - holds timestamp of latest bubble of type SEVERITY.\n * * Changes are mapped by bubble change, transformed later to the array of categories.\n * * Severities are mapped by severity codes here,  transformed later to the array of categories.\n * @param {*} bubble\n */\nconst reduceTimelineData = ({changes, severities, prevTimestamp, serviceCreationTime}, bubble) => {\n\tconst {type, time: timestamp} = bubble;\n\n\tconst next = {\n\t\tchanges,\n\t\tseverities,\n\t\tprevTimestamp,\n\t\tserviceCreationTime\n\t};\n\n\tif (type === TIMELINE_ITEM_TYPES.SEVERITY) {\n\t\tnext.severities.push({\n\t\t\tdata: bubble,\n\t\t\tstart: timestamp,\n\t\t\tend: prevTimestamp\n\t\t});\n\n\t\treturn {\n\t\t\t...next,\n\t\t\tprevTimestamp: timestamp\n\t\t};\n\t}\n\n\t//else: a timeline event\n\n\t//use service creation bubble to update serviceCreationTime, and don't add it on the timeline changes\n\tif (type === TIMELINE_ITEM_TYPES.BS_CREATED)\n\t\tnext.serviceCreationTime = timestamp;\n\n\telse\n\t\tnext.changes.push(bubble);\n\n\treturn next;\n};\n\nconst historyDataResponse = coeffects => {\n\tconst {\n\t\taction: {payload},\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tupdateState,\n\t\tproperties: {\n\t\t\tserviceCreationTime: storedServiceCreationTime\n\t\t}\n\t} = coeffects;\n\n\tif (checkForError({payload, dispatch, caller: 'historyDataResponse'})) \n\t\treturn;\n\n\tconst {\n\t\trequestedRange,\n\t\thistoryData\n\t} = payload;\n\n\tif (!_isArray(historyData)) {\n\t\tLOGGING.error('Expected array of historyData from the timeline API. Skipping...', {caller: 'historyDataResponse'});\n\n\t\tupdateState({loadingState: MAP_CONSTANTS.LOADING_STATES.ERROR});\n\t\treturn;\n\t}\n\t\t\n\n\tconst rawTimelineData = historyData.reduceRight(reduceTimelineData, {\n\t\tchanges: [],\n\t\tseverities: [],\n\t\t//TODO `end` of the last range should be set to `displayEndDate` or `endDate` of the timeline range\n\t\tprevTimestamp: Number.POSITIVE_INFINITY,\n\t\tserviceCreationTime: storedServiceCreationTime\n\t});\n\n\tconst {changes, severities, serviceCreationTime} = rawTimelineData;\n\n\t//both arrays are flipped because of `reduceRight`.\n\t//restore original order by time\n\tchanges.reverse();\n\tseverities.reverse();\n\n\tupdateProperties({\n\t\tcurrDataRange: requestedRange,\n\t\tallChanges: changes,\n\t\tseverityRanges: severities,\n\t\tserviceCreationTime\n\t});\n\n\tdispatch(() => ({type: ACTION_TYPES.MAP_HISTORY_DATA_SET}));\n};\n\nconst effectHandlers = {\n\tgetHistoryData,\n\thistoryDataResponse\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import mapSettingsModifiedEffect from './mapSettingsModifiedEffect';\nimport mapToggleSettingsEffect from './mapToggleSettingsEffect';\nimport {createActionConfig} from '@devsnc/library-opws-mapping-shared';\n\nexport const mapSettingsMenuBehavior = {\n\tname: 'mapSettingsMenuBehavior',\n\tactionHandlers: {\n\t\t[mapSettingsModifiedEffect.ACTION_TYPES.NOC_SETTINGS_MODIFIED_EVENT]:\n\t\t\tcreateActionConfig(mapSettingsModifiedEffect.effectHandlers.mapSettingsModifiedEffect),\n\n\t\t[mapToggleSettingsEffect.ACTION_TYPES.MAP_TOGGLE_SETTINGS_VIEW]:\n\t\t\tcreateActionConfig(mapToggleSettingsEffect.effectHandlers.mapToggleSettingsEffect),\n\n\t\t'NOW_MODAL#OPENED_SET': \n\t\t\tcreateActionConfig(mapToggleSettingsEffect.effectHandlers.mapSettingsModalClosedEffect)\n\t}\n};\n\nexport const ACTION_TYPES = { \n\t...mapSettingsModifiedEffect.ACTION_TYPES,\n\t...mapToggleSettingsEffect.ACTION_TYPES\n};","/**\n * These effects manage REST API request to bring topology changes when map is in current view.\n * Last changes on the service dispalyed, limited to 1 page.\n * The period of changes defaults to 1 week and can be configured with sys_property \"noc_map.topo_changes_range\" in days.\n */\nimport {\n\tget as _get, \n\tmapKeys as _mapKeys, \n\tidentity as _identity, \n\tsortBy as _sortBy\n} from 'lodash';\n\nimport {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {TYPE_IDS, ITEM_TYPES} from '../map-shared/itemTypes';\n\nimport {\n\tCONSTANTS, \n\tLOGGING, \n\tcheckForError, \n\tdisplayTimestamp\n} from '@devsnc/library-opws-mapping-shared';\nimport MAP_CONSTANTS from '../map-shared/constants';\n\nconst {RELATED_ITEMS_PAGE_SIZE} = CONSTANTS.DEFAULTS;\nconst SORT_OPTIONS = ITEM_TYPES.find(type => type.id === TYPE_IDS.MAP_TOPO_CHANGES).sortOptions;\n\nconst ACTION_TYPES = {\n\tGET_HISTORY_CHANGES_REQUEST: 'GET_HISTORY_CHANGES_REQUEST',\n\tGET_HISTORY_CHANGES_REQUEST_STARTED: 'GET_HISTORY_CHANGES_REQUEST_STARTED',\n\tGET_HISTORY_CHANGES_REQUEST_SUCCEEDED: 'GET_HISTORY_CHANGES_REQUEST_SUCCEEDED',\n\tGET_HISTORY_CHANGES_REQUEST_FAILED: 'GET_HISTORY_CHANGES_REQUEST_FAILED',\n};\n\nconst CONVERT_DAY_TO_MS = 1000 * 60 * 60 * 24; \nexport const DEFAULT_RANGE_DAYS = 7;\n\nexport const getMapChangeItems = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tupdateState,\n\t\tproperties: {\n\t\t\tserviceId,\n\t\t\tuserMeta: {topologyChangesRange},\n\t\t\trelatedItemIds\n\t\t},\n\t\tstate: {\n\t\t\ttopoChangesItemsCache\n\t\t},\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tselectedType,\n\t\t\t\tforceRefresh\n\t\t\t}\n\t\t}\n\t} = coeffects;\n\t\n\tif (selectedType && selectedType.id !== TYPE_IDS.MAP_TOPO_CHANGES) {\n\t\tLOGGING.warn(`getMapChangeItems: effect called and did nothing, \n\t\tbecause expected typeId ${TYPE_IDS.MAP_TOPO_CHANGES}, but got ${selectedType && selectedType.id}`);\n\n\t\treturn;\n\t}\n\n\tconst updatedTimestamp = _get(relatedItemIds, `[${TYPE_IDS.MAP_TOPO_CHANGES}].urlData.timestamp`);\n\tconst currentTimestamp = topoChangesItemsCache.timestamp || null;\n\t\n\tif (!forceRefresh && currentTimestamp && currentTimestamp === updatedTimestamp && topoChangesItemsCache.items) {\n\t\t//retrieving cached items, skipping request.\n\t\tdispatch(ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_SUCCEEDED, topoChangesItemsCache.items);\n\t\treturn;\n\t} \n\n\tconst range = CONVERT_DAY_TO_MS * (Number(topologyChangesRange) || DEFAULT_RANGE_DAYS);\n\tconst endTime = Date.now();\n\tconst startTime = endTime - range;\n\n\tupdateState({\n\t\toperation: 'set',\n\t\tpath: 'topoChangesItemsCache.timestamp',\n\t\tvalue: updatedTimestamp\n\t});\n\n\tupdateProperties({cardsAreLoading: true});\n\n\tdispatch(() => ({\n\t\ttype: ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST,\n\t\tpayload: {serviceId, startTime, endTime}\n\t}));\n};\n\n\nconst getHistoryChanges = createHttpEffect('/api/sn_itom_map_app/embedded_map/changes', {\n\tmethod: 'GET',\n\tqueryParams: ['serviceId', 'startTime', 'endTime'],\n\tstartActionType: ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_FAILED\n});\n\nconst filterByCiIds = (ciIdsLookup, change) => (change && ciIdsLookup[change.ciId]);\n\nconst generateItem = (userMeta, change = {}) => {\n\tconst {\n\t\ttz,\n\t\tdateTimeFormat\n\t} = userMeta;\n\n\tconst {\n\t\tid,\n\t\tmessage: description = '',\n\t\ttime: timestamp = -1,\n\t\tciId\n\t} = change;\n\n\tif (!change.id) {\n\t\tLOGGING.warn(`Expected change object to have id, got ${id}`);\n\t\treturn null;\n\t}\n\n\tconst time = displayTimestamp(timestamp, tz, dateTimeFormat);\n\n\treturn {\n\t\tid,\n\t\tdescription,\n\t\ttime,\n\t\tciId\n\t};\n};\n\nconst filterChangeCards = ({changes, ciIdsLookup}) => {\n\tconst filtered = ciIdsLookup ? \n\t\tchanges.filter(filterByCiIds.bind(null, ciIdsLookup)) : \n\t\tchanges;\n\n\treturn filtered;\n};\n\n/**\n * Formats change items returned from service into `items` array ready for the items-list.\n * @param {*} args:\n * `changes` - returned payload fro mteh server - array of change items DTOs.\n * `ciIdsLookup` - set (object) of CIs to filter by.\n * `sortConfig` - currently selected sorting option - the object with `field` and `order`.\n */\nconst formatChangeCards = ({filteredChanges, sortConfig, userMeta}) => {\n\tconst sorted = sortConfig ? \n\t\t_sortBy(filteredChanges, sortConfig.field) : \n\t\tfilteredChanges;\n\n\tif (sortConfig && sortConfig.order === 'desc')\n\t\tsorted.reverse();\n\n\tconst items = sorted\n\t\t.slice(0, RELATED_ITEMS_PAGE_SIZE)\n\t\t.map(generateItem.bind(null, userMeta))\n\t\t.filter(Boolean);\n\n\treturn items;\n};\n\nconst historyChangesResponse = coeffects => {\n\tLOGGING.log('historyChangesResponse');\n\tconst {\n\t\tdispatch,\n\t\tupdateState,\n\t\tupdateProperties,\n\t\taction: {\n\t\t\tpayload: changes\n\t\t},\n\t\tstate: {\n\t\t\trelatedItemsRefreshParams: {\n\t\t\t\tselectedSortOption\n\t\t\t}\n\t\t},\n\t\tproperties: {\n\t\t\trelatedItemIds,\n\t\t\tuserMeta,\n\t\t\ttimelineData: {\n\t\t\t\tselectedTimelineEvents = null\n\t\t\t}\n\t\t}\n\t} = coeffects;\n\n\tconst errors = checkForError({payload: changes, dispatch, caller: 'historyChangesResponse'});\n\tif (errors) {\n\t\tupdateState({\n\t\t\ttopoChangesItemsCache: {}\n\t\t});\n\t\tupdateProperties({cardsAreLoading: false});\n\t\treturn;\n\t}\n\n\tconst ciIds = _get(relatedItemIds, `${TYPE_IDS.MAP_TOPO_CHANGES}.urlData.ciFilter`, null);\n\tconst ciIdsLookup = ciIds ? _mapKeys(ciIds, _identity) : null;\n\tconst sortConfig = SORT_OPTIONS.find(option => option.id === selectedSortOption);\n\n\tconst filteredChanges = filterChangeCards({changes, ciIdsLookup});\n\tconst items = formatChangeCards({filteredChanges, sortConfig, userMeta});\n\tupdateState({\n\t\toperation: 'set',\n\t\tpath: 'topoChangesItemsCache.items',\n\t\tvalue: changes\n\t});\n\n\tupdateProperties({\n\t\tcardsAreLoading: false,\n\t\tfilteredItems: filteredChanges,\n\t\trelatedItemsResponse: {\n\t\t\titems,\n\t\t\tlastUpdated: Date.now(), //this attribute is not in use when map is in history mode. Only for refresh functionality.\n\t\t\ttotalRecords: filteredChanges.length,\n\t\t\t//detecting the filter state for the side panel. Assuming that map element selection and timeline event selection never overlap (cancel out).\n\t\t\tfilterApplied: {\n\t\t\t\ttype: ciIdsLookup ? MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP : \n\t\t\t\t\tselectedTimelineEvents !== null ? \n\t\t\t\t\t\tMAP_CONSTANTS.CONTEXT_SELECTION_STATES.TIMELINE : \n\t\t\t\t\t\tnull\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst historyChangesFailure = coeffects => {\n\tLOGGING.log('historyChangesFailure');\n\n\tconst {\n\t\tupdateState,\n\t\tupdateProperties,\n\t\tdispatch,\n\t\taction: {\n\t\t\tpayload\n\t\t}\n\t} = coeffects;\n\n\tupdateState({\n\t\ttopoChangesItemsCache: {}\n\t});\n\n\tupdateProperties({cardsAreLoading: false});\n\t\n\tdispatch(() => ({\n\t\ttype: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED, \n\t\tpayload\n\t}));\n};\n\nconst effectHandlers = {\n\tgetMapChangeItems,\n\tgetHistoryChanges,\n\thistoryChangesResponse,\n\thistoryChangesFailure\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\nimport {TYPE_IDS} from './itemTypes';\nimport {set as _set, get as _get} from 'lodash';\nimport sendEventToMapEffect from '../map-container/sendEventToMapEffect';\n\nconst {\n\tNOC_EVENT_TO_MAP_SENT,\n\t'sa.clearAllSelections': clearAllSelections\n} = sendEventToMapEffect.ACTION_TYPES;\n\nexport const clearCardSelection = dispatch => \n\tdispatch(()=> ({\n\t\ttype: snOpwsRelatedItemsListActionTypes.CARD_SELECTED,\n\t\tpayload : {}\n\t}));\n\nexport const clearMapSelection = dispatch => \n\tdispatch(NOC_EVENT_TO_MAP_SENT, {name: clearAllSelections});\n\n/**\n * Clears selection and highlight states on the timeline.\n * This also re-renders the timeline component.\n * @param {Function} updateProperties \n */\n//TODO STRY50597927 reset also highlighted events\nexport const clearTimelineSelections = updateProperties =>\n\tupdateProperties(() => ({\n\t\toperation: 'assign',\n\t\tpath: 'timelineData',\n\t\tvalue: {\n\t\t\tselectedEvents: [],\n\t\t\tselectedRanges: [],\n\t\t\tselectedTimelineEvents: null,\n\t\t\thighlightedEventIds: []\n\t\t}\n\t}));\n\nconst clearTimelineHighlight = updateProperties =>\n\tupdateProperties(() => ({\n\t\toperation: 'set',\n\t\tpath: 'timelineData.highlightedEventIds',\n\t\tvalue: []\n\t}));\n/**\n * This function centralizes the selection states in the way that the cardds list can have only one applied filter: ciFilter or selectedTimelineEvents.\n */\nexport const setHistoryChangesFilter = ({\n\tdispatch,\n\tupdateProperties, \n\titemType = TYPE_IDS.MAP_TOPO_CHANGES,\n\trelatedItemIds = null,\n\tselectedTimelineEvents = null,\n\tcurrItemIds,\n\tselectedEvents = [],\n\tselectedRanges = []\n}) => {\n\t//both map selection and timeline selection need to clear change cards selection as a prerequisite\n\tclearCardSelection(dispatch);\n\t\n\t//click on the map\n\tif(selectedTimelineEvents === null || selectedTimelineEvents.size === 0) {\n\t\t//TODO: due to DEF0091487, not using path for now. Need to migrate to seismic@18.2.0 and re-test\n\t\tupdateProperties({\n\t\t\trelatedItemIds: {\n\t\t\t\t...currItemIds,\n\t\t\t\t[itemType]: relatedItemIds\n\t\t\t}\n\t\t});\n\t\t\n\t\tconst ciFilter = _get(relatedItemIds, 'urlData.ciFilter');\n\t\t\n\t\t/**\n\t\t * This point requires synchronization between all possible flows:\n\t\t * * CI selected on the map: `relatedItemIds!=null` and `ciFilter!=null`: clear current tiemline selection\n\t\t * * Empty canvas selected on the map: `relatedItemIds!=null` and `ciFilter==null`: clear timeline highlight only, keep selection\n\t\t * * Timeline selected triggers CI de-selected on the map, then `relatedItemIds!=null` and `ciFilter==null`: not clearing timeline selection, highlight cleared.\n\t\t * * Timeline de-selected: `relatedItemIds==null` and `ciFilter==null`: clearing timeline model\n\t\t */\n\t\t\n\t\tif (!relatedItemIds || (relatedItemIds && ciFilter))\n\t\t\tclearTimelineSelections(updateProperties);\n\n\t\telse if (relatedItemIds && !ciFilter)\n\t\t\tclearTimelineHighlight(updateProperties);\n\t\t\n\t} else { //click on the timeline: setting timeline selection and clearing timeline highlight\n\t\t_set(currItemIds, `['${itemType}'].urlData.ciFilter`, null);\n\t\tupdateProperties({relatedItemIds: currItemIds});\n\n\t\tupdateProperties(() => ({\n\t\t\toperation: 'assign',\n\t\t\tpath: 'timelineData',\n\t\t\tvalue: {\n\t\t\t\tselectedEvents,\n\t\t\t\tselectedRanges,\n\t\t\t\tselectedTimelineEvents,\n\t\t\t\thighlightedEventIds: []\n\t\t\t}\n\t\t}));\n\t}\n\n\n};\n","import {getIndicatorsSection} from '../map-header-panel/settingsMenuSections';\n\nconst MAP_EVENT_NAMES = {\n\t//this event sends object wit hsw-options-popover controls by reference.\n\t//this object has original AngularJs functions to execute actions (toggles/buttons)\n\tEVT_WS_OPTIONS_POPOVER_CONTROLS_TRANSFER: 'EVT_WS_OPTIONS_POPOVER_CONTROLS_TRANSFER',\n\n\t//Change in any indicator toggle\n\t'sa.mashupStateChanged':'sa.mashupStateChanged',\n\n\t//host view toggle\n\t'sa.hostViewStateChanged': 'sa.hostViewStateChanged',\n\n\t//Group CIs toggle\n\t'sa.autoGroupingViewStateChanged': 'sa.autoGroupingViewStateChanged',\n\n\t//Show Traffic-based toggle\n\t'sa.trafficBaseDiscoveryStateChanged': 'sa.trafficBaseDiscoveryStateChanged',\n\n\t//Spanning tree view toggle\n\t'sa.shortestPathViewStateChanged': 'sa.shortestPathViewStateChanged'\n};\n\nconst ACTION_TYPES = {\n\tNOC_SETTINGS_MODIFIED_EVENT: 'NOC_SETTINGS_MODIFIED_EVENT', //when event with mapSettings arrvies from map\n\tMAP_SETTINGS_SET: 'MAP_SETTINGS_MENU_BEHAVIOR#MAP_SETTINGS_SET' //when 'mapSettings' property has been set on map-container.\n};\n\nconst setIndicatorIds = indicatorIds => {\n\tif (!indicatorIds)\n\t\treturn;\n\t\n\tconst indicatorsSection = getIndicatorsSection();\n\n\tif (!indicatorsSection) \n\t\treturn;\n\n\tindicatorsSection.keys = indicatorIds;\n};\n\nconst mapSettingsModifiedEffect = coeffects => {\n\tconst {\n\t\tstate: {mapSettings},\n\t\tupdateState,\n\t\tdispatch, \n\t\taction\n\t} = coeffects;\n\n\tconst {name, args} = action.payload;\n\tlet newMapSettings = mapSettings;\n\n\tif (name === MAP_EVENT_NAMES.EVT_WS_OPTIONS_POPOVER_CONTROLS_TRANSFER) {\n\t\tnewMapSettings = {\n\t\t\t...mapSettings,\n\t\t\tmodel: {...args[0]}\n\t\t};\n\n\t\tsetIndicatorIds(newMapSettings.model.indicatorsIds);\n\n\t} else if (MAP_EVENT_NAMES[name]) {\n\t\t//bump state to re-render settings form.\n\t\tnewMapSettings = {...mapSettings};\n\t}\n\n\tupdateState({mapSettings: newMapSettings});\n\n\tdispatch(() => ({type: ACTION_TYPES.MAP_SETTINGS_SET}));\n};\n\n\nconst effectHandlers = {\n\tmapSettingsModifiedEffect\n};\n\nexport default {\n\tMAP_EVENT_NAMES,\n\tACTION_TYPES,\n\teffectHandlers\n};","module.exports = __TECTONIC__$servicenow_now_label_value;","module.exports = __TECTONIC__$servicenow_now_heading;","import {t} from 'sn-translate';\nimport {get as _get, truncate as _truncate} from 'lodash';\nimport moment from 'moment';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {isHistoryMap} from '../behavior-service-history/timelineFunctors';\nimport '@servicenow/now-label-value';\nimport '@servicenow/now-image';\nimport '@servicenow/now-heading';\nimport '@devsnc/library-opws-mapping-shared'; //noc-element-with-tooltip\n\nconst CI_TYPE_ICON_SZ = 24; //px, aligned with now-icon size='lg'\nconst LABEL_TRUNCATION_LIMIT = 50;\nconst LABEL_TRUNCATION_LIMIT_SHORT = 25;\n\nconst LABEL_PROPERTIES_HEADER = t('Properties');\nconst LABEL_RELATED_ITEMS_HEADER = t('Related items');\n\nconst LABEL_PROPERTIES_HISTORY_HEADER = t('Properties history');\nconst LABEL_RELATED_ITEMS_HISTORY_HEADER = t('Change history');\n\nconst HOST_LABEL_FORMAT = t(`on ${'HOST_LABEL'}`);\nconst CI_AND_HOST_LABEL_FORMAT = t(`${'CI_LABEL'} on ${'HOST_LABEL'}`);\nconst LABEL_NAME = t('Name');\n\nconst TITLE_RELATED_ITEMS = t(`Related items for ${'CI_TYPE'}`);\nconst TITLE_CHANGES = t(`Change history for ${'CI_TYPE'}`);\nconst TITLE_PROPERTIES = t(`Properties of ${'CI_TYPE'}`);\nconst TITLE_PROPERTIES_HISTORY_OF = t(`Properties history for ${'CI_TYPE'}`);\n\nconst TITLE_SINGLE_CHANGE_SELECTED = t('1 change selected');\nconst TITLE_CHANGES_SELECTED = t(`${'COUNT'} changes selected`); \nconst LABEL_ON = t('On');\nconst LABEL_STARTING = t('Starting');\nconst LABEL_ENDING = t('Ending');\n\nconst getLabelJsx = ({label, onClick, className = '', tooltip = ''}) => {\n\tconst jsx = onClick ? \n\n\t\t<now-text-link\n\t\t\tclassName={className}\n\t\t\tlabel={label}\n\t\t\ton-click={onClick}\n\t\t\thref='javascript:void(0)'\n\t\t\tvariant='secondary'/> : \n\n\t\t<label className={className}>{label}</label>;\n\n\treturn tooltip ? (\n\t\t<noc-element-with-tooltip tooltip={tooltip}>\n\t\t\t{jsx}\n\t\t</noc-element-with-tooltip>\n\t) :\n\t\tjsx;\n};\n\nconst openCiFormHandler = ({serviceId, sections = [], sectionId, dispatch}) => {\n\tconst section = sections.find(section => section.id === sectionId);\n\n\tif (!section)\n\t\treturn null;\n\n\t//Endpoint/entry-point types don't have user-friendly forms. Preventing links.\n\tif (isEndpoint({section}))\n\t\treturn null;\n\n\tconst tableName = _get(section, 'data.Class.value', '');\n\n\tconst {sys_id: sysId} = section;\n\n\tif (!tableName || !sysId) \n\t\treturn null;\n\n\treturn () => \t\n\t\tdispatch('ITEM_SELECTED', {\n\t\t\ttable: tableName,\n\t\t\tsys_id: sysId,\n\t\t\tparent_table: 'cmdb_ci_service_discovered',\n\t\t\tparent_sys_id: serviceId\n\t\t});\n};\n\nconst formatHostLabelText = (ciLabel, hostLabel) => {\n\tif (!hostLabel)\n\t\treturn ' ';\n\n\tif (!ciLabel)\n\t\treturn hostLabel;\n\t\t\n\treturn HOST_LABEL_FORMAT.replace('HOST_LABEL', hostLabel);\n};\n\nconst getCiRelatedHeader = ({serviceId, mapProperties, dispatch}) => {\n\tif (!mapProperties)\n\t\treturn null;\n\n\tconst {\n\t\ticon,\n\t\tname: hostLabel,\n\t\ttype: ciLabel,\n\t\tsections = []\n\t} = mapProperties;\n\n\tif (!ciLabel && !hostLabel)\n\t\treturn null;\n\n\tconst hostLabelFormatted = formatHostLabelText(ciLabel, hostLabel);\n\n\tconst ciTypeAlt = getCiType(mapProperties);\n\tconst iconImage = icon ?\n\t\t<now-image \n\t\t\tclassName='now-m-inline-end--sm'\n\t\t\tsrc={icon} \n\t\t\talt={ciTypeAlt} \n\t\t\theight={CI_TYPE_ICON_SZ} \n\t\t\twidth={CI_TYPE_ICON_SZ} \n\t\t\tfit='contain' \n\t\t\tposition='left'/> : \n\t\tnull;\n\n\tconst ciFormHandler = openCiFormHandler({\n\t\tserviceId, \n\t\tsections, \n\t\tsectionId: 'sa_ci_properties_Application', \n\t\tdispatch\n\t});\n\t\n\tconst hostFormHandler = openCiFormHandler({\n\t\tserviceId, \n\t\tsections, \n\t\tsectionId: 'sa_ci_properties_Server', \n\t\tdispatch\n\t});\n\n\tconst truncatedCiLabel = _truncate(ciLabel || '', LABEL_TRUNCATION_LIMIT);\n\tconst truncatedHostLabel = _truncate(hostLabelFormatted || '', LABEL_TRUNCATION_LIMIT);\n\t\n\tconst ciLabelJsx = ciLabel ? \n\t\tgetLabelJsx({\n\t\t\tlabel: truncatedCiLabel,\n\t\t\ttooltip: (ciLabel === truncatedCiLabel) ? '' : ciLabel,\n\t\t\tonClick: ciFormHandler, \n\t\t\tclassName: 'now-align -block-start font-md'\n\t\t}) : \n\t\tnull;\n\n\tconst hostLabelJsx = getLabelJsx({\n\t\tlabel: truncatedHostLabel,\n\t\ttooltip: (hostLabelFormatted === truncatedHostLabel) ? '' : hostLabelFormatted,\n\t\tonClick: hostFormHandler, \n\t\tclassName: ciLabel ? 'now-align -block-end font-sm' : 'now-align -block-center font-md'\n\t});\n\n\treturn {\n\t\ticonImage,\n\t\tciLabelJsx,\n\t\thostLabelJsx\n\t};\n};\n\n/**\n * Sub-case of secondary title for the cards panel, when timeline applies the filter.\n * @param {Number} count - total number of cards to appear on the panel.\n */\nconst getSelectedChangesSummary = count => \n\t(count === 0) ? '' : \n\t\t(count === 1) ? \n\t\t\tTITLE_SINGLE_CHANGE_SELECTED : \n\t\t\tTITLE_CHANGES_SELECTED.replace('COUNT', count);\n\n/**\n * Secondary title appears only when the panel has filter applied.\n * This function returns text for secondary title for the cards panel.\n * @param {Object} \n * `filterType` - the type of the filtering that is applied on the panel.\n * `mapHistoryState` - current history state of the map.\n * `ciType` - currently selected CI type, or null\n * @returns {string} - translated text for the secondary title.\n */\nconst getItemsSecondaryTitle = ({filterType, mapHistoryState, ciType, items}) => {\n\tif (!filterType)\n\t\treturn '';\n\n\tif (filterType === MAP_CONSTANTS.CONTEXT_SELECTION_STATES.TIMELINE)\n\t\treturn getSelectedChangesSummary(items.length);\n\n\tif (ciType) {\n\t\treturn (mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT ?\n\t\t\tTITLE_RELATED_ITEMS : \n\t\t\tTITLE_CHANGES)\n\t\t\t.replace('CI_TYPE', ciType);\n\t}\n\n\treturn (mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT ?\n\t\tLABEL_RELATED_ITEMS_HEADER : \n\t\tLABEL_RELATED_ITEMS_HISTORY_HEADER);\n};\n\n/**\n * Secondary title appears only when the panel has filter applied.\n * This function returns text for secondary title for the map roperties panel.\n * @param {object}\n * `filterType` - the type of the filtering that is applied on the panel.\n * Only to return no title if the filtering type is not 'MAP'.\n * \n * `mapHistoryState` - current history state of the map.\n * `ciType` - currently selected CI type, or null\n * @returns {string} - translated text for the secondary title.\n */\nconst getPropertiesSecondaryTitle = ({filterType, mapHistoryState, ciType}) => {\n\tif (filterType !== MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP)\n\t\treturn '';\n\n\t//cannot resolve ci type, return generic title\n\tif (!ciType) {\n\t\treturn mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT ? LABEL_PROPERTIES_HEADER : \n\t\t\tisHistoryMap(mapHistoryState) ? LABEL_PROPERTIES_HISTORY_HEADER : '';\n\t}\n\n\tconst typedTitle = mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT ? TITLE_PROPERTIES : \n\t\tisHistoryMap(mapHistoryState) ? TITLE_PROPERTIES_HISTORY_OF : '';\n\n\treturn typedTitle.replace('CI_TYPE', ciType);\n};\n\n/**\n * Returns text for the CI label.\n * Resolves app CI and host CI labels for all possible combinations, and returns the translated label.\n * @param {*} mapProperties \n * @returns {String}\n */\nconst buildCiLabel = (mapProperties, truncate = true) => {\n\tconst truncator = truncate ? _truncate : text => text;\n\n\tif (isEndpoint({mapProperties}))\n\t\treturn '';\n\n\tconst {\n\t\tname: hostLabel,\n\t\ttype: ciLabel\n\t} = mapProperties || {};\n\n\tif (!ciLabel && !hostLabel)\n\t\treturn '';\n\n\tif (!hostLabel)\n\t\treturn truncator(ciLabel || '', LABEL_TRUNCATION_LIMIT);\n\n\tif (!ciLabel)\n\t\treturn truncator(hostLabel || '', LABEL_TRUNCATION_LIMIT);\n\t\t\n\treturn CI_AND_HOST_LABEL_FORMAT\n\t\t.replace('CI_LABEL', truncator(ciLabel || '', LABEL_TRUNCATION_LIMIT_SHORT))\n\t\t.replace('HOST_LABEL', truncator(hostLabel || '', LABEL_TRUNCATION_LIMIT_SHORT));\n};\n\nconst getHistoryRangeTimestamps = ({displayRange, items, filterType}) => {\n\t//when in properties panel OR if no filtering applied: use the timeline display range for dates.\n\t//otherwise, the range is resolved from the filtered change cards. \n\tconst useDisplayRange = (!items || filterType !== MAP_CONSTANTS.CONTEXT_SELECTION_STATES.TIMELINE);\n\n\tif (useDisplayRange)\n\t\treturn displayRange;\n\t\n\t//no dates displayed if single change is filtered.\n\tif (items.length === 1)\n\t\treturn {};\n\n\t//having >1 items: dispalying range for these items.\n\t//assumption: items are sorted by time ASC. \n\treturn {\n\t\tstart: items[0].time,\n\t\tend: items[items.length - 1].time\n\t};\n};\n\n/**\n * Returns `items` array for label-value-stacked or label-value-tabbed use.\n * The array contains one or two formatted dates for the current state of the panel on history map only.\n * @param {*} param0\n *  `displayRange` - current display range of the timeline.\n *  `items` - currently displayed card items on the panel, or null.\n *  `filterType` - type of filtering applied o nthe panel.\n * @returns {Array}\n */\nconst getHistoryChangesDates = ({displayRange = {}, items, filterType}) => {\n\t//assuming (mapHistoryState !== MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT)\n\tconst timestamps = getHistoryRangeTimestamps({displayRange, items, filterType});\n\n\t//no dates displayed if single change is filtered.\n\tif (!timestamps.start)\n\t\treturn [];\n\n\tconst {\n\t\tstart,\n\t\tend = timestamps.start\n\t} = timestamps;\n\n\t//If timeline changes selected, then showing approximate date without the time part.\n\tconst dateFormat = (filterType === MAP_CONSTANTS.CONTEXT_SELECTION_STATES.TIMELINE) ? 'LL' : 'LLL';\n\n\tconst startDate = moment(start).format(dateFormat);\n\tconst endDate = moment(end).format(dateFormat);\n\n\t//this flag resolves when starting and ending dates are equal and no need to present the same date twice.\n\tconst needBoth = startDate !== endDate;\n\n\tconst itemsModel = [\n\t\t{\n\t\t\tlabel: needBoth ? LABEL_STARTING : LABEL_ON,\n\t\t\tvalue: {\n\t\t\t\ttype: 'string',\n\t\t\t\tvalue: startDate\n\t\t\t}\n\t\t},\n\t\t\n\t\t...(needBoth ? [\n\t\t\t{\n\t\t\t\tlabel: LABEL_ENDING,\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tvalue: endDate\n\t\t\t\t}\n\t\t\t}\n\t\t] : [])\n\t\t\n\t];\n\n\treturn itemsModel;\n};\n\n/**\n * Resolves JSX for the label-value pairs that should appear under the secondary title on the panel header.\n * @param {*} param0 \n *  `items`\n *  `filterType`\n *  `mapProperties`\n *  `displayRange`\n * @returns {JSX}\n */\nconst getHistoryHeaderAttrs = ({items, filterType, mapProperties, displayRange}) => {\n\tconst dates = getHistoryChangesDates({displayRange, items, filterType});\n\n\tconst name = (filterType === MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP) ? \n\t\tbuildCiLabel(mapProperties) : \n\t\t'';\n\n\t//using non-truncated version of formatted CI label to set the tooltip\n\tconst tooltip = buildCiLabel(mapProperties, false);\n\n\tconst nameItemWrapped = (!name) ? [] : (name === tooltip) ? [\n\t\t{\n\t\t\tlabel: LABEL_NAME,\n\t\t\tvalue: {\n\t\t\t\ttype: 'string',\n\t\t\t\tvalue: name\n\t\t\t}\n\t\t}\n\t] : [\n\t\t{\n\t\t\tlabel: LABEL_NAME,\n\t\t\tvalue: {\n\t\t\t\ttype: 'jsx',\n\t\t\t\tvalue: (\n\t\t\t\t\t<noc-element-with-tooltip tooltip={tooltip}>\n\t\t\t\t\t\t<span className='now-align' aria-label={tooltip}>{name}</span>\n\t\t\t\t\t</noc-element-with-tooltip>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t];\n\n\tconst itemsModel = [\n\t\t...nameItemWrapped,\n\t\t...dates\n\t];\n\n\tconst jsx = itemsModel.length === 0 ? null : (\n\t\t<now-label-value-tabbed\n\t\t\tclassName='history-header-attrs flex-full-width'\n\t\t\tsize='md'\n\t\t\titems={itemsModel}\n\t\t/>\n\t);\n\n\treturn jsx;\n};\n\n/**\n * Test if the selected element on the map is of type Endpoint/Entrypoint.\n * @param {*} param0 Only one of the two parameters is required.\n * `section` - exact section data from the current mapProeprties model.\n * `mapProperties` - the entire mapProperties model. If `section` is not given, `mapProperties` will be used to address the first section.\n */\nexport const isEndpoint = ({section, mapProperties}) => {\n\tconst _section = (section || _get(mapProperties || {}, 'sections[0]')) || {};\n\treturn (_get(_section, 'data.Class.value') || '').startsWith('cmdb_ci_endpoint');\n};\n\n/**\n * Returns the label text for the selected CI type, or an empty string for types that shouldn't display CI type label.\n * @param {*} mapProperties \n * @returns {String}\n */\nconst getCiType = mapProperties => {\n\tif (isEndpoint({mapProperties}))\n\t\treturn '';\n\n\treturn _get(mapProperties, 'sections[0].data[\\'CI Type\\'].value') || '';\n};\n\nexport const getElementType = mapProperties => getCiType(mapProperties) ||\n\t\t_get(mapProperties, 'sections[0].data[\\'Endpoint Type\\'].value') || \n\t\t'';\n\n/**\n * Returns transalted text for the side panel primary title, or an empty string when no title should appear.\n * @param {*} param0 \n *  `isFilterActive`\n *  `isPropertiesPanel`\n *  `mapHistoryState`\n */\nexport const getSidePanelTitle = ({isFilterActive, isPropertiesPanel, mapHistoryState}) => {\n\tif (isFilterActive)\n\t\treturn '';\n\n\tif (isPropertiesPanel) {\n\t\treturn mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT ? LABEL_PROPERTIES_HEADER :\n\t\t\tisHistoryMap(mapHistoryState) ? LABEL_PROPERTIES_HISTORY_HEADER : ''; \n\t}\n\t//related items panel\n\treturn mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT ? LABEL_RELATED_ITEMS_HEADER :\n\t\tLABEL_RELATED_ITEMS_HISTORY_HEADER;\n};\n\n/**\n * Returns JSX for the side panel header on the map in all its possible modes.\n * @param {*} params \n * \t`serviceId` {String}\n *  `items` {Array} - array of displayed card items, sorted in timeline order (timestamp ASC)\n *  `mapProperties` {Object}\n *  `mapHistoryState` {String}\n *  `dispatch` {Function}\n *  `filterApplied` {String}\n *  `displayRange` {{start: Number, end: Number}}\n */\nexport const getSidePanelHeaderJsx = ({serviceId, items, mapProperties, mapHistoryState, dispatch, filterApplied, displayRange}) => {\n\tconst filterType = (filterApplied && filterApplied.type) || null;\n\tconst ciType = getCiType(mapProperties);\n\n\tconst ciRelatedHeader = (filterType === MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP && \n\t\tmapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT) ? \n\t\tgetCiRelatedHeader({serviceId, mapProperties, dispatch}) : \n\t\tnull;\n\n\tconst {\n\t\ticonImage = null,\n\t\tciLabelJsx = null,\n\t\thostLabelJsx = null\n\t} = ciRelatedHeader || {};\n\n\tconst ciRelatedHeaderJsx = ciRelatedHeader ? (\n\t\t<div className='ci-related-header now-align -block-end'>\n\t\t\t{iconImage}\n\t\t\t<div className='labels-container'>\n\t\t\t\t{ciLabelJsx}\n\t\t\t\t{hostLabelJsx}\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n\n\tconst isPropertiesPanel = !items;\n\n\tconst secondaryTitle = isPropertiesPanel ? \n\t\tgetPropertiesSecondaryTitle({filterType, mapHistoryState, ciType}) :\n\t\tgetItemsSecondaryTitle({mapHistoryState, ciType, filterType, items});\n\n\tconst secondaryTitleJsx = secondaryTitle ? (\n\t\t<now-heading \n\t\t\tclassName='secondary-title now-align -block-start'\n\t\t\tlabel={secondaryTitle} \n\t\t\tlevel='2' \n\t\t\tvariant='title-primary'/>\n\t) : null;\n\t\n\tconst historyHeaderAttrsJsx = (mapHistoryState !== MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT) ? \n\t\tgetHistoryHeaderAttrs({items, filterType, mapProperties, displayRange}) : \n\t\tnull;\n\n\treturn (secondaryTitleJsx || historyHeaderAttrsJsx || ciRelatedHeaderJsx) ? (\n\t\t<div className='now-align flex-column -block-start flex-full-width'>\n\t\t\t{secondaryTitleJsx}\n\t\t\t{historyHeaderAttrsJsx}\n\t\t\t{ciRelatedHeaderJsx}\n\t\t</div>\n\t) : null;\n};","export const ACTION_TYPES = {\n\tTOPO_CHANGE_CARD_SELECTED: 'SN_MAP_CHANGE_CARD#CARD_SELECTED'\n};","\nimport {createHttpEffect} from '@servicenow/ui-effect-http';\nimport sendEventToMapEffect from '../map-container/sendEventToMapEffect';\nimport {checkForError, LOGGING, CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {get as _get} from 'lodash';\n\nconst ACTION_TYPES = {\n\tMAP_GET_CIS_OF_ALERT_REQUEST: 'MAP_GET_CIS_OF_ALERT_REQUEST',\n\tMAP_GET_CIS_OF_ALERT_STARTED: 'MAP_GET_CIS_OF_ALERT_STARTED',\n\tMAP_GET_CIS_OF_ALERT_SUCCEEDED: 'MAP_GET_CIS_OF_ALERT_SUCCEEDED',\n\tMAP_GET_CIS_OF_ALERT_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,\n};\n\nconst getAffectedCis = coeffects => {\n\tconst {\n\t\taction: {payload},\n\t\tupdateState,\n\t\tdispatch\n\t} = coeffects;\n\n\tconst {\n\t\titem,\n\t\tisSelected\n\t} = payload;\n\n\tif (!isSelected) {\n\t\t//reset mark on map\n\t\tmarkCisOnMap(dispatch, []);\n\t\treturn;\n\t}\n\n\tconst{\n\t\talertHistorySysId: alertHistoryId\n\t} = item;\n\n\tupdateState({item});\n\n\tdispatch(ACTION_TYPES.MAP_GET_CIS_OF_ALERT_REQUEST, {\n\t\tdata: {alertHistoryId}\n\t});\n\n};\n\nconst getAffectedCisRequest = createHttpEffect('/api/sn_nocpit/nocpit/getAllCisOfAlertByMode', {\n\tmethod: 'POST',\n\tstartActionType: ACTION_TYPES.MAP_GET_CIS_OF_ALERT_STARTED,\n\tsuccessActionType:ACTION_TYPES.MAP_GET_CIS_OF_ALERT_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.MAP_GET_CIS_OF_ALERT_FAILED\n});\n\nexport const markCisOnMap = (dispatch, ciIds) =>\n\tdispatch(sendEventToMapEffect.ACTION_TYPES.NOC_EVENT_TO_MAP_SENT, {\n\t\targs: [ciIds],\n\t\tname: sendEventToMapEffect.ACTION_TYPES['sa.markNodes']\n\t});\n\nconst handleGetCisResponse = coeffects => {\n\tLOGGING.info('handleGetCisResponse', {caller: 'handleGetCisResponse'});\n\n\tconst {\n\t\tdispatch,\n\t\taction: {payload},\n\t\tstate,\n\t} = coeffects;\n\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleGetCisResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst ciId = _get(state, 'item.ciId');\n    \n\tconst ciIds = [\n\t\tciId,\n\t\t...payload\n\t];\n    \n\tmarkCisOnMap(dispatch, ciIds);\n};\n\nconst markChangeOnMap = coeffects => {\n\tconst {dispatch} = coeffects;\n\tconst isSelected = _get(coeffects, 'action.payload.isSelected', false);\n\n\tif (!isSelected) {\n\t\t//reset mark on map\n\t\tmarkCisOnMap(dispatch, []);\n\t\treturn;\n\t}\n\n\tconst ciId = _get(coeffects, 'action.payload.item.ciId', '');\n\t//if ciId is not defined for some unexpected reason, the mark will be reset on map (expected result)\n\tmarkCisOnMap(dispatch, [ciId]);\n};\n\nconst effectHandlers = {\n\tgetAffectedCis,\n\tgetAffectedCisRequest,\n\thandleGetCisResponse,\n\tmarkChangeOnMap\n};\n\nexport default {\n\teffectHandlers,\n\tACTION_TYPES\n};","/**\n * Uniform format to stringify JSON-ready objects.\n * @param {Object} p \n */\nexport const stringify = p => {\n\ttry {\n\t\treturn JSON.stringify(p, null, 2);\n\t} catch (e) {\n\t\treturn '[invalid JSON object]';\n\t}\n};","import mapSettingsModifiedEffect from '../map-settings-menu-behavior/mapSettingsModifiedEffect';\n\n/**\n * The key in this mapping MUST be the name of event on the angular side.\n * This obejct as filter for events that will pass through from angular eventBus to the seismic side.\n * The lookup performed by key!\n */\nconst WHITE_LIST = {\n\t//this event sends callback from map that should be called with service name.\n\t//that replaces 'sysparm_bsname' parameter in URL (the name retrieved async, so it cannot be set in URL w/o delaying map load).\n\tEVT_WS_GET_SERVICE_NAME: 'EVT_WS_GET_SERVICE_NAME',\n\n\t/**\n\t * Dispatched once from angular map to transfer getter function that will return severty color for each severity code.\n\t */\n\tEVT_WS_SEVERITY_COLORS_GETTER_SENT: 'EVT_WS_SEVERITY_COLORS_GETTER_SENT',\n\n\t/**\n\t * `snc.layoutReapplied'` is fired by map when new data arrived and procesed by the layout (ready to draw state).\n\t * When relying on data coming fro mthe map model, this is the ideal even to listen to see that map is ready in current state.\n\t * Used here to sync first loading of the map.\n\t */\n\t'snc.layoutReapplied': 'snc.layoutReapplied',\n\n\t//listen for DASHBOARD timestamp to fetch up-to-date severity of service\n\tsa_status_change: 'sa_status_change',\n\n\t//element selected on map\n\t// 'snc.selectionUpdated': 'snc.selectionUpdated',\n\n\t//new data received for properties panel\n\t'sa.refreshPropertiesPane': 'sa.refreshPropertiesPane',\n\n\n\t/**\n\t * isLoaded {Boolean} - true if map succesfully loaded.\n\t * isFailed {Boolean} - true if map loading have failed and stopped.\n\t */\n\twsMapLoaderStateChanged: 'wsMapLoaderStateChanged',\n\n\t/**\n\t * Map loading was blocked\n\t * graphDTOData - instance of sncGraphType with APIs isMapBlocked() and getBlockingReason()\n\t * Additional API getBlockingMessage() returns message for angular map and not used in Workspace.\n\t */\n\t'snc.mapBlockingStateChanged': 'snc.mapBlockingStateChanged',\n\n\t/**\n\t * Dispatched when \"hide large map\" toggle was modified.\n\t * state {Boolean} - updated toggle state\n\t */\n\t'sa.blockLargeServiceChanged': 'sa.blockLargeServiceChanged',\n\n\t/** \n\t * notifies on each change in alerts panel state\n\t * {\n\t\t\turlData: {timestamp: String, params: {sysparm_table, sysparm_query}}\n\t\t\tsysIds: [sysIds for em_alert_history]\n\t\t}\n\t */\n\tEVT_WS_ALERT_PANEL_UPDATE: 'EVT_WS_ALERT_PANEL_UPDATE',\n\n\t/** \n\t * notifies on each change in 'history changes' panel state\n\t * {\n\t\t\turlData: {params: {sysparm_table, sysparm_query}}\n\t\t\tsysIds: {sysIds for svc_model_checkpoint_attr => {id, ciId, timestamp}}\n\t\t}\n\t */\n\tEVT_WS_HISTORY_CHANGES_PANEL_UPDATE: 'EVT_WS_HISTORY_CHANGES_PANEL_UPDATE',\n\n\t/**\n\t * notifies on each change in 'indicators/mashups' panels state\n\t * {\n\t\t\turlData: {params: {sysparm_table, sysparm_query, sysparm_cmdb_ci_field}} \n\t\t\tsysIds: [cmdb_ci ids to filter by]\n\t\t}\n\t */\n\tEVT_WS_INDICATOR_PANEL_UPDATE: 'EVT_WS_INDICATOR_PANEL_UPDATE',\n\n\t...mapSettingsModifiedEffect.MAP_EVENT_NAMES\n};\n\nexport default WHITE_LIST;","import {t} from 'sn-translate';\n\n/**\n * This structure defines labels and ordering of sections in settings modal.\n * It also defines the controls that will be displayed in each section, and the order of apeparance.\n */\nexport const settingsMenuSections = [\n\t{\n\t\tlabel: t('Map Display'),\n\t\tkeys: ['hostView', 'autoGroupView', 'removeLoops', 'trafficBaseDiscovery','blockLargeService'],\n\t\tid: 'map_display'\n\t},\n\t{\n\t\tlabel: t('Map Layout'),\n\t\tkeys: ['shortestPathView'],\n\t\tid: 'map_layout'\n\t},\n\t{\n\t\tlabel: t('Map Indicators'),\n\t\tkeys: [],\n\t\tid: 'map_indicators'\n\t}\n\n];\n\nexport const getIndicatorsSection = () =>\n\tsettingsMenuSections.find(section => section.id === 'map_indicators');","/**\n * effectInitHistoryMode - on load of history map (is-history=true),\n * this effect initializes the history state and triggers first historyData request.\n */\nimport timelineConstants from './timelineConstants';\nimport {dispatchEventToMap} from '../map-container/eventBus';\nimport effectReceiveHistoryData from './effectReceiveHistoryData';\n\nconst ACTION_TYPES = {\n\tMAP_INIT_HISTORY: 'MAP_INIT_HISTORY'\n};\n\nconst effectInitHistoryMode = coeffects => {\n\tconst {\n\t\tproperties: {\n\t\t\tisHistory,\n\t\t\tinitialRange,\n\t\t\tserviceId,\n\t\t\tmapId\n\t\t},\n\t\tdispatch,\n\t\tupdateProperties\n\t} = coeffects;\n\t\n\tif (!isHistory)\n\t\treturn;\n\n\tconst candidateRange = (initialRange || {\n\t\t//ensuring default initial range\n\t\tstart: Date.now() - timelineConstants.DEFAULT_RANGE_PERIOD,\n\t\tend: Date.now()\n\t});\n\n\tconst {start: startTime, end: endTime} = candidateRange;\n\n\t//send event to angular to stop pulling manager\n\tdispatchEventToMap(\n\t\ttimelineConstants.EVT_DISABLE_PULLING_MANAGER,\n\t\t{},\n\t\tmapId\n\t);\n\n\tupdateProperties({\n\t\tinitialRange: candidateRange,\n\t\ttimelineCandidates: {\n\t\t\tdisplayRange: candidateRange\n\t\t}\n\t});\n\n\tdispatch(() => ({\n\t\ttype: effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_REQUEST,\n\t\tpayload: {\n\t\t\tserviceId,\n\t\t\tshowSeverity: false, //For Paris release, there's no severity on the timeline\n\t\t\tstartTime,\n\t\t\tendTime\n\t\t}\n\t}));\n};\n\nconst effectHandlers = {\n\teffectInitHistoryMode\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","module.exports = __TECTONIC__$servicenow_ui_core;","import {get as _get} from 'lodash';\n\nconst DROPDOWN_ID = 'headerMoreItems';\n\nconst ITEM_IDS = {\n\tFULL_MAP: 'FULL_MAP'\n};\n\nconst ACTION_TYPES = {\n\tITEM_CLICKED: 'NOW_DROPDOWN#ITEM_CLICKED'\n};\n\nconst openFullMap = (serviceId, isEm, serviceName) => {\n\tconst baseURL = `/$sw_topology_map.do?sysparm_bsid=${serviceId}&sysparm_bsname=${serviceName}`;\n\t\n\tif (isEm) \n\t\twindow.open(`${baseURL}&sysparam_back_ref=service_auto_table&sysparm_plugin_mode=assurance`, serviceId);\n\telse \n\t\twindow.open(`${baseURL}&sysparm_plugin_mode=mapping`, serviceId);\n};\n\n/**\n * This effect intercepts only the \"more items\" dropdown from the <map-header-panel>.\n * \n * @param {*} coeffects \n */\nconst onDropdownItemClicked = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tdropdownId,\n\t\t\t\titem\n\t\t\t}\n\t\t},\n\t\tproperties: {\n\t\t\tserviceId, \n\t\t\tisEm,\n\t\t\tmapInitialData\n\t\t}\n\t} = coeffects;\n\n\tif (DROPDOWN_ID !== dropdownId || !item)\n\t\treturn;\n\n\tif (item.id === ITEM_IDS.FULL_MAP) {\n\t\tconst serviceName = _get(mapInitialData, 'name.displayValue');\n\t\topenFullMap(serviceId, isEm, serviceName);\n\t}\n};\n\nconst effectHandlers = {\n\tonDropdownItemClicked\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers,\n\tDROPDOWN_ID,\n\tITEM_IDS\n};","module.exports = __TECTONIC__$servicenow_now_image;","module.exports = __TECTONIC__$servicenow_now_button;","module.exports = __TECTONIC__moment_2_24_0;","export default {\n\t/**\n\t * Dispatched every time when back button is clicked.\n\t * Payload is an empty object.\n\t */\n\tBACK_ACTION: 'SN_MAP_PROPERTIES#BACK_ACTION'\n};","import {dispatchEventToMap} from '../map-container/eventBus';\nimport timelineConstants from '../behavior-service-history/timelineConstants';\nimport {isHistoryMap, forceTimelineRefresh} from '../behavior-service-history/timelineFunctors';\nimport sendEventToMapEffect from './sendEventToMapEffect';\n\nconst ACTION_TYPES = {\n\tMAP_VISIBILITY_CHANGE:'MAP_VISIBILITY_CHANGE'\n};\n\n/**\n * This effect triggers on-connect effect,\n * each time when visibility of the component on DOM changes from hidden to visible.\n */\nconst onMapVisibilityChange = coeffects => {\n\tconst {\n\t\tproperties: {\n\t\t\tmapId,\n\t\t\tmapHistoryState\n\t\t},\n\t\taction: {\n\t\t\tpayload: {isVisible}\n\t\t},\n\t\tupdateProperties\n\t} = coeffects;\n\n\tif (isVisible) {\n\t\tdispatchEventToMap(\n\t\t\ttimelineConstants.EVT_ENABLE_PULLING_MANAGER,\n\t\t\t[],\n\t\t\tmapId\n\t\t);\n\t\tdispatchEventToMap(\n\t\t\ttimelineConstants.EVT_RESUME_MASHUPS,\n\t\t\t[],\n\t\t\tmapId\n\t\t);\n\n\t\t//force the timeline re-render to make sure it re-sizes itself\n\t\tif (isHistoryMap(mapHistoryState))\n\t\t\tforceTimelineRefresh(updateProperties);\n\n\t\n\t\t//trigger map re-rendering and fit-to-screen\n\t\tdispatchEventToMap(sendEventToMapEffect.ACTION_TYPES.EVT_SCHEDULE_FIT_TO_SCREEN, [], mapId);\n\t\tdispatchEventToMap(sendEventToMapEffect.ACTION_TYPES.EVT_LAYOUT_REAPPLIED, [], mapId);\n\t\t\n\t} else { //map is hidden\n\t\tdispatchEventToMap(\n\t\t\ttimelineConstants.EVT_DISABLE_PULLING_MANAGER,\n\t\t\t[],\n\t\t\tmapId\n\t\t);\n\t\tdispatchEventToMap(\n\t\t\ttimelineConstants.EVT_STOP_MASHUPS,\n\t\t\t[],\n\t\t\tmapId\n\t\t);\n\t}\n\t\t\n};\n\nconst effectHandlers = {\n\tonMapVisibilityChange\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {t} from 'sn-translate';\nimport {isFunction as _isFunction} from 'lodash';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {stringify} from './json';\nimport sendEventToMapEffect from './sendEventToMapEffect';\n\nexport const BLOCKING_MESSAGE = t(`It may take several minutes to load. Try using CI list instead. \nTo always display this map, disable the “Hide large map” option.`);\n\n\nexport const syncBlockingState = ({graphDTOData, updateState}) => {\n\tif (!graphDTOData || !_isFunction(graphDTOData.isMapBlocked)) {\n\t\tLOGGING.warn(`saveBlockingReason: Unexpected dataType received, expected to have function 'isMapBlocked':\n\t\t${stringify(graphDTOData)}`);\n\t\treturn;\n\t}\n\t\n\tconst isBlocked = graphDTOData.isMapBlocked();\n\n\tupdateState({\n\t\tisBlocked,\n\t\tloadingState: isBlocked ? MAP_CONSTANTS.LOADING_STATES.BLOCKED : MAP_CONSTANTS.LOADING_STATES.DONE,\n\t\tblockingState: isBlocked ? {\n\t\t\treason: graphDTOData.getBlockingReason(),\n\t\t\turl: graphDTOData.getListViewURL()\n\t\t} : {}\n\t});\n};\n\nexport const openListView = ({serviceId, blockingState}) => () =>\n\twindow.open(blockingState.url, `${serviceId}_list_view`);\n\nexport const showBlockedMap = ({dispatch, updateState, rememberForSession = true}) => () => {\n\tupdateState({\n\t\tloadingState: MAP_CONSTANTS.LOADING_STATES.LOADING,\n\t\tisBlocked: false\n\t});\n\n\tdispatch(() => ({\n\t\ttype: sendEventToMapEffect.ACTION_TYPES.NOC_EVENT_TO_MAP_SENT,\n\t\tpayload: {\n\t\t\tname: 'sa.refreshMap', \n\t\t\targs: [{showLargeMap: Boolean(rememberForSession)}]\n\t\t}\n\t}));\n\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\nimport {CONSTANTS, checkForError, formatComplexFieldsToCamelCase} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tMAP_TIMESTAMP_CHANGED: 'MAP_TIMESTAMP_CHANGED',\n\tMAP_GET_SERVICE_SEVERITY: 'MAP_GET_SERVICE_SEVERITY',\n\tMAP_GET_SERVICE_SEVERITY_STARTED: 'MAP_GET_SERVICE_SEVERITY_STARTED',\n\tMAP_GET_SERVICE_SEVERITY_SUCCEEDED: 'MAP_GET_SERVICE_SEVERITY_SUCCEEDED',\n\tMAP_GET_SERVICE_SEVERITY_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst mapServiceSeverityTimestampChangedEffect = coeffects => {\n\tconst {\n\t\tproperties,\n\t\taction: {\n\t\t\tpayload\n\t\t}, \n\t\tdispatch\n\t} = coeffects;\n\t\n\tif (checkForError({payload, dispatch, caller: 'mapServiceSeverityTimestampChangedEffect'}))\n\t\treturn;\n\t\t\n\tconst {timestamp} = payload;\n\tconst {serviceId, isEm} = properties;\n\n\tif (!isEm)\n\t\treturn;\n\n\tif (timestamp)\n\t\tdispatch(ACTION_TYPES.MAP_GET_SERVICE_SEVERITY, {serviceId, timestamp});\n};\n\n//isEM is valid to be true ONLY is nocpit plugin is installed (together with EM). Then this API will exist.\nconst getServiceSeverityEffect = createHttpEffect('/api/sn_nocpit/nocpit/ServiceSeverity', {\n\tmethod: 'GET',\n\tqueryParams: ['serviceId', 'timestamp'],\n\tstartActionType: ACTION_TYPES.MAP_GET_SERVICE_SEVERITY_STARTED,\n\tsuccessActionType: ACTION_TYPES.MAP_GET_SERVICE_SEVERITY_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.MAP_GET_SERVICE_SEVERITY_FAILED,\n});\n\nconst serviceSeverityResponseEffect = coeffects => {\n\tconst {\n\t\tstate,\n\t\taction: {\n\t\t\tpayload\n\t\t},\n\t\tupdateState\n\t} = coeffects;\n\n\tconst severity = formatComplexFieldsToCamelCase(payload);\n\n\tif (!severity || state.serviceSeverity === severity)\n\t\treturn;\n\n\tupdateState({serviceSeverity: severity});\n};\n\nconst effectHandlers = {\n\tmapServiceSeverityTimestampChangedEffect,\n\tgetServiceSeverityEffect,\n\tserviceSeverityResponseEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {formatComplexFieldsToCamelCase, getDisplayValue, LOGGING, checkForError, getValue , CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {\n\tcamelCase as _camelCase,\n\tget as _get,\n\tisFunction as _isFunction,\n\tmapKeys as _mapKeys,\n\tmapValues as _mapValues\n} from 'lodash';\n\nconst ACTION_TYPES = {\n\tMAP_LOAD_INITIAL_DATA: 'MAP_LOAD_INITIAL_DATA',\n\tMAP_LOAD_INITIAL_DATA_STARTED: 'MAP_LOAD_INITIAL_DATA_STARTED',\n\tMAP_LOAD_INITIAL_DATA_SUCCEEDED: 'MAP_LOAD_INITIAL_DATA_SUCCEEDED',\n\tMAP_LOAD_INITIAL_DATA_FAILED: CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED\n};\n\nconst GQL_QUERY = `\nquery loadMapInitialData($serviceQuery: String! $sysPropertiesQuery: String!) {\n\tGlideDomain_Query {\n\t  user {\n\t\tsys_id\n\t\tdateTimeFormat\n\t\ttimeZoneOffset\n\t\tpreferences(name: [\"noc_map.topo_changes_range\"]) {\n\t\t  name\n\t\t  value\n\t\t}\n\t  }\n\t}\n\tGlideRecord_Query {\n\t  cmdb_ci_service_discovered(queryConditions: $serviceQuery) {\n\t\t_results {\n\t\t  name {\n\t\t\tdisplayValue\n\t\t  }\n\t\t  owned_by {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t\tlabel\n\t\t  }\n\t\t  process_status {\n\t\t\tvalue\n\t\t\tdisplayValue\n\t\t\tlabel\n\t\t  }\n\t\t}\n\t  }\n\t  sys_properties(queryConditions: $sysPropertiesQuery){\n\t\t_results {\n\t\t  name {\n\t\t\tvalue\n\t\t  }\n\t\t  value{\n\t\t\tvalue\n\t\t  }\n\t\t}\n\t  }\n\t}\n  }\n`;\n\nconst mapRequestStaticDataEffect = createGraphQLEffect(GQL_QUERY, {\n\tstartActionType: ACTION_TYPES.MAP_LOAD_INITIAL_DATA_STARTED,\n\tsuccessActionType: ACTION_TYPES.MAP_LOAD_INITIAL_DATA_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.MAP_LOAD_INITIAL_DATA_FAILED,\n\tvariableList: ['serviceQuery', 'sysPropertiesQuery']\n});\n\nconst SERVICE_RESPONSE_PATH = 'data.GlideRecord_Query.cmdb_ci_service_discovered._results[0]';\nconst PROPERTIES_RESPONSE_PATH = 'data.GlideRecord_Query.sys_properties._results';\n\n\nconst getVariables = serviceId => ({\n\tserviceQuery: `sys_id=${serviceId || '-1'}`,\n\tsysPropertiesQuery: concatinatingPropertiesNames()\n});\n\nconst concatinatingPropertiesNames = () => {\n\tconst names = Object.keys(MAP_CONSTANTS.SYS_PROPERTIES);\n\tconst query = `name=${names.join('^ORname=')}`;\n\treturn query;\n};\n\nconst mapFieldValues = field => {\n\tconst outField = formatComplexFieldsToCamelCase(field);\n\n\t//moving 'label' to 'displayName' to make reuse of filedGetters\n\treturn {\n\t\t...outField,\n\t\tdisplayName: outField.label || '', //displayName returned by getDisplayName()\n\t\tlabel: null //label returned as fallback by getDisplayValue() and should be erased here\n\t};\n};\n\nconst formatServiceResponse = payload => {\n\tlet data = _get(payload, SERVICE_RESPONSE_PATH) || {};\n\tdata = _mapKeys(data, (value, key) => _camelCase(key));\n\tdata = _mapValues(data, mapFieldValues);\n\n\treturn data;\n};\n\nconst formatPropertiesRespones = payload => {\n\tconst response = _get(payload, PROPERTIES_RESPONSE_PATH) || [];\t\n\t//formating the resonse to array of object of name and value \n\tconst normalizedResponse = response.reduce((result, property)=>({\n\t\t...result,\n\t\t[getValue(property.name)]: getValue(property.value)\n\t}), {});\n\n\tconst propertiesObj = _mapValues(MAP_CONSTANTS.SYS_PROPERTIES, (sanitizer, propertyName)=> sanitizer(normalizedResponse[propertyName]));\n\n\treturn propertiesObj;\n};\n\n\nconst setServiceNameOnMap = (setServiceNameCb, mapInitialData) => {\n\tif (_isFunction(setServiceNameCb))\n\t\tsetServiceNameCb(getDisplayValue(mapInitialData.name));\n};\n\nconst getUserMeta = payload => { \n\tconst record = _get(payload, 'data.GlideDomain_Query.user');\n\n\tconst topologyChangesRangePref = _get(payload, 'data.GlideDomain_Query.user.preferences', [])\n\t\t.find(item => item.name === 'noc_map.topo_changes_range');\n\n\tconst topologyChangesRange = Math.min(365, Math.max(0, (Number(topologyChangesRangePref.value) || 0)));\n\n\treturn {\n\t\tsysId: record.sys_id,\n\t\tdateTimeFormat: record.dateTimeFormat,\n\t\ttz: record.timeZoneOffset,\n\t\ttopologyChangesRange\n\t};\n};\n\nconst mapStaticDataResponseEffect = coeffects => {\n\tLOGGING.log('mapStaticDataResponseEffect');\n\tconst {\n\t\tstate,\n\t\tupdateState,\n\t\tupdateProperties,\n\t\tdispatch,\n\t\taction: {payload}\n\t} = coeffects;\n\tif (checkForError({payload, dispatch, action: 'mapStaticDataResponseEffect'}))\n\t\treturn;\n\n\tconst mapInitialData = formatServiceResponse(payload);\n\tconst updatedProperties = formatPropertiesRespones(payload);\n\tupdateState({sysProperties: updatedProperties});\n\tconst {setServiceNameCb} = state;\n\tsetServiceNameOnMap(setServiceNameCb, mapInitialData);\n\n\tconst userMeta = getUserMeta(payload);\n\n\tupdateState({mapInitialData});\n\tupdateProperties({userMeta});\n};\n\n\nconst effectHandlers = {\n\tmapRequestStaticDataEffect,\n\tmapStaticDataResponseEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers,\n\tgetVariables,\n\tsetServiceNameOnMap\n};","module.exports = __TECTONIC__$servicenow_ui_effect_graphql;","import MAP_CONSTANTS from '../map-shared/constants';\n\nconst ACTION_TYPES = {\n\tMAP_IS_LOADED: 'MAP_INITIAL_DATA_BEHAVIOR#MAP_IS_LOADED'\n};\n\nconst mapIsLoaded = coeffects => {\n\tconst {\n\t\tstate: {loadingState, isInitializing, isBlocked},\n\t\tupdateState\n\t} = coeffects;\n\t\n\tif (isInitializing)\n\t\tupdateState({isInitializing: false});\n\n\tif (isBlocked)\n\t\tupdateState({loadingState: MAP_CONSTANTS.LOADING_STATES.BLOCKED});\n\n\telse if (loadingState !== MAP_CONSTANTS.LOADING_STATES.DONE)\n\t\tupdateState({loadingState: MAP_CONSTANTS.LOADING_STATES.DONE});\n};\n\nconst effectHandlers = {\n\tmapIsLoaded\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\n\nconst ACTION_TYPES = {\n\tMAP_GET_ALERTS_FOR_CIS: 'MAP_GET_ALERTS_FOR_CIS',\n\tMAP_GET_ALERTS_FOR_CIS_REQUEST: 'MAP_GET_ALERTS_FOR_CIS_REQUEST',\n\tMAP_GET_ALERTS_FOR_CIS_REQUEST_STARTED: 'MAP_GET_ALERTS_FOR_CIS_REQUEST_STARTED',\n\tMAP_GET_ALERTS_FOR_CIS_REQUEST_SUCCEEDED: 'MAP_GET_ALERTS_FOR_CIS_REQUEST_SUCCEEDED',\n\tMAP_GET_ALERTS_FOR_CIS_REQUEST_FAILED: 'MAP_GET_ALERTS_FOR_BS_REQUEST_FAILED'\n};\n\n\nconst getMapAlertsForCisEffectHandler = createHttpEffect('/api/sn_nocpit/nocpit/getAllAlertsForCis', {\n\tmethod: 'POST',\n\tstartActionType: ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST_FAILED\n});\n\n\nconst effectHandlers = {\n\tgetMapAlertsForCisEffectHandler,\n\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {createHttpEffect} from '@servicenow/ui-effect-http';\n\nconst ACTION_TYPES = {\n\tMAP_GET_ALERTS_FOR_BS: 'MAP_GET_ALERTS_FOR_BS',\n\tMAP_GET_ALERTS_FOR_BS_REQUEST: 'MAP_GET_ALERTS_FOR_BS_REQUEST',\n\tMAP_GET_ALERTS_FOR_BS_REQUEST_STARTED: 'MAP_GET_ALERTS_FOR_BS_REQUEST_STARTED',\n\tMAP_GET_ALERTS_FOR_BS_REQUEST_SUCCEEDED: 'MAP_GET_ALERTS_FOR_BS_REQUEST_SUCCEEDED',\n\tMAP_GET_ALERTS_FOR_BS_REQUEST_FAILED: 'MAP_GET_ALERTS_FOR_BS_REQUEST_FAILED'\n};\n\n\nconst getMapAlertsForBSeffectHandler = createHttpEffect('/api/sn_nocpit/nocpit/getAllAlertsForBsInMap', {\n\tmethod: 'POST',\n\tstartActionType: ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST_STARTED,\n\tsuccessActionType: ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST_SUCCEEDED,\n\terrorActionType: ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST_FAILED\n});\n\n\nconst effectHandlers = {\n\tgetMapAlertsForBSeffectHandler,\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {checkForError, LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {\n\tcamelCase as _camelCase, \n\tget as _get, \n\treduce as _reduce\n} from 'lodash';\n\nimport {t} from 'sn-translate';\nimport MAP_CONSTANTS from '../map-shared/constants';\n\nconst LABEL_LAST_UPDATED_TIME = t('Last Updated');\nconst TASK_CI_PREFIX = 'task_';\nconst CI_PREFIX = 'ci_';\n\nconst ACTION_TYPES = {\n\tMAP_GET_INDICATORS_FOR_CIS_REQUEST_STARTED: 'MAP_GET_INDICATORS_FOR_CIS_REQUEST_STARTED',\n\tMAP_GET_INDICATORS_FOR_CIS_REQUEST_SUCCEEDED: 'MAP_GET_INDICATORS_FOR_CIS_REQUEST_SUCCEEDED',\n\tMAP_GET_INDICATORS_FOR_CIS_REQUEST_FAILED: 'MAP_GET_INDICATORS_FOR_CIS_REQUEST_FAILED'\n};\n\n/**\n * Standartize content complex field to always have expected displayName, value, displayValue.\n * @param {Object} field the object containing displayName, value, label, etc...\n * @param {String} fieldKey - key of the field (DB view prefixes are removed)\n */\nconst formatFieldValue = (field, fieldKey) => \n\t(field && {\n\t\tdisplayName: fieldKey === 'sys_updated_on' ? LABEL_LAST_UPDATED_TIME : field.label,\n\t\tvalue: field.value,\n\t\tdisplayValue: field.displayValue\n\t});\n\nconst removePrefix = key => {\n\tif (key.startsWith(TASK_CI_PREFIX))\n\t\treturn key.slice(TASK_CI_PREFIX.length);\n\telse if (key.startsWith(CI_PREFIX))\n\t\treturn key.slice(CI_PREFIX.length);\n\treturn key;\n};\n\n/**\n * Operator function for reduce that modifies keys and value of item returned in grapQl response.\n * @param {Object} item - accumulator for the reduce result.\n * @param {Object} value - for complex field returned from graphQL, this is the object containing displayName, value, label, etc...\n * @param {String} key - the key of the field\n */\nconst reduceItemFields = (ciFieldName, item, value, key) => {\n\t//getting rid of DB view prefixes of fields of affected CIs query.\n\tconst keyNoPrefix = removePrefix(key);\n\n\tconst newKey = keyNoPrefix === ciFieldName ? \n\t\t'ciField' :  //standartize `ciField`, copy it from dynamic [ciFieldName]\n\t\t_camelCase(keyNoPrefix); //format any other keys to camel case\n\n\tconst newValue = formatFieldValue(value, keyNoPrefix);\n\treturn {\n\t\t...item,\n\t\t[newKey]: newValue\n\t};\n};\n\nconst formatItem = ({ciFieldName}, rawItem) => {\n\tconst item = _reduce(rawItem, reduceItemFields.bind(null, ciFieldName), {});\n\t\n\treturn {\n\t\t...item,\n\t\tid: item.sysId.value,\n\t\tnumber: (item.number || item.task)\n\t};\n};\n\nconst handleGetMapIndicatorsForCisResponse = coeffects => {\n\tLOGGING.info('handleGetMapIndicatorsForCisResponse', {caller: 'handleGetMapIndicatorsForCisResponse'});\n\n\tconst {\n\t\tproperties: {\n\t\t\trelatedItemIds = {}\n\t\t},\n\t\tupdateProperties,\n\t\tdispatch,\n\t\taction: {payload},\n\t\tstate\n\t} = coeffects;\n\n\tconst totalRecords = _get(payload, 'data.GlideAggregateRecord_Query.totalCount', 0);\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleGetMapIndicatorsForCisResponse'});\n\tif (errors)\n\t\treturn;\n\n\tconst selectedindicatorId = _get(state, 'relatedItemsRefreshParams.selectedType.id') || '';\n\tconst ciFieldName = _get(state, `indicatorsPanelData['${selectedindicatorId}'].urlData.params.sysparm_cmdb_ci_field`) || '';\n\n\t//for history changes, the size of this array shows whether map element was selected\n\tconst selectedItemIds = _get(relatedItemIds, `['${selectedindicatorId}'].sysIds`) || [];\n\t\n\t//`isMapElementSelected` populated only for indicators. Otherwise falling back on selectedItemIds size\n\tconst isMapElementSelected = _get(relatedItemIds, `['${selectedindicatorId}'].isMapElementSelected`, (selectedItemIds.length !== 0));\n\n\tconst queryRes = Object.values(payload.data.GlideRecord_Query);\n\tconst results = _get(queryRes, '[0]._results') || [];\n\tconst items = results.map(formatItem.bind(null, {ciFieldName}));\n\n\tupdateProperties({\n\t\trelatedItemsResponse: {\n\t\t\titems,\n\t\t\ttotalRecords,\n\t\t\tlastUpdated: Date.now(),\n\t\t\tfilterApplied: {\n\t\t\t\ttype: isMapElementSelected ? MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP : null\n\t\t\t}\n\t\t},\n\t\tfilteredItems: results\n\t});\n};\n\n\nconst effectHandlers = {\n\thandleGetMapIndicatorsForCisResponse\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","export {default as mapContainer} from './map-container';\n","import './mapContainer';\n\nconst {version: packageVersion} = require('../../package.json');\n\nexport default {\n\tpackageVersion\n};","import {\n\tcreateActionConfig, \n\tcreateNocElement,\n\tnocErrorBehavior,\n\tbehaviorNocNotification\n} from '@devsnc/library-opws-mapping-shared';\n\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './mapContainer.scss';\nimport view from './mapContainerView';\nimport sendEventToMapEffect from './sendEventToMapEffect';\nimport mapEventReceivedEffect from './mapEventReceivedEffect';\nimport {mapInitialDataBehavior} from '../map-initial-data-behavior/mapInitialDataBehavior';\nimport {mapSettingsMenuBehavior} from '../map-settings-menu-behavior/mapSettingsMenuBehavior';\nimport {behaviorServiceHistory} from '../behavior-service-history';\nimport {actionTypes} from '@servicenow/ui-core';\nimport {computed as computedUrl} from './computedUrl';\nimport effectComputeRelatedTypes from './effectComputeRelatedTypes';\nimport {effectMapDisconnected} from './effectMapDisconnected';\nimport effectGetAlertsForCis from './effectGetAlertsForCis';\nimport effectGetAlertsForBS from './effectGetAlertsForBS';\nimport handleGetAlertsResponse from './handleGetAlertsResponse';\nimport effectGetMapChangeItems from './effectGetMapChangeItems';\nimport effectMapRelatedItemsRefresh from './effectMapRelatedItemsRefresh';\nimport effectGetIndicatorsForCis from './effectGetIndicatorsForCis';\nimport effectSidePanelBackAction from './effectSidePanelBackAction';\nimport effectOnCardSelection from './effectOnCardSelection';\nimport effectOnMapVisibilityChange from './effectOnMapVisibilityChanges';\nimport effectContainerToggleSidePanel from './effectContainerToggleSidePanel';\n\nconst {\n\tCOMPONENT_DISCONNECTED\n} = actionTypes;\n\n/**\n * This component is a root container for the map of Application Service in Workspace.\n * \n * ## Dev install & run\n * ```\n * mvn clean install\n * tectonic run develop --entry=./app.js\n * ```\n * @seismicElement map-container\n * @summary \n */\ncreateNocElement('map-container', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview,\n\t},\n\tstyles,\n\n\tinitialState: {\n\t\t//first-time initial state. Used to hide components before the map is loaded for the first time.\n\t\tisInitializing: true,\n\n\t\tisBlocked: false,\n\n\t\tblockingState: {\n\t\t\treason: null,\n\t\t\turl: null\n\t\t},\n\n\t\t//transitional laoding state (changes every time when map is loading)\n\t\tloadingState: MAP_CONSTANTS.LOADING_STATES.LOADING,\n\n\t\tsetServiceNameCb: null,\n\n\t\t/**\n\t\t * Getter function that receives severity code and returns severity color.\n\t\t * This function provided by angular code and is called in seismic t oreuse fuctionality of factory.sncAccessibility. \n\t\t */\n\t\tseveritiesGetter: null,\n\n\t\t/**\n\t\t * Internal data of indicators to compare hash of sys_ids\n\t\t * and eliminate duplicate calls when CI selected on map.\n\t\t */\n\t\tindicatorsPanelData: {},\n\n\t\tmapSettings: {\n\t\t\tisOpen: false,\n\t\t\tmodel: null\n\t\t},\n\t\tmapInitialData: null,\n\t\tserviceSeverity: null,\n\n\t\t/**\n\t\t * This data originates in `sn-opws-related-items-list`.\n\t\t * It's dispatched from there with `OPWS_RELATED_ITEMS_LIST#REFRESH_REQUESTED` and is stored here \n\t\t * to trigger another dispatch of that type from map-container, when map data changed and arrived from eventBus.\n\t\t * DO NOT try to pass this data to any child component, it is local to map-container only.\n\t\t */ \n\t\trelatedItemsRefreshParams: null,\n\n\t\t/**\n\t\t * Cached response of topology changes cards.\n\t\t * If topology timestamp wasn't updated, the cached data will be reused, skipping redundant server requests.\n\t\t */\n\t\ttopoChangesItemsCache: {},\n\n\t\tsysProperties: {}\n\t},\n\n\tproperties: {\n\n\t\t/**\n\t\t * A sys_id of the service for this map.\n\t\t * @type {String}\n\t\t */\n\t\tserviceId: {\n\t\t\tdefault: '',\n\t\t\tselectable: true\n\t\t\t//should be schema: sys_id, but workspace fails if I use it.\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the map is in Event Management mode (bringing severities layer).\n\t\t * @type {Boolean}\n\t\t */\n\t\tisEm: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the map is in history mode.\n\t\t * @type {Boolean}\n\t\t */\n\t\tisHistory: {\n\t\t\tdefault: false,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * Stores data about current user id and preferences.\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tuserMeta: {\n\t\t\tselectable: true,\n\t\t\tdefault: {},\n\t\t\tschema: {\n\t\t\t\ttype: 'object'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * Stores direct fields of the service record that are displayed in the app.\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tmapProperties: {\n\t\t\tdefault: null,\n\t\t\tselectable: true,\n\t\t\tschema: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'null'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal computed property to resolve embedded map URL for the iframe.\n\t\t * @private\n\t\t * @type {String}\n\t\t */\n\t\turl: {\n\t\t\tdefault: '',\n\t\t\tcomputed: computedUrl,\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * mapId is a unique ID of map application.\n\t\t * For the same serviceId, there maybe multiple map application opened side-by-side in Workspace tabs.\n\t\t * (Current map and history map)\n\t\t * @private\n\t\t * @type {String}\n\t\t */\n\t\tmapId: {\n\t\t\tdefault: '',\n\t\t\tselectable: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * Array of allowed item types on the contextual panel in the related items section.\n\t\t * @private\n\t\t * @type {array}\n\t\t */\n\t\trelatedItemTypes: {\n\t\t\tselectable: true,\n\t\t\tdefault: [],\n\t\t\tschema: {\n\t\t\t\ttype: 'array'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * Mapping of ids of currently displayed cards on the contextual panel in the related items section.\n\t\t * Mapped by itemTypes\n\t\t * @private\n\t\t * @type {object}\n\t\t */\n\t\trelatedItemIds: {\n\t\t\tselectable: true,\n\t\t\tdefault: {},\n\t\t\tschema: {\n\t\t\t\ttype: 'object'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * Separate flag to set when cards are in loading state and the loader should be shown.\n\t\t * @private\n\t\t * @type {boolean}\n\t\t */\n\t\tcardsAreLoading: {\n\t\t\tselectable: true,\n\t\t\tdefault: false,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal property.\n\t\t * Response objects that contains:\n\t\t * `items` - array of item DTOs.\n\t\t * `lastUpdated` - UNIX format tiemstamp of last updated time for the items.\n\t\t * `totalRecords` - total number of items (in all pages).\n\t\t *  `RequestTime` formated time for server.\n\t\t * `filterApplied` - {type, ...} object that describes type of the filter that applied on the items list, and additional attributes, depending on the type.\n\t\t * Allowed types in filterApplied are described in map-shared/constants.CONTEXT_SELECTION_STATES\n\t\t * @private\n\t\t * @type {object}\n\t\t */\n\t\trelatedItemsResponse: {\n\t\t\tselectable: true,\n\t\t\tdefault: {},\n\t\t\tschema: {\n\t\t\t\ttype: 'object'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Array of filtered items that are displayed on the side panel, before they are formatted and sorted for display.\n\t\t * The sorting here is always by the timestamp ASC.\n\t\t * @private\n\t\t * @type {array}\n\t\t */\n\t\tfilteredItems: {\n\t\t\tselectable: true,\n\t\t\tdefault : [],\n\t\t\tschema: {\n\t\t\t\ttype: 'array'\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Id of the selected card, or '' if not selected.\n\t\t * @type {string}\n\t\t */\n\t\tselectedCardId: {\n\t\t\tdefault: '',\n\t\t\tselectable: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[sendEventToMapEffect.ACTION_TYPES.NOC_EVENT_TO_MAP_SENT]:\n\t\t\tcreateActionConfig(sendEventToMapEffect.effectHandlers.sendEventToMapHandler),\n\n\t\t[effectComputeRelatedTypes.ACTION_TYPES.MAP_SETTINGS_SET]: \n\t\t\tcreateActionConfig(effectComputeRelatedTypes.effectHandlers.effectComputeRelatedTypes),\n\n\t\t[mapEventReceivedEffect.ACTION_TYPES.NOC_EVENT_FROM_MAP_ARRIVED]:\n\t\t\tcreateActionConfig(mapEventReceivedEffect.effectHandlers.mapEventReceivedEffect),\n\n\t\t[effectMapRelatedItemsRefresh.ACTION_TYPES.REFRESH_REQUESTED]:\n\t\t\tcreateActionConfig(effectMapRelatedItemsRefresh.effectHandlers.effectMapRelatedItemsRefresh),\n\n\t\t[effectGetAlertsForCis.ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST]:\n\t\t\tcreateActionConfig(effectGetAlertsForCis.effectHandlers.getMapAlertsForCisEffectHandler),\n\n\t\t[effectGetAlertsForCis.ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(handleGetAlertsResponse.effectHandlers.handleGetMapAlertsResponse),\n\n\t\t[effectGetAlertsForCis.ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(handleGetAlertsResponse.effectHandlers.handleGetMapAlertsFailed),\n\n\t\t[effectGetAlertsForBS.ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST]:\n\t\t\tcreateActionConfig(effectGetAlertsForBS.effectHandlers.getMapAlertsForBSeffectHandler),\n\n\t\t[effectGetAlertsForBS.ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(handleGetAlertsResponse.effectHandlers.handleGetMapAlertsResponse),\n\n\t\t[effectGetAlertsForCis.ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(handleGetAlertsResponse.effectHandlers.handleGetMapAlertsFailed),\n\n\t\t[effectGetMapChangeItems.ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST]:\n\t\t\tcreateActionConfig(effectGetMapChangeItems.effectHandlers.getHistoryChanges),\n\n\t\t[effectGetMapChangeItems.ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(effectGetMapChangeItems.effectHandlers.historyChangesResponse),\n\n\t\t[effectGetMapChangeItems.ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_FAILED]:\n\t\t\tcreateActionConfig(effectGetMapChangeItems.effectHandlers.historyChangesFailure),\n\n\t\t[effectGetIndicatorsForCis.ACTION_TYPES.MAP_GET_INDICATORS_FOR_CIS_REQUEST_SUCCEEDED]:\n\t\t\tcreateActionConfig(effectGetIndicatorsForCis.effectHandlers.handleGetMapIndicatorsForCisResponse),\n\n\t\t[effectSidePanelBackAction.ACTION_TYPES.RELATED_ITEMS_BACK]:\n\t\t\tcreateActionConfig(effectSidePanelBackAction.effectHandlers.relatedItemsBack),\n\n\t\t[effectSidePanelBackAction.ACTION_TYPES.PROPERTIES_BACK]:\n\t\t\tcreateActionConfig(effectSidePanelBackAction.effectHandlers.propertiesBack),\n\n\t\t[COMPONENT_DISCONNECTED]: \n\t\t\tcreateActionConfig(effectMapDisconnected),\n\n\t\t[effectOnCardSelection.ACTION_TYPES.CARD_SELECTED]:\n\t\tcreateActionConfig(effectOnCardSelection.effectHandlers.onCardSelection),\n\n\t\t[effectOnMapVisibilityChange.ACTION_TYPES.MAP_VISIBILITY_CHANGE]:\n\t\t\tcreateActionConfig(effectOnMapVisibilityChange.effectHandlers.onMapVisibilityChange),\n\n\t\t[effectContainerToggleSidePanel.ACTION_TYPES.TOGGLE_SIDE_PANEL]:\n\t\t\tcreateActionConfig(effectContainerToggleSidePanel.effectHandlers.toggleSidePanel)\n\t},\n\n\tbehaviors: [\n\t\tmapSettingsMenuBehavior,\n\t\tmapInitialDataBehavior,\n\t\tnocErrorBehavior,\n\t\tbehaviorNocNotification,\n\t\tbehaviorServiceHistory\n\t]\n});\n\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./mapContainer.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align,.top-side{display:flex}.-row.-reverse.top-side,.now-align.-row.-reverse{flex-direction:row-reverse}.-column.top-side,.now-align.-column{flex-direction:column}.-column.-reverse.top-side,.now-align.-column.-reverse{flex-direction:column-reverse}.-wrap.top-side,.now-align.-wrap{flex-wrap:wrap}.-inline.top-side,.now-align.-inline{justify-content:space-between}.-inline-center.top-side,.now-align.-inline-center{justify-content:center}.-inline-end.top-side,.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start,.top-side{align-items:flex-start}.-block-center.top-side,.now-align.-block-center{align-items:center}.-block-end.top-side,.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg,.top-side{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl,.top-side{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0,.top-side{padding-block-start:0;padding-block-end:0}.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.full-size,:host{width:100%;height:100%}.full-size{align-content:stretch}.full-size.bg{z-index:0}.full-size.fg{position:absolute;background-color:RGB(var(--now-color--background-primary,var(--now-color--neutral-0,255,255,255)));z-index:10}.layout{position:absolute;top:0;left:0;flex-direction:column}.layout .main-section{flex-grow:1;overflow-x:hidden;border-top:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.layout .left-side{flex-direction:column}.layout .map-container{position:relative;flex-grow:1}.layout .map-frame{left:0;border:none}.top-side{width:100%;border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.empty-state-buttons{margin-top:-8rem}\", \"\"]);\n\n// exports\n","import {t} from 'sn-translate';\nimport {createRef} from '@servicenow/ui-renderer-snabbdom';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {initEventBus} from './eventBus';\nimport {getTimelineJsx, getHeaderFieldsJsx} from './topAreaJsx';\nimport '../map-header-panel';\nimport '../map-side-panel';\nimport '@servicenow/now-empty-state';\nimport '@servicenow/now-button';\nimport '@devsnc/library-opws-mapping-shared'; //sn-opws-is-visible\nimport  effectOnMapVisibilityChanges from './effectOnMapVisibilityChanges';\nimport {BLOCKING_MESSAGE, openListView, showBlockedMap} from './mapBlocking';\n\nconst LABEL_MAIN = t('Service map tab');\nconst LABEL_LOADING = t('Loading map');\nconst LABEL_LOADING_HISTORY = t('Loading history view');\nconst LABEL_MAP_FRAME = t('Service map');\nconst LABEL_OPEN_LIST_VIEW = t('Open CI list');\nconst LABEL_LOAD_BLOCKED_MAP = t('View this map now');\n\nconst onIframeLoad = ({dispatch, iframeRef, mapId}) => () =>\n\tinitEventBus(dispatch, iframeRef, mapId);\n\nconst getLoadingStateJsx = ({serviceId, isBlocked, blockingState, loadingState, isHistory, dispatch, updateState}) => {\n\tconst loadingText = isHistory ? LABEL_LOADING_HISTORY : LABEL_LOADING;\n\tconst loadingProps = (loadingState === MAP_CONSTANTS.LOADING_STATES.LOADING) ?  {\n\t\theaderText: loadingText,\n\t\tbodyText: false\n\t} : isBlocked ? {\n\t\theaderText: blockingState.reason,\n\t\tbodyText: BLOCKING_MESSAGE\n\t} : {};\n\n\tif (isBlocked) {\n\t\treturn (\n\t\t\t<div className='full-size fg now-p-block-start--3xl'>\n\t\t\t\t<now-empty-state variant='medium' type={loadingState} {...loadingProps}/>\n\n\t\t\t\t<div className='now-align -inline-center empty-state-buttons' >\n\t\t\t\t\t<now-button \n\t\t\t\t\t\tclassName='now-align -inline-start'\n\t\t\t\t\t\ton-click={openListView({serviceId, blockingState})} \n\t\t\t\t\t\tlabel={LABEL_OPEN_LIST_VIEW} \n\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<now-button \n\t\t\t\t\t\tclassName='now-align -inline-end now-m-inline-start--sm'\n\t\t\t\t\t\ton-click={showBlockedMap({dispatch, updateState})} \n\t\t\t\t\t\tlabel={LABEL_LOAD_BLOCKED_MAP} \n\t\t\t\t\t\tvariant='secondary'\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn loadingState ? (\n\t\t<div className='full-size fg'>\n\t\t\t<now-empty-state variant='fit' type={loadingState} {...loadingProps}/>\n\t\t</div>\n\t) : null;\n};\n\nexport default (state, {dispatch, updateState}) => {\n\tconst {\n\t\tisInitializing,\n\t\tloadingState,\n\t\tisBlocked,\n\t\tblockingState,\n\t\tmapInitialData,\n\t\tmapSettings,\n\t\tserviceSeverity,\n\t\tcomponentId,\n\t\tproperties: {\n\t\t\turl, \n\t\t\tserviceId, \n\t\t\tmapId,\n\t\t\tisEm,\n\t\t\tisHistory,\n\t\t\tnotifications = [],\n\t\t\tmapHistoryState,\n\t\t\ttimelineData\n\t\t}\n\t} = state;\n\n\tif (!url || !serviceId)\n\t\treturn null;\n\n\tconst iframeRef = createRef();\n\tconst timelineJsx = isInitializing ? null : getTimelineJsx({mapHistoryState, timelineData});\n\tconst headerFieldsJsx = isInitializing ? null : getHeaderFieldsJsx({mapInitialData, isEm, serviceSeverity, mapHistoryState});\n\tconst extraSpacingAfterHeading = headerFieldsJsx ? '' : 'now-m-block-end--sm';\n\n\tconst loadingStateJsx = getLoadingStateJsx({serviceId, loadingState, isBlocked, blockingState, isHistory, dispatch, updateState});\n\n\tconst bodyJsx = mapId ? (\n\t\t<div className='main-section full-size now-align'>\n\t\t\t<div className='left-side full-size now-align -inline-start'>\n\t\t\t\t{timelineJsx}\n\n\t\t\t\t<div className='map-container full-size now-align -block-end'>\n\n\t\t\t\t\t{loadingStateJsx}\n\n\t\t\t\t\t<iframe className='map-frame full-size bg'\n\t\t\t\t\t\tkey='ng_map_iframe'\n\t\t\t\t\t\tref={iframeRef}\n\t\t\t\t\t\ttitle={LABEL_MAP_FRAME}\n\t\t\t\t\t\ton-load={onIframeLoad({dispatch, iframeRef, mapId})}\n\t\t\t\t\t\tsrc={url}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\n\t\n\t\t\t<map-side-panel \n\t\t\t\tmap-component-id={componentId} \n\t\t\t\tis-loading={isInitializing}\n\t\t\t\tis-blocked={isBlocked}\n\t\t\t\tmap-history-state={mapHistoryState}\n\t\t\t/>\n\t\t</div>\n\t) : null;\n\n\tconst anchorElm = createRef();\n\n\treturn (\n\t\t<main className='layout full-size now-align' aria-label={LABEL_MAIN}>\n\n\t\t\t<sn-opws-is-visible anchor-elm={anchorElm} action-on-change={effectOnMapVisibilityChanges.ACTION_TYPES.MAP_VISIBILITY_CHANGE} />\n\t\t\t\n\t\t\t<map-header-panel\n\t\t\t\tclassName={extraSpacingAfterHeading}\n\t\t\t\tservice-id={serviceId}\n\t\t\t\tmap-id={mapId}\n\t\t\t\tis-history={isHistory}\n\t\t\t\tis-em={isEm}\n\t\t\t\tservice-severity={serviceSeverity}\n\t\t\t\tmap-initial-data={mapInitialData}\n\t\t\t\tmap-settings={mapSettings}\n\t\t\t\tnotifications={notifications}\n\t\t\t\tis-loading={isInitializing}\n\t\t\t\tis-blocked={isBlocked}\n\t\t\t\tref={anchorElm}\n\t\t\t/>\n\t\t\t\n\t\t\t{headerFieldsJsx}\n\t\t\t{bodyJsx}\n\t\t</main>\n\t);\n};","import MAP_CONSTANTS from '../map-shared/constants';\nimport {getHeaderFieldsJsx as getHeaderFieldsJsxProxy} from './headerFieldsJsx';\nimport {getTimelineJsx as getTimelineJsxProxy} from './timelineJsx';\n\nexport const getTimelineJsx = ({mapHistoryState, timelineData}) =>\n\tmapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT\n\t\t? null\n\t\t: getTimelineJsxProxy({timelineData});\n\n\nexport const getHeaderFieldsJsx = ({mapInitialData, isEm, serviceSeverity, mapHistoryState}) =>\n\tmapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT\n\t\t? getHeaderFieldsJsxProxy({mapInitialData, isEm, serviceSeverity})\n\t\t: null;","import {t} from 'sn-translate';\nimport '@servicenow/now-label-value';\nimport {\n\tCONSTANTS,\n\tgetValue,\n\tgetDisplayValue,\n\tgetDisplayName\n} from '@devsnc/library-opws-mapping-shared';\n\nconst LABEL_SEVERITY = t('Severity');\n\nconst getSeverityHighlightedItem = ({isEm, serviceSeverity}) => {\n\tif (!isEm) return [];\n\n\tconst severityValue = getValue(serviceSeverity);\n\tconst severityLabel = getDisplayValue(serviceSeverity);\n\tconst severityHighlightedItem = severityLabel\n\t\t? {\n\t\t\ttype: 'highlighted-value',\n\t\t\tshowIcon: true,\n\t\t\tlabel: severityLabel,\n\t\t\tstatus: CONSTANTS.GENERAL.EM_SEVERITY_TO_EDS_STATUS[severityValue]\n\t\t}\n\t\t: {\n\t\t\ttype: 'string',\n\t\t\tvalue: ''\n\t\t};\n\n\treturn [\n\t\t{\n\t\t\tlabel: LABEL_SEVERITY,\n\t\t\tvalue: severityHighlightedItem\n\t\t}\n\t];\n};\n\nexport const getHeaderFieldsJsx = args => {\n\tconst {mapInitialData} = args;\n\n\tif (!mapInitialData) return null;\n\n\tconst {processStatus, ownedBy} = mapInitialData;\n\n\tconst mapTitleItems = [\n\t\t...getSeverityHighlightedItem(args),\n\t\t{\n\t\t\tlabel: getDisplayName(processStatus),\n\t\t\tvalue: {\n\t\t\t\ttype: 'string',\n\t\t\t\tvalue: getDisplayValue(processStatus)\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tlabel: getDisplayName(ownedBy),\n\t\t\tvalue: {\n\t\t\t\ttype: 'string',\n\t\t\t\tvalue: getDisplayValue(ownedBy)\n\t\t\t}\n\t\t}\n\t];\n\n\treturn (\n\t\t<now-label-value-stacked\n\t\t\tclassName='top-side'\n\t\t\tsize='md'\n\t\t\talign='horizontal'\n\t\t\titems={mapTitleItems}\n\t\t\thas-no-margin\n\t\t/>\n\t);\n};\n","import timelineConstants from '../behavior-service-history/timelineConstants';\nimport 'sn-component-timeline';\n\nexport const getTimelineJsx = ({timelineData = {}}) => {\n\tconst {\n\t\tranges = [],\n\t\tevents = [],\n\t\ttotalRange,\n\t\tdisplayRange,\n\t\tselectedEvents,\n\t\tselectedRanges,\n\t\thighlightedEventIds\n\t} = timelineData;\n\n\t//some wierd invalid state: mapHistoryState is set, but timelineData is not entirely set\n\t//validating before rendering\n\tif (!totalRange || !displayRange) \n\t\treturn null;\n\n\tconst {start: dispStart, end: dispEnd} = displayRange;\n\tconst {start, end} = totalRange;\n\n\treturn (\n\t\t<sn-component-timeline\n\t\t\tclassName='timeline top-side now-align -block-start'\n\t\t\tstart-date={start}\n\t\t\tend-date={end}\n\t\t\tdisplay-start-date={dispStart}\n\t\t\tdisplay-end-date={dispEnd}\n\t\t\tevent-data={events}\n\t\t\trange-data={ranges}\n\t\t\tzoom-step-percent={timelineConstants.ZOOM_STEP}\n\t\t\tmin-zoom-spread='MN'\n\t\t\tpan-step-percent={timelineConstants.PAN_STEP}\n\t\t\tis-compact-view\n\t\t\tmanage-selections\n\t\t\tselected-events={selectedEvents}\n\t\t\tselected-ranges={selectedRanges}\n\t\t\thighlighted-event-ids={highlightedEventIds}\n\t\t/>\n\t);\n};\n","module.exports = __TECTONIC__sn_component_timeline;","import './mapHeaderPanel';","import {createNocElement, createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport {actionTypes} from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport toggleCheckedEffect from './toggleCheckedEffect';\nimport effectDropdownItemSelected from './effectDropdownItemSelected';\nimport styles from './mapHeaderPanel.scss';\nimport view from './mapHeaderPanelView';\n\nconst {COMPONENT_DOM_READY} = actionTypes;\n\ncreateNocElement('map-header-panel', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview,\n\t},\n\n\tstyles,\n\n\tproperties: {\n\t\tisLoading: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\tisBlocked: {\n\t\t\tdefault: false,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\t\t\n\t\tserviceId: {\n\t\t\tdefault: ''\n\t\t},\n\n\t\t/**\n\t\t * mapId is a unique ID of map application.\n\t\t * For the same serviceId, there maybe multiple map application opened side-by-side in Workspace tabs.\n\t\t * (Current map and history map)\n\t\t */\n\t\tmapId: {\n\t\t\tdefault: ''\n\t\t},\n\n\t\tisHistory: {\n\t\t\tdefault: false,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\tisEm: {\n\t\t\tdefault: false,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\tserviceSeverity: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tmapInitialData: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tmapSettings: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tnotifications: {\n\t\t\tdefault: []\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[toggleCheckedEffect.ACTION_TYPES['NOW_TOGGLE#CHECKED_SET']]:\n\t\t\tcreateActionConfig(toggleCheckedEffect.effectHandlers.toggleCheckedEffect),\n\n\t\t[effectDropdownItemSelected.ACTION_TYPES.ITEM_CLICKED]:\n\t\t\tcreateActionConfig(effectDropdownItemSelected.effectHandlers.onDropdownItemClicked),\n\n\t\t[COMPONENT_DOM_READY]: ({dispatch}) => dispatch(MAP_CONSTANTS.SN_MAP_CONNECTED)\n\t}\n});","\n\nconst ACTION_TYPES = {\n\t'NOW_TOGGLE#CHECKED_SET': 'NOW_TOGGLE#CHECKED_SET'\n};\n\nconst toggleCheckedEffect = coeffects => {\n\tconst {action, state} = coeffects;\n\tconst {model} = state.properties.mapSettings;\n\tconst {value, itemId} = action.payload;\n\tconst toggleModel = model[itemId];\n\t\n\t//invoking original angular function to switch the toggle.\n\tif (toggleModel && toggleModel.enabled !== value)\n\t\ttoggleModel.toggle();\n};\n\nconst effectHandlers = {\n\ttoggleCheckedEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./mapHeaderPanel.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl,.top-navbar{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl,.top-navbar{padding-inline-start:1.5rem;padding-inline-end:1.5rem}.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}:host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.notifications{position:absolute;left:30%;max-width:60%;min-width:40%;top:.75rem}.noc-service-map-header,.service-header,.stretch-row{flex-basis:100%}.top-navbar{width:100%;justify-content:space-between}.service-header{display:flex;flex-direction:column}:host(:not([dir=rtl])) .navbar-buttons now-button,:root:not([dir=rtl]) .navbar-buttons now-button{margin-left:.5rem}:host([dir=rtl]) .navbar-buttons now-button,:root[dir=rtl] .navbar-buttons now-button{margin-right:.5rem}.section-internals{border-top:1px solid rgb(var(--now-color--neutral-3,209,214,214))}.field-label{font-size:1rem;color:RGB(var(--now-color--neutral-18,22,27,28))}.field-label>span{text-transform:lowercase}.field-label>span:first-letter{text-transform:uppercase}.field-description{display:flex;flex-direction:column;font-size:.75rem;color:RGB(var(--now-color--neutral-18,22,27,28))}.label-toggle-pair{grid-column-start:1}.label-toggle-pair.second-column{grid-column-start:2}.flex-grow{flex-grow:1}\", \"\"]);\n\n// exports\n","import {\n\tisFunction as _isFunction, \n\tisArray as _isArray,\n\tisString as _isString,\n\tidentity as _identity,\n\tget as _get\n} from 'lodash';\nimport {t} from 'sn-translate';\nimport {Fragment, dangerouslyCreateElementFromString} from '@servicenow/ui-renderer-snabbdom';\nimport {\n\tgetDisplayValue, \n\tgenUniqueSysId\n} from '@devsnc/library-opws-mapping-shared'; //noc-element-with-tooltip, sn-noc-notifications \nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {settingsMenuSections} from './settingsMenuSections';\nimport {ACTION_TYPES as mapSettingsMenuActions} from '../map-settings-menu-behavior/mapSettingsMenuBehavior';\nimport '@servicenow/now-image';\nimport '@servicenow/now-toggle';\nimport '@servicenow/now-button';\nimport '@servicenow/now-modal';\nimport '@servicenow/now-heading';\nimport '@servicenow/now-dropdown';\nimport effectDropdownItemSelected from './effectDropdownItemSelected';\n\nconst ICON_SIZE_SM = 16;\n\nconst LABEL_HEADER = t('Header');\nconst LABEL_MORE = t('More');\nconst SETTINGS_MODAL_TITLE = t('Map display settings');\nconst LABEL_OPEN_SETTINGS = t('Open map display settings');\nconst LABEL_OPEN_FULL_MAP = t('Advanced map');\nconst LABEL_OPEN_HISTORY_MAP = t('History map');\n\nconst generateAdditionalInfoRow = row => \n\t(<div>{row}</div>);\n\nconst generateAdditionalInfoJsx = item => {\n\tif (!_isFunction(item.isAdditionalInfoShown) || item.isAdditionalInfoShown()) {\n\t\tconst additionalInfoRows = _isFunction(item.additionalInfo) ? item.additionalInfo() : item.additionalInfo;\n\t\tconst rowsArr = _isArray(additionalInfoRows) ? additionalInfoRows : [additionalInfoRows];\n\t\tconst additionalInfo = rowsArr.map(generateAdditionalInfoRow);\n\n\t\treturn additionalInfo || null;\n\t}\n\n\treturn null;\n};\n\nconst parseLabel = label => {\n\tif (!_isString(label)) {\n\t\treturn {\n\t\t\tlabelJsx: '',\n\t\t\tlabelPlainText: ''\n\t\t};\n\t}\n\n\tif (label.includes('<span')) {\n\t\t//parsing HTML label as vnode and plainText\n\t\tconst labelVnode = dangerouslyCreateElementFromString(label); //assuming label is a single root HTML\n\t\tconst labelPlainText = _get(labelVnode, 'elm.innerText', '');\n\n\t\treturn {\n\t\t\tlabelJsx: labelVnode,\n\t\t\tlabelPlainText\n\t\t};\n\t}\n\n\t//plain text label\n\treturn {\n\t\tlabelJsx: label,\n\t\tlabelPlainText: label\n\t};\n};\n\nconst generateToggleLabelItem = (sectionId, item, idx) => {\n\t//if item not shown, when don't render it\n\tif (_isFunction(item.isShown) && !item.isShown())\n\t\treturn null;\n\n\tconst itemId = String(item.id) || `fallback-item-id-${idx}`;\n\tconst additionalInfoId = `description_${itemId}`;\n\tconst descriptionId = `description_hidden_${itemId}`;\n\tconst additionalInfo = generateAdditionalInfoJsx(item);\n\n\tconst descriptionFieldJsx = item.description ?\n\t\t<label className='now-a11y-label' id={descriptionId}>\n\t\t\t{item.description}\n\t\t</label> :\n\t\tnull;\n\n\tconst labelledByIds = [\n\t\tsectionId,\n\t\tadditionalInfoId,\n\t\titem.description ? descriptionId : ''\n\t].join(' '); \n\n\tconst {labelJsx, labelPlainText} = parseLabel(item.label);\n\n\tconst iconJsx = item.icon ?\n\t\t<now-image \n\t\t\tclassName='field-icon now-m-inline-end--sm' \n\t\t\twidth={ICON_SIZE_SM}\n\t\t\theight={ICON_SIZE_SM}\n\t\t\tsrc={item.icon} \n\t\t\talt={labelPlainText}/> : \n\t\tnull;\n\n\t\n\tconst valueJsx = (\n\t\t<div className='now-align flex-column now-m-block-start--sm'>\n\t\t\t<span className='now-align -block-start flex-grow'>\n\t\t\t\t<label \n\t\t\t\t\tclassName='field-label now-align -inline-start flex-grow' \n\t\t\t\t\tid={sectionId}>\n\t\t\t\t\t{labelJsx}\n\t\t\t\t</label>\n\n\t\t\t\t{descriptionFieldJsx}\n\t\t\t\t{iconJsx}\n\n\t\t\t\t<noc-element-with-tooltip\n\t\t\t\t\tclassName='now-align -inline-end'\n\t\t\t\t\ttooltip={item.description || null}>\n\n\t\t\t\t\t<now-toggle\n\t\t\t\t\t\tappend-to-payload={{itemId}}\n\t\t\t\t\t\tmanage-checked\n\t\t\t\t\t\tprops-checked={Boolean(item.enabled)}\n\t\t\t\t\t\tprops-disabled={_isFunction(item.isDisabled) && item.isDisabled()}\n\t\t\t\t\t\taria-labelledby={labelledByIds} />\n\n\t\t\t\t</noc-element-with-tooltip>\n\t\t\t</span>\n\t\t\t\n\t\t\t<label \n\t\t\t\tclassName='field-description now-align -block-end'\n\t\t\t\tid={additionalInfoId}>\n\t\t\t\t{additionalInfo}\n\t\t\t</label>\n\t\t</div>\n\t);\n\t\n\treturn valueJsx;\n};\n\nconst firstLetterCapital = str => \n\t_isString(str) ? `${str.charAt(0).toLocaleUpperCase()}${str.substr(1).toLocaleLowerCase()}` : '';\n\nconst generateSectionContainerJsx = (model, section, index) => {\n\tif (!model)\n\t\treturn null;\n\n\tif (section.keys.length === 0) \n\t\treturn null;\n\n\tconst sectionId = `section_${section.id}`;\n\tconst sectionItems = section.keys.map(key => model[key]).filter(Boolean);\n\tconst togglesJsx = sectionItems.map(generateToggleLabelItem.bind(null, sectionId)).filter(Boolean);\n\n\t//canShow() conditions per each item can filter out everything. If list is empty, secion should not be rendered.\n\tif (togglesJsx.length === 0)\n\t\treturn null;\n\n\tconst cssClassSection = {\n\t\tsection: true,\n\t\t'now-m-inline--xl': true,\n\t\t'now-m-block-start--xl': index !== 0\n\t};\n\t\n\treturn (\n\t\t<section class={cssClassSection}>\n\t\t\t<now-heading\n\t\t\t\tclassName='section-legend now-m-block-end--sm' \n\t\t\t\tid={sectionId}\n\t\t\t\tlabel={firstLetterCapital(String(section.label))}\n\t\t\t\tlevel='2'\n\t\t\t\tvariant='title-primary'\n\t\t\t\thas-no-margin/>\n\n\t\t\t<div className='section-internals now-p-block-start--md'>\n\t\t\t\t{togglesJsx}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nconst openSettings = dispatch => () => \n\tdispatch(mapSettingsMenuActions.MAP_TOGGLE_SETTINGS_VIEW, {isOpen: true});\n\n\nconst openHistoryMap = ({serviceId, isEm, dispatch}) => () => {\n\t//for history map, generating a different unique id to open separate tab side by side with current map.\n\t//invoking genUniqueSysId will rotate each character twice and create another unique id.\n\tconst fakeId = genUniqueSysId(genUniqueSysId(serviceId));\n\tdispatch('ITEM_SELECTED', {\n\t\ttable: 'app_service_history_map',\n\t\tsys_id: fakeId,\n\t\tparams: {\n\t\t\tisEm,\n\t\t\tserviceId,\n\t\t\tisHistory: true\n\t\t},\n\t\t//history/compare only exists in discovered service.\n\t\tparent_table: 'cmdb_ci_service_discovered',\n\t\tparent_sys_id: serviceId\n\t});\n};\n\nconst getMapHeaderJsx = mapInitialData => \n\tmapInitialData ? getDisplayValue(mapInitialData.name) : '';\n\n\nconst moreItems = [\n\t{\n\t\tid: effectDropdownItemSelected.ITEM_IDS.FULL_MAP,\n\t\tlabel: LABEL_OPEN_FULL_MAP,\n\t\ticon: 'open-link-outline'\n\t}\n];\n\nconst getHeaderButtonsJsx = ({isHistory, serviceId, isEm, isBlocked, dispatch}) => {\n\tconst currentMapButtons = isHistory ? \n\t\tnull : (\n\t\t\t<Fragment>\n\t\t\t\t<now-button\n\t\t\t\t\tlabel={LABEL_OPEN_HISTORY_MAP}\n\t\t\t\t\tsize='md'\n\t\t\t\t\tdisabled={isBlocked}\n\t\t\t\t\ton-click={isBlocked ? _identity : openHistoryMap({serviceId, isEm, dispatch})}\n\t\t\t\t/>\n\n\t\t\t\t<now-dropdown\n\t\t\t\t\tclassName='now-m-inline-start--sm'\n\t\t\t\t\tmanage-selected-items\n\t\t\t\t\thide-caret \n\t\t\t\t\thide-label \n\t\t\t\t\ticon='ellipsis-h-outline'\n\t\t\t\t\tselect='none' \n\t\t\t\t\tselected-items='[]' \n\t\t\t\t\tsize='md' \n\t\t\t\t\tvariant='secondary'\n\t\t\t\t\ttooltip-content={LABEL_MORE}\n\t\t\t\t\titems={moreItems}\n\t\t\t\t\tappend-to-payload={{dropdownId: effectDropdownItemSelected.DROPDOWN_ID}}\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<now-button-iconic\n\t\t\t\tclassName='now-m-block-end--md'\n\t\t\t\ticon='gear-outline'\n\t\t\t\tsize='md'\n\t\t\t\ton-click={openSettings(dispatch)}\n\t\t\t\ttooltip-content={LABEL_OPEN_SETTINGS}\n\t\t\t\tconfig-aria={{'aria-label': LABEL_OPEN_SETTINGS}}\n\t\t\t/>\n\t\t\t\t\n\t\t\t{currentMapButtons}\n\t\t</Fragment>\n\t);\n\n};\n\nexport default (state, {dispatch}) => {\n\tconst {\n\t\tserviceId, \n\t\tmapId,\n\t\tmapInitialData = {}, \n\t\tmapSettings, \n\t\tisEm,\n\t\tnotifications = [],\n\t\tisHistory,\n\t\tisLoading,\n\t\tisBlocked\n\t} = state.properties;\n\n\tif (!mapId)\n\t\treturn;\n\n\tconst {model, isOpen} = (mapSettings || {});\n\tconst formJsx = settingsMenuSections.map(generateSectionContainerJsx.bind(null, model));\n\tconst mapHeader = getMapHeaderJsx(mapInitialData);\n\tconst headerButtonsJsx = isLoading ? null : getHeaderButtonsJsx({isHistory, serviceId, isEm, isBlocked, dispatch});\n\tconst notificationsComponentId = `${MAP_CONSTANTS.MAP_APP_NOTIFICATIONS_COMPONENT_ID_BASE}_${mapId}`;\n\n\treturn (\n\t\t<header \n\t\t\tclassName='now-align -block-start top-navbar' \n\t\t\tid={`${mapId}_landmark_header`}\n\t\t\taria-label={LABEL_HEADER}\n\t\t>\n\n\t\t\t<span className='now-align service-header'>\n\t\t\t\t<div className='now-align -inline-start'>\n\t\t\t\t\t<now-heading\n\t\t\t\t\t\tclassName='noc-service-map-header'\n\t\t\t\t\t\tlabel={mapHeader}\n\t\t\t\t\t\tlevel='1'\n\t\t\t\t\t\tvariant='header-primary'\n\t\t\t\t\t\thas-no-margin/>\n\n\t\t\t\t\t<div className='now-align -inline-end navbar-buttons'>\n\t\t\t\t\t\t{headerButtonsJsx}\n\n\t\t\t\t\t\t<now-modal\n\t\t\t\t\t\t\tmanage-opened\n\t\t\t\t\t\t\topened={isOpen}\n\t\t\t\t\t\t\tappend-to-payload={{mapId}}\n\t\t\t\t\t\t\tcontent-full-width\n\t\t\t\t\t\t\tsize='md'\n\t\t\t\t\t\t\theader-label={SETTINGS_MODAL_TITLE}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='map-settings-form now-m-block-end--md'>\n\t\t\t\t\t\t\t\t{formJsx}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</now-modal>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</span>\n\n\t\t\t<sn-noc-notifications\n\t\t\t\tcomponent-id={notificationsComponentId}\n\t\t\t\tclassName='notifications'\n\t\t\t\tnotifications={notifications}/>\n\t\t</header>\n\t);\n};","const ACTION_TYPES = {\n\tMAP_TOGGLE_SETTINGS_VIEW: 'MAP_TOGGLE_SETTINGS_VIEW'\n};\n\nconst mapToggleSettingsEffect = coeffects => {\n\tconst {\n\t\tstate: {\n\t\t\tmapSettings\n\t\t},\n\t\tupdateState,\n\t\taction: {\n\t\t\tpayload\n\t\t}\n\t} = coeffects;\n\n\tconst {isOpen = false} = payload;\n\n\tupdateState({\n\t\tmapSettings: {\n\t\t\t...mapSettings,\n\t\t\tisOpen\n\t\t}\n\t});\n};\n\nconst mapSettingsModalClosedEffect = coeffects => {\n\tconst {\n\t\tstate: {\n\t\t\tmapSettings\n\t\t},\n\t\tproperties: {\n\t\t\tmapId\n\t\t},\n\t\taction: {\n\t\t\tpayload\n\t\t},\n\t\tupdateState\n\t} = coeffects;\n\n\tif (payload.mapId !== mapId)\n\t\treturn;\n\n\tupdateState({\n\t\tmapSettings: {\n\t\t\t...mapSettings,\n\t\t\tisOpen: payload.value\n\t\t}\n\t});\n};\n\nconst effectHandlers = {\n\tmapToggleSettingsEffect,\n\tmapSettingsModalClosedEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","module.exports = __TECTONIC__$servicenow_now_toggle;","module.exports = __TECTONIC__$servicenow_now_modal;","module.exports = __TECTONIC__$servicenow_now_dropdown;","import './mapSidePanel';","import {\n\tcreateNocElement, \n\tcreateActionConfig, \n\teffectToggleSidePanel\n} from '@devsnc/library-opws-mapping-shared';\n\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport view from './mapSidePanelView';\nimport styles from './mapSidePanel.scss';\n\ncreateNocElement('map-side-panel', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tstyles,\n\tproperties: {\n\t\tisLoading: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\tisBlocked: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\tmapComponentId: {\n\t\t\tdefault: ''\n\t\t},\n\n\t\topened: {\n\t\t\tdefault: true,\n\t\t\tschema: {\n\t\t\t\ttype: 'boolean'\n\t\t\t}\n\t\t},\n\n\t\tmapHistoryState: {\n\t\t\tdefault: null\n\t\t}\n\t},\n\n\tactionHandlers: {\n\t\t[effectToggleSidePanel.ACTION_TYPES.TOGGLE_SIDE_PANEL]:\n\t\t\tcreateActionConfig(effectToggleSidePanel.effectHandlers.toggleSidePanel, false)\n\t}\n});\n","import {t} from 'sn-translate';\nimport '@servicenow/now-record-common';\nimport './actions/sn-map-properties';\nimport './actions/mapCardTypes';\nimport '../sn-map-related-items-list';\nimport {getSidePanelTitle} from '../map-side-panel/getSidePanelHeader';\n\nconst LABEL_SIDE_PANEL = t('Side panel');\n\nconst sidePanelPayload = {\n\tsidePanelStatePropertyName: 'opened'\n};\n\nconst getPropertiesTab = (mapComponentId, mapHistoryState) => ({\n\tactionComponent: 'sn-map-properties',\n\tactionAttributes: {\n\t\tmapProperties: `@${mapComponentId}/mapProperties`,\n\t\tserviceId: `@${mapComponentId}/serviceId`,\n\t\tdisplayRange: `@${mapComponentId}/timelineData.displayRange`,\n\t\tmapHistoryState\n\t},\n\torder: 0,\n\tassignmentId: `${mapComponentId}-sn-map-properties`, //important for unique componentId\n\tname: 'sn-map-properties',\n\ttooltip: getSidePanelTitle({isFilterActive: false, isPropertiesPanel: true, mapHistoryState}),\n\ticon: 'circle-info-outline'\n});\n\nconst getRelatedItemsTab = (mapComponentId, mapHistoryState) => {\n\tconst headerTitle = getSidePanelTitle({isFilterActive: false, isPropertiesPanel: false, mapHistoryState});\n\n\tconst actionAttributes = {\n\t\tcomponentId: `${mapComponentId}_related_items_list`,\n\t\tisLoading: `@${mapComponentId}/cardsAreLoading`,\n\t\tserviceId: `@${mapComponentId}/serviceId`,\n\t\titemTypes: `@${mapComponentId}/relatedItemTypes`,\n\t\titemIds: `@${mapComponentId}/relatedItemIds`,\n\t\titemsResponse: `@${mapComponentId}/relatedItemsResponse`,\n\t\tfilteredItems: `@${mapComponentId}/filteredItems`,\n\t\tmapProperties: `@${mapComponentId}/mapProperties`,\n\t\tselectedCardId: `@${mapComponentId}/selectedCardId`,\n\t\tdisplayRange: `@${mapComponentId}/timelineData.displayRange`,\n\t\ttopologyChangesRange: `@${mapComponentId}/userMeta.topologyChangesRange`,\n\t\tmapHistoryState\n\t};\n\n\treturn {\n\t\tactionComponent: 'sn-map-related-items-list',\n\t\tactionAttributes,\n\t\torder: 1,\n\t\tassignmentId: `${mapComponentId}-sn-map-related-items-list`, //important for unique componentId\n\t\tname: 'sn-map-related-items-list',\n\t\ttooltip: headerTitle,\n\t\ticon: 'list-fill'\n\t};\n};\n\nexport default state => {\n\tconst {\n\t\topened, \n\t\tmapComponentId,\n\t\tmapHistoryState,\n\t\tisLoading,\n\t\tisBlocked\n\t} = state.properties;\n\t\n\t//not creating related items tab until the map is fully loaded\n\tconst actions = isLoading || isBlocked ? [\n\t\tgetPropertiesTab(mapComponentId, mapHistoryState)\n\t] : [\n\t\tgetPropertiesTab(mapComponentId, mapHistoryState),\n\t\tgetRelatedItemsTab(mapComponentId, mapHistoryState)\n\t];\n\n\tconst wrapperClass = {\n\t\t'map-side-panel': true,\n\t\t'is-opened': opened\n\t};\n\n\treturn (\n\t\t<aside class={wrapperClass} aria-label={LABEL_SIDE_PANEL}>\n\t\t\t<now-record-common-sidebar \n\t\t\t\tactions={actions} \n\t\t\t\tappend-to-payload={sidePanelPayload}\n\t\t\t\tmanage-opened\n\t\t\t\topened={opened}/>\n\t\t</aside>\n\t);\n};\n","module.exports = __TECTONIC__$servicenow_now_record_common;","import './snMapProperties';","import snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport {createNocElement} from '@devsnc/library-opws-mapping-shared';\nimport view from './snMapPropertiesView';\nimport styles from './snMapProperties.scss';\n\ncreateNocElement('sn-map-properties', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\tstyles,\n\tproperties: {\n\t\tmapProperties: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tserviceId: {\n\t\t\tdefault: ''\n\t\t},\n\n\t\tmapHistoryState: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tdisplayRange: {\n\t\t\tdefault: {}\n\t\t}\n\t}\n});\n","import '@servicenow/now-label-value';\nimport '@servicenow/now-heading';\nimport {isArray as _isArray, isString as _isString, values as _values} from 'lodash';\nimport {t} from 'sn-translate';\nimport {getBackButtonJsx} from '@devsnc/library-opws-mapping-shared';\nimport {getSidePanelTitle, getSidePanelHeaderJsx, getElementType, isEndpoint} from '../../getSidePanelHeader';\nimport actionTypes from './actionTypes';\nimport MAP_CONSTANTS from '../../../map-shared/constants';\n\nconst EMPTY = t('Empty');\n\nconst {CI_PROPERTY_CHANGE_STATES} = MAP_CONSTANTS;\n\nconst createLabelValue = (items, sectionId) => {\n\tconst newValues = items.values.map(value => ({\n\t\tvalue: value.value,\n\t\ttype: 'string',\n\t\t...(value.previous ? {previous: value.previous} : {})\n\t}));\n\n\tconst edsItems = [\n\t\t{\n\t\t\tlabel: items.label,\n\t\t\tvalue: newValues\n\t\t}\n\t];\n\n\tconst key = `${sectionId}_${items.label}`;\n\n\n\treturn (\n\t\t<span key={key} className='item-wrapper'>\n\t\t\t<now-label-value-stacked\n\t\t\t\tclassName='item'\n\t\t\t\tsize='md'\n\t\t\t\tvariant='primary'\n\t\t\t\talign='vertical'\n\t\t\t\twrapped={true}\n\t\t\t\titems={edsItems} />\n\t\t</span>\n\t);\n};\n\nconst prepareClusterNodes = (items, serviceId, dispatch) => (\n\titems.map(item =>\n\t\t<div className='now-align cluster-node-value'>\n\t\t\t<now-text-link\n\t\t\t\tclassName='now-align -block-start link now-p-block--xs'\n\t\t\t\tlabel={item.linkLabel}\n\t\t\t\thref='javascript:void(0)'\n\t\t\t\ton-click={openForm({sysId: item.sysId, ciType: item.type, serviceId, dispatch})}\n\t\t\t\tvariant='secondary' />\n\n\t\t\t<now-label-value-inline className='now-align -block-end' label={item.hostName} />\n\n\t\t</div>\n\t)\n);\n\nconst createLabelValueWithLink = (data, dispatch, sectionId) => {\n\tconst {label, items, serviceId} = data;\n\tconst key = `${sectionId}_${label}`;\n\treturn (\n\t\t<span key={key} className='item-wrapper cluster-node'>\n\t\t\t<now-label-value-inline label={label} />\n\t\t\t{prepareClusterNodes(items, serviceId, dispatch)}\n\t\t</span>\n\t);\n};\n\nconst buildValues = value => (\n\t{\n\t\ttype: 'string',\n\t\tvalue\n\t}\n);\n\nconst createSectionData = (meta, data) => {\n\tconst {serviceId, dispatch, sectionId} = meta;\n\tconst {\n\t\tvalue,\n\t\tlabel,\n\t\toldValue: previous,\n\t\tchangeState,\n\t\tisLink = false\n\t} = data;\n\tif ((!value && !previous) || !label)\n\t\treturn null;\n\n\tif (isLink)\n\t\treturn prepareLabelValueWithLink(serviceId, label, value, dispatch, sectionId);\n\n\tconst changeType = CI_PROPERTY_CHANGE_STATES[changeState];\n\n\tif (changeType) {\n\t\tconst items = {\n\t\t\tlabel,\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tvalue: getItemValue(changeState, value),\n\t\t\t\t\tprevious: getItemPrevious(changeState, previous)\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\treturn createLabelValue(items, sectionId);\n\t}\n\n\tif (_isString(value)) {\n\n\t\tconst items = {\n\t\t\tlabel,\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\treturn createLabelValue(items, sectionId);\n\t}\n\n\tif (_isArray(value)) {\n\t\tconst values = value.map(buildValues);\n\t\tconst items = {\n\t\t\tlabel,\n\t\t\tvalues\n\t\t};\n\t\treturn createLabelValue(items, sectionId);\n\t}\n};\n\nconst getItemValue = (changeState, value) => {\n\tif (changeState === CI_PROPERTY_CHANGE_STATES.REMOVED)\n\t\treturn EMPTY;\n\treturn value;\n};\n\nconst getItemPrevious = (changeState, previous) => {\n\tif (changeState === CI_PROPERTY_CHANGE_STATES.ADDED)\n\t\treturn EMPTY;\n\treturn previous;\n};\n\nconst prepareLabelValueWithLink = (serviceId, label, value, dispatch, sectionId) => {\n\tif (_isString(value)) {\n\t\tconst item = {\n\t\t\tserviceId,\n\t\t\tlabel,\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tsysId: value.sysId,\n\t\t\t\t\ttype: value.type,\n\t\t\t\t\tlinkLabel: value.name,\n\t\t\t\t\thostName: value.hostName\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\treturn createLabelValueWithLink(item, dispatch, sectionId);\n\t}\n\n\tif (_isArray(value)) {\n\t\tconst item = {\n\t\t\tserviceId,\n\t\t\tlabel,\n\t\t\titems:\n\t\t\t\tvalue.map(value => ({\n\t\t\t\t\tsysId: value.sysId,\n\t\t\t\t\ttype: value.type,\n\t\t\t\t\tlinkLabel: value.name,\n\t\t\t\t\thostName: value.hostName\n\t\t\t\t}))\n\t\t};\n\t\treturn createLabelValueWithLink(item, dispatch, sectionId);\n\t}\n};\n\nconst generateSection = (meta, section) => {\n\tconst {sys_id: sectionId} = section;\n\tconst sectionItems = _values(section.data).map(createSectionData.bind(null, {...meta, sectionId}));\n\treturn (\n\t\t<span className='section-wrapper'>\n\t\t\t<now-heading\n\t\t\t\tclassName='section-header now-p-block-end--sm'\n\t\t\t\tlabel={section.name}\n\t\t\t\tlevel='3'\n\t\t\t\tvariant='title-primary'\n\t\t\t\thas-no-margin />\n\n\t\t\t{sectionItems}\n\t\t</span>\n\t);\n};\n\n/**\n * Opens secondary child tab for CI form under the primary service tab\n * @param {*} sysId \n * @param {*} className \n * @param {*} dispatch \n */\nconst openForm = ({sysId, ciType, serviceId, dispatch}) => () => {\n\tdispatch('ITEM_SELECTED', {\n\t\ttable: ciType,\n\t\tsys_id: sysId,\n\t\tparent_table: 'cmdb_ci_service_discovered',\n\t\tparent_sys_id: serviceId\n\t});\n};\n\n//view()\nexport default (state, {dispatch}) => {\n\tconst {\n\t\tmapProperties,\n\t\tserviceId,\n\t\tmapHistoryState,\n\t\tdisplayRange\n\t} = state.properties;\n\n\tconst {\n\t\tsections = []\n\t} = (mapProperties || {});\n\t\n\tconst isElementSelected = Boolean(getElementType(mapProperties || {}) || isEndpoint({mapProperties}));\n\tconst filterApplied = isElementSelected ? {type: MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP} : null;\n\n\tconst panelHeaderJsx = getSidePanelHeaderJsx({serviceId, mapProperties, mapHistoryState, dispatch, filterApplied, displayRange});\n\tconst sectionsMap = sections.map(generateSection.bind(null, {serviceId, dispatch}));\n\tconst sectionJsx = (\n\t\t<div className='content'>\n\t\t\t{sectionsMap}\n\t\t</div>\n\t);\n\n\tconst isFilterActive = Boolean(filterApplied && filterApplied.type);\n\n\tconst heading = getSidePanelTitle({ \n\t\tisFilterActive,\n\t\tisPropertiesPanel: true,\n\t\tmapHistoryState\n\t});\n\n\tconst backButton = getBackButtonJsx({\n\t\tdispatch, \n\t\tshowBackButton: isFilterActive, \n\t\tactionType: actionTypes.BACK_ACTION\n\t});\n\n\tconst headingJsx = heading ? (\n\t\t<now-heading\n\t\t\tclassName='now-align -inline-end'\n\t\t\tlabel={heading}\n\t\t\tvariant='header-secondary'\n\t\t\tlevel='2'\n\t\t\thas-no-margin\n\t\t/>\n\t) : null;\n\n\tconst panelHeaderWrapperJsx = panelHeaderJsx ? (\n\t\t<div className='now-align -block-end flex-full-width now-m-block-start--xl'>\n\t\t\t{panelHeaderJsx}\n\t\t</div>\n\t) : null;\n\n\treturn (\n\t\t<section className='map-properties now-align flex-column'>\n\t\t\t<div className='now-align -block-start flex-column'>\n\t\t\t\t<div className='now-align -block-start'>\n\t\t\t\t\t{backButton}\n\t\t\t\t\t{headingJsx}\n\t\t\t\t</div>\n\t\t\t\t{panelHeaderWrapperJsx}\n\t\t\t</div>\n\t\t\t\n\t\t\t{sectionJsx}\n\t\t</section>\n\t);\n};","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapProperties.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.content .item-wrapper,.now-align{display:flex}.content .-row.-reverse.item-wrapper,.now-align.-row.-reverse{flex-direction:row-reverse}.content .-column.item-wrapper,.now-align.-column{flex-direction:column}.content .-column.-reverse.item-wrapper,.now-align.-column.-reverse{flex-direction:column-reverse}.content .-wrap.item-wrapper,.now-align.-wrap{flex-wrap:wrap}.content .-inline.item-wrapper,.now-align.-inline{justify-content:space-between}.content .-inline-center.item-wrapper,.now-align.-inline-center{justify-content:center}.content .-inline-end.item-wrapper,.now-align.-inline-end{justify-content:flex-end}.content .-block-start.item-wrapper,.now-align.-block-start{align-items:flex-start}.content .-block-center.item-wrapper,.now-align.-block-center{align-items:center}.content .-block-end.item-wrapper,.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.content .item-wrapper,.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.content .section-header,.now-m-block--lg{margin-block-start:1rem;margin-block-end:1rem}.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.content .section-header,.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.content .section-wrapper,.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.content,.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.content,.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.content,.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}:host{width:100%;height:100%;display:block}.map-properties{display:flex;flex-direction:column;width:21.5rem;height:100%;padding:1.5rem}.content{flex-grow:1;overflow-y:auto}:host(:not([dir=rtl])) .content,:root:not([dir=rtl]) .content{margin-right:-1.5rem}:host([dir=rtl]) .content,:root[dir=rtl] .content{margin-left:-1.5rem}.content .section-wrapper{padding:0;margin:0}.content .section-header{border-bottom:1px solid rgb(var(--now-color--neutral-3,209,214,214));margin-top:0}.content .item-wrapper{padding:0}.content .item-wrapper .item{max-width:100%}.content .item-wrapper.cluster-node,.content .item-wrapper.cluster-node .cluster-node-value{flex-flow:column}i,img{height:1.5rem;display:block}.sub-title{display:block}.link,.sub-title{font-size:.75rem}.font-md{font-size:1rem}.font-sm{font-size:.75rem}\", \"\"]);\n\n// exports\n","import '@devsnc/library-opws-mapping-shared'; //sn-opws-alert-card\nimport '../../sn-map-change-card';\nimport '../../sn-map-problem-card';\nimport '../../sn-map-affected-ci-card';\nimport '../../sn-map-change-request-card';\nimport '../../sn-map-incident-card';\nimport '../../sn-map-outages-card';\n","import './snMapChangeCard';","import {createCardComponent, generateViewFn} from '@devsnc/library-opws-mapping-shared';\nimport {getChangeCardContentJsx as getCardContentJsx} from './getChangeCardContentJsx';\nimport {ACTION_TYPES} from './actionTypes';\n\nconst view = generateViewFn({\n\tgetCardContentJsx,\n\topenFormActionType: false,\n\tcardSelectedActionType: ACTION_TYPES.TOPO_CHANGE_CARD_SELECTED,\n\tsize: 'lg'\n});\n\n/**\n * Seismic component `sn-map-change-card`.\n * Card for map topology changes to show on side panel on nocpit and on map.\n **/\ncreateCardComponent({\n\tcomponentName: 'sn-map-change-card',\n\tview\n});","import {t} from 'sn-translate';\n\nconst LABEL_CHANGE_TIME = t('Change time');\n\nexport const getChangeCardContentJsx = item => {\n\tconst {time} = item;\n\n\tconst labelValueItems = [\n\t\t{\n\t\t\tlabel: LABEL_CHANGE_TIME,\n\t\t\tvalue: time\n\t\t}\n\t];\n\t\n\treturn (\n\t\t<div className='now-m-block-start--sm'>\n\t\t\t<now-label-value-stacked\n\t\t\t\ttruncated\n\t\t\t\tsize='sm'\n\t\t\t\titems={labelValueItems}/>\n\t\t</div>\n\t);\n};","import './snMapProblemCard';","import {createCardComponent, generateViewFn} from '@devsnc/library-opws-mapping-shared';\nimport {getProblemCardContentJsx as getCardContentJsx} from './getProblemCardContentJsx';\nimport {CARD_COMPONENTS, INDICATOR_IDS, ACTION_TYPES} from '../map-shared/indicatorTypes';\nimport styles from './snMapProblemCard.scss';\n\n\nconst view = generateViewFn({\n\tgetCardContentJsx,\n\topenFormActionType: ACTION_TYPES.OPEN_INDICATOR_FORM_INVOKED,\n\tcardSelectedActionType: ACTION_TYPES.MAP_INDICATOR_CARD_SELECTED,\n\tfooterFieldName: 'sysUpdatedOn',\n\tdescriptionFieldName: 'shortDescription'\n});\n\n/**\n * Seismic component `sn-map-problem-card`.\n * Card for map topology changes to show on side panel on nocpit and on map.\n **/\ncreateCardComponent({\n\tcomponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_PROBLEM],\n\tstyles,\n\tview\n});","import {\n\tgetIndicatorCardWithAvatarJsx, \n\tgetAvatarElementJsx, \n\tgetLabelValueElementJsx\n} from '@devsnc/library-opws-mapping-shared';\n\nexport const getProblemCardContentJsx = item => {\n\tconst {\n\t\tassignedTo,\n\t\tassignmentGroup,\n\t\tcmdbCi,\n\t\trelatedIncidents\n\t} = item;\n\n\tconst items = [\n\t\t{jsxBuilder: getAvatarElementJsx, field: assignedTo},\n\t\t{jsxBuilder: getLabelValueElementJsx, field: assignmentGroup},\n\t\t{jsxBuilder: getLabelValueElementJsx, field: cmdbCi},\n\t\t{jsxBuilder: getLabelValueElementJsx, field: relatedIncidents},\n\t];\n\n\tconst cardJsx = getIndicatorCardWithAvatarJsx(items);\n\treturn (\n\t\t<div>\n\t\t\t{cardJsx}\n\t\t</div>\n\t);\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapProblemCard.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","import './snMapAffectedCiCard';","import {createCardComponent, generateViewFn} from '@devsnc/library-opws-mapping-shared';\nimport {getAffectedCiCardContentJsx as getCardContentJsx} from './getAffectedCiCardContentJsx';\nimport {CARD_COMPONENTS, INDICATOR_IDS, ACTION_TYPES} from '../map-shared/indicatorTypes';\nimport styles from './snMapAffectedCiCard.scss';\n\n\nconst view = generateViewFn({\n\tgetCardContentJsx,\n\topenFormActionType: ACTION_TYPES.OPEN_INDICATOR_FORM_INVOKED,\n\tcardSelectedActionType: ACTION_TYPES.MAP_INDICATOR_CARD_SELECTED,\n\tfooterFieldName: 'sysUpdatedOn',\n\tdescriptionFieldName: 'ciItem'\n});\n\n/**\n * Seismic component `sn-map-affected-ci-card`.\n * Card for map topology changes to show on side panel on nocpit and on map.\n **/\ncreateCardComponent({\n\tcomponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_AFFECTED_CIS],\n\tstyles,\n\tview\n});","import {\n\tgetLabelValueJsx, \n\tformatComplexFieldToStringLabelValue\n} from '@devsnc/library-opws-mapping-shared';\n\nexport const getAffectedCiCardContentJsx = item => {\n\tconst {\n\t\tsysClassName,\n\t\tsupportGroup\n\t} = item;\n\n\tconst itemsCol1 = [\n\t\tformatComplexFieldToStringLabelValue(sysClassName)\n\t];\n\n\tconst itemsCol2 = [\n\t\tformatComplexFieldToStringLabelValue(supportGroup)\n\t];\n\n\treturn (\n\t\t<div className='columns-layout now-m-block--sm'>\n\t\t\t{getLabelValueJsx(itemsCol1)}\n\t\t\t{getLabelValueJsx(itemsCol2, true)}\n\t\t</div>\n\t);\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapAffectedCiCard.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.columns-layout{display:grid;grid-template-columns:50% 50%;grid-auto-flow:row dense;grid-row-gap:.5rem}\", \"\"]);\n\n// exports\n","import './snMapChangeRequestCard';","import {createCardComponent, generateViewFn} from '@devsnc/library-opws-mapping-shared';\nimport {getChangeRequestCardContentJsx as getCardContentJsx} from './getChangeRequestCardContentJsx';\nimport {ACTION_TYPES, CARD_COMPONENTS, INDICATOR_IDS} from '../map-shared/indicatorTypes';\nimport styles from './snMapChangeRequest.scss';\n\nconst view = generateViewFn({\n\tgetCardContentJsx,\n\topenFormActionType: ACTION_TYPES.OPEN_INDICATOR_FORM_INVOKED,\n\tcardSelectedActionType: ACTION_TYPES.MAP_INDICATOR_CARD_SELECTED,\n\tdescriptionFieldName: 'shortDescription'\n});\n\n/**\n * Seismic component `sn-map-change-request-card`.\n * Card for map topology changes to show on side panel on nocpit and on map.\n **/\ncreateCardComponent({\n\tcomponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_CHANGE_REQUEST],\n\tstyles,\n\tview\n});","import {INDICATOR_IDS} from '../map-shared/indicatorTypes';\nimport {\n\tgetIndicatorCardWithAvatarJsx, \n\tgetAvatarElementJsx, \n\tgetLabelValueElementJsx\n} from '@devsnc/library-opws-mapping-shared';\n\nexport const getChangeRequestCardContentJsx = (item, selectedTab) => {\n\tconst {\n\t\tassignedTo,\n\t\tassignmentGroup,\n\t\tstartDate, // planned\n\t\tendDate,\n\t\tworkStart, // actual\n\t\tworkEnd\n\t} = item;\n\n\tlet startTime = '';\n\tlet endTime = '';\n\n\tswitch (selectedTab) {\n\t\tcase INDICATOR_IDS.MAP_CHANGE_REQUEST_CURRENT:\n\t\t\tstartTime = workStart;\n\t\t\tbreak;\n\t\tcase INDICATOR_IDS.MAP_CHANGE_REQUEST_PLANNED:\n\t\t\tstartTime = startDate;\n\t\t\tendTime = endDate;\n\t\t\tbreak;\n\t\tcase INDICATOR_IDS.MAP_CHANGE_REQUEST_PAST:\n\t\t\tstartTime = workStart;\n\t\t\tendTime = workEnd;\n\t\t\tbreak;\n\n\t}\n\n\tconst items = {\n\t\t1: {jsxBuilder: getLabelValueElementJsx, field: startTime},\n\t\t2: {jsxBuilder: getLabelValueElementJsx, field: endTime},\n\t\t3: {jsxBuilder: getAvatarElementJsx, field: assignedTo},\n\t\t4: {jsxBuilder: getLabelValueElementJsx, field: assignmentGroup},\n\t};\n\n\tconst cardJsx = getIndicatorCardWithAvatarJsx(items);\n\treturn (\n\t\t<div>\n\t\t\t{cardJsx}\n\t\t</div>\n\t);\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapChangeRequest.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","import './snMapIncidentCard';","import {createCardComponent, generateViewFn} from '@devsnc/library-opws-mapping-shared';\nimport {getIncidentCardContentJsx as getCardContentJsx} from './getIncidentCardContentJsx';\nimport {ACTION_TYPES, CARD_COMPONENTS, INDICATOR_IDS} from '../map-shared/indicatorTypes';\nimport styles from './snMapIncidentCard.scss';\n\nconst view = generateViewFn({\n\tgetCardContentJsx,\n\topenFormActionType: ACTION_TYPES.OPEN_INDICATOR_FORM_INVOKED,\n\tcardSelectedActionType: ACTION_TYPES.MAP_INDICATOR_CARD_SELECTED,\n\tfooterFieldName: 'sysUpdatedOn',\n\tdescriptionFieldName: 'shortDescription'\n});\n\n/**\n * Seismic component `sn-map-incident-card`.\n * Card for map topology changes to show on side panel on nocpit and on map.\n **/\ncreateCardComponent({\n\tcomponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_INCIDENT],\n\tstyles,\n\tview\n});","import {\n\tgetIndicatorCardWithAvatarJsx, \n\tgetAvatarElementJsx, \n\tgetLabelValueElementJsx, \n\tgetHighlightedLabelValueElementJsx\n} from '@devsnc/library-opws-mapping-shared';\n\nexport const getIncidentCardContentJsx = item => {\n\tconst {\n\t\tassignedTo,\n\t\tassignmentGroup,\n\t\tcmdbCi,\n\t\tpriority\n\t} = item;\n\n\tconst items = {\n\t\t1: {jsxBuilder: getAvatarElementJsx, field: assignedTo},\n\t\t2: {jsxBuilder: getLabelValueElementJsx, field: assignmentGroup},\n\t\t3: {jsxBuilder: getLabelValueElementJsx, field: cmdbCi},\n\t\t4: {jsxBuilder: getHighlightedLabelValueElementJsx, field: priority},\n\t};\n\n\tconst cardJsx = getIndicatorCardWithAvatarJsx(items);\n\treturn (\n\t\t<div>\n\t\t\t{cardJsx}\n\t\t</div>\n\t);\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapIncidentCard.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","import './snMapOutageCard';","import {createCardComponent, generateViewFn} from '@devsnc/library-opws-mapping-shared';\nimport {getOutageCardContentJsx as getCardContentJsx} from './getOutageCardContentJsx';\nimport {CARD_COMPONENTS, INDICATOR_IDS, ACTION_TYPES} from '../map-shared/indicatorTypes';\nimport styles from './snMapOutageCard.scss';\n\nconst view = generateViewFn({\n\tgetCardContentJsx,\n\topenFormActionType: ACTION_TYPES.OPEN_INDICATOR_FORM_INVOKED,\n\tcardSelectedActionType: ACTION_TYPES.MAP_INDICATOR_CARD_SELECTED,\n\theadingFieldName: 'taskNumber',\n\tdescriptionFieldName: 'cmdbCi'\n});\n\n/**\n * Seismic component `sn-map-outages-card`.\n * Card for map topology changes to show on side panel on nocpit and on map.\n **/\ncreateCardComponent({\n\tcomponentName: CARD_COMPONENTS[INDICATOR_IDS.MAP_OUTAGES],\n\tstyles,\n\tview\n});","import {INDICATOR_IDS} from '../map-shared/indicatorTypes';\nimport {\n\tgetLabelValueJsx, \n\tformatComplexFieldToStringLabelValue\n} from '@devsnc/library-opws-mapping-shared';\n\nexport const getOutageCardContentJsx = (item, selectedTab) => {\n\tconst {\n\t\tduration,\n\t\tbegin,\n\t\tend\n\t} = item;\n\n\tlet beginTime = '';\n\tlet endTime = '';\n\n\tswitch (selectedTab) {\n\t\tcase INDICATOR_IDS.MAP_OUTAGES_CURRENT:\n\t\t\tbeginTime = begin;\n\t\t\tbreak;\n\t\tcase INDICATOR_IDS.MAP_OUTAGES_PLANNED:\n\t\tcase INDICATOR_IDS.MAP_OUTAGES_PAST:\n\t\t\tbeginTime = begin;\n\t\t\tendTime = end;\n\t\t\tbreak;\n\t}\n\n\tconst itemsCol1 = [\n\t\tformatComplexFieldToStringLabelValue(beginTime),\n\t\tformatComplexFieldToStringLabelValue(duration)\n\t];\n\n\tconst itemsCol2 = endTime !== '' ? [formatComplexFieldToStringLabelValue(endTime)] : [];\n\n\treturn (\n\t\t<div className='columns-layout now-m-block--sm'>\n\t\t\t{getLabelValueJsx(itemsCol1)}\n\t\t\t{getLabelValueJsx(itemsCol2, true)}\n\t\t</div>\n\t);\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapOutageCard.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.columns-layout{display:grid;grid-template-columns:50% 50%;grid-auto-flow:row dense;grid-row-gap:.5rem}\", \"\"]);\n\n// exports\n","import './snMapRelatedItemsList';","import {\n\tcreateNocElement, \n\tcreateActionConfig, \n\tsnOpwsAlertCardActionTypes\n} from '@devsnc/library-opws-mapping-shared';\n\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport styles from './snMapRelatedItemsList.scss';\nimport view from './snMapRelatedItemsListView';\nimport effectOpenAlertForm from './effectOpenAlertForm';\nimport effectMarkCisInMap from './effectMarkCisInMap';\nimport effectOpenIndicatorForm from './effectOpenIndicatorForm';\nimport effectMarkCisInMapForIndicator from './effectMarkCisInMapForIndicator';\nimport {ACTION_TYPES as changeCardActionTypes} from '../sn-map-change-card/actionTypes';\nimport {ACTION_TYPES as indicatorTypes} from '../map-shared/indicatorTypes';\n\ncreateNocElement('sn-map-related-items-list', {\n\trenderer: {\n\t\ttype: snabbdom,\n\t\tview\n\t},\n\n\tstyles,\n\n\tproperties: {\n\t\tisLoading: {\n\t\t\tdefault: false\n\t\t},\n\n\t\tserviceId: {\n\t\t\tdefault: ''\n\t\t},\n\t\t\n\t\t/* For dropdown of card/item types.\n\t\t * Each type is an object:\n\t\t {\n\t\t\t label: string\n\t\t\t id: unique string\n\t\t\t [optional] icon: DS icon to display on the dropdown\n\t\t\t cardComponentName: string\n\t\t }\n\t\t */\n\t\titemTypes: {\n\t\t\tdefault: []\n\t\t},\n\n\t\t/**\n\t\t * Response objects that contains:\n\t\t * `items` - array of item DTOs.\n\t\t * `lastUpdated` - UNIX format tiemstamp of last updated time for the items.\n\t\t * `totalRecords` - total number of items (in all pages).\n\t\t */\n\t\titemsResponse: {\n\t\t\tdefault: {}\n\t\t},\n\n\t\tfilteredItems: {\n\t\t\tdefault: []\n\t\t},\n\n\t\tmapProperties: {\n\t\t\tdefault: {}\n\t\t},\n\n\t\tmapHistoryState: {\n\t\t\tdefault: null\n\t\t},\n\n\t\tdisplayRange: {\n\t\t\tdefault: {}\n\t\t},\n\n\t\tselectedCardId:{\n\t\t\tdefault: ''\n\t\t},\n\n\t\ttopologyChangesRange: {\n\t\t\tschema: {type: 'number'},\n\t\t\tdefault: 0\n\t\t}\n\t},\n\tactionHandlers: {\n\t\t[effectOpenAlertForm.ACTION_TYPES.OPEN_ALERT_FORM_INVOKED]:\n\t\t\tcreateActionConfig(effectOpenAlertForm.effectHandlers.openAlertForm),\n\n\t\t[snOpwsAlertCardActionTypes.ALERT_CARD_SELECTED]:\n\t\t\tcreateActionConfig(effectMarkCisInMap.effectHandlers.getAffectedCis),\n\n\t\t[indicatorTypes.OPEN_INDICATOR_FORM_INVOKED]:\n\t\t\tcreateActionConfig(effectOpenIndicatorForm.effectHandlers.openIndicatorForm),\n\n\t\t[indicatorTypes.MAP_INDICATOR_CARD_SELECTED]:\n\t\t\tcreateActionConfig(effectMarkCisInMapForIndicator.effectHandlers.getSelectedCis),\n\n\t\t[changeCardActionTypes.TOPO_CHANGE_CARD_SELECTED]:\n\t\t\tcreateActionConfig(effectMarkCisInMap.effectHandlers.markChangeOnMap, false),\n\n\t\t[effectMarkCisInMap.ACTION_TYPES.MAP_GET_CIS_OF_ALERT_REQUEST]:\n\t\t\tcreateActionConfig(effectMarkCisInMap.effectHandlers.getAffectedCisRequest),\n\n\t\t[effectMarkCisInMap.ACTION_TYPES.MAP_GET_CIS_OF_ALERT_SUCCEEDED]:\n\t\t\tcreateActionConfig(effectMarkCisInMap.effectHandlers.handleGetCisResponse),\n\t}\n});","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./snMapRelatedItemsList.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.now-align{display:flex}.now-align.-row.-reverse{flex-direction:row-reverse}.now-align.-column{flex-direction:column}.now-align.-column.-reverse{flex-direction:column-reverse}.now-align.-wrap{flex-wrap:wrap}.now-align.-inline{justify-content:space-between}.now-align.-inline-center{justify-content:center}.now-align.-inline-end{justify-content:flex-end}.now-align.-block-start{align-items:flex-start}.now-align.-block-center{align-items:center}.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.labels-container{flex-wrap:wrap}.font-md{font-size:1rem}.font-sm{font-size:.75rem}\", \"\"]);\n\n// exports\n","import '@devsnc/library-opws-mapping-shared'; //sn-opws-related-items-list\nimport {getSidePanelTitle, getSidePanelHeaderJsx} from '../map-side-panel/getSidePanelHeader';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {getAltFooterBuilder} from './getAltFooterBuilder';\n\n//view()\nexport default (state, {dispatch}) => {\n\tconst {\n\t\tcomponentId: wrapperComponentId = '',\n\t\tproperties: {\n\t\t\titemsResponse: {\n\t\t\t\tlastUpdated = 0,\n\t\t\t\ttotalRecords = 0,\n\t\t\t\titems = [],\n\t\t\t\tserviceId = '',\n\t\t\t\tfilterApplied\n\t\t\t},\n\t\t\tfilteredItems,\n\t\t\titemTypes = [],\n\t\t\tmapProperties = null,\n\t\t\tmapHistoryState,\n\t\t\tisLoading,\n\t\t\tdisplayRange,\n\t\t\tselectedCardId,\n\t\t\ttopologyChangesRange\n\t\t}\n\t} = state;\n\t\n\tconst componentId = `${wrapperComponentId}_opws`;\n\tconst isFilterActive = Boolean(filterApplied && filterApplied.type);\n\n\tconst headerTitle = getSidePanelTitle({\n\t\tisFilterActive, \n\t\tisPropertiesPanel: false, \n\t\tmapHistoryState\n\t});\n\t\n\tconst sidePanelHeaderJsx = getSidePanelHeaderJsx({\n\t\tserviceId, \n\t\titems: filteredItems, \n\t\tmapProperties, \n\t\tmapHistoryState, \n\t\tdispatch, \n\t\tfilterApplied, \n\t\tdisplayRange\n\t});\n\n\tconst sidePanelHeaderWrapperJsx = sidePanelHeaderJsx ? (\n\t\t<div slot='header-extra-content' className='now-align flex-full-width now-p-block-end--xl'>\n\t\t\t{sidePanelHeaderJsx}\n\t\t</div>\n\t) : null;\n\n\tconst altFooterTextBuilder = getAltFooterBuilder({items, mapHistoryState, topologyChangesRange});\n\n\treturn (\n\t\t<sn-opws-related-items-list\n\t\t\tmanage-selected-item-id\n\t\t\tselected-item-id={selectedCardId}\n\t\t\tcomponent-id={componentId}\n\t\t\tis-loading={isLoading}\n\t\t\titems={items}\n\t\t\tlast-updated={lastUpdated}\n\t\t\ttotal-records={totalRecords}\n\t\t\titem-types={itemTypes}\n\t\t\theader-title={headerTitle}\n\t\t\tshow-back-button={isFilterActive}\n\t\t\thide-refresh-button={mapHistoryState !== MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT}\n\t\t\talt-footer-text-builder={altFooterTextBuilder}\n\t\t>\n\n\t\t\t{sidePanelHeaderWrapperJsx}\n\t\t</sn-opws-related-items-list>\n\t);\n\t\n};","import {t} from 'sn-translate';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {TYPE_IDS} from '../map-shared/itemTypes';\nimport {DEFAULT_RANGE_DAYS} from '../map-container/effectGetMapChangeItems';\n\n/**\n * Returns builder function for sn-opws-related-items-list.alt-footer-text-builder;\n * Overrides footer text for changes panel in current map, when the list is not empty.\n */\nexport const getAltFooterBuilder = ({items, mapHistoryState, topologyChangesRange}) => selectedType => {\n\tconst count = items.length || 0;\n\tconst nDays = Number(topologyChangesRange) || DEFAULT_RANGE_DAYS;\n\n\treturn (count > 0 && \n    mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT && \n    selectedType.id === TYPE_IDS.MAP_TOPO_CHANGES) ?\n\t\tt(`${count} change(s) in last ${nDays} days. See history map for more.`) : \n\t\tnull; \n};","import {snOpwsAlertCardActionTypes} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tOPEN_ALERT_FORM_INVOKED: snOpwsAlertCardActionTypes.OPEN_ALERT_FORM_INVOKED\n};\n\nconst openAlertForm = coeffects => {\n\tconst {\n\t\taction: {payload},\n\t\tdispatch\n\t} = coeffects;\n\n\tconst {\n\t\tserviceId,\n\t\talertId\n\t} = payload;\n\n\tdispatch('ITEM_SELECTED', {\n\t\ttable: 'em_alert',\n\t\tsys_id: alertId,\n\t\tparent_table: 'cmdb_ci_service_discovered',\n\t\tparent_sys_id: serviceId\n\t});\n};\n\nconst effectHandlers = {\n\topenAlertForm\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {get as _get} from 'lodash';\n\nconst openIndicatorForm = coeffects => {\n\tconst {\n\t\taction: {payload: {id, typeId}},\n\t\tdispatch,\n\t\tproperties: {serviceId, itemIds},\n\t} = coeffects;\n\n\tconst table = _get(itemIds[typeId], 'urlData.params.sysparm_table') || '';\n\n\tdispatch('ITEM_SELECTED', {\n\t\ttable,\n\t\tsys_id: id,\n\t\tparent_table: 'cmdb_ci_service_discovered',\n\t\tparent_sys_id: serviceId\n\t});\n};\n\nconst effectHandlers = {\n\topenIndicatorForm\n};\n\nexport default {\n\teffectHandlers\n};","import {markCisOnMap} from './effectMarkCisInMap';\nimport {get as _get} from 'lodash';\n\nconst getSelectedCis = coeffects => {\n\tconst {\n\t\tdispatch, \n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tisSelected,\n\t\t\t\titem = {}\n\t\t\t}\n\t\t}\n\t} = coeffects;\n\t\n\tconst ciId = _get(item, 'ciField.value', '');\n\n\tconst cmdbCiId = isSelected && ciId ? [ciId] : [];\n\tmarkCisOnMap(dispatch, cmdbCiId);\n};\n\nconst effectHandlers = {\n\tgetSelectedCis\n};\n\nexport default {\n\teffectHandlers\n};","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/@tectonic/utils/node_modules/sass-loader/dist/cjs.js??ref--6-3!./mapSidePanel.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.now-a11y-label{position:absolute;overflow:hidden;width:1px;height:auto;margin:0;border:none;padding:0;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%)}.map-side-panel,.now-align{display:flex}.-row.-reverse.map-side-panel,.now-align.-row.-reverse{flex-direction:row-reverse}.-column.map-side-panel,.now-align.-column{flex-direction:column}.-column.-reverse.map-side-panel,.now-align.-column.-reverse{flex-direction:column-reverse}.-wrap.map-side-panel,.now-align.-wrap{flex-wrap:wrap}.-inline.map-side-panel,.now-align.-inline{justify-content:space-between}.-inline-center.map-side-panel,.now-align.-inline-center{justify-content:center}.map-side-panel,.now-align.-inline-end{justify-content:flex-end}.-block-start.map-side-panel,.now-align.-block-start{align-items:flex-start}.-block-center.map-side-panel,.now-align.-block-center{align-items:center}.-block-end.map-side-panel,.now-align.-block-end{align-items:flex-end}.now-m-block--xxs{margin-block-end:.125rem}.now-m-block--xxs,.now-m-block-start--xxs{margin-block-start:.125rem}.now-m-block-end--xxs{margin-block-end:.125rem}.now-m-inline--xxs{margin-inline-end:.125rem}.now-m-inline--xxs,.now-m-inline-start--xxs{margin-inline-start:.125rem}.now-m-inline-end--xxs{margin-inline-end:.125rem}.now-m-block--xs{margin-block-end:.25rem}.now-m-block--xs,.now-m-block-start--xs{margin-block-start:.25rem}.now-m-block-end--xs{margin-block-end:.25rem}.now-m-inline--xs{margin-inline-end:.25rem}.now-m-inline--xs,.now-m-inline-start--xs{margin-inline-start:.25rem}.now-m-inline-end--xs{margin-inline-end:.25rem}.now-m-block--sm{margin-block-end:.5rem}.now-m-block--sm,.now-m-block-start--sm{margin-block-start:.5rem}.now-m-block-end--sm{margin-block-end:.5rem}.now-m-inline--sm{margin-inline-end:.5rem}.now-m-inline--sm,.now-m-inline-start--sm{margin-inline-start:.5rem}.now-m-inline-end--sm{margin-inline-end:.5rem}.now-m-block--md{margin-block-end:.75rem}.now-m-block--md,.now-m-block-start--md{margin-block-start:.75rem}.now-m-block-end--md{margin-block-end:.75rem}.now-m-inline--md{margin-inline-end:.75rem}.now-m-inline--md,.now-m-inline-start--md{margin-inline-start:.75rem}.now-m-inline-end--md{margin-inline-end:.75rem}.now-m-block--lg{margin-block-end:1rem}.now-m-block--lg,.now-m-block-start--lg{margin-block-start:1rem}.now-m-block-end--lg{margin-block-end:1rem}.now-m-inline--lg{margin-inline-end:1rem}.now-m-inline--lg,.now-m-inline-start--lg{margin-inline-start:1rem}.now-m-inline-end--lg{margin-inline-end:1rem}.now-m-block--xl{margin-block-end:1.5rem}.now-m-block--xl,.now-m-block-start--xl{margin-block-start:1.5rem}.now-m-block-end--xl{margin-block-end:1.5rem}.now-m-inline--xl{margin-inline-end:1.5rem}.now-m-inline--xl,.now-m-inline-start--xl{margin-inline-start:1.5rem}.now-m-inline-end--xl{margin-inline-end:1.5rem}.now-m-block--xxl{margin-block-end:2rem}.now-m-block--xxl,.now-m-block-start--xxl{margin-block-start:2rem}.now-m-block-end--xxl{margin-block-end:2rem}.now-m-inline--xxl{margin-inline-end:2rem}.now-m-inline--xxl,.now-m-inline-start--xxl{margin-inline-start:2rem}.now-m-inline-end--xxl{margin-inline-end:2rem}.now-m-block--3xl{margin-block-end:2.5rem}.now-m-block--3xl,.now-m-block-start--3xl{margin-block-start:2.5rem}.now-m-block-end--3xl{margin-block-end:2.5rem}.now-m-inline--3xl{margin-inline-end:2.5rem}.now-m-inline--3xl,.now-m-inline-start--3xl{margin-inline-start:2.5rem}.now-m-inline-end--3xl{margin-inline-end:2.5rem}.now-m-block--0{margin-block-end:0}.now-m-block--0,.now-m-block-start--0{margin-block-start:0}.now-m-block-end--0{margin-block-end:0}.now-m-inline--0{margin-inline-end:0}.now-m-inline--0,.now-m-inline-start--0{margin-inline-start:0}.now-m-inline-end--0{margin-inline-end:0}.now-p-block--xxs{padding-block-end:.125rem}.now-p-block--xxs,.now-p-block-start--xxs{padding-block-start:.125rem}.now-p-block-end--xxs{padding-block-end:.125rem}.now-p-inline--xxs{padding-inline-end:.125rem}.now-p-inline--xxs,.now-p-inline-start--xxs{padding-inline-start:.125rem}.now-p-inline-end--xxs{padding-inline-end:.125rem}.now-p-block--xs{padding-block-end:.25rem}.now-p-block--xs,.now-p-block-start--xs{padding-block-start:.25rem}.now-p-block-end--xs{padding-block-end:.25rem}.now-p-inline--xs{padding-inline-end:.25rem}.now-p-inline--xs,.now-p-inline-start--xs{padding-inline-start:.25rem}.now-p-inline-end--xs{padding-inline-end:.25rem}.now-p-block--sm{padding-block-end:.5rem}.now-p-block--sm,.now-p-block-start--sm{padding-block-start:.5rem}.now-p-block-end--sm{padding-block-end:.5rem}.now-p-inline--sm{padding-inline-end:.5rem}.now-p-inline--sm,.now-p-inline-start--sm{padding-inline-start:.5rem}.now-p-inline-end--sm{padding-inline-end:.5rem}.now-p-block--md{padding-block-end:.75rem}.now-p-block--md,.now-p-block-start--md{padding-block-start:.75rem}.now-p-block-end--md{padding-block-end:.75rem}.now-p-inline--md{padding-inline-end:.75rem}.now-p-inline--md,.now-p-inline-start--md{padding-inline-start:.75rem}.now-p-inline-end--md{padding-inline-end:.75rem}.now-p-block--lg{padding-block-end:1rem}.now-p-block--lg,.now-p-block-start--lg{padding-block-start:1rem}.now-p-block-end--lg{padding-block-end:1rem}.now-p-inline--lg{padding-inline-end:1rem}.now-p-inline--lg,.now-p-inline-start--lg{padding-inline-start:1rem}.now-p-inline-end--lg{padding-inline-end:1rem}.now-p-block--xl{padding-block-end:1.5rem}.now-p-block--xl,.now-p-block-start--xl{padding-block-start:1.5rem}.now-p-block-end--xl{padding-block-end:1.5rem}.now-p-inline--xl{padding-inline-end:1.5rem}.now-p-inline--xl,.now-p-inline-start--xl{padding-inline-start:1.5rem}.now-p-inline-end--xl{padding-inline-end:1.5rem}.now-p-block--xxl{padding-block-end:2rem}.now-p-block--xxl,.now-p-block-start--xxl{padding-block-start:2rem}.now-p-block-end--xxl{padding-block-end:2rem}.now-p-inline--xxl{padding-inline-end:2rem}.now-p-inline--xxl,.now-p-inline-start--xxl{padding-inline-start:2rem}.now-p-inline-end--xxl{padding-inline-end:2rem}.now-p-block--3xl{padding-block-end:2.5rem}.now-p-block--3xl,.now-p-block-start--3xl{padding-block-start:2.5rem}.now-p-block-end--3xl{padding-block-end:2.5rem}.now-p-inline--3xl{padding-inline-end:2.5rem}.now-p-inline--3xl,.now-p-inline-start--3xl{padding-inline-start:2.5rem}.now-p-inline-end--3xl{padding-inline-end:2.5rem}.now-p-block--0{padding-block-end:0}.now-p-block--0,.now-p-block-start--0{padding-block-start:0}.now-p-block-end--0{padding-block-end:0}.now-p-inline--0{padding-inline-end:0}.now-p-inline--0,.now-p-inline-start--0{padding-inline-start:0}.now-p-inline-end--0{padding-inline-end:0}.now-line-height-crop:after,.now-line-height-crop:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1)}.now-line-height-crop:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1)}.now-line-height-crop+.now-line-height-crop{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1*-1)}.now-line-height-crop--sm:after,.now-line-height-crop--sm:before{content:\\\"\\\";display:block;width:0;height:0}.now-line-height-crop--sm:before{margin-block-end:calc(var(--now-line-height-crop--before, -.25em)*1.06667)}.now-line-height-crop--sm:after{margin-block-start:calc(var(--now-line-height-crop--after, -.125em)*1.06667)}.now-line-height-crop--sm+.now-line-height-crop--sm{margin-block-start:calc(var(--now-line-height-crop--before, -.25em)*1.06667*-1)}.now-heading--lg,.now-heading--md,.now-heading--xl{font-weight:600;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-heading--md{font-size:1rem}.now-heading--lg{font-size:1.25rem}.now-heading--xl{font-size:1.5rem}.now-text--normal{font-weight:400}.now-text--semibold{font-weight:600}.now-text--bold{font-weight:700}.now-text--sm{font-size:.75rem}.now-text--md{font-size:1rem}.now-text--lg{font-size:1.25rem}.now-text--primary{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}.now-text--secondary{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}.now-text--tertiary{color:RGB(var(--now-color--text-tertiary,var(--now-color--neutral-9,99,114,116)))}:host,:root{font-size:1rem}button{font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif}button.override-style{margin:0;padding:0;border:none;align-items:center;position:relative;background:none;cursor:pointer}now-image{width:auto}.flex-column{flex-direction:column}.flex-full-width{flex-basis:100%;width:100%}.map-side-panel{height:100%}.map-side-panel.is-opened{border-left:1px solid rgb(var(--now-color--neutral-7,135,147,148))}\", \"\"]);\n\n// exports\n","module.exports = __TECTONIC__$servicenow_now_empty_state;","import {snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\nimport mapEventsWhitelist from './mapEventsWhitelist';\nimport constants from '../map-shared/constants';\nimport {\n\tget as _get, \n\tisFunction as _isFunction,\n\tmemoize as _memoize\n} from 'lodash';\n\nimport mapSettingsModifiedEffect from '../map-settings-menu-behavior/mapSettingsModifiedEffect';\nimport mapServiceSeverityEffect from '../map-initial-data-behavior/mapServiceSeverityEffect';\nimport mapStaticDataEffect from '../map-initial-data-behavior/mapStaticDataEffect';\nimport effectMapIsLoaded from '../map-initial-data-behavior/effectMapIsLoaded';\nimport {TYPE_IDS} from '../map-shared/itemTypes';\nimport {setHistoryChangesFilter} from '../map-shared/setHistoryChangesFilter';\nimport {syncBlockingState, showBlockedMap} from './mapBlocking';\n\nconst ACTION_TYPES = {\n\tNOC_EVENT_FROM_MAP_ARRIVED: constants.NOC_EVENT_FROM_MAP_ARRIVED\n};\n\n/**\n * The cost of redundant state updates is too high.\n * This function helps to prevent state updates and filter out repeated events from map.\n * @param {*} indicatorId \n * @param {*} currIndicatorsPanelData \n * @param {*} newUpdate \n */\nconst shouldUpdateIndicatorsPanelData = (indicatorId, currIndicatorsPanelData, newUpdate) => {\n\tif (!currIndicatorsPanelData[indicatorId])\n\t\treturn true;\n\n\tconst currentTimestamp = currIndicatorsPanelData[indicatorId].arrivedAt;\n\tconst newTimestamp = newUpdate.arrivedAt;\n\n\tif (currentTimestamp === newTimestamp)\n\t\treturn false;\n\n\tconst currHash = currIndicatorsPanelData[indicatorId].sysIds.join(',');\n\tconst newHash = newUpdate.sysIds.join(',');\n\n\treturn currHash.length !== newHash.length || currHash !== newHash;\n};\n\nconst getIndicatorId = args =>\n\t_get(args, '[0].urlData.params.sysparm_tab_id') || '';\n\n\n/**\n * Processing events from map that can cause refresh of the side panel.\n * `currItemIds` - payload from the map, contaiing details on update in contextual panel.\n * `relatedItemsRefreshParams` - cached params of previos refresh\n */\nconst refreshRelatedItems = ({currItemIds, relatedItemsRefreshParams, dispatch}) => {\n\tconst {isInteractive = false} = currItemIds;\n\n\t//stop auto-refresh for pulling manager updates. \n\t//Only map request that is marked as interactive, will cause the refresh.\n\tif (!isInteractive)\n\t\treturn;\n\n\tdispatch(() => ({\n\t\ttype: snOpwsRelatedItemsListActionTypes.REFRESH_REQUESTED, \n\t\tpayload: {\n\t\t\t...relatedItemsRefreshParams,\n\t\t\tforceRefresh: true\n\t\t}\n\t}));\n};\n\nconst updateRelatedItems = ({\n\ttypeId, \n\tcurrItemIds, \n\tmapPayload, \n\trelatedItemsRefreshParams, \n\tdispatch, \n\tupdateProperties,\n\tarrivedAt = Date.now()\n}) => {\n\t\n\tsetHistoryChangesFilter({\n\t\tdispatch, \n\t\tupdateProperties, \n\t\titemType: typeId, \n\t\tcurrItemIds, \n\t\trelatedItemIds: {\n\t\t\t...mapPayload,\n\t\t\tarrivedAt\n\t\t}\n\t});\n\n\t//don't refresh for non-selected type\n\tif (typeId !== _get(relatedItemsRefreshParams, 'selectedType.id'))\n\t\treturn;\n\n\trefreshRelatedItems({currItemIds: mapPayload, relatedItemsRefreshParams, dispatch});\n};\n\nconst onGetServiceName = ({args, mapInitialData, updateState}) => {\n\tconst setServiceNameCb = args[0];\n\tif (_isFunction(setServiceNameCb)) {\n\t\tupdateState({setServiceNameCb});\n\n\t\tif (mapInitialData)\n\t\t\tmapStaticDataEffect.setServiceNameOnMap(setServiceNameCb, mapInitialData);\n\t}\n};\n\nconst onIndicatorPanelUpdate = ({\n\tstate, \n\targs, \n\tcurrItemIds, \n\tdispatch, \n\tupdateProperties,\n\tupdateState\n}) => {\n\n\tconst {\n\t\trelatedItemsRefreshParams,\n\t\tindicatorsPanelData\n\t} = state;\n\n\tconst arrivedAt = Date.now();\n\tconst indicatorId = getIndicatorId(args);\n\tconst updatedIndicatorData = {\n\t\t...args[0],\n\t\tarrivedAt\n\t};\n\n\tif (shouldUpdateIndicatorsPanelData(indicatorId, indicatorsPanelData || {}, updatedIndicatorData)) {\n\n\t\tupdateState({\n\t\t\tindicatorsPanelData: {\n\t\t\t\t...indicatorsPanelData,\n\t\t\t\t[indicatorId]: updatedIndicatorData\n\t\t\t}\n\t\t});\n\n\t\tupdateRelatedItems({\n\t\t\ttypeId: indicatorId, \n\t\t\tcurrItemIds, \n\t\t\tmapPayload: args[0], \n\t\t\trelatedItemsRefreshParams, \n\t\t\tdispatch, \n\t\t\tupdateProperties,\n\t\t\tarrivedAt\n\t\t});\n\t}\n};\n\nconst onSeverityColorsGetter = ({args, updateState}) => {\n\tconst severitiesGetter = args[0];\n\t\n\tif (_isFunction(severitiesGetter)) {\n\t\tconst optimizedGetter = _memoize(severity => {\n\t\t\tconst color = severitiesGetter(severity);\n\t\t\treturn (color === 'transparent') ? null : color;\n\t\t});\n\n\t\tupdateState({\n\t\t\tseveritiesGetter: optimizedGetter\n\t\t});\n\t}\n};\n\nconst resolveLoadingState = ({updateState, payload = {}}) => {\n\tconst {\n\t\tisLoaded = false,\n\t\tisFailed = false,\n\t\tisBlocked = false\n\t} = payload;\n\n\tconst loadingState = isBlocked ?\n\t\tconstants.LOADING_STATES.BLOCKED :\n\t\tisFailed ? \n\t\t\tconstants.LOADING_STATES.ERROR : \n\t\t\tisLoaded ? \n\t\t\t\tconstants.LOADING_STATES.DONE : \n\t\t\t\tconstants.LOADING_STATES.LOADING;\n\n\tupdateState({loadingState});\n};\n\n/**\n * Reducer-like effect that should catch all white-listed map events and decide what to do with it.\n */\nconst mapEventReceivedEffect = coeffects => {\n\tconst {\n\t\tstate,\n\t\tproperties: {\n\t\t\trelatedItemIds: currItemIds\n\t\t},\n\t\taction,\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tupdateState\n\t} = coeffects;\n\n\tconst {\n\t\trelatedItemsRefreshParams,\n\t\tmapInitialData,\n\t\tisInitialized\n\t} = state;\n\n\tconst {name, args} = action.payload;\n\n\tswitch(name) {\n\t\tcase mapEventsWhitelist.EVT_WS_GET_SERVICE_NAME:\n\t\t\tonGetServiceName({args, mapInitialData, updateState});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist.EVT_WS_SEVERITY_COLORS_GETTER_SENT:\n\t\t\tonSeverityColorsGetter({args, updateState});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist['sa.refreshPropertiesPane']:\n\t\t\tupdateProperties({\n\t\t\t\tmapProperties: {\n\t\t\t\t\t...args[0],\n\t\t\t\t\tarrivedAt: Date.now()\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist.EVT_WS_ALERT_PANEL_UPDATE:\n\t\t\tupdateRelatedItems({\n\t\t\t\ttypeId: TYPE_IDS.ALERTS, \n\t\t\t\tcurrItemIds, \n\t\t\t\tmapPayload: args[0], \n\t\t\t\trelatedItemsRefreshParams, \n\t\t\t\tdispatch, \n\t\t\t\tupdateProperties\n\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist.EVT_WS_HISTORY_CHANGES_PANEL_UPDATE:\n\t\t\tupdateRelatedItems({\n\t\t\t\ttypeId: TYPE_IDS.MAP_TOPO_CHANGES, \n\t\t\t\tcurrItemIds, \n\t\t\t\tmapPayload: args[0], \n\t\t\t\trelatedItemsRefreshParams, \n\t\t\t\tdispatch, \n\t\t\t\tupdateProperties\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist.EVT_WS_INDICATOR_PANEL_UPDATE:\n\t\t\tonIndicatorPanelUpdate({state, args, currItemIds, dispatch, updateProperties, updateState});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist.sa_status_change:\n\t\t\tdispatch(mapServiceSeverityEffect.ACTION_TYPES.MAP_TIMESTAMP_CHANGED, {timestamp: args[0]});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist['snc.layoutReapplied']:\n\t\t\tdispatch(effectMapIsLoaded.ACTION_TYPES.MAP_IS_LOADED);\n\t\t\tbreak;\n\n\n\t\tcase mapEventsWhitelist.wsMapLoaderStateChanged:\n\t\t\tresolveLoadingState({updateState, payload: args[0]});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist['snc.mapBlockingStateChanged']: \n\t\t\t//simulate map is loaded state\n\t\t\tif (!isInitialized)\n\t\t\t\tdispatch(effectMapIsLoaded.ACTION_TYPES.MAP_IS_LOADED);\n\n\t\t\tsyncBlockingState({graphDTOData: args[0], updateState});\n\t\t\tbreak;\n\n\t\tcase mapEventsWhitelist['sa.blockLargeServiceChanged']:\n\t\t\tdispatch(mapSettingsModifiedEffect.ACTION_TYPES.NOC_SETTINGS_MODIFIED_EVENT, action.payload);\n\t\t\tshowBlockedMap({dispatch, updateState, rememberForSession: false})();\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t//events that not catched here are redirected to other effects accoridng to white lists\n\t\t\tif (mapSettingsModifiedEffect.MAP_EVENT_NAMES[name]) \n\t\t\t\tdispatch(mapSettingsModifiedEffect.ACTION_TYPES.NOC_SETTINGS_MODIFIED_EVENT, action.payload);\n\t\t\t\n\t\t\tbreak;\n\t}\n};\n\nconst effectHandlers = {\n\tmapEventReceivedEffect\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import cuid from 'cuid';\nimport {createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport mapStaticDataEffect from './mapStaticDataEffect';\nimport mapServiceSeverityEffect from './mapServiceSeverityEffect';\nimport effectMapIsLoaded from './effectMapIsLoaded';\n\nconst initFlowHandler = coeffects => {\n\tconst {\n\t\tproperties: {\n\t\t\tserviceId\n\t\t}, \n\t\tdispatch,\n\t\tupdateProperties\n\t} = coeffects;\n\n\t//set map id for all to use.\n\tconst mapId = cuid();\n\tupdateProperties({mapId});\n\n\tconst initialDataVars = mapStaticDataEffect.getVariables(serviceId);\n\tdispatch(mapStaticDataEffect.ACTION_TYPES.MAP_LOAD_INITIAL_DATA, initialDataVars);\n};\n\nexport const mapInitialDataBehavior = {\n\tname: 'mapInitialDataBehavior',\n\tactionHandlers: {\n\t\t[MAP_CONSTANTS.SN_MAP_CONNECTED]:\n\t\t\tcreateActionConfig(initFlowHandler),\n\n\t\t[effectMapIsLoaded.ACTION_TYPES.MAP_IS_LOADED]:\n\t\t\tcreateActionConfig(effectMapIsLoaded.effectHandlers.mapIsLoaded),\n\n\t\t[mapStaticDataEffect.ACTION_TYPES.MAP_LOAD_INITIAL_DATA]:\n\t\t\tcreateActionConfig(mapStaticDataEffect.effectHandlers.mapRequestStaticDataEffect),\n\n\t\t[mapStaticDataEffect.ACTION_TYPES.MAP_LOAD_INITIAL_DATA_SUCCEEDED]:\n\t\t\tcreateActionConfig(mapStaticDataEffect.effectHandlers.mapStaticDataResponseEffect),\n\n\t\t[mapServiceSeverityEffect.ACTION_TYPES.MAP_TIMESTAMP_CHANGED]:\n\t\t\tcreateActionConfig(mapServiceSeverityEffect.effectHandlers.mapServiceSeverityTimestampChangedEffect),\n\n\t\t[mapServiceSeverityEffect.ACTION_TYPES.MAP_GET_SERVICE_SEVERITY]:\n\t\t\tcreateActionConfig(mapServiceSeverityEffect.effectHandlers.getServiceSeverityEffect),\n\n\t\t[mapServiceSeverityEffect.ACTION_TYPES.MAP_GET_SERVICE_SEVERITY_SUCCEEDED]:\n\t\t\tcreateActionConfig(mapServiceSeverityEffect.effectHandlers.serviceSeverityResponseEffect)\n\t}\n};\n\nexport const ACTION_TYPES = { \n\t...mapStaticDataEffect.ACTION_TYPES\n};","module.exports = __TECTONIC__cuid_2_1_6;","export * from './behaviorServiceHistory'; ","import {createActionConfig} from '@devsnc/library-opws-mapping-shared';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport effectInitHistoryMode from './effectInitHistoryMode';\nimport effectReceiveHistoryData from './effectReceiveHistoryData';\nimport effectResolveHistoryState from './effectResolveHistoryState';\nimport effectOnTimelineRangeUpdated from './effectOnTimelineRangeUpdated';\nimport {effectHighlightTimelineEvent} from './effectHighlightTimelineEvent';\nimport effectOnTimelineEventSelection from './effectOnTimelineEventSelection';\nimport {ACTION_TYPES as ACTION_TYPES_CHANGE_CARD_SELECTED} from '../sn-map-change-card/actionTypes';\nimport {getEmptyTimelineData} from './timelineFunctors';\n\nconst {MAP_HISTORY_STATES} = MAP_CONSTANTS;\n\nexport const behaviorServiceHistory = {\n\tname: 'behaviorServiceHistory',\n\t\n\tproperties: {\n\t\t/**\n\t\t * Initial range of the timeline when the history map is openend.\n\t\t * If unset, will be automatically set on load.\n\t\t */\n\t\tinitialRange: {\n\t\t\tdefault: null\n\t\t},\n\n\t\t//last date that timeline can go forward to.\n\t\t//locked on end date of the initialRange, fallback to Date.now()\n\t\tupperDateLimit: {\n\t\t\tcomputed({properties: {initialRange}}) {\n\t\t\t\tconst {end: upper = Date.now()} = initialRange || {};\n\t\t\t\treturn upper;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Current state of the map from the time dimension perspective.\n\t\t * The value must be one of the defined in map-shared/constants/MAP_HISTORY_STATES\n\t\t */\n\t\tmapHistoryState: {\n\t\t\tdefault: MAP_HISTORY_STATES.CURRENT,\n\t\t\tselectable: true\n\t\t},\n\n\t\t/**\n\t\t * Provides statistics about number of topology chnges for different time ranges back fro mcurrent time.\n\t\t * The array is sorted by relevance of the ranges.\n\t\t * The range is ms back since current time. For example 1 hour is: 1000 * 60 * 60 = 3600000\n\t\t * [{range: ms, label: String, nChanges: int}]\n\t\t */\n\t\tlastChangesCounters: {\n\t\t\tdefault: []\n\t\t},\n\n\t\t/**\n\t\t * Timestamp of service creation.\n\t\t */\n\t\tserviceCreationTime: {\n\t\t\tdefault: -1\n\t\t},\n\n\t\t/**\n\t\t * Date range of currently stored history data (allChanges).\n\t\t */\n\t\tcurrDataRange: { //TODO populate and use in change_range effect\n\t\t\tdefault: {\n\t\t\t\tstart: -1,\n\t\t\t\tend: -1\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Stores buffer of changes that were received from the timeline API.\n\t\t * Flat array.\n\t\t */\n\t\tallChanges: {\n\t\t\tdefault: []\n\t\t},\n\n\t\t/**\n\t\t * Stores sub-range of change for the displayRange.\n\t\t * Flat array.\n\t\t */\n\t\tdisplayChanges: {\n\t\t\tdefault: []\n\t\t},\n\n\t\t/**\n\t\t * Stores buffer of severities ran that were received from the timeline API.\n\t\t * Flat array.\n\t\t */\n\t\tseverityRanges: {\n\t\t\tdefault: []\n\t\t},\n\n\t\ttimelineCandidates: {\n\t\t\tdefault: {\n\t\t\t\tdisplayRange: null\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * container for the data that defines state of the timeline.\n\t\t * All sub-properties should be updated together to ensure valid state of the timeline component.\n\t\t */\n\t\ttimelineData: {\n\t\t\tselectable: true,\n\t\t\tdefault: getEmptyTimelineData()\n\t\t},\n\t},\n\tactionHandlers: {\n\t\t[effectInitHistoryMode.ACTION_TYPES.MAP_INIT_HISTORY]: createActionConfig(\n\t\t\teffectInitHistoryMode.effectHandlers.effectInitHistoryMode\n\t\t),\n\n\t\t[effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_REQUEST]: createActionConfig(\n\t\t\teffectReceiveHistoryData.effectHandlers.getHistoryData\n\t\t),\n\n\t\t[effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_REQUEST_SUCCEEDED]: createActionConfig(\n\t\t\teffectReceiveHistoryData.effectHandlers.historyDataResponse\n\t\t),\n\n\t\t[effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_SET]: createActionConfig(\n\t\t\teffectResolveHistoryState.effectHandlers.resolveHistoryState\n\t\t),\n\n\t\t[ACTION_TYPES_CHANGE_CARD_SELECTED.TOPO_CHANGE_CARD_SELECTED]: \n\t\t\tcreateActionConfig(effectHighlightTimelineEvent),\n\n\t\t[effectOnTimelineRangeUpdated.ACTION_TYPES.TIMELINE_RANGE_UPDATED]: createActionConfig(\n\t\t\teffectOnTimelineRangeUpdated.effectHandlers.onTimelineRangeUpdated\n\t\t),\n\t\t[effectOnTimelineEventSelection.ACTION_TYPES.TIMELINE_DATA_SELECTED_UPDATED]: createActionConfig(\n\t\t\teffectOnTimelineEventSelection.effectHandlers.onTimelineEventSelection\n\t\t)\n\t}\n};\n","/**\n * effectResolveHistoryState:\n * When displayRange for the tiemline is resolved and all required data is set,\n * this effect updated input props fot the change cards and for the timeline.\n */\nimport {t} from 'sn-translate';\nimport {map as _map, isFunction as _isFunction} from 'lodash';\nimport {CONSTANTS, LOGGING, snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\nimport timelineConstants from './timelineConstants';\nimport {resolveMapHistoryState, sanitizeHistoryRange, formatRange, getEmptyTimelineData} from './timelineFunctors';\nimport {dispatchEventToMap} from '../map-container/eventBus';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {ACTION_TYPES as MAP_SETTINGS_SET_ACTION_TYPES} from '../map-settings-menu-behavior/mapSettingsMenuBehavior';\nimport effectReceiveHistoryData from './effectReceiveHistoryData';\n\nconst {\n\tTIMELINE_TYPE_TO_BUBBLE_GROUP,\n\tTIMELINE_ITEM_TYPES,\n\tBUBBLE_STYLE,\n\tCHANGE_LABELS,\n\tSEVERITY_LABELS\n} = timelineConstants;\n\nconst APPROVED_CHANGE_DESCRIPTION = t('Approved change: {0}', 'MESSAGE');\nconst NOTIFICATION_SELECT_SHORTER_RANGE = t('The time range contained too many changes. The window shows the service history for a narrower range.');\nconst NOTIFICATION_SHORTER_RANGE_SELECTED = t('The selected time range contained too many changes. Narrow the time range and then focus on the relevant changes.');\nconst NOTIFICATION_CANNOT_DISPLAY_LIMIT = t('The time range contained too many changes. The map cannot be loaded. Try again later or call customer support.');\n\nconst ACTION_TYPES = {};\n\nconst groupTimelineRanges = (ranges, range) => {\n\tconst {\n\t\tdata: {newSeverity}\n\t} = range;\n\n\tconst group = ranges[newSeverity] || [];\n\tgroup.push(range);\n\n\treturn {\n\t\t...ranges,\n\t\t[newSeverity]: group\n\t};\n};\n\nconst resolveChangeType = ({type}) => TIMELINE_TYPE_TO_BUBBLE_GROUP[type];\n\n/**\n * For approved changes, the description has a prefix \"Approved change:\".\n * @param change change object as arrived from the timeline API.\n * @return description for the given change object\n */\nconst resolveApprovedChangeDescription = change => {\n\tconst {type, approved, message} = change || {};\n\n\tconst groupName = TIMELINE_TYPE_TO_BUBBLE_GROUP[type];\n\n\tif (groupName === TIMELINE_ITEM_TYPES.TOPOLOGY && approved)\n\t\treturn APPROVED_CHANGE_DESCRIPTION.replace('MESSAGE', message);\n\n\treturn message;\n};\n\nconst groupTimelineEvents = ({events, _eventsIndex}, change) => {\n\tconst groupName = resolveChangeType(change);\n\n\t//skipping unregistered change/bubble types.\n\tif (!groupName) \n\t\treturn {events, _eventsIndex};\n\n\tconst group = events[groupName] || [];\n\n\tconst {time: timestamp} = change;\n\tconst description = resolveApprovedChangeDescription(change);\n\n\tconst event = {\n\t\tdata: change,\n\t\ttimestamp,\n\t\tdescription\n\t};\n\n\tgroup.push(event);\n\t_eventsIndex.set(change.id, event);\n\n\treturn {\n\t\tevents: {\n\t\t\t...events,\n\t\t\t[groupName]: group\n\t\t},\n\t\t_eventsIndex\n\t};\n};\n\nconst filterChangesByDisplayRange = (candidateRange, change) =>\n\tchange.time && change.time >= candidateRange.start && change.time <= candidateRange.end;\n\nconst filterSeveritiesByDisplayRange = (candidateRange, sev) =>\n\tsev.start && sev.end && sev.end >= candidateRange.start && sev.start <= candidateRange.end;\n\nconst resolveSeverityColor = (severitiesGetter, severity = '') =>\n\t(_isFunction(severitiesGetter) ? severitiesGetter(severity) : null) || null;\n\nconst mapRangeCategories = ({severitiesGetter}, bulk, severity) =>\n\tNumber(severity) === 0 ? \n\t\tnull :\n\t\t{\n\t\t\tname: severity,\n\t\t\tcolor: resolveSeverityColor(severitiesGetter, severity),\n\t\t\tlabel: SEVERITY_LABELS[severity] || '',\n\t\t\tranges: bulk\n\t\t};\n\nconst mapEventCategories = (bulk, type) => ({\n\tname: type,\n\t...(BUBBLE_STYLE[type] || {}),\n\t...(CHANGE_LABELS[type] || {}),\n\tevents: bulk\n});\n\nconst mapChangeToId = ch => ch.id;\n\n/**\n * Finds fixed start timestamp for candidate range that will ensure the range within the changes limit.\n * If there's no such range, returns null.\n * @param {*} param0 \n * @return {Number|null} `start` timestamp for new candidate range, or null if cannot display the timeline.\n * If `null` returned, this function dispatches notification for user with the failure reason.\n */\nconst fixCandidateRangeStart = ({displayChanges, changesLimit, dispatch, upperDateLimit}) => {\n\t//we want to display `changesLimit` changes (and it's known there are more changes in array)\n\tconst lowerIdx = displayChanges.length - changesLimit;\n\tconst lowerBoundary = displayChanges[lowerIdx];\n\tconst candidateStart = lowerBoundary.time;\n\tconst changeBefore = displayChanges[lowerIdx - 1]; //always exists because (displayChanges.length > changesLimit)\n\n\tif (candidateStart !== changeBefore.time)\n\t\treturn candidateStart;\n\n\t//cannot use candidateStart, because previous change has exactly the same timestamp (aggregated changes).\n\n\t//find next change that has another timestamp\n\tconst reducedRange = displayChanges.slice(lowerIdx);\n\tconst updLowerboundary = reducedRange.find(ch => ch.time > candidateStart);\n\n\t//cannot display the timeline: nothing to display for set changes limit, because most recent changes are aggregated.\n\tif (!updLowerboundary) {\n\n\t\t//attempt to select an empty range between the last change and NOW.\n\t\tconst lastChangeTime = displayChanges[displayChanges.length - 1].time + 1;\n\n\t\tif (upperDateLimit - lastChangeTime > timelineConstants.UNITS.MINUTE) \n\t\t\treturn lastChangeTime;\n\n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_SHOW_NOTIFICATION, {\n\t\t\tstatus: 'high',\n\t\t\ticon: '',\n\t\t\tcontent: NOTIFICATION_CANNOT_DISPLAY_LIMIT,\n\t\t\ttype: 'acknowledge'\n\t\t});\n\n\t\treturn null;\n\t}\n\n\treturn updLowerboundary.time;\n};\n\n/**\n * Detects and resolves cases when candidate range contains too many changes.\n * @return {Boolean} `true` if can use display range (can continue). \n * `false` if max changes limit detected and resolved, means current candidate range cannot be used.\n */\nconst resolveChangesLimit = ({\n\tserviceCreationTime,\n\tupperDateLimit,\n\tdisplayChanges,\n\tchangesLimit,\n\tdispatch,\n\tupdateProperties,\n\tupdateState,\n\ttimelineData = {}\n}) => {\n\n\tif (displayChanges.length <= changesLimit)\n\t\treturn true;\n\n\tconst {displayRange: currentDisplayRange} = timelineData;\n\n\tif (currentDisplayRange) {\n\t\t//candidate range exceedes the #changes limit, discarding\n\n\t\t//changing total range in attempt to disable current operation\n\t\tconst totalRange = {\n\t\t\tstart: serviceCreationTime,\n\t\t\tend: upperDateLimit\n\t\t};\n\t\t\n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_SHOW_NOTIFICATION, {\n\t\t\ticon: '',\n\t\t\tcontent: NOTIFICATION_SELECT_SHORTER_RANGE,\n\t\t\ttype: 'acknowledge'\n\t\t});\n\n\t\tupdateProperties({\n\t\t\ttimelineCandidates: {\n\t\t\t\tdisplayRange: null\n\t\t\t},\n\t\t\ttimelineData: {\n\t\t\t\t...timelineData,\n\t\t\t\ttotalRange\n\t\t\t}\n\t\t});\n\n\t\tupdateState({\n\t\t\tloadingState: MAP_CONSTANTS.LOADING_STATES.DONE\n\t\t});\n\t} else {\n\t\t//first loading of the timeline: need to reduce candidate range until it's possible to display\n\n\t\tconst candidateStart = fixCandidateRangeStart({displayChanges, changesLimit, dispatch, upperDateLimit});\n\n\t\tif (!candidateStart) {\n\t\t\t//stopping with error state\n\n\t\t\tupdateState({\n\t\t\t\tloadingState: MAP_CONSTANTS.LOADING_STATES.ERROR\n\t\t\t});\n\n\t\t\tupdateProperties({\n\t\t\t\ttimelineCandidates: {\n\t\t\t\t\tdisplayRange: null\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\n\t\tdispatch(CONSTANTS.ACTION_TYPES.NOC_SHOW_NOTIFICATION, {\n\t\t\ticon: '',\n\t\t\tcontent: NOTIFICATION_SHORTER_RANGE_SELECTED,\n\t\t\ttype: 'acknowledge'\n\t\t});\n\n\t\tconst candidates = {\n\t\t\tdisplayRange: {\n\t\t\t\tstart: candidateStart,\n\t\t\t\tend: Date.now()\n\t\t\t}\n\t\t};\n\n\t\t//fixing candidate range\n\t\tupdateProperties({\n\t\t\ttimelineCandidates: candidates\n\t\t});\n\n\t\t//re-launch this effect with updated candidate range\n\t\tdispatch(effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_SET);\n\t}\n\n\treturn false;\n};\n\n/**\n * When new visible range applies, the timeline data is recalculated here.\n * This effect assumes that `allChanges` and `severityRanges` have all the data for the candidate display range.\n * Selection states are reset on the timeline.\n */\nconst resolveHistoryState = coeffects => {\n\tconst {\n\t\tstate: {\n\t\t\tseveritiesGetter,\n\t\t\trelatedItemsRefreshParams,\n\t\t\tsysProperties: {\n\t\t\t\t[MAP_CONSTANTS.SYS_PROP_MAX_HISTORY_CHANGES_DISPLAYED] : maxHistoryChangesDisplayed\n\t\t\t} = {}\n\t\t},\n\t\tproperties: {\n\t\t\tmapId,\n\t\t\tallChanges,\n\t\t\tseverityRanges,\n\t\t\tserviceCreationTime,\n\t\t\tupperDateLimit,\n\t\t\ttimelineCandidates: {displayRange},\n\t\t\ttimelineData\n\t\t},\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tupdateState\n\t} = coeffects;\n\n\t//If no candidate displayRange, then in prefetch mode, do nothing\n\tif (!displayRange) {\n\t\tLOGGING.debug('timelineCandidates.displayRange is not defined. Assuming prefetch and skipping...', {caller: 'resolveHistoryState'});\n\t\treturn;\n\t}\n\t\n\tconst sanitizedRange = sanitizeHistoryRange({...displayRange, serviceCreationTime, upperDateLimit});\n\tconst displayChanges = allChanges.filter(filterChangesByDisplayRange.bind(null, sanitizedRange));\n\n\tconst limitPassed = resolveChangesLimit({\n\t\tserviceCreationTime,\n\t\tupperDateLimit,\n\t\tdisplayChanges, \n\t\tchangesLimit: maxHistoryChangesDisplayed, \n\t\ttimelineData,\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tupdateState\n\t});\n\n\tif (!limitPassed)\n\t\treturn;\n\t\n\tconst eventsGrouping = displayChanges.reduce(groupTimelineEvents, {events: {}, _eventsIndex: new Map()});\n\tconst {events: eventsMapping, _eventsIndex} = eventsGrouping;\n\n\tconst events = _map(eventsMapping, mapEventCategories);\n\n\tconst severityRangeFilter = filterSeveritiesByDisplayRange.bind(null, sanitizedRange);\n\tconst filteredSeverities = severityRanges.filter(severityRangeFilter);\n\n\tconst rangesMapping = filteredSeverities.reduce(groupTimelineRanges, {});\n\tconst ranges = _map(rangesMapping, mapRangeCategories.bind(null, {severitiesGetter})).filter(Boolean);\n\n\t//decide history|compare state and notify angular\n\tconst mapHistoryState = resolveMapHistoryState({displayChanges});\n\t//mapHistoryState can be either HISTORY or COMPARE here.\n\tconst payloadForMap = {\n\t\tisCompare: mapHistoryState === MAP_CONSTANTS.MAP_HISTORY_STATES.COMPARE,\n\t\tfrom: sanitizedRange.start,\n\t\tto: sanitizedRange.end,\n\t\ttimestamp: sanitizedRange.end,\n\t\tcheckpoints: displayChanges.map(mapChangeToId)\n\t};\n\n\tconst totalRange = {\n\t\tstart: serviceCreationTime,\n\t\tend: upperDateLimit\n\t};\n\t\n\tLOGGING.debug(`Setting props for the timeline.\n\t\tdisplayRange: ${formatRange(sanitizedRange.start, sanitizedRange.end)}\n\t\ttotalRange: ${formatRange(totalRange.start, totalRange.end)}`,\n\t{caller: 'resolveHistoryState'}\n\t);\n\n\tconst newTimelineData = {\n\t\t...getEmptyTimelineData(),\n\t\tevents,\n\t\tranges,\n\t\tdisplayRange: sanitizedRange,\n\t\ttotalRange,\n\t\t_eventsIndex\n\t};\n\n\tupdateProperties({\n\t\tdisplayChanges,\n\t\tmapHistoryState,\n\t\ttimelineData: newTimelineData,\n\t\ttimelineCandidates: {}\n\t});\n\n\tdispatchEventToMap(MAP_CONSTANTS.EVT_WS_SET_MAP_HISTORY_STATE, payloadForMap, mapId);\n\n\t//this action recomputes options for cards lists\n\tdispatch(() => ({type: MAP_SETTINGS_SET_ACTION_TYPES.MAP_SETTINGS_SET}));\n\n\n\t//this action updates changes cards\n\tdispatch(() => ({\n\t\ttype: snOpwsRelatedItemsListActionTypes.REFRESH_REQUESTED,\n\t\tpayload: {\n\t\t\t...relatedItemsRefreshParams,\n\t\t\tforceRefresh: true\n\t\t}\n\t}));\n\n};\n\nconst effectHandlers = {\n\tresolveHistoryState\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};\n","import {get as _get, debounce as _debounce} from 'lodash';\nimport {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {sanitizeHistoryRange, formatRange, isRangeIncluded} from './timelineFunctors';\nimport effectReceiveHistoryData from './effectReceiveHistoryData';\nimport {clearMapSelection, clearCardSelection} from '../map-shared/setHistoryChangesFilter';\n\nconst ACTION_TYPES = {\n\tTIMELINE_RANGE_UPDATED: 'TIMELINE_CHART#RANGE_CHANGE'\n};\n\nconst _applyCandidateRange = ({updateProperties, dispatch, candidateRange, serviceId, currDataRange}) => {\n\tconst timelineCandidates = {\n\t\tdisplayRange: {\n\t\t\tstart: candidateRange.start,\n\t\t\tend: candidateRange.end\n\t\t}\n\t};\n\n\tLOGGING.debug(`TIMELINE_CHART#RANGE_CHANGE: range changing (debounced)\n\t\t${formatRange(candidateRange.start, candidateRange.end)}`\n\t);\n\n\tupdateProperties({timelineCandidates});\n\n\t//clearing current selection states on timeline range change.\n\t//the timeline seelction state is cleared from effect resolveHistoryState [on MAP_HISTORY_DATA_SET].\n\tclearMapSelection(dispatch);\n\tclearCardSelection(dispatch);\n\t\n\tif (isRangeIncluded(candidateRange, currDataRange)) {\n\t\t//candidate range is in current dataset.\n\t\tdispatch(() => ({\n\t\t\ttype: effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_SET\n\t\t}));\n\n\t} else {\n\t\t//candidate range is not in current dataset.\n\t\t//trigger request for history data\n\t\tdispatch(effectReceiveHistoryData.ACTION_TYPES.MAP_HISTORY_DATA_REQUEST, {\n\t\t\tserviceId,\n\t\t\tshowSeverity: false, //For Paris release, there's no severity on the timeline\n\t\t\tstartTime: candidateRange.start,\n\t\t\tendTime: candidateRange.end\n\t\t});\n\t}\n};\n\nconst RANGE_CHANGE_DEBOUNCE_PERIOD = 1000;\nconst applyCandidateRange = _debounce(_applyCandidateRange, RANGE_CHANGE_DEBOUNCE_PERIOD);\n\nconst onTimelineRangeUpdated = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tcurrentViewStart: start,\n\t\t\t\tcurrentViewEnd: end\n\t\t\t}\n\t\t},\n\t\tupdateProperties,\n\t\tupdateState,\n\t\tdispatch,\n\t\tproperties: {\n\t\t\ttimelineData = {},\n\t\t\tserviceCreationTime,\n\t\t\tserviceId,\n\t\t\tcurrDataRange,\n\t\t\tupperDateLimit\n\t\t}\n\t} = coeffects;\n\n\tconst currStart = _get(timelineData, 'displayRange.start') || -1;\n\tconst currEnd = _get(timelineData, 'displayRange.end') || -1;\n\n\tconst currentDisplayRange = {\n\t\tstart: currStart,\n\t\tend: currEnd\n\t};\n\n\tif (start === currStart && end === currEnd) {\n\t\tLOGGING.debug('TIMELINE_CHART#RANGE_CHANGE: range not modified. Skipping.');\n\t\treturn;\n\t}\n\n\tconst candidateRange = sanitizeHistoryRange({serviceCreationTime, upperDateLimit, start, end});\n\n\tif (candidateRange.start === currStart && candidateRange.end === currEnd) {\n\t\tLOGGING.debug('TIMELINE_CHART#RANGE_CHANGE: sanitized range not modified. Skipping.');\n\t\treturn;\n\t}\n\n\t//enable map loader on timeline interaction\n\tupdateState({\n\t\tloadingState: MAP_CONSTANTS.LOADING_STATES.LOADING\n\t});\n\n\tapplyCandidateRange({updateProperties, dispatch, candidateRange, currDataRange, currentDisplayRange, serviceId});\n};\n\nconst effectHandlers = {\n\tonTimelineRangeUpdated\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};"," \n/**\n * For history map only.\n * When change card is selected/unselected in the side panel,\n * this effect finds and selects/unselected the change bubble on the timeline. \n */\nexport const effectHighlightTimelineEvent = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tisSelected,\n\t\t\t\titem\n\t\t\t}\n\t\t},\n\t\tproperties: {\n\t\t\tisHistory\n\t\t},\n\t\tupdateProperties,\n\t} = coeffects;\n\n\tif (!isHistory)\n\t\treturn;\n\n\t//currently supporting highlight of 1 event from 1 card.\n\tconst highlightedEventIds = isSelected ? [item.id] : [];\n\t\n\tupdateProperties(() => ({\n\t\toperation: 'set',\n\t\tpath: 'timelineData.highlightedEventIds',\n\t\tvalue: highlightedEventIds\n\t}));\n};","import {onNextFrame, snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\nimport {markCisOnMap} from '../sn-map-related-items-list/effectMarkCisInMap';\nimport {TYPE_IDS} from '../map-shared/itemTypes';\nimport {setHistoryChangesFilter, clearMapSelection} from '../map-shared/setHistoryChangesFilter';\n\nconst ACTION_TYPES = {\n\tTIMELINE_DATA_SELECTED_UPDATED: 'TIMELINE_CHART#DATA_SELECTED'\n};\n\n/**\n * This effect handles selection of event on the timeline\n */\nconst onTimelineEventSelection = async coeffects => {\n\tconst {\n\t\taction,\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tproperties: {\n\t\t\trelatedItemIds\n\t\t}\n\t} = coeffects;\n\t\n\tclearMapSelection(dispatch);\n\n\tawait onNextFrame();\n\n\tconst {\n\t\tselectedEvents,\n\t\tselectedRanges\n\t} = action.payload || {};\n\n\tconst ciIds = selectedEvents.map(event => event.data.ciId);\n\tmarkCisOnMap(dispatch, ciIds);\n\t\n\tconst selectedTimelineEvents = new Set(selectedEvents.map(event => event.data.id));\n\n\tmarkCards({\n\t\tdispatch, \n\t\tupdateProperties, \n\t\tselectedTimelineEvents,\n\t\trelatedItemIds, \n\t\tselectedEvents,\n\t\tselectedRanges\n\t});\n};\n\nconst markCards = ({\n\tdispatch, \n\tupdateProperties, \n\tselectedTimelineEvents,\n\trelatedItemIds, \n\tselectedEvents,\n\tselectedRanges\n}) => {\n\tsetHistoryChangesFilter({\n\t\tdispatch,\n\t\tupdateProperties, \n\t\ttypeId: TYPE_IDS.MAP_TOPO_CHANGES, \n\t\tselectedTimelineEvents, \n\t\tcurrItemIds: relatedItemIds, \n\t\tselectedEvents,\n\t\tselectedRanges\n\t});\n\n\tdispatch(({state})=> ({\n\t\ttype: snOpwsRelatedItemsListActionTypes.REFRESH_REQUESTED,\n\t\tpayload: {\n\t\t\t...state.relatedItemsRefreshParams,\n\t\t\tforceRefresh: true\n\t\t}\n\t}));\n};\n\nconst effectHandlers = {\n\tonTimelineEventSelection\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {CONSTANTS} from '@devsnc/library-opws-mapping-shared';\n\nexport const computed = state => {\n\tconst {serviceId, isEm, isHistory} = state.properties;\n\n\tif (!serviceId)\n\t\treturn '';\n\n\tconst uriBase = CONSTANTS.GLOBALS.BS_URL.replace('{0}', serviceId)\n\t\t.replace('{1}', isEm ? CONSTANTS.GLOBALS.ASSURANCE : CONSTANTS.GLOBALS.MAPPING);\n\n\tconst uri = `${uriBase}&sysparm_is_ws=true${isHistory ? '&sysparm_is_ws_history=true' : ''}`;\n\treturn uri;\n};","import {ITEM_TYPES, TYPE_IDS, HISTORY_ITEM_TYPES} from '../map-shared/itemTypes';\nimport {ACTION_TYPES as mapSettingsMenuBehaviorActionTypes} from '../map-settings-menu-behavior/mapSettingsMenuBehavior';\nimport {INDICATOR_IDS, INDICATOR_TYPES} from '../map-shared/indicatorTypes';\nimport {map as _map, memoize as _memoize} from 'lodash';\nimport MAP_CONSTANTS from '../map-shared/constants';\n\nconst ACTION_TYPES = {\n\tMAP_SETTINGS_SET: mapSettingsMenuBehaviorActionTypes.MAP_SETTINGS_SET\n};\n\n/**\n * Prepare base static part of item types.\n * The condition isHistory will bring only change cards, isEm=false will filter out Alerts panel.\n */\nconst getBaseItemTypes = _memoize((isEm, isHistory) => {\n\tif (isHistory)\n\t\treturn HISTORY_ITEM_TYPES;\n\n\treturn isEm ? ITEM_TYPES : ITEM_TYPES.filter(item => item.id !== TYPE_IDS.ALERTS);\n}, (isEm, isHistory) => `${isEm}_${isHistory}`);\n\n\nconst buildIndicatorType = ({settingsModel}, indicatorId) => {\n\tconst indicator = settingsModel[indicatorId];\n\n\tif (!indicator || !indicator.enabled)\n\t\treturn null;\n\n\treturn INDICATOR_TYPES.find(indicatorType => (indicatorType.id === indicatorId));\n};\n\n/**\n * On each change in `mapSettings`, use the model to recompute `relatedItemTypes` property.\n * `relatedItemTypes` is a selectable property that is used by cards container on the side panel.\n */\nconst effectComputeRelatedTypes = coeffects => {\n\tconst {\n\t\tstate: {\n\t\t\tmapSettings\n\t\t},\n\t\tproperties: {\n\t\t\tmapHistoryState,\n\t\t\tisEm = true\n\t\t},\n\t\tupdateProperties\n\t} = coeffects;\n\t\n\tif (!mapSettings || !mapSettings.model)\n\t\treturn;\n\n\tconst isHistory = MAP_CONSTANTS.MAP_HISTORY_STATES.CURRENT !== mapHistoryState;\n\n\tconst indicatorTypeBuilder = buildIndicatorType.bind(null, {settingsModel: mapSettings.model});\n\tconst indicatorTypes = isHistory ? [] : _map(INDICATOR_IDS, indicatorTypeBuilder).filter(Boolean);\n\n\tconst baseItemTypes = getBaseItemTypes(isEm, isHistory);\n\n\tconst relatedItemTypes = [\n\t\t...baseItemTypes,\n\t\t...indicatorTypes\n\t];\n\n\tupdateProperties({relatedItemTypes});\n};\n\n\nconst effectHandlers = {\n\teffectComputeRelatedTypes\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {get as _get} from 'lodash';\nimport {destroyMapListeners} from './eventBus';\n\nexport const effectMapDisconnected = coeffects => {\n\tconst mapId = _get(coeffects, 'properties.mapId') || null;\n\tdestroyMapListeners(mapId);\n};","import {get as _get} from 'lodash';\nimport {CONSTANTS, checkForError, LOGGING, formatAlertsResponse} from '@devsnc/library-opws-mapping-shared';\nimport MAP_CONSTANTS from '../map-shared/constants';\n\nconst handleGetMapAlertsResponse = coeffects => {\n\tLOGGING.info('handleGetMapAlertsResponse', {caller: 'handleGetMapAlertsResponse'});\n\n\tconst {\n\t\tupdateProperties,\n\t\tdispatch,\n\t\taction: {payload},\n\t\tproperties: {\n\t\t\tserviceId,\n\t\t\trelatedItemIds = {}\n\t\t}\n\t} = coeffects;\n\n\tconst {\n\t\talerts,\n\t\ttotalRecords,\n\t\trequestedTime,\n\t} = payload;\n\n\tconst errors = checkForError({payload, dispatch, caller: 'handleGetMapAlertsResponse'});\n\tif (errors) {\n\t\tupdateProperties({cardsAreLoading:false});\n\t\treturn;\n\t}\n\n\tconst alertsSafe = alerts || [];\n\tconst items = formatAlertsResponse(alertsSafe, serviceId);\n\tconst alertsSelectionState = _get(relatedItemIds, 'ALERTS.urlData.extArgs.listof') || '';\n\n\tupdateProperties({\n\t\tcardsAreLoading:false,\n\t\trelatedItemsResponse: {\n\t\t\titems,\n\t\t\ttotalRecords,\n\t\t\trequestedTime,\n\t\t\tlastUpdated: Date.now(),\n\t\t\tfilterApplied: {\n\t\t\t\ttype: alertsSelectionState === 'CI' ? MAP_CONSTANTS.CONTEXT_SELECTION_STATES.MAP : null\n\t\t\t}\n\t\t},\n\t\tfilteredItems: alertsSafe\n\t});\n};\n\nconst handleGetMapAlertsFailed = coeffects => {\n\tLOGGING.info('handleGetMapAlertsFailed', {caller: 'handleGetMapAlertsFailed'});\n\n\tconst {\n\t\tdispatch,\n\t\taction: {payload},\n\t\tupdateProperties\n\t} = coeffects;\n\tdispatch(CONSTANTS.ACTION_TYPES.NOC_ERROR_OCCURRED,payload);\n\tupdateProperties({cardsAreLoading: false});\n\n};\n\nconst effectHandlers = {\n\thandleGetMapAlertsResponse,\n\thandleGetMapAlertsFailed\n\n};\n\nexport default {\n\teffectHandlers\n};","import {get as _get} from 'lodash';\nimport {LOGGING, snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\nimport {TYPE_IDS} from '../map-shared/itemTypes';\nimport {effectMapGetAlertItems} from './effectMapGetAlertItems';\nimport effectGetMapChangeItems from './effectGetMapChangeItems';\nimport {getGraphQlMapIndicatorsEffect} from './getMapIndicatorsForCis';\nimport {setChangeCardsinHistory} from '../behavior-service-history/effectChangeCardInHistory';\n\nconst ACTION_TYPES = {\n\tREFRESH_REQUESTED: snOpwsRelatedItemsListActionTypes.REFRESH_REQUESTED\n};\n\n/**\n * Interceptor to navigate between multiple effects for specific fetch implementations.\n */\nconst effectMapRelatedItemsRefreshInterceptor = context => {\n\tconst {coeffects} = context;\n\tconst selectedType = _get(coeffects, 'action.payload.selectedType', null);\n\tconst newEffects = [];\n\tlet effect;\n\tif (!selectedType || !selectedType.id) {\n\t\tLOGGING.log('effectMapRelatedItemsRefreshInterceptor: doing nothing since no selectedType.id...');\n\t\treturn context;\n\t}\n\t\n\t/*\n\t * Implementation notes: \n\t * For each item type, have a call to the corresponsing effect in here, by adding the effect function into `newEffects` array.\n\t * Make sure that you pass an object {effect: yourEffect, args: [coeffects]}, otherwise yourEffect will have no input.\n\t * \n\t * yourEffect should provide a request that will in response\n\t * Set property `relatedItemsResponse` \n\t * * items - array\n\t * * lastUpdated timestamp\n\t * * requestTime [optional] formated time for server.\n\t * * totalRecords number \n\t */\n\tswitch (selectedType.id) {\n\t\tcase TYPE_IDS.ALERTS:\n\t\t\tnewEffects.push({\n\t\t\t\teffect: effectMapGetAlertItems,\n\t\t\t\targs: [coeffects]\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase TYPE_IDS.MAP_TOPO_CHANGES:\n\t\t\teffect = selectedType.isHistory ? \n\t\t\t\tsetChangeCardsinHistory : \n\t\t\t\teffectGetMapChangeItems.effectHandlers.getMapChangeItems;\n\n\t\t\tnewEffects.push({\n\t\t\t\teffect,\n\t\t\t\targs: [coeffects]\n\t\t\t});\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\teffect = getGraphQlMapIndicatorsEffect(coeffects);\n\t\t\teffect.args = [\n\t\t\t\t...effect.args,\n\t\t\t\tcoeffects\n\t\t\t];\n\n\t\t\tnewEffects.push(effect);\n\t\t\tbreak;\n\t}\n\n\treturn {\n\t\tcoeffects,\n\t\teffects: newEffects\n\t};\n};\n\n\nconst effectMapRelatedItemsRefresh = {\n\teffect(coeffects) {\n\t\t/*\n\t\t\tThis effect will run AFTER all other effects that were invoked from the interceptor.\n\t\t\tIt takes care to synchronize the payload on `map-component` state.\n\t\t\t`relatedItemsRefreshParams` should not be addressed in any other effect that is invoked from the interceptor.\n\t\t\tInstead, use the payload data.\n\t\t*/\n\t\tconst {\n\t\t\tupdateState,\n\t\t\taction: {\n\t\t\t\tpayload\n\t\t\t}\n\t\t} = coeffects;\n\n\t\tupdateState({relatedItemsRefreshParams: payload});\n\t},\n\n\tinterceptors: [\n\t\teffectMapRelatedItemsRefreshInterceptor\n\t]\n};\n\nconst effectHandlers = {\n\teffectMapRelatedItemsRefresh\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {LOGGING} from '@devsnc/library-opws-mapping-shared';\nimport {TYPE_IDS} from '../map-shared/itemTypes';\nimport effectGetAlertsForCis from './effectGetAlertsForCis';\nimport effectGetAlertsForBS from './effectGetAlertsForBS';\nimport {get as _get} from 'lodash';\n\nconst LIST_OF_BS = 'BS';\nconst LIST_OF_CI = 'CI';\n\nconst getQueryParams = args => {\n\tconst {\n\t\tbsid,\n\t\tservicelist,\n\t\ttimestamp,\n\t\tsortOption,\n\t\tfirstRecord,\n\t\tinfraPathCis,\n\t\tpathIds,\n\t} = args;\n\n\treturn {\n\t\tserviceId: bsid,\n\t\tpathIds,\n\t\tciIds: servicelist,\n\t\ttimestamp: decodeURIComponent(timestamp),\n\t\tsortByField: sortOption.field,\n\t\tisOrderASC: (sortOption.order === 'asc'),\n\t\tfirstRow: firstRecord,\n\t\tinfraPathCis: infraPathCis ||''\n\t};\n};\n\nexport const effectMapGetAlertItems = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\tupdateProperties,\n\t\tproperties: {\n\t\t\trelatedItemIds,\n\t\t\trelatedItemsResponse\n\t\t},\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tselectedType,\n\t\t\t\tselectedSortOption,\n\t\t\t\tfirstRecord,\n\t\t\t\tforceRefresh = false\n\t\t\t}\n\t\t}\n\t} = coeffects;\n\n\tif (selectedType && selectedType.id !== TYPE_IDS.ALERTS) {\n\t\tLOGGING.warn(`effectMapGetAlertItems: effect called and did nothing, \n\t\tbecause expected typeId ${TYPE_IDS.ALERTS}, but got ${selectedType.id}`);\n\n\t\treturn;\n\t}\n\n\tconst urlData = _get(relatedItemIds, 'ALERTS.urlData');\n\n\tif (!urlData)\n\t\treturn;\n\n\tconst {\n\t\tbsid,\n\t\tpathIds,\n\t\tservicelist,\n\t\tlistof\n\t} = urlData.extArgs;\n\n\tconst timestamp = forceRefresh ? \n\t\t_get(urlData, 'params.timestamp') : \n\t\t_get(relatedItemsResponse,'requestedTime');\n\n\tconst sortOption = selectedType.sortOptions.find(sortOption => selectedSortOption === sortOption.id);\n\n\tconst data = getQueryParams({\n\t\tbsid, \n\t\tpathIds, \n\t\tservicelist,\n\t\ttimestamp,\n\t\tfirstRecord,\n\t\tsortOption\n\t});\n\tupdateProperties({cardsAreLoading:true});\n\n\tif (listof === LIST_OF_BS) \n\t\tdispatch(effectGetAlertsForBS.ACTION_TYPES.MAP_GET_ALERTS_FOR_BS_REQUEST, {data});\n\n\telse if (listof === LIST_OF_CI) \n\t\tdispatch(effectGetAlertsForCis.ACTION_TYPES.MAP_GET_ALERTS_FOR_CIS_REQUEST, {data});\n};\n","import {LOGGING, CONSTANTS} from '@devsnc/library-opws-mapping-shared';\nimport {createGraphQLEffect} from '@servicenow/ui-effect-graphql';\nimport {INDICATOR_IDS_HASH} from '../map-shared/indicatorTypes';\nimport effectGetIndicatorsForCis from './effectGetIndicatorsForCis';\n\nconst {RELATED_ITEMS_PAGE_SIZE} = CONSTANTS.DEFAULTS;\nconst TASK_CI = 'task_ci';\n\nconst getIndicatorParams = (params, selectedType) => {\n\tconst {\n\t\ttable: selectedTable, \n\t\tciField: selectedCiField, \n\t\tgroupBy: selectedGroupBy\n\t} = selectedType;\n\n\tconst {\n\t\tsysparm_cmdb_ci_field: ciField = '',\n\t\tsysparm_table: table = '',\n\t\tsysparm_query: query = ''\n\t} = params;\n\n\tif (table === TASK_CI) {\n\t\treturn {\n\t\t\tquery,\n\t\t\tciField: selectedCiField,\n\t\t\ttable: selectedTable,\n\t\t\tgroupBy: selectedGroupBy\n\t\t};\n\t}\n\n\treturn {\n\t\tciField,\n\t\tquery,\n\t\ttable,\n\t\tgroupBy: selectedGroupBy\n\t};\n};\n\nexport const getGraphQlMapIndicatorsEffect = coeffects   => {\n\tconst {\n\t\tproperties: {\n\t\t\trelatedItemIds\n\t\t},\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\tselectedType\n\t\t\t}\n\t\t}\n\t} = coeffects;\n\n\tif (selectedType && !INDICATOR_IDS_HASH[selectedType.id]) {\n\t\tLOGGING.warn(`createIndicatorsGqlEffect:  called and did nothing,\n        because expected typeId from ${INDICATOR_IDS_HASH}, but got ${selectedType.id}`);\n\t\treturn;\n\t}\n\n\tif(INDICATOR_IDS_HASH[selectedType.id]) {\n\t\tconst {\n\t\t\tattributes, \n\t\t\tid: indicatorId,\n\t\t} = selectedType;\n        \n\t\tconst relatedItem = relatedItemIds[indicatorId];\n\t\tconst {urlData, sysIds} = relatedItem;\n\t\tconst {params} = urlData;\n\n\t\tconst {ciField, query, table, groupBy} = getIndicatorParams(params, selectedType);\n\n\t\tconst sysIdQuery = `${ciField}IN${sysIds.join(',')}`;\n\t\tconst newQueryArr = [\n\t\t\tsysIdQuery,\n\t\t\tquery\n\t\t];\n\n\t\tconst queryConditions = newQueryArr.join('^');\n\n\t\tconst args = {\n\t\t\ttable,\n\t\t\tqueryConditions,\n\t\t\tattributes,\n\t\t\tgroupBy\n\t\t};\n\n\t\tconst qlQuery = getDynamicGraphQl(args);\n\t\treturn createIndicatorsGraphQl(qlQuery);\n\t}\n};\n\nconst buildGqlForAllAttributes = attributes => \n\tattributes.map(attribute => `${attribute} {\n                    label\n                    displayValue \n                    value\n                 }`);\n\nconst getDynamicGraphQl = args => {\n\tconst {\n\t\tattributes,\n\t\tqueryConditions,\n\t\ttable,\n\t\tgroupBy\n\t} = args;\n\n\tconst gQlAttributes = buildGqlForAllAttributes(attributes);\n\tconst allAttrStr = `_results { \n                                    ${gQlAttributes.join('')}\n                                 }\n                            `;\n\n\treturn `query getMapIndicatorsForCis {\n\t        GlideRecord_Query { \n\t            ${table} (queryConditions: \"${queryConditions}\", pagination: {limit: ${RELATED_ITEMS_PAGE_SIZE}, offset: 0}) \n\t            {\n                             ${allAttrStr}\n                 }\n            }\n            \n            GlideAggregateRecord_Query(tableName: \"${table}\",\n\t\t \t\t\t\tqueryConditions: \"${queryConditions}\", groupBy: \"${groupBy}\") {\n            totalCount\n                aggregates {\n                    displayValue: count\n                }\n            } \n            \n    }`;\n};\n\nconst createIndicatorsGraphQl = qlQuery => \n\tcreateGraphQLEffect(qlQuery, {\n\t\tstartActionType: effectGetIndicatorsForCis.ACTION_TYPES.MAP_GET_INDICATORS_FOR_CIS_REQUEST_STARTED,\n\t\tsuccessActionType: effectGetIndicatorsForCis.ACTION_TYPES.MAP_GET_INDICATORS_FOR_CIS_REQUEST_SUCCEEDED,\n\t\terrorActionType: effectGetIndicatorsForCis.ACTION_TYPES.MAP_GET_INDICATORS_FOR_CIS_REQUEST_FAILED,\n\t\tvariableList: ['queryConditions']\n\t});\n\n\n","import effectGetMapChangeItems from '../map-container/effectGetMapChangeItems';\nexport const setChangeCardsinHistory = coeffects => {\n\tconst {\n\t\tdispatch,\n\t\tproperties: {\n\t\t\tdisplayChanges,\n\t\t\ttimelineData: {\n\t\t\t\tselectedTimelineEvents\n\t\t\t}\n\t\t}\n\t} = coeffects;\n\tconst changes = selectedTimelineEvents !== null ?\n\t\tdisplayChanges.filter(change => selectedTimelineEvents.has(change.id)):\n\t\tdisplayChanges;\n\n\n\tdispatch(effectGetMapChangeItems.ACTION_TYPES.GET_HISTORY_CHANGES_REQUEST_SUCCEEDED, changes);\n};","import {snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\nimport mapPropertiesActionTypes from '../map-side-panel/actions/sn-map-properties/actionTypes';\nimport MAP_CONSTANTS from '../map-shared/constants';\nimport {clearTimelineSelections, clearMapSelection} from '../map-shared/setHistoryChangesFilter';\n\nconst ACTION_TYPES = {\n\tRELATED_ITEMS_BACK: snOpwsRelatedItemsListActionTypes.BACK_ACTION,\n\tPROPERTIES_BACK: mapPropertiesActionTypes.BACK_ACTION\n};\n\nconst propertiesBack = ({dispatch}) => \n\tclearMapSelection(dispatch);\n\nconst relatedItemsBack = coeffects => {\n\tconst {\n\t\tstate: {\n\t\t\trelatedItemsRefreshParams\n\t\t},\n\t\tproperties: {\n\t\t\trelatedItemsResponse: {\n\t\t\t\tfilterApplied\n\t\t\t}\n\t\t},\n\t\tdispatch,\n\t\tupdateProperties\n\t} = coeffects;\n\n\tconst filterType = (filterApplied && filterApplied.type || null);\n\n\tif (filterType === MAP_CONSTANTS.CONTEXT_SELECTION_STATES.TIMELINE) {\n\t\t//clear timeline selection state\n\t\tclearTimelineSelections(updateProperties);\n\t\t\n\t\t//Trigger refresh of related items panel.\n\t\tdispatch(() => ({\n\t\t\ttype: snOpwsRelatedItemsListActionTypes.REFRESH_REQUESTED, \n\t\t\tpayload: {\n\t\t\t\t...relatedItemsRefreshParams,\n\t\t\t\tforceRefresh: true\n\t\t\t}\n\t\t}));\n\t}\n\n\t//map selections (and markings) should be cleared regardless the filter state.\n\tclearMapSelection(dispatch);\n};\n\nconst effectHandlers = {\n\tpropertiesBack,\n\trelatedItemsBack\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {snOpwsRelatedItemsListActionTypes} from '@devsnc/library-opws-mapping-shared';\n\nconst ACTION_TYPES = {\n\tCARD_SELECTED: snOpwsRelatedItemsListActionTypes.CARD_SELECTED\n};\n\nconst onCardSelection = coeffects => {\n\tconst {\n\t\taction: {\n\t\t\tpayload: {\n\t\t\t\titem,\n\t\t\t\tisSelected\n\t\t\t}\n\t\t},\n\t\tupdateProperties\n\t} = coeffects;\n\t\n\tconst selectedCardId = isSelected && item ? item.id : '';\n\tupdateProperties({selectedCardId});\n};\n\n\nconst effectHandlers = {\n\tonCardSelection\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};","import {forceTimelineRefresh} from '../behavior-service-history/timelineFunctors';\n\nconst ACTION_TYPES = {\n\tTOGGLE_SIDE_PANEL: 'NOW_RECORD_COMMON_SIDEBAR#OPENED_SET'\n};\n\nconst toggleSidePanel = coeffects => {\n\tconst {\n\t\tupdateProperties\n\t} = coeffects;\n\n\t//DEF0109873: had to delay this updateProperties to make sure the timeline refreshes AFTER the side panel layout was re-rendered.\n\tsetTimeout(() => forceTimelineRefresh(updateProperties), 100);\n};\n\nconst effectHandlers = {\n\ttoggleSidePanel\n};\n\nexport default {\n\tACTION_TYPES,\n\teffectHandlers\n};"],"sourceRoot":""}