{"version":3,"sources":["webpack://__TECTONIC__sn_component_error_handler/webpack/bootstrap","webpack://__TECTONIC__sn_component_error_handler/./src/constants.js","webpack://__TECTONIC__sn_component_error_handler/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__sn_component_error_handler/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__sn_component_error_handler/external \"__TECTONIC__$servicenow_ui_effect_amb\"","webpack://__TECTONIC__sn_component_error_handler/external \"__TECTONIC__lodash_4_17_4\"","webpack://__TECTONIC__sn_component_error_handler/./src/effects.js","webpack://__TECTONIC__sn_component_error_handler/./src/errors.js","webpack://__TECTONIC__sn_component_error_handler/./src/behaviors.js","webpack://__TECTONIC__sn_component_error_handler/external \"__TECTONIC__$servicenow_now_modal\"","webpack://__TECTONIC__sn_component_error_handler/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__sn_component_error_handler/./src/modal/index.js","webpack://__TECTONIC__sn_component_error_handler/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ERROR_HANDLER","COMPATIBILITY_DATA_SOURCE_FAILED","SHOW_ERROR_MODAL","HIDE_ERROR_MODAL","STORE_UPDATED","AMB_EVENT_SUBSCRIPTION_CHANGED","AMB_EVENT_SESSION_LOGGED_OUT","GLOBAL_ERROR","HTTP_ERROR_OCCURRED","OFFLINE","ONLINE","AMB_EVENT_","BUTTON_PRIMARY","NOW_MODAL_OPENED_SET","NOW_MODAL_FOOTER_ACTION_CLICKED","__TECTONIC__sn_translate","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__$servicenow_ui_effect_amb","__TECTONIC__lodash_4_17_4","ambInitEffect","dispatch","subscribe","ambEventErrorEffect","action","state","errorMessages","getFromState","type","_extends","default","httpErrorEffect","payload","status","_showErrorForStatus","dataSourceErrorEffect","response","_lodash","globalErrorEffect","errorMessage","code","title","showModalEffect","overrideExisting","window","document","body","click","setState","modalOpen","error","hideModalEffect","offlineEffect","onlineEffect","_constants","prop","obj","behaviors","[object Object]","_snTranslate","message","buttonTitle","buttonAction","location","reload","canDismiss","401","500","502","503","504","_errors","_effects","_uiEffectAmb","createErrorHandlerBehavior","userErrorMessages","ambInitAction","defaultErrorMessages","actionHandlers","createAmbEventEffect","keys","forEach","indexOf","elementListeners","Map","initialState","onConnect","el","offlineListener","event","onlineListener","set","addEventListener","onDisconnect","listeners","delete","removeEventListener","__TECTONIC__$servicenow_now_modal","__TECTONIC__$servicenow_ui_core","_uiCore","createCustomElement","view","properties","_uiRendererSnabbdom","createElement","size","opened","header-label","content","footer-actions","buttons","label","variant","push","getButtons","reflect","footerAction"],"mappings":"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","file":"sn-component-error-handler.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","// Behavior name\nexport const ERROR_HANDLER = 'errorHandler';\n\n// ACTIONS\nexport const COMPATIBILITY_DATA_SOURCE_FAILED = 'COMPATIBILITY_DATA_SOURCE_FAILED';\nexport const SHOW_ERROR_MODAL = 'SHOW_ERROR_MODAL';\nexport const HIDE_ERROR_MODAL = 'HIDE_ERROR_MODAL';\nexport const STORE_UPDATED = 'STORE_UPDATED';\nexport const AMB_EVENT_SUBSCRIPTION_CHANGED = 'AMB_EVENT_SUBSCRIPTION_CHANGED';\nexport const AMB_EVENT_SESSION_LOGGED_OUT = 'AMB_EVENT_SESSION_LOGGED_OUT';\nexport const GLOBAL_ERROR = 'GLOBAL_ERROR';\nexport const HTTP_ERROR_OCCURRED = 'HTTP_ERROR_OCCURRED';\n\n// Other Error Types\nexport const OFFLINE = 'OFFLINE';\nexport const ONLINE = 'ONLINE';\nexport const AMB_EVENT_ = 'AMB_EVENT_';\n\n// Modal related\nexport const BUTTON_PRIMARY = 'primary';\nexport const NOW_MODAL_OPENED_SET = 'NOW_MODAL#OPENED_SET';\nexport const NOW_MODAL_FOOTER_ACTION_CLICKED = 'NOW_MODAL#FOOTER_ACTION_CLICKED';","module.exports = __TECTONIC__sn_translate;","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__$servicenow_ui_effect_amb;","module.exports = __TECTONIC__lodash_4_17_4;","import {\n\tAMB_EVENT_SUBSCRIPTION_CHANGED,\n\tERROR_HANDLER,\n\tGLOBAL_ERROR,\n\tSHOW_ERROR_MODAL,\n\tSTORE_UPDATED,\n\tOFFLINE, ONLINE\n} from './constants';\nimport {get} from 'lodash';\n\nfunction getFromState(state, prop){\n\treturn get(state, `behaviors.${ERROR_HANDLER}.${prop}`);\n}\n\nfunction setState(state, obj){\n\treturn {...state, behaviors: {...state.behaviors, [ERROR_HANDLER]: {...state.behaviors[ERROR_HANDLER], ...obj}}};\n}\n\nexport function ambInitEffect({dispatch}){\n\tdispatch(AMB_EVENT_SUBSCRIPTION_CHANGED, {subscribe: true});\n}\n\nexport function ambEventErrorEffect({action, dispatch, state}){\n\tconst errorMessages = getFromState(state, 'errorMessages');\n\tconst {type} = action;\n\tif(!type || !errorMessages[type])\n\t\treturn;\n\n\tdispatch(SHOW_ERROR_MODAL, {...errorMessages.default, ...errorMessages[type]});\n}\n\nfunction _showErrorForStatus(status, {dispatch, state}){\n\tif(!status)\n\t\treturn;\n\n\tconst errorMessages = getFromState(state, 'errorMessages');\n\tif(!errorMessages[status])\n\t\treturn;\n\n\tdispatch(SHOW_ERROR_MODAL, {...errorMessages.default, ...errorMessages[status]});\n}\n\nexport function httpErrorEffect({action, dispatch, state}){\n\tconst {payload: {status}} = action;\n\n\t_showErrorForStatus(status, {dispatch, state});\n}\n\nexport function dataSourceErrorEffect({action, dispatch, state}){\n\tconst {payload} = action;\n\n\t// REST response pattern\n\tlet {response} = payload;\n\n\t// GraphQL response pattern\n\tif(!response)\n\t\tresponse = get(payload, 'networkError.response', null);\n\n\t// Unsupported response\n\tif(!response || !response.status)\n\t\treturn;\n\n\t_showErrorForStatus(response.status, {dispatch, state});\n}\n\nexport function globalErrorEffect({action, dispatch, state}){\n\tconst {payload} = action;\n\n\tconst errorMessages = getFromState(state, 'errorMessages');\n\tlet errorMessage = errorMessages.default;\n\n\tconst {code} = payload;\n\tif(code)\n\t\terrorMessage = errorMessages[code] ? {...errorMessage, ...errorMessages[code]} : {...errorMessage, title: `${errorMessage.title} Code: ${code}`};\n\n\terrorMessage = {...errorMessage, ...payload};\n\n\tdispatch(SHOW_ERROR_MODAL, errorMessage);\n\n}\n\nexport function showModalEffect({action, dispatch, state}){\n\tconst {payload: errorMessage} = action;\n\tconst modalOpen = getFromState(state, 'modalOpen');\n\tif(modalOpen && !errorMessage.overrideExisting)\n\t\treturn;\n\n\t// Close any popovers and dropdowns\n\twindow.document.body.click();\n\tdispatch(STORE_UPDATED, setState(state, {modalOpen: true, error: errorMessage}));\n}\n\nexport function hideModalEffect({dispatch, state}) {\n\tdispatch(STORE_UPDATED, setState(state, {modalOpen: false, error: {}}));\n}\n\nexport function offlineEffect(dispatch){\n\tdispatch(GLOBAL_ERROR, {code: OFFLINE});\n}\n\nexport function onlineEffect(dispatch){\n\tdispatch(GLOBAL_ERROR, {code: ONLINE});\n}\n","import {t} from 'sn-translate';\nimport {AMB_EVENT_SESSION_LOGGED_OUT, OFFLINE, ONLINE} from \"./constants\";\n\nexport const errorMessages = {\n\tdefault: {\n\t\ttitle: t('Error'),\n\t\tmessage: t('An error has occurred. Please refresh or contact support.'),\n\t\tbuttonTitle: t('Refresh'),\n\t\tbuttonAction: ()=> {window.location.reload(true)},\n\t\tcanDismiss: true,\n\t\toverrideExisting: false\n\t},\n\t401: {\n\t\ttitle: t('Session Expired (401)'),\n\t\tmessage: t('Your login session has expired. Please login again.'),\n\t\tbuttonTitle: t('Login'),\n\t\tcanDismiss: false\n\t},\n\t500: {\n\t\ttitle: t('Internal Server Error (500)'),\n\t},\n\t502: {\n\t\ttitle: t('Bad Gateway (502)'),\n\t\tmessage: t('A Bad Gateway (502) error has occurred. Please check that your instance is running and refresh.'),\n\t},\n\t503: {\n\t\ttitle: t('Service Unavailable (503)')\n\t},\n\t504: {\n\t\ttitle: t('Gateway Timeout (504)')\n\t},\n\t[AMB_EVENT_SESSION_LOGGED_OUT]: {\n\t\ttitle: t('Session Expired'),\n\t\tmessage: t('Your session has expired. Please log in to resume your work.'),\n\t\tbuttonTitle: t('Go to Login'),\n\t\tcanDismiss: false\n\t},\n\t[OFFLINE]: {\n\t\ttitle: t('Connection Lost'),\n\t\tmessage: t(\"Your browser has gone offline. Please check your network connection.\"),\n\t\tbuttonTitle: t('Dismiss'),\n\t\tbuttonAction: ()=>{},\n\t\tcanDismiss: false,\n\t\toverrideExisting: true\n\n\t},\n\t[ONLINE]: {\n\t\ttitle: t('Connection Restored'),\n\t\tmessage: t(\"Your browser is back online! Refresh to pick up where you left off.\"),\n\t\tcanDismiss: false,\n\t\toverrideExisting: true\n\t}\n};\n","import {\n\tERROR_HANDLER,\n\tSHOW_ERROR_MODAL,\n\tHIDE_ERROR_MODAL,\n\tCOMPATIBILITY_DATA_SOURCE_FAILED,\n\tGLOBAL_ERROR,\n\tAMB_EVENT_SUBSCRIPTION_CHANGED,\n\tAMB_EVENT_,\n\tHTTP_ERROR_OCCURRED\n} from './constants';\nimport {errorMessages as defaultErrorMessages}  from './errors';\nimport {\n\tdataSourceErrorEffect,\n\tglobalErrorEffect,\n\tshowModalEffect,\n\thideModalEffect,\n\tambInitEffect,\n\tambEventErrorEffect,\n\tofflineEffect,\n\tonlineEffect,\n\thttpErrorEffect\n} from './effects';\nimport {createAmbEventEffect} from '@servicenow/ui-effect-amb';\n\nexport const createErrorHandlerBehavior = ({ errorMessages: userErrorMessages = {}, ambInitAction} = {}) =>{\n\tconst errorMessages = {...defaultErrorMessages, ...userErrorMessages};\n\n\t// Initialize action handlers for data source errors and internal functionality\n\tlet actionHandlers = {\n\t\t[COMPATIBILITY_DATA_SOURCE_FAILED]: dataSourceErrorEffect,\n\t\t[GLOBAL_ERROR]: globalErrorEffect,\n\t\t[SHOW_ERROR_MODAL]: showModalEffect,\n\t\t[HIDE_ERROR_MODAL]: hideModalEffect,\n\t\t[HTTP_ERROR_OCCURRED]: httpErrorEffect,\n\t\t[AMB_EVENT_SUBSCRIPTION_CHANGED]: createAmbEventEffect()\n\t};\n\n\t// If a custom AMB init action was provided, create a handler for it that initializes AMB\n\tif(ambInitAction)\n\t\tactionHandlers[ambInitAction] = ambInitEffect;\n\n\t// Create handlers for all error messages starting with AMB_EVENT_\n\tObject.keys(errorMessages).forEach(key=>{\n\t\tif(key.indexOf(AMB_EVENT_) === 0)\n\t\t\tactionHandlers[key] = ambEventErrorEffect;\n\t});\n\n\tconst elementListeners = new Map();\n\treturn  {\n\t\tname: ERROR_HANDLER,\n\t\tactionHandlers,\n\t\tinitialState: {\n\t\t\tmodalOpen: false,\n\t\t\terrorMessages,\n\t\t\terror: {}\n\t\t},\n\t\tonConnect(el, dispatch){\n\t\t\tif(!ambInitAction)\n\t\t\t\tambInitEffect({dispatch});\n\n\t\t\tconst offlineListener = (event) => {\n\t\t\t\tofflineEffect(dispatch);\n\t\t\t};\n\n\t\t\tconst onlineListener = (event) => {\n\t\t\t\tonlineEffect(dispatch);\n\t\t\t};\n\n\t\t\telementListeners.set(el, {offlineListener, onlineListener});\n\t\t\twindow.addEventListener('offline', offlineListener);\n\t\t\twindow.addEventListener('online', onlineListener);\n\t\t},\n\t\tonDisconnect(el, dispatch){\n\t\t\tdispatch(AMB_EVENT_SUBSCRIPTION_CHANGED, {subscribe: false});\n\n\t\t\tconst listeners = elementListeners.get(el);\n\t\t\tif(!listeners)\n\t\t\t\treturn;\n\n\t\t\tconst {offlineListener, onlineListener} = listeners;\n\n\t\t\telementListeners.delete(el);\n\t\t\twindow.removeEventListener('offline', offlineListener);\n\t\t\twindow.removeEventListener('online', onlineListener);\n\n\t\t},\n\n\t};\n};\n","module.exports = __TECTONIC__$servicenow_now_modal;","module.exports = __TECTONIC__$servicenow_ui_core;","import {createCustomElement} from '@servicenow/ui-core';\nimport '@servicenow/now-modal';\nimport {t} from 'sn-translate';\nimport {\n    HIDE_ERROR_MODAL, \n    NOW_MODAL_OPENED_SET,\n    BUTTON_PRIMARY, \n    NOW_MODAL_FOOTER_ACTION_CLICKED\n} from '../constants';\n\nfunction getButtons({buttonTitle, buttonAction, canDismiss}) {\n    const buttons = [{label: buttonTitle, variant: BUTTON_PRIMARY, action: buttonAction}];\n    if (canDismiss)\n        buttons.push({label: t('Dismiss')});\n    return buttons;\n}\n\nexport default createCustomElement('sn-canvas-error-modal', {\n    view: (state, dispatch) => {\n        const {properties: {modalOpen, error}} = state;\n        const {title, message} = error;\n        return (<now-modal \n            size='sm'\n            opened={modalOpen}\n            header-label={title}\n            content={message}\n            footer-actions={getButtons(error)}\n        />);\n    },\n    properties: {\n        error: {\n            default: {},\n            reflect: true\n        },\n        modalOpen: {\n            default: false,\n            reflect: true\n        }\n    },\n    actionHandlers: {\n        [NOW_MODAL_OPENED_SET]: ({action: {payload: {value}}, dispatch}) => {\n            if (value === false)\n                dispatch(HIDE_ERROR_MODAL);\n        },\n        [NOW_MODAL_FOOTER_ACTION_CLICKED]: ({action: {payload}, dispatch}) => {\n            const {footerAction: {action}} = payload;\n            if (typeof(action) === typeof(()=>{}))\n                action();\n            dispatch(HIDE_ERROR_MODAL);\n        }\n    }\n});","export {default as SnCanvasErrorModal} from './modal/index';\nexport {createErrorHandlerBehavior} from './behaviors';\nexport {ERROR_HANDLER as BEHAVIOR_NAME} from './constants';"],"sourceRoot":""}