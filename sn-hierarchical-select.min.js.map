{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_hierarchical_select/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/constants.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/actions.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__lodash_4_17_4[\\\"cloneDeep\\\"]\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/treeMode/views/TreeExpandButton.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/treeMode/utils/treeClassName.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/index.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__$servicenow_behavior_rtl_19_2_0\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/actionHandlers.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/effects.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/utils.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__lodash_4_17_4[\\\"get\\\"]\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/index.scss?f75b","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/index.scss","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/view.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/views/Tree.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__$servicenow_now_collapse\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/views/Item.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/treeMode/views/index.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__$servicenow_now_icon\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/treeMode/views/TreeItem.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/./src/views/Checkbox.js","webpack://__TECTONIC__$devsnc_sn_hierarchical_select/external \"__TECTONIC__$servicenow_now_checkbox\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","ROOT_VALUE","SELECTOR_TYPE","SINGLE","MULTIPLE","SELECTOR_STATE","SELECTED","PARTIAL","UNSELECTED","TOGGLE_ACTION","DEFAULT_OPTION_LIMIT","SECTION_FOLD_TOGGLED","SELECTION_TOGGLED","SINGLE_SELECT_TOGGLED","NOW_CHECKBOX_CHECKED_SET","SELECTIONS_UPDATED","__TECTONIC__$servicenow_ui_core","__TECTONIC__lodash_4_17_4","COLLAPSE_TITLE","EXPAND_TITLE","dispatch","item","selectMetadata","expanded","selected","icon","className","ariaTitle","title","tabIndex","on-click","itemValue","size","level","children","isTopLevel","length","createCustomElement","renderer","type","snabbdom","view","styles","initialState","properties","items","default","cast","schema","category","selectedItems","select","optionLimit","containerId","behaviors","behavior","rtlBehavior","actionHandlers","dispatches","selectedFacetFilters","__TECTONIC__$servicenow_behavior_rtl_19_2_0","COMPONENT_BOOTSTRAPPED","actionTypes","COMPONENT_PROPERTY_CHANGED","componentBootstrappedEffect","componentPropertyChangedEffect","effect","nowCheckboxCheckedEffect","stopPropagation","sectionFoldToggledEffect","selectionToggledEffect","singleSelectToggledEffect","state","updateState","_buildTransformedState","action","payload","clonedSelectMetadata","updatedSelectMetadata","updateSelectStates","selectionUpdatePayload","_getSelectedFacetFilters","updateSingleSelectState","toggleExpand","_foundDescendantWithSelectionState","selectorState","originalItem","some","childId","_unselectSiblings","parentId","parent","forEach","_refreshSelectedLeaves","itemId","noChildren","selectedLeaves","reduce","currentSelectedLeaves","_refreshSelectedLeavesInRoot","_updateDescendantSelectState","toggledItemMetadata","rootMetadata","_refreshAncestors","hasUnselectedChildren","hasSelectedChildren","console","warn","_getItemType","_getRefToChildren","options","_getChildrenValues","refToChildren","map","child","_getIsExpanded","isInitial","index","build","isRoot","label","data","count","_mergeMetadata","builtData","keys","selectedItem","builtItem","_applySelections","leafId","expectedSelectedItems","itemIds","remainingIds","includes","_buildResolvedSelectMetadata","rootItem","_buildDefaultRootItem","mergedMetadata","itemsWithOptionLimit","slice","resolvedSelectMetadata","updatedState","result","toString","push","useSourceMap","list","this","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","root","Fragment","aria-labelledby","Tree","hasChildren","Array","isArray","childrenClassName","childKey","__TECTONIC__$servicenow_now_collapse","TreeItem","TreeExpandButton","__TECTONIC__$servicenow_now_icon","__TECTONIC__sn_translate","ariaExpanded","checked","_getCheckedState","appendedPayload","append-to-payload","__TECTONIC__$servicenow_now_checkbox"],"mappings":"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","file":"sn-hierarchical-select.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","export const ROOT_VALUE = 'ROOT';\n\nexport const SELECTOR_TYPE = {\n    SINGLE: 'single-select',\n    MULTIPLE: 'multi-select',\n};\n\nexport const SELECTOR_STATE = {\n    SELECTED: 'true',\n    PARTIAL: 'mixed',\n    UNSELECTED: 'false',\n};\n\nexport const TOGGLE_ACTION = {\n    SELECTED: 'SELECTED',\n    UNSELECTED: 'UNSELECTED',\n};\n\nexport const DEFAULT_OPTION_LIMIT = 20;\n","// internal actions\nexport const SECTION_FOLD_TOGGLED = 'SECTION_FOLD_TOGGLED';\nexport const SELECTION_TOGGLED = 'SELECTION_TOGGLED';\nexport const SINGLE_SELECT_TOGGLED = 'SINGLE_SELECT_TOGGLED';\n\n// nds actions\nexport const NOW_CHECKBOX_CHECKED_SET = 'NOW_CHECKBOX#CHECKED_SET';\n\n// externally exposed actions\nexport const SELECTIONS_UPDATED = 'SN-HIERARCHICAL-SELECT#SELECTIONS_UPDATED';\n","module.exports = __TECTONIC__$servicenow_ui_core;","module.exports = __TECTONIC__lodash_4_17_4[\"cloneDeep\"];","import '@servicenow/now-icon';\nimport { t } from 'sn-translate';\nimport { SECTION_FOLD_TOGGLED } from '../../actions';\nimport { SELECTOR_STATE } from '../../constants';\n\nconst COLLAPSE_TITLE = t('Collapse');\nconst EXPAND_TITLE = t('Expand Section');\n\nconst TreeExpandButton = ({ dispatch, item, selectMetadata }) => {\n    const { expanded, selected, value } = item;\n    const icon = expanded ? 'chevron-down-outline' : 'chevron-right-outline';\n\n    const className =\n        selected === SELECTOR_STATE.UNSELECTED\n            ? 'tree-expand-button'\n            : 'tree-expand-button-selected';\n    const ariaTitle = expanded ? COLLAPSE_TITLE : EXPAND_TITLE;\n\n    return (\n        <div\n            className={className}\n            title={ariaTitle}\n            tabIndex={-1}\n            on-click={() => {\n                dispatch(SECTION_FOLD_TOGGLED, {\n                    itemValue: value,\n                    selectMetadata,\n                });\n            }}\n        >\n            <div className=\"tree-expand-button-focus\">\n                <now-icon icon={icon} size=\"md\" />\n            </div>\n        </div>\n    );\n};\n\nexport default TreeExpandButton;\n","const MAX_LEVEL = 4; // Max nesting level before no indentation is applied\nconst MAX_CHILDREN_LENGTH = 12; // Max children before allowing scrolling\n\nconst _getTreeClassName = (level, children) => {\n    const base = 'tree-children';\n    const indentLevel = level < MAX_LEVEL;\n    const isTopLevel = level === 0;\n    const levelModifier = isTopLevel ? '-first-level' : '';\n    const indentModifier = indentLevel ? '' : '-no-indent';\n    const scrollModifier =\n        isTopLevel && children && children.length > MAX_CHILDREN_LENGTH\n            ? '-scroll'\n            : '';\n\n    return `${base}${levelModifier}${indentModifier}${scrollModifier}`;\n};\n\nexport default _getTreeClassName;\n","import { createCustomElement } from '@servicenow/ui-core';\nimport snabbdom from '@servicenow/ui-renderer-snabbdom';\nimport rtlBehavior from '@servicenow/behavior-rtl';\nimport { DEFAULT_OPTION_LIMIT } from './constants';\nimport actionHandlers from './actionHandlers';\nimport styles from './index.scss';\nimport view from './view';\n\n/**\n * Seismic component that allows users to select options from a checkbox list of multi-select or single-select options.\n * This component also supports hierarchical relationships between options, where one option can have child options and so on.\n *\n * ```jsx\n * <sn-hierarchical-select\n *  select='multi-select'\n *  items={\n *      data: {\n *          options: [\n *              {\n *                  label: 'Ron Kettering',\n *                  value: 'Ron Kettering',\n *                  options: null,\n *              },\n *              {\n *                  label: 'Boris Catino',\n *                  value: 'Boris Catino',\n *                  options: null,\n *              },\n *          ],\n *      }\n *  category='Author'\n *  optionLimit={2},\n * />\n * ```\n *\n * @seismicElement sn-hierarchical-select\n * @summary Seismic component that allows users to select options from a checkbox list of multi-select or single-select options.\n */\ncreateCustomElement('sn-hierarchical-select', {\n    renderer: { type: snabbdom },\n    view,\n    styles,\n    initialState: {\n        selectMetadata: null,\n    },\n    properties: {\n        /**\n         * This property contains the items that would be displayed as a checkbox list.\n         * @type {object}\n         */\n        items: {\n            default: {},\n            cast: 'object',\n            schema: {\n                type: 'object',\n            },\n        },\n        /**\n         * This property specifies the category for the option items, this is particulary helpful\n         * in cases where a orchestrator component manages multiple instances of sn-hierarchical-select component.\n         * @type {string}\n         */\n        category: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * Specifies the options that should be selected on initial render.\n         * @type {array}\n         */\n        selectedItems: {\n            default: [],\n            schema: {\n                type: 'array',\n            },\n        },\n        /**\n         * This property specifies whether the checkbox options should be single select or multi select.\n         * @type {string}\n         */\n        select: {\n            default: 'multi-select',\n            schema: {\n                type: 'string',\n            },\n        },\n        /**\n         * This property specifies the number of options that are rendered.\n         * @type {string}\n         */\n        optionLimit: {\n            default: DEFAULT_OPTION_LIMIT,\n            schema: {\n                type: 'integer',\n            },\n        },\n        /**\n         * This property specifies the nowId for the container element.\n         */\n        containerId: {\n            default: '',\n            schema: {\n                type: 'string',\n            },\n        },\n    },\n    behaviors: [{ behavior: rtlBehavior }],\n    actionHandlers,\n    dispatches: {\n        /**\n         * Dispatched when a user selects any of the options.\n         * @type {{category: string, select: string, selectedFacetFilters: array}}\n         */\n        'SN-HIERARCHICAL-SELECT#SELECTIONS_UPDATED': {\n            schema: {\n                type: 'object',\n                properties: {\n                    category: { type: 'string' },\n                    select: { type: 'string' },\n                    selectedFacetFilters: { type: 'array' },\n                },\n            },\n        },\n    },\n});\n","module.exports = __TECTONIC__$servicenow_behavior_rtl_19_2_0;","import { actionTypes } from '@servicenow/ui-core';\nimport {\n    SECTION_FOLD_TOGGLED,\n    SELECTION_TOGGLED,\n    SINGLE_SELECT_TOGGLED,\n    NOW_CHECKBOX_CHECKED_SET,\n} from './actions';\nimport {\n    componentBootstrappedEffect,\n    componentPropertyChangedEffect,\n    sectionFoldToggledEffect,\n    selectionToggledEffect,\n    singleSelectToggledEffect,\n    nowCheckboxCheckedEffect,\n} from './effects';\n\nconst { COMPONENT_BOOTSTRAPPED, COMPONENT_PROPERTY_CHANGED } = actionTypes;\n\nexport default {\n    [COMPONENT_BOOTSTRAPPED]: componentBootstrappedEffect,\n    [COMPONENT_PROPERTY_CHANGED]: componentPropertyChangedEffect,\n    [NOW_CHECKBOX_CHECKED_SET]: {\n        effect: nowCheckboxCheckedEffect,\n        stopPropagation: true,\n    },\n    [SECTION_FOLD_TOGGLED]: {\n        effect: sectionFoldToggledEffect,\n        stopPropagation: true,\n    },\n    [SELECTION_TOGGLED]: {\n        effect: selectionToggledEffect,\n        stopPropagation: true,\n    },\n    [SINGLE_SELECT_TOGGLED]: {\n        effect: singleSelectToggledEffect,\n        stopPropagation: true,\n    },\n};\n","import cloneDeep from 'lodash/cloneDeep';\nimport {\n    toggleExpand,\n    _buildTransformedState,\n    updateSelectStates,\n    updateSingleSelectState,\n    _getSelectedFacetFilters,\n} from './utils';\nimport {\n    SINGLE_SELECT_TOGGLED,\n    SELECTIONS_UPDATED,\n    SELECTION_TOGGLED,\n} from './actions';\nimport {\n    ROOT_VALUE,\n    SELECTOR_TYPE,\n    SELECTOR_STATE,\n    TOGGLE_ACTION,\n} from './constants';\n\nexport const componentBootstrappedEffect = ({\n    state,\n    properties,\n    updateState,\n}) => {\n    const transformedState = _buildTransformedState({ state, properties });\n    updateState(transformedState);\n};\n\nexport const componentPropertyChangedEffect = ({\n    action,\n    updateState,\n    state,\n    properties,\n}) => {\n    const {\n        payload: { name },\n    } = action;\n\n    if (name === 'items' || name === 'selectedItems') {\n        const transformedState = _buildTransformedState({ state, properties });\n        updateState(transformedState);\n    }\n};\n\nexport const nowCheckboxCheckedEffect = ({\n    action: {\n        payload: { type, selected, itemValue, selectMetadata },\n    },\n    dispatch,\n}) => {\n    const action =\n        selected === SELECTOR_STATE.SELECTED\n            ? TOGGLE_ACTION.UNSELECTED\n            : TOGGLE_ACTION.SELECTED;\n\n    if (type === SELECTOR_TYPE.SINGLE) {\n        dispatch(SINGLE_SELECT_TOGGLED, {\n            itemValue,\n            selectMetadata,\n        });\n    } else {\n        dispatch(SELECTION_TOGGLED, {\n            itemValue,\n            selectMetadata,\n            action,\n        });\n    }\n};\n\nexport const selectionToggledEffect = ({\n    action: {\n        payload: { itemValue, action, selectMetadata },\n    },\n    properties,\n    updateState,\n    dispatch,\n}) => {\n    const { category, select } = properties;\n    const clonedSelectMetadata = cloneDeep(selectMetadata);\n    const updatedSelectMetadata = updateSelectStates(\n        clonedSelectMetadata,\n        itemValue,\n        action\n    );\n\n    const selectionUpdatePayload = {\n        category,\n        select,\n        selectedFacetFilters: _getSelectedFacetFilters(\n            ROOT_VALUE,\n            updatedSelectMetadata\n        ),\n    };\n\n    updateState({\n        selectMetadata: updatedSelectMetadata,\n    });\n\n    dispatch(SELECTIONS_UPDATED, selectionUpdatePayload);\n};\n\nexport const singleSelectToggledEffect = ({\n    action: {\n        payload: { itemValue, selectMetadata },\n    },\n    properties,\n    updateState,\n    dispatch,\n}) => {\n    const { category, select } = properties;\n    const clonedSelectMetadata = cloneDeep(selectMetadata);\n\n    updateSingleSelectState(clonedSelectMetadata, itemValue);\n\n    const selectionUpdatePayload = {\n        category,\n        select,\n        selectedFacetFilters: _getSelectedFacetFilters(\n            ROOT_VALUE,\n            clonedSelectMetadata\n        ),\n    };\n\n    updateState({\n        selectMetadata: clonedSelectMetadata,\n    });\n\n    dispatch(SELECTIONS_UPDATED, selectionUpdatePayload);\n};\n\nexport const sectionFoldToggledEffect = ({\n    action: {\n        payload: { itemValue, selectMetadata },\n    },\n    updateState,\n}) => {\n    const clonedSelectMetadata = cloneDeep(selectMetadata);\n    toggleExpand(clonedSelectMetadata, itemValue);\n    updateState({\n        selectMetadata: clonedSelectMetadata,\n    });\n};\n","import cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport {\n    ROOT_VALUE,\n    SELECTOR_STATE,\n    SELECTOR_TYPE,\n    TOGGLE_ACTION,\n    DEFAULT_OPTION_LIMIT,\n} from './constants';\n\nexport const _foundDescendantWithSelectionState = (\n    selectMetadata,\n    itemValue,\n    selectorState,\n    originalItem\n) => {\n    if (!selectMetadata || !itemValue || !selectMetadata[itemValue]) {\n        return false;\n    }\n\n    const item = selectMetadata[itemValue];\n\n    if (!item.children || item.children.length === 0) {\n        if (itemValue !== originalItem && item.selected === selectorState) {\n            return true;\n        }\n\n        return false;\n    }\n\n    return item.children.some(childId =>\n        _foundDescendantWithSelectionState(\n            selectMetadata,\n            childId,\n            selectorState,\n            originalItem\n        )\n    );\n};\n\n// Unselects all siblings.\nexport const _unselectSiblings = (selectMetadata, itemValue) => {\n    const parentId =\n        itemValue && selectMetadata[itemValue]\n            ? selectMetadata[itemValue].parent\n            : null;\n    if (\n        parentId &&\n        selectMetadata[parentId] &&\n        selectMetadata[parentId].children\n    ) {\n        const parentItem = selectMetadata[parentId];\n        parentItem.children.forEach(childId => {\n            if (childId !== itemValue && selectMetadata[childId]) {\n                selectMetadata[childId].selected = SELECTOR_STATE.UNSELECTED;\n            }\n        });\n    }\n};\n\n// Updates selected leaves for all items in the tree and returns\n// the final selected leaves for the tree\nexport const _refreshSelectedLeaves = (itemId, selectMetadata) => {\n    const item = selectMetadata[itemId];\n    const noChildren = !item.children || item.children.length === 0;\n\n    if (noChildren && item.selected === SELECTOR_STATE.UNSELECTED) {\n        return [];\n    }\n\n    if (noChildren && item.selected === SELECTOR_STATE.SELECTED) {\n        return [item.value];\n    }\n\n    const selectedLeaves = item.children.reduce(\n        (currentSelectedLeaves, childId) => [\n            ...currentSelectedLeaves,\n            ..._refreshSelectedLeaves(childId, selectMetadata),\n        ],\n        []\n    );\n\n    item.selectedLeaves = selectedLeaves;\n    return selectedLeaves;\n};\n\nconst _refreshSelectedLeavesInRoot = selectMetadata => {\n    if (!selectMetadata || !selectMetadata[ROOT_VALUE]) {\n        return;\n    }\n\n    _refreshSelectedLeaves(ROOT_VALUE, selectMetadata);\n};\n\nexport const updateSingleSelectState = (selectMetadata, itemValue) => {\n    const toggledItemMetadata = selectMetadata[itemValue];\n    const rootMetadata = selectMetadata[ROOT_VALUE];\n    if (toggledItemMetadata) {\n        _unselectSiblings(selectMetadata, itemValue);\n        toggledItemMetadata.selected =\n            toggledItemMetadata.selected === SELECTOR_STATE.UNSELECTED\n                ? SELECTOR_STATE.SELECTED\n                : SELECTOR_STATE.UNSELECTED;\n\n        rootMetadata.selected = toggledItemMetadata.selected;\n\n        rootMetadata.selectedLeaves =\n            toggledItemMetadata.selected === SELECTOR_STATE.UNSELECTED\n                ? []\n                : [itemValue];\n    }\n};\n\nexport const _updateDescendantSelectState = (\n    selectMetadata,\n    itemValue,\n    action\n) => {\n    const item = selectMetadata[itemValue];\n    item.selected =\n        action === TOGGLE_ACTION.SELECTED\n            ? SELECTOR_STATE.SELECTED\n            : SELECTOR_STATE.UNSELECTED;\n    if (item.children) {\n        item.children.forEach(childId => {\n            _updateDescendantSelectState(selectMetadata, childId, action);\n        });\n    }\n};\n\nexport const _refreshAncestors = (selectMetadata, itemValue) => {\n    const hasUnselectedChildren = _foundDescendantWithSelectionState(\n        selectMetadata,\n        itemValue,\n        SELECTOR_STATE.UNSELECTED,\n        itemValue\n    );\n\n    const hasSelectedChildren = _foundDescendantWithSelectionState(\n        selectMetadata,\n        itemValue,\n        SELECTOR_STATE.SELECTED,\n        itemValue\n    );\n\n    const item = selectMetadata[itemValue];\n\n    if (hasSelectedChildren && hasUnselectedChildren) {\n        item.selected = SELECTOR_STATE.PARTIAL;\n    } else if (hasSelectedChildren) {\n        item.selected = SELECTOR_STATE.SELECTED;\n    } else if (hasUnselectedChildren) {\n        item.selected = SELECTOR_STATE.UNSELECTED;\n    }\n\n    const parentId = item.parent;\n\n    if (itemValue !== ROOT_VALUE) {\n        _refreshAncestors(selectMetadata, parentId);\n    }\n};\n\nexport const updateSelectStates = (selectMetadata, itemValue, action) => {\n    if (\n        !selectMetadata ||\n        !itemValue ||\n        !selectMetadata[itemValue] ||\n        !action\n    ) {\n        // eslint-disable-next-line no-console\n        console.warn(\n            'One or more params to updateSelectStates is missing or invalid - selectMetadata: ',\n            selectMetadata,\n            ' itemValue: ',\n            itemValue,\n            ' action: ',\n            action\n        );\n        return selectMetadata;\n    }\n    if (itemValue === ROOT_VALUE) {\n        _updateDescendantSelectState(selectMetadata, itemValue, action);\n    } else {\n        selectMetadata[itemValue].selected =\n            action === TOGGLE_ACTION.SELECTED\n                ? SELECTOR_STATE.SELECTED\n                : SELECTOR_STATE.UNSELECTED;\n        _updateDescendantSelectState(selectMetadata, itemValue, action);\n        _refreshAncestors(selectMetadata, itemValue);\n    }\n    _refreshSelectedLeavesInRoot(selectMetadata);\n    return selectMetadata;\n};\n\nexport const toggleExpand = (selectMetadata, itemValue) => {\n    selectMetadata[itemValue].expanded = !selectMetadata[itemValue].expanded;\n};\n\nexport const _getItemType = (selectMetadata, item) => {\n    if (item && item.type) {\n        return item.type;\n    }\n    if (\n        item.parent &&\n        selectMetadata[item.parent] &&\n        selectMetadata[item.parent].type\n    ) {\n        return selectMetadata[item.parent].type;\n    }\n    return SELECTOR_TYPE.MULTIPLE;\n};\n\nexport const _getRefToChildren = item => {\n    if (!item) {\n        return null;\n    }\n\n    if (item.value === ROOT_VALUE) {\n        return get(item, 'children.data.options', []);\n    }\n\n    return item.options ? item.options : null;\n};\n\nexport const _getChildrenValues = item => {\n    const refToChildren = _getRefToChildren(item);\n    if (!refToChildren) {\n        return null;\n    }\n\n    return refToChildren.map(child => child.value);\n};\n\nexport const _getIsExpanded = ({ item, selectMetadata, isInitial }) => {\n    if (item.value === ROOT_VALUE) {\n        return true;\n    }\n\n    const isTopLevel = item.level === 1;\n\n    if (isTopLevel && isInitial) {\n        return item.index === 0;\n    }\n\n    if (!isInitial) {\n        return !!item.expanded;\n    }\n\n    if (item.parent) {\n        return _getIsExpanded({\n            item: selectMetadata[item.parent],\n            selectMetadata,\n            isInitial,\n        });\n    }\n\n    return false;\n};\n\nexport const build = ({ item, selectMetadata, isInitial }) => {\n    if (!item || !selectMetadata) {\n        // eslint-disable-next-line no-console\n        console.warn(\n            'item: ',\n            item,\n            ' and selectMetadata: ',\n            selectMetadata,\n            ' objects expected in build(). One or more of these params are missing or invalid.'\n        );\n        return {};\n    }\n    const isRoot = item.value === ROOT_VALUE;\n    const type = _getItemType(selectMetadata, item);\n    const children = _getChildrenValues(item);\n    const expanded = _getIsExpanded({ item, selectMetadata, isInitial });\n\n    const itemValue = item.value ? item.value : item.name;\n\n    selectMetadata[itemValue] = {\n        ...item,\n        label: item.label ? item.label : item.name,\n        value: itemValue,\n        type,\n        level: item.level,\n        selected: item.selected || SELECTOR_STATE.UNSELECTED,\n        expanded,\n        parent: item.parent,\n        selectedLeaves: [],\n        data: null,\n        options: null,\n        children,\n    };\n\n    if (isRoot) {\n        selectMetadata[itemValue].count = item.data ? item.data.count : 0;\n    }\n\n    const refToChildren = _getRefToChildren(item);\n    if (refToChildren) {\n        refToChildren.forEach((child, index) =>\n            build({\n                item: {\n                    ...child,\n                    parent: itemValue,\n                    level: item.level + 1,\n                    index,\n                },\n                selectMetadata,\n                isInitial,\n            })\n        );\n    }\n    return selectMetadata;\n};\n\nexport const _mergeMetadata = (selectMetadata, builtData) => {\n    Object.keys(builtData).forEach(itemValue => {\n        const selectedItem = selectMetadata[itemValue];\n        if (!selectedItem) {\n            return;\n        }\n\n        const builtItem = builtData[itemValue];\n        builtItem.selected = selectedItem.selected;\n        builtItem.expanded = selectedItem.expanded;\n    });\n\n    _refreshSelectedLeavesInRoot(builtData);\n    return builtData;\n};\n\nexport const _getSelectedFacetFilters = (itemId, selectMetadata) => {\n    const leaves = selectMetadata[itemId].selectedLeaves || [];\n    return leaves.map(leafId => {\n        const { value, label } = selectMetadata[leafId];\n\n        return {\n            value,\n            label,\n        };\n    });\n};\n\nexport const _applySelections = (expectedSelectedItems, selectMetadata) => {\n    const updatedSelectMetadata = cloneDeep(selectMetadata);\n\n    // unselect everything before applying selection\n    updateSelectStates(\n        updatedSelectMetadata,\n        ROOT_VALUE,\n        TOGGLE_ACTION.UNSELECTED\n    );\n\n    if (expectedSelectedItems.length === 0) {\n        return updatedSelectMetadata;\n    }\n\n    let itemIds = [ROOT_VALUE];\n\n    // Apply selections from top to bottom level\n    while (itemIds.length > 0) {\n        const [itemId, ...remainingIds] = itemIds;\n        const item = updatedSelectMetadata[itemId];\n        const { children } = item;\n\n        if (expectedSelectedItems.includes(itemId)) {\n            const isSingleSelectRootSelected =\n                itemId === ROOT_VALUE && item.type === SELECTOR_TYPE.SINGLE;\n            if (!isSingleSelectRootSelected) {\n                updateSelectStates(\n                    updatedSelectMetadata,\n                    itemId,\n                    TOGGLE_ACTION.SELECTED\n                );\n            }\n        }\n\n        if (children && children.length > 0) {\n            itemIds = [...remainingIds, ...children];\n        } else {\n            itemIds = [...remainingIds];\n        }\n    }\n\n    return updatedSelectMetadata;\n};\n\nconst _buildDefaultRootItem = (items, type) => ({\n    value: ROOT_VALUE,\n    children: items,\n    selected: SELECTOR_STATE.UNSELECTED,\n    selectedLeaves: [],\n    parent: null,\n    level: 0,\n    type,\n});\n\nexport const _buildResolvedSelectMetadata = ({\n    selectMetadata,\n    selectedItems,\n    items,\n    type,\n}) => {\n    const rootItem = _buildDefaultRootItem(items, type);\n    const isInitial = !selectMetadata || !selectMetadata[ROOT_VALUE];\n\n    // build metadata\n    const builtData = build({\n        selectMetadata: {},\n        item: rootItem,\n        isInitial,\n        type,\n    });\n\n    const mergedMetadata = !isInitial\n        ? _mergeMetadata(selectMetadata, builtData)\n        : builtData;\n    const resolvedData = selectedItems\n        ? _applySelections(selectedItems, mergedMetadata)\n        : mergedMetadata;\n\n    return resolvedData;\n};\n\n// Invoke to build select metadata\nexport const _buildTransformedState = ({ state, properties }) => {\n    const { selectMetadata } = state;\n    const { items, selectedItems, select, optionLimit } = properties;\n    const { data } = items;\n\n    const itemsWithOptionLimit = {\n        ...items,\n        data: {\n            ...data,\n            options: data.options.slice(\n                0,\n                optionLimit > 0 ? optionLimit : DEFAULT_OPTION_LIMIT\n            ),\n        },\n    };\n\n    const resolvedSelectMetadata = _buildResolvedSelectMetadata({\n        selectMetadata,\n        selectedItems,\n        items: itemsWithOptionLimit,\n        type: select,\n    });\n\n    const updatedState = {\n        ...state,\n        selectMetadata: resolvedSelectMetadata,\n    };\n\n    return updatedState;\n};\n","module.exports = __TECTONIC__lodash_4_17_4[\"get\"];","\n        var result = require(\"!!../node_modules/css-loader/index.js!../node_modules/postcss-loader/src/index.js??ref--6-2!../node_modules/sass-loader/dist/cjs.js??ref--6-3!./index.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}.tree{display:flex;flex-flow:column nowrap;width:100%;overflow-wrap:break-word;word-wrap:break-word;word-break:break-word}ul.tree-children{margin:0;list-style-type:none;margin-block-start:0;padding-inline-start:0}:host(:not([dir=rtl])) ul.tree-children,:root:not([dir=rtl]) ul.tree-children{margin-left:1rem}:host([dir=rtl]) ul.tree-children,:root[dir=rtl] ul.tree-children{margin-right:1rem}ul.tree-children-scroll{margin:0;list-style-type:none;margin-block-start:0;padding-inline-start:0;overflow-y:auto;max-height:23.75rem}:host(:not([dir=rtl])) ul.tree-children-scroll,:root:not([dir=rtl]) ul.tree-children-scroll{margin-left:1rem}:host([dir=rtl]) ul.tree-children-scroll,:root[dir=rtl] ul.tree-children-scroll{margin-right:1rem}ul.tree-children-first-level{margin:0;list-style-type:none;margin-block-start:0;padding-inline-start:0;padding-bottom:.25rem}:host(:not([dir=rtl])) ul.tree-children-first-level,:root:not([dir=rtl]) ul.tree-children-first-level{margin-left:1rem}:host([dir=rtl]) ul.tree-children-first-level,:root[dir=rtl] ul.tree-children-first-level{margin-right:1rem}:host(:not([dir=rtl])) ul.tree-children-first-level,:root:not([dir=rtl]) ul.tree-children-first-level{padding-left:.25rem}:host([dir=rtl]) ul.tree-children-first-level,:root[dir=rtl] ul.tree-children-first-level{padding-right:.25rem}ul.tree-children-first-level-scroll{margin:0;list-style-type:none;margin-block-start:0;padding-inline-start:0;padding-bottom:.25rem;overflow-y:auto;max-height:23.75rem}:host(:not([dir=rtl])) ul.tree-children-first-level-scroll,:root:not([dir=rtl]) ul.tree-children-first-level-scroll{margin-left:1rem}:host([dir=rtl]) ul.tree-children-first-level-scroll,:root[dir=rtl] ul.tree-children-first-level-scroll{margin-right:1rem}:host(:not([dir=rtl])) ul.tree-children-first-level-scroll,:root:not([dir=rtl]) ul.tree-children-first-level-scroll{padding-left:.25rem}:host([dir=rtl]) ul.tree-children-first-level-scroll,:root[dir=rtl] ul.tree-children-first-level-scroll{padding-right:.25rem}ul.tree-children-no-indent{list-style-type:none;margin-block-start:0;padding-inline-start:0;margin:0}:host(:not([dir=rtl])) ul.tree-children-no-indent,:root:not([dir=rtl]) ul.tree-children-no-indent{margin-left:1rem}:host([dir=rtl]) ul.tree-children-no-indent,:root[dir=rtl] ul.tree-children-no-indent{margin-right:1rem}ul.tree-children-no-indent-scroll{list-style-type:none;margin-block-start:0;padding-inline-start:0;margin:0;overflow-y:auto;max-height:23.75rem}:host(:not([dir=rtl])) ul.tree-children-no-indent-scroll,:root:not([dir=rtl]) ul.tree-children-no-indent-scroll{margin-left:1rem}:host([dir=rtl]) ul.tree-children-no-indent-scroll,:root[dir=rtl] ul.tree-children-no-indent-scroll{margin-right:1rem}.option-checkbox{width:100%}.tree-expand-button{cursor:pointer;display:flex;align-items:center;justify-content:center;height:inherit;color:RGB(var(--now-color--neutral-15,44,53,55))}.tree-expand-button:focus{outline:none;box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.tree-expand-button::-moz-focus-inner{border-style:none}.tree-expand-button-selected{cursor:pointer;display:flex;align-items:center;justify-content:center;height:inherit;color:RGB(var(--now-color--neutral-15,44,53,55));color:RGB(var(--now-color--primary-1,30,133,109))}.tree-expand-button-selected:focus{outline:none;box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.tree-expand-button-selected::-moz-focus-inner{border-style:none}.tree-expand-button-focus{height:1rem}.tree-expand-button-focus:focus{outline:none;box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.tree-expand-button-focus::-moz-focus-inner{border-style:none}.tree-item{display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;font-weight:400;font-size:.75rem;padding-bottom:.5rem}.tree-item:focus{outline:none;box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.tree-item::-moz-focus-inner{border-style:none}.tree-item:hover{font-weight:600}.tree-item-selected{display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;font-weight:400;font-size:.75rem;padding-bottom:.5rem;color:RGB(var(--now-color--secondary-1,1,119,142))}.tree-item-selected:focus{outline:none;box-shadow:inset 0 0 0 2px RGB(var(--now-color--focus-ring,var(--now-color--secondary-1,1,119,142))),inset 0 0 0 3px RGB(var(--now-color--focus-ring-shadow,var(--now-color--neutral-0,255,255,255))),0 1px .125rem 0 RGBA(var(--now-color--neutral-21,0,0,0),.25)}.tree-item-selected::-moz-focus-inner{border-style:none}.tree-item-selected:hover{font-weight:600}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport { ROOT_VALUE } from './constants';\nimport Tree from './views/Tree';\nimport _getTreeClassName from './treeMode/utils/treeClassName';\n\nconst view = ({ selectMetadata, properties }, { dispatch }) => {\n    const { category, containerId } = properties;\n    const root = selectMetadata && selectMetadata[ROOT_VALUE];\n    if (!root || !root.children) return <Fragment />;\n\n    const { level, children } = root;\n    const className = _getTreeClassName(level, children);\n\n    return (\n        <div className=\"tree\">\n            <ul\n                className={className}\n                aria-labelledby={`${containerId}_${category}_facet_category`}\n            >\n                {root.children.map(childId => {\n                    const child = selectMetadata[childId];\n\n                    return (\n                        <Tree\n                            key={child.value}\n                            selectMetadata={selectMetadata}\n                            dispatch={dispatch}\n                            item={child}\n                        />\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default view;\n","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport '@servicenow/now-collapse';\nimport Item from './Item';\nimport _getTreeClassName from '../treeMode/utils/treeClassName';\n\nconst Tree = ({ selectMetadata, dispatch, item }) => {\n    const { level, children, expanded, label, value } = item;\n    const hasChildren = Array.isArray(children) && children.length > 0;\n    const childrenClassName = _getTreeClassName(level, children);\n\n    return (\n        <Fragment>\n            <Item\n                item={item}\n                dispatch={dispatch}\n                selectMetadata={selectMetadata}\n            />\n            {hasChildren ? (\n                <now-collapse expanded={expanded}>\n                    <ul className={childrenClassName} aria-labelledby={label}>\n                        {children.map(childKey => {\n                            const child = selectMetadata[childKey];\n                            if (child) {\n                                return (\n                                    <Tree\n                                        key={value}\n                                        item={child}\n                                        selectMetadata={selectMetadata}\n                                        dispatch={dispatch}\n                                    />\n                                );\n                            }\n                            return <Fragment />;\n                        })}\n                    </ul>\n                </now-collapse>\n            ) : (\n                <Fragment />\n            )}\n        </Fragment>\n    );\n};\n\nexport default Tree;\n","module.exports = __TECTONIC__$servicenow_now_collapse;","import { TreeItem } from '../treeMode/views';\n\nconst Item = ({ dispatch, item, selectMetadata }) => (\n    <TreeItem dispatch={dispatch} item={item} selectMetadata={selectMetadata} />\n);\n\nexport default Item;\n","import TreeExpandButton from './TreeExpandButton';\nimport TreeItem from './TreeItem';\n\nexport { TreeExpandButton, TreeItem };\n","module.exports = __TECTONIC__$servicenow_now_icon;","module.exports = __TECTONIC__sn_translate;","import { Fragment } from '@servicenow/ui-renderer-snabbdom';\nimport Checkbox from '../../views/Checkbox';\nimport TreeExpandButton from './TreeExpandButton';\nimport { SELECTOR_STATE } from '../../constants';\n\nconst TreeItem = ({ dispatch, item, selectMetadata }) => {\n    const { expanded, children, selected } = item;\n    const className =\n        selected === SELECTOR_STATE.SELECTED ||\n        selected === SELECTOR_STATE.PARTIAL\n            ? 'item-selected'\n            : 'item';\n\n    const ariaExpanded =\n        children && children.length\n            ? { 'aria-expanded': expanded ? 'true' : 'false' }\n            : {};\n    return (\n        // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n        <li className={`tree-${className}`} {...ariaExpanded}>\n            <Checkbox item={item} selectMetadata={selectMetadata} />\n            {children && children.length ? (\n                <TreeExpandButton\n                    dispatch={dispatch}\n                    item={item}\n                    selectMetadata={selectMetadata}\n                />\n            ) : (\n                <Fragment />\n            )}\n        </li>\n    );\n};\n\nexport default TreeItem;\n","/* eslint-disable jsx-a11y/label-has-for */\nimport '@servicenow/now-checkbox';\nimport { SELECTOR_STATE } from '../constants';\n\nconst _getCheckedState = selected => {\n    if (selected === SELECTOR_STATE.SELECTED) {\n        return true;\n    }\n    if (selected === SELECTOR_STATE.PARTIAL) {\n        return 'indeterminate';\n    }\n    return false;\n};\n\nconst Checkbox = ({ item, selectMetadata }) => {\n    const { value, label, selected, type } = item;\n\n    const checked = _getCheckedState(selected);\n    const appendedPayload = {\n        type,\n        selected,\n        itemValue: value,\n        selectMetadata,\n    };\n\n    return (\n        <now-checkbox\n            className=\"option-checkbox\"\n            name={value}\n            label={label}\n            checked={checked}\n            append-to-payload={appendedPayload}\n        />\n    );\n};\n\nexport default Checkbox;\n","module.exports = __TECTONIC__$servicenow_now_checkbox;"],"sourceRoot":""}