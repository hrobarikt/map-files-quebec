{"version":3,"sources":["webpack://__TECTONIC__$devsnc_sn_comparator/webpack/bootstrap","webpack://__TECTONIC__$devsnc_sn_comparator/external \"__TECTONIC__$servicenow_ui_renderer_snabbdom\"","webpack://__TECTONIC__$devsnc_sn_comparator/external \"__TECTONIC__$servicenow_ui_core\"","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/constants.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/index.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/index.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/snComparator.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/comparator.scss?6a77","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/comparator.scss","webpack://__TECTONIC__$devsnc_sn_comparator/./node_modules/css-loader/lib/css-base.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/view.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/Comparator.js","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/contentDiff.js","webpack://__TECTONIC__$devsnc_sn_comparator/external \"__TECTONIC__sn_translate\"","webpack://__TECTONIC__$devsnc_sn_comparator/./src/sn-comparator/action.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__TECTONIC__$servicenow_ui_renderer_snabbdom","__TECTONIC__$servicenow_ui_core","FIELD_UPDATED","createCustomElement","view","styles","actionHandlers","properties","default","reflect","comparisonData","result","toString","push","useSourceMap","list","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","state","dispatch","rowList","Fragment","window","diff_match_patch","heading","originalContent","changedContent","contentType","className","props","keepSpacing","comparedData","getDiffContent","Content","label","editable","diff","on-input","e","target","innerHTML","contentEditable","aria-label","type","addDiffIndicationTags","diffString","operation","closeTag","text","openTag","tagOpen","outputText","charCodeAt","convertHtmlToEncodedString","htmlText","tagMap","replace","diffableString","offset","tagStart","indexOf","substr","tagEnd","tagString","unicodeCharacter","String","fromCharCode","size","set","convertEncodedStringToHtml","htmlString","x","findDifferences","baseContent","compareContent","isHtml","unicodeChar","baseString","compareString","dmp","diffs","diff_main","diff_cleanupSemantic","Map","reduce","output","taggedString","__TECTONIC__sn_translate","COMPONENT_BOOTSTRAPPED","actionTypes","scriptLoad","path","head","document","script","createElement","async","onload","updateState","src","appendChild","stopPropagation","effect","action","payload","updateProperties","forEach"],"mappings":"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","file":"sn-comparator.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __TECTONIC__$servicenow_ui_renderer_snabbdom;","module.exports = __TECTONIC__$servicenow_ui_core;","export const FIELD_UPDATED = 'SN_COMPARATOR#FIELD_UPDATED';","import './sn-comparator';\n","import './snComparator';","import {createCustomElement} from '@servicenow/ui-core';\nimport styles from './comparator.scss';\nimport view from './view';\nimport {actionHandlers} from './action';\n\n/**\n * A comparator is used to compare content side-by-side by highlighting the differences between the original and changed content.\n * It can also be used to edit the changed content on the fly.\n *\n * ```jsx\n * <sn-comparator\n\t\tmode='diff'\n        comparisonData={demoData}\n\t></sn-comparator>\n * ```\n *\n * @seismicElement sn-comparator\n * @summary A visual component that compares content side-by-side by highlighting differences.\n * @uib.label Comparator\n * @uib.icon tile-uib-comparator-1-sm\n * @uib.description Generic component to compare original and changed content and highlight the differences\n * @uib.category component\n * @uib.associatedTypes global.visualization\n * @uib.properties mode, comparisonData\n */\ncreateCustomElement('sn-comparator', {\n\tview,\n\tstyles,\n\tactionHandlers,\n\tproperties: {\n\t\t/**\n\t\t * Sets the mode of the comparator.\n\t\t * @type {('diff'|'normal'|'editable')}\n\t\t * @uib.label Mode\n\t\t * @uib.description The mode used to compare content\n\t\t * @uib.typeMetadata.choices [{\"label\": \"Diff\", \"value\": \"diff\"}, {\"label\": \"Normal\", \"value\": \"normal\"}, {\"label\": \"Editable\", \"value\": \"editable\"}]\n\t\t*/\n\t\tmode: {\n\t\t\tdefault: 'diff',\n\t\t\treflect: true\n\t\t},\n\t\t/**\n\t\t * An array of objects that defines the data to be compared.\n\t\t * @type {{name: string, contentType: string, heading: string, originalContent: string, changedContent: string}[]}\n\t\t * @uib.label Comparison data\n\t\t * @uib.description Data of two objects to be compared\n\t\t*/\n\t\tcomparisonData: {\n\t\t\tdefault:[],\n\t\t}\n\t}\n});\n","\n        var result = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--6-2!../../node_modules/sass-loader/dist/cjs.js??ref--6-3!./comparator.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{box-sizing:border-box;line-height:var(--now-line-height,1.25);font-family:var(--now-font-family,\\\"Source Sans Pro\\\",\\\"Helvetica Neue\\\",helvetica,arial,sans-serif)}:host([hidden]){display:none}*,:after,:before{box-sizing:border-box}ul.comparator-list{margin:0;padding-left:0}ul.comparator-list li.comparator-row{display:flex;margin-top:1rem}ul.comparator-list li.comparator-row .old-content{width:calc(50% - 2.5rem);color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}ul.comparator-list li.comparator-row .old-content ins{color:RGB(var(--now-color--alert-warning-0,242,237,179));background-color:RGB(var(--now-color--alert-warning-0,242,237,179));-webkit-user-select:none;-moz-user-select:none;user-select:none}ul.comparator-list li.comparator-row .new-content{width:calc(50% - 2.5rem)}ul.comparator-list li.comparator-row .new-content del{color:RGB(var(--now-color--alert-critical-0,241,206,205));background-color:RGB(var(--now-color--alert-critical-0,241,206,205));-webkit-user-select:none;-moz-user-select:none;user-select:none}ul.comparator-list li.comparator-row .new-content .editable{outline:none;border:.03125rem solid RGB(var(--now-color--neutral-3,209,214,214));padding:.75rem;border-radius:.25rem;color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}ul.comparator-list li.comparator-row .new-content .input-field{height:2rem;border:0;padding-left:.5rem;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif;font-size:1rem;width:100%;border-bottom:.0625rem solid RGB(var(--now-color--divider-secondary,var(--now-color--neutral-5,172,180,181)));color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}ul.comparator-list li.comparator-row .new-content .input-field:hover{background-color:RGB(var(--now-color--neutral-2,228,230,231));border-bottom:.125rem solid RGB(var(--now-color--divider-secondary,var(--now-color--neutral-5,172,180,181)));margin-top:.0625rem}ul.comparator-list li.comparator-row .new-content .input-field:focus{outline:none;border-bottom:.125rem solid RGB(var(--now-color--primary-1,30,133,109));background-color:RGB(var(--now-color--primary-0,221,237,233));margin-top:.0625rem}ul.comparator-list li.comparator-row p{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)));margin-block-start:0;margin-block-end:0}ul.comparator-list li.comparator-row .editable p{color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)))}ul.comparator-list li.comparator-row .content-block{margin:0 1.5rem;font-family:Source Sans Pro,Helvetica Neue,helvetica,arial,sans-serif;font-size:1rem;overflow-x:auto}ul.comparator-list li.comparator-row .content-block img,ul.comparator-list li.comparator-row .content-block picture,ul.comparator-list li.comparator-row .content-block video{max-width:100%}ul.comparator-list li.comparator-row .content-block .field-name{margin-bottom:.25rem;font-size:.75rem;line-height:1.33333}ul.comparator-list li.comparator-row .content-block .field-name,ul.comparator-list li.comparator-row .content-block .noteditable,ul.comparator-list li.comparator-row del{color:RGB(var(--now-color--text-secondary,var(--now-color--neutral-12,66,80,81)))}ul.comparator-list li.comparator-row del{background-color:RGB(var(--now-color--alert-critical-0,241,206,205))}ul.comparator-list li.comparator-row ins{background-color:RGB(var(--now-color--alert-warning-0,242,237,179));color:RGB(var(--now-color--text-primary,var(--now-color--neutral-18,22,27,28)));text-decoration:none}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","import Comparator from './Comparator';\nimport {Fragment} from '@servicenow/ui-renderer-snabbdom';\n\n/** \n * @seismicView sn-comparator\n*/\nexport default (state, {dispatch}) => {\n    const {comparisonData, mode} = state.properties;\n    let rowList = <Fragment/>;\n\n    if((mode ==='diff' && window.diff_match_patch) || mode !== 'diff'){\n        rowList = comparisonData.map(({\n                heading,\n                originalContent,\n                changedContent,\n                name,\n                contentType\n            }) => \n            <Comparator \n                contentType={contentType}\n                heading={heading} \n                originalContent={originalContent} \n                changedContent={changedContent}\n                name={name}\n                mode={mode}\n                dispatch={dispatch}\n            />\n        ) \n    }\n\n\treturn (\n        <Fragment>\n            <ul className=\"comparator-list\">\n                {rowList}\n            </ul>\n        </Fragment>\n\t);\n}\n","import {getDiffContent} from './contentDiff';\nimport {FIELD_UPDATED} from './constants';\nimport {t} from 'sn-translate';\n\nexport default props => {\n    const {\n        name,\n        heading,\n        contentType,\n        mode,\n        dispatch,\n        keepSpacing\n    } = props;\n\n    let {\n        originalContent,\n        changedContent,\n    } = props;\n\n    if(mode === 'diff'){\n        const comparedData = getDiffContent(originalContent,changedContent,contentType==='html',keepSpacing);\n        originalContent = comparedData.originalContent;\n        changedContent = comparedData.changedContent;\n    }\n\n    return (\n\t\t<li className=\"comparator-row\">\n            <section className=\"old-content content-block\">\n                <div className=\"field-name\">\n                    <span>{heading}</span>\n                </div>\n                <Content contentType={mode==='diff'?\"html\":contentType} content={originalContent} mode=\"normal\" name={name} dispatch={dispatch} label={heading + ' ' +t('Earlier Content')}/>\n            </section>\n            <section className=\"new-content content-block\">\n                <div className=\"field-name\">\n                    <span id={name}>{heading}</span>\n                </div>\n                <Content contentType={contentType} content={changedContent} mode={mode} name={name} dispatch={dispatch} label={heading + ' ' + t('Current Content')}/>\n            </section>\n        </li>\n\t);\n}\n\nconst Content = ({contentType, content, mode, dispatch, name, label}) => {\n    const editable = mode === 'editable';\n    const diff = mode === 'diff';\n\n    if(contentType==='html') {\n\t\treturn (\n            <section \n                className={editable? 'editable' : 'noteditable'} \n                on-input={e => dispatch(FIELD_UPDATED, {name, content:e.target.innerHTML})} \n                contentEditable={editable} \n                innerHTML={content}\n                aria-label={label}\n            />\n        );\n\t} else if(editable && contentType === 'string'){\n\t\treturn (\n            <input\n                className=\"input-field\" \n                aria-label={label}\n                value={content} \n                type=\"text\"\n                on-input={e => dispatch(FIELD_UPDATED, {name, content:e.target.value})}\n            />\n        );\n\t} else if (diff){\n\t\treturn <p innerHTML={content} aria-label={label}/>;\n    } else {\n        return <p aria-label={label}>{content}</p>\n    }\n}\n","const addDiffIndicationTags = (diffString, operation) => {\n    if(operation === 0)\n        return diffString;\n\n    const closeTag = text => operation === -1? `${text}</del>` : `${text}</ins>`;\n    const openTag = text => operation === 1? `${text}<ins>` : `${text}<del>`;\n\n    let tagOpen = true;\n    let outputText = openTag('');\n    for(let i=0; i< diffString.length; i++){\n        if(diffString.charCodeAt(i) < 0xE000) {\n            if(!tagOpen) {\n                outputText = openTag(outputText);\n                tagOpen = true;\n            }\n        } else {\n            if(tagOpen) {\n                outputText = closeTag(outputText);\n                tagOpen = false;\n            }\n        }\n        outputText += diffString[i];\n    }\n    if(tagOpen) {\n        outputText = closeTag(outputText);\n    }\n    return outputText;\n};\n\nconst convertHtmlToEncodedString = (htmlText, tagMap) => {\n    htmlText = htmlText.replace(/&nbsp;/g, tagMap.get('&nbsp;'));\n    let diffableString = '';\n    let offset = 0;\n    while (offset < htmlText.length) {\n        let tagStart = htmlText.indexOf('<', offset);\n        if (tagStart < 0) {\n            diffableString += htmlText.substr(offset);\n            break;\n        }\n        else {\n            var tagEnd = htmlText.indexOf('>', tagStart);\n            if (tagEnd < 0) {\n                // Invalid HTML\n                // Truncate at the start of the tag\n                diffableString += htmlText.substr(offset, tagStart - offset);\n                break;\n            }\n            let tagString = htmlText.substr(tagStart, tagEnd + 1 - tagStart);\n            // Is this tag already mapped?\n            let unicodeCharacter = tagMap.get(tagString);\n            if (!unicodeCharacter) {\n                // Nope, need to map it\n                unicodeCharacter = String.fromCharCode(0xE000 + tagMap.size/2);\n                tagMap.set(tagString, unicodeCharacter);\n                tagMap.set(unicodeCharacter, tagString);\n            }\n            // At this point it has been mapped, so now we can use it\n            diffableString += htmlText.substr(offset, tagStart - offset);\n            diffableString += unicodeCharacter;\n            offset = tagEnd + 1;\n        }\n    }\n    return diffableString;\n};\n\nconst convertEncodedStringToHtml = (text, tagMap) => {\n    let htmlString = '';\n    for (let x = 0; x < text.length; x++) {\n        let charCode = text.charCodeAt(x);\n        if (charCode < 0xE000) {\n            htmlString += text[x];\n            continue;\n        }\n        let tagString = tagMap.get(text[x]);\n        if (!tagString) {\n            // We somehow have a character that is above our range but didn't map\n            htmlString += text[x];\n        }\n        else {\n            htmlString += tagString;\n        }\n    }\n    return htmlString;\n};\n\nconst findDifferences = (baseContent, compareContent, isHtml, tagMap) => {\n    const unicodeChar = String.fromCharCode(0xE000);\n    tagMap.set('&nbsp;', unicodeChar);\n    tagMap.set(unicodeChar, '&nbsp;');\n\n    const baseString = isHtml? convertHtmlToEncodedString(baseContent, tagMap) : baseContent;\n    const compareString = isHtml? convertHtmlToEncodedString(compareContent, tagMap) : compareContent;\n\n    const dmp = new diff_match_patch();\n    let diffs = dmp.diff_main(baseString, compareString);\n    dmp.diff_cleanupSemantic(diffs);\n\n    return diffs;\n};\n\nexport const getDiffContent = (baseContent='', compareContent='', isHtml, keepSpacing) => {\n    const tagMap = new Map();\n    let diffs = findDifferences(baseContent || '', compareContent || '', isHtml, tagMap);\n\n    const originalContent = diffs.reduce((output, diff) => {\n        let taggedString;\n        if(diff[0] === -1 || diff[0] === 0 || keepSpacing){\n            taggedString = addDiffIndicationTags(diff[1], diff[0]);\n            return output + convertEncodedStringToHtml(taggedString, tagMap);\n        } else {\n            return output;\n        }\n    }, '');\n\n    const changedContent = diffs.reduce((output, diff) => {\n        let taggedString;\n        if(diff[0] === 1 || diff[0] === 0 || keepSpacing){\n            taggedString = addDiffIndicationTags(diff[1], diff[0]);\n            return output + convertEncodedStringToHtml(taggedString, tagMap);\n        } else {\n            return output;\n        }\n    }, '');\n\n    return {\n        originalContent,\n        changedContent\n    };\n};\n\n","module.exports = __TECTONIC__sn_translate;","import {FIELD_UPDATED} from './constants';\nimport {actionTypes} from '@servicenow/ui-core';\n\nconst {COMPONENT_BOOTSTRAPPED} = actionTypes;\n\nconst scriptLoad = {\n    operation:'set',\n    path:'scriptLoaded',\n    value: true\n};\n\nexport const actionHandlers = {\n    [COMPONENT_BOOTSTRAPPED]: (props) => {\n        if(props.properties.mode === 'diff') {\n            var head = document.head;\n            var script = document.createElement('script');\n            script.async = true;\n            script.onload = () => props.updateState(scriptLoad)\n            script.src = \"scripts/lib/diff_match_patch/javascript/diff_match_patch.js\";\n            head.appendChild(script);\n        }\n    },\n    \n    /**\n     * Dispatched when user changes the content in editable mode.\n     * Payload contains the name of the field that was updated and the modified content.\n     * @type {{name: string, content: String}}\n    */\n    [FIELD_UPDATED]: {\n\t\tstopPropagation: true,\n\t\teffect: ({action: {payload: {name, content}}, properties: {comparisonData}, updateProperties}) => {\n            comparisonData.forEach(item => {\n                if(item.name === name){\n                    item.changedContent = content;\n                }\n            });\n            updateProperties({\n                comparisonData\n            })\n        }\n    }\n};"],"sourceRoot":""}